
/Users/cgg/libmicroemu/tests/system_tests/testbench/build/testbench.elf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__Vectors>:
       0:	20020000 	.word	0x20020000
       4:	000001f5 	.word	0x000001f5
       8:	000001f9 	.word	0x000001f9
       c:	000001fb 	.word	0x000001fb
      10:	000001fd 	.word	0x000001fd
      14:	00002395 	.word	0x00002395
      18:	00002461 	.word	0x00002461
	...
      2c:	00002a3d 	.word	0x00002a3d
      30:	00000205 	.word	0x00000205
      34:	00000000 	.word	0x00000000
      38:	00000207 	.word	0x00000207
      3c:	00002b0d 	.word	0x00002b0d

00000040 <__do_global_dtors_aux>:
      40:	b510      	push	{r4, lr}
      42:	4c05      	ldr	r4, [pc, #20]	; (58 <__do_global_dtors_aux+0x18>)
      44:	7823      	ldrb	r3, [r4, #0]
      46:	b933      	cbnz	r3, 56 <__do_global_dtors_aux+0x16>
      48:	4b04      	ldr	r3, [pc, #16]	; (5c <__do_global_dtors_aux+0x1c>)
      4a:	b113      	cbz	r3, 52 <__do_global_dtors_aux+0x12>
      4c:	4804      	ldr	r0, [pc, #16]	; (60 <__do_global_dtors_aux+0x20>)
      4e:	f3af 8000 	nop.w
      52:	2301      	movs	r3, #1
      54:	7023      	strb	r3, [r4, #0]
      56:	bd10      	pop	{r4, pc}
      58:	20000aec 	.word	0x20000aec
      5c:	00000000 	.word	0x00000000
      60:	0001a5d8 	.word	0x0001a5d8

00000064 <frame_dummy>:
      64:	b508      	push	{r3, lr}
      66:	4b03      	ldr	r3, [pc, #12]	; (74 <frame_dummy+0x10>)
      68:	b11b      	cbz	r3, 72 <frame_dummy+0xe>
      6a:	4903      	ldr	r1, [pc, #12]	; (78 <frame_dummy+0x14>)
      6c:	4803      	ldr	r0, [pc, #12]	; (7c <frame_dummy+0x18>)
      6e:	f3af 8000 	nop.w
      72:	bd08      	pop	{r3, pc}
      74:	00000000 	.word	0x00000000
      78:	20000af0 	.word	0x20000af0
      7c:	0001a5d8 	.word	0x0001a5d8

00000080 <_stack_init>:
      80:	2a00      	cmp	r2, #0
      82:	d001      	beq.n	88 <_stack_init+0x8>
      84:	f502 7a80 	add.w	sl, r2, #256	; 0x100
      88:	4770      	bx	lr
      8a:	bf00      	nop

0000008c <_mainCRTStartup>:
      8c:	2016      	movs	r0, #22
      8e:	a131      	add	r1, pc, #196	; (adr r1, 154 <_mainCRTStartup+0xc8>)
      90:	beab      	bkpt	0x00ab
      92:	4830      	ldr	r0, [pc, #192]	; (154 <_mainCRTStartup+0xc8>)
      94:	6841      	ldr	r1, [r0, #4]
      96:	2900      	cmp	r1, #0
      98:	d001      	beq.n	9e <_mainCRTStartup+0x12>
      9a:	4a36      	ldr	r2, [pc, #216]	; (174 <_mainCRTStartup+0xe8>)
      9c:	6011      	str	r1, [r2, #0]
      9e:	6801      	ldr	r1, [r0, #0]
      a0:	2900      	cmp	r1, #0
      a2:	d101      	bne.n	a8 <_mainCRTStartup+0x1c>
      a4:	4932      	ldr	r1, [pc, #200]	; (170 <_mainCRTStartup+0xe4>)
      a6:	6001      	str	r1, [r0, #0]
      a8:	6881      	ldr	r1, [r0, #8]
      aa:	68c2      	ldr	r2, [r0, #12]
      ac:	4b2a      	ldr	r3, [pc, #168]	; (158 <_mainCRTStartup+0xcc>)
      ae:	2900      	cmp	r1, #0
      b0:	d000      	beq.n	b4 <_mainCRTStartup+0x28>
      b2:	460b      	mov	r3, r1
      b4:	469d      	mov	sp, r3
      b6:	f7ff ffe3 	bl	80 <_stack_init>
      ba:	2100      	movs	r1, #0
      bc:	468b      	mov	fp, r1
      be:	460f      	mov	r7, r1
      c0:	4826      	ldr	r0, [pc, #152]	; (15c <_mainCRTStartup+0xd0>)
      c2:	4a27      	ldr	r2, [pc, #156]	; (160 <_mainCRTStartup+0xd4>)
      c4:	1a12      	subs	r2, r2, r0
      c6:	f00c fcf7 	bl	cab8 <memset>
      ca:	f016 fe0b 	bl	16ce4 <initialise_monitor_handles>
      ce:	2015      	movs	r0, #21
      d0:	4926      	ldr	r1, [pc, #152]	; (16c <_mainCRTStartup+0xe0>)
      d2:	beab      	bkpt	0x00ab
      d4:	4925      	ldr	r1, [pc, #148]	; (16c <_mainCRTStartup+0xe0>)
      d6:	6809      	ldr	r1, [r1, #0]
      d8:	2000      	movs	r0, #0
      da:	b401      	push	{r0}
      dc:	780b      	ldrb	r3, [r1, #0]
      de:	3101      	adds	r1, #1
      e0:	2b00      	cmp	r3, #0
      e2:	d015      	beq.n	110 <_mainCRTStartup+0x84>
      e4:	2b20      	cmp	r3, #32
      e6:	d0f9      	beq.n	dc <_mainCRTStartup+0x50>
      e8:	2b22      	cmp	r3, #34	; 0x22
      ea:	d001      	beq.n	f0 <_mainCRTStartup+0x64>
      ec:	2b27      	cmp	r3, #39	; 0x27
      ee:	d101      	bne.n	f4 <_mainCRTStartup+0x68>
      f0:	001a      	movs	r2, r3
      f2:	e001      	b.n	f8 <_mainCRTStartup+0x6c>
      f4:	2220      	movs	r2, #32
      f6:	3901      	subs	r1, #1
      f8:	b402      	push	{r1}
      fa:	3001      	adds	r0, #1
      fc:	780b      	ldrb	r3, [r1, #0]
      fe:	3101      	adds	r1, #1
     100:	2b00      	cmp	r3, #0
     102:	d005      	beq.n	110 <_mainCRTStartup+0x84>
     104:	429a      	cmp	r2, r3
     106:	d1f9      	bne.n	fc <_mainCRTStartup+0x70>
     108:	2200      	movs	r2, #0
     10a:	1e4b      	subs	r3, r1, #1
     10c:	701a      	strb	r2, [r3, #0]
     10e:	e7e5      	b.n	dc <_mainCRTStartup+0x50>
     110:	4669      	mov	r1, sp
     112:	0002      	movs	r2, r0
     114:	0092      	lsls	r2, r2, #2
     116:	446a      	add	r2, sp
     118:	466b      	mov	r3, sp
     11a:	429a      	cmp	r2, r3
     11c:	d906      	bls.n	12c <_mainCRTStartup+0xa0>
     11e:	3a04      	subs	r2, #4
     120:	6814      	ldr	r4, [r2, #0]
     122:	681d      	ldr	r5, [r3, #0]
     124:	6015      	str	r5, [r2, #0]
     126:	601c      	str	r4, [r3, #0]
     128:	3304      	adds	r3, #4
     12a:	e7f6      	b.n	11a <_mainCRTStartup+0x8e>
     12c:	466c      	mov	r4, sp
     12e:	2507      	movs	r5, #7
     130:	43ac      	bics	r4, r5
     132:	46a5      	mov	sp, r4
     134:	0004      	movs	r4, r0
     136:	000d      	movs	r5, r1
     138:	480a      	ldr	r0, [pc, #40]	; (164 <_mainCRTStartup+0xd8>)
     13a:	2800      	cmp	r0, #0
     13c:	d002      	beq.n	144 <_mainCRTStartup+0xb8>
     13e:	480a      	ldr	r0, [pc, #40]	; (168 <_mainCRTStartup+0xdc>)
     140:	f011 ff06 	bl	11f50 <atexit>
     144:	f00c f832 	bl	c1ac <__libc_init_array>
     148:	0020      	movs	r0, r4
     14a:	0029      	movs	r1, r5
     14c:	f000 f814 	bl	178 <main>
     150:	f00b fd7a 	bl	bc48 <exit>
     154:	20000004 	.word	0x20000004
     158:	20020000 	.word	0x20020000
     15c:	20000aec 	.word	0x20000aec
     160:	2000205c 	.word	0x2000205c
     164:	00011f51 	.word	0x00011f51
     168:	0001341d 	.word	0x0001341d
     16c:	20000114 	.word	0x20000114
     170:	20002060 	.word	0x20002060
     174:	20000ad0 	.word	0x20000ad0

00000178 <main>:
#include <stdlib.h>
#include <time.h>

// Main
// ----------------------------
int main() {
     178:	b580      	push	{r7, lr}
     17a:	af00      	add	r7, sp, #0

#ifdef MEASURE_TIME
  clock_t start_t, end_t;
  start_t = clock();
#endif
  printf("-------------------------------\n");
     17c:	481b      	ldr	r0, [pc, #108]	; (1ec <main+0x74>)
     17e:	f00c fde3 	bl	cd48 <puts>
  printf("Emulator test bench\n");
     182:	481b      	ldr	r0, [pc, #108]	; (1f0 <main+0x78>)
     184:	f00c fde0 	bl	cd48 <puts>
  printf("-------------------------------\n");
     188:	4818      	ldr	r0, [pc, #96]	; (1ec <main+0x74>)
     18a:	f00c fddd 	bl	cd48 <puts>

  TestStdOut();
     18e:	f000 fb2d 	bl	7ec <TestStdOut()>

  // Irq test runs in parallel
  StartIrqTest();
     192:	f002 fd2f 	bl	2bf4 <StartIrqTest()>

  TestStackAlignment();
     196:	f000 fc2f 	bl	9f8 <TestStackAlignment()>
  TestHeap();
     19a:	f002 fe7b 	bl	2e94 <TestHeap()>
  TestIfThenElse();
     19e:	f001 fa5f 	bl	1660 <TestIfThenElse()>
  TestSwitchCase();
     1a2:	f001 fcab 	bl	1afc <TestSwitchCase()>
  TestIntCalc();
     1a6:	f000 fd8f 	bl	cc8 <TestIntCalc()>
  TestUIntCalc();
     1aa:	f000 ffd7 	bl	115c <TestUIntCalc()>
  TestFloat();
     1ae:	f000 f87f 	bl	2b0 <TestFloat()>
  TestTypeCasting();
     1b2:	f001 fa9b 	bl	16ec <TestTypeCasting()>
  TestPolymorphismn();
     1b6:	f001 faef 	bl	1798 <TestPolymorphismn()>
  TestStdAlgos();
     1ba:	f000 fd73 	bl	ca4 <TestStdAlgos()>
  TestSprintf();
     1be:	f000 fa6f 	bl	6a0 <TestSprintf()>
  TestScb();
     1c2:	f002 fc1b 	bl	29fc <TestScb()>
  TestFibonacci();
     1c6:	f001 fce9 	bl	1b9c <TestFibonacci()>
  TestQuicksort();
     1ca:	f001 fd51 	bl	1c70 <TestQuicksort()>
  TestCrc();
     1ce:	f002 fe33 	bl	2e38 <TestCrc()>
  TestExceptions();
     1d2:	f002 fb8b 	bl	28ec <TestExceptions()>
  TestProcessStack();
     1d6:	f002 ff37 	bl	3048 <TestProcessStack()>
  TestIrqs(); // must be at the end
     1da:	f002 fd13 	bl	2c04 <TestIrqs()>
  printf("-------------------------------\n");
     1de:	4803      	ldr	r0, [pc, #12]	; (1ec <main+0x74>)
     1e0:	f00c fdb2 	bl	cd48 <puts>
  auto diff_t = static_cast<unsigned long>(end_t) - static_cast<unsigned long>(start_t);
  printf("# Test: Time measurement start_t:%u / end_t:%u / diff_t: %u / CLOCKS_PER_SEC:%u \n",
         start_t, end_t, diff_t, CLOCKS_PER_SEC);
#endif
  // ----------------------------
  return EXIT_SUCCESS;
     1e4:	2300      	movs	r3, #0
     1e6:	4618      	mov	r0, r3
     1e8:	bd80      	pop	{r7, pc}
     1ea:	bf00      	nop
     1ec:	00017144 	.word	0x00017144
     1f0:	00017164 	.word	0x00017164

000001f4 <Reset_Handler>:
     1f4:	f7ff ff4a 	bl	8c <_mainCRTStartup>

000001f8 <NMI_Handler>:
     1f8:	4770      	bx	lr

000001fa <HardFault_Handler>:
     1fa:	4770      	bx	lr

000001fc <MemManage_Handler>:
     1fc:	4770      	bx	lr
     1fe:	4770      	bx	lr
     200:	4770      	bx	lr
     202:	4770      	bx	lr

00000204 <DebugMon_Handler>:
     204:	4770      	bx	lr

00000206 <PendSV_Handler>:
     206:	4770      	bx	lr
     208:	4770      	bx	lr
     20a:	bf00      	nop

0000020c <GetSysTickBase()>:
  volatile uint32_t CNT; // Current value register {"count"}
  volatile uint32_t CVR; // Calibration value register
};

// SysTick register map base pointer
static inline SysTickRegMap *GetSysTickBase() {
     20c:	b480      	push	{r7}
     20e:	af00      	add	r7, sp, #0
  return reinterpret_cast<SysTickRegMap *>(reinterpret_cast<unsigned *>(0xE000E010U));
     210:	4b02      	ldr	r3, [pc, #8]	; (21c <GetSysTickBase()+0x10>)
};
     212:	4618      	mov	r0, r3
     214:	46bd      	mov	sp, r7
     216:	bc80      	pop	{r7}
     218:	4770      	bx	lr
     21a:	bf00      	nop
     21c:	e000e010 	.word	0xe000e010

00000220 <SysTickInit(unsigned long)>:

#include "systick.h"

volatile uint32_t systick_uptime_millis;

void SysTickInit(uint32_t reload_val) {
     220:	b580      	push	{r7, lr}
     222:	b082      	sub	sp, #8
     224:	af00      	add	r7, sp, #0
     226:	6078      	str	r0, [r7, #4]
  GetSysTickBase()->RVR = reload_val;
     228:	f7ff fff0 	bl	20c <GetSysTickBase()>
     22c:	4602      	mov	r2, r0
     22e:	687b      	ldr	r3, [r7, #4]
     230:	6053      	str	r3, [r2, #4]
  SysTickEnable();
     232:	f000 f80d 	bl	250 <SysTickEnable()>
}
     236:	bf00      	nop
     238:	3708      	adds	r7, #8
     23a:	46bd      	mov	sp, r7
     23c:	bd80      	pop	{r7, pc}

0000023e <SysTickDisable()>:

void SysTickDisable() { GetSysTickBase()->CSR = kSystickCsrClkSourceCore; }
     23e:	b580      	push	{r7, lr}
     240:	af00      	add	r7, sp, #0
     242:	f7ff ffe3 	bl	20c <GetSysTickBase()>
     246:	4603      	mov	r3, r0
     248:	2202      	movs	r2, #2
     24a:	601a      	str	r2, [r3, #0]
     24c:	bf00      	nop
     24e:	bd80      	pop	{r7, pc}

00000250 <SysTickEnable()>:

void SysTickEnable() {
     250:	b580      	push	{r7, lr}
     252:	af00      	add	r7, sp, #0
  /* re-enables init registers without changing reload val */
  GetSysTickBase()->CSR = (kSystickCsrClkSourceCore | kSystickCsrEnable | kSystickCsrTickIntPend);
     254:	f7ff ffda 	bl	20c <GetSysTickBase()>
     258:	4603      	mov	r3, r0
     25a:	2203      	movs	r2, #3
     25c:	601a      	str	r2, [r3, #0]
}
     25e:	bf00      	nop
     260:	bd80      	pop	{r7, pc}
     262:	bf00      	nop

00000264 <IsFloatEqual(float, float)>:
#include <stdint.h>
#include <stdio.h>

static constexpr float kEps = 1.0e-4f;

bool IsFloatEqual(float a, float b) { return ((a >= b - kEps) && (a <= b + kEps)); }
     264:	b580      	push	{r7, lr}
     266:	b082      	sub	sp, #8
     268:	af00      	add	r7, sp, #0
     26a:	6078      	str	r0, [r7, #4]
     26c:	6039      	str	r1, [r7, #0]
     26e:	490f      	ldr	r1, [pc, #60]	; (2ac <IsFloatEqual(float, float)+0x48>)
     270:	6838      	ldr	r0, [r7, #0]
     272:	f00a fa1b 	bl	a6ac <__aeabi_fsub>
     276:	4603      	mov	r3, r0
     278:	4619      	mov	r1, r3
     27a:	6878      	ldr	r0, [r7, #4]
     27c:	f00a fcd2 	bl	ac24 <__aeabi_fcmpge>
     280:	4603      	mov	r3, r0
     282:	2b00      	cmp	r3, #0
     284:	d00d      	beq.n	2a2 <IsFloatEqual(float, float)+0x3e>
     286:	4909      	ldr	r1, [pc, #36]	; (2ac <IsFloatEqual(float, float)+0x48>)
     288:	6838      	ldr	r0, [r7, #0]
     28a:	f00a fa11 	bl	a6b0 <__addsf3>
     28e:	4603      	mov	r3, r0
     290:	4619      	mov	r1, r3
     292:	6878      	ldr	r0, [r7, #4]
     294:	f00a fcbc 	bl	ac10 <__aeabi_fcmple>
     298:	4603      	mov	r3, r0
     29a:	2b00      	cmp	r3, #0
     29c:	d001      	beq.n	2a2 <IsFloatEqual(float, float)+0x3e>
     29e:	2301      	movs	r3, #1
     2a0:	e000      	b.n	2a4 <IsFloatEqual(float, float)+0x40>
     2a2:	2300      	movs	r3, #0
     2a4:	4618      	mov	r0, r3
     2a6:	3708      	adds	r7, #8
     2a8:	46bd      	mov	sp, r7
     2aa:	bd80      	pop	{r7, pc}
     2ac:	38d1b717 	.word	0x38d1b717

000002b0 <TestFloat()>:

void TestFloat() {
     2b0:	b590      	push	{r4, r7, lr}
     2b2:	b08b      	sub	sp, #44	; 0x2c
     2b4:	af00      	add	r7, sp, #0
  printf("# Test: Simple calculations with floats\n");
     2b6:	489f      	ldr	r0, [pc, #636]	; (534 <TestFloat()+0x284>)
     2b8:	f00c fd46 	bl	cd48 <puts>

  volatile float f = 123.5f;
     2bc:	4b9e      	ldr	r3, [pc, #632]	; (538 <TestFloat()+0x288>)
     2be:	61fb      	str	r3, [r7, #28]

  assert(f == 123.5f);
     2c0:	69fb      	ldr	r3, [r7, #28]
     2c2:	499d      	ldr	r1, [pc, #628]	; (538 <TestFloat()+0x288>)
     2c4:	4618      	mov	r0, r3
     2c6:	f00a fc8f 	bl	abe8 <__aeabi_fcmpeq>
     2ca:	4603      	mov	r3, r0
     2cc:	2b00      	cmp	r3, #0
     2ce:	d105      	bne.n	2dc <TestFloat()+0x2c>
     2d0:	4b9a      	ldr	r3, [pc, #616]	; (53c <TestFloat()+0x28c>)
     2d2:	4a9b      	ldr	r2, [pc, #620]	; (540 <TestFloat()+0x290>)
     2d4:	2110      	movs	r1, #16
     2d6:	489b      	ldr	r0, [pc, #620]	; (544 <TestFloat()+0x294>)
     2d8:	f00b fc90 	bl	bbfc <__assert_func>

  volatile int32_t f_i = static_cast<int32_t>(f);
     2dc:	69fb      	ldr	r3, [r7, #28]
     2de:	4618      	mov	r0, r3
     2e0:	f00a fcca 	bl	ac78 <__aeabi_f2iz>
     2e4:	4603      	mov	r3, r0
     2e6:	61bb      	str	r3, [r7, #24]
  assert(f_i == 123);
     2e8:	69bb      	ldr	r3, [r7, #24]
     2ea:	2b7b      	cmp	r3, #123	; 0x7b
     2ec:	d005      	beq.n	2fa <TestFloat()+0x4a>
     2ee:	4b96      	ldr	r3, [pc, #600]	; (548 <TestFloat()+0x298>)
     2f0:	4a93      	ldr	r2, [pc, #588]	; (540 <TestFloat()+0x290>)
     2f2:	2113      	movs	r1, #19
     2f4:	4893      	ldr	r0, [pc, #588]	; (544 <TestFloat()+0x294>)
     2f6:	f00b fc81 	bl	bbfc <__assert_func>

  volatile float frac = f - f_i;
     2fa:	69fc      	ldr	r4, [r7, #28]
     2fc:	69bb      	ldr	r3, [r7, #24]
     2fe:	4618      	mov	r0, r3
     300:	f00a fa8a 	bl	a818 <__aeabi_i2f>
     304:	4603      	mov	r3, r0
     306:	4619      	mov	r1, r3
     308:	4620      	mov	r0, r4
     30a:	f00a f9cf 	bl	a6ac <__aeabi_fsub>
     30e:	4603      	mov	r3, r0
     310:	617b      	str	r3, [r7, #20]
  assert((frac >= (0.5f - kEps)) && (frac <= (0.5f + kEps)));
     312:	697b      	ldr	r3, [r7, #20]
     314:	498d      	ldr	r1, [pc, #564]	; (54c <TestFloat()+0x29c>)
     316:	4618      	mov	r0, r3
     318:	f00a fc84 	bl	ac24 <__aeabi_fcmpge>
     31c:	4603      	mov	r3, r0
     31e:	2b00      	cmp	r3, #0
     320:	d007      	beq.n	332 <TestFloat()+0x82>
     322:	697b      	ldr	r3, [r7, #20]
     324:	498a      	ldr	r1, [pc, #552]	; (550 <TestFloat()+0x2a0>)
     326:	4618      	mov	r0, r3
     328:	f00a fc72 	bl	ac10 <__aeabi_fcmple>
     32c:	4603      	mov	r3, r0
     32e:	2b00      	cmp	r3, #0
     330:	d105      	bne.n	33e <TestFloat()+0x8e>
     332:	4b88      	ldr	r3, [pc, #544]	; (554 <TestFloat()+0x2a4>)
     334:	4a82      	ldr	r2, [pc, #520]	; (540 <TestFloat()+0x290>)
     336:	2116      	movs	r1, #22
     338:	4882      	ldr	r0, [pc, #520]	; (544 <TestFloat()+0x294>)
     33a:	f00b fc5f 	bl	bbfc <__assert_func>

  for (int i = 0; i < 3; ++i) { // 6 Nachkommastellen
     33e:	2300      	movs	r3, #0
     340:	627b      	str	r3, [r7, #36]	; 0x24
     342:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     344:	2b02      	cmp	r3, #2
     346:	dc4b      	bgt.n	3e0 <TestFloat()+0x130>
    frac *= 10;
     348:	697b      	ldr	r3, [r7, #20]
     34a:	4983      	ldr	r1, [pc, #524]	; (558 <TestFloat()+0x2a8>)
     34c:	4618      	mov	r0, r3
     34e:	f00a fab7 	bl	a8c0 <__aeabi_fmul>
     352:	4603      	mov	r3, r0
     354:	617b      	str	r3, [r7, #20]
    int digit = static_cast<int>(frac);
     356:	697b      	ldr	r3, [r7, #20]
     358:	4618      	mov	r0, r3
     35a:	f00a fc8d 	bl	ac78 <__aeabi_f2iz>
     35e:	4603      	mov	r3, r0
     360:	623b      	str	r3, [r7, #32]
    assert(digit >= 0 && digit <= 9);
     362:	6a3b      	ldr	r3, [r7, #32]
     364:	2b00      	cmp	r3, #0
     366:	db02      	blt.n	36e <TestFloat()+0xbe>
     368:	6a3b      	ldr	r3, [r7, #32]
     36a:	2b09      	cmp	r3, #9
     36c:	dd05      	ble.n	37a <TestFloat()+0xca>
     36e:	4b7b      	ldr	r3, [pc, #492]	; (55c <TestFloat()+0x2ac>)
     370:	4a73      	ldr	r2, [pc, #460]	; (540 <TestFloat()+0x290>)
     372:	211b      	movs	r1, #27
     374:	4873      	ldr	r0, [pc, #460]	; (544 <TestFloat()+0x294>)
     376:	f00b fc41 	bl	bbfc <__assert_func>
    assert(i != 0 || digit == 5);
     37a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     37c:	2b00      	cmp	r3, #0
     37e:	d108      	bne.n	392 <TestFloat()+0xe2>
     380:	6a3b      	ldr	r3, [r7, #32]
     382:	2b05      	cmp	r3, #5
     384:	d005      	beq.n	392 <TestFloat()+0xe2>
     386:	4b76      	ldr	r3, [pc, #472]	; (560 <TestFloat()+0x2b0>)
     388:	4a6d      	ldr	r2, [pc, #436]	; (540 <TestFloat()+0x290>)
     38a:	211c      	movs	r1, #28
     38c:	486d      	ldr	r0, [pc, #436]	; (544 <TestFloat()+0x294>)
     38e:	f00b fc35 	bl	bbfc <__assert_func>
    assert(i != 1 || digit == 0);
     392:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     394:	2b01      	cmp	r3, #1
     396:	d108      	bne.n	3aa <TestFloat()+0xfa>
     398:	6a3b      	ldr	r3, [r7, #32]
     39a:	2b00      	cmp	r3, #0
     39c:	d005      	beq.n	3aa <TestFloat()+0xfa>
     39e:	4b71      	ldr	r3, [pc, #452]	; (564 <TestFloat()+0x2b4>)
     3a0:	4a67      	ldr	r2, [pc, #412]	; (540 <TestFloat()+0x290>)
     3a2:	211d      	movs	r1, #29
     3a4:	4867      	ldr	r0, [pc, #412]	; (544 <TestFloat()+0x294>)
     3a6:	f00b fc29 	bl	bbfc <__assert_func>
    assert(i != 2 || digit == 0);
     3aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     3ac:	2b02      	cmp	r3, #2
     3ae:	d108      	bne.n	3c2 <TestFloat()+0x112>
     3b0:	6a3b      	ldr	r3, [r7, #32]
     3b2:	2b00      	cmp	r3, #0
     3b4:	d005      	beq.n	3c2 <TestFloat()+0x112>
     3b6:	4b6c      	ldr	r3, [pc, #432]	; (568 <TestFloat()+0x2b8>)
     3b8:	4a61      	ldr	r2, [pc, #388]	; (540 <TestFloat()+0x290>)
     3ba:	211e      	movs	r1, #30
     3bc:	4861      	ldr	r0, [pc, #388]	; (544 <TestFloat()+0x294>)
     3be:	f00b fc1d 	bl	bbfc <__assert_func>
    frac -= digit;
     3c2:	697c      	ldr	r4, [r7, #20]
     3c4:	6a38      	ldr	r0, [r7, #32]
     3c6:	f00a fa27 	bl	a818 <__aeabi_i2f>
     3ca:	4603      	mov	r3, r0
     3cc:	4619      	mov	r1, r3
     3ce:	4620      	mov	r0, r4
     3d0:	f00a f96c 	bl	a6ac <__aeabi_fsub>
     3d4:	4603      	mov	r3, r0
     3d6:	617b      	str	r3, [r7, #20]
  for (int i = 0; i < 3; ++i) { // 6 Nachkommastellen
     3d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     3da:	3301      	adds	r3, #1
     3dc:	627b      	str	r3, [r7, #36]	; 0x24
     3de:	e7b0      	b.n	342 <TestFloat()+0x92>
  }

  // float equation
  volatile float a = 2.0f;
     3e0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
     3e4:	613b      	str	r3, [r7, #16]

  a = a * 2.0f; // 4.0
     3e6:	693b      	ldr	r3, [r7, #16]
     3e8:	4619      	mov	r1, r3
     3ea:	4618      	mov	r0, r3
     3ec:	f00a f960 	bl	a6b0 <__addsf3>
     3f0:	4603      	mov	r3, r0
     3f2:	613b      	str	r3, [r7, #16]
  a = a + 1.0f; // 5.0
     3f4:	693b      	ldr	r3, [r7, #16]
     3f6:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
     3fa:	4618      	mov	r0, r3
     3fc:	f00a f958 	bl	a6b0 <__addsf3>
     400:	4603      	mov	r3, r0
     402:	613b      	str	r3, [r7, #16]
  a = a - 0.5f; // 4.5
     404:	693b      	ldr	r3, [r7, #16]
     406:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
     40a:	4618      	mov	r0, r3
     40c:	f00a f94e 	bl	a6ac <__aeabi_fsub>
     410:	4603      	mov	r3, r0
     412:	613b      	str	r3, [r7, #16]
  a = a / 0.5f; // 9.0
     414:	693b      	ldr	r3, [r7, #16]
     416:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
     41a:	4618      	mov	r0, r3
     41c:	f00a fb04 	bl	aa28 <__aeabi_fdiv>
     420:	4603      	mov	r3, r0
     422:	613b      	str	r3, [r7, #16]
  assert(IsFloatEqual(a, 9.0f));
     424:	693b      	ldr	r3, [r7, #16]
     426:	4951      	ldr	r1, [pc, #324]	; (56c <TestFloat()+0x2bc>)
     428:	4618      	mov	r0, r3
     42a:	f7ff ff1b 	bl	264 <IsFloatEqual(float, float)>
     42e:	4603      	mov	r3, r0
     430:	2b00      	cmp	r3, #0
     432:	d105      	bne.n	440 <TestFloat()+0x190>
     434:	4b4e      	ldr	r3, [pc, #312]	; (570 <TestFloat()+0x2c0>)
     436:	4a42      	ldr	r2, [pc, #264]	; (540 <TestFloat()+0x290>)
     438:	2129      	movs	r1, #41	; 0x29
     43a:	4842      	ldr	r0, [pc, #264]	; (544 <TestFloat()+0x294>)
     43c:	f00b fbde 	bl	bbfc <__assert_func>

  // rounding
  a = 1.499f;
     440:	4b4c      	ldr	r3, [pc, #304]	; (574 <TestFloat()+0x2c4>)
     442:	613b      	str	r3, [r7, #16]

  volatile auto a_ceil = std::ceil(a);
     444:	693b      	ldr	r3, [r7, #16]
     446:	4618      	mov	r0, r3
     448:	f000 f8a6 	bl	598 <std::ceil(float)>
     44c:	4603      	mov	r3, r0
     44e:	60fb      	str	r3, [r7, #12]
  assert(IsFloatEqual(a_ceil, 2.0f));
     450:	68fb      	ldr	r3, [r7, #12]
     452:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
     456:	4618      	mov	r0, r3
     458:	f7ff ff04 	bl	264 <IsFloatEqual(float, float)>
     45c:	4603      	mov	r3, r0
     45e:	2b00      	cmp	r3, #0
     460:	d105      	bne.n	46e <TestFloat()+0x1be>
     462:	4b45      	ldr	r3, [pc, #276]	; (578 <TestFloat()+0x2c8>)
     464:	4a36      	ldr	r2, [pc, #216]	; (540 <TestFloat()+0x290>)
     466:	212f      	movs	r1, #47	; 0x2f
     468:	4836      	ldr	r0, [pc, #216]	; (544 <TestFloat()+0x294>)
     46a:	f00b fbc7 	bl	bbfc <__assert_func>

  volatile auto a_floor = std::floor(a);
     46e:	693b      	ldr	r3, [r7, #16]
     470:	4618      	mov	r0, r3
     472:	f000 f89d 	bl	5b0 <std::floor(float)>
     476:	4603      	mov	r3, r0
     478:	60bb      	str	r3, [r7, #8]
  assert(IsFloatEqual(a_floor, 1.0f));
     47a:	68bb      	ldr	r3, [r7, #8]
     47c:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
     480:	4618      	mov	r0, r3
     482:	f7ff feef 	bl	264 <IsFloatEqual(float, float)>
     486:	4603      	mov	r3, r0
     488:	2b00      	cmp	r3, #0
     48a:	d105      	bne.n	498 <TestFloat()+0x1e8>
     48c:	4b3b      	ldr	r3, [pc, #236]	; (57c <TestFloat()+0x2cc>)
     48e:	4a2c      	ldr	r2, [pc, #176]	; (540 <TestFloat()+0x290>)
     490:	2132      	movs	r1, #50	; 0x32
     492:	482c      	ldr	r0, [pc, #176]	; (544 <TestFloat()+0x294>)
     494:	f00b fbb2 	bl	bbfc <__assert_func>

  volatile auto a_round = std::round(a);
     498:	693b      	ldr	r3, [r7, #16]
     49a:	4618      	mov	r0, r3
     49c:	f000 f8f1 	bl	682 <std::round(float)>
     4a0:	4603      	mov	r3, r0
     4a2:	607b      	str	r3, [r7, #4]
  assert(IsFloatEqual(a_round, 1.0f));
     4a4:	687b      	ldr	r3, [r7, #4]
     4a6:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
     4aa:	4618      	mov	r0, r3
     4ac:	f7ff feda 	bl	264 <IsFloatEqual(float, float)>
     4b0:	4603      	mov	r3, r0
     4b2:	2b00      	cmp	r3, #0
     4b4:	d105      	bne.n	4c2 <TestFloat()+0x212>
     4b6:	4b32      	ldr	r3, [pc, #200]	; (580 <TestFloat()+0x2d0>)
     4b8:	4a21      	ldr	r2, [pc, #132]	; (540 <TestFloat()+0x290>)
     4ba:	2135      	movs	r1, #53	; 0x35
     4bc:	4821      	ldr	r0, [pc, #132]	; (544 <TestFloat()+0x294>)
     4be:	f00b fb9d 	bl	bbfc <__assert_func>

  assert(std::isnan(NAN) == true);
     4c2:	4830      	ldr	r0, [pc, #192]	; (584 <TestFloat()+0x2d4>)
     4c4:	f000 f8a8 	bl	618 <std::isnan(float)>
     4c8:	4603      	mov	r3, r0
     4ca:	2b01      	cmp	r3, #1
     4cc:	d005      	beq.n	4da <TestFloat()+0x22a>
     4ce:	4b2e      	ldr	r3, [pc, #184]	; (588 <TestFloat()+0x2d8>)
     4d0:	4a1b      	ldr	r2, [pc, #108]	; (540 <TestFloat()+0x290>)
     4d2:	2137      	movs	r1, #55	; 0x37
     4d4:	481b      	ldr	r0, [pc, #108]	; (544 <TestFloat()+0x294>)
     4d6:	f00b fb91 	bl	bbfc <__assert_func>
  assert(std::isnan(INFINITY) == false);
     4da:	f04f 40ff 	mov.w	r0, #2139095040	; 0x7f800000
     4de:	f000 f89b 	bl	618 <std::isnan(float)>
     4e2:	4603      	mov	r3, r0
     4e4:	2b00      	cmp	r3, #0
     4e6:	d005      	beq.n	4f4 <TestFloat()+0x244>
     4e8:	4b28      	ldr	r3, [pc, #160]	; (58c <TestFloat()+0x2dc>)
     4ea:	4a15      	ldr	r2, [pc, #84]	; (540 <TestFloat()+0x290>)
     4ec:	2138      	movs	r1, #56	; 0x38
     4ee:	4815      	ldr	r0, [pc, #84]	; (544 <TestFloat()+0x294>)
     4f0:	f00b fb84 	bl	bbfc <__assert_func>
  assert(std::isnan(0.0) == false);
     4f4:	f04f 0000 	mov.w	r0, #0
     4f8:	f04f 0100 	mov.w	r1, #0
     4fc:	f000 f8a5 	bl	64a <std::isnan(double)>
     500:	4603      	mov	r3, r0
     502:	2b00      	cmp	r3, #0
     504:	d005      	beq.n	512 <TestFloat()+0x262>
     506:	4b22      	ldr	r3, [pc, #136]	; (590 <TestFloat()+0x2e0>)
     508:	4a0d      	ldr	r2, [pc, #52]	; (540 <TestFloat()+0x290>)
     50a:	2139      	movs	r1, #57	; 0x39
     50c:	480d      	ldr	r0, [pc, #52]	; (544 <TestFloat()+0x294>)
     50e:	f00b fb75 	bl	bbfc <__assert_func>
  assert(std::isinf(INFINITY) == true);
     512:	f04f 40ff 	mov.w	r0, #2139095040	; 0x7f800000
     516:	f000 f857 	bl	5c8 <std::isinf(float)>
     51a:	4603      	mov	r3, r0
     51c:	2b01      	cmp	r3, #1
     51e:	d005      	beq.n	52c <TestFloat()+0x27c>
     520:	4b1c      	ldr	r3, [pc, #112]	; (594 <TestFloat()+0x2e4>)
     522:	4a07      	ldr	r2, [pc, #28]	; (540 <TestFloat()+0x290>)
     524:	213a      	movs	r1, #58	; 0x3a
     526:	4807      	ldr	r0, [pc, #28]	; (544 <TestFloat()+0x294>)
     528:	f00b fb68 	bl	bbfc <__assert_func>
     52c:	bf00      	nop
     52e:	372c      	adds	r7, #44	; 0x2c
     530:	46bd      	mov	sp, r7
     532:	bd90      	pop	{r4, r7, pc}
     534:	000171b0 	.word	0x000171b0
     538:	42f70000 	.word	0x42f70000
     53c:	000171d8 	.word	0x000171d8
     540:	000171e4 	.word	0x000171e4
     544:	000171f8 	.word	0x000171f8
     548:	00017240 	.word	0x00017240
     54c:	3efff2e5 	.word	0x3efff2e5
     550:	3f00068e 	.word	0x3f00068e
     554:	0001724c 	.word	0x0001724c
     558:	41200000 	.word	0x41200000
     55c:	00017280 	.word	0x00017280
     560:	0001729c 	.word	0x0001729c
     564:	000172b4 	.word	0x000172b4
     568:	000172cc 	.word	0x000172cc
     56c:	41100000 	.word	0x41100000
     570:	000172e4 	.word	0x000172e4
     574:	3fbfdf3b 	.word	0x3fbfdf3b
     578:	000172fc 	.word	0x000172fc
     57c:	00017318 	.word	0x00017318
     580:	00017334 	.word	0x00017334
     584:	7fc00000 	.word	0x7fc00000
     588:	00017350 	.word	0x00017350
     58c:	00017368 	.word	0x00017368
     590:	00017388 	.word	0x00017388
     594:	000173a4 	.word	0x000173a4

00000598 <std::ceil(float)>:
  using ::ceil;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  ceil(float __x)
  { return __builtin_ceilf(__x); }
     598:	b580      	push	{r7, lr}
     59a:	b082      	sub	sp, #8
     59c:	af00      	add	r7, sp, #0
     59e:	6078      	str	r0, [r7, #4]
     5a0:	6878      	ldr	r0, [r7, #4]
     5a2:	f009 ff13 	bl	a3cc <ceilf>
     5a6:	4603      	mov	r3, r0
     5a8:	4618      	mov	r0, r3
     5aa:	3708      	adds	r7, #8
     5ac:	46bd      	mov	sp, r7
     5ae:	bd80      	pop	{r7, pc}

000005b0 <std::floor(float)>:
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
     5b0:	b580      	push	{r7, lr}
     5b2:	b082      	sub	sp, #8
     5b4:	af00      	add	r7, sp, #0
     5b6:	6078      	str	r0, [r7, #4]
     5b8:	6878      	ldr	r0, [r7, #4]
     5ba:	f009 ff45 	bl	a448 <floorf>
     5be:	4603      	mov	r3, r0
     5c0:	4618      	mov	r0, r3
     5c2:	3708      	adds	r7, #8
     5c4:	46bd      	mov	sp, r7
     5c6:	bd80      	pop	{r7, pc}

000005c8 <std::isinf(float)>:
#endif

#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
  constexpr bool
  isinf(float __x)
  { return __builtin_isinf(__x); }
     5c8:	b5b0      	push	{r4, r5, r7, lr}
     5ca:	b082      	sub	sp, #8
     5cc:	af00      	add	r7, sp, #0
     5ce:	6078      	str	r0, [r7, #4]
     5d0:	687b      	ldr	r3, [r7, #4]
     5d2:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
     5d6:	2301      	movs	r3, #1
     5d8:	461d      	mov	r5, r3
     5da:	490e      	ldr	r1, [pc, #56]	; (614 <std::isinf(float)+0x4c>)
     5dc:	4620      	mov	r0, r4
     5de:	f00a fb35 	bl	ac4c <__aeabi_fcmpun>
     5e2:	4603      	mov	r3, r0
     5e4:	2b00      	cmp	r3, #0
     5e6:	d108      	bne.n	5fa <std::isinf(float)+0x32>
     5e8:	490a      	ldr	r1, [pc, #40]	; (614 <std::isinf(float)+0x4c>)
     5ea:	4620      	mov	r0, r4
     5ec:	f00a fb10 	bl	ac10 <__aeabi_fcmple>
     5f0:	4603      	mov	r3, r0
     5f2:	2b00      	cmp	r3, #0
     5f4:	d101      	bne.n	5fa <std::isinf(float)+0x32>
     5f6:	2300      	movs	r3, #0
     5f8:	461d      	mov	r5, r3
     5fa:	b2eb      	uxtb	r3, r5
     5fc:	f083 0301 	eor.w	r3, r3, #1
     600:	b2db      	uxtb	r3, r3
     602:	2b00      	cmp	r3, #0
     604:	bf14      	ite	ne
     606:	2301      	movne	r3, #1
     608:	2300      	moveq	r3, #0
     60a:	b2db      	uxtb	r3, r3
     60c:	4618      	mov	r0, r3
     60e:	3708      	adds	r7, #8
     610:	46bd      	mov	sp, r7
     612:	bdb0      	pop	{r4, r5, r7, pc}
     614:	7f7fffff 	.word	0x7f7fffff

00000618 <std::isnan(float)>:
#endif

#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
  constexpr bool
  isnan(float __x)
  { return __builtin_isnan(__x); }
     618:	b590      	push	{r4, r7, lr}
     61a:	b083      	sub	sp, #12
     61c:	af00      	add	r7, sp, #0
     61e:	6078      	str	r0, [r7, #4]
     620:	2301      	movs	r3, #1
     622:	461c      	mov	r4, r3
     624:	6879      	ldr	r1, [r7, #4]
     626:	6878      	ldr	r0, [r7, #4]
     628:	f00a fb10 	bl	ac4c <__aeabi_fcmpun>
     62c:	4603      	mov	r3, r0
     62e:	2b00      	cmp	r3, #0
     630:	d101      	bne.n	636 <std::isnan(float)+0x1e>
     632:	2300      	movs	r3, #0
     634:	461c      	mov	r4, r3
     636:	b2e3      	uxtb	r3, r4
     638:	2b00      	cmp	r3, #0
     63a:	bf14      	ite	ne
     63c:	2301      	movne	r3, #1
     63e:	2300      	moveq	r3, #0
     640:	b2db      	uxtb	r3, r3
     642:	4618      	mov	r0, r3
     644:	370c      	adds	r7, #12
     646:	46bd      	mov	sp, r7
     648:	bd90      	pop	{r4, r7, pc}

0000064a <std::isnan(double)>:
  && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
  using ::isnan;
#else
  constexpr bool
  isnan(double __x)
  { return __builtin_isnan(__x); }
     64a:	b590      	push	{r4, r7, lr}
     64c:	b083      	sub	sp, #12
     64e:	af00      	add	r7, sp, #0
     650:	e9c7 0100 	strd	r0, r1, [r7]
     654:	2301      	movs	r3, #1
     656:	461c      	mov	r4, r3
     658:	e9d7 2300 	ldrd	r2, r3, [r7]
     65c:	e9d7 0100 	ldrd	r0, r1, [r7]
     660:	f00a f80a 	bl	a678 <__aeabi_dcmpun>
     664:	4603      	mov	r3, r0
     666:	2b00      	cmp	r3, #0
     668:	d101      	bne.n	66e <std::isnan(double)+0x24>
     66a:	2300      	movs	r3, #0
     66c:	461c      	mov	r4, r3
     66e:	b2e3      	uxtb	r3, r4
     670:	2b00      	cmp	r3, #0
     672:	bf14      	ite	ne
     674:	2301      	movne	r3, #1
     676:	2300      	moveq	r3, #0
     678:	b2db      	uxtb	r3, r3
     67a:	4618      	mov	r0, r3
     67c:	370c      	adds	r7, #12
     67e:	46bd      	mov	sp, r7
     680:	bd90      	pop	{r4, r7, pc}

00000682 <std::round(float)>:
#endif

#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
  constexpr float
  round(float __x)
  { return __builtin_roundf(__x); }
     682:	b580      	push	{r7, lr}
     684:	b082      	sub	sp, #8
     686:	af00      	add	r7, sp, #0
     688:	6078      	str	r0, [r7, #4]
     68a:	6878      	ldr	r0, [r7, #4]
     68c:	f009 ff1c 	bl	a4c8 <roundf>
     690:	4603      	mov	r3, r0
     692:	4618      	mov	r0, r3
     694:	3708      	adds	r7, #8
     696:	46bd      	mov	sp, r7
     698:	bd80      	pop	{r7, pc}
     69a:	0000      	movs	r0, r0
     69c:	0000      	movs	r0, r0
	...

000006a0 <TestSprintf()>:
#include <cmath>
#include <cstring>
#include <stdint.h>
#include <stdio.h>

void TestSprintf() {
     6a0:	b580      	push	{r7, lr}
     6a2:	b092      	sub	sp, #72	; 0x48
     6a4:	af02      	add	r7, sp, #8
  printf("# Test: Sprintf\n");
     6a6:	483c      	ldr	r0, [pc, #240]	; (798 <TestSprintf()+0xf8>)
     6a8:	f00c fb4e 	bl	cd48 <puts>

  char buf[50];
  sprintf(buf, "%s, %i, %u", "ABC", -123, 345);
     6ac:	1d38      	adds	r0, r7, #4
     6ae:	f240 1359 	movw	r3, #345	; 0x159
     6b2:	9300      	str	r3, [sp, #0]
     6b4:	f06f 037a 	mvn.w	r3, #122	; 0x7a
     6b8:	4a38      	ldr	r2, [pc, #224]	; (79c <TestSprintf()+0xfc>)
     6ba:	4939      	ldr	r1, [pc, #228]	; (7a0 <TestSprintf()+0x100>)
     6bc:	f00c fed0 	bl	d460 <sprintf>
  assert(strcmp(buf, "ABC, -123, 345") == 0);
     6c0:	1d3b      	adds	r3, r7, #4
     6c2:	4938      	ldr	r1, [pc, #224]	; (7a4 <TestSprintf()+0x104>)
     6c4:	4618      	mov	r0, r3
     6c6:	f00c feed 	bl	d4a4 <strcmp>
     6ca:	4603      	mov	r3, r0
     6cc:	2b00      	cmp	r3, #0
     6ce:	d005      	beq.n	6dc <TestSprintf()+0x3c>
     6d0:	4b35      	ldr	r3, [pc, #212]	; (7a8 <TestSprintf()+0x108>)
     6d2:	4a36      	ldr	r2, [pc, #216]	; (7ac <TestSprintf()+0x10c>)
     6d4:	210d      	movs	r1, #13
     6d6:	4836      	ldr	r0, [pc, #216]	; (7b0 <TestSprintf()+0x110>)
     6d8:	f00b fa90 	bl	bbfc <__assert_func>

  uint32_t test0{1234U};
     6dc:	f240 43d2 	movw	r3, #1234	; 0x4d2
     6e0:	63fb      	str	r3, [r7, #60]	; 0x3c
  sprintf(buf, "  1234 == %u\n", test0);
     6e2:	1d3b      	adds	r3, r7, #4
     6e4:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
     6e6:	4933      	ldr	r1, [pc, #204]	; (7b4 <TestSprintf()+0x114>)
     6e8:	4618      	mov	r0, r3
     6ea:	f00c feb9 	bl	d460 <sprintf>
  assert(strcmp(buf, "  1234 == 1234\n") == 0);
     6ee:	1d3b      	adds	r3, r7, #4
     6f0:	4931      	ldr	r1, [pc, #196]	; (7b8 <TestSprintf()+0x118>)
     6f2:	4618      	mov	r0, r3
     6f4:	f00c fed6 	bl	d4a4 <strcmp>
     6f8:	4603      	mov	r3, r0
     6fa:	2b00      	cmp	r3, #0
     6fc:	d005      	beq.n	70a <TestSprintf()+0x6a>
     6fe:	4b2f      	ldr	r3, [pc, #188]	; (7bc <TestSprintf()+0x11c>)
     700:	4a2a      	ldr	r2, [pc, #168]	; (7ac <TestSprintf()+0x10c>)
     702:	2111      	movs	r1, #17
     704:	482a      	ldr	r0, [pc, #168]	; (7b0 <TestSprintf()+0x110>)
     706:	f00b fa79 	bl	bbfc <__assert_func>

  uint32_t test1{0xCAFEBABEU};
     70a:	4b2d      	ldr	r3, [pc, #180]	; (7c0 <TestSprintf()+0x120>)
     70c:	63bb      	str	r3, [r7, #56]	; 0x38
  sprintf(buf, "  0xCAFEBABE == 0x%X\n", test1);
     70e:	1d3b      	adds	r3, r7, #4
     710:	6bba      	ldr	r2, [r7, #56]	; 0x38
     712:	492c      	ldr	r1, [pc, #176]	; (7c4 <TestSprintf()+0x124>)
     714:	4618      	mov	r0, r3
     716:	f00c fea3 	bl	d460 <sprintf>
  assert(strcmp(buf, "  0xCAFEBABE == 0xCAFEBABE\n") == 0);
     71a:	1d3b      	adds	r3, r7, #4
     71c:	492a      	ldr	r1, [pc, #168]	; (7c8 <TestSprintf()+0x128>)
     71e:	4618      	mov	r0, r3
     720:	f00c fec0 	bl	d4a4 <strcmp>
     724:	4603      	mov	r3, r0
     726:	2b00      	cmp	r3, #0
     728:	d005      	beq.n	736 <TestSprintf()+0x96>
     72a:	4b28      	ldr	r3, [pc, #160]	; (7cc <TestSprintf()+0x12c>)
     72c:	4a1f      	ldr	r2, [pc, #124]	; (7ac <TestSprintf()+0x10c>)
     72e:	2115      	movs	r1, #21
     730:	481f      	ldr	r0, [pc, #124]	; (7b0 <TestSprintf()+0x110>)
     732:	f00b fa63 	bl	bbfc <__assert_func>

  sprintf(buf, "  Float: %f\n", 123.45678f);
     736:	1d38      	adds	r0, r7, #4
     738:	a315      	add	r3, pc, #84	; (adr r3, 790 <TestSprintf()+0xf0>)
     73a:	e9d3 2300 	ldrd	r2, r3, [r3]
     73e:	4924      	ldr	r1, [pc, #144]	; (7d0 <TestSprintf()+0x130>)
     740:	f00c fe8e 	bl	d460 <sprintf>
  assert(strcmp(buf, "  Float: 123.456779\n") == 0);
     744:	1d3b      	adds	r3, r7, #4
     746:	4923      	ldr	r1, [pc, #140]	; (7d4 <TestSprintf()+0x134>)
     748:	4618      	mov	r0, r3
     74a:	f00c feab 	bl	d4a4 <strcmp>
     74e:	4603      	mov	r3, r0
     750:	2b00      	cmp	r3, #0
     752:	d005      	beq.n	760 <TestSprintf()+0xc0>
     754:	4b20      	ldr	r3, [pc, #128]	; (7d8 <TestSprintf()+0x138>)
     756:	4a15      	ldr	r2, [pc, #84]	; (7ac <TestSprintf()+0x10c>)
     758:	2118      	movs	r1, #24
     75a:	4815      	ldr	r0, [pc, #84]	; (7b0 <TestSprintf()+0x110>)
     75c:	f00b fa4e 	bl	bbfc <__assert_func>

  sprintf(buf, "  --> %s \n", "inserted str");
     760:	1d3b      	adds	r3, r7, #4
     762:	4a1e      	ldr	r2, [pc, #120]	; (7dc <TestSprintf()+0x13c>)
     764:	491e      	ldr	r1, [pc, #120]	; (7e0 <TestSprintf()+0x140>)
     766:	4618      	mov	r0, r3
     768:	f00c fe7a 	bl	d460 <sprintf>
  assert(strcmp(buf, "  --> inserted str \n") == 0);
     76c:	1d3b      	adds	r3, r7, #4
     76e:	491d      	ldr	r1, [pc, #116]	; (7e4 <TestSprintf()+0x144>)
     770:	4618      	mov	r0, r3
     772:	f00c fe97 	bl	d4a4 <strcmp>
     776:	4603      	mov	r3, r0
     778:	2b00      	cmp	r3, #0
     77a:	d005      	beq.n	788 <TestSprintf()+0xe8>
     77c:	4b1a      	ldr	r3, [pc, #104]	; (7e8 <TestSprintf()+0x148>)
     77e:	4a0b      	ldr	r2, [pc, #44]	; (7ac <TestSprintf()+0x10c>)
     780:	211b      	movs	r1, #27
     782:	480b      	ldr	r0, [pc, #44]	; (7b0 <TestSprintf()+0x110>)
     784:	f00b fa3a 	bl	bbfc <__assert_func>
     788:	bf00      	nop
     78a:	3740      	adds	r7, #64	; 0x40
     78c:	46bd      	mov	sp, r7
     78e:	bd80      	pop	{r7, pc}
     790:	e0000000 	.word	0xe0000000
     794:	405edd3b 	.word	0x405edd3b
     798:	000173c4 	.word	0x000173c4
     79c:	000173d4 	.word	0x000173d4
     7a0:	000173d8 	.word	0x000173d8
     7a4:	000173e4 	.word	0x000173e4
     7a8:	000173f4 	.word	0x000173f4
     7ac:	00017418 	.word	0x00017418
     7b0:	0001742c 	.word	0x0001742c
     7b4:	00017478 	.word	0x00017478
     7b8:	00017488 	.word	0x00017488
     7bc:	00017498 	.word	0x00017498
     7c0:	cafebabe 	.word	0xcafebabe
     7c4:	000174c0 	.word	0x000174c0
     7c8:	000174d8 	.word	0x000174d8
     7cc:	000174f4 	.word	0x000174f4
     7d0:	00017528 	.word	0x00017528
     7d4:	00017538 	.word	0x00017538
     7d8:	00017550 	.word	0x00017550
     7dc:	0001757c 	.word	0x0001757c
     7e0:	0001758c 	.word	0x0001758c
     7e4:	00017598 	.word	0x00017598
     7e8:	000175b0 	.word	0x000175b0

000007ec <TestStdOut()>:
#include "test_std_out.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

void TestStdOut() {
     7ec:	b580      	push	{r7, lr}
     7ee:	af00      	add	r7, sp, #0
  printf("# Test: Standard output\n");
     7f0:	4826      	ldr	r0, [pc, #152]	; (88c <TestStdOut()+0xa0>)
     7f2:	f00c faa9 	bl	cd48 <puts>

  // char tests
  fputc(' ', stdout);
     7f6:	4b26      	ldr	r3, [pc, #152]	; (890 <TestStdOut()+0xa4>)
     7f8:	681b      	ldr	r3, [r3, #0]
     7fa:	689b      	ldr	r3, [r3, #8]
     7fc:	4619      	mov	r1, r3
     7fe:	2020      	movs	r0, #32
     800:	f00b fa7c 	bl	bcfc <fputc>
  fputc(' ', stdout);
     804:	4b22      	ldr	r3, [pc, #136]	; (890 <TestStdOut()+0xa4>)
     806:	681b      	ldr	r3, [r3, #0]
     808:	689b      	ldr	r3, [r3, #8]
     80a:	4619      	mov	r1, r3
     80c:	2020      	movs	r0, #32
     80e:	f00b fa75 	bl	bcfc <fputc>
  fputc('T', stdout);
     812:	4b1f      	ldr	r3, [pc, #124]	; (890 <TestStdOut()+0xa4>)
     814:	681b      	ldr	r3, [r3, #0]
     816:	689b      	ldr	r3, [r3, #8]
     818:	4619      	mov	r1, r3
     81a:	2054      	movs	r0, #84	; 0x54
     81c:	f00b fa6e 	bl	bcfc <fputc>
  fputc('E', stdout);
     820:	4b1b      	ldr	r3, [pc, #108]	; (890 <TestStdOut()+0xa4>)
     822:	681b      	ldr	r3, [r3, #0]
     824:	689b      	ldr	r3, [r3, #8]
     826:	4619      	mov	r1, r3
     828:	2045      	movs	r0, #69	; 0x45
     82a:	f00b fa67 	bl	bcfc <fputc>
  fputc('S', stdout);
     82e:	4b18      	ldr	r3, [pc, #96]	; (890 <TestStdOut()+0xa4>)
     830:	681b      	ldr	r3, [r3, #0]
     832:	689b      	ldr	r3, [r3, #8]
     834:	4619      	mov	r1, r3
     836:	2053      	movs	r0, #83	; 0x53
     838:	f00b fa60 	bl	bcfc <fputc>
  fputc('T', stdout);
     83c:	4b14      	ldr	r3, [pc, #80]	; (890 <TestStdOut()+0xa4>)
     83e:	681b      	ldr	r3, [r3, #0]
     840:	689b      	ldr	r3, [r3, #8]
     842:	4619      	mov	r1, r3
     844:	2054      	movs	r0, #84	; 0x54
     846:	f00b fa59 	bl	bcfc <fputc>
  fputc('!', stdout);
     84a:	4b11      	ldr	r3, [pc, #68]	; (890 <TestStdOut()+0xa4>)
     84c:	681b      	ldr	r3, [r3, #0]
     84e:	689b      	ldr	r3, [r3, #8]
     850:	4619      	mov	r1, r3
     852:	2021      	movs	r0, #33	; 0x21
     854:	f00b fa52 	bl	bcfc <fputc>
  fputc('\n', stdout);
     858:	4b0d      	ldr	r3, [pc, #52]	; (890 <TestStdOut()+0xa4>)
     85a:	681b      	ldr	r3, [r3, #0]
     85c:	689b      	ldr	r3, [r3, #8]
     85e:	4619      	mov	r1, r3
     860:	200a      	movs	r0, #10
     862:	f00b fa4b 	bl	bcfc <fputc>

  printf("  Hello World\n");
     866:	480b      	ldr	r0, [pc, #44]	; (894 <TestStdOut()+0xa8>)
     868:	f00c fa6e 	bl	cd48 <puts>

  printf("  0123456789012345678901234567890123456789\n");
     86c:	480a      	ldr	r0, [pc, #40]	; (898 <TestStdOut()+0xac>)
     86e:	f00c fa6b 	bl	cd48 <puts>

  fprintf(stdout, "  fprintf output\n");
     872:	4b07      	ldr	r3, [pc, #28]	; (890 <TestStdOut()+0xa4>)
     874:	681b      	ldr	r3, [r3, #0]
     876:	689b      	ldr	r3, [r3, #8]
     878:	2211      	movs	r2, #17
     87a:	2101      	movs	r1, #1
     87c:	4807      	ldr	r0, [pc, #28]	; (89c <TestStdOut()+0xb0>)
     87e:	f00b fc83 	bl	c188 <fwrite>
  iprintf("  iprintf output\n");
     882:	4807      	ldr	r0, [pc, #28]	; (8a0 <TestStdOut()+0xb4>)
     884:	f00b fcb6 	bl	c1f4 <iprintf>
     888:	bf00      	nop
     88a:	bd80      	pop	{r7, pc}
     88c:	000175dc 	.word	0x000175dc
     890:	20000124 	.word	0x20000124
     894:	000175f4 	.word	0x000175f4
     898:	00017604 	.word	0x00017604
     89c:	00017630 	.word	0x00017630
     8a0:	00017644 	.word	0x00017644

000008a4 <ReadMSP()>:
#include <stdint.h>
#include <stdio.h>

static constexpr uint32_t kStackAlign = 8; // Stack is always 8 byte aligned

static uint32_t ReadMSP() {
     8a4:	b480      	push	{r7}
     8a6:	b083      	sub	sp, #12
     8a8:	af00      	add	r7, sp, #0
  uint32_t msp_val;
  __asm volatile("MRS %0, MSP\n" : "=r"(msp_val));
     8aa:	f3ef 8308 	mrs	r3, MSP
     8ae:	607b      	str	r3, [r7, #4]
  return msp_val;
     8b0:	687b      	ldr	r3, [r7, #4]
}
     8b2:	4618      	mov	r0, r3
     8b4:	370c      	adds	r7, #12
     8b6:	46bd      	mov	sp, r7
     8b8:	bc80      	pop	{r7}
     8ba:	4770      	bx	lr

000008bc <StackAlignmentTest()>:

uint32_t StackAlignmentTest() {
     8bc:	b580      	push	{r7, lr}
     8be:	b082      	sub	sp, #8
     8c0:	af00      	add	r7, sp, #0
  // check alignment of stack pointer
  assert(ReadMSP() % kStackAlign == 0);
     8c2:	f7ff ffef 	bl	8a4 <ReadMSP()>
     8c6:	4603      	mov	r3, r0
     8c8:	f003 0307 	and.w	r3, r3, #7
     8cc:	2b00      	cmp	r3, #0
     8ce:	d005      	beq.n	8dc <StackAlignmentTest()+0x20>
     8d0:	4b11      	ldr	r3, [pc, #68]	; (918 <StackAlignmentTest()+0x5c>)
     8d2:	4a12      	ldr	r2, [pc, #72]	; (91c <StackAlignmentTest()+0x60>)
     8d4:	2110      	movs	r1, #16
     8d6:	4812      	ldr	r0, [pc, #72]	; (920 <StackAlignmentTest()+0x64>)
     8d8:	f00b f990 	bl	bbfc <__assert_func>

  volatile uint32_t ret32 = 0xCAFEU;
     8dc:	f64c 23fe 	movw	r3, #51966	; 0xcafe
     8e0:	607b      	str	r3, [r7, #4]
  volatile uint16_t ret16 = static_cast<uint16_t>(ret32);
     8e2:	687b      	ldr	r3, [r7, #4]
     8e4:	b29b      	uxth	r3, r3
     8e6:	807b      	strh	r3, [r7, #2]
  volatile uint8_t ret8 = static_cast<uint8_t>(ret16);
     8e8:	887b      	ldrh	r3, [r7, #2]
     8ea:	b29b      	uxth	r3, r3
     8ec:	b2db      	uxtb	r3, r3
     8ee:	707b      	strb	r3, [r7, #1]

  // check alignment of stack pointer
  assert(ReadMSP() % kStackAlign == 0);
     8f0:	f7ff ffd8 	bl	8a4 <ReadMSP()>
     8f4:	4603      	mov	r3, r0
     8f6:	f003 0307 	and.w	r3, r3, #7
     8fa:	2b00      	cmp	r3, #0
     8fc:	d005      	beq.n	90a <StackAlignmentTest()+0x4e>
     8fe:	4b06      	ldr	r3, [pc, #24]	; (918 <StackAlignmentTest()+0x5c>)
     900:	4a06      	ldr	r2, [pc, #24]	; (91c <StackAlignmentTest()+0x60>)
     902:	2117      	movs	r1, #23
     904:	4806      	ldr	r0, [pc, #24]	; (920 <StackAlignmentTest()+0x64>)
     906:	f00b f979 	bl	bbfc <__assert_func>

  return ret8;
     90a:	787b      	ldrb	r3, [r7, #1]
     90c:	b2db      	uxtb	r3, r3
};
     90e:	4618      	mov	r0, r3
     910:	3708      	adds	r7, #8
     912:	46bd      	mov	sp, r7
     914:	bd80      	pop	{r7, pc}
     916:	bf00      	nop
     918:	0001765c 	.word	0x0001765c
     91c:	0001767c 	.word	0x0001767c
     920:	0001769c 	.word	0x0001769c

00000924 <CallFct3(unsigned long)>:

uint32_t CallFct3(uint32_t a) {
     924:	b580      	push	{r7, lr}
     926:	b084      	sub	sp, #16
     928:	af00      	add	r7, sp, #0
     92a:	6078      	str	r0, [r7, #4]
  // check alignment of stack pointer
  assert(ReadMSP() % kStackAlign == 0);
     92c:	f7ff ffba 	bl	8a4 <ReadMSP()>
     930:	4603      	mov	r3, r0
     932:	f003 0307 	and.w	r3, r3, #7
     936:	2b00      	cmp	r3, #0
     938:	d005      	beq.n	946 <CallFct3(unsigned long)+0x22>
     93a:	4b06      	ldr	r3, [pc, #24]	; (954 <CallFct3(unsigned long)+0x30>)
     93c:	4a06      	ldr	r2, [pc, #24]	; (958 <CallFct3(unsigned long)+0x34>)
     93e:	211e      	movs	r1, #30
     940:	4806      	ldr	r0, [pc, #24]	; (95c <CallFct3(unsigned long)+0x38>)
     942:	f00b f95b 	bl	bbfc <__assert_func>

  volatile uint32_t ret = a;
     946:	687b      	ldr	r3, [r7, #4]
     948:	60fb      	str	r3, [r7, #12]
  return ret;
     94a:	68fb      	ldr	r3, [r7, #12]
}
     94c:	4618      	mov	r0, r3
     94e:	3710      	adds	r7, #16
     950:	46bd      	mov	sp, r7
     952:	bd80      	pop	{r7, pc}
     954:	0001765c 	.word	0x0001765c
     958:	000176f0 	.word	0x000176f0
     95c:	0001769c 	.word	0x0001769c

00000960 <CallFct2(unsigned short)>:

uint16_t CallFct2(uint16_t a) {
     960:	b580      	push	{r7, lr}
     962:	b084      	sub	sp, #16
     964:	af00      	add	r7, sp, #0
     966:	4603      	mov	r3, r0
     968:	80fb      	strh	r3, [r7, #6]
  // check alignment of stack pointer
  assert(ReadMSP() % kStackAlign == 0);
     96a:	f7ff ff9b 	bl	8a4 <ReadMSP()>
     96e:	4603      	mov	r3, r0
     970:	f003 0307 	and.w	r3, r3, #7
     974:	2b00      	cmp	r3, #0
     976:	d005      	beq.n	984 <CallFct2(unsigned short)+0x24>
     978:	4b09      	ldr	r3, [pc, #36]	; (9a0 <CallFct2(unsigned short)+0x40>)
     97a:	4a0a      	ldr	r2, [pc, #40]	; (9a4 <CallFct2(unsigned short)+0x44>)
     97c:	2126      	movs	r1, #38	; 0x26
     97e:	480a      	ldr	r0, [pc, #40]	; (9a8 <CallFct2(unsigned short)+0x48>)
     980:	f00b f93c 	bl	bbfc <__assert_func>

  volatile uint16_t ret = static_cast<uint16_t>(CallFct3(static_cast<uint32_t>(a)));
     984:	88fb      	ldrh	r3, [r7, #6]
     986:	4618      	mov	r0, r3
     988:	f7ff ffcc 	bl	924 <CallFct3(unsigned long)>
     98c:	4603      	mov	r3, r0
     98e:	b29b      	uxth	r3, r3
     990:	81fb      	strh	r3, [r7, #14]
  return ret;
     992:	89fb      	ldrh	r3, [r7, #14]
     994:	b29b      	uxth	r3, r3
}
     996:	4618      	mov	r0, r3
     998:	3710      	adds	r7, #16
     99a:	46bd      	mov	sp, r7
     99c:	bd80      	pop	{r7, pc}
     99e:	bf00      	nop
     9a0:	0001765c 	.word	0x0001765c
     9a4:	0001770c 	.word	0x0001770c
     9a8:	0001769c 	.word	0x0001769c

000009ac <CallFct1(unsigned char)>:

uint8_t CallFct1(uint8_t a) {
     9ac:	b580      	push	{r7, lr}
     9ae:	b084      	sub	sp, #16
     9b0:	af00      	add	r7, sp, #0
     9b2:	4603      	mov	r3, r0
     9b4:	71fb      	strb	r3, [r7, #7]
  // check alignment of stack pointer
  assert(ReadMSP() % kStackAlign == 0);
     9b6:	f7ff ff75 	bl	8a4 <ReadMSP()>
     9ba:	4603      	mov	r3, r0
     9bc:	f003 0307 	and.w	r3, r3, #7
     9c0:	2b00      	cmp	r3, #0
     9c2:	d005      	beq.n	9d0 <CallFct1(unsigned char)+0x24>
     9c4:	4b09      	ldr	r3, [pc, #36]	; (9ec <CallFct1(unsigned char)+0x40>)
     9c6:	4a0a      	ldr	r2, [pc, #40]	; (9f0 <CallFct1(unsigned char)+0x44>)
     9c8:	212e      	movs	r1, #46	; 0x2e
     9ca:	480a      	ldr	r0, [pc, #40]	; (9f4 <CallFct1(unsigned char)+0x48>)
     9cc:	f00b f916 	bl	bbfc <__assert_func>

  volatile uint8_t ret = static_cast<uint8_t>(CallFct2(static_cast<uint16_t>(a)));
     9d0:	79fb      	ldrb	r3, [r7, #7]
     9d2:	b29b      	uxth	r3, r3
     9d4:	4618      	mov	r0, r3
     9d6:	f7ff ffc3 	bl	960 <CallFct2(unsigned short)>
     9da:	4603      	mov	r3, r0
     9dc:	b2db      	uxtb	r3, r3
     9de:	73fb      	strb	r3, [r7, #15]
  return ret;
     9e0:	7bfb      	ldrb	r3, [r7, #15]
     9e2:	b2db      	uxtb	r3, r3
}
     9e4:	4618      	mov	r0, r3
     9e6:	3710      	adds	r7, #16
     9e8:	46bd      	mov	sp, r7
     9ea:	bd80      	pop	{r7, pc}
     9ec:	0001765c 	.word	0x0001765c
     9f0:	00017728 	.word	0x00017728
     9f4:	0001769c 	.word	0x0001769c

000009f8 <TestStackAlignment()>:

void TestStackAlignment() {
     9f8:	b580      	push	{r7, lr}
     9fa:	b082      	sub	sp, #8
     9fc:	af00      	add	r7, sp, #0
  printf("# Test: Stack alignment\n");
     9fe:	4824      	ldr	r0, [pc, #144]	; (a90 <TestStackAlignment()+0x98>)
     a00:	f00c f9a2 	bl	cd48 <puts>
  auto msp_before = ReadMSP();
     a04:	f7ff ff4e 	bl	8a4 <ReadMSP()>
     a08:	6078      	str	r0, [r7, #4]

  assert(StackAlignmentTest() == 0xFE);
     a0a:	f7ff ff57 	bl	8bc <StackAlignmentTest()>
     a0e:	4603      	mov	r3, r0
     a10:	2bfe      	cmp	r3, #254	; 0xfe
     a12:	d005      	beq.n	a20 <TestStackAlignment()+0x28>
     a14:	4b1f      	ldr	r3, [pc, #124]	; (a94 <TestStackAlignment()+0x9c>)
     a16:	4a20      	ldr	r2, [pc, #128]	; (a98 <TestStackAlignment()+0xa0>)
     a18:	2138      	movs	r1, #56	; 0x38
     a1a:	4820      	ldr	r0, [pc, #128]	; (a9c <TestStackAlignment()+0xa4>)
     a1c:	f00b f8ee 	bl	bbfc <__assert_func>

  // check alignment of stack pointer
  assert(ReadMSP() % kStackAlign == 0);
     a20:	f7ff ff40 	bl	8a4 <ReadMSP()>
     a24:	4603      	mov	r3, r0
     a26:	f003 0307 	and.w	r3, r3, #7
     a2a:	2b00      	cmp	r3, #0
     a2c:	d005      	beq.n	a3a <TestStackAlignment()+0x42>
     a2e:	4b1c      	ldr	r3, [pc, #112]	; (aa0 <TestStackAlignment()+0xa8>)
     a30:	4a19      	ldr	r2, [pc, #100]	; (a98 <TestStackAlignment()+0xa0>)
     a32:	213b      	movs	r1, #59	; 0x3b
     a34:	4819      	ldr	r0, [pc, #100]	; (a9c <TestStackAlignment()+0xa4>)
     a36:	f00b f8e1 	bl	bbfc <__assert_func>

  assert(CallFct1(0xDE) == 0xDE);
     a3a:	20de      	movs	r0, #222	; 0xde
     a3c:	f7ff ffb6 	bl	9ac <CallFct1(unsigned char)>
     a40:	4603      	mov	r3, r0
     a42:	2bde      	cmp	r3, #222	; 0xde
     a44:	d005      	beq.n	a52 <TestStackAlignment()+0x5a>
     a46:	4b17      	ldr	r3, [pc, #92]	; (aa4 <TestStackAlignment()+0xac>)
     a48:	4a13      	ldr	r2, [pc, #76]	; (a98 <TestStackAlignment()+0xa0>)
     a4a:	213d      	movs	r1, #61	; 0x3d
     a4c:	4813      	ldr	r0, [pc, #76]	; (a9c <TestStackAlignment()+0xa4>)
     a4e:	f00b f8d5 	bl	bbfc <__assert_func>

  // check alignment of stack pointer
  assert(ReadMSP() % kStackAlign == 0);
     a52:	f7ff ff27 	bl	8a4 <ReadMSP()>
     a56:	4603      	mov	r3, r0
     a58:	f003 0307 	and.w	r3, r3, #7
     a5c:	2b00      	cmp	r3, #0
     a5e:	d005      	beq.n	a6c <TestStackAlignment()+0x74>
     a60:	4b0f      	ldr	r3, [pc, #60]	; (aa0 <TestStackAlignment()+0xa8>)
     a62:	4a0d      	ldr	r2, [pc, #52]	; (a98 <TestStackAlignment()+0xa0>)
     a64:	2140      	movs	r1, #64	; 0x40
     a66:	480d      	ldr	r0, [pc, #52]	; (a9c <TestStackAlignment()+0xa4>)
     a68:	f00b f8c8 	bl	bbfc <__assert_func>

  auto msp_after = ReadMSP();
     a6c:	f7ff ff1a 	bl	8a4 <ReadMSP()>
     a70:	6038      	str	r0, [r7, #0]
  assert(msp_before == msp_after);
     a72:	687a      	ldr	r2, [r7, #4]
     a74:	683b      	ldr	r3, [r7, #0]
     a76:	429a      	cmp	r2, r3
     a78:	d005      	beq.n	a86 <TestStackAlignment()+0x8e>
     a7a:	4b0b      	ldr	r3, [pc, #44]	; (aa8 <TestStackAlignment()+0xb0>)
     a7c:	4a06      	ldr	r2, [pc, #24]	; (a98 <TestStackAlignment()+0xa0>)
     a7e:	2143      	movs	r1, #67	; 0x43
     a80:	4806      	ldr	r0, [pc, #24]	; (a9c <TestStackAlignment()+0xa4>)
     a82:	f00b f8bb 	bl	bbfc <__assert_func>
     a86:	bf00      	nop
     a88:	3708      	adds	r7, #8
     a8a:	46bd      	mov	sp, r7
     a8c:	bd80      	pop	{r7, pc}
     a8e:	bf00      	nop
     a90:	00017744 	.word	0x00017744
     a94:	0001775c 	.word	0x0001775c
     a98:	0001777c 	.word	0x0001777c
     a9c:	0001769c 	.word	0x0001769c
     aa0:	0001765c 	.word	0x0001765c
     aa4:	00017798 	.word	0x00017798
     aa8:	000177b0 	.word	0x000177b0

00000aac <TestStrlen()>:
#include <assert.h>
#include <cstring>
#include <stdint.h>
#include <stdio.h>

void TestStrlen() {
     aac:	b580      	push	{r7, lr}
     aae:	b084      	sub	sp, #16
     ab0:	af00      	add	r7, sp, #0
  const char *test_str1 = "";
     ab2:	4b1d      	ldr	r3, [pc, #116]	; (b28 <TestStrlen()+0x7c>)
     ab4:	60fb      	str	r3, [r7, #12]
  assert(strlen(test_str1) == 0);
     ab6:	68fb      	ldr	r3, [r7, #12]
     ab8:	781b      	ldrb	r3, [r3, #0]
     aba:	2b00      	cmp	r3, #0
     abc:	d005      	beq.n	aca <TestStrlen()+0x1e>
     abe:	4b1b      	ldr	r3, [pc, #108]	; (b2c <TestStrlen()+0x80>)
     ac0:	4a1b      	ldr	r2, [pc, #108]	; (b30 <TestStrlen()+0x84>)
     ac2:	2109      	movs	r1, #9
     ac4:	481b      	ldr	r0, [pc, #108]	; (b34 <TestStrlen()+0x88>)
     ac6:	f00b f899 	bl	bbfc <__assert_func>

  const char *test_str2 = "0";
     aca:	4b1b      	ldr	r3, [pc, #108]	; (b38 <TestStrlen()+0x8c>)
     acc:	60bb      	str	r3, [r7, #8]
  assert(strlen(test_str2) == 1);
     ace:	68b8      	ldr	r0, [r7, #8]
     ad0:	f00c fdc6 	bl	d660 <strlen>
     ad4:	4603      	mov	r3, r0
     ad6:	2b01      	cmp	r3, #1
     ad8:	d005      	beq.n	ae6 <TestStrlen()+0x3a>
     ada:	4b18      	ldr	r3, [pc, #96]	; (b3c <TestStrlen()+0x90>)
     adc:	4a14      	ldr	r2, [pc, #80]	; (b30 <TestStrlen()+0x84>)
     ade:	210c      	movs	r1, #12
     ae0:	4814      	ldr	r0, [pc, #80]	; (b34 <TestStrlen()+0x88>)
     ae2:	f00b f88b 	bl	bbfc <__assert_func>

  const char *test_str3 = "012345678";
     ae6:	4b16      	ldr	r3, [pc, #88]	; (b40 <TestStrlen()+0x94>)
     ae8:	607b      	str	r3, [r7, #4]
  assert(strlen(test_str3) == 9);
     aea:	6878      	ldr	r0, [r7, #4]
     aec:	f00c fdb8 	bl	d660 <strlen>
     af0:	4603      	mov	r3, r0
     af2:	2b09      	cmp	r3, #9
     af4:	d005      	beq.n	b02 <TestStrlen()+0x56>
     af6:	4b13      	ldr	r3, [pc, #76]	; (b44 <TestStrlen()+0x98>)
     af8:	4a0d      	ldr	r2, [pc, #52]	; (b30 <TestStrlen()+0x84>)
     afa:	210f      	movs	r1, #15
     afc:	480d      	ldr	r0, [pc, #52]	; (b34 <TestStrlen()+0x88>)
     afe:	f00b f87d 	bl	bbfc <__assert_func>

  const char *test_str4 = "main.cpp";
     b02:	4b11      	ldr	r3, [pc, #68]	; (b48 <TestStrlen()+0x9c>)
     b04:	603b      	str	r3, [r7, #0]
  assert(strlen(test_str4) == 8);
     b06:	6838      	ldr	r0, [r7, #0]
     b08:	f00c fdaa 	bl	d660 <strlen>
     b0c:	4603      	mov	r3, r0
     b0e:	2b08      	cmp	r3, #8
     b10:	d005      	beq.n	b1e <TestStrlen()+0x72>
     b12:	4b0e      	ldr	r3, [pc, #56]	; (b4c <TestStrlen()+0xa0>)
     b14:	4a06      	ldr	r2, [pc, #24]	; (b30 <TestStrlen()+0x84>)
     b16:	2112      	movs	r1, #18
     b18:	4806      	ldr	r0, [pc, #24]	; (b34 <TestStrlen()+0x88>)
     b1a:	f00b f86f 	bl	bbfc <__assert_func>
}
     b1e:	bf00      	nop
     b20:	3710      	adds	r7, #16
     b22:	46bd      	mov	sp, r7
     b24:	bd80      	pop	{r7, pc}
     b26:	bf00      	nop
     b28:	000177c8 	.word	0x000177c8
     b2c:	000177cc 	.word	0x000177cc
     b30:	000177e4 	.word	0x000177e4
     b34:	000177f8 	.word	0x000177f8
     b38:	00017844 	.word	0x00017844
     b3c:	00017848 	.word	0x00017848
     b40:	00017860 	.word	0x00017860
     b44:	0001786c 	.word	0x0001786c
     b48:	00017884 	.word	0x00017884
     b4c:	00017890 	.word	0x00017890

00000b50 <TestStrcmp()>:

void TestStrcmp() {
     b50:	b580      	push	{r7, lr}
     b52:	b082      	sub	sp, #8
     b54:	af00      	add	r7, sp, #0

  assert(strcmp("ABCD", "ABCD") == 0);
  assert(strcmp("ABCD", "ABBC") > 0);
  assert(strcmp("ABCD", "ABdD") < 0);

  const char *test_str_cmp = "ABCDEFG";
     b56:	4b16      	ldr	r3, [pc, #88]	; (bb0 <TestStrcmp()+0x60>)
     b58:	607b      	str	r3, [r7, #4]
  assert(strcmp(test_str_cmp, "ABCDEFG") == 0);
     b5a:	4915      	ldr	r1, [pc, #84]	; (bb0 <TestStrcmp()+0x60>)
     b5c:	6878      	ldr	r0, [r7, #4]
     b5e:	f00c fca1 	bl	d4a4 <strcmp>
     b62:	4603      	mov	r3, r0
     b64:	2b00      	cmp	r3, #0
     b66:	d005      	beq.n	b74 <TestStrcmp()+0x24>
     b68:	4b12      	ldr	r3, [pc, #72]	; (bb4 <TestStrcmp()+0x64>)
     b6a:	4a13      	ldr	r2, [pc, #76]	; (bb8 <TestStrcmp()+0x68>)
     b6c:	212b      	movs	r1, #43	; 0x2b
     b6e:	4813      	ldr	r0, [pc, #76]	; (bbc <TestStrcmp()+0x6c>)
     b70:	f00b f844 	bl	bbfc <__assert_func>
  assert(strcmp(test_str_cmp, "ABCdEFG") < 0);
     b74:	4912      	ldr	r1, [pc, #72]	; (bc0 <TestStrcmp()+0x70>)
     b76:	6878      	ldr	r0, [r7, #4]
     b78:	f00c fc94 	bl	d4a4 <strcmp>
     b7c:	4603      	mov	r3, r0
     b7e:	2b00      	cmp	r3, #0
     b80:	db05      	blt.n	b8e <TestStrcmp()+0x3e>
     b82:	4b10      	ldr	r3, [pc, #64]	; (bc4 <TestStrcmp()+0x74>)
     b84:	4a0c      	ldr	r2, [pc, #48]	; (bb8 <TestStrcmp()+0x68>)
     b86:	212c      	movs	r1, #44	; 0x2c
     b88:	480c      	ldr	r0, [pc, #48]	; (bbc <TestStrcmp()+0x6c>)
     b8a:	f00b f837 	bl	bbfc <__assert_func>
  assert(strcmp(test_str_cmp, "ABCCEFG") > 0);
     b8e:	490e      	ldr	r1, [pc, #56]	; (bc8 <TestStrcmp()+0x78>)
     b90:	6878      	ldr	r0, [r7, #4]
     b92:	f00c fc87 	bl	d4a4 <strcmp>
     b96:	4603      	mov	r3, r0
     b98:	2b00      	cmp	r3, #0
     b9a:	dc05      	bgt.n	ba8 <TestStrcmp()+0x58>
     b9c:	4b0b      	ldr	r3, [pc, #44]	; (bcc <TestStrcmp()+0x7c>)
     b9e:	4a06      	ldr	r2, [pc, #24]	; (bb8 <TestStrcmp()+0x68>)
     ba0:	212d      	movs	r1, #45	; 0x2d
     ba2:	4806      	ldr	r0, [pc, #24]	; (bbc <TestStrcmp()+0x6c>)
     ba4:	f00b f82a 	bl	bbfc <__assert_func>
}
     ba8:	bf00      	nop
     baa:	3708      	adds	r7, #8
     bac:	46bd      	mov	sp, r7
     bae:	bd80      	pop	{r7, pc}
     bb0:	000178a8 	.word	0x000178a8
     bb4:	000178b0 	.word	0x000178b0
     bb8:	000178d8 	.word	0x000178d8
     bbc:	000177f8 	.word	0x000177f8
     bc0:	000178ec 	.word	0x000178ec
     bc4:	000178f4 	.word	0x000178f4
     bc8:	00017918 	.word	0x00017918
     bcc:	00017920 	.word	0x00017920

00000bd0 <TestMemCpy()>:

void TestMemCpy() {
     bd0:	b580      	push	{r7, lr}
     bd2:	b086      	sub	sp, #24
     bd4:	af00      	add	r7, sp, #0
  char str1[] = "1234567890";
     bd6:	4a15      	ldr	r2, [pc, #84]	; (c2c <TestMemCpy()+0x5c>)
     bd8:	f107 030c 	add.w	r3, r7, #12
     bdc:	ca07      	ldmia	r2, {r0, r1, r2}
     bde:	c303      	stmia	r3!, {r0, r1}
     be0:	801a      	strh	r2, [r3, #0]
     be2:	3302      	adds	r3, #2
     be4:	0c12      	lsrs	r2, r2, #16
     be6:	701a      	strb	r2, [r3, #0]
  char str2[] = "abcdefghij";
     be8:	4a11      	ldr	r2, [pc, #68]	; (c30 <TestMemCpy()+0x60>)
     bea:	463b      	mov	r3, r7
     bec:	ca07      	ldmia	r2, {r0, r1, r2}
     bee:	c303      	stmia	r3!, {r0, r1}
     bf0:	801a      	strh	r2, [r3, #0]
     bf2:	3302      	adds	r3, #2
     bf4:	0c12      	lsrs	r2, r2, #16
     bf6:	701a      	strb	r2, [r3, #0]
  memcpy(str1, str2, 3);
     bf8:	4639      	mov	r1, r7
     bfa:	f107 030c 	add.w	r3, r7, #12
     bfe:	2203      	movs	r2, #3
     c00:	4618      	mov	r0, r3
     c02:	f00b fe67 	bl	c8d4 <memcpy>
  assert(strcmp(str1, "abc4567890") == 0);
     c06:	f107 030c 	add.w	r3, r7, #12
     c0a:	490a      	ldr	r1, [pc, #40]	; (c34 <TestMemCpy()+0x64>)
     c0c:	4618      	mov	r0, r3
     c0e:	f00c fc49 	bl	d4a4 <strcmp>
     c12:	4603      	mov	r3, r0
     c14:	2b00      	cmp	r3, #0
     c16:	d005      	beq.n	c24 <TestMemCpy()+0x54>
     c18:	4b07      	ldr	r3, [pc, #28]	; (c38 <TestMemCpy()+0x68>)
     c1a:	4a08      	ldr	r2, [pc, #32]	; (c3c <TestMemCpy()+0x6c>)
     c1c:	2134      	movs	r1, #52	; 0x34
     c1e:	4808      	ldr	r0, [pc, #32]	; (c40 <TestMemCpy()+0x70>)
     c20:	f00a ffec 	bl	bbfc <__assert_func>
}
     c24:	bf00      	nop
     c26:	3718      	adds	r7, #24
     c28:	46bd      	mov	sp, r7
     c2a:	bd80      	pop	{r7, pc}
     c2c:	00017984 	.word	0x00017984
     c30:	00017990 	.word	0x00017990
     c34:	00017944 	.word	0x00017944
     c38:	00017950 	.word	0x00017950
     c3c:	00017970 	.word	0x00017970
     c40:	000177f8 	.word	0x000177f8

00000c44 <TestMemMove()>:

void TestMemMove() {
     c44:	b580      	push	{r7, lr}
     c46:	b084      	sub	sp, #16
     c48:	af00      	add	r7, sp, #0
  char str[] = "1234567890";
     c4a:	4a11      	ldr	r2, [pc, #68]	; (c90 <TestMemMove()+0x4c>)
     c4c:	1d3b      	adds	r3, r7, #4
     c4e:	ca07      	ldmia	r2, {r0, r1, r2}
     c50:	c303      	stmia	r3!, {r0, r1}
     c52:	801a      	strh	r2, [r3, #0]
     c54:	3302      	adds	r3, #2
     c56:	0c12      	lsrs	r2, r2, #16
     c58:	701a      	strb	r2, [r3, #0]
  memmove(str + 4, str + 3, 3); // copies from [4, 5, 6] to [5, 6, 7]
     c5a:	1d3b      	adds	r3, r7, #4
     c5c:	3304      	adds	r3, #4
     c5e:	1d39      	adds	r1, r7, #4
     c60:	3103      	adds	r1, #3
     c62:	2203      	movs	r2, #3
     c64:	4618      	mov	r0, r3
     c66:	f00b feab 	bl	c9c0 <memmove>
  assert(strcmp(str, "1234456890") == 0);
     c6a:	1d3b      	adds	r3, r7, #4
     c6c:	4909      	ldr	r1, [pc, #36]	; (c94 <TestMemMove()+0x50>)
     c6e:	4618      	mov	r0, r3
     c70:	f00c fc18 	bl	d4a4 <strcmp>
     c74:	4603      	mov	r3, r0
     c76:	2b00      	cmp	r3, #0
     c78:	d005      	beq.n	c86 <TestMemMove()+0x42>
     c7a:	4b07      	ldr	r3, [pc, #28]	; (c98 <TestMemMove()+0x54>)
     c7c:	4a07      	ldr	r2, [pc, #28]	; (c9c <TestMemMove()+0x58>)
     c7e:	213a      	movs	r1, #58	; 0x3a
     c80:	4807      	ldr	r0, [pc, #28]	; (ca0 <TestMemMove()+0x5c>)
     c82:	f00a ffbb 	bl	bbfc <__assert_func>
}
     c86:	bf00      	nop
     c88:	3710      	adds	r7, #16
     c8a:	46bd      	mov	sp, r7
     c8c:	bd80      	pop	{r7, pc}
     c8e:	bf00      	nop
     c90:	00017984 	.word	0x00017984
     c94:	0001799c 	.word	0x0001799c
     c98:	000179a8 	.word	0x000179a8
     c9c:	000179c8 	.word	0x000179c8
     ca0:	000177f8 	.word	0x000177f8

00000ca4 <TestStdAlgos()>:

void TestStdAlgos() {
     ca4:	b580      	push	{r7, lr}
     ca6:	af00      	add	r7, sp, #0
  printf("# Test: Standard algorithmns\n");
     ca8:	4806      	ldr	r0, [pc, #24]	; (cc4 <TestStdAlgos()+0x20>)
     caa:	f00c f84d 	bl	cd48 <puts>
  TestStrlen();
     cae:	f7ff fefd 	bl	aac <TestStrlen()>
  TestStrcmp();
     cb2:	f7ff ff4d 	bl	b50 <TestStrcmp()>
  TestMemMove();
     cb6:	f7ff ffc5 	bl	c44 <TestMemMove()>
  TestMemCpy();
     cba:	f7ff ff89 	bl	bd0 <TestMemCpy()>
     cbe:	bf00      	nop
     cc0:	bd80      	pop	{r7, pc}
     cc2:	bf00      	nop
     cc4:	000179dc 	.word	0x000179dc

00000cc8 <TestIntCalc()>:
#include "test_int_calc.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

void TestIntCalc() {
     cc8:	b580      	push	{r7, lr}
     cca:	b084      	sub	sp, #16
     ccc:	af00      	add	r7, sp, #0
  printf("# Test: Simple calculations with signed integers\n");
     cce:	4893      	ldr	r0, [pc, #588]	; (f1c <TestIntCalc()+0x254>)
     cd0:	f00c f83a 	bl	cd48 <puts>
  // -----------------------------
  // 8-bit
  // -----------------------------
  volatile int8_t accu8 = 50;
     cd4:	2332      	movs	r3, #50	; 0x32
     cd6:	73fb      	strb	r3, [r7, #15]

  accu8 += 52;
     cd8:	7bfb      	ldrb	r3, [r7, #15]
     cda:	b25b      	sxtb	r3, r3
     cdc:	b2db      	uxtb	r3, r3
     cde:	3334      	adds	r3, #52	; 0x34
     ce0:	b2db      	uxtb	r3, r3
     ce2:	b25b      	sxtb	r3, r3
     ce4:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 102);
     ce6:	7bfb      	ldrb	r3, [r7, #15]
     ce8:	b25b      	sxtb	r3, r3
     cea:	2b66      	cmp	r3, #102	; 0x66
     cec:	d005      	beq.n	cfa <TestIntCalc()+0x32>
     cee:	4b8c      	ldr	r3, [pc, #560]	; (f20 <TestIntCalc()+0x258>)
     cf0:	4a8c      	ldr	r2, [pc, #560]	; (f24 <TestIntCalc()+0x25c>)
     cf2:	210e      	movs	r1, #14
     cf4:	488c      	ldr	r0, [pc, #560]	; (f28 <TestIntCalc()+0x260>)
     cf6:	f00a ff81 	bl	bbfc <__assert_func>

  accu8 = accu8 - 138;
     cfa:	7bfb      	ldrb	r3, [r7, #15]
     cfc:	b25b      	sxtb	r3, r3
     cfe:	b2db      	uxtb	r3, r3
     d00:	3376      	adds	r3, #118	; 0x76
     d02:	b2db      	uxtb	r3, r3
     d04:	b25b      	sxtb	r3, r3
     d06:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == -36);
     d08:	7bfb      	ldrb	r3, [r7, #15]
     d0a:	b25b      	sxtb	r3, r3
     d0c:	f113 0f24 	cmn.w	r3, #36	; 0x24
     d10:	d005      	beq.n	d1e <TestIntCalc()+0x56>
     d12:	4b86      	ldr	r3, [pc, #536]	; (f2c <TestIntCalc()+0x264>)
     d14:	4a83      	ldr	r2, [pc, #524]	; (f24 <TestIntCalc()+0x25c>)
     d16:	2111      	movs	r1, #17
     d18:	4883      	ldr	r0, [pc, #524]	; (f28 <TestIntCalc()+0x260>)
     d1a:	f00a ff6f 	bl	bbfc <__assert_func>

  accu8 *= 3;
     d1e:	7bfb      	ldrb	r3, [r7, #15]
     d20:	b25b      	sxtb	r3, r3
     d22:	b2db      	uxtb	r3, r3
     d24:	461a      	mov	r2, r3
     d26:	0052      	lsls	r2, r2, #1
     d28:	4413      	add	r3, r2
     d2a:	b2db      	uxtb	r3, r3
     d2c:	b25b      	sxtb	r3, r3
     d2e:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == -108);
     d30:	7bfb      	ldrb	r3, [r7, #15]
     d32:	b25b      	sxtb	r3, r3
     d34:	f113 0f6c 	cmn.w	r3, #108	; 0x6c
     d38:	d005      	beq.n	d46 <TestIntCalc()+0x7e>
     d3a:	4b7d      	ldr	r3, [pc, #500]	; (f30 <TestIntCalc()+0x268>)
     d3c:	4a79      	ldr	r2, [pc, #484]	; (f24 <TestIntCalc()+0x25c>)
     d3e:	2114      	movs	r1, #20
     d40:	4879      	ldr	r0, [pc, #484]	; (f28 <TestIntCalc()+0x260>)
     d42:	f00a ff5b 	bl	bbfc <__assert_func>

  accu8 -= 12;
     d46:	7bfb      	ldrb	r3, [r7, #15]
     d48:	b25b      	sxtb	r3, r3
     d4a:	b2db      	uxtb	r3, r3
     d4c:	3b0c      	subs	r3, #12
     d4e:	b2db      	uxtb	r3, r3
     d50:	b25b      	sxtb	r3, r3
     d52:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == -120);
     d54:	7bfb      	ldrb	r3, [r7, #15]
     d56:	b25b      	sxtb	r3, r3
     d58:	f113 0f78 	cmn.w	r3, #120	; 0x78
     d5c:	d005      	beq.n	d6a <TestIntCalc()+0xa2>
     d5e:	4b75      	ldr	r3, [pc, #468]	; (f34 <TestIntCalc()+0x26c>)
     d60:	4a70      	ldr	r2, [pc, #448]	; (f24 <TestIntCalc()+0x25c>)
     d62:	2117      	movs	r1, #23
     d64:	4870      	ldr	r0, [pc, #448]	; (f28 <TestIntCalc()+0x260>)
     d66:	f00a ff49 	bl	bbfc <__assert_func>

  accu8 /= -12;
     d6a:	7bfb      	ldrb	r3, [r7, #15]
     d6c:	b25b      	sxtb	r3, r3
     d6e:	4a72      	ldr	r2, [pc, #456]	; (f38 <TestIntCalc()+0x270>)
     d70:	fb82 1203 	smull	r1, r2, r2, r3
     d74:	1052      	asrs	r2, r2, #1
     d76:	17db      	asrs	r3, r3, #31
     d78:	1a9b      	subs	r3, r3, r2
     d7a:	b25b      	sxtb	r3, r3
     d7c:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 10);
     d7e:	7bfb      	ldrb	r3, [r7, #15]
     d80:	b25b      	sxtb	r3, r3
     d82:	2b0a      	cmp	r3, #10
     d84:	d005      	beq.n	d92 <TestIntCalc()+0xca>
     d86:	4b6d      	ldr	r3, [pc, #436]	; (f3c <TestIntCalc()+0x274>)
     d88:	4a66      	ldr	r2, [pc, #408]	; (f24 <TestIntCalc()+0x25c>)
     d8a:	211a      	movs	r1, #26
     d8c:	4866      	ldr	r0, [pc, #408]	; (f28 <TestIntCalc()+0x260>)
     d8e:	f00a ff35 	bl	bbfc <__assert_func>

  // overflow tests
  accu8 = -128;
     d92:	2380      	movs	r3, #128	; 0x80
     d94:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 - 10;
     d96:	7bfb      	ldrb	r3, [r7, #15]
     d98:	b25b      	sxtb	r3, r3
     d9a:	b2db      	uxtb	r3, r3
     d9c:	3b0a      	subs	r3, #10
     d9e:	b2db      	uxtb	r3, r3
     da0:	b25b      	sxtb	r3, r3
     da2:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 118);
     da4:	7bfb      	ldrb	r3, [r7, #15]
     da6:	b25b      	sxtb	r3, r3
     da8:	2b76      	cmp	r3, #118	; 0x76
     daa:	d005      	beq.n	db8 <TestIntCalc()+0xf0>
     dac:	4b64      	ldr	r3, [pc, #400]	; (f40 <TestIntCalc()+0x278>)
     dae:	4a5d      	ldr	r2, [pc, #372]	; (f24 <TestIntCalc()+0x25c>)
     db0:	211f      	movs	r1, #31
     db2:	485d      	ldr	r0, [pc, #372]	; (f28 <TestIntCalc()+0x260>)
     db4:	f00a ff22 	bl	bbfc <__assert_func>

  // accumulate tests
  accu8 = 1U;
     db8:	2301      	movs	r3, #1
     dba:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 2
     dbc:	7bfb      	ldrb	r3, [r7, #15]
     dbe:	b25b      	sxtb	r3, r3
     dc0:	b2db      	uxtb	r3, r3
     dc2:	7bfa      	ldrb	r2, [r7, #15]
     dc4:	b252      	sxtb	r2, r2
     dc6:	b2d2      	uxtb	r2, r2
     dc8:	fb02 f303 	mul.w	r3, r2, r3
     dcc:	b2da      	uxtb	r2, r3
     dce:	7bfb      	ldrb	r3, [r7, #15]
     dd0:	b25b      	sxtb	r3, r3
     dd2:	b2db      	uxtb	r3, r3
     dd4:	4413      	add	r3, r2
     dd6:	b2db      	uxtb	r3, r3
     dd8:	b25b      	sxtb	r3, r3
     dda:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 6
     ddc:	7bfb      	ldrb	r3, [r7, #15]
     dde:	b25b      	sxtb	r3, r3
     de0:	b2db      	uxtb	r3, r3
     de2:	7bfa      	ldrb	r2, [r7, #15]
     de4:	b252      	sxtb	r2, r2
     de6:	b2d2      	uxtb	r2, r2
     de8:	fb02 f303 	mul.w	r3, r2, r3
     dec:	b2da      	uxtb	r2, r3
     dee:	7bfb      	ldrb	r3, [r7, #15]
     df0:	b25b      	sxtb	r3, r3
     df2:	b2db      	uxtb	r3, r3
     df4:	4413      	add	r3, r2
     df6:	b2db      	uxtb	r3, r3
     df8:	b25b      	sxtb	r3, r3
     dfa:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 42
     dfc:	7bfb      	ldrb	r3, [r7, #15]
     dfe:	b25b      	sxtb	r3, r3
     e00:	b2db      	uxtb	r3, r3
     e02:	7bfa      	ldrb	r2, [r7, #15]
     e04:	b252      	sxtb	r2, r2
     e06:	b2d2      	uxtb	r2, r2
     e08:	fb02 f303 	mul.w	r3, r2, r3
     e0c:	b2da      	uxtb	r2, r3
     e0e:	7bfb      	ldrb	r3, [r7, #15]
     e10:	b25b      	sxtb	r3, r3
     e12:	b2db      	uxtb	r3, r3
     e14:	4413      	add	r3, r2
     e16:	b2db      	uxtb	r3, r3
     e18:	b25b      	sxtb	r3, r3
     e1a:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 42U);
     e1c:	7bfb      	ldrb	r3, [r7, #15]
     e1e:	b25b      	sxtb	r3, r3
     e20:	2b2a      	cmp	r3, #42	; 0x2a
     e22:	d005      	beq.n	e30 <TestIntCalc()+0x168>
     e24:	4b47      	ldr	r3, [pc, #284]	; (f44 <TestIntCalc()+0x27c>)
     e26:	4a3f      	ldr	r2, [pc, #252]	; (f24 <TestIntCalc()+0x25c>)
     e28:	2126      	movs	r1, #38	; 0x26
     e2a:	483f      	ldr	r0, [pc, #252]	; (f28 <TestIntCalc()+0x260>)
     e2c:	f00a fee6 	bl	bbfc <__assert_func>

  // -----------------------------
  // 16-bit
  // -----------------------------
  volatile int16_t accu16 = 50;
     e30:	2332      	movs	r3, #50	; 0x32
     e32:	81bb      	strh	r3, [r7, #12]

  accu16 += 52;
     e34:	89bb      	ldrh	r3, [r7, #12]
     e36:	b21b      	sxth	r3, r3
     e38:	b29b      	uxth	r3, r3
     e3a:	3334      	adds	r3, #52	; 0x34
     e3c:	b29b      	uxth	r3, r3
     e3e:	b21b      	sxth	r3, r3
     e40:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 102);
     e42:	89bb      	ldrh	r3, [r7, #12]
     e44:	b21b      	sxth	r3, r3
     e46:	2b66      	cmp	r3, #102	; 0x66
     e48:	d005      	beq.n	e56 <TestIntCalc()+0x18e>
     e4a:	4b3f      	ldr	r3, [pc, #252]	; (f48 <TestIntCalc()+0x280>)
     e4c:	4a35      	ldr	r2, [pc, #212]	; (f24 <TestIntCalc()+0x25c>)
     e4e:	212e      	movs	r1, #46	; 0x2e
     e50:	4835      	ldr	r0, [pc, #212]	; (f28 <TestIntCalc()+0x260>)
     e52:	f00a fed3 	bl	bbfc <__assert_func>

  accu16 = accu16 - 138;
     e56:	89bb      	ldrh	r3, [r7, #12]
     e58:	b21b      	sxth	r3, r3
     e5a:	b29b      	uxth	r3, r3
     e5c:	3b8a      	subs	r3, #138	; 0x8a
     e5e:	b29b      	uxth	r3, r3
     e60:	b21b      	sxth	r3, r3
     e62:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == -36);
     e64:	89bb      	ldrh	r3, [r7, #12]
     e66:	b21b      	sxth	r3, r3
     e68:	f113 0f24 	cmn.w	r3, #36	; 0x24
     e6c:	d005      	beq.n	e7a <TestIntCalc()+0x1b2>
     e6e:	4b37      	ldr	r3, [pc, #220]	; (f4c <TestIntCalc()+0x284>)
     e70:	4a2c      	ldr	r2, [pc, #176]	; (f24 <TestIntCalc()+0x25c>)
     e72:	2131      	movs	r1, #49	; 0x31
     e74:	482c      	ldr	r0, [pc, #176]	; (f28 <TestIntCalc()+0x260>)
     e76:	f00a fec1 	bl	bbfc <__assert_func>

  accu16 *= 3;
     e7a:	89bb      	ldrh	r3, [r7, #12]
     e7c:	b21b      	sxth	r3, r3
     e7e:	b29b      	uxth	r3, r3
     e80:	461a      	mov	r2, r3
     e82:	0052      	lsls	r2, r2, #1
     e84:	4413      	add	r3, r2
     e86:	b29b      	uxth	r3, r3
     e88:	b21b      	sxth	r3, r3
     e8a:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == -108);
     e8c:	89bb      	ldrh	r3, [r7, #12]
     e8e:	b21b      	sxth	r3, r3
     e90:	f113 0f6c 	cmn.w	r3, #108	; 0x6c
     e94:	d005      	beq.n	ea2 <TestIntCalc()+0x1da>
     e96:	4b2e      	ldr	r3, [pc, #184]	; (f50 <TestIntCalc()+0x288>)
     e98:	4a22      	ldr	r2, [pc, #136]	; (f24 <TestIntCalc()+0x25c>)
     e9a:	2134      	movs	r1, #52	; 0x34
     e9c:	4822      	ldr	r0, [pc, #136]	; (f28 <TestIntCalc()+0x260>)
     e9e:	f00a fead 	bl	bbfc <__assert_func>

  accu16 -= 12;
     ea2:	89bb      	ldrh	r3, [r7, #12]
     ea4:	b21b      	sxth	r3, r3
     ea6:	b29b      	uxth	r3, r3
     ea8:	3b0c      	subs	r3, #12
     eaa:	b29b      	uxth	r3, r3
     eac:	b21b      	sxth	r3, r3
     eae:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == -120);
     eb0:	89bb      	ldrh	r3, [r7, #12]
     eb2:	b21b      	sxth	r3, r3
     eb4:	f113 0f78 	cmn.w	r3, #120	; 0x78
     eb8:	d005      	beq.n	ec6 <TestIntCalc()+0x1fe>
     eba:	4b26      	ldr	r3, [pc, #152]	; (f54 <TestIntCalc()+0x28c>)
     ebc:	4a19      	ldr	r2, [pc, #100]	; (f24 <TestIntCalc()+0x25c>)
     ebe:	2137      	movs	r1, #55	; 0x37
     ec0:	4819      	ldr	r0, [pc, #100]	; (f28 <TestIntCalc()+0x260>)
     ec2:	f00a fe9b 	bl	bbfc <__assert_func>

  accu16 /= -12;
     ec6:	89bb      	ldrh	r3, [r7, #12]
     ec8:	b21b      	sxth	r3, r3
     eca:	4a1b      	ldr	r2, [pc, #108]	; (f38 <TestIntCalc()+0x270>)
     ecc:	fb82 1203 	smull	r1, r2, r2, r3
     ed0:	1052      	asrs	r2, r2, #1
     ed2:	17db      	asrs	r3, r3, #31
     ed4:	1a9b      	subs	r3, r3, r2
     ed6:	b21b      	sxth	r3, r3
     ed8:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 10);
     eda:	89bb      	ldrh	r3, [r7, #12]
     edc:	b21b      	sxth	r3, r3
     ede:	2b0a      	cmp	r3, #10
     ee0:	d005      	beq.n	eee <TestIntCalc()+0x226>
     ee2:	4b1d      	ldr	r3, [pc, #116]	; (f58 <TestIntCalc()+0x290>)
     ee4:	4a0f      	ldr	r2, [pc, #60]	; (f24 <TestIntCalc()+0x25c>)
     ee6:	213a      	movs	r1, #58	; 0x3a
     ee8:	480f      	ldr	r0, [pc, #60]	; (f28 <TestIntCalc()+0x260>)
     eea:	f00a fe87 	bl	bbfc <__assert_func>

  // overlfow tests
  accu16 = -32768;
     eee:	f44f 4300 	mov.w	r3, #32768	; 0x8000
     ef2:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 - 10;
     ef4:	89bb      	ldrh	r3, [r7, #12]
     ef6:	b21b      	sxth	r3, r3
     ef8:	b29b      	uxth	r3, r3
     efa:	3b0a      	subs	r3, #10
     efc:	b29b      	uxth	r3, r3
     efe:	b21b      	sxth	r3, r3
     f00:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 32758);
     f02:	89bb      	ldrh	r3, [r7, #12]
     f04:	b21b      	sxth	r3, r3
     f06:	f647 72f6 	movw	r2, #32758	; 0x7ff6
     f0a:	4293      	cmp	r3, r2
     f0c:	d028      	beq.n	f60 <TestIntCalc()+0x298>
     f0e:	4b13      	ldr	r3, [pc, #76]	; (f5c <TestIntCalc()+0x294>)
     f10:	4a04      	ldr	r2, [pc, #16]	; (f24 <TestIntCalc()+0x25c>)
     f12:	213f      	movs	r1, #63	; 0x3f
     f14:	4804      	ldr	r0, [pc, #16]	; (f28 <TestIntCalc()+0x260>)
     f16:	f00a fe71 	bl	bbfc <__assert_func>
     f1a:	bf00      	nop
     f1c:	000179fc 	.word	0x000179fc
     f20:	00017a30 	.word	0x00017a30
     f24:	00017a40 	.word	0x00017a40
     f28:	00017a54 	.word	0x00017a54
     f2c:	00017aa0 	.word	0x00017aa0
     f30:	00017ab0 	.word	0x00017ab0
     f34:	00017ac0 	.word	0x00017ac0
     f38:	2aaaaaab 	.word	0x2aaaaaab
     f3c:	00017ad0 	.word	0x00017ad0
     f40:	00017adc 	.word	0x00017adc
     f44:	00017aec 	.word	0x00017aec
     f48:	00017afc 	.word	0x00017afc
     f4c:	00017b0c 	.word	0x00017b0c
     f50:	00017b1c 	.word	0x00017b1c
     f54:	00017b2c 	.word	0x00017b2c
     f58:	00017b3c 	.word	0x00017b3c
     f5c:	00017b4c 	.word	0x00017b4c

  // accumulate tests
  accu16 = 1U;
     f60:	2301      	movs	r3, #1
     f62:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 2
     f64:	89bb      	ldrh	r3, [r7, #12]
     f66:	b21b      	sxth	r3, r3
     f68:	b29b      	uxth	r3, r3
     f6a:	89ba      	ldrh	r2, [r7, #12]
     f6c:	b212      	sxth	r2, r2
     f6e:	b292      	uxth	r2, r2
     f70:	fb02 f303 	mul.w	r3, r2, r3
     f74:	b29a      	uxth	r2, r3
     f76:	89bb      	ldrh	r3, [r7, #12]
     f78:	b21b      	sxth	r3, r3
     f7a:	b29b      	uxth	r3, r3
     f7c:	4413      	add	r3, r2
     f7e:	b29b      	uxth	r3, r3
     f80:	b21b      	sxth	r3, r3
     f82:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 6
     f84:	89bb      	ldrh	r3, [r7, #12]
     f86:	b21b      	sxth	r3, r3
     f88:	b29b      	uxth	r3, r3
     f8a:	89ba      	ldrh	r2, [r7, #12]
     f8c:	b212      	sxth	r2, r2
     f8e:	b292      	uxth	r2, r2
     f90:	fb02 f303 	mul.w	r3, r2, r3
     f94:	b29a      	uxth	r2, r3
     f96:	89bb      	ldrh	r3, [r7, #12]
     f98:	b21b      	sxth	r3, r3
     f9a:	b29b      	uxth	r3, r3
     f9c:	4413      	add	r3, r2
     f9e:	b29b      	uxth	r3, r3
     fa0:	b21b      	sxth	r3, r3
     fa2:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 42
     fa4:	89bb      	ldrh	r3, [r7, #12]
     fa6:	b21b      	sxth	r3, r3
     fa8:	b29b      	uxth	r3, r3
     faa:	89ba      	ldrh	r2, [r7, #12]
     fac:	b212      	sxth	r2, r2
     fae:	b292      	uxth	r2, r2
     fb0:	fb02 f303 	mul.w	r3, r2, r3
     fb4:	b29a      	uxth	r2, r3
     fb6:	89bb      	ldrh	r3, [r7, #12]
     fb8:	b21b      	sxth	r3, r3
     fba:	b29b      	uxth	r3, r3
     fbc:	4413      	add	r3, r2
     fbe:	b29b      	uxth	r3, r3
     fc0:	b21b      	sxth	r3, r3
     fc2:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 42U);
     fc4:	89bb      	ldrh	r3, [r7, #12]
     fc6:	b21b      	sxth	r3, r3
     fc8:	2b2a      	cmp	r3, #42	; 0x2a
     fca:	d005      	beq.n	fd8 <TestIntCalc()+0x310>
     fcc:	4b54      	ldr	r3, [pc, #336]	; (1120 <Heap_Size+0x120>)
     fce:	4a55      	ldr	r2, [pc, #340]	; (1124 <Heap_Size+0x124>)
     fd0:	2146      	movs	r1, #70	; 0x46
     fd2:	4855      	ldr	r0, [pc, #340]	; (1128 <Heap_Size+0x128>)
     fd4:	f00a fe12 	bl	bbfc <__assert_func>

  // -----------------------------
  // 32-bit
  // -----------------------------
  volatile int32_t accu32 = 50;
     fd8:	2332      	movs	r3, #50	; 0x32
     fda:	60bb      	str	r3, [r7, #8]

  accu32 += 52;
     fdc:	68bb      	ldr	r3, [r7, #8]
     fde:	3334      	adds	r3, #52	; 0x34
     fe0:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 102);
     fe2:	68bb      	ldr	r3, [r7, #8]
     fe4:	2b66      	cmp	r3, #102	; 0x66
     fe6:	d005      	beq.n	ff4 <TestIntCalc()+0x32c>
     fe8:	4b50      	ldr	r3, [pc, #320]	; (112c <Heap_Size+0x12c>)
     fea:	4a4e      	ldr	r2, [pc, #312]	; (1124 <Heap_Size+0x124>)
     fec:	214e      	movs	r1, #78	; 0x4e
     fee:	484e      	ldr	r0, [pc, #312]	; (1128 <Heap_Size+0x128>)
     ff0:	f00a fe04 	bl	bbfc <__assert_func>

  accu32 = accu32 - 138;
     ff4:	68bb      	ldr	r3, [r7, #8]
     ff6:	3b8a      	subs	r3, #138	; 0x8a
     ff8:	60bb      	str	r3, [r7, #8]
  assert(accu32 == -36);
     ffa:	68bb      	ldr	r3, [r7, #8]
     ffc:	f113 0f24 	cmn.w	r3, #36	; 0x24
    1000:	d005      	beq.n	100e <Heap_Size+0xe>
    1002:	4b4b      	ldr	r3, [pc, #300]	; (1130 <Heap_Size+0x130>)
    1004:	4a47      	ldr	r2, [pc, #284]	; (1124 <Heap_Size+0x124>)
    1006:	2151      	movs	r1, #81	; 0x51
    1008:	4847      	ldr	r0, [pc, #284]	; (1128 <Heap_Size+0x128>)
    100a:	f00a fdf7 	bl	bbfc <__assert_func>

  accu32 *= 3;
    100e:	68ba      	ldr	r2, [r7, #8]
    1010:	4613      	mov	r3, r2
    1012:	005b      	lsls	r3, r3, #1
    1014:	4413      	add	r3, r2
    1016:	60bb      	str	r3, [r7, #8]
  assert(accu32 == -108);
    1018:	68bb      	ldr	r3, [r7, #8]
    101a:	f113 0f6c 	cmn.w	r3, #108	; 0x6c
    101e:	d005      	beq.n	102c <Heap_Size+0x2c>
    1020:	4b44      	ldr	r3, [pc, #272]	; (1134 <Heap_Size+0x134>)
    1022:	4a40      	ldr	r2, [pc, #256]	; (1124 <Heap_Size+0x124>)
    1024:	2154      	movs	r1, #84	; 0x54
    1026:	4840      	ldr	r0, [pc, #256]	; (1128 <Heap_Size+0x128>)
    1028:	f00a fde8 	bl	bbfc <__assert_func>

  accu32 -= 12;
    102c:	68bb      	ldr	r3, [r7, #8]
    102e:	3b0c      	subs	r3, #12
    1030:	60bb      	str	r3, [r7, #8]
  assert(accu32 == -120);
    1032:	68bb      	ldr	r3, [r7, #8]
    1034:	f113 0f78 	cmn.w	r3, #120	; 0x78
    1038:	d005      	beq.n	1046 <Heap_Size+0x46>
    103a:	4b3f      	ldr	r3, [pc, #252]	; (1138 <Heap_Size+0x138>)
    103c:	4a39      	ldr	r2, [pc, #228]	; (1124 <Heap_Size+0x124>)
    103e:	2157      	movs	r1, #87	; 0x57
    1040:	4839      	ldr	r0, [pc, #228]	; (1128 <Heap_Size+0x128>)
    1042:	f00a fddb 	bl	bbfc <__assert_func>

  accu32 /= -12;
    1046:	68bb      	ldr	r3, [r7, #8]
    1048:	4a3c      	ldr	r2, [pc, #240]	; (113c <Heap_Size+0x13c>)
    104a:	fb82 1203 	smull	r1, r2, r2, r3
    104e:	1052      	asrs	r2, r2, #1
    1050:	17db      	asrs	r3, r3, #31
    1052:	1a9b      	subs	r3, r3, r2
    1054:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 10);
    1056:	68bb      	ldr	r3, [r7, #8]
    1058:	2b0a      	cmp	r3, #10
    105a:	d005      	beq.n	1068 <Heap_Size+0x68>
    105c:	4b38      	ldr	r3, [pc, #224]	; (1140 <Heap_Size+0x140>)
    105e:	4a31      	ldr	r2, [pc, #196]	; (1124 <Heap_Size+0x124>)
    1060:	215a      	movs	r1, #90	; 0x5a
    1062:	4831      	ldr	r0, [pc, #196]	; (1128 <Heap_Size+0x128>)
    1064:	f00a fdca 	bl	bbfc <__assert_func>

  // overflow tests
  accu32 = -2147483648;
    1068:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    106c:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 - 10;
    106e:	68bb      	ldr	r3, [r7, #8]
    1070:	3b0a      	subs	r3, #10
    1072:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 2147483638);
    1074:	68bb      	ldr	r3, [r7, #8]
    1076:	4a33      	ldr	r2, [pc, #204]	; (1144 <Heap_Size+0x144>)
    1078:	4293      	cmp	r3, r2
    107a:	d005      	beq.n	1088 <Heap_Size+0x88>
    107c:	4b32      	ldr	r3, [pc, #200]	; (1148 <Heap_Size+0x148>)
    107e:	4a29      	ldr	r2, [pc, #164]	; (1124 <Heap_Size+0x124>)
    1080:	215f      	movs	r1, #95	; 0x5f
    1082:	4829      	ldr	r0, [pc, #164]	; (1128 <Heap_Size+0x128>)
    1084:	f00a fdba 	bl	bbfc <__assert_func>

  // accumulate tests
  accu32 = 1U;
    1088:	2301      	movs	r3, #1
    108a:	60bb      	str	r3, [r7, #8]

  accu32 = accu32 * accu32 + accu32; // 2
    108c:	68bb      	ldr	r3, [r7, #8]
    108e:	68ba      	ldr	r2, [r7, #8]
    1090:	fb03 f202 	mul.w	r2, r3, r2
    1094:	68bb      	ldr	r3, [r7, #8]
    1096:	4413      	add	r3, r2
    1098:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 6
    109a:	68bb      	ldr	r3, [r7, #8]
    109c:	68ba      	ldr	r2, [r7, #8]
    109e:	fb03 f202 	mul.w	r2, r3, r2
    10a2:	68bb      	ldr	r3, [r7, #8]
    10a4:	4413      	add	r3, r2
    10a6:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 42
    10a8:	68bb      	ldr	r3, [r7, #8]
    10aa:	68ba      	ldr	r2, [r7, #8]
    10ac:	fb03 f202 	mul.w	r2, r3, r2
    10b0:	68bb      	ldr	r3, [r7, #8]
    10b2:	4413      	add	r3, r2
    10b4:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 42U);
    10b6:	68bb      	ldr	r3, [r7, #8]
    10b8:	2b2a      	cmp	r3, #42	; 0x2a
    10ba:	d005      	beq.n	10c8 <Heap_Size+0xc8>
    10bc:	4b23      	ldr	r3, [pc, #140]	; (114c <Heap_Size+0x14c>)
    10be:	4a19      	ldr	r2, [pc, #100]	; (1124 <Heap_Size+0x124>)
    10c0:	2167      	movs	r1, #103	; 0x67
    10c2:	4819      	ldr	r0, [pc, #100]	; (1128 <Heap_Size+0x128>)
    10c4:	f00a fd9a 	bl	bbfc <__assert_func>

  // -----------------------------
  // 32-bit Modulo Tests
  // -----------------------------

  volatile int32_t a = 0x80000000;
    10c8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    10cc:	607b      	str	r3, [r7, #4]
  volatile int32_t b = 0x80000000;
    10ce:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    10d2:	603b      	str	r3, [r7, #0]

  assert((a % b) == 0);
    10d4:	687b      	ldr	r3, [r7, #4]
    10d6:	683a      	ldr	r2, [r7, #0]
    10d8:	fb93 f1f2 	sdiv	r1, r3, r2
    10dc:	fb01 f202 	mul.w	r2, r1, r2
    10e0:	1a9b      	subs	r3, r3, r2
    10e2:	2b00      	cmp	r3, #0
    10e4:	d005      	beq.n	10f2 <Heap_Size+0xf2>
    10e6:	4b1a      	ldr	r3, [pc, #104]	; (1150 <Heap_Size+0x150>)
    10e8:	4a0e      	ldr	r2, [pc, #56]	; (1124 <Heap_Size+0x124>)
    10ea:	2170      	movs	r1, #112	; 0x70
    10ec:	480e      	ldr	r0, [pc, #56]	; (1128 <Heap_Size+0x128>)
    10ee:	f00a fd85 	bl	bbfc <__assert_func>

  a += 1U;
    10f2:	687b      	ldr	r3, [r7, #4]
    10f4:	3301      	adds	r3, #1
    10f6:	607b      	str	r3, [r7, #4]
  assert((a % b) == 0x80000001); // signed divison result
    10f8:	687b      	ldr	r3, [r7, #4]
    10fa:	683a      	ldr	r2, [r7, #0]
    10fc:	fb93 f1f2 	sdiv	r1, r3, r2
    1100:	fb01 f202 	mul.w	r2, r1, r2
    1104:	1a9b      	subs	r3, r3, r2
    1106:	4a13      	ldr	r2, [pc, #76]	; (1154 <Heap_Size+0x154>)
    1108:	4293      	cmp	r3, r2
    110a:	d005      	beq.n	1118 <Heap_Size+0x118>
    110c:	4b12      	ldr	r3, [pc, #72]	; (1158 <Heap_Size+0x158>)
    110e:	4a05      	ldr	r2, [pc, #20]	; (1124 <Heap_Size+0x124>)
    1110:	2173      	movs	r1, #115	; 0x73
    1112:	4805      	ldr	r0, [pc, #20]	; (1128 <Heap_Size+0x128>)
    1114:	f00a fd72 	bl	bbfc <__assert_func>
    1118:	bf00      	nop
    111a:	3710      	adds	r7, #16
    111c:	46bd      	mov	sp, r7
    111e:	bd80      	pop	{r7, pc}
    1120:	00017b5c 	.word	0x00017b5c
    1124:	00017a40 	.word	0x00017a40
    1128:	00017a54 	.word	0x00017a54
    112c:	00017b6c 	.word	0x00017b6c
    1130:	00017b7c 	.word	0x00017b7c
    1134:	00017b8c 	.word	0x00017b8c
    1138:	00017b9c 	.word	0x00017b9c
    113c:	2aaaaaab 	.word	0x2aaaaaab
    1140:	00017bac 	.word	0x00017bac
    1144:	7ffffff6 	.word	0x7ffffff6
    1148:	00017bbc 	.word	0x00017bbc
    114c:	00017bd4 	.word	0x00017bd4
    1150:	00017be4 	.word	0x00017be4
    1154:	80000001 	.word	0x80000001
    1158:	00017bf4 	.word	0x00017bf4

0000115c <TestUIntCalc()>:
#include "test_uint_calc.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

void TestUIntCalc() {
    115c:	b580      	push	{r7, lr}
    115e:	b084      	sub	sp, #16
    1160:	af00      	add	r7, sp, #0
  printf("# Test: Simple calculations with unsigned integers\n");
    1162:	4893      	ldr	r0, [pc, #588]	; (13b0 <TestUIntCalc()+0x254>)
    1164:	f00b fdf0 	bl	cd48 <puts>
  // -----------------------------
  // 8-bit
  // -----------------------------
  volatile uint8_t accu8 = 123U;
    1168:	237b      	movs	r3, #123	; 0x7b
    116a:	73fb      	strb	r3, [r7, #15]

  accu8 += 123U;
    116c:	7bfb      	ldrb	r3, [r7, #15]
    116e:	b2db      	uxtb	r3, r3
    1170:	337b      	adds	r3, #123	; 0x7b
    1172:	b2db      	uxtb	r3, r3
    1174:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 246U);
    1176:	7bfb      	ldrb	r3, [r7, #15]
    1178:	b2db      	uxtb	r3, r3
    117a:	2bf6      	cmp	r3, #246	; 0xf6
    117c:	d005      	beq.n	118a <TestUIntCalc()+0x2e>
    117e:	4b8d      	ldr	r3, [pc, #564]	; (13b4 <TestUIntCalc()+0x258>)
    1180:	4a8d      	ldr	r2, [pc, #564]	; (13b8 <TestUIntCalc()+0x25c>)
    1182:	210e      	movs	r1, #14
    1184:	488d      	ldr	r0, [pc, #564]	; (13bc <TestUIntCalc()+0x260>)
    1186:	f00a fd39 	bl	bbfc <__assert_func>

  accu8 = accu8 - 238U;
    118a:	7bfb      	ldrb	r3, [r7, #15]
    118c:	b2db      	uxtb	r3, r3
    118e:	3312      	adds	r3, #18
    1190:	b2db      	uxtb	r3, r3
    1192:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 8U);
    1194:	7bfb      	ldrb	r3, [r7, #15]
    1196:	b2db      	uxtb	r3, r3
    1198:	2b08      	cmp	r3, #8
    119a:	d005      	beq.n	11a8 <TestUIntCalc()+0x4c>
    119c:	4b88      	ldr	r3, [pc, #544]	; (13c0 <TestUIntCalc()+0x264>)
    119e:	4a86      	ldr	r2, [pc, #536]	; (13b8 <TestUIntCalc()+0x25c>)
    11a0:	2111      	movs	r1, #17
    11a2:	4886      	ldr	r0, [pc, #536]	; (13bc <TestUIntCalc()+0x260>)
    11a4:	f00a fd2a 	bl	bbfc <__assert_func>

  accu8 *= 7U;
    11a8:	7bfb      	ldrb	r3, [r7, #15]
    11aa:	b2db      	uxtb	r3, r3
    11ac:	461a      	mov	r2, r3
    11ae:	00d2      	lsls	r2, r2, #3
    11b0:	1ad3      	subs	r3, r2, r3
    11b2:	b2db      	uxtb	r3, r3
    11b4:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 56U);
    11b6:	7bfb      	ldrb	r3, [r7, #15]
    11b8:	b2db      	uxtb	r3, r3
    11ba:	2b38      	cmp	r3, #56	; 0x38
    11bc:	d005      	beq.n	11ca <TestUIntCalc()+0x6e>
    11be:	4b81      	ldr	r3, [pc, #516]	; (13c4 <TestUIntCalc()+0x268>)
    11c0:	4a7d      	ldr	r2, [pc, #500]	; (13b8 <TestUIntCalc()+0x25c>)
    11c2:	2114      	movs	r1, #20
    11c4:	487d      	ldr	r0, [pc, #500]	; (13bc <TestUIntCalc()+0x260>)
    11c6:	f00a fd19 	bl	bbfc <__assert_func>

  accu8 -= 57U;
    11ca:	7bfb      	ldrb	r3, [r7, #15]
    11cc:	b2db      	uxtb	r3, r3
    11ce:	3b39      	subs	r3, #57	; 0x39
    11d0:	b2db      	uxtb	r3, r3
    11d2:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 255U);
    11d4:	7bfb      	ldrb	r3, [r7, #15]
    11d6:	b2db      	uxtb	r3, r3
    11d8:	2bff      	cmp	r3, #255	; 0xff
    11da:	d005      	beq.n	11e8 <TestUIntCalc()+0x8c>
    11dc:	4b7a      	ldr	r3, [pc, #488]	; (13c8 <TestUIntCalc()+0x26c>)
    11de:	4a76      	ldr	r2, [pc, #472]	; (13b8 <TestUIntCalc()+0x25c>)
    11e0:	2117      	movs	r1, #23
    11e2:	4876      	ldr	r0, [pc, #472]	; (13bc <TestUIntCalc()+0x260>)
    11e4:	f00a fd0a 	bl	bbfc <__assert_func>

  accu8 /= 25U;
    11e8:	7bfb      	ldrb	r3, [r7, #15]
    11ea:	b2db      	uxtb	r3, r3
    11ec:	4a77      	ldr	r2, [pc, #476]	; (13cc <TestUIntCalc()+0x270>)
    11ee:	fba2 2303 	umull	r2, r3, r2, r3
    11f2:	08db      	lsrs	r3, r3, #3
    11f4:	b2db      	uxtb	r3, r3
    11f6:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 10U);
    11f8:	7bfb      	ldrb	r3, [r7, #15]
    11fa:	b2db      	uxtb	r3, r3
    11fc:	2b0a      	cmp	r3, #10
    11fe:	d005      	beq.n	120c <TestUIntCalc()+0xb0>
    1200:	4b73      	ldr	r3, [pc, #460]	; (13d0 <TestUIntCalc()+0x274>)
    1202:	4a6d      	ldr	r2, [pc, #436]	; (13b8 <TestUIntCalc()+0x25c>)
    1204:	211a      	movs	r1, #26
    1206:	486d      	ldr	r0, [pc, #436]	; (13bc <TestUIntCalc()+0x260>)
    1208:	f00a fcf8 	bl	bbfc <__assert_func>

  accu8 = 1U + 2U + (3U * 3U - 9U) * 50U;
    120c:	2303      	movs	r3, #3
    120e:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 3U);
    1210:	7bfb      	ldrb	r3, [r7, #15]
    1212:	b2db      	uxtb	r3, r3
    1214:	2b03      	cmp	r3, #3
    1216:	d005      	beq.n	1224 <TestUIntCalc()+0xc8>
    1218:	4b6e      	ldr	r3, [pc, #440]	; (13d4 <TestUIntCalc()+0x278>)
    121a:	4a67      	ldr	r2, [pc, #412]	; (13b8 <TestUIntCalc()+0x25c>)
    121c:	211d      	movs	r1, #29
    121e:	4867      	ldr	r0, [pc, #412]	; (13bc <TestUIntCalc()+0x260>)
    1220:	f00a fcec 	bl	bbfc <__assert_func>

  // overflow test
  accu8 = 255U;
    1224:	23ff      	movs	r3, #255	; 0xff
    1226:	73fb      	strb	r3, [r7, #15]
  accu8 += 1U;
    1228:	7bfb      	ldrb	r3, [r7, #15]
    122a:	b2db      	uxtb	r3, r3
    122c:	3301      	adds	r3, #1
    122e:	b2db      	uxtb	r3, r3
    1230:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 0U);
    1232:	7bfb      	ldrb	r3, [r7, #15]
    1234:	b2db      	uxtb	r3, r3
    1236:	2b00      	cmp	r3, #0
    1238:	d005      	beq.n	1246 <TestUIntCalc()+0xea>
    123a:	4b67      	ldr	r3, [pc, #412]	; (13d8 <TestUIntCalc()+0x27c>)
    123c:	4a5e      	ldr	r2, [pc, #376]	; (13b8 <TestUIntCalc()+0x25c>)
    123e:	2122      	movs	r1, #34	; 0x22
    1240:	485e      	ldr	r0, [pc, #376]	; (13bc <TestUIntCalc()+0x260>)
    1242:	f00a fcdb 	bl	bbfc <__assert_func>
  accu8 -= 1U;
    1246:	7bfb      	ldrb	r3, [r7, #15]
    1248:	b2db      	uxtb	r3, r3
    124a:	3b01      	subs	r3, #1
    124c:	b2db      	uxtb	r3, r3
    124e:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 255U);
    1250:	7bfb      	ldrb	r3, [r7, #15]
    1252:	b2db      	uxtb	r3, r3
    1254:	2bff      	cmp	r3, #255	; 0xff
    1256:	d005      	beq.n	1264 <TestUIntCalc()+0x108>
    1258:	4b5b      	ldr	r3, [pc, #364]	; (13c8 <TestUIntCalc()+0x26c>)
    125a:	4a57      	ldr	r2, [pc, #348]	; (13b8 <TestUIntCalc()+0x25c>)
    125c:	2124      	movs	r1, #36	; 0x24
    125e:	4857      	ldr	r0, [pc, #348]	; (13bc <TestUIntCalc()+0x260>)
    1260:	f00a fccc 	bl	bbfc <__assert_func>

  // accumulate tests
  accu8 = 1U;
    1264:	2301      	movs	r3, #1
    1266:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 2
    1268:	7bfb      	ldrb	r3, [r7, #15]
    126a:	b2db      	uxtb	r3, r3
    126c:	7bfa      	ldrb	r2, [r7, #15]
    126e:	b2d2      	uxtb	r2, r2
    1270:	fb02 f303 	mul.w	r3, r2, r3
    1274:	b2da      	uxtb	r2, r3
    1276:	7bfb      	ldrb	r3, [r7, #15]
    1278:	b2db      	uxtb	r3, r3
    127a:	4413      	add	r3, r2
    127c:	b2db      	uxtb	r3, r3
    127e:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 6
    1280:	7bfb      	ldrb	r3, [r7, #15]
    1282:	b2db      	uxtb	r3, r3
    1284:	7bfa      	ldrb	r2, [r7, #15]
    1286:	b2d2      	uxtb	r2, r2
    1288:	fb02 f303 	mul.w	r3, r2, r3
    128c:	b2da      	uxtb	r2, r3
    128e:	7bfb      	ldrb	r3, [r7, #15]
    1290:	b2db      	uxtb	r3, r3
    1292:	4413      	add	r3, r2
    1294:	b2db      	uxtb	r3, r3
    1296:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 42
    1298:	7bfb      	ldrb	r3, [r7, #15]
    129a:	b2db      	uxtb	r3, r3
    129c:	7bfa      	ldrb	r2, [r7, #15]
    129e:	b2d2      	uxtb	r2, r2
    12a0:	fb02 f303 	mul.w	r3, r2, r3
    12a4:	b2da      	uxtb	r2, r3
    12a6:	7bfb      	ldrb	r3, [r7, #15]
    12a8:	b2db      	uxtb	r3, r3
    12aa:	4413      	add	r3, r2
    12ac:	b2db      	uxtb	r3, r3
    12ae:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 42U);
    12b0:	7bfb      	ldrb	r3, [r7, #15]
    12b2:	b2db      	uxtb	r3, r3
    12b4:	2b2a      	cmp	r3, #42	; 0x2a
    12b6:	d005      	beq.n	12c4 <TestUIntCalc()+0x168>
    12b8:	4b48      	ldr	r3, [pc, #288]	; (13dc <TestUIntCalc()+0x280>)
    12ba:	4a3f      	ldr	r2, [pc, #252]	; (13b8 <TestUIntCalc()+0x25c>)
    12bc:	212b      	movs	r1, #43	; 0x2b
    12be:	483f      	ldr	r0, [pc, #252]	; (13bc <TestUIntCalc()+0x260>)
    12c0:	f00a fc9c 	bl	bbfc <__assert_func>

  // -----------------------------
  // 16-bit
  // -----------------------------
  volatile uint16_t accu16 = 123U;
    12c4:	237b      	movs	r3, #123	; 0x7b
    12c6:	81bb      	strh	r3, [r7, #12]

  accu16 += 123U;
    12c8:	89bb      	ldrh	r3, [r7, #12]
    12ca:	b29b      	uxth	r3, r3
    12cc:	337b      	adds	r3, #123	; 0x7b
    12ce:	b29b      	uxth	r3, r3
    12d0:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 246U);
    12d2:	89bb      	ldrh	r3, [r7, #12]
    12d4:	b29b      	uxth	r3, r3
    12d6:	2bf6      	cmp	r3, #246	; 0xf6
    12d8:	d005      	beq.n	12e6 <TestUIntCalc()+0x18a>
    12da:	4b41      	ldr	r3, [pc, #260]	; (13e0 <TestUIntCalc()+0x284>)
    12dc:	4a36      	ldr	r2, [pc, #216]	; (13b8 <TestUIntCalc()+0x25c>)
    12de:	2133      	movs	r1, #51	; 0x33
    12e0:	4836      	ldr	r0, [pc, #216]	; (13bc <TestUIntCalc()+0x260>)
    12e2:	f00a fc8b 	bl	bbfc <__assert_func>

  accu16 *= 3U;
    12e6:	89bb      	ldrh	r3, [r7, #12]
    12e8:	b29b      	uxth	r3, r3
    12ea:	461a      	mov	r2, r3
    12ec:	0052      	lsls	r2, r2, #1
    12ee:	4413      	add	r3, r2
    12f0:	b29b      	uxth	r3, r3
    12f2:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 738U);
    12f4:	89bb      	ldrh	r3, [r7, #12]
    12f6:	b29b      	uxth	r3, r3
    12f8:	f240 22e2 	movw	r2, #738	; 0x2e2
    12fc:	4293      	cmp	r3, r2
    12fe:	d005      	beq.n	130c <TestUIntCalc()+0x1b0>
    1300:	4b38      	ldr	r3, [pc, #224]	; (13e4 <TestUIntCalc()+0x288>)
    1302:	4a2d      	ldr	r2, [pc, #180]	; (13b8 <TestUIntCalc()+0x25c>)
    1304:	2136      	movs	r1, #54	; 0x36
    1306:	482d      	ldr	r0, [pc, #180]	; (13bc <TestUIntCalc()+0x260>)
    1308:	f00a fc78 	bl	bbfc <__assert_func>

  accu16 = accu16 - 238U;
    130c:	89bb      	ldrh	r3, [r7, #12]
    130e:	b29b      	uxth	r3, r3
    1310:	3bee      	subs	r3, #238	; 0xee
    1312:	b29b      	uxth	r3, r3
    1314:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 500U);
    1316:	89bb      	ldrh	r3, [r7, #12]
    1318:	b29b      	uxth	r3, r3
    131a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
    131e:	d005      	beq.n	132c <TestUIntCalc()+0x1d0>
    1320:	4b31      	ldr	r3, [pc, #196]	; (13e8 <TestUIntCalc()+0x28c>)
    1322:	4a25      	ldr	r2, [pc, #148]	; (13b8 <TestUIntCalc()+0x25c>)
    1324:	2139      	movs	r1, #57	; 0x39
    1326:	4825      	ldr	r0, [pc, #148]	; (13bc <TestUIntCalc()+0x260>)
    1328:	f00a fc68 	bl	bbfc <__assert_func>

  accu16 /= 25U;
    132c:	89bb      	ldrh	r3, [r7, #12]
    132e:	b29b      	uxth	r3, r3
    1330:	4a26      	ldr	r2, [pc, #152]	; (13cc <TestUIntCalc()+0x270>)
    1332:	fba2 2303 	umull	r2, r3, r2, r3
    1336:	08db      	lsrs	r3, r3, #3
    1338:	b29b      	uxth	r3, r3
    133a:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 20U);
    133c:	89bb      	ldrh	r3, [r7, #12]
    133e:	b29b      	uxth	r3, r3
    1340:	2b14      	cmp	r3, #20
    1342:	d005      	beq.n	1350 <TestUIntCalc()+0x1f4>
    1344:	4b29      	ldr	r3, [pc, #164]	; (13ec <TestUIntCalc()+0x290>)
    1346:	4a1c      	ldr	r2, [pc, #112]	; (13b8 <TestUIntCalc()+0x25c>)
    1348:	213c      	movs	r1, #60	; 0x3c
    134a:	481c      	ldr	r0, [pc, #112]	; (13bc <TestUIntCalc()+0x260>)
    134c:	f00a fc56 	bl	bbfc <__assert_func>

  accu16 = 1U + 2U + (3U * 3U - 9U) * 50U;
    1350:	2303      	movs	r3, #3
    1352:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 3U);
    1354:	89bb      	ldrh	r3, [r7, #12]
    1356:	b29b      	uxth	r3, r3
    1358:	2b03      	cmp	r3, #3
    135a:	d005      	beq.n	1368 <TestUIntCalc()+0x20c>
    135c:	4b24      	ldr	r3, [pc, #144]	; (13f0 <TestUIntCalc()+0x294>)
    135e:	4a16      	ldr	r2, [pc, #88]	; (13b8 <TestUIntCalc()+0x25c>)
    1360:	213f      	movs	r1, #63	; 0x3f
    1362:	4816      	ldr	r0, [pc, #88]	; (13bc <TestUIntCalc()+0x260>)
    1364:	f00a fc4a 	bl	bbfc <__assert_func>

  // overflow test
  accu16 = 65535U;
    1368:	f64f 73ff 	movw	r3, #65535	; 0xffff
    136c:	81bb      	strh	r3, [r7, #12]
  accu16 += 1U;
    136e:	89bb      	ldrh	r3, [r7, #12]
    1370:	b29b      	uxth	r3, r3
    1372:	3301      	adds	r3, #1
    1374:	b29b      	uxth	r3, r3
    1376:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 0U);
    1378:	89bb      	ldrh	r3, [r7, #12]
    137a:	b29b      	uxth	r3, r3
    137c:	2b00      	cmp	r3, #0
    137e:	d005      	beq.n	138c <TestUIntCalc()+0x230>
    1380:	4b1c      	ldr	r3, [pc, #112]	; (13f4 <TestUIntCalc()+0x298>)
    1382:	4a0d      	ldr	r2, [pc, #52]	; (13b8 <TestUIntCalc()+0x25c>)
    1384:	2144      	movs	r1, #68	; 0x44
    1386:	480d      	ldr	r0, [pc, #52]	; (13bc <TestUIntCalc()+0x260>)
    1388:	f00a fc38 	bl	bbfc <__assert_func>
  accu16 -= 1U;
    138c:	89bb      	ldrh	r3, [r7, #12]
    138e:	b29b      	uxth	r3, r3
    1390:	3b01      	subs	r3, #1
    1392:	b29b      	uxth	r3, r3
    1394:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 65535U);
    1396:	89bb      	ldrh	r3, [r7, #12]
    1398:	b29b      	uxth	r3, r3
    139a:	f64f 72ff 	movw	r2, #65535	; 0xffff
    139e:	4293      	cmp	r3, r2
    13a0:	d02c      	beq.n	13fc <TestUIntCalc()+0x2a0>
    13a2:	4b15      	ldr	r3, [pc, #84]	; (13f8 <TestUIntCalc()+0x29c>)
    13a4:	4a04      	ldr	r2, [pc, #16]	; (13b8 <TestUIntCalc()+0x25c>)
    13a6:	2146      	movs	r1, #70	; 0x46
    13a8:	4804      	ldr	r0, [pc, #16]	; (13bc <TestUIntCalc()+0x260>)
    13aa:	f00a fc27 	bl	bbfc <__assert_func>
    13ae:	bf00      	nop
    13b0:	00017c0c 	.word	0x00017c0c
    13b4:	00017c40 	.word	0x00017c40
    13b8:	00017c50 	.word	0x00017c50
    13bc:	00017c64 	.word	0x00017c64
    13c0:	00017cb0 	.word	0x00017cb0
    13c4:	00017cbc 	.word	0x00017cbc
    13c8:	00017ccc 	.word	0x00017ccc
    13cc:	51eb851f 	.word	0x51eb851f
    13d0:	00017cdc 	.word	0x00017cdc
    13d4:	00017cec 	.word	0x00017cec
    13d8:	00017cf8 	.word	0x00017cf8
    13dc:	00017d04 	.word	0x00017d04
    13e0:	00017d14 	.word	0x00017d14
    13e4:	00017d24 	.word	0x00017d24
    13e8:	00017d34 	.word	0x00017d34
    13ec:	00017d44 	.word	0x00017d44
    13f0:	00017d54 	.word	0x00017d54
    13f4:	00017d64 	.word	0x00017d64
    13f8:	00017d74 	.word	0x00017d74

  // accumulate tests
  accu16 = 1U;
    13fc:	2301      	movs	r3, #1
    13fe:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 2
    1400:	89bb      	ldrh	r3, [r7, #12]
    1402:	b29b      	uxth	r3, r3
    1404:	89ba      	ldrh	r2, [r7, #12]
    1406:	b292      	uxth	r2, r2
    1408:	fb02 f303 	mul.w	r3, r2, r3
    140c:	b29a      	uxth	r2, r3
    140e:	89bb      	ldrh	r3, [r7, #12]
    1410:	b29b      	uxth	r3, r3
    1412:	4413      	add	r3, r2
    1414:	b29b      	uxth	r3, r3
    1416:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 6
    1418:	89bb      	ldrh	r3, [r7, #12]
    141a:	b29b      	uxth	r3, r3
    141c:	89ba      	ldrh	r2, [r7, #12]
    141e:	b292      	uxth	r2, r2
    1420:	fb02 f303 	mul.w	r3, r2, r3
    1424:	b29a      	uxth	r2, r3
    1426:	89bb      	ldrh	r3, [r7, #12]
    1428:	b29b      	uxth	r3, r3
    142a:	4413      	add	r3, r2
    142c:	b29b      	uxth	r3, r3
    142e:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 42
    1430:	89bb      	ldrh	r3, [r7, #12]
    1432:	b29b      	uxth	r3, r3
    1434:	89ba      	ldrh	r2, [r7, #12]
    1436:	b292      	uxth	r2, r2
    1438:	fb02 f303 	mul.w	r3, r2, r3
    143c:	b29a      	uxth	r2, r3
    143e:	89bb      	ldrh	r3, [r7, #12]
    1440:	b29b      	uxth	r3, r3
    1442:	4413      	add	r3, r2
    1444:	b29b      	uxth	r3, r3
    1446:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 42U);
    1448:	89bb      	ldrh	r3, [r7, #12]
    144a:	b29b      	uxth	r3, r3
    144c:	2b2a      	cmp	r3, #42	; 0x2a
    144e:	d005      	beq.n	145c <TestUIntCalc()+0x300>
    1450:	4b58      	ldr	r3, [pc, #352]	; (15b4 <TestUIntCalc()+0x458>)
    1452:	4a59      	ldr	r2, [pc, #356]	; (15b8 <TestUIntCalc()+0x45c>)
    1454:	214d      	movs	r1, #77	; 0x4d
    1456:	4859      	ldr	r0, [pc, #356]	; (15bc <TestUIntCalc()+0x460>)
    1458:	f00a fbd0 	bl	bbfc <__assert_func>

  // -----------------------------
  // 32-bit
  // -----------------------------
  volatile uint32_t accu32 = 123U;
    145c:	237b      	movs	r3, #123	; 0x7b
    145e:	60bb      	str	r3, [r7, #8]

  accu32 += 123U;
    1460:	68bb      	ldr	r3, [r7, #8]
    1462:	337b      	adds	r3, #123	; 0x7b
    1464:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 246U);
    1466:	68bb      	ldr	r3, [r7, #8]
    1468:	2bf6      	cmp	r3, #246	; 0xf6
    146a:	d005      	beq.n	1478 <TestUIntCalc()+0x31c>
    146c:	4b54      	ldr	r3, [pc, #336]	; (15c0 <TestUIntCalc()+0x464>)
    146e:	4a52      	ldr	r2, [pc, #328]	; (15b8 <TestUIntCalc()+0x45c>)
    1470:	2155      	movs	r1, #85	; 0x55
    1472:	4852      	ldr	r0, [pc, #328]	; (15bc <TestUIntCalc()+0x460>)
    1474:	f00a fbc2 	bl	bbfc <__assert_func>

  accu32 *= 3U;
    1478:	68ba      	ldr	r2, [r7, #8]
    147a:	4613      	mov	r3, r2
    147c:	005b      	lsls	r3, r3, #1
    147e:	4413      	add	r3, r2
    1480:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 738U);
    1482:	68bb      	ldr	r3, [r7, #8]
    1484:	f240 22e2 	movw	r2, #738	; 0x2e2
    1488:	4293      	cmp	r3, r2
    148a:	d005      	beq.n	1498 <TestUIntCalc()+0x33c>
    148c:	4b4d      	ldr	r3, [pc, #308]	; (15c4 <TestUIntCalc()+0x468>)
    148e:	4a4a      	ldr	r2, [pc, #296]	; (15b8 <TestUIntCalc()+0x45c>)
    1490:	2158      	movs	r1, #88	; 0x58
    1492:	484a      	ldr	r0, [pc, #296]	; (15bc <TestUIntCalc()+0x460>)
    1494:	f00a fbb2 	bl	bbfc <__assert_func>

  accu32 = accu32 - 238U;
    1498:	68bb      	ldr	r3, [r7, #8]
    149a:	3bee      	subs	r3, #238	; 0xee
    149c:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 500U);
    149e:	68bb      	ldr	r3, [r7, #8]
    14a0:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
    14a4:	d005      	beq.n	14b2 <TestUIntCalc()+0x356>
    14a6:	4b48      	ldr	r3, [pc, #288]	; (15c8 <TestUIntCalc()+0x46c>)
    14a8:	4a43      	ldr	r2, [pc, #268]	; (15b8 <TestUIntCalc()+0x45c>)
    14aa:	215b      	movs	r1, #91	; 0x5b
    14ac:	4843      	ldr	r0, [pc, #268]	; (15bc <TestUIntCalc()+0x460>)
    14ae:	f00a fba5 	bl	bbfc <__assert_func>

  accu32 /= 25U;
    14b2:	68bb      	ldr	r3, [r7, #8]
    14b4:	4a45      	ldr	r2, [pc, #276]	; (15cc <TestUIntCalc()+0x470>)
    14b6:	fba2 2303 	umull	r2, r3, r2, r3
    14ba:	08db      	lsrs	r3, r3, #3
    14bc:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 20U);
    14be:	68bb      	ldr	r3, [r7, #8]
    14c0:	2b14      	cmp	r3, #20
    14c2:	d005      	beq.n	14d0 <TestUIntCalc()+0x374>
    14c4:	4b42      	ldr	r3, [pc, #264]	; (15d0 <TestUIntCalc()+0x474>)
    14c6:	4a3c      	ldr	r2, [pc, #240]	; (15b8 <TestUIntCalc()+0x45c>)
    14c8:	215e      	movs	r1, #94	; 0x5e
    14ca:	483c      	ldr	r0, [pc, #240]	; (15bc <TestUIntCalc()+0x460>)
    14cc:	f00a fb96 	bl	bbfc <__assert_func>

  accu32 = 1U + 2U + (3U * 3U - 9U) * 50U;
    14d0:	2303      	movs	r3, #3
    14d2:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 3U);
    14d4:	68bb      	ldr	r3, [r7, #8]
    14d6:	2b03      	cmp	r3, #3
    14d8:	d005      	beq.n	14e6 <TestUIntCalc()+0x38a>
    14da:	4b3e      	ldr	r3, [pc, #248]	; (15d4 <TestUIntCalc()+0x478>)
    14dc:	4a36      	ldr	r2, [pc, #216]	; (15b8 <TestUIntCalc()+0x45c>)
    14de:	2161      	movs	r1, #97	; 0x61
    14e0:	4836      	ldr	r0, [pc, #216]	; (15bc <TestUIntCalc()+0x460>)
    14e2:	f00a fb8b 	bl	bbfc <__assert_func>

  // overflow test
  accu32 = 4294967295U;
    14e6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    14ea:	60bb      	str	r3, [r7, #8]
  accu32 += 1U;
    14ec:	68bb      	ldr	r3, [r7, #8]
    14ee:	3301      	adds	r3, #1
    14f0:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 0U);
    14f2:	68bb      	ldr	r3, [r7, #8]
    14f4:	2b00      	cmp	r3, #0
    14f6:	d005      	beq.n	1504 <TestUIntCalc()+0x3a8>
    14f8:	4b37      	ldr	r3, [pc, #220]	; (15d8 <TestUIntCalc()+0x47c>)
    14fa:	4a2f      	ldr	r2, [pc, #188]	; (15b8 <TestUIntCalc()+0x45c>)
    14fc:	2166      	movs	r1, #102	; 0x66
    14fe:	482f      	ldr	r0, [pc, #188]	; (15bc <TestUIntCalc()+0x460>)
    1500:	f00a fb7c 	bl	bbfc <__assert_func>
  accu32 -= 1U;
    1504:	68bb      	ldr	r3, [r7, #8]
    1506:	3b01      	subs	r3, #1
    1508:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 4294967295U);
    150a:	68bb      	ldr	r3, [r7, #8]
    150c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    1510:	d005      	beq.n	151e <TestUIntCalc()+0x3c2>
    1512:	4b32      	ldr	r3, [pc, #200]	; (15dc <TestUIntCalc()+0x480>)
    1514:	4a28      	ldr	r2, [pc, #160]	; (15b8 <TestUIntCalc()+0x45c>)
    1516:	2168      	movs	r1, #104	; 0x68
    1518:	4828      	ldr	r0, [pc, #160]	; (15bc <TestUIntCalc()+0x460>)
    151a:	f00a fb6f 	bl	bbfc <__assert_func>

  // accumulate tests
  accu32 = 1U;
    151e:	2301      	movs	r3, #1
    1520:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 2
    1522:	68bb      	ldr	r3, [r7, #8]
    1524:	68ba      	ldr	r2, [r7, #8]
    1526:	fb03 f202 	mul.w	r2, r3, r2
    152a:	68bb      	ldr	r3, [r7, #8]
    152c:	4413      	add	r3, r2
    152e:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 6
    1530:	68bb      	ldr	r3, [r7, #8]
    1532:	68ba      	ldr	r2, [r7, #8]
    1534:	fb03 f202 	mul.w	r2, r3, r2
    1538:	68bb      	ldr	r3, [r7, #8]
    153a:	4413      	add	r3, r2
    153c:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 42
    153e:	68bb      	ldr	r3, [r7, #8]
    1540:	68ba      	ldr	r2, [r7, #8]
    1542:	fb03 f202 	mul.w	r2, r3, r2
    1546:	68bb      	ldr	r3, [r7, #8]
    1548:	4413      	add	r3, r2
    154a:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 42U);
    154c:	68bb      	ldr	r3, [r7, #8]
    154e:	2b2a      	cmp	r3, #42	; 0x2a
    1550:	d005      	beq.n	155e <TestUIntCalc()+0x402>
    1552:	4b23      	ldr	r3, [pc, #140]	; (15e0 <TestUIntCalc()+0x484>)
    1554:	4a18      	ldr	r2, [pc, #96]	; (15b8 <TestUIntCalc()+0x45c>)
    1556:	216f      	movs	r1, #111	; 0x6f
    1558:	4818      	ldr	r0, [pc, #96]	; (15bc <TestUIntCalc()+0x460>)
    155a:	f00a fb4f 	bl	bbfc <__assert_func>

  // -----------------------------
  // 32-bit Modulo
  // -----------------------------

  volatile uint32_t a = 0x80000000U;
    155e:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    1562:	607b      	str	r3, [r7, #4]
  volatile uint32_t b = 0x80000000U;
    1564:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    1568:	603b      	str	r3, [r7, #0]

  assert((a % b) == 0U);
    156a:	687b      	ldr	r3, [r7, #4]
    156c:	683a      	ldr	r2, [r7, #0]
    156e:	fbb3 f1f2 	udiv	r1, r3, r2
    1572:	fb01 f202 	mul.w	r2, r1, r2
    1576:	1a9b      	subs	r3, r3, r2
    1578:	2b00      	cmp	r3, #0
    157a:	d005      	beq.n	1588 <TestUIntCalc()+0x42c>
    157c:	4b19      	ldr	r3, [pc, #100]	; (15e4 <TestUIntCalc()+0x488>)
    157e:	4a0e      	ldr	r2, [pc, #56]	; (15b8 <TestUIntCalc()+0x45c>)
    1580:	2178      	movs	r1, #120	; 0x78
    1582:	480e      	ldr	r0, [pc, #56]	; (15bc <TestUIntCalc()+0x460>)
    1584:	f00a fb3a 	bl	bbfc <__assert_func>

  a += 1U;
    1588:	687b      	ldr	r3, [r7, #4]
    158a:	3301      	adds	r3, #1
    158c:	607b      	str	r3, [r7, #4]
  assert((a % b) == 1U);
    158e:	687b      	ldr	r3, [r7, #4]
    1590:	683a      	ldr	r2, [r7, #0]
    1592:	fbb3 f1f2 	udiv	r1, r3, r2
    1596:	fb01 f202 	mul.w	r2, r1, r2
    159a:	1a9b      	subs	r3, r3, r2
    159c:	2b01      	cmp	r3, #1
    159e:	d005      	beq.n	15ac <TestUIntCalc()+0x450>
    15a0:	4b11      	ldr	r3, [pc, #68]	; (15e8 <TestUIntCalc()+0x48c>)
    15a2:	4a05      	ldr	r2, [pc, #20]	; (15b8 <TestUIntCalc()+0x45c>)
    15a4:	217b      	movs	r1, #123	; 0x7b
    15a6:	4805      	ldr	r0, [pc, #20]	; (15bc <TestUIntCalc()+0x460>)
    15a8:	f00a fb28 	bl	bbfc <__assert_func>
    15ac:	bf00      	nop
    15ae:	3710      	adds	r7, #16
    15b0:	46bd      	mov	sp, r7
    15b2:	bd80      	pop	{r7, pc}
    15b4:	00017d88 	.word	0x00017d88
    15b8:	00017c50 	.word	0x00017c50
    15bc:	00017c64 	.word	0x00017c64
    15c0:	00017d98 	.word	0x00017d98
    15c4:	00017da8 	.word	0x00017da8
    15c8:	00017db8 	.word	0x00017db8
    15cc:	51eb851f 	.word	0x51eb851f
    15d0:	00017dc8 	.word	0x00017dc8
    15d4:	00017dd8 	.word	0x00017dd8
    15d8:	00017de8 	.word	0x00017de8
    15dc:	00017df8 	.word	0x00017df8
    15e0:	00017e10 	.word	0x00017e10
    15e4:	00017e20 	.word	0x00017e20
    15e8:	00017e30 	.word	0x00017e30

000015ec <BranchTest(long)>:
#include "test_if_then_else.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

uint32_t BranchTest(volatile int32_t arg) {
    15ec:	b480      	push	{r7}
    15ee:	b083      	sub	sp, #12
    15f0:	af00      	add	r7, sp, #0
    15f2:	6078      	str	r0, [r7, #4]
  if (arg > 0) {
    15f4:	687b      	ldr	r3, [r7, #4]
    15f6:	2b00      	cmp	r3, #0
    15f8:	bfcc      	ite	gt
    15fa:	2301      	movgt	r3, #1
    15fc:	2300      	movle	r3, #0
    15fe:	b2db      	uxtb	r3, r3
    1600:	2b00      	cmp	r3, #0
    1602:	d001      	beq.n	1608 <BranchTest(long)+0x1c>
    return 1U;
    1604:	2301      	movs	r3, #1
    1606:	e026      	b.n	1656 <BranchTest(long)+0x6a>
  } else if (arg >= 5) {
    1608:	687b      	ldr	r3, [r7, #4]
    160a:	2b04      	cmp	r3, #4
    160c:	bfcc      	ite	gt
    160e:	2301      	movgt	r3, #1
    1610:	2300      	movle	r3, #0
    1612:	b2db      	uxtb	r3, r3
    1614:	2b00      	cmp	r3, #0
    1616:	d001      	beq.n	161c <BranchTest(long)+0x30>
    return 2U;
    1618:	2302      	movs	r3, #2
    161a:	e01c      	b.n	1656 <BranchTest(long)+0x6a>
  } else if (arg >= 10) {
    161c:	687b      	ldr	r3, [r7, #4]
    161e:	2b09      	cmp	r3, #9
    1620:	bfcc      	ite	gt
    1622:	2301      	movgt	r3, #1
    1624:	2300      	movle	r3, #0
    1626:	b2db      	uxtb	r3, r3
    1628:	2b00      	cmp	r3, #0
    162a:	d001      	beq.n	1630 <BranchTest(long)+0x44>
    return 3U;
    162c:	2303      	movs	r3, #3
    162e:	e012      	b.n	1656 <BranchTest(long)+0x6a>
  } else if (arg < -10) {
    1630:	687b      	ldr	r3, [r7, #4]
    1632:	f113 0f0a 	cmn.w	r3, #10
    1636:	bfb4      	ite	lt
    1638:	2301      	movlt	r3, #1
    163a:	2300      	movge	r3, #0
    163c:	b2db      	uxtb	r3, r3
    163e:	2b00      	cmp	r3, #0
    1640:	d001      	beq.n	1646 <BranchTest(long)+0x5a>
    return 4U;
    1642:	2304      	movs	r3, #4
    1644:	e007      	b.n	1656 <BranchTest(long)+0x6a>
  } else if (arg < 0) {
    1646:	687b      	ldr	r3, [r7, #4]
    1648:	0fdb      	lsrs	r3, r3, #31
    164a:	b2db      	uxtb	r3, r3
    164c:	2b00      	cmp	r3, #0
    164e:	d001      	beq.n	1654 <BranchTest(long)+0x68>
    return 5U;
    1650:	2305      	movs	r3, #5
    1652:	e000      	b.n	1656 <BranchTest(long)+0x6a>
  }
  return 0U;
    1654:	2300      	movs	r3, #0
}
    1656:	4618      	mov	r0, r3
    1658:	370c      	adds	r7, #12
    165a:	46bd      	mov	sp, r7
    165c:	bc80      	pop	{r7}
    165e:	4770      	bx	lr

00001660 <TestIfThenElse()>:

void TestIfThenElse() {
    1660:	b580      	push	{r7, lr}
    1662:	b082      	sub	sp, #8
    1664:	af00      	add	r7, sp, #0
  printf("# Test: If then else\n");
    1666:	481b      	ldr	r0, [pc, #108]	; (16d4 <TestIfThenElse()+0x74>)
    1668:	f00b fb6e 	bl	cd48 <puts>
  volatile int32_t arg = -5;
    166c:	f06f 0304 	mvn.w	r3, #4
    1670:	607b      	str	r3, [r7, #4]
  assert(BranchTest(arg) == 5U);
    1672:	687b      	ldr	r3, [r7, #4]
    1674:	4618      	mov	r0, r3
    1676:	f7ff ffb9 	bl	15ec <BranchTest(long)>
    167a:	4603      	mov	r3, r0
    167c:	2b05      	cmp	r3, #5
    167e:	d005      	beq.n	168c <TestIfThenElse()+0x2c>
    1680:	4b15      	ldr	r3, [pc, #84]	; (16d8 <TestIfThenElse()+0x78>)
    1682:	4a16      	ldr	r2, [pc, #88]	; (16dc <TestIfThenElse()+0x7c>)
    1684:	2118      	movs	r1, #24
    1686:	4816      	ldr	r0, [pc, #88]	; (16e0 <TestIfThenElse()+0x80>)
    1688:	f00a fab8 	bl	bbfc <__assert_func>
  arg = -11;
    168c:	f06f 030a 	mvn.w	r3, #10
    1690:	607b      	str	r3, [r7, #4]
  assert(BranchTest(arg) == 4U);
    1692:	687b      	ldr	r3, [r7, #4]
    1694:	4618      	mov	r0, r3
    1696:	f7ff ffa9 	bl	15ec <BranchTest(long)>
    169a:	4603      	mov	r3, r0
    169c:	2b04      	cmp	r3, #4
    169e:	d005      	beq.n	16ac <TestIfThenElse()+0x4c>
    16a0:	4b10      	ldr	r3, [pc, #64]	; (16e4 <TestIfThenElse()+0x84>)
    16a2:	4a0e      	ldr	r2, [pc, #56]	; (16dc <TestIfThenElse()+0x7c>)
    16a4:	211a      	movs	r1, #26
    16a6:	480e      	ldr	r0, [pc, #56]	; (16e0 <TestIfThenElse()+0x80>)
    16a8:	f00a faa8 	bl	bbfc <__assert_func>
  arg = 3;
    16ac:	2303      	movs	r3, #3
    16ae:	607b      	str	r3, [r7, #4]
  assert(BranchTest(arg) == 1U);
    16b0:	687b      	ldr	r3, [r7, #4]
    16b2:	4618      	mov	r0, r3
    16b4:	f7ff ff9a 	bl	15ec <BranchTest(long)>
    16b8:	4603      	mov	r3, r0
    16ba:	2b01      	cmp	r3, #1
    16bc:	d005      	beq.n	16ca <TestIfThenElse()+0x6a>
    16be:	4b0a      	ldr	r3, [pc, #40]	; (16e8 <TestIfThenElse()+0x88>)
    16c0:	4a06      	ldr	r2, [pc, #24]	; (16dc <TestIfThenElse()+0x7c>)
    16c2:	211c      	movs	r1, #28
    16c4:	4806      	ldr	r0, [pc, #24]	; (16e0 <TestIfThenElse()+0x80>)
    16c6:	f00a fa99 	bl	bbfc <__assert_func>
    16ca:	bf00      	nop
    16cc:	3708      	adds	r7, #8
    16ce:	46bd      	mov	sp, r7
    16d0:	bd80      	pop	{r7, pc}
    16d2:	bf00      	nop
    16d4:	00017e40 	.word	0x00017e40
    16d8:	00017e58 	.word	0x00017e58
    16dc:	00017e70 	.word	0x00017e70
    16e0:	00017e88 	.word	0x00017e88
    16e4:	00017ed8 	.word	0x00017ed8
    16e8:	00017ef0 	.word	0x00017ef0

000016ec <TestTypeCasting()>:
#include <assert.h>
#include <cstring>
#include <stdint.h>
#include <stdio.h>

void TestTypeCasting() {
    16ec:	b580      	push	{r7, lr}
    16ee:	b08c      	sub	sp, #48	; 0x30
    16f0:	af00      	add	r7, sp, #0
  printf("# Test: Type casting\n");
    16f2:	4823      	ldr	r0, [pc, #140]	; (1780 <TestTypeCasting()+0x94>)
    16f4:	f00b fb28 	bl	cd48 <puts>
  volatile uint64_t u64 = 12345U;
    16f8:	f243 0239 	movw	r2, #12345	; 0x3039
    16fc:	f04f 0300 	mov.w	r3, #0
    1700:	e9c7 2308 	strd	r2, r3, [r7, #32]
  volatile uint32_t u32 = static_cast<uint32_t>(u64);
    1704:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
    1708:	4613      	mov	r3, r2
    170a:	61fb      	str	r3, [r7, #28]
  assert(u32 == 12345U);
    170c:	69fb      	ldr	r3, [r7, #28]
    170e:	f243 0239 	movw	r2, #12345	; 0x3039
    1712:	4293      	cmp	r3, r2
    1714:	d005      	beq.n	1722 <TestTypeCasting()+0x36>
    1716:	4b1b      	ldr	r3, [pc, #108]	; (1784 <TestTypeCasting()+0x98>)
    1718:	4a1b      	ldr	r2, [pc, #108]	; (1788 <TestTypeCasting()+0x9c>)
    171a:	210b      	movs	r1, #11
    171c:	481b      	ldr	r0, [pc, #108]	; (178c <TestTypeCasting()+0xa0>)
    171e:	f00a fa6d 	bl	bbfc <__assert_func>

  uint64_t u64_cpy = u64;
    1722:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
    1726:	e9c7 2304 	strd	r2, r3, [r7, #16]
  volatile uint32_t u32_cpy = static_cast<uint32_t>(u64_cpy);
    172a:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
    172e:	4613      	mov	r3, r2
    1730:	60fb      	str	r3, [r7, #12]
  assert(u32_cpy == 12345U);
    1732:	68fb      	ldr	r3, [r7, #12]
    1734:	f243 0239 	movw	r2, #12345	; 0x3039
    1738:	4293      	cmp	r3, r2
    173a:	d005      	beq.n	1748 <TestTypeCasting()+0x5c>
    173c:	4b14      	ldr	r3, [pc, #80]	; (1790 <TestTypeCasting()+0xa4>)
    173e:	4a12      	ldr	r2, [pc, #72]	; (1788 <TestTypeCasting()+0x9c>)
    1740:	210f      	movs	r1, #15
    1742:	4812      	ldr	r0, [pc, #72]	; (178c <TestTypeCasting()+0xa0>)
    1744:	f00a fa5a 	bl	bbfc <__assert_func>

  uint64_t u64_mcpy = 0x0U;
    1748:	f04f 0200 	mov.w	r2, #0
    174c:	f04f 0300 	mov.w	r3, #0
    1750:	e9c7 2300 	strd	r2, r3, [r7]
    1754:	693b      	ldr	r3, [r7, #16]
  memcpy(&u64_mcpy, &u64_cpy, 4U);
    1756:	603b      	str	r3, [r7, #0]
  uint32_t u32_mcpy = static_cast<uint32_t>(u64_mcpy);
    1758:	e9d7 2300 	ldrd	r2, r3, [r7]
    175c:	4613      	mov	r3, r2
    175e:	62fb      	str	r3, [r7, #44]	; 0x2c
  assert(u32_mcpy == 12345U);
    1760:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1762:	f243 0239 	movw	r2, #12345	; 0x3039
    1766:	4293      	cmp	r3, r2
    1768:	d005      	beq.n	1776 <TestTypeCasting()+0x8a>
    176a:	4b0a      	ldr	r3, [pc, #40]	; (1794 <TestTypeCasting()+0xa8>)
    176c:	4a06      	ldr	r2, [pc, #24]	; (1788 <TestTypeCasting()+0x9c>)
    176e:	2114      	movs	r1, #20
    1770:	4806      	ldr	r0, [pc, #24]	; (178c <TestTypeCasting()+0xa0>)
    1772:	f00a fa43 	bl	bbfc <__assert_func>
    1776:	bf00      	nop
    1778:	3730      	adds	r7, #48	; 0x30
    177a:	46bd      	mov	sp, r7
    177c:	bd80      	pop	{r7, pc}
    177e:	bf00      	nop
    1780:	00017f08 	.word	0x00017f08
    1784:	00017f20 	.word	0x00017f20
    1788:	00017f30 	.word	0x00017f30
    178c:	00017f48 	.word	0x00017f48
    1790:	00017f98 	.word	0x00017f98
    1794:	00017fac 	.word	0x00017fac

00001798 <TestPolymorphismn()>:
class Derived : public Base {
public:
  virtual uint32_t Call() override { return 0xAFFE; }
};

void TestPolymorphismn() {
    1798:	b580      	push	{r7, lr}
    179a:	b084      	sub	sp, #16
    179c:	af00      	add	r7, sp, #0
  printf("# Test: Polymorphismn\n");
    179e:	481e      	ldr	r0, [pc, #120]	; (1818 <TestPolymorphismn()+0x80>)
    17a0:	f00b fad2 	bl	cd48 <puts>
  auto derived = Derived();
    17a4:	4b1d      	ldr	r3, [pc, #116]	; (181c <TestPolymorphismn()+0x84>)
    17a6:	60bb      	str	r3, [r7, #8]
  assert(derived.Call() == 0xAFFE);
    17a8:	f107 0308 	add.w	r3, r7, #8
    17ac:	4618      	mov	r0, r3
    17ae:	f000 f851 	bl	1854 <Derived::Call()>
    17b2:	4603      	mov	r3, r0
    17b4:	f64a 72fe 	movw	r2, #45054	; 0xaffe
    17b8:	4293      	cmp	r3, r2
    17ba:	d005      	beq.n	17c8 <TestPolymorphismn()+0x30>
    17bc:	4b18      	ldr	r3, [pc, #96]	; (1820 <TestPolymorphismn()+0x88>)
    17be:	4a19      	ldr	r2, [pc, #100]	; (1824 <TestPolymorphismn()+0x8c>)
    17c0:	2114      	movs	r1, #20
    17c2:	4819      	ldr	r0, [pc, #100]	; (1828 <TestPolymorphismn()+0x90>)
    17c4:	f00a fa1a 	bl	bbfc <__assert_func>
  auto *base = reinterpret_cast<Base *>(&derived);
    17c8:	f107 0308 	add.w	r3, r7, #8
    17cc:	60fb      	str	r3, [r7, #12]
  assert(base->Call() == 0xAFFE);
    17ce:	68fb      	ldr	r3, [r7, #12]
    17d0:	681b      	ldr	r3, [r3, #0]
    17d2:	681b      	ldr	r3, [r3, #0]
    17d4:	68f8      	ldr	r0, [r7, #12]
    17d6:	4798      	blx	r3
    17d8:	4603      	mov	r3, r0
    17da:	f64a 72fe 	movw	r2, #45054	; 0xaffe
    17de:	4293      	cmp	r3, r2
    17e0:	d005      	beq.n	17ee <TestPolymorphismn()+0x56>
    17e2:	4b12      	ldr	r3, [pc, #72]	; (182c <TestPolymorphismn()+0x94>)
    17e4:	4a0f      	ldr	r2, [pc, #60]	; (1824 <TestPolymorphismn()+0x8c>)
    17e6:	2116      	movs	r1, #22
    17e8:	480f      	ldr	r0, [pc, #60]	; (1828 <TestPolymorphismn()+0x90>)
    17ea:	f00a fa07 	bl	bbfc <__assert_func>
  auto base_constructed = Base();
    17ee:	4b10      	ldr	r3, [pc, #64]	; (1830 <TestPolymorphismn()+0x98>)
    17f0:	607b      	str	r3, [r7, #4]
  assert(base_constructed.Call() == 0xBEEFCAFE);
    17f2:	1d3b      	adds	r3, r7, #4
    17f4:	4618      	mov	r0, r3
    17f6:	f000 f821 	bl	183c <Base::Call()>
    17fa:	4603      	mov	r3, r0
    17fc:	4a0d      	ldr	r2, [pc, #52]	; (1834 <TestPolymorphismn()+0x9c>)
    17fe:	4293      	cmp	r3, r2
    1800:	d005      	beq.n	180e <TestPolymorphismn()+0x76>
    1802:	4b0d      	ldr	r3, [pc, #52]	; (1838 <TestPolymorphismn()+0xa0>)
    1804:	4a07      	ldr	r2, [pc, #28]	; (1824 <TestPolymorphismn()+0x8c>)
    1806:	2118      	movs	r1, #24
    1808:	4807      	ldr	r0, [pc, #28]	; (1828 <TestPolymorphismn()+0x90>)
    180a:	f00a f9f7 	bl	bbfc <__assert_func>
    180e:	bf00      	nop
    1810:	3710      	adds	r7, #16
    1812:	46bd      	mov	sp, r7
    1814:	bd80      	pop	{r7, pc}
    1816:	bf00      	nop
    1818:	00017fc0 	.word	0x00017fc0
    181c:	000180a8 	.word	0x000180a8
    1820:	00017fd8 	.word	0x00017fd8
    1824:	00017ff4 	.word	0x00017ff4
    1828:	00018010 	.word	0x00018010
    182c:	00018060 	.word	0x00018060
    1830:	000180b4 	.word	0x000180b4
    1834:	beefcafe 	.word	0xbeefcafe
    1838:	00018078 	.word	0x00018078

0000183c <Base::Call()>:
  virtual uint32_t Call() { return 0xBEEFCAFE; }
    183c:	b480      	push	{r7}
    183e:	b083      	sub	sp, #12
    1840:	af00      	add	r7, sp, #0
    1842:	6078      	str	r0, [r7, #4]
    1844:	4b02      	ldr	r3, [pc, #8]	; (1850 <Base::Call()+0x14>)
    1846:	4618      	mov	r0, r3
    1848:	370c      	adds	r7, #12
    184a:	46bd      	mov	sp, r7
    184c:	bc80      	pop	{r7}
    184e:	4770      	bx	lr
    1850:	beefcafe 	.word	0xbeefcafe

00001854 <Derived::Call()>:
  virtual uint32_t Call() override { return 0xAFFE; }
    1854:	b480      	push	{r7}
    1856:	b083      	sub	sp, #12
    1858:	af00      	add	r7, sp, #0
    185a:	6078      	str	r0, [r7, #4]
    185c:	f64a 73fe 	movw	r3, #45054	; 0xaffe
    1860:	4618      	mov	r0, r3
    1862:	370c      	adds	r7, #12
    1864:	46bd      	mov	sp, r7
    1866:	bc80      	pop	{r7}
    1868:	4770      	bx	lr
	...

0000186c <TableFct0()>:
#include "test_switch_case.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

uint8_t TableFct0() {
    186c:	b480      	push	{r7}
    186e:	b083      	sub	sp, #12
    1870:	af00      	add	r7, sp, #0
  volatile uint32_t temp = 0;
    1872:	2300      	movs	r3, #0
    1874:	607b      	str	r3, [r7, #4]
  static_cast<void>(temp);
    1876:	687b      	ldr	r3, [r7, #4]
  return 0;
    1878:	2300      	movs	r3, #0
}
    187a:	4618      	mov	r0, r3
    187c:	370c      	adds	r7, #12
    187e:	46bd      	mov	sp, r7
    1880:	bc80      	pop	{r7}
    1882:	4770      	bx	lr

00001884 <TableFct1()>:
uint8_t TableFct1() {
    1884:	b480      	push	{r7}
    1886:	b083      	sub	sp, #12
    1888:	af00      	add	r7, sp, #0
  volatile uint64_t temp = 0;
    188a:	f04f 0200 	mov.w	r2, #0
    188e:	f04f 0300 	mov.w	r3, #0
    1892:	e9c7 2300 	strd	r2, r3, [r7]
  static_cast<void>(temp);
    1896:	e9d7 2300 	ldrd	r2, r3, [r7]
  return 1;
    189a:	2301      	movs	r3, #1
}
    189c:	4618      	mov	r0, r3
    189e:	370c      	adds	r7, #12
    18a0:	46bd      	mov	sp, r7
    18a2:	bc80      	pop	{r7}
    18a4:	4770      	bx	lr

000018a6 <TableFct2()>:
uint8_t TableFct2() {
    18a6:	b480      	push	{r7}
    18a8:	b083      	sub	sp, #12
    18aa:	af00      	add	r7, sp, #0
  volatile uint16_t temp = 0;
    18ac:	2300      	movs	r3, #0
    18ae:	80fb      	strh	r3, [r7, #6]
  static_cast<void>(temp);
    18b0:	88fb      	ldrh	r3, [r7, #6]
  return 2;
    18b2:	2302      	movs	r3, #2
}
    18b4:	4618      	mov	r0, r3
    18b6:	370c      	adds	r7, #12
    18b8:	46bd      	mov	sp, r7
    18ba:	bc80      	pop	{r7}
    18bc:	4770      	bx	lr

000018be <TableFct3()>:

uint8_t TableFct3() {
    18be:	b480      	push	{r7}
    18c0:	b083      	sub	sp, #12
    18c2:	af00      	add	r7, sp, #0
  volatile uint8_t temp = 0;
    18c4:	2300      	movs	r3, #0
    18c6:	71fb      	strb	r3, [r7, #7]
  static_cast<void>(temp);
    18c8:	79fb      	ldrb	r3, [r7, #7]
  return 3;
    18ca:	2303      	movs	r3, #3
}
    18cc:	4618      	mov	r0, r3
    18ce:	370c      	adds	r7, #12
    18d0:	46bd      	mov	sp, r7
    18d2:	bc80      	pop	{r7}
    18d4:	4770      	bx	lr

000018d6 <TableFct4()>:

uint8_t TableFct4() {
    18d6:	b480      	push	{r7}
    18d8:	b083      	sub	sp, #12
    18da:	af00      	add	r7, sp, #0
  volatile int8_t temp = 0;
    18dc:	2300      	movs	r3, #0
    18de:	71fb      	strb	r3, [r7, #7]
  static_cast<void>(temp);
    18e0:	79fb      	ldrb	r3, [r7, #7]
  return 4;
    18e2:	2304      	movs	r3, #4
}
    18e4:	4618      	mov	r0, r3
    18e6:	370c      	adds	r7, #12
    18e8:	46bd      	mov	sp, r7
    18ea:	bc80      	pop	{r7}
    18ec:	4770      	bx	lr

000018ee <TableFct5()>:
uint8_t TableFct5() {
    18ee:	b480      	push	{r7}
    18f0:	b083      	sub	sp, #12
    18f2:	af00      	add	r7, sp, #0
  volatile int32_t temp = 0;
    18f4:	2300      	movs	r3, #0
    18f6:	607b      	str	r3, [r7, #4]
  static_cast<void>(temp);
    18f8:	687b      	ldr	r3, [r7, #4]
  return 5;
    18fa:	2305      	movs	r3, #5
}
    18fc:	4618      	mov	r0, r3
    18fe:	370c      	adds	r7, #12
    1900:	46bd      	mov	sp, r7
    1902:	bc80      	pop	{r7}
    1904:	4770      	bx	lr

00001906 <TableFct6()>:
uint8_t TableFct6() {
    1906:	b480      	push	{r7}
    1908:	b083      	sub	sp, #12
    190a:	af00      	add	r7, sp, #0
  volatile int16_t temp = 0;
    190c:	2300      	movs	r3, #0
    190e:	80fb      	strh	r3, [r7, #6]
  static_cast<void>(temp);
    1910:	88fb      	ldrh	r3, [r7, #6]
  return 6;
    1912:	2306      	movs	r3, #6
}
    1914:	4618      	mov	r0, r3
    1916:	370c      	adds	r7, #12
    1918:	46bd      	mov	sp, r7
    191a:	bc80      	pop	{r7}
    191c:	4770      	bx	lr

0000191e <TableFct7()>:

uint8_t TableFct7() {
    191e:	b480      	push	{r7}
    1920:	b083      	sub	sp, #12
    1922:	af00      	add	r7, sp, #0
  volatile int64_t temp = 0;
    1924:	f04f 0200 	mov.w	r2, #0
    1928:	f04f 0300 	mov.w	r3, #0
    192c:	e9c7 2300 	strd	r2, r3, [r7]
  static_cast<void>(temp);
    1930:	e9d7 2300 	ldrd	r2, r3, [r7]
  return 7;
    1934:	2307      	movs	r3, #7
}
    1936:	4618      	mov	r0, r3
    1938:	370c      	adds	r7, #12
    193a:	46bd      	mov	sp, r7
    193c:	bc80      	pop	{r7}
    193e:	4770      	bx	lr

00001940 <TestTableFct1(char)>:

uint32_t TestTableFct1(char buf) {
    1940:	b480      	push	{r7}
    1942:	b083      	sub	sp, #12
    1944:	af00      	add	r7, sp, #0
    1946:	4603      	mov	r3, r0
    1948:	71fb      	strb	r3, [r7, #7]
  switch (buf) {
    194a:	79fb      	ldrb	r3, [r7, #7]
    194c:	2bff      	cmp	r3, #255	; 0xff
    194e:	d057      	beq.n	1a00 <TestTableFct1(char)+0xc0>
    1950:	2bff      	cmp	r3, #255	; 0xff
    1952:	dc57      	bgt.n	1a04 <TestTableFct1(char)+0xc4>
    1954:	2be8      	cmp	r3, #232	; 0xe8
    1956:	d049      	beq.n	19ec <TestTableFct1(char)+0xac>
    1958:	2be8      	cmp	r3, #232	; 0xe8
    195a:	dc53      	bgt.n	1a04 <TestTableFct1(char)+0xc4>
    195c:	2b7d      	cmp	r3, #125	; 0x7d
    195e:	dc51      	bgt.n	1a04 <TestTableFct1(char)+0xc4>
    1960:	2b64      	cmp	r3, #100	; 0x64
    1962:	da04      	bge.n	196e <TestTableFct1(char)+0x2e>
    1964:	2b00      	cmp	r3, #0
    1966:	d03d      	beq.n	19e4 <TestTableFct1(char)+0xa4>
    1968:	2b0c      	cmp	r3, #12
    196a:	d047      	beq.n	19fc <TestTableFct1(char)+0xbc>
    196c:	e04a      	b.n	1a04 <TestTableFct1(char)+0xc4>
    196e:	3b64      	subs	r3, #100	; 0x64
    1970:	2b19      	cmp	r3, #25
    1972:	d847      	bhi.n	1a04 <TestTableFct1(char)+0xc4>
    1974:	a201      	add	r2, pc, #4	; (adr r2, 197c <TestTableFct1(char)+0x3c>)
    1976:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    197a:	bf00      	nop
    197c:	000019e9 	.word	0x000019e9
    1980:	00001a05 	.word	0x00001a05
    1984:	00001a05 	.word	0x00001a05
    1988:	00001a05 	.word	0x00001a05
    198c:	00001a05 	.word	0x00001a05
    1990:	00001a05 	.word	0x00001a05
    1994:	00001a05 	.word	0x00001a05
    1998:	00001a05 	.word	0x00001a05
    199c:	00001a05 	.word	0x00001a05
    19a0:	00001a05 	.word	0x00001a05
    19a4:	00001a05 	.word	0x00001a05
    19a8:	00001a05 	.word	0x00001a05
    19ac:	00001a05 	.word	0x00001a05
    19b0:	00001a05 	.word	0x00001a05
    19b4:	00001a05 	.word	0x00001a05
    19b8:	000019f1 	.word	0x000019f1
    19bc:	00001a05 	.word	0x00001a05
    19c0:	00001a05 	.word	0x00001a05
    19c4:	00001a05 	.word	0x00001a05
    19c8:	00001a05 	.word	0x00001a05
    19cc:	00001a05 	.word	0x00001a05
    19d0:	000019f5 	.word	0x000019f5
    19d4:	00001a05 	.word	0x00001a05
    19d8:	00001a05 	.word	0x00001a05
    19dc:	00001a05 	.word	0x00001a05
    19e0:	000019f9 	.word	0x000019f9
  case 0:
    return 1U;
    19e4:	2301      	movs	r3, #1
    19e6:	e00e      	b.n	1a06 <TestTableFct1(char)+0xc6>
  case 100:
    return 2U;
    19e8:	2302      	movs	r3, #2
    19ea:	e00c      	b.n	1a06 <TestTableFct1(char)+0xc6>
  case 232:
    return 3U;
    19ec:	2303      	movs	r3, #3
    19ee:	e00a      	b.n	1a06 <TestTableFct1(char)+0xc6>
  case 115:
    return 4U;
    19f0:	2304      	movs	r3, #4
    19f2:	e008      	b.n	1a06 <TestTableFct1(char)+0xc6>
  case 121:
    return 5U;
    19f4:	2305      	movs	r3, #5
    19f6:	e006      	b.n	1a06 <TestTableFct1(char)+0xc6>
  case 125:
    return 6U;
    19f8:	2306      	movs	r3, #6
    19fa:	e004      	b.n	1a06 <TestTableFct1(char)+0xc6>
  case 12:
    return 7U;
    19fc:	2307      	movs	r3, #7
    19fe:	e002      	b.n	1a06 <TestTableFct1(char)+0xc6>
  case 255:
    return 8U;
    1a00:	2308      	movs	r3, #8
    1a02:	e000      	b.n	1a06 <TestTableFct1(char)+0xc6>
  default:
    return 1U;
    1a04:	2301      	movs	r3, #1
  }
  return 0U;
}
    1a06:	4618      	mov	r0, r3
    1a08:	370c      	adds	r7, #12
    1a0a:	46bd      	mov	sp, r7
    1a0c:	bc80      	pop	{r7}
    1a0e:	4770      	bx	lr

00001a10 <TestTableFct2()>:
uint32_t TestTableFct2() {
    1a10:	b580      	push	{r7, lr}
    1a12:	b082      	sub	sp, #8
    1a14:	af00      	add	r7, sp, #0
  uint32_t accu = 0;
    1a16:	2300      	movs	r3, #0
    1a18:	607b      	str	r3, [r7, #4]
  for (uint8_t i = 0; i < 8; ++i) {
    1a1a:	2300      	movs	r3, #0
    1a1c:	70fb      	strb	r3, [r7, #3]
    1a1e:	78fb      	ldrb	r3, [r7, #3]
    1a20:	2b07      	cmp	r3, #7
    1a22:	d85f      	bhi.n	1ae4 <TestTableFct2()+0xd4>
    switch (i) {
    1a24:	78fb      	ldrb	r3, [r7, #3]
    1a26:	2b07      	cmp	r3, #7
    1a28:	d852      	bhi.n	1ad0 <TestTableFct2()+0xc0>
    1a2a:	a201      	add	r2, pc, #4	; (adr r2, 1a30 <TestTableFct2()+0x20>)
    1a2c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    1a30:	00001a51 	.word	0x00001a51
    1a34:	00001a61 	.word	0x00001a61
    1a38:	00001a71 	.word	0x00001a71
    1a3c:	00001a81 	.word	0x00001a81
    1a40:	00001a91 	.word	0x00001a91
    1a44:	00001aa1 	.word	0x00001aa1
    1a48:	00001ab1 	.word	0x00001ab1
    1a4c:	00001ac1 	.word	0x00001ac1
    case 0U:
      accu += TableFct0(); // 0
    1a50:	f7ff ff0c 	bl	186c <TableFct0()>
    1a54:	4603      	mov	r3, r0
    1a56:	461a      	mov	r2, r3
    1a58:	687b      	ldr	r3, [r7, #4]
    1a5a:	4413      	add	r3, r2
    1a5c:	607b      	str	r3, [r7, #4]
      break;
    1a5e:	e03d      	b.n	1adc <TestTableFct2()+0xcc>
    case 1U:
      accu += TableFct1(); // 1
    1a60:	f7ff ff10 	bl	1884 <TableFct1()>
    1a64:	4603      	mov	r3, r0
    1a66:	461a      	mov	r2, r3
    1a68:	687b      	ldr	r3, [r7, #4]
    1a6a:	4413      	add	r3, r2
    1a6c:	607b      	str	r3, [r7, #4]
      break;
    1a6e:	e035      	b.n	1adc <TestTableFct2()+0xcc>
    case 2U:
      accu += TableFct2(); // 3
    1a70:	f7ff ff19 	bl	18a6 <TableFct2()>
    1a74:	4603      	mov	r3, r0
    1a76:	461a      	mov	r2, r3
    1a78:	687b      	ldr	r3, [r7, #4]
    1a7a:	4413      	add	r3, r2
    1a7c:	607b      	str	r3, [r7, #4]
      break;
    1a7e:	e02d      	b.n	1adc <TestTableFct2()+0xcc>
    case 3U:
      accu += TableFct3(); // 6
    1a80:	f7ff ff1d 	bl	18be <TableFct3()>
    1a84:	4603      	mov	r3, r0
    1a86:	461a      	mov	r2, r3
    1a88:	687b      	ldr	r3, [r7, #4]
    1a8a:	4413      	add	r3, r2
    1a8c:	607b      	str	r3, [r7, #4]
      break;
    1a8e:	e025      	b.n	1adc <TestTableFct2()+0xcc>
    case 4U:
      accu += TableFct4(); // 10
    1a90:	f7ff ff21 	bl	18d6 <TableFct4()>
    1a94:	4603      	mov	r3, r0
    1a96:	461a      	mov	r2, r3
    1a98:	687b      	ldr	r3, [r7, #4]
    1a9a:	4413      	add	r3, r2
    1a9c:	607b      	str	r3, [r7, #4]
      break;
    1a9e:	e01d      	b.n	1adc <TestTableFct2()+0xcc>
    case 5U:
      accu += TableFct5(); // 15
    1aa0:	f7ff ff25 	bl	18ee <TableFct5()>
    1aa4:	4603      	mov	r3, r0
    1aa6:	461a      	mov	r2, r3
    1aa8:	687b      	ldr	r3, [r7, #4]
    1aaa:	4413      	add	r3, r2
    1aac:	607b      	str	r3, [r7, #4]
      break;
    1aae:	e015      	b.n	1adc <TestTableFct2()+0xcc>
    case 6U:
      accu += TableFct6(); // 21
    1ab0:	f7ff ff29 	bl	1906 <TableFct6()>
    1ab4:	4603      	mov	r3, r0
    1ab6:	461a      	mov	r2, r3
    1ab8:	687b      	ldr	r3, [r7, #4]
    1aba:	4413      	add	r3, r2
    1abc:	607b      	str	r3, [r7, #4]
      break;
    1abe:	e00d      	b.n	1adc <TestTableFct2()+0xcc>
    case 7U:
      accu += TableFct7(); // 28
    1ac0:	f7ff ff2d 	bl	191e <TableFct7()>
    1ac4:	4603      	mov	r3, r0
    1ac6:	461a      	mov	r2, r3
    1ac8:	687b      	ldr	r3, [r7, #4]
    1aca:	4413      	add	r3, r2
    1acc:	607b      	str	r3, [r7, #4]
      break;
    1ace:	e005      	b.n	1adc <TestTableFct2()+0xcc>
    default: // clearly an error
      assert(false);
    1ad0:	4b07      	ldr	r3, [pc, #28]	; (1af0 <TestTableFct2()+0xe0>)
    1ad2:	4a08      	ldr	r2, [pc, #32]	; (1af4 <TestTableFct2()+0xe4>)
    1ad4:	2166      	movs	r1, #102	; 0x66
    1ad6:	4808      	ldr	r0, [pc, #32]	; (1af8 <TestTableFct2()+0xe8>)
    1ad8:	f00a f890 	bl	bbfc <__assert_func>
  for (uint8_t i = 0; i < 8; ++i) {
    1adc:	78fb      	ldrb	r3, [r7, #3]
    1ade:	3301      	adds	r3, #1
    1ae0:	70fb      	strb	r3, [r7, #3]
    1ae2:	e79c      	b.n	1a1e <TestTableFct2()+0xe>
      break;
    }
  }

  return accu;
    1ae4:	687b      	ldr	r3, [r7, #4]
}
    1ae6:	4618      	mov	r0, r3
    1ae8:	3708      	adds	r7, #8
    1aea:	46bd      	mov	sp, r7
    1aec:	bd80      	pop	{r7, pc}
    1aee:	bf00      	nop
    1af0:	000180e0 	.word	0x000180e0
    1af4:	000180e8 	.word	0x000180e8
    1af8:	00018104 	.word	0x00018104

00001afc <TestSwitchCase()>:

void TestSwitchCase() {
    1afc:	b580      	push	{r7, lr}
    1afe:	af00      	add	r7, sp, #0
  printf("# Test: Switch/case\n");
    1b00:	4813      	ldr	r0, [pc, #76]	; (1b50 <TestSwitchCase()+0x54>)
    1b02:	f00b f921 	bl	cd48 <puts>
  assert(TestTableFct1('s') == 4U);
    1b06:	2073      	movs	r0, #115	; 0x73
    1b08:	f7ff ff1a 	bl	1940 <TestTableFct1(char)>
    1b0c:	4603      	mov	r3, r0
    1b0e:	2b04      	cmp	r3, #4
    1b10:	d005      	beq.n	1b1e <TestSwitchCase()+0x22>
    1b12:	4b10      	ldr	r3, [pc, #64]	; (1b54 <TestSwitchCase()+0x58>)
    1b14:	4a10      	ldr	r2, [pc, #64]	; (1b58 <TestSwitchCase()+0x5c>)
    1b16:	2170      	movs	r1, #112	; 0x70
    1b18:	4810      	ldr	r0, [pc, #64]	; (1b5c <TestSwitchCase()+0x60>)
    1b1a:	f00a f86f 	bl	bbfc <__assert_func>
  assert(TestTableFct1('h') == 1U);
    1b1e:	2068      	movs	r0, #104	; 0x68
    1b20:	f7ff ff0e 	bl	1940 <TestTableFct1(char)>
    1b24:	4603      	mov	r3, r0
    1b26:	2b01      	cmp	r3, #1
    1b28:	d005      	beq.n	1b36 <TestSwitchCase()+0x3a>
    1b2a:	4b0d      	ldr	r3, [pc, #52]	; (1b60 <TestSwitchCase()+0x64>)
    1b2c:	4a0a      	ldr	r2, [pc, #40]	; (1b58 <TestSwitchCase()+0x5c>)
    1b2e:	2171      	movs	r1, #113	; 0x71
    1b30:	480a      	ldr	r0, [pc, #40]	; (1b5c <TestSwitchCase()+0x60>)
    1b32:	f00a f863 	bl	bbfc <__assert_func>
  assert(TestTableFct2() == 28U);
    1b36:	f7ff ff6b 	bl	1a10 <TestTableFct2()>
    1b3a:	4603      	mov	r3, r0
    1b3c:	2b1c      	cmp	r3, #28
    1b3e:	d005      	beq.n	1b4c <TestSwitchCase()+0x50>
    1b40:	4b08      	ldr	r3, [pc, #32]	; (1b64 <TestSwitchCase()+0x68>)
    1b42:	4a05      	ldr	r2, [pc, #20]	; (1b58 <TestSwitchCase()+0x5c>)
    1b44:	2172      	movs	r1, #114	; 0x72
    1b46:	4805      	ldr	r0, [pc, #20]	; (1b5c <TestSwitchCase()+0x60>)
    1b48:	f00a f858 	bl	bbfc <__assert_func>
    1b4c:	bf00      	nop
    1b4e:	bd80      	pop	{r7, pc}
    1b50:	00018154 	.word	0x00018154
    1b54:	00018168 	.word	0x00018168
    1b58:	00018184 	.word	0x00018184
    1b5c:	00018104 	.word	0x00018104
    1b60:	0001819c 	.word	0x0001819c
    1b64:	000181b8 	.word	0x000181b8

00001b68 <Fibonacci(int)>:
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

// Recursive fibonacci algorithm
int Fibonacci(int n) {
    1b68:	b590      	push	{r4, r7, lr}
    1b6a:	b083      	sub	sp, #12
    1b6c:	af00      	add	r7, sp, #0
    1b6e:	6078      	str	r0, [r7, #4]
  if (n <= 1) {
    1b70:	687b      	ldr	r3, [r7, #4]
    1b72:	2b01      	cmp	r3, #1
    1b74:	dc01      	bgt.n	1b7a <Fibonacci(int)+0x12>
    return n;
    1b76:	687b      	ldr	r3, [r7, #4]
    1b78:	e00c      	b.n	1b94 <Fibonacci(int)+0x2c>
  } else {
    return Fibonacci(n - 1) + Fibonacci(n - 2);
    1b7a:	687b      	ldr	r3, [r7, #4]
    1b7c:	3b01      	subs	r3, #1
    1b7e:	4618      	mov	r0, r3
    1b80:	f7ff fff2 	bl	1b68 <Fibonacci(int)>
    1b84:	4604      	mov	r4, r0
    1b86:	687b      	ldr	r3, [r7, #4]
    1b88:	3b02      	subs	r3, #2
    1b8a:	4618      	mov	r0, r3
    1b8c:	f7ff ffec 	bl	1b68 <Fibonacci(int)>
    1b90:	4603      	mov	r3, r0
    1b92:	4423      	add	r3, r4
  }
}
    1b94:	4618      	mov	r0, r3
    1b96:	370c      	adds	r7, #12
    1b98:	46bd      	mov	sp, r7
    1b9a:	bd90      	pop	{r4, r7, pc}

00001b9c <TestFibonacci()>:

void TestFibonacci() {
    1b9c:	b580      	push	{r7, lr}
    1b9e:	af00      	add	r7, sp, #0
  printf("# Test: Fibonacci (recursive)\n");
    1ba0:	482c      	ldr	r0, [pc, #176]	; (1c54 <TestFibonacci()+0xb8>)
    1ba2:	f00b f8d1 	bl	cd48 <puts>
  assert(Fibonacci(5) == 5U);
    1ba6:	2005      	movs	r0, #5
    1ba8:	f7ff ffde 	bl	1b68 <Fibonacci(int)>
    1bac:	4603      	mov	r3, r0
    1bae:	2b05      	cmp	r3, #5
    1bb0:	d005      	beq.n	1bbe <TestFibonacci()+0x22>
    1bb2:	4b29      	ldr	r3, [pc, #164]	; (1c58 <TestFibonacci()+0xbc>)
    1bb4:	4a29      	ldr	r2, [pc, #164]	; (1c5c <TestFibonacci()+0xc0>)
    1bb6:	2111      	movs	r1, #17
    1bb8:	4829      	ldr	r0, [pc, #164]	; (1c60 <TestFibonacci()+0xc4>)
    1bba:	f00a f81f 	bl	bbfc <__assert_func>
  assert(Fibonacci(6) == 8U);
    1bbe:	2006      	movs	r0, #6
    1bc0:	f7ff ffd2 	bl	1b68 <Fibonacci(int)>
    1bc4:	4603      	mov	r3, r0
    1bc6:	2b08      	cmp	r3, #8
    1bc8:	d005      	beq.n	1bd6 <TestFibonacci()+0x3a>
    1bca:	4b26      	ldr	r3, [pc, #152]	; (1c64 <TestFibonacci()+0xc8>)
    1bcc:	4a23      	ldr	r2, [pc, #140]	; (1c5c <TestFibonacci()+0xc0>)
    1bce:	2112      	movs	r1, #18
    1bd0:	4823      	ldr	r0, [pc, #140]	; (1c60 <TestFibonacci()+0xc4>)
    1bd2:	f00a f813 	bl	bbfc <__assert_func>
  assert(Fibonacci(7) == 13U);
    1bd6:	2007      	movs	r0, #7
    1bd8:	f7ff ffc6 	bl	1b68 <Fibonacci(int)>
    1bdc:	4603      	mov	r3, r0
    1bde:	2b0d      	cmp	r3, #13
    1be0:	d005      	beq.n	1bee <TestFibonacci()+0x52>
    1be2:	4b21      	ldr	r3, [pc, #132]	; (1c68 <TestFibonacci()+0xcc>)
    1be4:	4a1d      	ldr	r2, [pc, #116]	; (1c5c <TestFibonacci()+0xc0>)
    1be6:	2113      	movs	r1, #19
    1be8:	481d      	ldr	r0, [pc, #116]	; (1c60 <TestFibonacci()+0xc4>)
    1bea:	f00a f807 	bl	bbfc <__assert_func>
  assert(Fibonacci(8) == 21U);
    1bee:	2008      	movs	r0, #8
    1bf0:	f7ff ffba 	bl	1b68 <Fibonacci(int)>
    1bf4:	4603      	mov	r3, r0
    1bf6:	2b15      	cmp	r3, #21
    1bf8:	d005      	beq.n	1c06 <TestFibonacci()+0x6a>
    1bfa:	4b1c      	ldr	r3, [pc, #112]	; (1c6c <TestFibonacci()+0xd0>)
    1bfc:	4a17      	ldr	r2, [pc, #92]	; (1c5c <TestFibonacci()+0xc0>)
    1bfe:	2114      	movs	r1, #20
    1c00:	4817      	ldr	r0, [pc, #92]	; (1c60 <TestFibonacci()+0xc4>)
    1c02:	f009 fffb 	bl	bbfc <__assert_func>
  assert(Fibonacci(7) == 13U);
    1c06:	2007      	movs	r0, #7
    1c08:	f7ff ffae 	bl	1b68 <Fibonacci(int)>
    1c0c:	4603      	mov	r3, r0
    1c0e:	2b0d      	cmp	r3, #13
    1c10:	d005      	beq.n	1c1e <TestFibonacci()+0x82>
    1c12:	4b15      	ldr	r3, [pc, #84]	; (1c68 <TestFibonacci()+0xcc>)
    1c14:	4a11      	ldr	r2, [pc, #68]	; (1c5c <TestFibonacci()+0xc0>)
    1c16:	2115      	movs	r1, #21
    1c18:	4811      	ldr	r0, [pc, #68]	; (1c60 <TestFibonacci()+0xc4>)
    1c1a:	f009 ffef 	bl	bbfc <__assert_func>
  assert(Fibonacci(6) == 8U);
    1c1e:	2006      	movs	r0, #6
    1c20:	f7ff ffa2 	bl	1b68 <Fibonacci(int)>
    1c24:	4603      	mov	r3, r0
    1c26:	2b08      	cmp	r3, #8
    1c28:	d005      	beq.n	1c36 <TestFibonacci()+0x9a>
    1c2a:	4b0e      	ldr	r3, [pc, #56]	; (1c64 <TestFibonacci()+0xc8>)
    1c2c:	4a0b      	ldr	r2, [pc, #44]	; (1c5c <TestFibonacci()+0xc0>)
    1c2e:	2116      	movs	r1, #22
    1c30:	480b      	ldr	r0, [pc, #44]	; (1c60 <TestFibonacci()+0xc4>)
    1c32:	f009 ffe3 	bl	bbfc <__assert_func>
  assert(Fibonacci(5) == 5U);
    1c36:	2005      	movs	r0, #5
    1c38:	f7ff ff96 	bl	1b68 <Fibonacci(int)>
    1c3c:	4603      	mov	r3, r0
    1c3e:	2b05      	cmp	r3, #5
    1c40:	d005      	beq.n	1c4e <TestFibonacci()+0xb2>
    1c42:	4b05      	ldr	r3, [pc, #20]	; (1c58 <TestFibonacci()+0xbc>)
    1c44:	4a05      	ldr	r2, [pc, #20]	; (1c5c <TestFibonacci()+0xc0>)
    1c46:	2117      	movs	r1, #23
    1c48:	4805      	ldr	r0, [pc, #20]	; (1c60 <TestFibonacci()+0xc4>)
    1c4a:	f009 ffd7 	bl	bbfc <__assert_func>
    1c4e:	bf00      	nop
    1c50:	bd80      	pop	{r7, pc}
    1c52:	bf00      	nop
    1c54:	000181d0 	.word	0x000181d0
    1c58:	000181f0 	.word	0x000181f0
    1c5c:	00018204 	.word	0x00018204
    1c60:	0001821c 	.word	0x0001821c
    1c64:	00018268 	.word	0x00018268
    1c68:	0001827c 	.word	0x0001827c
    1c6c:	00018290 	.word	0x00018290

00001c70 <TestQuicksort()>:
    QuickSort(arr, low, pi - 1);
    QuickSort(arr, pi + 1, high);
  }
}

void TestQuicksort() {
    1c70:	b5b0      	push	{r4, r5, r7, lr}
    1c72:	b096      	sub	sp, #88	; 0x58
    1c74:	af00      	add	r7, sp, #0
  printf("# Test: Quicksort\n");
    1c76:	4899      	ldr	r0, [pc, #612]	; (1edc <TestQuicksort()+0x26c>)
    1c78:	f00b f866 	bl	cd48 <puts>

  // 32-bit
  volatile uint32_t arr32[] = {9, 3, 7, 1, 5, 4, 8, 6, 2, 0};
    1c7c:	4b98      	ldr	r3, [pc, #608]	; (1ee0 <TestQuicksort()+0x270>)
    1c7e:	f107 0424 	add.w	r4, r7, #36	; 0x24
    1c82:	461d      	mov	r5, r3
    1c84:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    1c86:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    1c88:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    1c8a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    1c8c:	e895 0003 	ldmia.w	r5, {r0, r1}
    1c90:	e884 0003 	stmia.w	r4, {r0, r1}
  int n32 = sizeof(arr32) / sizeof(arr32[0]);
    1c94:	230a      	movs	r3, #10
    1c96:	657b      	str	r3, [r7, #84]	; 0x54
  QuickSort(arr32, 0, n32 - 1);
    1c98:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    1c9a:	1e5a      	subs	r2, r3, #1
    1c9c:	f107 0324 	add.w	r3, r7, #36	; 0x24
    1ca0:	2100      	movs	r1, #0
    1ca2:	4618      	mov	r0, r3
    1ca4:	f000 f992 	bl	1fcc <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)>
  assert(arr32[0] == 0U);
    1ca8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1caa:	2b00      	cmp	r3, #0
    1cac:	d005      	beq.n	1cba <TestQuicksort()+0x4a>
    1cae:	4b8d      	ldr	r3, [pc, #564]	; (1ee4 <TestQuicksort()+0x274>)
    1cb0:	4a8d      	ldr	r2, [pc, #564]	; (1ee8 <TestQuicksort()+0x278>)
    1cb2:	212b      	movs	r1, #43	; 0x2b
    1cb4:	488d      	ldr	r0, [pc, #564]	; (1eec <TestQuicksort()+0x27c>)
    1cb6:	f009 ffa1 	bl	bbfc <__assert_func>
  assert(arr32[1] == 1U);
    1cba:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1cbc:	2b01      	cmp	r3, #1
    1cbe:	d005      	beq.n	1ccc <TestQuicksort()+0x5c>
    1cc0:	4b8b      	ldr	r3, [pc, #556]	; (1ef0 <TestQuicksort()+0x280>)
    1cc2:	4a89      	ldr	r2, [pc, #548]	; (1ee8 <TestQuicksort()+0x278>)
    1cc4:	212c      	movs	r1, #44	; 0x2c
    1cc6:	4889      	ldr	r0, [pc, #548]	; (1eec <TestQuicksort()+0x27c>)
    1cc8:	f009 ff98 	bl	bbfc <__assert_func>
  assert(arr32[2] == 2U);
    1ccc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1cce:	2b02      	cmp	r3, #2
    1cd0:	d005      	beq.n	1cde <TestQuicksort()+0x6e>
    1cd2:	4b88      	ldr	r3, [pc, #544]	; (1ef4 <TestQuicksort()+0x284>)
    1cd4:	4a84      	ldr	r2, [pc, #528]	; (1ee8 <TestQuicksort()+0x278>)
    1cd6:	212d      	movs	r1, #45	; 0x2d
    1cd8:	4884      	ldr	r0, [pc, #528]	; (1eec <TestQuicksort()+0x27c>)
    1cda:	f009 ff8f 	bl	bbfc <__assert_func>
  assert(arr32[3] == 3U);
    1cde:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    1ce0:	2b03      	cmp	r3, #3
    1ce2:	d005      	beq.n	1cf0 <TestQuicksort()+0x80>
    1ce4:	4b84      	ldr	r3, [pc, #528]	; (1ef8 <TestQuicksort()+0x288>)
    1ce6:	4a80      	ldr	r2, [pc, #512]	; (1ee8 <TestQuicksort()+0x278>)
    1ce8:	212e      	movs	r1, #46	; 0x2e
    1cea:	4880      	ldr	r0, [pc, #512]	; (1eec <TestQuicksort()+0x27c>)
    1cec:	f009 ff86 	bl	bbfc <__assert_func>
  assert(arr32[4] == 4U);
    1cf0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    1cf2:	2b04      	cmp	r3, #4
    1cf4:	d005      	beq.n	1d02 <TestQuicksort()+0x92>
    1cf6:	4b81      	ldr	r3, [pc, #516]	; (1efc <TestQuicksort()+0x28c>)
    1cf8:	4a7b      	ldr	r2, [pc, #492]	; (1ee8 <TestQuicksort()+0x278>)
    1cfa:	212f      	movs	r1, #47	; 0x2f
    1cfc:	487b      	ldr	r0, [pc, #492]	; (1eec <TestQuicksort()+0x27c>)
    1cfe:	f009 ff7d 	bl	bbfc <__assert_func>
  assert(arr32[5] == 5U);
    1d02:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    1d04:	2b05      	cmp	r3, #5
    1d06:	d005      	beq.n	1d14 <TestQuicksort()+0xa4>
    1d08:	4b7d      	ldr	r3, [pc, #500]	; (1f00 <TestQuicksort()+0x290>)
    1d0a:	4a77      	ldr	r2, [pc, #476]	; (1ee8 <TestQuicksort()+0x278>)
    1d0c:	2130      	movs	r1, #48	; 0x30
    1d0e:	4877      	ldr	r0, [pc, #476]	; (1eec <TestQuicksort()+0x27c>)
    1d10:	f009 ff74 	bl	bbfc <__assert_func>
  assert(arr32[6] == 6U);
    1d14:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1d16:	2b06      	cmp	r3, #6
    1d18:	d005      	beq.n	1d26 <TestQuicksort()+0xb6>
    1d1a:	4b7a      	ldr	r3, [pc, #488]	; (1f04 <TestQuicksort()+0x294>)
    1d1c:	4a72      	ldr	r2, [pc, #456]	; (1ee8 <TestQuicksort()+0x278>)
    1d1e:	2131      	movs	r1, #49	; 0x31
    1d20:	4872      	ldr	r0, [pc, #456]	; (1eec <TestQuicksort()+0x27c>)
    1d22:	f009 ff6b 	bl	bbfc <__assert_func>
  assert(arr32[7] == 7U);
    1d26:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    1d28:	2b07      	cmp	r3, #7
    1d2a:	d005      	beq.n	1d38 <TestQuicksort()+0xc8>
    1d2c:	4b76      	ldr	r3, [pc, #472]	; (1f08 <TestQuicksort()+0x298>)
    1d2e:	4a6e      	ldr	r2, [pc, #440]	; (1ee8 <TestQuicksort()+0x278>)
    1d30:	2132      	movs	r1, #50	; 0x32
    1d32:	486e      	ldr	r0, [pc, #440]	; (1eec <TestQuicksort()+0x27c>)
    1d34:	f009 ff62 	bl	bbfc <__assert_func>
  assert(arr32[8] == 8U);
    1d38:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    1d3a:	2b08      	cmp	r3, #8
    1d3c:	d005      	beq.n	1d4a <TestQuicksort()+0xda>
    1d3e:	4b73      	ldr	r3, [pc, #460]	; (1f0c <TestQuicksort()+0x29c>)
    1d40:	4a69      	ldr	r2, [pc, #420]	; (1ee8 <TestQuicksort()+0x278>)
    1d42:	2133      	movs	r1, #51	; 0x33
    1d44:	4869      	ldr	r0, [pc, #420]	; (1eec <TestQuicksort()+0x27c>)
    1d46:	f009 ff59 	bl	bbfc <__assert_func>
  assert(arr32[9] == 9U);
    1d4a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    1d4c:	2b09      	cmp	r3, #9
    1d4e:	d005      	beq.n	1d5c <TestQuicksort()+0xec>
    1d50:	4b6f      	ldr	r3, [pc, #444]	; (1f10 <TestQuicksort()+0x2a0>)
    1d52:	4a65      	ldr	r2, [pc, #404]	; (1ee8 <TestQuicksort()+0x278>)
    1d54:	2134      	movs	r1, #52	; 0x34
    1d56:	4865      	ldr	r0, [pc, #404]	; (1eec <TestQuicksort()+0x27c>)
    1d58:	f009 ff50 	bl	bbfc <__assert_func>

  // 16-bit
  volatile uint16_t arr16[] = {9, 3, 7, 1, 5, 4, 8, 6, 2, 0};
    1d5c:	4b6d      	ldr	r3, [pc, #436]	; (1f14 <TestQuicksort()+0x2a4>)
    1d5e:	f107 0410 	add.w	r4, r7, #16
    1d62:	461d      	mov	r5, r3
    1d64:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    1d66:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    1d68:	682b      	ldr	r3, [r5, #0]
    1d6a:	6023      	str	r3, [r4, #0]
  int n16 = sizeof(arr16) / sizeof(arr16[0]);
    1d6c:	230a      	movs	r3, #10
    1d6e:	653b      	str	r3, [r7, #80]	; 0x50
  QuickSort(arr16, 0, n16 - 1);
    1d70:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    1d72:	1e5a      	subs	r2, r3, #1
    1d74:	f107 0310 	add.w	r3, r7, #16
    1d78:	2100      	movs	r1, #0
    1d7a:	4618      	mov	r0, r3
    1d7c:	f000 f949 	bl	2012 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)>
  assert(arr16[0] == 0U);
    1d80:	8a3b      	ldrh	r3, [r7, #16]
    1d82:	b29b      	uxth	r3, r3
    1d84:	2b00      	cmp	r3, #0
    1d86:	d005      	beq.n	1d94 <TestQuicksort()+0x124>
    1d88:	4b63      	ldr	r3, [pc, #396]	; (1f18 <TestQuicksort()+0x2a8>)
    1d8a:	4a57      	ldr	r2, [pc, #348]	; (1ee8 <TestQuicksort()+0x278>)
    1d8c:	213a      	movs	r1, #58	; 0x3a
    1d8e:	4857      	ldr	r0, [pc, #348]	; (1eec <TestQuicksort()+0x27c>)
    1d90:	f009 ff34 	bl	bbfc <__assert_func>
  assert(arr16[1] == 1U);
    1d94:	8a7b      	ldrh	r3, [r7, #18]
    1d96:	b29b      	uxth	r3, r3
    1d98:	2b01      	cmp	r3, #1
    1d9a:	d005      	beq.n	1da8 <TestQuicksort()+0x138>
    1d9c:	4b5f      	ldr	r3, [pc, #380]	; (1f1c <TestQuicksort()+0x2ac>)
    1d9e:	4a52      	ldr	r2, [pc, #328]	; (1ee8 <TestQuicksort()+0x278>)
    1da0:	213b      	movs	r1, #59	; 0x3b
    1da2:	4852      	ldr	r0, [pc, #328]	; (1eec <TestQuicksort()+0x27c>)
    1da4:	f009 ff2a 	bl	bbfc <__assert_func>
  assert(arr16[2] == 2U);
    1da8:	8abb      	ldrh	r3, [r7, #20]
    1daa:	b29b      	uxth	r3, r3
    1dac:	2b02      	cmp	r3, #2
    1dae:	d005      	beq.n	1dbc <TestQuicksort()+0x14c>
    1db0:	4b5b      	ldr	r3, [pc, #364]	; (1f20 <TestQuicksort()+0x2b0>)
    1db2:	4a4d      	ldr	r2, [pc, #308]	; (1ee8 <TestQuicksort()+0x278>)
    1db4:	213c      	movs	r1, #60	; 0x3c
    1db6:	484d      	ldr	r0, [pc, #308]	; (1eec <TestQuicksort()+0x27c>)
    1db8:	f009 ff20 	bl	bbfc <__assert_func>
  assert(arr16[3] == 3U);
    1dbc:	8afb      	ldrh	r3, [r7, #22]
    1dbe:	b29b      	uxth	r3, r3
    1dc0:	2b03      	cmp	r3, #3
    1dc2:	d005      	beq.n	1dd0 <TestQuicksort()+0x160>
    1dc4:	4b57      	ldr	r3, [pc, #348]	; (1f24 <TestQuicksort()+0x2b4>)
    1dc6:	4a48      	ldr	r2, [pc, #288]	; (1ee8 <TestQuicksort()+0x278>)
    1dc8:	213d      	movs	r1, #61	; 0x3d
    1dca:	4848      	ldr	r0, [pc, #288]	; (1eec <TestQuicksort()+0x27c>)
    1dcc:	f009 ff16 	bl	bbfc <__assert_func>
  assert(arr16[4] == 4U);
    1dd0:	8b3b      	ldrh	r3, [r7, #24]
    1dd2:	b29b      	uxth	r3, r3
    1dd4:	2b04      	cmp	r3, #4
    1dd6:	d005      	beq.n	1de4 <TestQuicksort()+0x174>
    1dd8:	4b53      	ldr	r3, [pc, #332]	; (1f28 <TestQuicksort()+0x2b8>)
    1dda:	4a43      	ldr	r2, [pc, #268]	; (1ee8 <TestQuicksort()+0x278>)
    1ddc:	213e      	movs	r1, #62	; 0x3e
    1dde:	4843      	ldr	r0, [pc, #268]	; (1eec <TestQuicksort()+0x27c>)
    1de0:	f009 ff0c 	bl	bbfc <__assert_func>
  assert(arr16[5] == 5U);
    1de4:	8b7b      	ldrh	r3, [r7, #26]
    1de6:	b29b      	uxth	r3, r3
    1de8:	2b05      	cmp	r3, #5
    1dea:	d005      	beq.n	1df8 <TestQuicksort()+0x188>
    1dec:	4b4f      	ldr	r3, [pc, #316]	; (1f2c <TestQuicksort()+0x2bc>)
    1dee:	4a3e      	ldr	r2, [pc, #248]	; (1ee8 <TestQuicksort()+0x278>)
    1df0:	213f      	movs	r1, #63	; 0x3f
    1df2:	483e      	ldr	r0, [pc, #248]	; (1eec <TestQuicksort()+0x27c>)
    1df4:	f009 ff02 	bl	bbfc <__assert_func>
  assert(arr16[6] == 6U);
    1df8:	8bbb      	ldrh	r3, [r7, #28]
    1dfa:	b29b      	uxth	r3, r3
    1dfc:	2b06      	cmp	r3, #6
    1dfe:	d005      	beq.n	1e0c <TestQuicksort()+0x19c>
    1e00:	4b4b      	ldr	r3, [pc, #300]	; (1f30 <TestQuicksort()+0x2c0>)
    1e02:	4a39      	ldr	r2, [pc, #228]	; (1ee8 <TestQuicksort()+0x278>)
    1e04:	2140      	movs	r1, #64	; 0x40
    1e06:	4839      	ldr	r0, [pc, #228]	; (1eec <TestQuicksort()+0x27c>)
    1e08:	f009 fef8 	bl	bbfc <__assert_func>
  assert(arr16[7] == 7U);
    1e0c:	8bfb      	ldrh	r3, [r7, #30]
    1e0e:	b29b      	uxth	r3, r3
    1e10:	2b07      	cmp	r3, #7
    1e12:	d005      	beq.n	1e20 <TestQuicksort()+0x1b0>
    1e14:	4b47      	ldr	r3, [pc, #284]	; (1f34 <TestQuicksort()+0x2c4>)
    1e16:	4a34      	ldr	r2, [pc, #208]	; (1ee8 <TestQuicksort()+0x278>)
    1e18:	2141      	movs	r1, #65	; 0x41
    1e1a:	4834      	ldr	r0, [pc, #208]	; (1eec <TestQuicksort()+0x27c>)
    1e1c:	f009 feee 	bl	bbfc <__assert_func>
  assert(arr16[8] == 8U);
    1e20:	8c3b      	ldrh	r3, [r7, #32]
    1e22:	b29b      	uxth	r3, r3
    1e24:	2b08      	cmp	r3, #8
    1e26:	d005      	beq.n	1e34 <TestQuicksort()+0x1c4>
    1e28:	4b43      	ldr	r3, [pc, #268]	; (1f38 <TestQuicksort()+0x2c8>)
    1e2a:	4a2f      	ldr	r2, [pc, #188]	; (1ee8 <TestQuicksort()+0x278>)
    1e2c:	2142      	movs	r1, #66	; 0x42
    1e2e:	482f      	ldr	r0, [pc, #188]	; (1eec <TestQuicksort()+0x27c>)
    1e30:	f009 fee4 	bl	bbfc <__assert_func>
  assert(arr16[9] == 9U);
    1e34:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
    1e36:	b29b      	uxth	r3, r3
    1e38:	2b09      	cmp	r3, #9
    1e3a:	d005      	beq.n	1e48 <TestQuicksort()+0x1d8>
    1e3c:	4b3f      	ldr	r3, [pc, #252]	; (1f3c <TestQuicksort()+0x2cc>)
    1e3e:	4a2a      	ldr	r2, [pc, #168]	; (1ee8 <TestQuicksort()+0x278>)
    1e40:	2143      	movs	r1, #67	; 0x43
    1e42:	482a      	ldr	r0, [pc, #168]	; (1eec <TestQuicksort()+0x27c>)
    1e44:	f009 feda 	bl	bbfc <__assert_func>

  // 8-bit
  volatile uint8_t arr8[] = {9, 3, 7, 1, 5, 4, 8, 6, 2, 0};
    1e48:	4a3d      	ldr	r2, [pc, #244]	; (1f40 <TestQuicksort()+0x2d0>)
    1e4a:	1d3b      	adds	r3, r7, #4
    1e4c:	ca07      	ldmia	r2, {r0, r1, r2}
    1e4e:	c303      	stmia	r3!, {r0, r1}
    1e50:	801a      	strh	r2, [r3, #0]
  int n8 = sizeof(arr8) / sizeof(arr8[0]);
    1e52:	230a      	movs	r3, #10
    1e54:	64fb      	str	r3, [r7, #76]	; 0x4c
  QuickSort(arr8, 0, n8 - 1);
    1e56:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    1e58:	1e5a      	subs	r2, r3, #1
    1e5a:	1d3b      	adds	r3, r7, #4
    1e5c:	2100      	movs	r1, #0
    1e5e:	4618      	mov	r0, r3
    1e60:	f000 f8fa 	bl	2058 <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)>
  assert(arr8[0] == 0U);
    1e64:	793b      	ldrb	r3, [r7, #4]
    1e66:	b2db      	uxtb	r3, r3
    1e68:	2b00      	cmp	r3, #0
    1e6a:	d005      	beq.n	1e78 <TestQuicksort()+0x208>
    1e6c:	4b35      	ldr	r3, [pc, #212]	; (1f44 <TestQuicksort()+0x2d4>)
    1e6e:	4a1e      	ldr	r2, [pc, #120]	; (1ee8 <TestQuicksort()+0x278>)
    1e70:	2149      	movs	r1, #73	; 0x49
    1e72:	481e      	ldr	r0, [pc, #120]	; (1eec <TestQuicksort()+0x27c>)
    1e74:	f009 fec2 	bl	bbfc <__assert_func>
  assert(arr8[1] == 1U);
    1e78:	797b      	ldrb	r3, [r7, #5]
    1e7a:	b2db      	uxtb	r3, r3
    1e7c:	2b01      	cmp	r3, #1
    1e7e:	d005      	beq.n	1e8c <TestQuicksort()+0x21c>
    1e80:	4b31      	ldr	r3, [pc, #196]	; (1f48 <TestQuicksort()+0x2d8>)
    1e82:	4a19      	ldr	r2, [pc, #100]	; (1ee8 <TestQuicksort()+0x278>)
    1e84:	214a      	movs	r1, #74	; 0x4a
    1e86:	4819      	ldr	r0, [pc, #100]	; (1eec <TestQuicksort()+0x27c>)
    1e88:	f009 feb8 	bl	bbfc <__assert_func>
  assert(arr8[2] == 2U);
    1e8c:	79bb      	ldrb	r3, [r7, #6]
    1e8e:	b2db      	uxtb	r3, r3
    1e90:	2b02      	cmp	r3, #2
    1e92:	d005      	beq.n	1ea0 <TestQuicksort()+0x230>
    1e94:	4b2d      	ldr	r3, [pc, #180]	; (1f4c <TestQuicksort()+0x2dc>)
    1e96:	4a14      	ldr	r2, [pc, #80]	; (1ee8 <TestQuicksort()+0x278>)
    1e98:	214b      	movs	r1, #75	; 0x4b
    1e9a:	4814      	ldr	r0, [pc, #80]	; (1eec <TestQuicksort()+0x27c>)
    1e9c:	f009 feae 	bl	bbfc <__assert_func>
  assert(arr8[3] == 3U);
    1ea0:	79fb      	ldrb	r3, [r7, #7]
    1ea2:	b2db      	uxtb	r3, r3
    1ea4:	2b03      	cmp	r3, #3
    1ea6:	d005      	beq.n	1eb4 <TestQuicksort()+0x244>
    1ea8:	4b29      	ldr	r3, [pc, #164]	; (1f50 <TestQuicksort()+0x2e0>)
    1eaa:	4a0f      	ldr	r2, [pc, #60]	; (1ee8 <TestQuicksort()+0x278>)
    1eac:	214c      	movs	r1, #76	; 0x4c
    1eae:	480f      	ldr	r0, [pc, #60]	; (1eec <TestQuicksort()+0x27c>)
    1eb0:	f009 fea4 	bl	bbfc <__assert_func>
  assert(arr8[4] == 4U);
    1eb4:	7a3b      	ldrb	r3, [r7, #8]
    1eb6:	b2db      	uxtb	r3, r3
    1eb8:	2b04      	cmp	r3, #4
    1eba:	d005      	beq.n	1ec8 <TestQuicksort()+0x258>
    1ebc:	4b25      	ldr	r3, [pc, #148]	; (1f54 <TestQuicksort()+0x2e4>)
    1ebe:	4a0a      	ldr	r2, [pc, #40]	; (1ee8 <TestQuicksort()+0x278>)
    1ec0:	214d      	movs	r1, #77	; 0x4d
    1ec2:	480a      	ldr	r0, [pc, #40]	; (1eec <TestQuicksort()+0x27c>)
    1ec4:	f009 fe9a 	bl	bbfc <__assert_func>
  assert(arr8[5] == 5U);
    1ec8:	7a7b      	ldrb	r3, [r7, #9]
    1eca:	b2db      	uxtb	r3, r3
    1ecc:	2b05      	cmp	r3, #5
    1ece:	d045      	beq.n	1f5c <TestQuicksort()+0x2ec>
    1ed0:	4b21      	ldr	r3, [pc, #132]	; (1f58 <TestQuicksort()+0x2e8>)
    1ed2:	4a05      	ldr	r2, [pc, #20]	; (1ee8 <TestQuicksort()+0x278>)
    1ed4:	214e      	movs	r1, #78	; 0x4e
    1ed6:	4805      	ldr	r0, [pc, #20]	; (1eec <TestQuicksort()+0x27c>)
    1ed8:	f009 fe90 	bl	bbfc <__assert_func>
    1edc:	000182a4 	.word	0x000182a4
    1ee0:	000184fc 	.word	0x000184fc
    1ee4:	000182b8 	.word	0x000182b8
    1ee8:	000182c8 	.word	0x000182c8
    1eec:	000182e0 	.word	0x000182e0
    1ef0:	0001832c 	.word	0x0001832c
    1ef4:	0001833c 	.word	0x0001833c
    1ef8:	0001834c 	.word	0x0001834c
    1efc:	0001835c 	.word	0x0001835c
    1f00:	0001836c 	.word	0x0001836c
    1f04:	0001837c 	.word	0x0001837c
    1f08:	0001838c 	.word	0x0001838c
    1f0c:	0001839c 	.word	0x0001839c
    1f10:	000183ac 	.word	0x000183ac
    1f14:	00018524 	.word	0x00018524
    1f18:	000183bc 	.word	0x000183bc
    1f1c:	000183cc 	.word	0x000183cc
    1f20:	000183dc 	.word	0x000183dc
    1f24:	000183ec 	.word	0x000183ec
    1f28:	000183fc 	.word	0x000183fc
    1f2c:	0001840c 	.word	0x0001840c
    1f30:	0001841c 	.word	0x0001841c
    1f34:	0001842c 	.word	0x0001842c
    1f38:	0001843c 	.word	0x0001843c
    1f3c:	0001844c 	.word	0x0001844c
    1f40:	00018538 	.word	0x00018538
    1f44:	0001845c 	.word	0x0001845c
    1f48:	0001846c 	.word	0x0001846c
    1f4c:	0001847c 	.word	0x0001847c
    1f50:	0001848c 	.word	0x0001848c
    1f54:	0001849c 	.word	0x0001849c
    1f58:	000184ac 	.word	0x000184ac
  assert(arr8[6] == 6U);
    1f5c:	7abb      	ldrb	r3, [r7, #10]
    1f5e:	b2db      	uxtb	r3, r3
    1f60:	2b06      	cmp	r3, #6
    1f62:	d005      	beq.n	1f70 <TestQuicksort()+0x300>
    1f64:	4b13      	ldr	r3, [pc, #76]	; (1fb4 <TestQuicksort()+0x344>)
    1f66:	4a14      	ldr	r2, [pc, #80]	; (1fb8 <TestQuicksort()+0x348>)
    1f68:	214f      	movs	r1, #79	; 0x4f
    1f6a:	4814      	ldr	r0, [pc, #80]	; (1fbc <TestQuicksort()+0x34c>)
    1f6c:	f009 fe46 	bl	bbfc <__assert_func>
  assert(arr8[7] == 7U);
    1f70:	7afb      	ldrb	r3, [r7, #11]
    1f72:	b2db      	uxtb	r3, r3
    1f74:	2b07      	cmp	r3, #7
    1f76:	d005      	beq.n	1f84 <TestQuicksort()+0x314>
    1f78:	4b11      	ldr	r3, [pc, #68]	; (1fc0 <TestQuicksort()+0x350>)
    1f7a:	4a0f      	ldr	r2, [pc, #60]	; (1fb8 <TestQuicksort()+0x348>)
    1f7c:	2150      	movs	r1, #80	; 0x50
    1f7e:	480f      	ldr	r0, [pc, #60]	; (1fbc <TestQuicksort()+0x34c>)
    1f80:	f009 fe3c 	bl	bbfc <__assert_func>
  assert(arr8[8] == 8U);
    1f84:	7b3b      	ldrb	r3, [r7, #12]
    1f86:	b2db      	uxtb	r3, r3
    1f88:	2b08      	cmp	r3, #8
    1f8a:	d005      	beq.n	1f98 <TestQuicksort()+0x328>
    1f8c:	4b0d      	ldr	r3, [pc, #52]	; (1fc4 <TestQuicksort()+0x354>)
    1f8e:	4a0a      	ldr	r2, [pc, #40]	; (1fb8 <TestQuicksort()+0x348>)
    1f90:	2151      	movs	r1, #81	; 0x51
    1f92:	480a      	ldr	r0, [pc, #40]	; (1fbc <TestQuicksort()+0x34c>)
    1f94:	f009 fe32 	bl	bbfc <__assert_func>
  assert(arr8[9] == 9U);
    1f98:	7b7b      	ldrb	r3, [r7, #13]
    1f9a:	b2db      	uxtb	r3, r3
    1f9c:	2b09      	cmp	r3, #9
    1f9e:	d005      	beq.n	1fac <TestQuicksort()+0x33c>
    1fa0:	4b09      	ldr	r3, [pc, #36]	; (1fc8 <TestQuicksort()+0x358>)
    1fa2:	4a05      	ldr	r2, [pc, #20]	; (1fb8 <TestQuicksort()+0x348>)
    1fa4:	2152      	movs	r1, #82	; 0x52
    1fa6:	4805      	ldr	r0, [pc, #20]	; (1fbc <TestQuicksort()+0x34c>)
    1fa8:	f009 fe28 	bl	bbfc <__assert_func>
    1fac:	bf00      	nop
    1fae:	3758      	adds	r7, #88	; 0x58
    1fb0:	46bd      	mov	sp, r7
    1fb2:	bdb0      	pop	{r4, r5, r7, pc}
    1fb4:	000184bc 	.word	0x000184bc
    1fb8:	000182c8 	.word	0x000182c8
    1fbc:	000182e0 	.word	0x000182e0
    1fc0:	000184cc 	.word	0x000184cc
    1fc4:	000184dc 	.word	0x000184dc
    1fc8:	000184ec 	.word	0x000184ec

00001fcc <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)>:
template <typename T> void QuickSort(T arr[], int low, int high) {
    1fcc:	b580      	push	{r7, lr}
    1fce:	b086      	sub	sp, #24
    1fd0:	af00      	add	r7, sp, #0
    1fd2:	60f8      	str	r0, [r7, #12]
    1fd4:	60b9      	str	r1, [r7, #8]
    1fd6:	607a      	str	r2, [r7, #4]
  if (low < high) {
    1fd8:	68ba      	ldr	r2, [r7, #8]
    1fda:	687b      	ldr	r3, [r7, #4]
    1fdc:	429a      	cmp	r2, r3
    1fde:	da14      	bge.n	200a <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)+0x3e>
    int pi = Partition(arr, low, high);
    1fe0:	687a      	ldr	r2, [r7, #4]
    1fe2:	68b9      	ldr	r1, [r7, #8]
    1fe4:	68f8      	ldr	r0, [r7, #12]
    1fe6:	f000 f85a 	bl	209e <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)>
    1fea:	4603      	mov	r3, r0
    1fec:	617b      	str	r3, [r7, #20]
    QuickSort(arr, low, pi - 1);
    1fee:	697b      	ldr	r3, [r7, #20]
    1ff0:	3b01      	subs	r3, #1
    1ff2:	461a      	mov	r2, r3
    1ff4:	68b9      	ldr	r1, [r7, #8]
    1ff6:	68f8      	ldr	r0, [r7, #12]
    1ff8:	f7ff ffe8 	bl	1fcc <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)>
    QuickSort(arr, pi + 1, high);
    1ffc:	697b      	ldr	r3, [r7, #20]
    1ffe:	3301      	adds	r3, #1
    2000:	687a      	ldr	r2, [r7, #4]
    2002:	4619      	mov	r1, r3
    2004:	68f8      	ldr	r0, [r7, #12]
    2006:	f7ff ffe1 	bl	1fcc <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)>
}
    200a:	bf00      	nop
    200c:	3718      	adds	r7, #24
    200e:	46bd      	mov	sp, r7
    2010:	bd80      	pop	{r7, pc}

00002012 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)>:
template <typename T> void QuickSort(T arr[], int low, int high) {
    2012:	b580      	push	{r7, lr}
    2014:	b086      	sub	sp, #24
    2016:	af00      	add	r7, sp, #0
    2018:	60f8      	str	r0, [r7, #12]
    201a:	60b9      	str	r1, [r7, #8]
    201c:	607a      	str	r2, [r7, #4]
  if (low < high) {
    201e:	68ba      	ldr	r2, [r7, #8]
    2020:	687b      	ldr	r3, [r7, #4]
    2022:	429a      	cmp	r2, r3
    2024:	da14      	bge.n	2050 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)+0x3e>
    int pi = Partition(arr, low, high);
    2026:	687a      	ldr	r2, [r7, #4]
    2028:	68b9      	ldr	r1, [r7, #8]
    202a:	68f8      	ldr	r0, [r7, #12]
    202c:	f000 f87d 	bl	212a <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)>
    2030:	4603      	mov	r3, r0
    2032:	617b      	str	r3, [r7, #20]
    QuickSort(arr, low, pi - 1);
    2034:	697b      	ldr	r3, [r7, #20]
    2036:	3b01      	subs	r3, #1
    2038:	461a      	mov	r2, r3
    203a:	68b9      	ldr	r1, [r7, #8]
    203c:	68f8      	ldr	r0, [r7, #12]
    203e:	f7ff ffe8 	bl	2012 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)>
    QuickSort(arr, pi + 1, high);
    2042:	697b      	ldr	r3, [r7, #20]
    2044:	3301      	adds	r3, #1
    2046:	687a      	ldr	r2, [r7, #4]
    2048:	4619      	mov	r1, r3
    204a:	68f8      	ldr	r0, [r7, #12]
    204c:	f7ff ffe1 	bl	2012 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)>
}
    2050:	bf00      	nop
    2052:	3718      	adds	r7, #24
    2054:	46bd      	mov	sp, r7
    2056:	bd80      	pop	{r7, pc}

00002058 <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)>:
template <typename T> void QuickSort(T arr[], int low, int high) {
    2058:	b580      	push	{r7, lr}
    205a:	b086      	sub	sp, #24
    205c:	af00      	add	r7, sp, #0
    205e:	60f8      	str	r0, [r7, #12]
    2060:	60b9      	str	r1, [r7, #8]
    2062:	607a      	str	r2, [r7, #4]
  if (low < high) {
    2064:	68ba      	ldr	r2, [r7, #8]
    2066:	687b      	ldr	r3, [r7, #4]
    2068:	429a      	cmp	r2, r3
    206a:	da14      	bge.n	2096 <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)+0x3e>
    int pi = Partition(arr, low, high);
    206c:	687a      	ldr	r2, [r7, #4]
    206e:	68b9      	ldr	r1, [r7, #8]
    2070:	68f8      	ldr	r0, [r7, #12]
    2072:	f000 f8a3 	bl	21bc <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)>
    2076:	4603      	mov	r3, r0
    2078:	617b      	str	r3, [r7, #20]
    QuickSort(arr, low, pi - 1);
    207a:	697b      	ldr	r3, [r7, #20]
    207c:	3b01      	subs	r3, #1
    207e:	461a      	mov	r2, r3
    2080:	68b9      	ldr	r1, [r7, #8]
    2082:	68f8      	ldr	r0, [r7, #12]
    2084:	f7ff ffe8 	bl	2058 <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)>
    QuickSort(arr, pi + 1, high);
    2088:	697b      	ldr	r3, [r7, #20]
    208a:	3301      	adds	r3, #1
    208c:	687a      	ldr	r2, [r7, #4]
    208e:	4619      	mov	r1, r3
    2090:	68f8      	ldr	r0, [r7, #12]
    2092:	f7ff ffe1 	bl	2058 <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)>
}
    2096:	bf00      	nop
    2098:	3718      	adds	r7, #24
    209a:	46bd      	mov	sp, r7
    209c:	bd80      	pop	{r7, pc}

0000209e <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)>:
template <typename T> int Partition(T arr[], int low, int high) {
    209e:	b580      	push	{r7, lr}
    20a0:	b088      	sub	sp, #32
    20a2:	af00      	add	r7, sp, #0
    20a4:	60f8      	str	r0, [r7, #12]
    20a6:	60b9      	str	r1, [r7, #8]
    20a8:	607a      	str	r2, [r7, #4]
  T pivot = arr[high];
    20aa:	687b      	ldr	r3, [r7, #4]
    20ac:	009b      	lsls	r3, r3, #2
    20ae:	68fa      	ldr	r2, [r7, #12]
    20b0:	4413      	add	r3, r2
    20b2:	681b      	ldr	r3, [r3, #0]
    20b4:	617b      	str	r3, [r7, #20]
  int i = (low - 1);
    20b6:	68bb      	ldr	r3, [r7, #8]
    20b8:	3b01      	subs	r3, #1
    20ba:	61fb      	str	r3, [r7, #28]
  for (int j = low; j <= high - 1; j++) {
    20bc:	68bb      	ldr	r3, [r7, #8]
    20be:	61bb      	str	r3, [r7, #24]
    20c0:	687a      	ldr	r2, [r7, #4]
    20c2:	69bb      	ldr	r3, [r7, #24]
    20c4:	429a      	cmp	r2, r3
    20c6:	dd1e      	ble.n	2106 <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)+0x68>
    if (arr[j] < pivot) {
    20c8:	69bb      	ldr	r3, [r7, #24]
    20ca:	009b      	lsls	r3, r3, #2
    20cc:	68fa      	ldr	r2, [r7, #12]
    20ce:	4413      	add	r3, r2
    20d0:	681a      	ldr	r2, [r3, #0]
    20d2:	697b      	ldr	r3, [r7, #20]
    20d4:	429a      	cmp	r2, r3
    20d6:	bf34      	ite	cc
    20d8:	2301      	movcc	r3, #1
    20da:	2300      	movcs	r3, #0
    20dc:	b2db      	uxtb	r3, r3
    20de:	2b00      	cmp	r3, #0
    20e0:	d00d      	beq.n	20fe <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)+0x60>
      i++;
    20e2:	69fb      	ldr	r3, [r7, #28]
    20e4:	3301      	adds	r3, #1
    20e6:	61fb      	str	r3, [r7, #28]
      Swap(&arr[i], &arr[j]);
    20e8:	69fb      	ldr	r3, [r7, #28]
    20ea:	009b      	lsls	r3, r3, #2
    20ec:	68fa      	ldr	r2, [r7, #12]
    20ee:	18d0      	adds	r0, r2, r3
    20f0:	69bb      	ldr	r3, [r7, #24]
    20f2:	009b      	lsls	r3, r3, #2
    20f4:	68fa      	ldr	r2, [r7, #12]
    20f6:	4413      	add	r3, r2
    20f8:	4619      	mov	r1, r3
    20fa:	f000 f8a2 	bl	2242 <void Swap<unsigned long volatile>(unsigned long volatile*, unsigned long volatile*)>
  for (int j = low; j <= high - 1; j++) {
    20fe:	69bb      	ldr	r3, [r7, #24]
    2100:	3301      	adds	r3, #1
    2102:	61bb      	str	r3, [r7, #24]
    2104:	e7dc      	b.n	20c0 <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)+0x22>
  Swap(&arr[i + 1], &arr[high]);
    2106:	69fb      	ldr	r3, [r7, #28]
    2108:	3301      	adds	r3, #1
    210a:	009b      	lsls	r3, r3, #2
    210c:	68fa      	ldr	r2, [r7, #12]
    210e:	18d0      	adds	r0, r2, r3
    2110:	687b      	ldr	r3, [r7, #4]
    2112:	009b      	lsls	r3, r3, #2
    2114:	68fa      	ldr	r2, [r7, #12]
    2116:	4413      	add	r3, r2
    2118:	4619      	mov	r1, r3
    211a:	f000 f892 	bl	2242 <void Swap<unsigned long volatile>(unsigned long volatile*, unsigned long volatile*)>
  return (i + 1);
    211e:	69fb      	ldr	r3, [r7, #28]
    2120:	3301      	adds	r3, #1
}
    2122:	4618      	mov	r0, r3
    2124:	3720      	adds	r7, #32
    2126:	46bd      	mov	sp, r7
    2128:	bd80      	pop	{r7, pc}

0000212a <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)>:
template <typename T> int Partition(T arr[], int low, int high) {
    212a:	b580      	push	{r7, lr}
    212c:	b088      	sub	sp, #32
    212e:	af00      	add	r7, sp, #0
    2130:	60f8      	str	r0, [r7, #12]
    2132:	60b9      	str	r1, [r7, #8]
    2134:	607a      	str	r2, [r7, #4]
  T pivot = arr[high];
    2136:	687b      	ldr	r3, [r7, #4]
    2138:	005b      	lsls	r3, r3, #1
    213a:	68fa      	ldr	r2, [r7, #12]
    213c:	4413      	add	r3, r2
    213e:	881b      	ldrh	r3, [r3, #0]
    2140:	b29b      	uxth	r3, r3
    2142:	82fb      	strh	r3, [r7, #22]
  int i = (low - 1);
    2144:	68bb      	ldr	r3, [r7, #8]
    2146:	3b01      	subs	r3, #1
    2148:	61fb      	str	r3, [r7, #28]
  for (int j = low; j <= high - 1; j++) {
    214a:	68bb      	ldr	r3, [r7, #8]
    214c:	61bb      	str	r3, [r7, #24]
    214e:	687a      	ldr	r2, [r7, #4]
    2150:	69bb      	ldr	r3, [r7, #24]
    2152:	429a      	cmp	r2, r3
    2154:	dd20      	ble.n	2198 <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)+0x6e>
    if (arr[j] < pivot) {
    2156:	69bb      	ldr	r3, [r7, #24]
    2158:	005b      	lsls	r3, r3, #1
    215a:	68fa      	ldr	r2, [r7, #12]
    215c:	4413      	add	r3, r2
    215e:	881b      	ldrh	r3, [r3, #0]
    2160:	b29a      	uxth	r2, r3
    2162:	8afb      	ldrh	r3, [r7, #22]
    2164:	b29b      	uxth	r3, r3
    2166:	429a      	cmp	r2, r3
    2168:	bf34      	ite	cc
    216a:	2301      	movcc	r3, #1
    216c:	2300      	movcs	r3, #0
    216e:	b2db      	uxtb	r3, r3
    2170:	2b00      	cmp	r3, #0
    2172:	d00d      	beq.n	2190 <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)+0x66>
      i++;
    2174:	69fb      	ldr	r3, [r7, #28]
    2176:	3301      	adds	r3, #1
    2178:	61fb      	str	r3, [r7, #28]
      Swap(&arr[i], &arr[j]);
    217a:	69fb      	ldr	r3, [r7, #28]
    217c:	005b      	lsls	r3, r3, #1
    217e:	68fa      	ldr	r2, [r7, #12]
    2180:	18d0      	adds	r0, r2, r3
    2182:	69bb      	ldr	r3, [r7, #24]
    2184:	005b      	lsls	r3, r3, #1
    2186:	68fa      	ldr	r2, [r7, #12]
    2188:	4413      	add	r3, r2
    218a:	4619      	mov	r1, r3
    218c:	f000 f86d 	bl	226a <void Swap<unsigned short volatile>(unsigned short volatile*, unsigned short volatile*)>
  for (int j = low; j <= high - 1; j++) {
    2190:	69bb      	ldr	r3, [r7, #24]
    2192:	3301      	adds	r3, #1
    2194:	61bb      	str	r3, [r7, #24]
    2196:	e7da      	b.n	214e <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)+0x24>
  Swap(&arr[i + 1], &arr[high]);
    2198:	69fb      	ldr	r3, [r7, #28]
    219a:	3301      	adds	r3, #1
    219c:	005b      	lsls	r3, r3, #1
    219e:	68fa      	ldr	r2, [r7, #12]
    21a0:	18d0      	adds	r0, r2, r3
    21a2:	687b      	ldr	r3, [r7, #4]
    21a4:	005b      	lsls	r3, r3, #1
    21a6:	68fa      	ldr	r2, [r7, #12]
    21a8:	4413      	add	r3, r2
    21aa:	4619      	mov	r1, r3
    21ac:	f000 f85d 	bl	226a <void Swap<unsigned short volatile>(unsigned short volatile*, unsigned short volatile*)>
  return (i + 1);
    21b0:	69fb      	ldr	r3, [r7, #28]
    21b2:	3301      	adds	r3, #1
}
    21b4:	4618      	mov	r0, r3
    21b6:	3720      	adds	r7, #32
    21b8:	46bd      	mov	sp, r7
    21ba:	bd80      	pop	{r7, pc}

000021bc <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)>:
template <typename T> int Partition(T arr[], int low, int high) {
    21bc:	b580      	push	{r7, lr}
    21be:	b088      	sub	sp, #32
    21c0:	af00      	add	r7, sp, #0
    21c2:	60f8      	str	r0, [r7, #12]
    21c4:	60b9      	str	r1, [r7, #8]
    21c6:	607a      	str	r2, [r7, #4]
  T pivot = arr[high];
    21c8:	687b      	ldr	r3, [r7, #4]
    21ca:	68fa      	ldr	r2, [r7, #12]
    21cc:	4413      	add	r3, r2
    21ce:	781b      	ldrb	r3, [r3, #0]
    21d0:	b2db      	uxtb	r3, r3
    21d2:	75fb      	strb	r3, [r7, #23]
  int i = (low - 1);
    21d4:	68bb      	ldr	r3, [r7, #8]
    21d6:	3b01      	subs	r3, #1
    21d8:	61fb      	str	r3, [r7, #28]
  for (int j = low; j <= high - 1; j++) {
    21da:	68bb      	ldr	r3, [r7, #8]
    21dc:	61bb      	str	r3, [r7, #24]
    21de:	687a      	ldr	r2, [r7, #4]
    21e0:	69bb      	ldr	r3, [r7, #24]
    21e2:	429a      	cmp	r2, r3
    21e4:	dd1d      	ble.n	2222 <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)+0x66>
    if (arr[j] < pivot) {
    21e6:	69bb      	ldr	r3, [r7, #24]
    21e8:	68fa      	ldr	r2, [r7, #12]
    21ea:	4413      	add	r3, r2
    21ec:	781b      	ldrb	r3, [r3, #0]
    21ee:	b2da      	uxtb	r2, r3
    21f0:	7dfb      	ldrb	r3, [r7, #23]
    21f2:	b2db      	uxtb	r3, r3
    21f4:	429a      	cmp	r2, r3
    21f6:	bf34      	ite	cc
    21f8:	2301      	movcc	r3, #1
    21fa:	2300      	movcs	r3, #0
    21fc:	b2db      	uxtb	r3, r3
    21fe:	2b00      	cmp	r3, #0
    2200:	d00b      	beq.n	221a <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)+0x5e>
      i++;
    2202:	69fb      	ldr	r3, [r7, #28]
    2204:	3301      	adds	r3, #1
    2206:	61fb      	str	r3, [r7, #28]
      Swap(&arr[i], &arr[j]);
    2208:	69fb      	ldr	r3, [r7, #28]
    220a:	68fa      	ldr	r2, [r7, #12]
    220c:	18d0      	adds	r0, r2, r3
    220e:	69bb      	ldr	r3, [r7, #24]
    2210:	68fa      	ldr	r2, [r7, #12]
    2212:	4413      	add	r3, r2
    2214:	4619      	mov	r1, r3
    2216:	f000 f83f 	bl	2298 <void Swap<unsigned char volatile>(unsigned char volatile*, unsigned char volatile*)>
  for (int j = low; j <= high - 1; j++) {
    221a:	69bb      	ldr	r3, [r7, #24]
    221c:	3301      	adds	r3, #1
    221e:	61bb      	str	r3, [r7, #24]
    2220:	e7dd      	b.n	21de <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)+0x22>
  Swap(&arr[i + 1], &arr[high]);
    2222:	69fb      	ldr	r3, [r7, #28]
    2224:	3301      	adds	r3, #1
    2226:	68fa      	ldr	r2, [r7, #12]
    2228:	18d0      	adds	r0, r2, r3
    222a:	687b      	ldr	r3, [r7, #4]
    222c:	68fa      	ldr	r2, [r7, #12]
    222e:	4413      	add	r3, r2
    2230:	4619      	mov	r1, r3
    2232:	f000 f831 	bl	2298 <void Swap<unsigned char volatile>(unsigned char volatile*, unsigned char volatile*)>
  return (i + 1);
    2236:	69fb      	ldr	r3, [r7, #28]
    2238:	3301      	adds	r3, #1
}
    223a:	4618      	mov	r0, r3
    223c:	3720      	adds	r7, #32
    223e:	46bd      	mov	sp, r7
    2240:	bd80      	pop	{r7, pc}

00002242 <void Swap<unsigned long volatile>(unsigned long volatile*, unsigned long volatile*)>:
template <typename T> void Swap(T *a, T *b) {
    2242:	b480      	push	{r7}
    2244:	b085      	sub	sp, #20
    2246:	af00      	add	r7, sp, #0
    2248:	6078      	str	r0, [r7, #4]
    224a:	6039      	str	r1, [r7, #0]
  T temp = *a;
    224c:	687b      	ldr	r3, [r7, #4]
    224e:	681b      	ldr	r3, [r3, #0]
    2250:	60fb      	str	r3, [r7, #12]
  *a = *b;
    2252:	683b      	ldr	r3, [r7, #0]
    2254:	681a      	ldr	r2, [r3, #0]
    2256:	687b      	ldr	r3, [r7, #4]
    2258:	601a      	str	r2, [r3, #0]
  *b = temp;
    225a:	68fa      	ldr	r2, [r7, #12]
    225c:	683b      	ldr	r3, [r7, #0]
    225e:	601a      	str	r2, [r3, #0]
}
    2260:	bf00      	nop
    2262:	3714      	adds	r7, #20
    2264:	46bd      	mov	sp, r7
    2266:	bc80      	pop	{r7}
    2268:	4770      	bx	lr

0000226a <void Swap<unsigned short volatile>(unsigned short volatile*, unsigned short volatile*)>:
template <typename T> void Swap(T *a, T *b) {
    226a:	b480      	push	{r7}
    226c:	b085      	sub	sp, #20
    226e:	af00      	add	r7, sp, #0
    2270:	6078      	str	r0, [r7, #4]
    2272:	6039      	str	r1, [r7, #0]
  T temp = *a;
    2274:	687b      	ldr	r3, [r7, #4]
    2276:	881b      	ldrh	r3, [r3, #0]
    2278:	b29b      	uxth	r3, r3
    227a:	81fb      	strh	r3, [r7, #14]
  *a = *b;
    227c:	683b      	ldr	r3, [r7, #0]
    227e:	881b      	ldrh	r3, [r3, #0]
    2280:	b29a      	uxth	r2, r3
    2282:	687b      	ldr	r3, [r7, #4]
    2284:	801a      	strh	r2, [r3, #0]
  *b = temp;
    2286:	89fb      	ldrh	r3, [r7, #14]
    2288:	b29a      	uxth	r2, r3
    228a:	683b      	ldr	r3, [r7, #0]
    228c:	801a      	strh	r2, [r3, #0]
}
    228e:	bf00      	nop
    2290:	3714      	adds	r7, #20
    2292:	46bd      	mov	sp, r7
    2294:	bc80      	pop	{r7}
    2296:	4770      	bx	lr

00002298 <void Swap<unsigned char volatile>(unsigned char volatile*, unsigned char volatile*)>:
template <typename T> void Swap(T *a, T *b) {
    2298:	b480      	push	{r7}
    229a:	b085      	sub	sp, #20
    229c:	af00      	add	r7, sp, #0
    229e:	6078      	str	r0, [r7, #4]
    22a0:	6039      	str	r1, [r7, #0]
  T temp = *a;
    22a2:	687b      	ldr	r3, [r7, #4]
    22a4:	781b      	ldrb	r3, [r3, #0]
    22a6:	b2db      	uxtb	r3, r3
    22a8:	73fb      	strb	r3, [r7, #15]
  *a = *b;
    22aa:	683b      	ldr	r3, [r7, #0]
    22ac:	781b      	ldrb	r3, [r3, #0]
    22ae:	b2da      	uxtb	r2, r3
    22b0:	687b      	ldr	r3, [r7, #4]
    22b2:	701a      	strb	r2, [r3, #0]
  *b = temp;
    22b4:	7bfb      	ldrb	r3, [r7, #15]
    22b6:	b2da      	uxtb	r2, r3
    22b8:	683b      	ldr	r3, [r7, #0]
    22ba:	701a      	strb	r2, [r3, #0]
}
    22bc:	bf00      	nop
    22be:	3714      	adds	r7, #20
    22c0:	46bd      	mov	sp, r7
    22c2:	bc80      	pop	{r7}
    22c4:	4770      	bx	lr
	...

000022c8 <GetSCBBase()>:
static constexpr uint32_t kCcrStkAlignFlag{(1U << 9U)}; // Stack alignment on exception entry
static constexpr uint32_t kCcrBranchPredictionEnableFlag{(1U << 18U)}; // Branch prediction enable
static constexpr uint32_t kCcrL1CacheEnableFlag{(1U << 19U)};          // L1 cache enable

// SysTick register map base pointer
static inline volatile SCB *GetSCBBase() {
    22c8:	b480      	push	{r7}
    22ca:	af00      	add	r7, sp, #0
  return reinterpret_cast<SCB *>(reinterpret_cast<unsigned *>(0xE000ED00U));
    22cc:	4b02      	ldr	r3, [pc, #8]	; (22d8 <GetSCBBase()+0x10>)
    22ce:	4618      	mov	r0, r3
    22d0:	46bd      	mov	sp, r7
    22d2:	bc80      	pop	{r7}
    22d4:	4770      	bx	lr
    22d6:	bf00      	nop
    22d8:	e000ed00 	.word	0xe000ed00

000022dc <BusFault_Handler_ABI>:

/// BusFault_Handler_ABI
/// This function is called from the assembler BusFault_Handler function which is called by the
/// Cortex-M processor when a bus fault occurs. The function oversteps the instruction that caused
/// the fault and increments the PC in the stack frame.
void BusFault_Handler_ABI(uint32_t *stack_frame) {
    22dc:	4668      	mov	r0, sp
    22de:	f020 0107 	bic.w	r1, r0, #7
    22e2:	468d      	mov	sp, r1
    22e4:	b591      	push	{r0, r4, r7, lr}
    22e6:	b088      	sub	sp, #32
    22e8:	af00      	add	r7, sp, #0
    22ea:	6078      	str	r0, [r7, #4]

  uint32_t faulty_pc = stack_frame[6]; // Read PC from stack frame
    22ec:	687b      	ldr	r3, [r7, #4]
    22ee:	699b      	ldr	r3, [r3, #24]
    22f0:	61fb      	str	r3, [r7, #28]
                                       // printf("BusFault_Handler 0x%08x\n", faulty_pc);

  if (return_adr == 0U) {
    22f2:	4826      	ldr	r0, [pc, #152]	; (238c <BusFault_Handler_ABI+0xb0>)
    22f4:	f000 fb1c 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    22f8:	4603      	mov	r3, r0
    22fa:	2b00      	cmp	r3, #0
    22fc:	bf0c      	ite	eq
    22fe:	2301      	moveq	r3, #1
    2300:	2300      	movne	r3, #0
    2302:	b2db      	uxtb	r3, r3
    2304:	2b00      	cmp	r3, #0
    2306:	d024      	beq.n	2352 <BusFault_Handler_ABI+0x76>
    uint16_t *instr = (uint16_t *)(faulty_pc & ~0x1U); // read the instruction that caused the fault
    2308:	69fb      	ldr	r3, [r7, #28]
    230a:	f023 0301 	bic.w	r3, r3, #1
    230e:	61bb      	str	r3, [r7, #24]
    uint16_t instr_val = *instr;
    2310:	69bb      	ldr	r3, [r7, #24]
    2312:	881b      	ldrh	r3, [r3, #0]
    2314:	82fb      	strh	r3, [r7, #22]

    if (((instr_val & 0xF800U) == 0xF800U) || ((instr_val & 0xF800U) == 0xE800U) ||
    2316:	8afb      	ldrh	r3, [r7, #22]
    2318:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    231c:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
    2320:	d00b      	beq.n	233a <BusFault_Handler_ABI+0x5e>
    2322:	8afb      	ldrh	r3, [r7, #22]
    2324:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    2328:	f5b3 4f68 	cmp.w	r3, #59392	; 0xe800
    232c:	d005      	beq.n	233a <BusFault_Handler_ABI+0x5e>
        ((instr_val & 0xF800U) == 0xF000U)) { // Check if the instruction is a 32-Bit instruction
    232e:	8afb      	ldrh	r3, [r7, #22]
    2330:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    if (((instr_val & 0xF800U) == 0xF800U) || ((instr_val & 0xF800U) == 0xE800U) ||
    2334:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
    2338:	d105      	bne.n	2346 <BusFault_Handler_ABI+0x6a>
      stack_frame[6U] = faulty_pc + 4U;       // overstep 32-Bit instruction
    233a:	687b      	ldr	r3, [r7, #4]
    233c:	3318      	adds	r3, #24
    233e:	69fa      	ldr	r2, [r7, #28]
    2340:	3204      	adds	r2, #4
    2342:	601a      	str	r2, [r3, #0]
    2344:	e011      	b.n	236a <BusFault_Handler_ABI+0x8e>
    } else {
      stack_frame[6U] = faulty_pc + 2U; // overstep 16-Bit instruction
    2346:	687b      	ldr	r3, [r7, #4]
    2348:	3318      	adds	r3, #24
    234a:	69fa      	ldr	r2, [r7, #28]
    234c:	3202      	adds	r2, #2
    234e:	601a      	str	r2, [r3, #0]
    2350:	e00b      	b.n	236a <BusFault_Handler_ABI+0x8e>
    }
  } else {
    stack_frame[6U] = return_adr;
    2352:	687b      	ldr	r3, [r7, #4]
    2354:	f103 0418 	add.w	r4, r3, #24
    2358:	480c      	ldr	r0, [pc, #48]	; (238c <BusFault_Handler_ABI+0xb0>)
    235a:	f000 fae9 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    235e:	4603      	mov	r3, r0
    2360:	6023      	str	r3, [r4, #0]
    return_adr = 0;
    2362:	2100      	movs	r1, #0
    2364:	4809      	ldr	r0, [pc, #36]	; (238c <BusFault_Handler_ABI+0xb0>)
    2366:	f000 fafe 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  }

  auto *scb = GetSCBBase();
    236a:	f7ff ffad 	bl	22c8 <GetSCBBase()>
    236e:	6138      	str	r0, [r7, #16]
  auto cfsr = scb->CFSR;
    2370:	693b      	ldr	r3, [r7, #16]
    2372:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2374:	60fb      	str	r3, [r7, #12]
  if (cfsr & kCfsrIBusErrFlag) {
    // abort();
  }
  bus_faults++;
    2376:	2100      	movs	r1, #0
    2378:	4805      	ldr	r0, [pc, #20]	; (2390 <BusFault_Handler_ABI+0xb4>)
    237a:	f000 fb14 	bl	29a6 <std::__atomic_base<unsigned long>::operator++(int)>
}
    237e:	bf00      	nop
    2380:	3720      	adds	r7, #32
    2382:	46bd      	mov	sp, r7
    2384:	e8bd 4091 	ldmia.w	sp!, {r0, r4, r7, lr}
    2388:	4685      	mov	sp, r0
    238a:	4770      	bx	lr
    238c:	20000b0c 	.word	0x20000b0c
    2390:	20000b10 	.word	0x20000b10

00002394 <BusFault_Handler>:

void BusFault_Handler(void) {
  __asm volatile("MOV    r0, sp                  \n" // Load the current value of the Main Stack
    2394:	4668      	mov	r0, sp
    2396:	f7ff bfa1 	b.w	22dc <BusFault_Handler_ABI>
                                                     // Pointer (MSP) into r0
                 "B BusFault_Handler_ABI        \n"  // Call the C function BusFault_Handler_ABI
  );
}
    239a:	bf00      	nop

0000239c <UsageFault_Handler_ABI>:

/// UsageFault_Handler_ABI
/// This function is called from the assembler UsageFault_Handler function which is called by the
/// Cortex-M processor when a usage fault occurs. The function oversteps the instruction that caused
/// the fault and increments the PC in the stack frame.
void UsageFault_Handler_ABI(uint32_t *stack_frame) {
    239c:	4668      	mov	r0, sp
    239e:	f020 0107 	bic.w	r1, r0, #7
    23a2:	468d      	mov	sp, r1
    23a4:	b591      	push	{r0, r4, r7, lr}
    23a6:	b086      	sub	sp, #24
    23a8:	af00      	add	r7, sp, #0
    23aa:	6078      	str	r0, [r7, #4]

  uint32_t faulty_pc = stack_frame[6]; // Read PC from stack frame
    23ac:	687b      	ldr	r3, [r7, #4]
    23ae:	699b      	ldr	r3, [r3, #24]
    23b0:	617b      	str	r3, [r7, #20]

  if (return_adr == 0U) {
    23b2:	4829      	ldr	r0, [pc, #164]	; (2458 <UsageFault_Handler_ABI+0xbc>)
    23b4:	f000 fabc 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    23b8:	4603      	mov	r3, r0
    23ba:	2b00      	cmp	r3, #0
    23bc:	bf0c      	ite	eq
    23be:	2301      	moveq	r3, #1
    23c0:	2300      	movne	r3, #0
    23c2:	b2db      	uxtb	r3, r3
    23c4:	2b00      	cmp	r3, #0
    23c6:	d024      	beq.n	2412 <UsageFault_Handler_ABI+0x76>
    uint16_t *instr = (uint16_t *)(faulty_pc & ~0x1U); // read the instruction that caused the fault
    23c8:	697b      	ldr	r3, [r7, #20]
    23ca:	f023 0301 	bic.w	r3, r3, #1
    23ce:	613b      	str	r3, [r7, #16]
    uint16_t instr_val = *instr;
    23d0:	693b      	ldr	r3, [r7, #16]
    23d2:	881b      	ldrh	r3, [r3, #0]
    23d4:	81fb      	strh	r3, [r7, #14]

    if (((instr_val & 0xF800U) == 0xF800U) || ((instr_val & 0xF800U) == 0xE800U) ||
    23d6:	89fb      	ldrh	r3, [r7, #14]
    23d8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    23dc:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
    23e0:	d00b      	beq.n	23fa <UsageFault_Handler_ABI+0x5e>
    23e2:	89fb      	ldrh	r3, [r7, #14]
    23e4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    23e8:	f5b3 4f68 	cmp.w	r3, #59392	; 0xe800
    23ec:	d005      	beq.n	23fa <UsageFault_Handler_ABI+0x5e>
        ((instr_val & 0xF800U) == 0xF000U)) { // Check if the instruction is a 32-Bit instruction
    23ee:	89fb      	ldrh	r3, [r7, #14]
    23f0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    if (((instr_val & 0xF800U) == 0xF800U) || ((instr_val & 0xF800U) == 0xE800U) ||
    23f4:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
    23f8:	d105      	bne.n	2406 <UsageFault_Handler_ABI+0x6a>
      stack_frame[6U] = faulty_pc + 4U;       // overstep 32-Bit instruction
    23fa:	687b      	ldr	r3, [r7, #4]
    23fc:	3318      	adds	r3, #24
    23fe:	697a      	ldr	r2, [r7, #20]
    2400:	3204      	adds	r2, #4
    2402:	601a      	str	r2, [r3, #0]
    2404:	e011      	b.n	242a <UsageFault_Handler_ABI+0x8e>
    } else {
      stack_frame[6U] = faulty_pc + 2U; // overstep 16-Bit instruction
    2406:	687b      	ldr	r3, [r7, #4]
    2408:	3318      	adds	r3, #24
    240a:	697a      	ldr	r2, [r7, #20]
    240c:	3202      	adds	r2, #2
    240e:	601a      	str	r2, [r3, #0]
    2410:	e00b      	b.n	242a <UsageFault_Handler_ABI+0x8e>
    }
  } else {

    stack_frame[6U] = return_adr;
    2412:	687b      	ldr	r3, [r7, #4]
    2414:	f103 0418 	add.w	r4, r3, #24
    2418:	480f      	ldr	r0, [pc, #60]	; (2458 <UsageFault_Handler_ABI+0xbc>)
    241a:	f000 fa89 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    241e:	4603      	mov	r3, r0
    2420:	6023      	str	r3, [r4, #0]
    return_adr = 0;
    2422:	2100      	movs	r1, #0
    2424:	480c      	ldr	r0, [pc, #48]	; (2458 <UsageFault_Handler_ABI+0xbc>)
    2426:	f000 fa9e 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  }

  // some tests set the t-bit intentionally to 0. This is not allowed in the ARMv7-M architecture
  // Reverse the T-bit to 1 in case such an instruction is executed
  auto xpsr = stack_frame[7U];
    242a:	687b      	ldr	r3, [r7, #4]
    242c:	69db      	ldr	r3, [r3, #28]
    242e:	60bb      	str	r3, [r7, #8]
  xpsr = xpsr | (1 << 24); // Force the T-bit to 1
    2430:	68bb      	ldr	r3, [r7, #8]
    2432:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
    2436:	60bb      	str	r3, [r7, #8]
  stack_frame[7U] = xpsr;
    2438:	687b      	ldr	r3, [r7, #4]
    243a:	331c      	adds	r3, #28
    243c:	68ba      	ldr	r2, [r7, #8]
    243e:	601a      	str	r2, [r3, #0]

  usage_faults++;
    2440:	2100      	movs	r1, #0
    2442:	4806      	ldr	r0, [pc, #24]	; (245c <UsageFault_Handler_ABI+0xc0>)
    2444:	f000 faaf 	bl	29a6 <std::__atomic_base<unsigned long>::operator++(int)>
}
    2448:	bf00      	nop
    244a:	3718      	adds	r7, #24
    244c:	46bd      	mov	sp, r7
    244e:	e8bd 4091 	ldmia.w	sp!, {r0, r4, r7, lr}
    2452:	4685      	mov	sp, r0
    2454:	4770      	bx	lr
    2456:	bf00      	nop
    2458:	20000b0c 	.word	0x20000b0c
    245c:	20000b14 	.word	0x20000b14

00002460 <UsageFault_Handler>:

void UsageFault_Handler(void) {
  __asm volatile("MOV    r0, sp                  \n"  // Load the current value of the Main Stack
    2460:	4668      	mov	r0, sp
    2462:	f7ff bf9b 	b.w	239c <UsageFault_Handler_ABI>
                                                      // Pointer (MSP) into r0
                 "B UsageFault_Handler_ABI        \n" // Call the C function BusFault_Handler_ABI
  );
}
    2466:	bf00      	nop

00002468 <TestVariousFaults()>:

void TestVariousFaults() {
    2468:	b580      	push	{r7, lr}
    246a:	b082      	sub	sp, #8
    246c:	af00      	add	r7, sp, #0
  uint32_t faulty_address = 0x40000001;
    246e:	4b41      	ldr	r3, [pc, #260]	; (2574 <TestVariousFaults()+0x10c>)
    2470:	607b      	str	r3, [r7, #4]

  usage_faults = 0U;
    2472:	2100      	movs	r1, #0
    2474:	4840      	ldr	r0, [pc, #256]	; (2578 <TestVariousFaults()+0x110>)
    2476:	f000 fa76 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  bus_faults = 0U;
    247a:	2100      	movs	r1, #0
    247c:	483f      	ldr	r0, [pc, #252]	; (257c <TestVariousFaults()+0x114>)
    247e:	f000 fa72 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  auto *scb = GetSCBBase();
    2482:	f7ff ff21 	bl	22c8 <GetSCBBase()>
    2486:	6038      	str	r0, [r7, #0]
  assert(scb->CFSR == 0U);
    2488:	683b      	ldr	r3, [r7, #0]
    248a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    248c:	2b00      	cmp	r3, #0
    248e:	d005      	beq.n	249c <TestVariousFaults()+0x34>
    2490:	4b3b      	ldr	r3, [pc, #236]	; (2580 <TestVariousFaults()+0x118>)
    2492:	4a3c      	ldr	r2, [pc, #240]	; (2584 <TestVariousFaults()+0x11c>)
    2494:	216a      	movs	r1, #106	; 0x6a
    2496:	483c      	ldr	r0, [pc, #240]	; (2588 <TestVariousFaults()+0x120>)
    2498:	f009 fbb0 	bl	bbfc <__assert_func>
  assert(usage_faults == 0U);
    249c:	4836      	ldr	r0, [pc, #216]	; (2578 <TestVariousFaults()+0x110>)
    249e:	f000 fa47 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    24a2:	4603      	mov	r3, r0
    24a4:	2b00      	cmp	r3, #0
    24a6:	d005      	beq.n	24b4 <TestVariousFaults()+0x4c>
    24a8:	4b38      	ldr	r3, [pc, #224]	; (258c <TestVariousFaults()+0x124>)
    24aa:	4a36      	ldr	r2, [pc, #216]	; (2584 <TestVariousFaults()+0x11c>)
    24ac:	216b      	movs	r1, #107	; 0x6b
    24ae:	4836      	ldr	r0, [pc, #216]	; (2588 <TestVariousFaults()+0x120>)
    24b0:	f009 fba4 	bl	bbfc <__assert_func>
  assert(bus_faults == 0U);
    24b4:	4831      	ldr	r0, [pc, #196]	; (257c <TestVariousFaults()+0x114>)
    24b6:	f000 fa3b 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    24ba:	4603      	mov	r3, r0
    24bc:	2b00      	cmp	r3, #0
    24be:	d005      	beq.n	24cc <TestVariousFaults()+0x64>
    24c0:	4b33      	ldr	r3, [pc, #204]	; (2590 <TestVariousFaults()+0x128>)
    24c2:	4a30      	ldr	r2, [pc, #192]	; (2584 <TestVariousFaults()+0x11c>)
    24c4:	216c      	movs	r1, #108	; 0x6c
    24c6:	4830      	ldr	r0, [pc, #192]	; (2588 <TestVariousFaults()+0x120>)
    24c8:	f009 fb98 	bl	bbfc <__assert_func>
  return_adr = reinterpret_cast<uint32_t>(&&label_wrong_mode);
    24cc:	4b31      	ldr	r3, [pc, #196]	; (2594 <TestVariousFaults()+0x12c>)
    24ce:	4619      	mov	r1, r3
    24d0:	4831      	ldr	r0, [pc, #196]	; (2598 <TestVariousFaults()+0x130>)
    24d2:	f000 fa48 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  asm volatile goto("" :: ::label_wrong_mode, label_fetch_fault);
  // provoke an Usage Fault .. wrong execution state
  __asm__ volatile("mov r0, 0x10\n"
    24d6:	f04f 0010 	mov.w	r0, #16
    24da:	4700      	bx	r0
                   :      // no input
                   : "r0" // clobber
  );

label_wrong_mode:
  __asm__ volatile("nop"
    24dc:	bf00      	nop
                   : // no output
                   : // no input
                   : // no clobber
  );

  assert(usage_faults == 1U);
    24de:	4826      	ldr	r0, [pc, #152]	; (2578 <TestVariousFaults()+0x110>)
    24e0:	f000 fa26 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    24e4:	4603      	mov	r3, r0
    24e6:	2b01      	cmp	r3, #1
    24e8:	d005      	beq.n	24f6 <TestVariousFaults()+0x8e>
    24ea:	4b2c      	ldr	r3, [pc, #176]	; (259c <TestVariousFaults()+0x134>)
    24ec:	4a25      	ldr	r2, [pc, #148]	; (2584 <TestVariousFaults()+0x11c>)
    24ee:	217e      	movs	r1, #126	; 0x7e
    24f0:	4825      	ldr	r0, [pc, #148]	; (2588 <TestVariousFaults()+0x120>)
    24f2:	f009 fb83 	bl	bbfc <__assert_func>
  assert(scb->CFSR == kCfsrInvStateFlag);
    24f6:	683b      	ldr	r3, [r7, #0]
    24f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    24fa:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
    24fe:	d005      	beq.n	250c <TestVariousFaults()+0xa4>
    2500:	4b27      	ldr	r3, [pc, #156]	; (25a0 <TestVariousFaults()+0x138>)
    2502:	4a20      	ldr	r2, [pc, #128]	; (2584 <TestVariousFaults()+0x11c>)
    2504:	217f      	movs	r1, #127	; 0x7f
    2506:	4820      	ldr	r0, [pc, #128]	; (2588 <TestVariousFaults()+0x120>)
    2508:	f009 fb78 	bl	bbfc <__assert_func>
  scb->CFSR = kCfsrInvStateFlag; // reset fault
    250c:	683b      	ldr	r3, [r7, #0]
    250e:	f44f 3200 	mov.w	r2, #131072	; 0x20000
    2512:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0U);
    2514:	683b      	ldr	r3, [r7, #0]
    2516:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2518:	2b00      	cmp	r3, #0
    251a:	d005      	beq.n	2528 <TestVariousFaults()+0xc0>
    251c:	4b18      	ldr	r3, [pc, #96]	; (2580 <TestVariousFaults()+0x118>)
    251e:	4a19      	ldr	r2, [pc, #100]	; (2584 <TestVariousFaults()+0x11c>)
    2520:	2181      	movs	r1, #129	; 0x81
    2522:	4819      	ldr	r0, [pc, #100]	; (2588 <TestVariousFaults()+0x120>)
    2524:	f009 fb6a 	bl	bbfc <__assert_func>

  // provoke an Bus Fault .. instruction bus fault
  return_adr = reinterpret_cast<uint32_t>(&&label_fetch_fault);
    2528:	4b1e      	ldr	r3, [pc, #120]	; (25a4 <TestVariousFaults()+0x13c>)
    252a:	4619      	mov	r1, r3
    252c:	481a      	ldr	r0, [pc, #104]	; (2598 <TestVariousFaults()+0x130>)
    252e:	f000 fa1a 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>

  __asm__ volatile("mov r0, %0\n"
    2532:	687b      	ldr	r3, [r7, #4]
    2534:	4618      	mov	r0, r3
    2536:	4700      	bx	r0
                   : "r"(faulty_address) // no input
                   : "r0"                // no clobber
  );

label_fetch_fault:
  __asm__ volatile("nop"
    2538:	bf00      	nop
                   : // no output
                   : // no input
                   : // no clobber
  );
  assert(scb->CFSR == kCfsrIBusErrFlag);
    253a:	683b      	ldr	r3, [r7, #0]
    253c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    253e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
    2542:	d005      	beq.n	2550 <TestVariousFaults()+0xe8>
    2544:	4b18      	ldr	r3, [pc, #96]	; (25a8 <TestVariousFaults()+0x140>)
    2546:	4a0f      	ldr	r2, [pc, #60]	; (2584 <TestVariousFaults()+0x11c>)
    2548:	2193      	movs	r1, #147	; 0x93
    254a:	480f      	ldr	r0, [pc, #60]	; (2588 <TestVariousFaults()+0x120>)
    254c:	f009 fb56 	bl	bbfc <__assert_func>
  scb->CFSR = kCfsrIBusErrFlag; // reset fault
    2550:	683b      	ldr	r3, [r7, #0]
    2552:	f44f 7280 	mov.w	r2, #256	; 0x100
    2556:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0U);
    2558:	683b      	ldr	r3, [r7, #0]
    255a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    255c:	2b00      	cmp	r3, #0
    255e:	d005      	beq.n	256c <TestVariousFaults()+0x104>
    2560:	4b07      	ldr	r3, [pc, #28]	; (2580 <TestVariousFaults()+0x118>)
    2562:	4a08      	ldr	r2, [pc, #32]	; (2584 <TestVariousFaults()+0x11c>)
    2564:	2195      	movs	r1, #149	; 0x95
    2566:	4808      	ldr	r0, [pc, #32]	; (2588 <TestVariousFaults()+0x120>)
    2568:	f009 fb48 	bl	bbfc <__assert_func>
}
    256c:	bf00      	nop
    256e:	3708      	adds	r7, #8
    2570:	46bd      	mov	sp, r7
    2572:	bd80      	pop	{r7, pc}
    2574:	40000001 	.word	0x40000001
    2578:	20000b14 	.word	0x20000b14
    257c:	20000b10 	.word	0x20000b10
    2580:	000185e8 	.word	0x000185e8
    2584:	000185f8 	.word	0x000185f8
    2588:	00018614 	.word	0x00018614
    258c:	00018660 	.word	0x00018660
    2590:	00018674 	.word	0x00018674
    2594:	000024dc 	.word	0x000024dc
    2598:	20000b0c 	.word	0x20000b0c
    259c:	00018688 	.word	0x00018688
    25a0:	0001869c 	.word	0x0001869c
    25a4:	00002538 	.word	0x00002538
    25a8:	000186bc 	.word	0x000186bc

000025ac <TestBusfault()>:

void TestBusfault() {
    25ac:	b580      	push	{r7, lr}
    25ae:	b084      	sub	sp, #16
    25b0:	af00      	add	r7, sp, #0
  bus_faults = 0U;
    25b2:	2100      	movs	r1, #0
    25b4:	4852      	ldr	r0, [pc, #328]	; (2700 <TestBusfault()+0x154>)
    25b6:	f000 f9d6 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  auto *scb = GetSCBBase();
    25ba:	f7ff fe85 	bl	22c8 <GetSCBBase()>
    25be:	60f8      	str	r0, [r7, #12]
  assert(scb->CFSR == 0U);
    25c0:	68fb      	ldr	r3, [r7, #12]
    25c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    25c4:	2b00      	cmp	r3, #0
    25c6:	d005      	beq.n	25d4 <TestBusfault()+0x28>
    25c8:	4b4e      	ldr	r3, [pc, #312]	; (2704 <TestBusfault()+0x158>)
    25ca:	4a4f      	ldr	r2, [pc, #316]	; (2708 <TestBusfault()+0x15c>)
    25cc:	219b      	movs	r1, #155	; 0x9b
    25ce:	484f      	ldr	r0, [pc, #316]	; (270c <TestBusfault()+0x160>)
    25d0:	f009 fb14 	bl	bbfc <__assert_func>
  assert(bus_faults == 0U);
    25d4:	484a      	ldr	r0, [pc, #296]	; (2700 <TestBusfault()+0x154>)
    25d6:	f000 f9ab 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    25da:	4603      	mov	r3, r0
    25dc:	2b00      	cmp	r3, #0
    25de:	d005      	beq.n	25ec <TestBusfault()+0x40>
    25e0:	4b4b      	ldr	r3, [pc, #300]	; (2710 <TestBusfault()+0x164>)
    25e2:	4a49      	ldr	r2, [pc, #292]	; (2708 <TestBusfault()+0x15c>)
    25e4:	219c      	movs	r1, #156	; 0x9c
    25e6:	4849      	ldr	r0, [pc, #292]	; (270c <TestBusfault()+0x160>)
    25e8:	f009 fb08 	bl	bbfc <__assert_func>
  assert(scb->CFSR == 0x0U);
    25ec:	68fb      	ldr	r3, [r7, #12]
    25ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    25f0:	2b00      	cmp	r3, #0
    25f2:	d005      	beq.n	2600 <TestBusfault()+0x54>
    25f4:	4b47      	ldr	r3, [pc, #284]	; (2714 <TestBusfault()+0x168>)
    25f6:	4a44      	ldr	r2, [pc, #272]	; (2708 <TestBusfault()+0x15c>)
    25f8:	219d      	movs	r1, #157	; 0x9d
    25fa:	4844      	ldr	r0, [pc, #272]	; (270c <TestBusfault()+0x160>)
    25fc:	f009 fafe 	bl	bbfc <__assert_func>

  // Provoke a bus fault (write)
  volatile uint32_t *p = reinterpret_cast<uint32_t *>(0xF0000000);
    2600:	f04f 4370 	mov.w	r3, #4026531840	; 0xf0000000
    2604:	60bb      	str	r3, [r7, #8]
  *p = 0xDEADBEEFU;
    2606:	68bb      	ldr	r3, [r7, #8]
    2608:	4a43      	ldr	r2, [pc, #268]	; (2718 <TestBusfault()+0x16c>)
    260a:	601a      	str	r2, [r3, #0]

  assert(bus_faults == 1U);
    260c:	483c      	ldr	r0, [pc, #240]	; (2700 <TestBusfault()+0x154>)
    260e:	f000 f98f 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2612:	4603      	mov	r3, r0
    2614:	2b01      	cmp	r3, #1
    2616:	d005      	beq.n	2624 <TestBusfault()+0x78>
    2618:	4b40      	ldr	r3, [pc, #256]	; (271c <TestBusfault()+0x170>)
    261a:	4a3b      	ldr	r2, [pc, #236]	; (2708 <TestBusfault()+0x15c>)
    261c:	21a3      	movs	r1, #163	; 0xa3
    261e:	483b      	ldr	r0, [pc, #236]	; (270c <TestBusfault()+0x160>)
    2620:	f009 faec 	bl	bbfc <__assert_func>
  assert(scb->CFSR == (kCfsrBfarValidFlag | kCfsrPreciseErrFlag));
    2624:	68fb      	ldr	r3, [r7, #12]
    2626:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2628:	f5b3 4f02 	cmp.w	r3, #33280	; 0x8200
    262c:	d005      	beq.n	263a <TestBusfault()+0x8e>
    262e:	4b3c      	ldr	r3, [pc, #240]	; (2720 <TestBusfault()+0x174>)
    2630:	4a35      	ldr	r2, [pc, #212]	; (2708 <TestBusfault()+0x15c>)
    2632:	21a4      	movs	r1, #164	; 0xa4
    2634:	4835      	ldr	r0, [pc, #212]	; (270c <TestBusfault()+0x160>)
    2636:	f009 fae1 	bl	bbfc <__assert_func>
  assert(scb->BFAR == reinterpret_cast<uint32_t>(p));
    263a:	68fb      	ldr	r3, [r7, #12]
    263c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    263e:	68bb      	ldr	r3, [r7, #8]
    2640:	429a      	cmp	r2, r3
    2642:	d005      	beq.n	2650 <TestBusfault()+0xa4>
    2644:	4b37      	ldr	r3, [pc, #220]	; (2724 <TestBusfault()+0x178>)
    2646:	4a30      	ldr	r2, [pc, #192]	; (2708 <TestBusfault()+0x15c>)
    2648:	21a5      	movs	r1, #165	; 0xa5
    264a:	4830      	ldr	r0, [pc, #192]	; (270c <TestBusfault()+0x160>)
    264c:	f009 fad6 	bl	bbfc <__assert_func>

  // reset bus fault
  scb->CFSR = kCfsrBfarValidFlag;
    2650:	68fb      	ldr	r3, [r7, #12]
    2652:	f44f 4200 	mov.w	r2, #32768	; 0x8000
    2656:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == kCfsrPreciseErrFlag);
    2658:	68fb      	ldr	r3, [r7, #12]
    265a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    265c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    2660:	d005      	beq.n	266e <TestBusfault()+0xc2>
    2662:	4b31      	ldr	r3, [pc, #196]	; (2728 <TestBusfault()+0x17c>)
    2664:	4a28      	ldr	r2, [pc, #160]	; (2708 <TestBusfault()+0x15c>)
    2666:	21a9      	movs	r1, #169	; 0xa9
    2668:	4828      	ldr	r0, [pc, #160]	; (270c <TestBusfault()+0x160>)
    266a:	f009 fac7 	bl	bbfc <__assert_func>

  scb->CFSR = kCfsrPreciseErrFlag;
    266e:	68fb      	ldr	r3, [r7, #12]
    2670:	f44f 7200 	mov.w	r2, #512	; 0x200
    2674:	629a      	str	r2, [r3, #40]	; 0x28

  assert(scb->CFSR == 0x0U);
    2676:	68fb      	ldr	r3, [r7, #12]
    2678:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    267a:	2b00      	cmp	r3, #0
    267c:	d005      	beq.n	268a <TestBusfault()+0xde>
    267e:	4b25      	ldr	r3, [pc, #148]	; (2714 <TestBusfault()+0x168>)
    2680:	4a21      	ldr	r2, [pc, #132]	; (2708 <TestBusfault()+0x15c>)
    2682:	21ad      	movs	r1, #173	; 0xad
    2684:	4821      	ldr	r0, [pc, #132]	; (270c <TestBusfault()+0x160>)
    2686:	f009 fab9 	bl	bbfc <__assert_func>

  // Provoke a bus fault (read)
  p = reinterpret_cast<uint32_t *>(0x0A000000);
    268a:	f04f 6320 	mov.w	r3, #167772160	; 0xa000000
    268e:	60bb      	str	r3, [r7, #8]
  volatile uint32_t x = *p;
    2690:	68bb      	ldr	r3, [r7, #8]
    2692:	681b      	ldr	r3, [r3, #0]
    2694:	607b      	str	r3, [r7, #4]

  assert(bus_faults == 2U);
    2696:	481a      	ldr	r0, [pc, #104]	; (2700 <TestBusfault()+0x154>)
    2698:	f000 f94a 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    269c:	4603      	mov	r3, r0
    269e:	2b02      	cmp	r3, #2
    26a0:	d005      	beq.n	26ae <TestBusfault()+0x102>
    26a2:	4b22      	ldr	r3, [pc, #136]	; (272c <TestBusfault()+0x180>)
    26a4:	4a18      	ldr	r2, [pc, #96]	; (2708 <TestBusfault()+0x15c>)
    26a6:	21b3      	movs	r1, #179	; 0xb3
    26a8:	4818      	ldr	r0, [pc, #96]	; (270c <TestBusfault()+0x160>)
    26aa:	f009 faa7 	bl	bbfc <__assert_func>
  assert(scb->CFSR == (kCfsrBfarValidFlag | kCfsrPreciseErrFlag));
    26ae:	68fb      	ldr	r3, [r7, #12]
    26b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    26b2:	f5b3 4f02 	cmp.w	r3, #33280	; 0x8200
    26b6:	d005      	beq.n	26c4 <TestBusfault()+0x118>
    26b8:	4b19      	ldr	r3, [pc, #100]	; (2720 <TestBusfault()+0x174>)
    26ba:	4a13      	ldr	r2, [pc, #76]	; (2708 <TestBusfault()+0x15c>)
    26bc:	21b4      	movs	r1, #180	; 0xb4
    26be:	4813      	ldr	r0, [pc, #76]	; (270c <TestBusfault()+0x160>)
    26c0:	f009 fa9c 	bl	bbfc <__assert_func>
  assert(scb->BFAR == reinterpret_cast<uint32_t>(p));
    26c4:	68fb      	ldr	r3, [r7, #12]
    26c6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    26c8:	68bb      	ldr	r3, [r7, #8]
    26ca:	429a      	cmp	r2, r3
    26cc:	d005      	beq.n	26da <TestBusfault()+0x12e>
    26ce:	4b15      	ldr	r3, [pc, #84]	; (2724 <TestBusfault()+0x178>)
    26d0:	4a0d      	ldr	r2, [pc, #52]	; (2708 <TestBusfault()+0x15c>)
    26d2:	21b5      	movs	r1, #181	; 0xb5
    26d4:	480d      	ldr	r0, [pc, #52]	; (270c <TestBusfault()+0x160>)
    26d6:	f009 fa91 	bl	bbfc <__assert_func>

  // reset bus fault
  scb->CFSR = kCfsrBfarValidFlag | kCfsrPreciseErrFlag;
    26da:	68fb      	ldr	r3, [r7, #12]
    26dc:	f44f 4202 	mov.w	r2, #33280	; 0x8200
    26e0:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0x0U);
    26e2:	68fb      	ldr	r3, [r7, #12]
    26e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    26e6:	2b00      	cmp	r3, #0
    26e8:	d005      	beq.n	26f6 <TestBusfault()+0x14a>
    26ea:	4b0a      	ldr	r3, [pc, #40]	; (2714 <TestBusfault()+0x168>)
    26ec:	4a06      	ldr	r2, [pc, #24]	; (2708 <TestBusfault()+0x15c>)
    26ee:	21b9      	movs	r1, #185	; 0xb9
    26f0:	4806      	ldr	r0, [pc, #24]	; (270c <TestBusfault()+0x160>)
    26f2:	f009 fa83 	bl	bbfc <__assert_func>
}
    26f6:	bf00      	nop
    26f8:	3710      	adds	r7, #16
    26fa:	46bd      	mov	sp, r7
    26fc:	bd80      	pop	{r7, pc}
    26fe:	bf00      	nop
    2700:	20000b10 	.word	0x20000b10
    2704:	000185e8 	.word	0x000185e8
    2708:	000186dc 	.word	0x000186dc
    270c:	00018614 	.word	0x00018614
    2710:	00018674 	.word	0x00018674
    2714:	000186f0 	.word	0x000186f0
    2718:	deadbeef 	.word	0xdeadbeef
    271c:	00018704 	.word	0x00018704
    2720:	00018718 	.word	0x00018718
    2724:	00018750 	.word	0x00018750
    2728:	0001877c 	.word	0x0001877c
    272c:	000187a0 	.word	0x000187a0

00002730 <TestDivideByZero()>:

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiv-by-zero"

void TestDivideByZero() {
    2730:	b580      	push	{r7, lr}
    2732:	b088      	sub	sp, #32
    2734:	af00      	add	r7, sp, #0
  volatile int32_t i_divisor = 0U;
    2736:	2300      	movs	r3, #0
    2738:	61bb      	str	r3, [r7, #24]
  volatile uint32_t u_divisor = 0U;
    273a:	2300      	movs	r3, #0
    273c:	617b      	str	r3, [r7, #20]
  usage_faults = 0U;
    273e:	2100      	movs	r1, #0
    2740:	485f      	ldr	r0, [pc, #380]	; (28c0 <TestDivideByZero()+0x190>)
    2742:	f000 f910 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  auto *scb = GetSCBBase();
    2746:	f7ff fdbf 	bl	22c8 <GetSCBBase()>
    274a:	61f8      	str	r0, [r7, #28]
  assert(scb->CFSR == 0U);
    274c:	69fb      	ldr	r3, [r7, #28]
    274e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2750:	2b00      	cmp	r3, #0
    2752:	d005      	beq.n	2760 <TestDivideByZero()+0x30>
    2754:	4b5b      	ldr	r3, [pc, #364]	; (28c4 <TestDivideByZero()+0x194>)
    2756:	4a5c      	ldr	r2, [pc, #368]	; (28c8 <TestDivideByZero()+0x198>)
    2758:	21c4      	movs	r1, #196	; 0xc4
    275a:	485c      	ldr	r0, [pc, #368]	; (28cc <TestDivideByZero()+0x19c>)
    275c:	f009 fa4e 	bl	bbfc <__assert_func>
  assert((scb->CCR & kCcrDivByZeroTrapEnableFlag) == 0U);
    2760:	69fb      	ldr	r3, [r7, #28]
    2762:	695b      	ldr	r3, [r3, #20]
    2764:	f003 0310 	and.w	r3, r3, #16
    2768:	2b00      	cmp	r3, #0
    276a:	d005      	beq.n	2778 <TestDivideByZero()+0x48>
    276c:	4b58      	ldr	r3, [pc, #352]	; (28d0 <TestDivideByZero()+0x1a0>)
    276e:	4a56      	ldr	r2, [pc, #344]	; (28c8 <TestDivideByZero()+0x198>)
    2770:	21c5      	movs	r1, #197	; 0xc5
    2772:	4856      	ldr	r0, [pc, #344]	; (28cc <TestDivideByZero()+0x19c>)
    2774:	f009 fa42 	bl	bbfc <__assert_func>
  assert(usage_faults == 0U);
    2778:	4851      	ldr	r0, [pc, #324]	; (28c0 <TestDivideByZero()+0x190>)
    277a:	f000 f8d9 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    277e:	4603      	mov	r3, r0
    2780:	2b00      	cmp	r3, #0
    2782:	d005      	beq.n	2790 <TestDivideByZero()+0x60>
    2784:	4b53      	ldr	r3, [pc, #332]	; (28d4 <TestDivideByZero()+0x1a4>)
    2786:	4a50      	ldr	r2, [pc, #320]	; (28c8 <TestDivideByZero()+0x198>)
    2788:	21c6      	movs	r1, #198	; 0xc6
    278a:	4850      	ldr	r0, [pc, #320]	; (28cc <TestDivideByZero()+0x19c>)
    278c:	f009 fa36 	bl	bbfc <__assert_func>

  volatile uint32_t x1 = 123U / u_divisor; // provoke a divide by zero without exception
    2790:	697b      	ldr	r3, [r7, #20]
    2792:	227b      	movs	r2, #123	; 0x7b
    2794:	fbb2 f3f3 	udiv	r3, r2, r3
    2798:	613b      	str	r3, [r7, #16]
  assert(usage_faults == 0U);
    279a:	4849      	ldr	r0, [pc, #292]	; (28c0 <TestDivideByZero()+0x190>)
    279c:	f000 f8c8 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    27a0:	4603      	mov	r3, r0
    27a2:	2b00      	cmp	r3, #0
    27a4:	d005      	beq.n	27b2 <TestDivideByZero()+0x82>
    27a6:	4b4b      	ldr	r3, [pc, #300]	; (28d4 <TestDivideByZero()+0x1a4>)
    27a8:	4a47      	ldr	r2, [pc, #284]	; (28c8 <TestDivideByZero()+0x198>)
    27aa:	21c9      	movs	r1, #201	; 0xc9
    27ac:	4847      	ldr	r0, [pc, #284]	; (28cc <TestDivideByZero()+0x19c>)
    27ae:	f009 fa25 	bl	bbfc <__assert_func>
  assert(x1 == 0);
    27b2:	693b      	ldr	r3, [r7, #16]
    27b4:	2b00      	cmp	r3, #0
    27b6:	d005      	beq.n	27c4 <TestDivideByZero()+0x94>
    27b8:	4b47      	ldr	r3, [pc, #284]	; (28d8 <TestDivideByZero()+0x1a8>)
    27ba:	4a43      	ldr	r2, [pc, #268]	; (28c8 <TestDivideByZero()+0x198>)
    27bc:	21ca      	movs	r1, #202	; 0xca
    27be:	4843      	ldr	r0, [pc, #268]	; (28cc <TestDivideByZero()+0x19c>)
    27c0:	f009 fa1c 	bl	bbfc <__assert_func>

  volatile int32_t x2 = 123 / i_divisor; // provoke a divide by zero without exception
    27c4:	69bb      	ldr	r3, [r7, #24]
    27c6:	227b      	movs	r2, #123	; 0x7b
    27c8:	fb92 f3f3 	sdiv	r3, r2, r3
    27cc:	60fb      	str	r3, [r7, #12]
  assert(usage_faults == 0U);
    27ce:	483c      	ldr	r0, [pc, #240]	; (28c0 <TestDivideByZero()+0x190>)
    27d0:	f000 f8ae 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    27d4:	4603      	mov	r3, r0
    27d6:	2b00      	cmp	r3, #0
    27d8:	d005      	beq.n	27e6 <TestDivideByZero()+0xb6>
    27da:	4b3e      	ldr	r3, [pc, #248]	; (28d4 <TestDivideByZero()+0x1a4>)
    27dc:	4a3a      	ldr	r2, [pc, #232]	; (28c8 <TestDivideByZero()+0x198>)
    27de:	21cd      	movs	r1, #205	; 0xcd
    27e0:	483a      	ldr	r0, [pc, #232]	; (28cc <TestDivideByZero()+0x19c>)
    27e2:	f009 fa0b 	bl	bbfc <__assert_func>
  assert(x2 == 0);
    27e6:	68fb      	ldr	r3, [r7, #12]
    27e8:	2b00      	cmp	r3, #0
    27ea:	d005      	beq.n	27f8 <TestDivideByZero()+0xc8>
    27ec:	4b3b      	ldr	r3, [pc, #236]	; (28dc <TestDivideByZero()+0x1ac>)
    27ee:	4a36      	ldr	r2, [pc, #216]	; (28c8 <TestDivideByZero()+0x198>)
    27f0:	21ce      	movs	r1, #206	; 0xce
    27f2:	4836      	ldr	r0, [pc, #216]	; (28cc <TestDivideByZero()+0x19c>)
    27f4:	f009 fa02 	bl	bbfc <__assert_func>

  // Enable divide by zero trap
  scb->CCR = scb->CCR | kCcrDivByZeroTrapEnableFlag;
    27f8:	69fb      	ldr	r3, [r7, #28]
    27fa:	695b      	ldr	r3, [r3, #20]
    27fc:	f043 0210 	orr.w	r2, r3, #16
    2800:	69fb      	ldr	r3, [r7, #28]
    2802:	615a      	str	r2, [r3, #20]

  volatile uint32_t x3 = 123U / u_divisor; // provoke a divide by zero exception
    2804:	697b      	ldr	r3, [r7, #20]
    2806:	227b      	movs	r2, #123	; 0x7b
    2808:	fbb2 f3f3 	udiv	r3, r2, r3
    280c:	60bb      	str	r3, [r7, #8]
  assert(usage_faults == 1U);
    280e:	482c      	ldr	r0, [pc, #176]	; (28c0 <TestDivideByZero()+0x190>)
    2810:	f000 f88e 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2814:	4603      	mov	r3, r0
    2816:	2b01      	cmp	r3, #1
    2818:	d005      	beq.n	2826 <TestDivideByZero()+0xf6>
    281a:	4b31      	ldr	r3, [pc, #196]	; (28e0 <TestDivideByZero()+0x1b0>)
    281c:	4a2a      	ldr	r2, [pc, #168]	; (28c8 <TestDivideByZero()+0x198>)
    281e:	21d4      	movs	r1, #212	; 0xd4
    2820:	482a      	ldr	r0, [pc, #168]	; (28cc <TestDivideByZero()+0x19c>)
    2822:	f009 f9eb 	bl	bbfc <__assert_func>
  assert(scb->CFSR == kCfsrDivByZeroFlag);
    2826:	69fb      	ldr	r3, [r7, #28]
    2828:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    282a:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
    282e:	d005      	beq.n	283c <TestDivideByZero()+0x10c>
    2830:	4b2c      	ldr	r3, [pc, #176]	; (28e4 <TestDivideByZero()+0x1b4>)
    2832:	4a25      	ldr	r2, [pc, #148]	; (28c8 <TestDivideByZero()+0x198>)
    2834:	21d5      	movs	r1, #213	; 0xd5
    2836:	4825      	ldr	r0, [pc, #148]	; (28cc <TestDivideByZero()+0x19c>)
    2838:	f009 f9e0 	bl	bbfc <__assert_func>
  scb->CFSR = kCfsrDivByZeroFlag; // reset fault
    283c:	69fb      	ldr	r3, [r7, #28]
    283e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
    2842:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0U);
    2844:	69fb      	ldr	r3, [r7, #28]
    2846:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2848:	2b00      	cmp	r3, #0
    284a:	d005      	beq.n	2858 <TestDivideByZero()+0x128>
    284c:	4b1d      	ldr	r3, [pc, #116]	; (28c4 <TestDivideByZero()+0x194>)
    284e:	4a1e      	ldr	r2, [pc, #120]	; (28c8 <TestDivideByZero()+0x198>)
    2850:	21d7      	movs	r1, #215	; 0xd7
    2852:	481e      	ldr	r0, [pc, #120]	; (28cc <TestDivideByZero()+0x19c>)
    2854:	f009 f9d2 	bl	bbfc <__assert_func>

  volatile int32_t x4 = 123 / i_divisor; // provoke a divide by zero exception
    2858:	69bb      	ldr	r3, [r7, #24]
    285a:	227b      	movs	r2, #123	; 0x7b
    285c:	fb92 f3f3 	sdiv	r3, r2, r3
    2860:	607b      	str	r3, [r7, #4]
  assert(usage_faults == 2U);
    2862:	4817      	ldr	r0, [pc, #92]	; (28c0 <TestDivideByZero()+0x190>)
    2864:	f000 f864 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2868:	4603      	mov	r3, r0
    286a:	2b02      	cmp	r3, #2
    286c:	d005      	beq.n	287a <TestDivideByZero()+0x14a>
    286e:	4b1e      	ldr	r3, [pc, #120]	; (28e8 <TestDivideByZero()+0x1b8>)
    2870:	4a15      	ldr	r2, [pc, #84]	; (28c8 <TestDivideByZero()+0x198>)
    2872:	21da      	movs	r1, #218	; 0xda
    2874:	4815      	ldr	r0, [pc, #84]	; (28cc <TestDivideByZero()+0x19c>)
    2876:	f009 f9c1 	bl	bbfc <__assert_func>
  assert(scb->CFSR == kCfsrDivByZeroFlag);
    287a:	69fb      	ldr	r3, [r7, #28]
    287c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    287e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
    2882:	d005      	beq.n	2890 <TestDivideByZero()+0x160>
    2884:	4b17      	ldr	r3, [pc, #92]	; (28e4 <TestDivideByZero()+0x1b4>)
    2886:	4a10      	ldr	r2, [pc, #64]	; (28c8 <TestDivideByZero()+0x198>)
    2888:	21db      	movs	r1, #219	; 0xdb
    288a:	4810      	ldr	r0, [pc, #64]	; (28cc <TestDivideByZero()+0x19c>)
    288c:	f009 f9b6 	bl	bbfc <__assert_func>
  scb->CFSR = kCfsrDivByZeroFlag; // reset fault
    2890:	69fb      	ldr	r3, [r7, #28]
    2892:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
    2896:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0U);
    2898:	69fb      	ldr	r3, [r7, #28]
    289a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    289c:	2b00      	cmp	r3, #0
    289e:	d005      	beq.n	28ac <TestDivideByZero()+0x17c>
    28a0:	4b08      	ldr	r3, [pc, #32]	; (28c4 <TestDivideByZero()+0x194>)
    28a2:	4a09      	ldr	r2, [pc, #36]	; (28c8 <TestDivideByZero()+0x198>)
    28a4:	21dd      	movs	r1, #221	; 0xdd
    28a6:	4809      	ldr	r0, [pc, #36]	; (28cc <TestDivideByZero()+0x19c>)
    28a8:	f009 f9a8 	bl	bbfc <__assert_func>

  // Disable divide by zero trap
  scb->CCR = scb->CCR & ~kCcrDivByZeroTrapEnableFlag;
    28ac:	69fb      	ldr	r3, [r7, #28]
    28ae:	695b      	ldr	r3, [r3, #20]
    28b0:	f023 0210 	bic.w	r2, r3, #16
    28b4:	69fb      	ldr	r3, [r7, #28]
    28b6:	615a      	str	r2, [r3, #20]
}
    28b8:	bf00      	nop
    28ba:	3720      	adds	r7, #32
    28bc:	46bd      	mov	sp, r7
    28be:	bd80      	pop	{r7, pc}
    28c0:	20000b14 	.word	0x20000b14
    28c4:	000185e8 	.word	0x000185e8
    28c8:	000187b4 	.word	0x000187b4
    28cc:	00018614 	.word	0x00018614
    28d0:	000187cc 	.word	0x000187cc
    28d4:	00018660 	.word	0x00018660
    28d8:	000187fc 	.word	0x000187fc
    28dc:	00018804 	.word	0x00018804
    28e0:	00018688 	.word	0x00018688
    28e4:	0001880c 	.word	0x0001880c
    28e8:	0001882c 	.word	0x0001882c

000028ec <TestExceptions()>:
#pragma GCC diagnostic pop

void TestExceptions() {
    28ec:	b580      	push	{r7, lr}
    28ee:	af00      	add	r7, sp, #0
  printf("# Test: Exceptions\n");
    28f0:	4805      	ldr	r0, [pc, #20]	; (2908 <TestExceptions()+0x1c>)
    28f2:	f00a fa29 	bl	cd48 <puts>

  // SysTickDisable(); // deactivate SysTick and wait for the test to finish

  TestVariousFaults();
    28f6:	f7ff fdb7 	bl	2468 <TestVariousFaults()>
  TestBusfault();
    28fa:	f7ff fe57 	bl	25ac <TestBusfault()>
  TestDivideByZero();
    28fe:	f7ff ff17 	bl	2730 <TestDivideByZero()>
    2902:	bf00      	nop
    2904:	bd80      	pop	{r7, pc}
    2906:	bf00      	nop
    2908:	00018840 	.word	0x00018840

0000290c <std::operator&(std::memory_order, std::__memory_order_modifier)>:
    return memory_order(int(__m) | int(__mod));
  }

  constexpr memory_order
  operator&(memory_order __m, __memory_order_modifier __mod)
  {
    290c:	b480      	push	{r7}
    290e:	b083      	sub	sp, #12
    2910:	af00      	add	r7, sp, #0
    2912:	4603      	mov	r3, r0
    2914:	6039      	str	r1, [r7, #0]
    2916:	71fb      	strb	r3, [r7, #7]
    return memory_order(int(__m) & int(__mod));
    2918:	683b      	ldr	r3, [r7, #0]
    291a:	b25a      	sxtb	r2, r3
    291c:	f997 3007 	ldrsb.w	r3, [r7, #7]
    2920:	4013      	ands	r3, r2
    2922:	b25b      	sxtb	r3, r3
    2924:	b2db      	uxtb	r3, r3
  }
    2926:	4618      	mov	r0, r3
    2928:	370c      	adds	r7, #12
    292a:	46bd      	mov	sp, r7
    292c:	bc80      	pop	{r7}
    292e:	4770      	bx	lr

00002930 <std::__atomic_base<unsigned long>::operator unsigned long() const>:
      __atomic_base& operator=(const __atomic_base&) volatile = delete;

      // Requires __int_type convertible to _M_i.
      constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }

      operator __int_type() const noexcept
    2930:	b580      	push	{r7, lr}
    2932:	b084      	sub	sp, #16
    2934:	af00      	add	r7, sp, #0
    2936:	6078      	str	r0, [r7, #4]
    2938:	687b      	ldr	r3, [r7, #4]
    293a:	60fb      	str	r3, [r7, #12]
    293c:	2305      	movs	r3, #5
    293e:	72fb      	strb	r3, [r7, #11]
      }

      _GLIBCXX_ALWAYS_INLINE __int_type
      load(memory_order __m = memory_order_seq_cst) const noexcept
      {
	memory_order __b = __m & __memory_order_mask;
    2940:	7afb      	ldrb	r3, [r7, #11]
    2942:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2946:	4618      	mov	r0, r3
    2948:	f7ff ffe0 	bl	290c <std::operator&(std::memory_order, std::__memory_order_modifier)>
    294c:	4603      	mov	r3, r0
    294e:	72bb      	strb	r3, [r7, #10]
	__glibcxx_assert(__b != memory_order_release);
	__glibcxx_assert(__b != memory_order_acq_rel);

	return __atomic_load_n(&_M_i, int(__m));
    2950:	68fb      	ldr	r3, [r7, #12]
    2952:	f3bf 8f5b 	dmb	ish
    2956:	681b      	ldr	r3, [r3, #0]
    2958:	f3bf 8f5b 	dmb	ish
    295c:	bf00      	nop
      { return load(); }
    295e:	4618      	mov	r0, r3
    2960:	3710      	adds	r7, #16
    2962:	46bd      	mov	sp, r7
    2964:	bd80      	pop	{r7, pc}

00002966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>:
      operator=(__int_type __i) noexcept
    2966:	b580      	push	{r7, lr}
    2968:	b086      	sub	sp, #24
    296a:	af00      	add	r7, sp, #0
    296c:	6078      	str	r0, [r7, #4]
    296e:	6039      	str	r1, [r7, #0]
    2970:	687b      	ldr	r3, [r7, #4]
    2972:	617b      	str	r3, [r7, #20]
    2974:	683b      	ldr	r3, [r7, #0]
    2976:	613b      	str	r3, [r7, #16]
    2978:	2305      	movs	r3, #5
    297a:	73fb      	strb	r3, [r7, #15]
	memory_order __b = __m & __memory_order_mask;
    297c:	7bfb      	ldrb	r3, [r7, #15]
    297e:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2982:	4618      	mov	r0, r3
    2984:	f7ff ffc2 	bl	290c <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2988:	4603      	mov	r3, r0
    298a:	73bb      	strb	r3, [r7, #14]
	__atomic_store_n(&_M_i, __i, int(__m));
    298c:	697b      	ldr	r3, [r7, #20]
    298e:	f3bf 8f5b 	dmb	ish
    2992:	693a      	ldr	r2, [r7, #16]
    2994:	601a      	str	r2, [r3, #0]
    2996:	f3bf 8f5b 	dmb	ish
      }
    299a:	bf00      	nop
	return __i;
    299c:	683b      	ldr	r3, [r7, #0]
      }
    299e:	4618      	mov	r0, r3
    29a0:	3718      	adds	r7, #24
    29a2:	46bd      	mov	sp, r7
    29a4:	bd80      	pop	{r7, pc}

000029a6 <std::__atomic_base<unsigned long>::operator++(int)>:
      operator++(int) noexcept
    29a6:	b480      	push	{r7}
    29a8:	b087      	sub	sp, #28
    29aa:	af00      	add	r7, sp, #0
    29ac:	6078      	str	r0, [r7, #4]
    29ae:	6039      	str	r1, [r7, #0]
    29b0:	687b      	ldr	r3, [r7, #4]
    29b2:	617b      	str	r3, [r7, #20]
    29b4:	2301      	movs	r3, #1
    29b6:	613b      	str	r3, [r7, #16]
    29b8:	2305      	movs	r3, #5
    29ba:	73fb      	strb	r3, [r7, #15]
      }

      _GLIBCXX_ALWAYS_INLINE __int_type
      fetch_add(__int_type __i,
		memory_order __m = memory_order_seq_cst) noexcept
      { return __atomic_fetch_add(&_M_i, __i, int(__m)); }
    29bc:	697b      	ldr	r3, [r7, #20]
    29be:	693a      	ldr	r2, [r7, #16]
    29c0:	f3bf 8f5b 	dmb	ish
    29c4:	e853 1f00 	ldrex	r1, [r3]
    29c8:	eb01 0002 	add.w	r0, r1, r2
    29cc:	e843 0c00 	strex	ip, r0, [r3]
    29d0:	f1bc 0f00 	cmp.w	ip, #0
    29d4:	d1f6      	bne.n	29c4 <std::__atomic_base<unsigned long>::operator++(int)+0x1e>
    29d6:	f3bf 8f5b 	dmb	ish
    29da:	bf00      	nop
      { return fetch_add(1); }
    29dc:	460b      	mov	r3, r1
    29de:	4618      	mov	r0, r3
    29e0:	371c      	adds	r7, #28
    29e2:	46bd      	mov	sp, r7
    29e4:	bc80      	pop	{r7}
    29e6:	4770      	bx	lr

000029e8 <GetSCBBase()>:
static inline volatile SCB *GetSCBBase() {
    29e8:	b480      	push	{r7}
    29ea:	af00      	add	r7, sp, #0
  return reinterpret_cast<SCB *>(reinterpret_cast<unsigned *>(0xE000ED00U));
    29ec:	4b02      	ldr	r3, [pc, #8]	; (29f8 <GetSCBBase()+0x10>)
    29ee:	4618      	mov	r0, r3
    29f0:	46bd      	mov	sp, r7
    29f2:	bc80      	pop	{r7}
    29f4:	4770      	bx	lr
    29f6:	bf00      	nop
    29f8:	e000ed00 	.word	0xe000ed00

000029fc <TestScb()>:
#include <assert.h>
#include <atomic>
#include <stdint.h>
#include <stdio.h>

void TestScb() {
    29fc:	b580      	push	{r7, lr}
    29fe:	b082      	sub	sp, #8
    2a00:	af00      	add	r7, sp, #0
  printf("# Test: System control bus\n");
    2a02:	480a      	ldr	r0, [pc, #40]	; (2a2c <TestScb()+0x30>)
    2a04:	f00a f9a0 	bl	cd48 <puts>
  auto *scb = GetSCBBase();
    2a08:	f7ff ffee 	bl	29e8 <GetSCBBase()>
    2a0c:	6078      	str	r0, [r7, #4]

  assert(scb->CCR == (kCcrStkAlignFlag));
    2a0e:	687b      	ldr	r3, [r7, #4]
    2a10:	695b      	ldr	r3, [r3, #20]
    2a12:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    2a16:	d005      	beq.n	2a24 <TestScb()+0x28>
    2a18:	4b05      	ldr	r3, [pc, #20]	; (2a30 <TestScb()+0x34>)
    2a1a:	4a06      	ldr	r2, [pc, #24]	; (2a34 <TestScb()+0x38>)
    2a1c:	210c      	movs	r1, #12
    2a1e:	4806      	ldr	r0, [pc, #24]	; (2a38 <TestScb()+0x3c>)
    2a20:	f009 f8ec 	bl	bbfc <__assert_func>
    2a24:	bf00      	nop
    2a26:	3708      	adds	r7, #8
    2a28:	46bd      	mov	sp, r7
    2a2a:	bd80      	pop	{r7, pc}
    2a2c:	000188c4 	.word	0x000188c4
    2a30:	000188e0 	.word	0x000188e0
    2a34:	00018900 	.word	0x00018900
    2a38:	00018910 	.word	0x00018910

00002a3c <SVC_Handler>:
char svc_buffer_1[256U];

std::atomic<uint32_t> svc_next_buffer{0U};
std::atomic<uint32_t> svc_call_count{0U};

void SVC_Handler() {
    2a3c:	4668      	mov	r0, sp
    2a3e:	f020 0107 	bic.w	r1, r0, #7
    2a42:	468d      	mov	sp, r1
    2a44:	b581      	push	{r0, r7, lr}
    2a46:	b083      	sub	sp, #12
    2a48:	af00      	add	r7, sp, #0
  svc_call_count++;
    2a4a:	2100      	movs	r1, #0
    2a4c:	482a      	ldr	r0, [pc, #168]	; (2af8 <SVC_Handler+0xbc>)
    2a4e:	f7ff ffaa 	bl	29a6 <std::__atomic_base<unsigned long>::operator++(int)>

  // this looks weird; but it is a simple way to stress the emulator.
  // sprintf does a lot of nasty things and is a good test for the emulator
  if (svc_next_buffer == 1U) {
    2a52:	482a      	ldr	r0, [pc, #168]	; (2afc <SVC_Handler+0xc0>)
    2a54:	f7ff ff6c 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2a58:	4603      	mov	r3, r0
    2a5a:	2b01      	cmp	r3, #1
    2a5c:	bf0c      	ite	eq
    2a5e:	2301      	moveq	r3, #1
    2a60:	2300      	movne	r3, #0
    2a62:	b2db      	uxtb	r3, r3
    2a64:	2b00      	cmp	r3, #0
    2a66:	d01a      	beq.n	2a9e <SVC_Handler+0x62>
    2a68:	2305      	movs	r3, #5
    2a6a:	70fb      	strb	r3, [r7, #3]
	memory_order __b = __m & __memory_order_mask;
    2a6c:	78fb      	ldrb	r3, [r7, #3]
    2a6e:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2a72:	4618      	mov	r0, r3
    2a74:	f7ff ff4a 	bl	290c <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2a78:	4603      	mov	r3, r0
    2a7a:	70bb      	strb	r3, [r7, #2]
	return __atomic_load_n(&_M_i, int(__m));
    2a7c:	4b1e      	ldr	r3, [pc, #120]	; (2af8 <SVC_Handler+0xbc>)
    2a7e:	f3bf 8f5b 	dmb	ish
    2a82:	681b      	ldr	r3, [r3, #0]
    2a84:	f3bf 8f5b 	dmb	ish
    2a88:	bf00      	nop
    sprintf(svc_buffer_1, "SVC_Handler called %i times", svc_call_count.load());
    2a8a:	461a      	mov	r2, r3
    2a8c:	491c      	ldr	r1, [pc, #112]	; (2b00 <SVC_Handler+0xc4>)
    2a8e:	481d      	ldr	r0, [pc, #116]	; (2b04 <SVC_Handler+0xc8>)
    2a90:	f00a fce6 	bl	d460 <sprintf>
    svc_next_buffer = 0U;
    2a94:	2100      	movs	r1, #0
    2a96:	4819      	ldr	r0, [pc, #100]	; (2afc <SVC_Handler+0xc0>)
    2a98:	f7ff ff65 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
    2a9c:	e019      	b.n	2ad2 <SVC_Handler+0x96>
    2a9e:	2305      	movs	r3, #5
    2aa0:	707b      	strb	r3, [r7, #1]
	memory_order __b = __m & __memory_order_mask;
    2aa2:	787b      	ldrb	r3, [r7, #1]
    2aa4:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2aa8:	4618      	mov	r0, r3
    2aaa:	f7ff ff2f 	bl	290c <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2aae:	4603      	mov	r3, r0
    2ab0:	703b      	strb	r3, [r7, #0]
	return __atomic_load_n(&_M_i, int(__m));
    2ab2:	4b11      	ldr	r3, [pc, #68]	; (2af8 <SVC_Handler+0xbc>)
    2ab4:	f3bf 8f5b 	dmb	ish
    2ab8:	681b      	ldr	r3, [r3, #0]
    2aba:	f3bf 8f5b 	dmb	ish
    2abe:	bf00      	nop
  } else {
    sprintf(svc_buffer_0, "SVC_Handler called %i times", svc_call_count.load());
    2ac0:	461a      	mov	r2, r3
    2ac2:	490f      	ldr	r1, [pc, #60]	; (2b00 <SVC_Handler+0xc4>)
    2ac4:	4810      	ldr	r0, [pc, #64]	; (2b08 <SVC_Handler+0xcc>)
    2ac6:	f00a fccb 	bl	d460 <sprintf>
    svc_next_buffer = 1U;
    2aca:	2101      	movs	r1, #1
    2acc:	480b      	ldr	r0, [pc, #44]	; (2afc <SVC_Handler+0xc0>)
    2ace:	f7ff ff4a 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>

  // Burn cycles

  // During this loop another SysTick_Handler call is expected
  // The emulator should be able to handle this
  for (int i = 0; i < 1000U; i++) {
    2ad2:	2300      	movs	r3, #0
    2ad4:	607b      	str	r3, [r7, #4]
    2ad6:	687b      	ldr	r3, [r7, #4]
    2ad8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
    2adc:	d204      	bcs.n	2ae8 <SVC_Handler+0xac>
    __asm__("NOP");
    2ade:	bf00      	nop
  for (int i = 0; i < 1000U; i++) {
    2ae0:	687b      	ldr	r3, [r7, #4]
    2ae2:	3301      	adds	r3, #1
    2ae4:	607b      	str	r3, [r7, #4]
    2ae6:	e7f6      	b.n	2ad6 <SVC_Handler+0x9a>
  }
};
    2ae8:	bf00      	nop
    2aea:	370c      	adds	r7, #12
    2aec:	46bd      	mov	sp, r7
    2aee:	e8bd 4081 	ldmia.w	sp!, {r0, r7, lr}
    2af2:	4685      	mov	sp, r0
    2af4:	4770      	bx	lr
    2af6:	bf00      	nop
    2af8:	20000d1c 	.word	0x20000d1c
    2afc:	20000d18 	.word	0x20000d18
    2b00:	0001898c 	.word	0x0001898c
    2b04:	20000c18 	.word	0x20000c18
    2b08:	20000b18 	.word	0x20000b18

00002b0c <SysTick_Handler>:
char systick_buffer_1[256U];

std::atomic<uint32_t> systick_next_buffer{0U};
std::atomic<uint32_t> systick_call_count{0U};

void SysTick_Handler() {
    2b0c:	4668      	mov	r0, sp
    2b0e:	f020 0107 	bic.w	r1, r0, #7
    2b12:	468d      	mov	sp, r1
    2b14:	b581      	push	{r0, r7, lr}
    2b16:	b083      	sub	sp, #12
    2b18:	af00      	add	r7, sp, #0

  // Call SVC_Handler every 10th time
  if (systick_call_count % 10 == 0U) {
    2b1a:	4830      	ldr	r0, [pc, #192]	; (2bdc <SysTick_Handler+0xd0>)
    2b1c:	f7ff ff08 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2b20:	4601      	mov	r1, r0
    2b22:	4b2f      	ldr	r3, [pc, #188]	; (2be0 <SysTick_Handler+0xd4>)
    2b24:	fba3 2301 	umull	r2, r3, r3, r1
    2b28:	08da      	lsrs	r2, r3, #3
    2b2a:	4613      	mov	r3, r2
    2b2c:	009b      	lsls	r3, r3, #2
    2b2e:	4413      	add	r3, r2
    2b30:	005b      	lsls	r3, r3, #1
    2b32:	1aca      	subs	r2, r1, r3
    2b34:	2a00      	cmp	r2, #0
    2b36:	bf0c      	ite	eq
    2b38:	2301      	moveq	r3, #1
    2b3a:	2300      	movne	r3, #0
    2b3c:	b2db      	uxtb	r3, r3
    2b3e:	2b00      	cmp	r3, #0
    2b40:	d000      	beq.n	2b44 <SysTick_Handler+0x38>
    __asm__("SVC #0x02           \n" : : :);
    2b42:	df02      	svc	2
  }

  systick_call_count++;
    2b44:	2100      	movs	r1, #0
    2b46:	4825      	ldr	r0, [pc, #148]	; (2bdc <SysTick_Handler+0xd0>)
    2b48:	f7ff ff2d 	bl	29a6 <std::__atomic_base<unsigned long>::operator++(int)>

  // this looks weird; but it is a simple way to stress the emulator.
  // sprintf does a lot of nasty things and is a good test for the emulator
  if (systick_next_buffer == 1U) {
    2b4c:	4825      	ldr	r0, [pc, #148]	; (2be4 <SysTick_Handler+0xd8>)
    2b4e:	f7ff feef 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2b52:	4603      	mov	r3, r0
    2b54:	2b01      	cmp	r3, #1
    2b56:	bf0c      	ite	eq
    2b58:	2301      	moveq	r3, #1
    2b5a:	2300      	movne	r3, #0
    2b5c:	b2db      	uxtb	r3, r3
    2b5e:	2b00      	cmp	r3, #0
    2b60:	d01a      	beq.n	2b98 <SysTick_Handler+0x8c>
    2b62:	2305      	movs	r3, #5
    2b64:	71fb      	strb	r3, [r7, #7]
	memory_order __b = __m & __memory_order_mask;
    2b66:	79fb      	ldrb	r3, [r7, #7]
    2b68:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2b6c:	4618      	mov	r0, r3
    2b6e:	f7ff fecd 	bl	290c <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2b72:	4603      	mov	r3, r0
    2b74:	71bb      	strb	r3, [r7, #6]
	return __atomic_load_n(&_M_i, int(__m));
    2b76:	4b19      	ldr	r3, [pc, #100]	; (2bdc <SysTick_Handler+0xd0>)
    2b78:	f3bf 8f5b 	dmb	ish
    2b7c:	681b      	ldr	r3, [r3, #0]
    2b7e:	f3bf 8f5b 	dmb	ish
    2b82:	bf00      	nop
    sprintf(systick_buffer_1, "SysTick_Handler called %i times", systick_call_count.load());
    2b84:	461a      	mov	r2, r3
    2b86:	4918      	ldr	r1, [pc, #96]	; (2be8 <SysTick_Handler+0xdc>)
    2b88:	4818      	ldr	r0, [pc, #96]	; (2bec <SysTick_Handler+0xe0>)
    2b8a:	f00a fc69 	bl	d460 <sprintf>
    systick_next_buffer = 0U;
    2b8e:	2100      	movs	r1, #0
    2b90:	4814      	ldr	r0, [pc, #80]	; (2be4 <SysTick_Handler+0xd8>)
    2b92:	f7ff fee8 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  } else {
    sprintf(systick_buffer_0, "SysTick_Handler called %i times", systick_call_count.load());
    systick_next_buffer = 1U;
  }
};
    2b96:	e019      	b.n	2bcc <SysTick_Handler+0xc0>
    2b98:	2305      	movs	r3, #5
    2b9a:	717b      	strb	r3, [r7, #5]
	memory_order __b = __m & __memory_order_mask;
    2b9c:	797b      	ldrb	r3, [r7, #5]
    2b9e:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2ba2:	4618      	mov	r0, r3
    2ba4:	f7ff feb2 	bl	290c <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2ba8:	4603      	mov	r3, r0
    2baa:	713b      	strb	r3, [r7, #4]
	return __atomic_load_n(&_M_i, int(__m));
    2bac:	4b0b      	ldr	r3, [pc, #44]	; (2bdc <SysTick_Handler+0xd0>)
    2bae:	f3bf 8f5b 	dmb	ish
    2bb2:	681b      	ldr	r3, [r3, #0]
    2bb4:	f3bf 8f5b 	dmb	ish
    2bb8:	bf00      	nop
    sprintf(systick_buffer_0, "SysTick_Handler called %i times", systick_call_count.load());
    2bba:	461a      	mov	r2, r3
    2bbc:	490a      	ldr	r1, [pc, #40]	; (2be8 <SysTick_Handler+0xdc>)
    2bbe:	480c      	ldr	r0, [pc, #48]	; (2bf0 <SysTick_Handler+0xe4>)
    2bc0:	f00a fc4e 	bl	d460 <sprintf>
    systick_next_buffer = 1U;
    2bc4:	2101      	movs	r1, #1
    2bc6:	4807      	ldr	r0, [pc, #28]	; (2be4 <SysTick_Handler+0xd8>)
    2bc8:	f7ff fecd 	bl	2966 <std::__atomic_base<unsigned long>::operator=(unsigned long)>
};
    2bcc:	bf00      	nop
    2bce:	370c      	adds	r7, #12
    2bd0:	46bd      	mov	sp, r7
    2bd2:	e8bd 4081 	ldmia.w	sp!, {r0, r7, lr}
    2bd6:	4685      	mov	sp, r0
    2bd8:	4770      	bx	lr
    2bda:	bf00      	nop
    2bdc:	20000f24 	.word	0x20000f24
    2be0:	cccccccd 	.word	0xcccccccd
    2be4:	20000f20 	.word	0x20000f20
    2be8:	000189a8 	.word	0x000189a8
    2bec:	20000e20 	.word	0x20000e20
    2bf0:	20000d20 	.word	0x20000d20

00002bf4 <StartIrqTest()>:

void StartIrqTest() {
    2bf4:	b580      	push	{r7, lr}
    2bf6:	af00      	add	r7, sp, #0
  // Initialize SysTick
  SysTickInit(2000); // assume this processor runs at 100MHz and the Systick at 500Hz
    2bf8:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
    2bfc:	f7fd fb10 	bl	220 <SysTickInit(unsigned long)>
}
    2c00:	bf00      	nop
    2c02:	bd80      	pop	{r7, pc}

00002c04 <TestIrqs()>:

void TestIrqs() {
    2c04:	b580      	push	{r7, lr}
    2c06:	b082      	sub	sp, #8
    2c08:	af00      	add	r7, sp, #0
  printf("# Test: IRQs\n");
    2c0a:	4856      	ldr	r0, [pc, #344]	; (2d64 <TestIrqs()+0x160>)
    2c0c:	f00a f89c 	bl	cd48 <puts>
  SysTickDisable(); // deactivate SysTick and wait for the test to finish
    2c10:	f7fd fb15 	bl	23e <SysTickDisable()>

  if (systick_call_count != EXPECTED_SYSTICKS) {
    2c14:	4854      	ldr	r0, [pc, #336]	; (2d68 <TestIrqs()+0x164>)
    2c16:	f7ff fe8b 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2c1a:	4603      	mov	r3, r0
    2c1c:	2b5d      	cmp	r3, #93	; 0x5d
    2c1e:	bf14      	ite	ne
    2c20:	2301      	movne	r3, #1
    2c22:	2300      	moveq	r3, #0
    2c24:	b2db      	uxtb	r3, r3
    2c26:	2b00      	cmp	r3, #0
    2c28:	d021      	beq.n	2c6e <TestIrqs()+0x6a>
    2c2a:	2305      	movs	r3, #5
    2c2c:	71fb      	strb	r3, [r7, #7]
	memory_order __b = __m & __memory_order_mask;
    2c2e:	79fb      	ldrb	r3, [r7, #7]
    2c30:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2c34:	4618      	mov	r0, r3
    2c36:	f7ff fe69 	bl	290c <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2c3a:	4603      	mov	r3, r0
    2c3c:	71bb      	strb	r3, [r7, #6]
	return __atomic_load_n(&_M_i, int(__m));
    2c3e:	4b4a      	ldr	r3, [pc, #296]	; (2d68 <TestIrqs()+0x164>)
    2c40:	f3bf 8f5b 	dmb	ish
    2c44:	681b      	ldr	r3, [r3, #0]
    2c46:	f3bf 8f5b 	dmb	ish
    2c4a:	bf00      	nop
    printf("SysTick_Handler called %i times but expected were %i\n", systick_call_count.load(),
    2c4c:	225d      	movs	r2, #93	; 0x5d
    2c4e:	4619      	mov	r1, r3
    2c50:	4846      	ldr	r0, [pc, #280]	; (2d6c <TestIrqs()+0x168>)
    2c52:	f009 ff9f 	bl	cb94 <printf>
           EXPECTED_SYSTICKS);

    assert(systick_call_count != EXPECTED_SYSTICKS);
    2c56:	4844      	ldr	r0, [pc, #272]	; (2d68 <TestIrqs()+0x164>)
    2c58:	f7ff fe6a 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2c5c:	4603      	mov	r3, r0
    2c5e:	2b5d      	cmp	r3, #93	; 0x5d
    2c60:	d105      	bne.n	2c6e <TestIrqs()+0x6a>
    2c62:	4b43      	ldr	r3, [pc, #268]	; (2d70 <TestIrqs()+0x16c>)
    2c64:	4a43      	ldr	r2, [pc, #268]	; (2d74 <TestIrqs()+0x170>)
    2c66:	215d      	movs	r1, #93	; 0x5d
    2c68:	4843      	ldr	r0, [pc, #268]	; (2d78 <TestIrqs()+0x174>)
    2c6a:	f008 ffc7 	bl	bbfc <__assert_func>
  };

  // take the actual buffer
  if (systick_next_buffer == 1U) {
    2c6e:	4843      	ldr	r0, [pc, #268]	; (2d7c <TestIrqs()+0x178>)
    2c70:	f7ff fe5e 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2c74:	4603      	mov	r3, r0
    2c76:	2b01      	cmp	r3, #1
    2c78:	bf0c      	ite	eq
    2c7a:	2301      	moveq	r3, #1
    2c7c:	2300      	movne	r3, #0
    2c7e:	b2db      	uxtb	r3, r3
    2c80:	2b00      	cmp	r3, #0
    2c82:	d00c      	beq.n	2c9e <TestIrqs()+0x9a>
    assert(strcmp(EXPECTED_SYSTICK_STRING, systick_buffer_0) == 0U);
    2c84:	493e      	ldr	r1, [pc, #248]	; (2d80 <TestIrqs()+0x17c>)
    2c86:	483f      	ldr	r0, [pc, #252]	; (2d84 <TestIrqs()+0x180>)
    2c88:	f00a fc0c 	bl	d4a4 <strcmp>
    2c8c:	4603      	mov	r3, r0
    2c8e:	2b00      	cmp	r3, #0
    2c90:	d012      	beq.n	2cb8 <TestIrqs()+0xb4>
    2c92:	4b3d      	ldr	r3, [pc, #244]	; (2d88 <TestIrqs()+0x184>)
    2c94:	4a37      	ldr	r2, [pc, #220]	; (2d74 <TestIrqs()+0x170>)
    2c96:	2162      	movs	r1, #98	; 0x62
    2c98:	4837      	ldr	r0, [pc, #220]	; (2d78 <TestIrqs()+0x174>)
    2c9a:	f008 ffaf 	bl	bbfc <__assert_func>
  } else {
    assert(strcmp(EXPECTED_SYSTICK_STRING, systick_buffer_1) == 0U);
    2c9e:	493b      	ldr	r1, [pc, #236]	; (2d8c <TestIrqs()+0x188>)
    2ca0:	4838      	ldr	r0, [pc, #224]	; (2d84 <TestIrqs()+0x180>)
    2ca2:	f00a fbff 	bl	d4a4 <strcmp>
    2ca6:	4603      	mov	r3, r0
    2ca8:	2b00      	cmp	r3, #0
    2caa:	d005      	beq.n	2cb8 <TestIrqs()+0xb4>
    2cac:	4b38      	ldr	r3, [pc, #224]	; (2d90 <TestIrqs()+0x18c>)
    2cae:	4a31      	ldr	r2, [pc, #196]	; (2d74 <TestIrqs()+0x170>)
    2cb0:	2164      	movs	r1, #100	; 0x64
    2cb2:	4831      	ldr	r0, [pc, #196]	; (2d78 <TestIrqs()+0x174>)
    2cb4:	f008 ffa2 	bl	bbfc <__assert_func>
  }

  if (svc_call_count != EXPECTED_SVC) {
    2cb8:	4836      	ldr	r0, [pc, #216]	; (2d94 <TestIrqs()+0x190>)
    2cba:	f7ff fe39 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2cbe:	4603      	mov	r3, r0
    2cc0:	2b0a      	cmp	r3, #10
    2cc2:	bf14      	ite	ne
    2cc4:	2301      	movne	r3, #1
    2cc6:	2300      	moveq	r3, #0
    2cc8:	b2db      	uxtb	r3, r3
    2cca:	2b00      	cmp	r3, #0
    2ccc:	d021      	beq.n	2d12 <TestIrqs()+0x10e>
    2cce:	2305      	movs	r3, #5
    2cd0:	717b      	strb	r3, [r7, #5]
	memory_order __b = __m & __memory_order_mask;
    2cd2:	797b      	ldrb	r3, [r7, #5]
    2cd4:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2cd8:	4618      	mov	r0, r3
    2cda:	f7ff fe17 	bl	290c <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2cde:	4603      	mov	r3, r0
    2ce0:	713b      	strb	r3, [r7, #4]
	return __atomic_load_n(&_M_i, int(__m));
    2ce2:	4b2c      	ldr	r3, [pc, #176]	; (2d94 <TestIrqs()+0x190>)
    2ce4:	f3bf 8f5b 	dmb	ish
    2ce8:	681b      	ldr	r3, [r3, #0]
    2cea:	f3bf 8f5b 	dmb	ish
    2cee:	bf00      	nop
    printf("SVC_Handler called %i times but expected were %i\n", svc_call_count.load(),
    2cf0:	220a      	movs	r2, #10
    2cf2:	4619      	mov	r1, r3
    2cf4:	4828      	ldr	r0, [pc, #160]	; (2d98 <TestIrqs()+0x194>)
    2cf6:	f009 ff4d 	bl	cb94 <printf>
           EXPECTED_SVC);

    assert(svc_call_count != EXPECTED_SVC);
    2cfa:	4826      	ldr	r0, [pc, #152]	; (2d94 <TestIrqs()+0x190>)
    2cfc:	f7ff fe18 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2d00:	4603      	mov	r3, r0
    2d02:	2b0a      	cmp	r3, #10
    2d04:	d105      	bne.n	2d12 <TestIrqs()+0x10e>
    2d06:	4b25      	ldr	r3, [pc, #148]	; (2d9c <TestIrqs()+0x198>)
    2d08:	4a1a      	ldr	r2, [pc, #104]	; (2d74 <TestIrqs()+0x170>)
    2d0a:	216b      	movs	r1, #107	; 0x6b
    2d0c:	481a      	ldr	r0, [pc, #104]	; (2d78 <TestIrqs()+0x174>)
    2d0e:	f008 ff75 	bl	bbfc <__assert_func>
  };

  // take the actual buffer
  if (svc_next_buffer == 1U) {
    2d12:	4823      	ldr	r0, [pc, #140]	; (2da0 <TestIrqs()+0x19c>)
    2d14:	f7ff fe0c 	bl	2930 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2d18:	4603      	mov	r3, r0
    2d1a:	2b01      	cmp	r3, #1
    2d1c:	bf0c      	ite	eq
    2d1e:	2301      	moveq	r3, #1
    2d20:	2300      	movne	r3, #0
    2d22:	b2db      	uxtb	r3, r3
    2d24:	2b00      	cmp	r3, #0
    2d26:	d00c      	beq.n	2d42 <TestIrqs()+0x13e>
    assert(strcmp(EXPECTED_SVC_STRING, svc_buffer_0) == 0U);
    2d28:	491e      	ldr	r1, [pc, #120]	; (2da4 <TestIrqs()+0x1a0>)
    2d2a:	481f      	ldr	r0, [pc, #124]	; (2da8 <TestIrqs()+0x1a4>)
    2d2c:	f00a fbba 	bl	d4a4 <strcmp>
    2d30:	4603      	mov	r3, r0
    2d32:	2b00      	cmp	r3, #0
    2d34:	d012      	beq.n	2d5c <TestIrqs()+0x158>
    2d36:	4b1d      	ldr	r3, [pc, #116]	; (2dac <TestIrqs()+0x1a8>)
    2d38:	4a0e      	ldr	r2, [pc, #56]	; (2d74 <TestIrqs()+0x170>)
    2d3a:	2170      	movs	r1, #112	; 0x70
    2d3c:	480e      	ldr	r0, [pc, #56]	; (2d78 <TestIrqs()+0x174>)
    2d3e:	f008 ff5d 	bl	bbfc <__assert_func>
  } else {
    assert(strcmp(EXPECTED_SVC_STRING, svc_buffer_1) == 0U);
    2d42:	491b      	ldr	r1, [pc, #108]	; (2db0 <TestIrqs()+0x1ac>)
    2d44:	4818      	ldr	r0, [pc, #96]	; (2da8 <TestIrqs()+0x1a4>)
    2d46:	f00a fbad 	bl	d4a4 <strcmp>
    2d4a:	4603      	mov	r3, r0
    2d4c:	2b00      	cmp	r3, #0
    2d4e:	d005      	beq.n	2d5c <TestIrqs()+0x158>
    2d50:	4b18      	ldr	r3, [pc, #96]	; (2db4 <TestIrqs()+0x1b0>)
    2d52:	4a08      	ldr	r2, [pc, #32]	; (2d74 <TestIrqs()+0x170>)
    2d54:	2172      	movs	r1, #114	; 0x72
    2d56:	4808      	ldr	r0, [pc, #32]	; (2d78 <TestIrqs()+0x174>)
    2d58:	f008 ff50 	bl	bbfc <__assert_func>
  }
    2d5c:	bf00      	nop
    2d5e:	3708      	adds	r7, #8
    2d60:	46bd      	mov	sp, r7
    2d62:	bd80      	pop	{r7, pc}
    2d64:	000189c8 	.word	0x000189c8
    2d68:	20000f24 	.word	0x20000f24
    2d6c:	000189d8 	.word	0x000189d8
    2d70:	00018a10 	.word	0x00018a10
    2d74:	00018a38 	.word	0x00018a38
    2d78:	00018a48 	.word	0x00018a48
    2d7c:	20000f20 	.word	0x20000f20
    2d80:	20000d20 	.word	0x20000d20
    2d84:	00018a90 	.word	0x00018a90
    2d88:	00018ab0 	.word	0x00018ab0
    2d8c:	20000e20 	.word	0x20000e20
    2d90:	00018ae8 	.word	0x00018ae8
    2d94:	20000d1c 	.word	0x20000d1c
    2d98:	00018b20 	.word	0x00018b20
    2d9c:	00018b54 	.word	0x00018b54
    2da0:	20000d18 	.word	0x20000d18
    2da4:	20000b18 	.word	0x20000b18
    2da8:	00018b74 	.word	0x00018b74
    2dac:	00018b90 	.word	0x00018b90
    2db0:	20000c18 	.word	0x20000c18
    2db4:	00018bc0 	.word	0x00018bc0

00002db8 <Crc16(unsigned char const*, unsigned int)>:
#include "test_crc.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

uint16_t Crc16(const uint8_t *data, size_t length) {
    2db8:	b480      	push	{r7}
    2dba:	b087      	sub	sp, #28
    2dbc:	af00      	add	r7, sp, #0
    2dbe:	6078      	str	r0, [r7, #4]
    2dc0:	6039      	str	r1, [r7, #0]
  uint16_t crc = 0xFFFF;              // Initial value
    2dc2:	f64f 73ff 	movw	r3, #65535	; 0xffff
    2dc6:	82fb      	strh	r3, [r7, #22]
  const uint16_t polynomial = 0x1021; // CRC-16-CCITT polynomial
    2dc8:	f241 0321 	movw	r3, #4129	; 0x1021
    2dcc:	817b      	strh	r3, [r7, #10]

  for (size_t i = 0; i < length; ++i) {
    2dce:	2300      	movs	r3, #0
    2dd0:	613b      	str	r3, [r7, #16]
    2dd2:	693a      	ldr	r2, [r7, #16]
    2dd4:	683b      	ldr	r3, [r7, #0]
    2dd6:	429a      	cmp	r2, r3
    2dd8:	d228      	bcs.n	2e2c <Crc16(unsigned char const*, unsigned int)+0x74>
    crc ^= (data[i] << 8); // XOR byte into the top byte of the 16-bit CRC
    2dda:	687a      	ldr	r2, [r7, #4]
    2ddc:	693b      	ldr	r3, [r7, #16]
    2dde:	4413      	add	r3, r2
    2de0:	781b      	ldrb	r3, [r3, #0]
    2de2:	021b      	lsls	r3, r3, #8
    2de4:	b21a      	sxth	r2, r3
    2de6:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
    2dea:	4053      	eors	r3, r2
    2dec:	b21b      	sxth	r3, r3
    2dee:	82fb      	strh	r3, [r7, #22]

    for (int bit = 0; bit < 8; ++bit) {
    2df0:	2300      	movs	r3, #0
    2df2:	60fb      	str	r3, [r7, #12]
    2df4:	68fb      	ldr	r3, [r7, #12]
    2df6:	2b07      	cmp	r3, #7
    2df8:	dc14      	bgt.n	2e24 <Crc16(unsigned char const*, unsigned int)+0x6c>
      if (crc & 0x8000) { // If the top bit is set
    2dfa:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
    2dfe:	2b00      	cmp	r3, #0
    2e00:	da09      	bge.n	2e16 <Crc16(unsigned char const*, unsigned int)+0x5e>
        crc = (crc << 1) ^ polynomial;
    2e02:	8afb      	ldrh	r3, [r7, #22]
    2e04:	005b      	lsls	r3, r3, #1
    2e06:	b21b      	sxth	r3, r3
    2e08:	f483 5381 	eor.w	r3, r3, #4128	; 0x1020
    2e0c:	f083 0301 	eor.w	r3, r3, #1
    2e10:	b21b      	sxth	r3, r3
    2e12:	82fb      	strh	r3, [r7, #22]
    2e14:	e002      	b.n	2e1c <Crc16(unsigned char const*, unsigned int)+0x64>
      } else {
        crc <<= 1;
    2e16:	8afb      	ldrh	r3, [r7, #22]
    2e18:	005b      	lsls	r3, r3, #1
    2e1a:	82fb      	strh	r3, [r7, #22]
    for (int bit = 0; bit < 8; ++bit) {
    2e1c:	68fb      	ldr	r3, [r7, #12]
    2e1e:	3301      	adds	r3, #1
    2e20:	60fb      	str	r3, [r7, #12]
    2e22:	e7e7      	b.n	2df4 <Crc16(unsigned char const*, unsigned int)+0x3c>
  for (size_t i = 0; i < length; ++i) {
    2e24:	693b      	ldr	r3, [r7, #16]
    2e26:	3301      	adds	r3, #1
    2e28:	613b      	str	r3, [r7, #16]
    2e2a:	e7d2      	b.n	2dd2 <Crc16(unsigned char const*, unsigned int)+0x1a>
      }
    }
  }

  return crc;
    2e2c:	8afb      	ldrh	r3, [r7, #22]
}
    2e2e:	4618      	mov	r0, r3
    2e30:	371c      	adds	r7, #28
    2e32:	46bd      	mov	sp, r7
    2e34:	bc80      	pop	{r7}
    2e36:	4770      	bx	lr

00002e38 <TestCrc()>:

void TestCrc() {
    2e38:	b580      	push	{r7, lr}
    2e3a:	b084      	sub	sp, #16
    2e3c:	af00      	add	r7, sp, #0
  printf("# Test: CRC\n");
    2e3e:	4810      	ldr	r0, [pc, #64]	; (2e80 <TestCrc()+0x48>)
    2e40:	f009 ff82 	bl	cd48 <puts>

  // Test data
  char data[] = "123456789";
    2e44:	4a0f      	ldr	r2, [pc, #60]	; (2e84 <TestCrc()+0x4c>)
    2e46:	463b      	mov	r3, r7
    2e48:	ca07      	ldmia	r2, {r0, r1, r2}
    2e4a:	c303      	stmia	r3!, {r0, r1}
    2e4c:	801a      	strh	r2, [r3, #0]
  size_t length = sizeof(data) / sizeof(data[0]) - 1U; // -1 to exclude null terminator
    2e4e:	2309      	movs	r3, #9
    2e50:	60fb      	str	r3, [r7, #12]

  // Calculate CRC16
  uint16_t result = Crc16(reinterpret_cast<uint8_t *>(data), length);
    2e52:	463b      	mov	r3, r7
    2e54:	68f9      	ldr	r1, [r7, #12]
    2e56:	4618      	mov	r0, r3
    2e58:	f7ff ffae 	bl	2db8 <Crc16(unsigned char const*, unsigned int)>
    2e5c:	4603      	mov	r3, r0
    2e5e:	817b      	strh	r3, [r7, #10]

  // printf("CRC16: 0x%X\n", result);
  assert(result == 0x29B1);
    2e60:	897b      	ldrh	r3, [r7, #10]
    2e62:	f642 12b1 	movw	r2, #10673	; 0x29b1
    2e66:	4293      	cmp	r3, r2
    2e68:	d005      	beq.n	2e76 <TestCrc()+0x3e>
    2e6a:	4b07      	ldr	r3, [pc, #28]	; (2e88 <TestCrc()+0x50>)
    2e6c:	4a07      	ldr	r2, [pc, #28]	; (2e8c <TestCrc()+0x54>)
    2e6e:	2124      	movs	r1, #36	; 0x24
    2e70:	4807      	ldr	r0, [pc, #28]	; (2e90 <TestCrc()+0x58>)
    2e72:	f008 fec3 	bl	bbfc <__assert_func>
    2e76:	bf00      	nop
    2e78:	3710      	adds	r7, #16
    2e7a:	46bd      	mov	sp, r7
    2e7c:	bd80      	pop	{r7, pc}
    2e7e:	bf00      	nop
    2e80:	00018bf0 	.word	0x00018bf0
    2e84:	00018c68 	.word	0x00018c68
    2e88:	00018bfc 	.word	0x00018bfc
    2e8c:	00018c10 	.word	0x00018c10
    2e90:	00018c20 	.word	0x00018c20

00002e94 <TestHeap()>:
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

static constexpr uint32_t kAllocCycles = 33U;
void TestHeap() {
    2e94:	b580      	push	{r7, lr}
    2e96:	b088      	sub	sp, #32
    2e98:	af00      	add	r7, sp, #0
  printf("# Test: Heap\n");
    2e9a:	4843      	ldr	r0, [pc, #268]	; (2fa8 <TestHeap()+0x114>)
    2e9c:	f009 ff54 	bl	cd48 <puts>

  // get pointer to the actual heap start
  void *heap = malloc(1U);
    2ea0:	2001      	movs	r0, #1
    2ea2:	f009 f9df 	bl	c264 <malloc>
    2ea6:	4603      	mov	r3, r0
    2ea8:	61bb      	str	r3, [r7, #24]
  void *heap_start = heap;
    2eaa:	69bb      	ldr	r3, [r7, #24]
    2eac:	617b      	str	r3, [r7, #20]
  free(heap);
    2eae:	69b8      	ldr	r0, [r7, #24]
    2eb0:	f009 f9e0 	bl	c274 <free>

  // Test data
  for (uint32_t i = 0U; i < kAllocCycles; i++) {
    2eb4:	2300      	movs	r3, #0
    2eb6:	61fb      	str	r3, [r7, #28]
    2eb8:	69fb      	ldr	r3, [r7, #28]
    2eba:	2b20      	cmp	r3, #32
    2ebc:	d85e      	bhi.n	2f7c <TestHeap()+0xe8>
    uint32_t *p1 = new uint32_t;
    2ebe:	2004      	movs	r0, #4
    2ec0:	f000 f994 	bl	31ec <operator new(unsigned int)>
    2ec4:	4603      	mov	r3, r0
    2ec6:	613b      	str	r3, [r7, #16]
    uint16_t *p2 = new uint16_t;
    2ec8:	2002      	movs	r0, #2
    2eca:	f000 f98f 	bl	31ec <operator new(unsigned int)>
    2ece:	4603      	mov	r3, r0
    2ed0:	60fb      	str	r3, [r7, #12]
    uint8_t *p3 = new uint8_t;
    2ed2:	2001      	movs	r0, #1
    2ed4:	f000 f98a 	bl	31ec <operator new(unsigned int)>
    2ed8:	4603      	mov	r3, r0
    2eda:	60bb      	str	r3, [r7, #8]
    void *p4 = malloc(97U); // 97 is a prime number
    2edc:	2061      	movs	r0, #97	; 0x61
    2ede:	f009 f9c1 	bl	c264 <malloc>
    2ee2:	4603      	mov	r3, r0
    2ee4:	607b      	str	r3, [r7, #4]

    assert(p1 != nullptr);
    2ee6:	693b      	ldr	r3, [r7, #16]
    2ee8:	2b00      	cmp	r3, #0
    2eea:	d105      	bne.n	2ef8 <TestHeap()+0x64>
    2eec:	4b2f      	ldr	r3, [pc, #188]	; (2fac <TestHeap()+0x118>)
    2eee:	4a30      	ldr	r2, [pc, #192]	; (2fb0 <TestHeap()+0x11c>)
    2ef0:	2117      	movs	r1, #23
    2ef2:	4830      	ldr	r0, [pc, #192]	; (2fb4 <TestHeap()+0x120>)
    2ef4:	f008 fe82 	bl	bbfc <__assert_func>
    assert(p2 != nullptr);
    2ef8:	68fb      	ldr	r3, [r7, #12]
    2efa:	2b00      	cmp	r3, #0
    2efc:	d105      	bne.n	2f0a <TestHeap()+0x76>
    2efe:	4b2e      	ldr	r3, [pc, #184]	; (2fb8 <TestHeap()+0x124>)
    2f00:	4a2b      	ldr	r2, [pc, #172]	; (2fb0 <TestHeap()+0x11c>)
    2f02:	2118      	movs	r1, #24
    2f04:	482b      	ldr	r0, [pc, #172]	; (2fb4 <TestHeap()+0x120>)
    2f06:	f008 fe79 	bl	bbfc <__assert_func>
    assert(p3 != nullptr);
    2f0a:	68bb      	ldr	r3, [r7, #8]
    2f0c:	2b00      	cmp	r3, #0
    2f0e:	d105      	bne.n	2f1c <TestHeap()+0x88>
    2f10:	4b2a      	ldr	r3, [pc, #168]	; (2fbc <TestHeap()+0x128>)
    2f12:	4a27      	ldr	r2, [pc, #156]	; (2fb0 <TestHeap()+0x11c>)
    2f14:	2119      	movs	r1, #25
    2f16:	4827      	ldr	r0, [pc, #156]	; (2fb4 <TestHeap()+0x120>)
    2f18:	f008 fe70 	bl	bbfc <__assert_func>
    assert(p4 != nullptr);
    2f1c:	687b      	ldr	r3, [r7, #4]
    2f1e:	2b00      	cmp	r3, #0
    2f20:	d105      	bne.n	2f2e <TestHeap()+0x9a>
    2f22:	4b27      	ldr	r3, [pc, #156]	; (2fc0 <TestHeap()+0x12c>)
    2f24:	4a22      	ldr	r2, [pc, #136]	; (2fb0 <TestHeap()+0x11c>)
    2f26:	211a      	movs	r1, #26
    2f28:	4822      	ldr	r0, [pc, #136]	; (2fb4 <TestHeap()+0x120>)
    2f2a:	f008 fe67 	bl	bbfc <__assert_func>
    *p1 = i;
    2f2e:	693b      	ldr	r3, [r7, #16]
    2f30:	69fa      	ldr	r2, [r7, #28]
    2f32:	601a      	str	r2, [r3, #0]
    *p2 = i;
    2f34:	69fb      	ldr	r3, [r7, #28]
    2f36:	b29a      	uxth	r2, r3
    2f38:	68fb      	ldr	r3, [r7, #12]
    2f3a:	801a      	strh	r2, [r3, #0]
    *p3 = i;
    2f3c:	69fb      	ldr	r3, [r7, #28]
    2f3e:	b2da      	uxtb	r2, r3
    2f40:	68bb      	ldr	r3, [r7, #8]
    2f42:	701a      	strb	r2, [r3, #0]

    delete p1;
    2f44:	693b      	ldr	r3, [r7, #16]
    2f46:	2b00      	cmp	r3, #0
    2f48:	d003      	beq.n	2f52 <TestHeap()+0xbe>
    2f4a:	2104      	movs	r1, #4
    2f4c:	4618      	mov	r0, r3
    2f4e:	f000 f94b 	bl	31e8 <operator delete(void*, unsigned int)>
    delete p2;
    2f52:	68fb      	ldr	r3, [r7, #12]
    2f54:	2b00      	cmp	r3, #0
    2f56:	d003      	beq.n	2f60 <TestHeap()+0xcc>
    2f58:	2102      	movs	r1, #2
    2f5a:	4618      	mov	r0, r3
    2f5c:	f000 f944 	bl	31e8 <operator delete(void*, unsigned int)>
    delete p3;
    2f60:	68bb      	ldr	r3, [r7, #8]
    2f62:	2b00      	cmp	r3, #0
    2f64:	d003      	beq.n	2f6e <TestHeap()+0xda>
    2f66:	2101      	movs	r1, #1
    2f68:	4618      	mov	r0, r3
    2f6a:	f000 f93d 	bl	31e8 <operator delete(void*, unsigned int)>
    free(p4);
    2f6e:	6878      	ldr	r0, [r7, #4]
    2f70:	f009 f980 	bl	c274 <free>
  for (uint32_t i = 0U; i < kAllocCycles; i++) {
    2f74:	69fb      	ldr	r3, [r7, #28]
    2f76:	3301      	adds	r3, #1
    2f78:	61fb      	str	r3, [r7, #28]
    2f7a:	e79d      	b.n	2eb8 <TestHeap()+0x24>
  }

  heap = malloc(1U);
    2f7c:	2001      	movs	r0, #1
    2f7e:	f009 f971 	bl	c264 <malloc>
    2f82:	4603      	mov	r3, r0
    2f84:	61bb      	str	r3, [r7, #24]
  assert(heap == heap_start);
    2f86:	69ba      	ldr	r2, [r7, #24]
    2f88:	697b      	ldr	r3, [r7, #20]
    2f8a:	429a      	cmp	r2, r3
    2f8c:	d005      	beq.n	2f9a <TestHeap()+0x106>
    2f8e:	4b0d      	ldr	r3, [pc, #52]	; (2fc4 <TestHeap()+0x130>)
    2f90:	4a07      	ldr	r2, [pc, #28]	; (2fb0 <TestHeap()+0x11c>)
    2f92:	2126      	movs	r1, #38	; 0x26
    2f94:	4807      	ldr	r0, [pc, #28]	; (2fb4 <TestHeap()+0x120>)
    2f96:	f008 fe31 	bl	bbfc <__assert_func>
  free(heap);
    2f9a:	69b8      	ldr	r0, [r7, #24]
    2f9c:	f009 f96a 	bl	c274 <free>
    2fa0:	bf00      	nop
    2fa2:	3720      	adds	r7, #32
    2fa4:	46bd      	mov	sp, r7
    2fa6:	bd80      	pop	{r7, pc}
    2fa8:	00018c78 	.word	0x00018c78
    2fac:	00018c88 	.word	0x00018c88
    2fb0:	00018c98 	.word	0x00018c98
    2fb4:	00018ca8 	.word	0x00018ca8
    2fb8:	00018cf0 	.word	0x00018cf0
    2fbc:	00018d00 	.word	0x00018d00
    2fc0:	00018d10 	.word	0x00018d10
    2fc4:	00018d20 	.word	0x00018d20

00002fc8 <ReadPSP()>:
// Inline assembly helper to set the PSP
__attribute__((always_inline)) inline void SetPSP(uint32_t pspValue) {
  __asm volatile("MSR PSP, %0\n" ::"r"(pspValue) : "memory"); // Input value for r0
}

uint32_t ReadPSP() {
    2fc8:	b480      	push	{r7}
    2fca:	b083      	sub	sp, #12
    2fcc:	af00      	add	r7, sp, #0
  uint32_t psp_val;
  __asm volatile("MRS %0, PSP\n" : "=r"(psp_val));
    2fce:	f3ef 8309 	mrs	r3, PSP
    2fd2:	607b      	str	r3, [r7, #4]
  return psp_val;
    2fd4:	687b      	ldr	r3, [r7, #4]
}
    2fd6:	4618      	mov	r0, r3
    2fd8:	370c      	adds	r7, #12
    2fda:	46bd      	mov	sp, r7
    2fdc:	bc80      	pop	{r7}
    2fde:	4770      	bx	lr

00002fe0 <ReadMSP()>:

uint32_t ReadMSP() {
    2fe0:	b480      	push	{r7}
    2fe2:	b083      	sub	sp, #12
    2fe4:	af00      	add	r7, sp, #0
  uint32_t msp_val;
  __asm volatile("MRS %0, MSP\n" : "=r"(msp_val));
    2fe6:	f3ef 8308 	mrs	r3, MSP
    2fea:	607b      	str	r3, [r7, #4]
  return msp_val;
    2fec:	687b      	ldr	r3, [r7, #4]
}
    2fee:	4618      	mov	r0, r3
    2ff0:	370c      	adds	r7, #12
    2ff2:	46bd      	mov	sp, r7
    2ff4:	bc80      	pop	{r7}
    2ff6:	4770      	bx	lr

00002ff8 <ReadControl()>:
                 ::
                     : "r0");
}

// Function to read the CONTROL register
uint32_t ReadControl() {
    2ff8:	b480      	push	{r7}
    2ffa:	b083      	sub	sp, #12
    2ffc:	af00      	add	r7, sp, #0
  uint32_t controlValue;
  __asm volatile("MRS %0, CONTROL\n" : "=r"(controlValue));
    2ffe:	f3ef 8314 	mrs	r3, CONTROL
    3002:	607b      	str	r3, [r7, #4]
  return controlValue;
    3004:	687b      	ldr	r3, [r7, #4]
}
    3006:	4618      	mov	r0, r3
    3008:	370c      	adds	r7, #12
    300a:	46bd      	mov	sp, r7
    300c:	bc80      	pop	{r7}
    300e:	4770      	bx	lr

00003010 <ProcessStackFct()>:

void __attribute__((noinline)) ProcessStackFct() {
    3010:	b580      	push	{r7, lr}
    3012:	b082      	sub	sp, #8
    3014:	af00      	add	r7, sp, #0
  auto control{0U};
    3016:	2300      	movs	r3, #0
    3018:	607b      	str	r3, [r7, #4]
  control = ReadControl(); // Read the CONTROL register
    301a:	f7ff ffed 	bl	2ff8 <ReadControl()>
    301e:	6078      	str	r0, [r7, #4]
  assert(control == 0x2U); // Check if the CONTROL register is set to use PSP
    3020:	687b      	ldr	r3, [r7, #4]
    3022:	2b02      	cmp	r3, #2
    3024:	d005      	beq.n	3032 <ProcessStackFct()+0x22>
    3026:	4b05      	ldr	r3, [pc, #20]	; (303c <ProcessStackFct()+0x2c>)
    3028:	4a05      	ldr	r2, [pc, #20]	; (3040 <ProcessStackFct()+0x30>)
    302a:	2135      	movs	r1, #53	; 0x35
    302c:	4805      	ldr	r0, [pc, #20]	; (3044 <ProcessStackFct()+0x34>)
    302e:	f008 fde5 	bl	bbfc <__assert_func>
}
    3032:	bf00      	nop
    3034:	3708      	adds	r7, #8
    3036:	46bd      	mov	sp, r7
    3038:	bd80      	pop	{r7, pc}
    303a:	bf00      	nop
    303c:	00018d34 	.word	0x00018d34
    3040:	00018d44 	.word	0x00018d44
    3044:	00018d5c 	.word	0x00018d5c

00003048 <TestProcessStack()>:

static uint32_t process_stack[1024]; // Define a stack for the process mode
void TestProcessStack() {
    3048:	b580      	push	{r7, lr}
    304a:	b084      	sub	sp, #16
    304c:	af00      	add	r7, sp, #0
  printf("# Test: Process Stack Pointer\n");
    304e:	4821      	ldr	r0, [pc, #132]	; (30d4 <TestProcessStack()+0x8c>)
    3050:	f009 fe7a 	bl	cd48 <puts>
  auto control = ReadControl(); // Read the CONTROL register
    3054:	f7ff ffd0 	bl	2ff8 <ReadControl()>
    3058:	60f8      	str	r0, [r7, #12]
  assert(control == 0x0U);      // Check if the CONTROL register is set to use MSP
    305a:	68fb      	ldr	r3, [r7, #12]
    305c:	2b00      	cmp	r3, #0
    305e:	d005      	beq.n	306c <TestProcessStack()+0x24>
    3060:	4b1d      	ldr	r3, [pc, #116]	; (30d8 <TestProcessStack()+0x90>)
    3062:	4a1e      	ldr	r2, [pc, #120]	; (30dc <TestProcessStack()+0x94>)
    3064:	213c      	movs	r1, #60	; 0x3c
    3066:	481e      	ldr	r0, [pc, #120]	; (30e0 <TestProcessStack()+0x98>)
    3068:	f008 fdc8 	bl	bbfc <__assert_func>

  uint32_t psp_val =
    306c:	4b1d      	ldr	r3, [pc, #116]	; (30e4 <TestProcessStack()+0x9c>)
    306e:	60bb      	str	r3, [r7, #8]
    3070:	68bb      	ldr	r3, [r7, #8]
    3072:	607b      	str	r3, [r7, #4]
  __asm volatile("MSR PSP, %0\n" ::"r"(pspValue) : "memory"); // Input value for r0
    3074:	687b      	ldr	r3, [r7, #4]
    3076:	f383 8809 	msr	PSP, r3
}
    307a:	bf00      	nop
      reinterpret_cast<uint32_t>(&process_stack[1024]); // Initialize PSP (top of stack)

  SetPSP(psp_val);              // Set the PSP
  assert(ReadPSP() == psp_val); // Check if the PSP is set correctly
    307c:	f7ff ffa4 	bl	2fc8 <ReadPSP()>
    3080:	4602      	mov	r2, r0
    3082:	68bb      	ldr	r3, [r7, #8]
    3084:	4293      	cmp	r3, r2
    3086:	d005      	beq.n	3094 <TestProcessStack()+0x4c>
    3088:	4b17      	ldr	r3, [pc, #92]	; (30e8 <TestProcessStack()+0xa0>)
    308a:	4a14      	ldr	r2, [pc, #80]	; (30dc <TestProcessStack()+0x94>)
    308c:	2142      	movs	r1, #66	; 0x42
    308e:	4814      	ldr	r0, [pc, #80]	; (30e0 <TestProcessStack()+0x98>)
    3090:	f008 fdb4 	bl	bbfc <__assert_func>
  __asm volatile("MRS r0, CONTROL\n"   // Move CONTROL register to r0
    3094:	f3ef 8014 	mrs	r0, CONTROL
    3098:	f040 0002 	orr.w	r0, r0, #2
    309c:	f380 8814 	msr	CONTROL, r0
}
    30a0:	bf00      	nop
  SwitchToPSP();                // Switch to use PSP for stack operations

  ProcessStackFct(); // Call the function to test the process stack
    30a2:	f7ff ffb5 	bl	3010 <ProcessStackFct()>
  __asm volatile("MRS r0, CONTROL\n"   // Move CONTROL register to r0
    30a6:	f3ef 8014 	mrs	r0, CONTROL
    30aa:	f020 0002 	bic.w	r0, r0, #2
    30ae:	f380 8814 	msr	CONTROL, r0
}
    30b2:	bf00      	nop

  SwitchToMSP();           // Switch to use MSP for stack operations
  control = ReadControl(); // Read the CONTROL register
    30b4:	f7ff ffa0 	bl	2ff8 <ReadControl()>
    30b8:	60f8      	str	r0, [r7, #12]
  assert(control == 0x0U); // Check if the CONTROL register is set to use MSP
    30ba:	68fb      	ldr	r3, [r7, #12]
    30bc:	2b00      	cmp	r3, #0
    30be:	d005      	beq.n	30cc <TestProcessStack()+0x84>
    30c0:	4b05      	ldr	r3, [pc, #20]	; (30d8 <TestProcessStack()+0x90>)
    30c2:	4a06      	ldr	r2, [pc, #24]	; (30dc <TestProcessStack()+0x94>)
    30c4:	2149      	movs	r1, #73	; 0x49
    30c6:	4806      	ldr	r0, [pc, #24]	; (30e0 <TestProcessStack()+0x98>)
    30c8:	f008 fd98 	bl	bbfc <__assert_func>
}
    30cc:	bf00      	nop
    30ce:	3710      	adds	r7, #16
    30d0:	46bd      	mov	sp, r7
    30d2:	bd80      	pop	{r7, pc}
    30d4:	00018dac 	.word	0x00018dac
    30d8:	00018dcc 	.word	0x00018dcc
    30dc:	00018ddc 	.word	0x00018ddc
    30e0:	00018d5c 	.word	0x00018d5c
    30e4:	20001f28 	.word	0x20001f28
    30e8:	00018df4 	.word	0x00018df4

000030ec <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
    30ec:	2310      	movs	r3, #16
    30ee:	b570      	push	{r4, r5, r6, lr}
    30f0:	2400      	movs	r4, #0
    30f2:	b084      	sub	sp, #16
    30f4:	9302      	str	r3, [sp, #8]
    30f6:	6803      	ldr	r3, [r0, #0]
    30f8:	4615      	mov	r5, r2
    30fa:	699e      	ldr	r6, [r3, #24]
    30fc:	6812      	ldr	r2, [r2, #0]
    30fe:	466b      	mov	r3, sp
    3100:	9400      	str	r4, [sp, #0]
    3102:	9401      	str	r4, [sp, #4]
    3104:	9403      	str	r4, [sp, #12]
    3106:	47b0      	blx	r6
    3108:	f89d 3004 	ldrb.w	r3, [sp, #4]
    310c:	f003 0306 	and.w	r3, r3, #6
    3110:	2b06      	cmp	r3, #6
    3112:	bf09      	itett	eq
    3114:	2001      	moveq	r0, #1
    3116:	4620      	movne	r0, r4
    3118:	9b00      	ldreq	r3, [sp, #0]
    311a:	602b      	streq	r3, [r5, #0]
    311c:	b004      	add	sp, #16
    311e:	bd70      	pop	{r4, r5, r6, pc}

00003120 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    3120:	9800      	ldr	r0, [sp, #0]
    3122:	4290      	cmp	r0, r2
    3124:	bf14      	ite	ne
    3126:	2001      	movne	r0, #1
    3128:	2006      	moveq	r0, #6
    312a:	4770      	bx	lr

0000312c <__cxxabiv1::__class_type_info::~__class_type_info()>:
    312c:	b510      	push	{r4, lr}
    312e:	4604      	mov	r4, r0
    3130:	4b02      	ldr	r3, [pc, #8]	; (313c <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
    3132:	6003      	str	r3, [r0, #0]
    3134:	f000 f906 	bl	3344 <std::type_info::~type_info()>
    3138:	4620      	mov	r0, r4
    313a:	bd10      	pop	{r4, pc}
    313c:	00018e44 	.word	0x00018e44

00003140 <__cxxabiv1::__class_type_info::~__class_type_info()>:
    3140:	b510      	push	{r4, lr}
    3142:	4604      	mov	r4, r0
    3144:	4b04      	ldr	r3, [pc, #16]	; (3158 <__cxxabiv1::__class_type_info::~__class_type_info()+0x18>)
    3146:	6003      	str	r3, [r0, #0]
    3148:	f000 f8fc 	bl	3344 <std::type_info::~type_info()>
    314c:	4620      	mov	r0, r4
    314e:	2108      	movs	r1, #8
    3150:	f000 f84a 	bl	31e8 <operator delete(void*, unsigned int)>
    3154:	4620      	mov	r0, r4
    3156:	bd10      	pop	{r4, pc}
    3158:	00018e44 	.word	0x00018e44

0000315c <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    315c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3160:	9f06      	ldr	r7, [sp, #24]
    3162:	e9dd 1508 	ldrd	r1, r5, [sp, #32]
    3166:	428f      	cmp	r7, r1
    3168:	4604      	mov	r4, r0
    316a:	4690      	mov	r8, r2
    316c:	461e      	mov	r6, r3
    316e:	d00c      	beq.n	318a <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
    3170:	4631      	mov	r1, r6
    3172:	4620      	mov	r0, r4
    3174:	f000 f90a 	bl	338c <std::type_info::operator==(std::type_info const&) const>
    3178:	b120      	cbz	r0, 3184 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x28>
    317a:	2301      	movs	r3, #1
    317c:	602f      	str	r7, [r5, #0]
    317e:	f885 8004 	strb.w	r8, [r5, #4]
    3182:	71ab      	strb	r3, [r5, #6]
    3184:	2000      	movs	r0, #0
    3186:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    318a:	9907      	ldr	r1, [sp, #28]
    318c:	f000 f8fe 	bl	338c <std::type_info::operator==(std::type_info const&) const>
    3190:	2800      	cmp	r0, #0
    3192:	d0ed      	beq.n	3170 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x14>
    3194:	2000      	movs	r0, #0
    3196:	f885 8005 	strb.w	r8, [r5, #5]
    319a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    319e:	bf00      	nop

000031a0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    31a0:	b538      	push	{r3, r4, r5, lr}
    31a2:	4615      	mov	r5, r2
    31a4:	461c      	mov	r4, r3
    31a6:	f000 f8f1 	bl	338c <std::type_info::operator==(std::type_info const&) const>
    31aa:	b900      	cbnz	r0, 31ae <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe>
    31ac:	bd38      	pop	{r3, r4, r5, pc}
    31ae:	2208      	movs	r2, #8
    31b0:	2306      	movs	r3, #6
    31b2:	6025      	str	r5, [r4, #0]
    31b4:	60e2      	str	r2, [r4, #12]
    31b6:	7123      	strb	r3, [r4, #4]
    31b8:	bd38      	pop	{r3, r4, r5, pc}
    31ba:	bf00      	nop

000031bc <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
    31bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    31c0:	4606      	mov	r6, r0
    31c2:	4617      	mov	r7, r2
    31c4:	461d      	mov	r5, r3
    31c6:	460c      	mov	r4, r1
    31c8:	f000 f8e0 	bl	338c <std::type_info::operator==(std::type_info const&) const>
    31cc:	b948      	cbnz	r0, 31e2 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    31ce:	2d03      	cmp	r5, #3
    31d0:	d807      	bhi.n	31e2 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    31d2:	6823      	ldr	r3, [r4, #0]
    31d4:	463a      	mov	r2, r7
    31d6:	4631      	mov	r1, r6
    31d8:	4620      	mov	r0, r4
    31da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    31de:	695b      	ldr	r3, [r3, #20]
    31e0:	4718      	bx	r3
    31e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    31e6:	bf00      	nop

000031e8 <operator delete(void*, unsigned int)>:
    31e8:	f000 b902 	b.w	33f0 <operator delete(void*)>

000031ec <operator new(unsigned int)>:
    31ec:	2801      	cmp	r0, #1
    31ee:	bf38      	it	cc
    31f0:	2001      	movcc	r0, #1
    31f2:	b510      	push	{r4, lr}
    31f4:	4604      	mov	r4, r0
    31f6:	4620      	mov	r0, r4
    31f8:	f009 f834 	bl	c264 <malloc>
    31fc:	b100      	cbz	r0, 3200 <operator new(unsigned int)+0x14>
    31fe:	bd10      	pop	{r4, pc}
    3200:	f000 fb20 	bl	3844 <std::get_new_handler()>
    3204:	b108      	cbz	r0, 320a <operator new(unsigned int)+0x1e>
    3206:	4780      	blx	r0
    3208:	e7f5      	b.n	31f6 <operator new(unsigned int)+0xa>
    320a:	2004      	movs	r0, #4
    320c:	f000 f970 	bl	34f0 <__cxa_allocate_exception>
    3210:	4b02      	ldr	r3, [pc, #8]	; (321c <operator new(unsigned int)+0x30>)
    3212:	4a03      	ldr	r2, [pc, #12]	; (3220 <operator new(unsigned int)+0x34>)
    3214:	4903      	ldr	r1, [pc, #12]	; (3224 <operator new(unsigned int)+0x38>)
    3216:	6003      	str	r3, [r0, #0]
    3218:	f000 fab0 	bl	377c <__cxa_throw>
    321c:	00018f34 	.word	0x00018f34
    3220:	000033c1 	.word	0x000033c1
    3224:	00018f10 	.word	0x00018f10

00003228 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    3228:	b510      	push	{r4, lr}
    322a:	4604      	mov	r4, r0
    322c:	4b02      	ldr	r3, [pc, #8]	; (3238 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
    322e:	6003      	str	r3, [r0, #0]
    3230:	f7ff ff7c 	bl	312c <__cxxabiv1::__class_type_info::~__class_type_info()>
    3234:	4620      	mov	r0, r4
    3236:	bd10      	pop	{r4, pc}
    3238:	00018ea4 	.word	0x00018ea4

0000323c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    323c:	b510      	push	{r4, lr}
    323e:	4604      	mov	r4, r0
    3240:	4b04      	ldr	r3, [pc, #16]	; (3254 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x18>)
    3242:	6003      	str	r3, [r0, #0]
    3244:	f7ff ff72 	bl	312c <__cxxabiv1::__class_type_info::~__class_type_info()>
    3248:	4620      	mov	r0, r4
    324a:	210c      	movs	r1, #12
    324c:	f7ff ffcc 	bl	31e8 <operator delete(void*, unsigned int)>
    3250:	4620      	mov	r0, r4
    3252:	bd10      	pop	{r4, pc}
    3254:	00018ea4 	.word	0x00018ea4

00003258 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    3258:	b570      	push	{r4, r5, r6, lr}
    325a:	b082      	sub	sp, #8
    325c:	9e06      	ldr	r6, [sp, #24]
    325e:	4604      	mov	r4, r0
    3260:	4296      	cmp	r6, r2
    3262:	460d      	mov	r5, r1
    3264:	d009      	beq.n	327a <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x22>
    3266:	68a0      	ldr	r0, [r4, #8]
    3268:	4629      	mov	r1, r5
    326a:	6804      	ldr	r4, [r0, #0]
    326c:	9606      	str	r6, [sp, #24]
    326e:	6a24      	ldr	r4, [r4, #32]
    3270:	46a4      	mov	ip, r4
    3272:	b002      	add	sp, #8
    3274:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    3278:	4760      	bx	ip
    327a:	4619      	mov	r1, r3
    327c:	9201      	str	r2, [sp, #4]
    327e:	9300      	str	r3, [sp, #0]
    3280:	f000 f884 	bl	338c <std::type_info::operator==(std::type_info const&) const>
    3284:	e9dd 3200 	ldrd	r3, r2, [sp]
    3288:	2800      	cmp	r0, #0
    328a:	d0ec      	beq.n	3266 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0xe>
    328c:	2006      	movs	r0, #6
    328e:	b002      	add	sp, #8
    3290:	bd70      	pop	{r4, r5, r6, pc}
    3292:	bf00      	nop

00003294 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    3294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3298:	460d      	mov	r5, r1
    329a:	b081      	sub	sp, #4
    329c:	4619      	mov	r1, r3
    329e:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	; 0x28
    32a2:	e9dd 980c 	ldrd	r9, r8, [sp, #48]	; 0x30
    32a6:	461c      	mov	r4, r3
    32a8:	4606      	mov	r6, r0
    32aa:	4693      	mov	fp, r2
    32ac:	f000 f86e 	bl	338c <std::type_info::operator==(std::type_info const&) const>
    32b0:	b980      	cbnz	r0, 32d4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x40>
    32b2:	454f      	cmp	r7, r9
    32b4:	d027      	beq.n	3306 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x72>
    32b6:	68b0      	ldr	r0, [r6, #8]
    32b8:	4623      	mov	r3, r4
    32ba:	6804      	ldr	r4, [r0, #0]
    32bc:	e9cd 980c 	strd	r9, r8, [sp, #48]	; 0x30
    32c0:	e9cd 7a0a 	strd	r7, sl, [sp, #40]	; 0x28
    32c4:	69e4      	ldr	r4, [r4, #28]
    32c6:	465a      	mov	r2, fp
    32c8:	4629      	mov	r1, r5
    32ca:	46a4      	mov	ip, r4
    32cc:	b001      	add	sp, #4
    32ce:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    32d2:	4760      	bx	ip
    32d4:	2d00      	cmp	r5, #0
    32d6:	f8c8 7000 	str.w	r7, [r8]
    32da:	f888 b004 	strb.w	fp, [r8, #4]
    32de:	db0c      	blt.n	32fa <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x66>
    32e0:	443d      	add	r5, r7
    32e2:	45a9      	cmp	r9, r5
    32e4:	bf0c      	ite	eq
    32e6:	f04f 0906 	moveq.w	r9, #6
    32ea:	f04f 0901 	movne.w	r9, #1
    32ee:	f888 9006 	strb.w	r9, [r8, #6]
    32f2:	2000      	movs	r0, #0
    32f4:	b001      	add	sp, #4
    32f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    32fa:	3502      	adds	r5, #2
    32fc:	d1f9      	bne.n	32f2 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x5e>
    32fe:	2301      	movs	r3, #1
    3300:	f888 3006 	strb.w	r3, [r8, #6]
    3304:	e7f5      	b.n	32f2 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x5e>
    3306:	4651      	mov	r1, sl
    3308:	4630      	mov	r0, r6
    330a:	f000 f83f 	bl	338c <std::type_info::operator==(std::type_info const&) const>
    330e:	2800      	cmp	r0, #0
    3310:	d0d1      	beq.n	32b6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22>
    3312:	f888 b005 	strb.w	fp, [r8, #5]
    3316:	e7ec      	b.n	32f2 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x5e>

00003318 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    3318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    331c:	4606      	mov	r6, r0
    331e:	460f      	mov	r7, r1
    3320:	4614      	mov	r4, r2
    3322:	461d      	mov	r5, r3
    3324:	f7ff ff3c 	bl	31a0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
    3328:	b948      	cbnz	r0, 333e <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
    332a:	68b0      	ldr	r0, [r6, #8]
    332c:	462b      	mov	r3, r5
    332e:	6805      	ldr	r5, [r0, #0]
    3330:	4622      	mov	r2, r4
    3332:	69ac      	ldr	r4, [r5, #24]
    3334:	4639      	mov	r1, r7
    3336:	46a4      	mov	ip, r4
    3338:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    333c:	4760      	bx	ip
    333e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3342:	bf00      	nop

00003344 <std::type_info::~type_info()>:
    3344:	4770      	bx	lr
    3346:	bf00      	nop

00003348 <std::type_info::__is_pointer_p() const>:
    3348:	2000      	movs	r0, #0
    334a:	4770      	bx	lr

0000334c <std::type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
    334c:	2000      	movs	r0, #0
    334e:	4770      	bx	lr

00003350 <std::type_info::~type_info()>:
    3350:	b510      	push	{r4, lr}
    3352:	4604      	mov	r4, r0
    3354:	2108      	movs	r1, #8
    3356:	f7ff ff47 	bl	31e8 <operator delete(void*, unsigned int)>
    335a:	4620      	mov	r0, r4
    335c:	bd10      	pop	{r4, pc}
    335e:	bf00      	nop

00003360 <std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
    3360:	4288      	cmp	r0, r1
    3362:	d011      	beq.n	3388 <std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x28>
    3364:	b508      	push	{r3, lr}
    3366:	6840      	ldr	r0, [r0, #4]
    3368:	7803      	ldrb	r3, [r0, #0]
    336a:	2b2a      	cmp	r3, #42	; 0x2a
    336c:	d00a      	beq.n	3384 <std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x24>
    336e:	6849      	ldr	r1, [r1, #4]
    3370:	780b      	ldrb	r3, [r1, #0]
    3372:	2b2a      	cmp	r3, #42	; 0x2a
    3374:	bf08      	it	eq
    3376:	3101      	addeq	r1, #1
    3378:	f00a f894 	bl	d4a4 <strcmp>
    337c:	fab0 f080 	clz	r0, r0
    3380:	0940      	lsrs	r0, r0, #5
    3382:	bd08      	pop	{r3, pc}
    3384:	2000      	movs	r0, #0
    3386:	bd08      	pop	{r3, pc}
    3388:	2001      	movs	r0, #1
    338a:	4770      	bx	lr

0000338c <std::type_info::operator==(std::type_info const&) const>:
    338c:	4281      	cmp	r1, r0
    338e:	d011      	beq.n	33b4 <std::type_info::operator==(std::type_info const&) const+0x28>
    3390:	b508      	push	{r3, lr}
    3392:	6840      	ldr	r0, [r0, #4]
    3394:	7803      	ldrb	r3, [r0, #0]
    3396:	2b2a      	cmp	r3, #42	; 0x2a
    3398:	d00a      	beq.n	33b0 <std::type_info::operator==(std::type_info const&) const+0x24>
    339a:	6849      	ldr	r1, [r1, #4]
    339c:	780b      	ldrb	r3, [r1, #0]
    339e:	2b2a      	cmp	r3, #42	; 0x2a
    33a0:	bf08      	it	eq
    33a2:	3101      	addeq	r1, #1
    33a4:	f00a f87e 	bl	d4a4 <strcmp>
    33a8:	fab0 f080 	clz	r0, r0
    33ac:	0940      	lsrs	r0, r0, #5
    33ae:	bd08      	pop	{r3, pc}
    33b0:	2000      	movs	r0, #0
    33b2:	bd08      	pop	{r3, pc}
    33b4:	2001      	movs	r0, #1
    33b6:	4770      	bx	lr

000033b8 <std::bad_alloc::what() const>:
    33b8:	4800      	ldr	r0, [pc, #0]	; (33bc <std::bad_alloc::what() const+0x4>)
    33ba:	4770      	bx	lr
    33bc:	00018f00 	.word	0x00018f00

000033c0 <std::bad_alloc::~bad_alloc()>:
    33c0:	b510      	push	{r4, lr}
    33c2:	4604      	mov	r4, r0
    33c4:	4b02      	ldr	r3, [pc, #8]	; (33d0 <std::bad_alloc::~bad_alloc()+0x10>)
    33c6:	6003      	str	r3, [r0, #0]
    33c8:	f000 f8f2 	bl	35b0 <std::exception::~exception()>
    33cc:	4620      	mov	r0, r4
    33ce:	bd10      	pop	{r4, pc}
    33d0:	00018f34 	.word	0x00018f34

000033d4 <std::bad_alloc::~bad_alloc()>:
    33d4:	b510      	push	{r4, lr}
    33d6:	4604      	mov	r4, r0
    33d8:	4b04      	ldr	r3, [pc, #16]	; (33ec <std::bad_alloc::~bad_alloc()+0x18>)
    33da:	6003      	str	r3, [r0, #0]
    33dc:	f000 f8e8 	bl	35b0 <std::exception::~exception()>
    33e0:	4620      	mov	r0, r4
    33e2:	2104      	movs	r1, #4
    33e4:	f7ff ff00 	bl	31e8 <operator delete(void*, unsigned int)>
    33e8:	4620      	mov	r0, r4
    33ea:	bd10      	pop	{r4, pc}
    33ec:	00018f34 	.word	0x00018f34

000033f0 <operator delete(void*)>:
    33f0:	f008 bf40 	b.w	c274 <free>

000033f4 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>:
    33f4:	491f      	ldr	r1, [pc, #124]	; (3474 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x80>)
    33f6:	b530      	push	{r4, r5, lr}
    33f8:	684b      	ldr	r3, [r1, #4]
    33fa:	f1a0 0408 	sub.w	r4, r0, #8
    33fe:	b35b      	cbz	r3, 3458 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x64>
    3400:	f850 5c08 	ldr.w	r5, [r0, #-8]
    3404:	eb04 0e05 	add.w	lr, r4, r5
    3408:	4573      	cmp	r3, lr
    340a:	d825      	bhi.n	3458 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x64>
    340c:	d01f      	beq.n	344e <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x5a>
    340e:	685a      	ldr	r2, [r3, #4]
    3410:	f101 0c04 	add.w	ip, r1, #4
    3414:	b932      	cbnz	r2, 3424 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x30>
    3416:	e00f      	b.n	3438 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x44>
    3418:	6851      	ldr	r1, [r2, #4]
    341a:	f103 0c04 	add.w	ip, r3, #4
    341e:	b311      	cbz	r1, 3466 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x72>
    3420:	4613      	mov	r3, r2
    3422:	460a      	mov	r2, r1
    3424:	4596      	cmp	lr, r2
    3426:	d3f7      	bcc.n	3418 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x24>
    3428:	bf04      	itt	eq
    342a:	e9de 2100 	ldrdeq	r2, r1, [lr]
    342e:	6059      	streq	r1, [r3, #4]
    3430:	f8dc 3000 	ldr.w	r3, [ip]
    3434:	bf08      	it	eq
    3436:	18ad      	addeq	r5, r5, r2
    3438:	681a      	ldr	r2, [r3, #0]
    343a:	1899      	adds	r1, r3, r2
    343c:	428c      	cmp	r4, r1
    343e:	d00f      	beq.n	3460 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x6c>
    3440:	685b      	ldr	r3, [r3, #4]
    3442:	e940 5302 	strd	r5, r3, [r0, #-8]
    3446:	f8dc 3000 	ldr.w	r3, [ip]
    344a:	605c      	str	r4, [r3, #4]
    344c:	bd30      	pop	{r4, r5, pc}
    344e:	681a      	ldr	r2, [r3, #0]
    3450:	685b      	ldr	r3, [r3, #4]
    3452:	442a      	add	r2, r5
    3454:	f840 2c08 	str.w	r2, [r0, #-8]
    3458:	f840 3c04 	str.w	r3, [r0, #-4]
    345c:	604c      	str	r4, [r1, #4]
    345e:	bd30      	pop	{r4, r5, pc}
    3460:	442a      	add	r2, r5
    3462:	601a      	str	r2, [r3, #0]
    3464:	bd30      	pop	{r4, r5, pc}
    3466:	685b      	ldr	r3, [r3, #4]
    3468:	681a      	ldr	r2, [r3, #0]
    346a:	1899      	adds	r1, r3, r2
    346c:	428c      	cmp	r4, r1
    346e:	d1e7      	bne.n	3440 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x4c>
    3470:	e7f6      	b.n	3460 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x6c>
    3472:	bf00      	nop
    3474:	20001f28 	.word	0x20001f28

00003478 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>:
    3478:	4916      	ldr	r1, [pc, #88]	; (34d4 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x5c>)
    347a:	f100 0208 	add.w	r2, r0, #8
    347e:	684b      	ldr	r3, [r1, #4]
    3480:	2a08      	cmp	r2, #8
    3482:	bf38      	it	cc
    3484:	2208      	movcc	r2, #8
    3486:	b1ab      	cbz	r3, 34b4 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x3c>
    3488:	3207      	adds	r2, #7
    348a:	f022 0207 	bic.w	r2, r2, #7
    348e:	1d08      	adds	r0, r1, #4
    3490:	e002      	b.n	3498 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x20>
    3492:	1d18      	adds	r0, r3, #4
    3494:	685b      	ldr	r3, [r3, #4]
    3496:	b16b      	cbz	r3, 34b4 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x3c>
    3498:	6819      	ldr	r1, [r3, #0]
    349a:	428a      	cmp	r2, r1
    349c:	d8f9      	bhi.n	3492 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x1a>
    349e:	b410      	push	{r4}
    34a0:	1a8c      	subs	r4, r1, r2
    34a2:	2c07      	cmp	r4, #7
    34a4:	d808      	bhi.n	34b8 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x40>
    34a6:	685a      	ldr	r2, [r3, #4]
    34a8:	6019      	str	r1, [r3, #0]
    34aa:	3308      	adds	r3, #8
    34ac:	6002      	str	r2, [r0, #0]
    34ae:	bc10      	pop	{r4}
    34b0:	4618      	mov	r0, r3
    34b2:	4770      	bx	lr
    34b4:	4618      	mov	r0, r3
    34b6:	4770      	bx	lr
    34b8:	f8d3 c004 	ldr.w	ip, [r3, #4]
    34bc:	1899      	adds	r1, r3, r2
    34be:	f8c1 c004 	str.w	ip, [r1, #4]
    34c2:	509c      	str	r4, [r3, r2]
    34c4:	6803      	ldr	r3, [r0, #0]
    34c6:	bc10      	pop	{r4}
    34c8:	601a      	str	r2, [r3, #0]
    34ca:	3308      	adds	r3, #8
    34cc:	6001      	str	r1, [r0, #0]
    34ce:	4618      	mov	r0, r3
    34d0:	4770      	bx	lr
    34d2:	bf00      	nop
    34d4:	20001f28 	.word	0x20001f28

000034d8 <__gnu_cxx::__freeres()>:
    34d8:	b510      	push	{r4, lr}
    34da:	4c04      	ldr	r4, [pc, #16]	; (34ec <__gnu_cxx::__freeres()+0x14>)
    34dc:	68a0      	ldr	r0, [r4, #8]
    34de:	b118      	cbz	r0, 34e8 <__gnu_cxx::__freeres()+0x10>
    34e0:	f008 fec8 	bl	c274 <free>
    34e4:	2300      	movs	r3, #0
    34e6:	60a3      	str	r3, [r4, #8]
    34e8:	bd10      	pop	{r4, pc}
    34ea:	bf00      	nop
    34ec:	20001f28 	.word	0x20001f28

000034f0 <__cxa_allocate_exception>:
    34f0:	b510      	push	{r4, lr}
    34f2:	f100 0480 	add.w	r4, r0, #128	; 0x80
    34f6:	4620      	mov	r0, r4
    34f8:	f008 feb4 	bl	c264 <malloc>
    34fc:	4603      	mov	r3, r0
    34fe:	b130      	cbz	r0, 350e <__cxa_allocate_exception+0x1e>
    3500:	2280      	movs	r2, #128	; 0x80
    3502:	2100      	movs	r1, #0
    3504:	4618      	mov	r0, r3
    3506:	f009 fad7 	bl	cab8 <memset>
    350a:	3080      	adds	r0, #128	; 0x80
    350c:	bd10      	pop	{r4, pc}
    350e:	4620      	mov	r0, r4
    3510:	f7ff ffb2 	bl	3478 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>
    3514:	4603      	mov	r3, r0
    3516:	2800      	cmp	r0, #0
    3518:	d1f2      	bne.n	3500 <__cxa_allocate_exception+0x10>
    351a:	f000 f891 	bl	3640 <std::terminate()>
    351e:	bf00      	nop

00003520 <__cxa_free_exception>:
    3520:	4a06      	ldr	r2, [pc, #24]	; (353c <__cxa_free_exception+0x1c>)
    3522:	3880      	subs	r0, #128	; 0x80
    3524:	6893      	ldr	r3, [r2, #8]
    3526:	4298      	cmp	r0, r3
    3528:	d905      	bls.n	3536 <__cxa_free_exception+0x16>
    352a:	68d2      	ldr	r2, [r2, #12]
    352c:	4413      	add	r3, r2
    352e:	4298      	cmp	r0, r3
    3530:	d201      	bcs.n	3536 <__cxa_free_exception+0x16>
    3532:	f7ff bf5f 	b.w	33f4 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>
    3536:	f008 be9d 	b.w	c274 <free>
    353a:	bf00      	nop
    353c:	20001f28 	.word	0x20001f28

00003540 <__cxa_allocate_dependent_exception>:
    3540:	b508      	push	{r3, lr}
    3542:	2078      	movs	r0, #120	; 0x78
    3544:	f008 fe8e 	bl	c264 <malloc>
    3548:	4603      	mov	r3, r0
    354a:	b128      	cbz	r0, 3558 <__cxa_allocate_dependent_exception+0x18>
    354c:	2278      	movs	r2, #120	; 0x78
    354e:	2100      	movs	r1, #0
    3550:	4618      	mov	r0, r3
    3552:	f009 fab1 	bl	cab8 <memset>
    3556:	bd08      	pop	{r3, pc}
    3558:	2078      	movs	r0, #120	; 0x78
    355a:	f7ff ff8d 	bl	3478 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>
    355e:	4603      	mov	r3, r0
    3560:	2800      	cmp	r0, #0
    3562:	d1f3      	bne.n	354c <__cxa_allocate_dependent_exception+0xc>
    3564:	f000 f86c 	bl	3640 <std::terminate()>

00003568 <__cxa_free_dependent_exception>:
    3568:	4906      	ldr	r1, [pc, #24]	; (3584 <__cxa_free_dependent_exception+0x1c>)
    356a:	4603      	mov	r3, r0
    356c:	688a      	ldr	r2, [r1, #8]
    356e:	4290      	cmp	r0, r2
    3570:	d905      	bls.n	357e <__cxa_free_dependent_exception+0x16>
    3572:	68c9      	ldr	r1, [r1, #12]
    3574:	440a      	add	r2, r1
    3576:	4290      	cmp	r0, r2
    3578:	d201      	bcs.n	357e <__cxa_free_dependent_exception+0x16>
    357a:	f7ff bf3b 	b.w	33f4 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>
    357e:	4618      	mov	r0, r3
    3580:	f008 be78 	b.w	c274 <free>
    3584:	20001f28 	.word	0x20001f28

00003588 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
    3588:	b538      	push	{r3, r4, r5, lr}
    358a:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
    358e:	4c07      	ldr	r4, [pc, #28]	; (35ac <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
    3590:	4628      	mov	r0, r5
    3592:	60e5      	str	r5, [r4, #12]
    3594:	f008 fe66 	bl	c264 <malloc>
    3598:	60a0      	str	r0, [r4, #8]
    359a:	b120      	cbz	r0, 35a6 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
    359c:	2300      	movs	r3, #0
    359e:	6060      	str	r0, [r4, #4]
    35a0:	e9c0 5300 	strd	r5, r3, [r0]
    35a4:	bd38      	pop	{r3, r4, r5, pc}
    35a6:	60e0      	str	r0, [r4, #12]
    35a8:	6060      	str	r0, [r4, #4]
    35aa:	bd38      	pop	{r3, r4, r5, pc}
    35ac:	20001f28 	.word	0x20001f28

000035b0 <std::exception::~exception()>:
    35b0:	4770      	bx	lr
    35b2:	bf00      	nop

000035b4 <std::bad_exception::~bad_exception()>:
    35b4:	4770      	bx	lr
    35b6:	bf00      	nop

000035b8 <transaction clone for std::exception::what() const>:
    35b8:	4800      	ldr	r0, [pc, #0]	; (35bc <transaction clone for std::exception::what() const+0x4>)
    35ba:	4770      	bx	lr
    35bc:	00018f40 	.word	0x00018f40

000035c0 <transaction clone for std::bad_exception::what() const>:
    35c0:	4800      	ldr	r0, [pc, #0]	; (35c4 <transaction clone for std::bad_exception::what() const+0x4>)
    35c2:	4770      	bx	lr
    35c4:	00018f50 	.word	0x00018f50

000035c8 <std::exception::~exception()>:
    35c8:	b510      	push	{r4, lr}
    35ca:	4604      	mov	r4, r0
    35cc:	2104      	movs	r1, #4
    35ce:	f7ff fe0b 	bl	31e8 <operator delete(void*, unsigned int)>
    35d2:	4620      	mov	r0, r4
    35d4:	bd10      	pop	{r4, pc}
    35d6:	bf00      	nop

000035d8 <std::bad_exception::~bad_exception()>:
    35d8:	b510      	push	{r4, lr}
    35da:	4604      	mov	r4, r0
    35dc:	2104      	movs	r1, #4
    35de:	f7ff fe03 	bl	31e8 <operator delete(void*, unsigned int)>
    35e2:	4620      	mov	r0, r4
    35e4:	bd10      	pop	{r4, pc}
    35e6:	bf00      	nop

000035e8 <__cxxabiv1::__forced_unwind::~__forced_unwind()>:
    35e8:	4770      	bx	lr
    35ea:	bf00      	nop

000035ec <__cxxabiv1::__forced_unwind::~__forced_unwind()>:
    35ec:	b510      	push	{r4, lr}
    35ee:	4604      	mov	r4, r0
    35f0:	2104      	movs	r1, #4
    35f2:	f7ff fdf9 	bl	31e8 <operator delete(void*, unsigned int)>
    35f6:	4620      	mov	r0, r4
    35f8:	bd10      	pop	{r4, pc}
    35fa:	bf00      	nop

000035fc <__cxxabiv1::__foreign_exception::~__foreign_exception()>:
    35fc:	4770      	bx	lr
    35fe:	bf00      	nop

00003600 <__cxxabiv1::__foreign_exception::~__foreign_exception()>:
    3600:	b510      	push	{r4, lr}
    3602:	4604      	mov	r4, r0
    3604:	2104      	movs	r1, #4
    3606:	f7ff fdef 	bl	31e8 <operator delete(void*, unsigned int)>
    360a:	4620      	mov	r0, r4
    360c:	bd10      	pop	{r4, pc}
    360e:	bf00      	nop

00003610 <transaction clone for std::exception::~exception() const>:
    3610:	4770      	bx	lr
    3612:	bf00      	nop

00003614 <transaction clone for std::bad_exception::~bad_exception() const>:
    3614:	4770      	bx	lr
    3616:	bf00      	nop

00003618 <__cxxabiv1::__terminate(void (*)())>:
    3618:	b508      	push	{r3, lr}
    361a:	4780      	blx	r0
    361c:	f008 fae6 	bl	bbec <abort>
    3620:	f006 fb0c 	bl	9c3c <__cxa_begin_catch>
    3624:	f008 fae2 	bl	bbec <abort>
    3628:	460c      	mov	r4, r1
    362a:	4605      	mov	r5, r0
    362c:	f006 fb46 	bl	9cbc <__cxa_end_catch>
    3630:	3401      	adds	r4, #1
    3632:	d102      	bne.n	363a <__cxxabiv1::__terminate(void (*)())+0x22>
    3634:	4628      	mov	r0, r5
    3636:	f006 fa8b 	bl	9b50 <__cxa_call_unexpected>
    363a:	f006 f991 	bl	9960 <__cxa_end_cleanup>
    363e:	bf00      	nop

00003640 <std::terminate()>:
    3640:	b508      	push	{r3, lr}
    3642:	4b03      	ldr	r3, [pc, #12]	; (3650 <std::terminate()+0x10>)
    3644:	6818      	ldr	r0, [r3, #0]
    3646:	f3bf 8f5b 	dmb	ish
    364a:	f7ff ffe5 	bl	3618 <__cxxabiv1::__terminate(void (*)())>
    364e:	bf00      	nop
    3650:	20000120 	.word	0x20000120

00003654 <__cxxabiv1::__unexpected(void (*)())>:
    3654:	b508      	push	{r3, lr}
    3656:	4780      	blx	r0
    3658:	f7ff fff2 	bl	3640 <std::terminate()>

0000365c <std::unexpected()>:
    365c:	b508      	push	{r3, lr}
    365e:	4b03      	ldr	r3, [pc, #12]	; (366c <std::unexpected()+0x10>)
    3660:	6818      	ldr	r0, [r3, #0]
    3662:	f3bf 8f5b 	dmb	ish
    3666:	f7ff fff5 	bl	3654 <__cxxabiv1::__unexpected(void (*)())>
    366a:	bf00      	nop
    366c:	2000011c 	.word	0x2000011c

00003670 <std::set_terminate(void (*)())>:
    3670:	4b07      	ldr	r3, [pc, #28]	; (3690 <std::set_terminate(void (*)())+0x20>)
    3672:	f3bf 8f5b 	dmb	ish
    3676:	2800      	cmp	r0, #0
    3678:	bf18      	it	ne
    367a:	4603      	movne	r3, r0
    367c:	4a05      	ldr	r2, [pc, #20]	; (3694 <std::set_terminate(void (*)())+0x24>)
    367e:	e852 0f00 	ldrex	r0, [r2]
    3682:	e842 3100 	strex	r1, r3, [r2]
    3686:	2900      	cmp	r1, #0
    3688:	d1f9      	bne.n	367e <std::set_terminate(void (*)())+0xe>
    368a:	f3bf 8f5b 	dmb	ish
    368e:	4770      	bx	lr
    3690:	0000387d 	.word	0x0000387d
    3694:	20000120 	.word	0x20000120

00003698 <std::get_terminate()>:
    3698:	4b02      	ldr	r3, [pc, #8]	; (36a4 <std::get_terminate()+0xc>)
    369a:	6818      	ldr	r0, [r3, #0]
    369c:	f3bf 8f5b 	dmb	ish
    36a0:	4770      	bx	lr
    36a2:	bf00      	nop
    36a4:	20000120 	.word	0x20000120

000036a8 <std::set_unexpected(void (*)())>:
    36a8:	4b07      	ldr	r3, [pc, #28]	; (36c8 <std::set_unexpected(void (*)())+0x20>)
    36aa:	f3bf 8f5b 	dmb	ish
    36ae:	2800      	cmp	r0, #0
    36b0:	bf18      	it	ne
    36b2:	4603      	movne	r3, r0
    36b4:	4a05      	ldr	r2, [pc, #20]	; (36cc <std::set_unexpected(void (*)())+0x24>)
    36b6:	e852 0f00 	ldrex	r0, [r2]
    36ba:	e842 3100 	strex	r1, r3, [r2]
    36be:	2900      	cmp	r1, #0
    36c0:	d1f9      	bne.n	36b6 <std::set_unexpected(void (*)())+0xe>
    36c2:	f3bf 8f5b 	dmb	ish
    36c6:	4770      	bx	lr
    36c8:	00003641 	.word	0x00003641
    36cc:	2000011c 	.word	0x2000011c

000036d0 <std::get_unexpected()>:
    36d0:	4b02      	ldr	r3, [pc, #8]	; (36dc <std::get_unexpected()+0xc>)
    36d2:	6818      	ldr	r0, [r3, #0]
    36d4:	f3bf 8f5b 	dmb	ish
    36d8:	4770      	bx	lr
    36da:	bf00      	nop
    36dc:	2000011c 	.word	0x2000011c

000036e0 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)>:
    36e0:	2801      	cmp	r0, #1
    36e2:	b510      	push	{r4, lr}
    36e4:	d81a      	bhi.n	371c <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x3c>
    36e6:	f3bf 8f5b 	dmb	ish
    36ea:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
    36ee:	e853 2f00 	ldrex	r2, [r3]
    36f2:	3a01      	subs	r2, #1
    36f4:	e843 2000 	strex	r0, r2, [r3]
    36f8:	2800      	cmp	r0, #0
    36fa:	d1f8      	bne.n	36ee <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0xe>
    36fc:	f3bf 8f5b 	dmb	ish
    3700:	b95a      	cbnz	r2, 371a <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x3a>
    3702:	f851 3c1c 	ldr.w	r3, [r1, #-28]
    3706:	f101 0458 	add.w	r4, r1, #88	; 0x58
    370a:	b10b      	cbz	r3, 3710 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x30>
    370c:	4620      	mov	r0, r4
    370e:	4798      	blx	r3
    3710:	4620      	mov	r0, r4
    3712:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    3716:	f7ff bf03 	b.w	3520 <__cxa_free_exception>
    371a:	bd10      	pop	{r4, pc}
    371c:	f851 0c14 	ldr.w	r0, [r1, #-20]
    3720:	f7ff ff7a 	bl	3618 <__cxxabiv1::__terminate(void (*)())>

00003724 <__cxa_init_primary_exception>:
    3724:	b538      	push	{r3, r4, r5, lr}
    3726:	2500      	movs	r5, #0
    3728:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
    372c:	f840 5c80 	str.w	r5, [r0, #-128]
    3730:	4604      	mov	r4, r0
    3732:	f7ff ffcd 	bl	36d0 <std::get_unexpected()>
    3736:	f844 0c70 	str.w	r0, [r4, #-112]
    373a:	f7ff ffad 	bl	3698 <std::get_terminate()>
    373e:	232b      	movs	r3, #43	; 0x2b
    3740:	2147      	movs	r1, #71	; 0x47
    3742:	2243      	movs	r2, #67	; 0x43
    3744:	f804 1c58 	strb.w	r1, [r4, #-88]
    3748:	f804 3c53 	strb.w	r3, [r4, #-83]
    374c:	214e      	movs	r1, #78	; 0x4e
    374e:	f804 3c52 	strb.w	r3, [r4, #-82]
    3752:	2355      	movs	r3, #85	; 0x55
    3754:	f804 2c55 	strb.w	r2, [r4, #-85]
    3758:	f804 2c54 	strb.w	r2, [r4, #-84]
    375c:	4a06      	ldr	r2, [pc, #24]	; (3778 <__cxa_init_primary_exception+0x54>)
    375e:	f804 5c51 	strb.w	r5, [r4, #-81]
    3762:	f804 1c57 	strb.w	r1, [r4, #-87]
    3766:	f804 3c56 	strb.w	r3, [r4, #-86]
    376a:	f844 0c6c 	str.w	r0, [r4, #-108]
    376e:	f844 2c50 	str.w	r2, [r4, #-80]
    3772:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
    3776:	bd38      	pop	{r3, r4, r5, pc}
    3778:	000036e1 	.word	0x000036e1

0000377c <__cxa_throw>:
    377c:	b570      	push	{r4, r5, r6, lr}
    377e:	4604      	mov	r4, r0
    3780:	460e      	mov	r6, r1
    3782:	4615      	mov	r5, r2
    3784:	f006 faf0 	bl	9d68 <__cxa_get_globals>
    3788:	4603      	mov	r3, r0
    378a:	4620      	mov	r0, r4
    378c:	685c      	ldr	r4, [r3, #4]
    378e:	4631      	mov	r1, r6
    3790:	3401      	adds	r4, #1
    3792:	462a      	mov	r2, r5
    3794:	605c      	str	r4, [r3, #4]
    3796:	f7ff ffc5 	bl	3724 <__cxa_init_primary_exception>
    379a:	2301      	movs	r3, #1
    379c:	4604      	mov	r4, r0
    379e:	f844 3b28 	str.w	r3, [r4], #40
    37a2:	4620      	mov	r0, r4
    37a4:	f007 fffc 	bl	b7a0 <_Unwind_RaiseException>
    37a8:	4620      	mov	r0, r4
    37aa:	f006 fa47 	bl	9c3c <__cxa_begin_catch>
    37ae:	f7ff ff47 	bl	3640 <std::terminate()>
    37b2:	bf00      	nop

000037b4 <__cxa_rethrow>:
    37b4:	b510      	push	{r4, lr}
    37b6:	f006 fad7 	bl	9d68 <__cxa_get_globals>
    37ba:	e9d0 4200 	ldrd	r4, r2, [r0]
    37be:	3201      	adds	r2, #1
    37c0:	6042      	str	r2, [r0, #4]
    37c2:	b164      	cbz	r4, 37de <__cxa_rethrow+0x2a>
    37c4:	f894 2020 	ldrb.w	r2, [r4, #32]
    37c8:	2a47      	cmp	r2, #71	; 0x47
    37ca:	d00a      	beq.n	37e2 <__cxa_rethrow+0x2e>
    37cc:	2200      	movs	r2, #0
    37ce:	6002      	str	r2, [r0, #0]
    37d0:	3420      	adds	r4, #32
    37d2:	4620      	mov	r0, r4
    37d4:	f008 f808 	bl	b7e8 <_Unwind_Resume_or_Rethrow>
    37d8:	4620      	mov	r0, r4
    37da:	f006 fa2f 	bl	9c3c <__cxa_begin_catch>
    37de:	f7ff ff2f 	bl	3640 <std::terminate()>
    37e2:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
    37e6:	2a4e      	cmp	r2, #78	; 0x4e
    37e8:	d1f0      	bne.n	37cc <__cxa_rethrow+0x18>
    37ea:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
    37ee:	2a55      	cmp	r2, #85	; 0x55
    37f0:	d1ec      	bne.n	37cc <__cxa_rethrow+0x18>
    37f2:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
    37f6:	2a43      	cmp	r2, #67	; 0x43
    37f8:	d1e8      	bne.n	37cc <__cxa_rethrow+0x18>
    37fa:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
    37fe:	2a43      	cmp	r2, #67	; 0x43
    3800:	d1e4      	bne.n	37cc <__cxa_rethrow+0x18>
    3802:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
    3806:	2a2b      	cmp	r2, #43	; 0x2b
    3808:	d1e0      	bne.n	37cc <__cxa_rethrow+0x18>
    380a:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
    380e:	2a2b      	cmp	r2, #43	; 0x2b
    3810:	d1dc      	bne.n	37cc <__cxa_rethrow+0x18>
    3812:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
    3816:	2a01      	cmp	r2, #1
    3818:	d8d8      	bhi.n	37cc <__cxa_rethrow+0x18>
    381a:	6962      	ldr	r2, [r4, #20]
    381c:	4252      	negs	r2, r2
    381e:	6162      	str	r2, [r4, #20]
    3820:	e7d6      	b.n	37d0 <__cxa_rethrow+0x1c>
    3822:	bf00      	nop

00003824 <std::set_new_handler(void (*)())>:
    3824:	4602      	mov	r2, r0
    3826:	f3bf 8f5b 	dmb	ish
    382a:	4b05      	ldr	r3, [pc, #20]	; (3840 <std::set_new_handler(void (*)())+0x1c>)
    382c:	e853 0f00 	ldrex	r0, [r3]
    3830:	e843 2100 	strex	r1, r2, [r3]
    3834:	2900      	cmp	r1, #0
    3836:	d1f9      	bne.n	382c <std::set_new_handler(void (*)())+0x8>
    3838:	f3bf 8f5b 	dmb	ish
    383c:	4770      	bx	lr
    383e:	bf00      	nop
    3840:	20001f38 	.word	0x20001f38

00003844 <std::get_new_handler()>:
    3844:	4b02      	ldr	r3, [pc, #8]	; (3850 <std::get_new_handler()+0xc>)
    3846:	6818      	ldr	r0, [r3, #0]
    3848:	f3bf 8f5b 	dmb	ish
    384c:	4770      	bx	lr
    384e:	bf00      	nop
    3850:	20001f38 	.word	0x20001f38

00003854 <__cxa_pure_virtual>:
    3854:	221b      	movs	r2, #27
    3856:	b508      	push	{r3, lr}
    3858:	4902      	ldr	r1, [pc, #8]	; (3864 <__cxa_pure_virtual+0x10>)
    385a:	2002      	movs	r0, #2
    385c:	f00b fcbe 	bl	f1dc <write>
    3860:	f7ff feee 	bl	3640 <std::terminate()>
    3864:	00019044 	.word	0x00019044

00003868 <__cxa_deleted_virtual>:
    3868:	221e      	movs	r2, #30
    386a:	b508      	push	{r3, lr}
    386c:	4902      	ldr	r1, [pc, #8]	; (3878 <__cxa_deleted_virtual+0x10>)
    386e:	2002      	movs	r0, #2
    3870:	f00b fcb4 	bl	f1dc <write>
    3874:	f7ff fee4 	bl	3640 <std::terminate()>
    3878:	00019060 	.word	0x00019060

0000387c <__gnu_cxx::__verbose_terminate_handler()>:
    387c:	b570      	push	{r4, r5, r6, lr}
    387e:	4b3b      	ldr	r3, [pc, #236]	; (396c <__gnu_cxx::__verbose_terminate_handler()+0xf0>)
    3880:	b082      	sub	sp, #8
    3882:	781a      	ldrb	r2, [r3, #0]
    3884:	2a00      	cmp	r2, #0
    3886:	d141      	bne.n	390c <__gnu_cxx::__verbose_terminate_handler()+0x90>
    3888:	2401      	movs	r4, #1
    388a:	701c      	strb	r4, [r3, #0]
    388c:	f006 fd90 	bl	a3b0 <__cxa_current_exception_type>
    3890:	2800      	cmp	r0, #0
    3892:	d031      	beq.n	38f8 <__gnu_cxx::__verbose_terminate_handler()+0x7c>
    3894:	2200      	movs	r2, #0
    3896:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    389a:	6844      	ldr	r4, [r0, #4]
    389c:	4611      	mov	r1, r2
    389e:	7823      	ldrb	r3, [r4, #0]
    38a0:	9601      	str	r6, [sp, #4]
    38a2:	2b2a      	cmp	r3, #42	; 0x2a
    38a4:	bf08      	it	eq
    38a6:	3401      	addeq	r4, #1
    38a8:	ab01      	add	r3, sp, #4
    38aa:	4620      	mov	r0, r4
    38ac:	f005 ffe4 	bl	9878 <__cxa_demangle>
    38b0:	4d2f      	ldr	r5, [pc, #188]	; (3970 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    38b2:	4606      	mov	r6, r0
    38b4:	682b      	ldr	r3, [r5, #0]
    38b6:	2230      	movs	r2, #48	; 0x30
    38b8:	68db      	ldr	r3, [r3, #12]
    38ba:	2101      	movs	r1, #1
    38bc:	482d      	ldr	r0, [pc, #180]	; (3974 <__gnu_cxx::__verbose_terminate_handler()+0xf8>)
    38be:	f008 fc63 	bl	c188 <fwrite>
    38c2:	9b01      	ldr	r3, [sp, #4]
    38c4:	b193      	cbz	r3, 38ec <__gnu_cxx::__verbose_terminate_handler()+0x70>
    38c6:	682b      	ldr	r3, [r5, #0]
    38c8:	4620      	mov	r0, r4
    38ca:	68d9      	ldr	r1, [r3, #12]
    38cc:	f008 fa86 	bl	bddc <fputs>
    38d0:	682b      	ldr	r3, [r5, #0]
    38d2:	2202      	movs	r2, #2
    38d4:	68db      	ldr	r3, [r3, #12]
    38d6:	2101      	movs	r1, #1
    38d8:	4827      	ldr	r0, [pc, #156]	; (3978 <__gnu_cxx::__verbose_terminate_handler()+0xfc>)
    38da:	f008 fc55 	bl	c188 <fwrite>
    38de:	9b01      	ldr	r3, [sp, #4]
    38e0:	b913      	cbnz	r3, 38e8 <__gnu_cxx::__verbose_terminate_handler()+0x6c>
    38e2:	4630      	mov	r0, r6
    38e4:	f008 fcc6 	bl	c274 <free>
    38e8:	f7ff ff64 	bl	37b4 <__cxa_rethrow>
    38ec:	682b      	ldr	r3, [r5, #0]
    38ee:	4630      	mov	r0, r6
    38f0:	68d9      	ldr	r1, [r3, #12]
    38f2:	f008 fa73 	bl	bddc <fputs>
    38f6:	e7eb      	b.n	38d0 <__gnu_cxx::__verbose_terminate_handler()+0x54>
    38f8:	4b1d      	ldr	r3, [pc, #116]	; (3970 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    38fa:	222d      	movs	r2, #45	; 0x2d
    38fc:	681b      	ldr	r3, [r3, #0]
    38fe:	4621      	mov	r1, r4
    3900:	68db      	ldr	r3, [r3, #12]
    3902:	481e      	ldr	r0, [pc, #120]	; (397c <__gnu_cxx::__verbose_terminate_handler()+0x100>)
    3904:	f008 fc40 	bl	c188 <fwrite>
    3908:	f008 f970 	bl	bbec <abort>
    390c:	4b18      	ldr	r3, [pc, #96]	; (3970 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    390e:	221d      	movs	r2, #29
    3910:	681b      	ldr	r3, [r3, #0]
    3912:	2101      	movs	r1, #1
    3914:	68db      	ldr	r3, [r3, #12]
    3916:	481a      	ldr	r0, [pc, #104]	; (3980 <__gnu_cxx::__verbose_terminate_handler()+0x104>)
    3918:	f008 fc36 	bl	c188 <fwrite>
    391c:	f008 f966 	bl	bbec <abort>
    3920:	2901      	cmp	r1, #1
    3922:	460c      	mov	r4, r1
    3924:	d119      	bne.n	395a <__gnu_cxx::__verbose_terminate_handler()+0xde>
    3926:	f006 f989 	bl	9c3c <__cxa_begin_catch>
    392a:	6803      	ldr	r3, [r0, #0]
    392c:	689b      	ldr	r3, [r3, #8]
    392e:	4798      	blx	r3
    3930:	682b      	ldr	r3, [r5, #0]
    3932:	4606      	mov	r6, r0
    3934:	220b      	movs	r2, #11
    3936:	4621      	mov	r1, r4
    3938:	68db      	ldr	r3, [r3, #12]
    393a:	4812      	ldr	r0, [pc, #72]	; (3984 <__gnu_cxx::__verbose_terminate_handler()+0x108>)
    393c:	f008 fc24 	bl	c188 <fwrite>
    3940:	682b      	ldr	r3, [r5, #0]
    3942:	4630      	mov	r0, r6
    3944:	68d9      	ldr	r1, [r3, #12]
    3946:	f008 fa49 	bl	bddc <fputs>
    394a:	682b      	ldr	r3, [r5, #0]
    394c:	200a      	movs	r0, #10
    394e:	68d9      	ldr	r1, [r3, #12]
    3950:	f008 f9d4 	bl	bcfc <fputc>
    3954:	f006 f9b2 	bl	9cbc <__cxa_end_catch>
    3958:	e7d6      	b.n	3908 <__gnu_cxx::__verbose_terminate_handler()+0x8c>
    395a:	f006 f96f 	bl	9c3c <__cxa_begin_catch>
    395e:	f006 f9ad 	bl	9cbc <__cxa_end_catch>
    3962:	e7d1      	b.n	3908 <__gnu_cxx::__verbose_terminate_handler()+0x8c>
    3964:	f006 f9aa 	bl	9cbc <__cxa_end_catch>
    3968:	f005 fffa 	bl	9960 <__cxa_end_cleanup>
    396c:	20001f3c 	.word	0x20001f3c
    3970:	20000124 	.word	0x20000124
    3974:	000190a0 	.word	0x000190a0
    3978:	000190d4 	.word	0x000190d4
    397c:	000190d8 	.word	0x000190d8
    3980:	00019080 	.word	0x00019080
    3984:	00019108 	.word	0x00019108

00003988 <d_make_comp>:
    3988:	4684      	mov	ip, r0
    398a:	1e48      	subs	r0, r1, #1
    398c:	b570      	push	{r4, r5, r6, lr}
    398e:	284f      	cmp	r0, #79	; 0x4f
    3990:	d842      	bhi.n	3a18 <d_make_comp+0x90>
    3992:	e8df f000 	tbb	[pc, r0]
    3996:	2828      	.short	0x2828
    3998:	41412828 	.word	0x41412828
    399c:	3f3f4141 	.word	0x3f3f4141
    39a0:	3f3f3f28 	.word	0x3f3f3f28
    39a4:	3f3f3f3f 	.word	0x3f3f3f3f
    39a8:	3f3f3f3f 	.word	0x3f3f3f3f
    39ac:	2a2a413f 	.word	0x2a2a413f
    39b0:	2a2a2a2a 	.word	0x2a2a2a2a
    39b4:	3f282a2a 	.word	0x3f282a2a
    39b8:	3f3f3f3f 	.word	0x3f3f3f3f
    39bc:	292a3f41 	.word	0x292a3f41
    39c0:	2a284128 	.word	0x2a284128
    39c4:	41293f2a 	.word	0x41293f2a
    39c8:	3f3f3f41 	.word	0x3f3f3f41
    39cc:	28282828 	.word	0x28282828
    39d0:	28283f28 	.word	0x28283f28
    39d4:	4141283f 	.word	0x4141283f
    39d8:	413f3f3f 	.word	0x413f3f3f
    39dc:	3f3f4141 	.word	0x3f3f4141
    39e0:	282a283f 	.word	0x282a283f
    39e4:	2a2a      	.short	0x2a2a
    39e6:	b1ba      	cbz	r2, 3a18 <d_make_comp+0x90>
    39e8:	b1b3      	cbz	r3, 3a18 <d_make_comp+0x90>
    39ea:	e9dc 4005 	ldrd	r4, r0, [ip, #20]
    39ee:	4284      	cmp	r4, r0
    39f0:	da12      	bge.n	3a18 <d_make_comp+0x90>
    39f2:	2600      	movs	r6, #0
    39f4:	f8dc 5010 	ldr.w	r5, [ip, #16]
    39f8:	eb04 0e84 	add.w	lr, r4, r4, lsl #2
    39fc:	eb05 008e 	add.w	r0, r5, lr, lsl #2
    3a00:	3401      	adds	r4, #1
    3a02:	e9c0 6601 	strd	r6, r6, [r0, #4]
    3a06:	f8cc 4014 	str.w	r4, [ip, #20]
    3a0a:	f805 102e 	strb.w	r1, [r5, lr, lsl #2]
    3a0e:	e9c0 2303 	strd	r2, r3, [r0, #12]
    3a12:	bd70      	pop	{r4, r5, r6, pc}
    3a14:	2a00      	cmp	r2, #0
    3a16:	d1e8      	bne.n	39ea <d_make_comp+0x62>
    3a18:	2000      	movs	r0, #0
    3a1a:	bd70      	pop	{r4, r5, r6, pc}

00003a1c <d_number>:
    3a1c:	b570      	push	{r4, r5, r6, lr}
    3a1e:	68c2      	ldr	r2, [r0, #12]
    3a20:	4686      	mov	lr, r0
    3a22:	7811      	ldrb	r1, [r2, #0]
    3a24:	296e      	cmp	r1, #110	; 0x6e
    3a26:	d024      	beq.n	3a72 <d_number+0x56>
    3a28:	3930      	subs	r1, #48	; 0x30
    3a2a:	b2cb      	uxtb	r3, r1
    3a2c:	2b09      	cmp	r3, #9
    3a2e:	d82a      	bhi.n	3a86 <d_number+0x6a>
    3a30:	2600      	movs	r6, #0
    3a32:	2000      	movs	r0, #0
    3a34:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
    3a38:	4c14      	ldr	r4, [pc, #80]	; (3a8c <d_number+0x70>)
    3a3a:	e006      	b.n	3a4a <d_number+0x2e>
    3a3c:	4619      	mov	r1, r3
    3a3e:	1aeb      	subs	r3, r5, r3
    3a40:	fba4 c303 	umull	ip, r3, r4, r3
    3a44:	ebb0 0fd3 	cmp.w	r0, r3, lsr #3
    3a48:	dc10      	bgt.n	3a6c <d_number+0x50>
    3a4a:	3201      	adds	r2, #1
    3a4c:	f8ce 200c 	str.w	r2, [lr, #12]
    3a50:	7813      	ldrb	r3, [r2, #0]
    3a52:	eb00 0080 	add.w	r0, r0, r0, lsl #2
    3a56:	3b30      	subs	r3, #48	; 0x30
    3a58:	fa5f fc83 	uxtb.w	ip, r3
    3a5c:	f1bc 0f09 	cmp.w	ip, #9
    3a60:	eb01 0040 	add.w	r0, r1, r0, lsl #1
    3a64:	d9ea      	bls.n	3a3c <d_number+0x20>
    3a66:	b106      	cbz	r6, 3a6a <d_number+0x4e>
    3a68:	4240      	negs	r0, r0
    3a6a:	bd70      	pop	{r4, r5, r6, pc}
    3a6c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    3a70:	bd70      	pop	{r4, r5, r6, pc}
    3a72:	1c53      	adds	r3, r2, #1
    3a74:	60c3      	str	r3, [r0, #12]
    3a76:	7851      	ldrb	r1, [r2, #1]
    3a78:	3930      	subs	r1, #48	; 0x30
    3a7a:	b2ca      	uxtb	r2, r1
    3a7c:	2a09      	cmp	r2, #9
    3a7e:	d802      	bhi.n	3a86 <d_number+0x6a>
    3a80:	461a      	mov	r2, r3
    3a82:	2601      	movs	r6, #1
    3a84:	e7d5      	b.n	3a32 <d_number+0x16>
    3a86:	2000      	movs	r0, #0
    3a88:	bd70      	pop	{r4, r5, r6, pc}
    3a8a:	bf00      	nop
    3a8c:	cccccccd 	.word	0xcccccccd

00003a90 <d_call_offset>:
    3a90:	b510      	push	{r4, lr}
    3a92:	4604      	mov	r4, r0
    3a94:	b929      	cbnz	r1, 3aa2 <d_call_offset+0x12>
    3a96:	68c3      	ldr	r3, [r0, #12]
    3a98:	781a      	ldrb	r2, [r3, #0]
    3a9a:	b16a      	cbz	r2, 3ab8 <d_call_offset+0x28>
    3a9c:	1c5a      	adds	r2, r3, #1
    3a9e:	60c2      	str	r2, [r0, #12]
    3aa0:	7819      	ldrb	r1, [r3, #0]
    3aa2:	2968      	cmp	r1, #104	; 0x68
    3aa4:	d017      	beq.n	3ad6 <d_call_offset+0x46>
    3aa6:	2976      	cmp	r1, #118	; 0x76
    3aa8:	d106      	bne.n	3ab8 <d_call_offset+0x28>
    3aaa:	4620      	mov	r0, r4
    3aac:	f7ff ffb6 	bl	3a1c <d_number>
    3ab0:	68e3      	ldr	r3, [r4, #12]
    3ab2:	781a      	ldrb	r2, [r3, #0]
    3ab4:	2a5f      	cmp	r2, #95	; 0x5f
    3ab6:	d001      	beq.n	3abc <d_call_offset+0x2c>
    3ab8:	2000      	movs	r0, #0
    3aba:	bd10      	pop	{r4, pc}
    3abc:	3301      	adds	r3, #1
    3abe:	4620      	mov	r0, r4
    3ac0:	60e3      	str	r3, [r4, #12]
    3ac2:	f7ff ffab 	bl	3a1c <d_number>
    3ac6:	68e3      	ldr	r3, [r4, #12]
    3ac8:	781a      	ldrb	r2, [r3, #0]
    3aca:	2a5f      	cmp	r2, #95	; 0x5f
    3acc:	d1f4      	bne.n	3ab8 <d_call_offset+0x28>
    3ace:	2001      	movs	r0, #1
    3ad0:	4403      	add	r3, r0
    3ad2:	60e3      	str	r3, [r4, #12]
    3ad4:	bd10      	pop	{r4, pc}
    3ad6:	4620      	mov	r0, r4
    3ad8:	f7ff ffa0 	bl	3a1c <d_number>
    3adc:	e7f3      	b.n	3ac6 <d_call_offset+0x36>
    3ade:	bf00      	nop

00003ae0 <d_ref_qualifier>:
    3ae0:	b410      	push	{r4}
    3ae2:	68c3      	ldr	r3, [r0, #12]
    3ae4:	460a      	mov	r2, r1
    3ae6:	7819      	ldrb	r1, [r3, #0]
    3ae8:	2952      	cmp	r1, #82	; 0x52
    3aea:	d00d      	beq.n	3b08 <d_ref_qualifier+0x28>
    3aec:	294f      	cmp	r1, #79	; 0x4f
    3aee:	d002      	beq.n	3af6 <d_ref_qualifier+0x16>
    3af0:	4610      	mov	r0, r2
    3af2:	bc10      	pop	{r4}
    3af4:	4770      	bx	lr
    3af6:	2120      	movs	r1, #32
    3af8:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
    3afa:	3403      	adds	r4, #3
    3afc:	62c4      	str	r4, [r0, #44]	; 0x2c
    3afe:	1c5c      	adds	r4, r3, #1
    3b00:	60c4      	str	r4, [r0, #12]
    3b02:	2300      	movs	r3, #0
    3b04:	bc10      	pop	{r4}
    3b06:	e73f      	b.n	3988 <d_make_comp>
    3b08:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
    3b0a:	211f      	movs	r1, #31
    3b0c:	3402      	adds	r4, #2
    3b0e:	62c4      	str	r4, [r0, #44]	; 0x2c
    3b10:	e7f5      	b.n	3afe <d_ref_qualifier+0x1e>
    3b12:	bf00      	nop

00003b14 <d_count_templates_scopes>:
    3b14:	2900      	cmp	r1, #0
    3b16:	d065      	beq.n	3be4 <d_count_templates_scopes+0xd0>
    3b18:	b570      	push	{r4, r5, r6, lr}
    3b1a:	4606      	mov	r6, r0
    3b1c:	460c      	mov	r4, r1
    3b1e:	68a3      	ldr	r3, [r4, #8]
    3b20:	2b01      	cmp	r3, #1
    3b22:	f103 0301 	add.w	r3, r3, #1
    3b26:	dc36      	bgt.n	3b96 <d_count_templates_scopes+0x82>
    3b28:	f8d6 511c 	ldr.w	r5, [r6, #284]	; 0x11c
    3b2c:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
    3b30:	dc31      	bgt.n	3b96 <d_count_templates_scopes+0x82>
    3b32:	7822      	ldrb	r2, [r4, #0]
    3b34:	60a3      	str	r3, [r4, #8]
    3b36:	1e53      	subs	r3, r2, #1
    3b38:	2b4f      	cmp	r3, #79	; 0x4f
    3b3a:	d82c      	bhi.n	3b96 <d_count_templates_scopes+0x82>
    3b3c:	e8df f003 	tbb	[pc, r3]
    3b40:	4b303030 	.word	0x4b303030
    3b44:	2c2c2b2b 	.word	0x2c2c2b2b
    3b48:	30303030 	.word	0x30303030
    3b4c:	30303030 	.word	0x30303030
    3b50:	30303030 	.word	0x30303030
    3b54:	2b303030 	.word	0x2b303030
    3b58:	30303030 	.word	0x30303030
    3b5c:	30303030 	.word	0x30303030
    3b60:	41413030 	.word	0x41413030
    3b64:	302b3030 	.word	0x302b3030
    3b68:	28303030 	.word	0x28303030
    3b6c:	30303030 	.word	0x30303030
    3b70:	302c2b30 	.word	0x302c2b30
    3b74:	30303030 	.word	0x30303030
    3b78:	30303030 	.word	0x30303030
    3b7c:	30303030 	.word	0x30303030
    3b80:	28302b2b 	.word	0x28302b2b
    3b84:	2b282828 	.word	0x2b282828
    3b88:	30303030 	.word	0x30303030
    3b8c:	30303030 	.word	0x30303030
    3b90:	68e4      	ldr	r4, [r4, #12]
    3b92:	2c00      	cmp	r4, #0
    3b94:	d1c3      	bne.n	3b1e <d_count_templates_scopes+0xa>
    3b96:	bd70      	pop	{r4, r5, r6, pc}
    3b98:	6924      	ldr	r4, [r4, #16]
    3b9a:	2c00      	cmp	r4, #0
    3b9c:	d1bf      	bne.n	3b1e <d_count_templates_scopes+0xa>
    3b9e:	e7fa      	b.n	3b96 <d_count_templates_scopes+0x82>
    3ba0:	68e1      	ldr	r1, [r4, #12]
    3ba2:	3501      	adds	r5, #1
    3ba4:	4630      	mov	r0, r6
    3ba6:	f8c6 511c 	str.w	r5, [r6, #284]	; 0x11c
    3baa:	f7ff ffb3 	bl	3b14 <d_count_templates_scopes>
    3bae:	4630      	mov	r0, r6
    3bb0:	6921      	ldr	r1, [r4, #16]
    3bb2:	f7ff ffaf 	bl	3b14 <d_count_templates_scopes>
    3bb6:	f8d6 311c 	ldr.w	r3, [r6, #284]	; 0x11c
    3bba:	3b01      	subs	r3, #1
    3bbc:	f8c6 311c 	str.w	r3, [r6, #284]	; 0x11c
    3bc0:	bd70      	pop	{r4, r5, r6, pc}
    3bc2:	68e1      	ldr	r1, [r4, #12]
    3bc4:	780b      	ldrb	r3, [r1, #0]
    3bc6:	2b05      	cmp	r3, #5
    3bc8:	d1eb      	bne.n	3ba2 <d_count_templates_scopes+0x8e>
    3bca:	f8d6 3138 	ldr.w	r3, [r6, #312]	; 0x138
    3bce:	3301      	adds	r3, #1
    3bd0:	f8c6 3138 	str.w	r3, [r6, #312]	; 0x138
    3bd4:	e7e5      	b.n	3ba2 <d_count_templates_scopes+0x8e>
    3bd6:	f8d6 3144 	ldr.w	r3, [r6, #324]	; 0x144
    3bda:	68e1      	ldr	r1, [r4, #12]
    3bdc:	3301      	adds	r3, #1
    3bde:	f8c6 3144 	str.w	r3, [r6, #324]	; 0x144
    3be2:	e7de      	b.n	3ba2 <d_count_templates_scopes+0x8e>
    3be4:	4770      	bx	lr
    3be6:	bf00      	nop

00003be8 <d_discriminator>:
    3be8:	68c3      	ldr	r3, [r0, #12]
    3bea:	781a      	ldrb	r2, [r3, #0]
    3bec:	2a5f      	cmp	r2, #95	; 0x5f
    3bee:	d001      	beq.n	3bf4 <d_discriminator+0xc>
    3bf0:	2001      	movs	r0, #1
    3bf2:	4770      	bx	lr
    3bf4:	b510      	push	{r4, lr}
    3bf6:	1c5a      	adds	r2, r3, #1
    3bf8:	60c2      	str	r2, [r0, #12]
    3bfa:	785a      	ldrb	r2, [r3, #1]
    3bfc:	4604      	mov	r4, r0
    3bfe:	2a5f      	cmp	r2, #95	; 0x5f
    3c00:	d004      	beq.n	3c0c <d_discriminator+0x24>
    3c02:	f7ff ff0b 	bl	3a1c <d_number>
    3c06:	43c0      	mvns	r0, r0
    3c08:	0fc0      	lsrs	r0, r0, #31
    3c0a:	bd10      	pop	{r4, pc}
    3c0c:	3302      	adds	r3, #2
    3c0e:	60c3      	str	r3, [r0, #12]
    3c10:	f7ff ff04 	bl	3a1c <d_number>
    3c14:	2800      	cmp	r0, #0
    3c16:	db09      	blt.n	3c2c <d_discriminator+0x44>
    3c18:	2809      	cmp	r0, #9
    3c1a:	dd09      	ble.n	3c30 <d_discriminator+0x48>
    3c1c:	68e3      	ldr	r3, [r4, #12]
    3c1e:	781a      	ldrb	r2, [r3, #0]
    3c20:	2a5f      	cmp	r2, #95	; 0x5f
    3c22:	d103      	bne.n	3c2c <d_discriminator+0x44>
    3c24:	3301      	adds	r3, #1
    3c26:	2001      	movs	r0, #1
    3c28:	60e3      	str	r3, [r4, #12]
    3c2a:	bd10      	pop	{r4, pc}
    3c2c:	2000      	movs	r0, #0
    3c2e:	bd10      	pop	{r4, pc}
    3c30:	2001      	movs	r0, #1
    3c32:	bd10      	pop	{r4, pc}

00003c34 <d_index_template_argument.part.0>:
    3c34:	b928      	cbnz	r0, 3c42 <d_index_template_argument.part.0+0xe>
    3c36:	e009      	b.n	3c4c <d_index_template_argument.part.0+0x18>
    3c38:	2900      	cmp	r1, #0
    3c3a:	dd08      	ble.n	3c4e <d_index_template_argument.part.0+0x1a>
    3c3c:	6900      	ldr	r0, [r0, #16]
    3c3e:	3901      	subs	r1, #1
    3c40:	b140      	cbz	r0, 3c54 <d_index_template_argument.part.0+0x20>
    3c42:	7803      	ldrb	r3, [r0, #0]
    3c44:	2b2f      	cmp	r3, #47	; 0x2f
    3c46:	d0f7      	beq.n	3c38 <d_index_template_argument.part.0+0x4>
    3c48:	2000      	movs	r0, #0
    3c4a:	4770      	bx	lr
    3c4c:	4770      	bx	lr
    3c4e:	d1fb      	bne.n	3c48 <d_index_template_argument.part.0+0x14>
    3c50:	68c0      	ldr	r0, [r0, #12]
    3c52:	4770      	bx	lr
    3c54:	4770      	bx	lr
    3c56:	bf00      	nop

00003c58 <d_growable_string_callback_adapter>:
    3c58:	b5f0      	push	{r4, r5, r6, r7, lr}
    3c5a:	4614      	mov	r4, r2
    3c5c:	6852      	ldr	r2, [r2, #4]
    3c5e:	68a5      	ldr	r5, [r4, #8]
    3c60:	1c4b      	adds	r3, r1, #1
    3c62:	4413      	add	r3, r2
    3c64:	42ab      	cmp	r3, r5
    3c66:	460e      	mov	r6, r1
    3c68:	4607      	mov	r7, r0
    3c6a:	b083      	sub	sp, #12
    3c6c:	d811      	bhi.n	3c92 <d_growable_string_callback_adapter+0x3a>
    3c6e:	68e5      	ldr	r5, [r4, #12]
    3c70:	b96d      	cbnz	r5, 3c8e <d_growable_string_callback_adapter+0x36>
    3c72:	6863      	ldr	r3, [r4, #4]
    3c74:	6820      	ldr	r0, [r4, #0]
    3c76:	4632      	mov	r2, r6
    3c78:	4418      	add	r0, r3
    3c7a:	4639      	mov	r1, r7
    3c7c:	f008 fe2a 	bl	c8d4 <memcpy>
    3c80:	e9d4 3200 	ldrd	r3, r2, [r4]
    3c84:	4433      	add	r3, r6
    3c86:	549d      	strb	r5, [r3, r2]
    3c88:	6863      	ldr	r3, [r4, #4]
    3c8a:	4433      	add	r3, r6
    3c8c:	6063      	str	r3, [r4, #4]
    3c8e:	b003      	add	sp, #12
    3c90:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c92:	68e2      	ldr	r2, [r4, #12]
    3c94:	2a00      	cmp	r2, #0
    3c96:	d1fa      	bne.n	3c8e <d_growable_string_callback_adapter+0x36>
    3c98:	b155      	cbz	r5, 3cb0 <d_growable_string_callback_adapter+0x58>
    3c9a:	006d      	lsls	r5, r5, #1
    3c9c:	42ab      	cmp	r3, r5
    3c9e:	d8fc      	bhi.n	3c9a <d_growable_string_callback_adapter+0x42>
    3ca0:	4629      	mov	r1, r5
    3ca2:	6820      	ldr	r0, [r4, #0]
    3ca4:	f009 f858 	bl	cd58 <realloc>
    3ca8:	b138      	cbz	r0, 3cba <d_growable_string_callback_adapter+0x62>
    3caa:	6020      	str	r0, [r4, #0]
    3cac:	60a5      	str	r5, [r4, #8]
    3cae:	e7de      	b.n	3c6e <d_growable_string_callback_adapter+0x16>
    3cb0:	2b02      	cmp	r3, #2
    3cb2:	f04f 0502 	mov.w	r5, #2
    3cb6:	d8f0      	bhi.n	3c9a <d_growable_string_callback_adapter+0x42>
    3cb8:	e7f2      	b.n	3ca0 <d_growable_string_callback_adapter+0x48>
    3cba:	9001      	str	r0, [sp, #4]
    3cbc:	6820      	ldr	r0, [r4, #0]
    3cbe:	f008 fad9 	bl	c274 <free>
    3cc2:	2201      	movs	r2, #1
    3cc4:	9b01      	ldr	r3, [sp, #4]
    3cc6:	e9c4 3300 	strd	r3, r3, [r4]
    3cca:	e9c4 3202 	strd	r3, r2, [r4, #8]
    3cce:	e7de      	b.n	3c8e <d_growable_string_callback_adapter+0x36>

00003cd0 <next_is_type_qual.isra.0>:
    3cd0:	7803      	ldrb	r3, [r0, #0]
    3cd2:	2b72      	cmp	r3, #114	; 0x72
    3cd4:	d007      	beq.n	3ce6 <next_is_type_qual.isra.0+0x16>
    3cd6:	2b56      	cmp	r3, #86	; 0x56
    3cd8:	d005      	beq.n	3ce6 <next_is_type_qual.isra.0+0x16>
    3cda:	2b4b      	cmp	r3, #75	; 0x4b
    3cdc:	d003      	beq.n	3ce6 <next_is_type_qual.isra.0+0x16>
    3cde:	2b44      	cmp	r3, #68	; 0x44
    3ce0:	d003      	beq.n	3cea <next_is_type_qual.isra.0+0x1a>
    3ce2:	2000      	movs	r0, #0
    3ce4:	4770      	bx	lr
    3ce6:	2001      	movs	r0, #1
    3ce8:	4770      	bx	lr
    3cea:	7840      	ldrb	r0, [r0, #1]
    3cec:	f000 03df 	and.w	r3, r0, #223	; 0xdf
    3cf0:	2b4f      	cmp	r3, #79	; 0x4f
    3cf2:	d0f8      	beq.n	3ce6 <next_is_type_qual.isra.0+0x16>
    3cf4:	3877      	subs	r0, #119	; 0x77
    3cf6:	2801      	cmp	r0, #1
    3cf8:	bf8c      	ite	hi
    3cfa:	2000      	movhi	r0, #0
    3cfc:	2001      	movls	r0, #1
    3cfe:	4770      	bx	lr

00003d00 <d_append_char>:
    3d00:	b570      	push	{r4, r5, r6, lr}
    3d02:	460d      	mov	r5, r1
    3d04:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    3d08:	4604      	mov	r4, r0
    3d0a:	29ff      	cmp	r1, #255	; 0xff
    3d0c:	d006      	beq.n	3d1c <d_append_char+0x1c>
    3d0e:	1c4b      	adds	r3, r1, #1
    3d10:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    3d14:	5465      	strb	r5, [r4, r1]
    3d16:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    3d1a:	bd70      	pop	{r4, r5, r6, pc}
    3d1c:	2600      	movs	r6, #0
    3d1e:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    3d22:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    3d26:	4798      	blx	r3
    3d28:	2301      	movs	r3, #1
    3d2a:	4631      	mov	r1, r6
    3d2c:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    3d30:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    3d34:	441a      	add	r2, r3
    3d36:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    3d3a:	5465      	strb	r5, [r4, r1]
    3d3c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    3d40:	bd70      	pop	{r4, r5, r6, pc}
    3d42:	bf00      	nop

00003d44 <d_lookup_template_argument>:
    3d44:	4603      	mov	r3, r0
    3d46:	f8d0 0110 	ldr.w	r0, [r0, #272]	; 0x110
    3d4a:	b190      	cbz	r0, 3d72 <d_lookup_template_argument+0x2e>
    3d4c:	68cb      	ldr	r3, [r1, #12]
    3d4e:	6842      	ldr	r2, [r0, #4]
    3d50:	2b00      	cmp	r3, #0
    3d52:	6910      	ldr	r0, [r2, #16]
    3d54:	db0b      	blt.n	3d6e <d_lookup_template_argument+0x2a>
    3d56:	b920      	cbnz	r0, 3d62 <d_lookup_template_argument+0x1e>
    3d58:	e009      	b.n	3d6e <d_lookup_template_argument+0x2a>
    3d5a:	b13b      	cbz	r3, 3d6c <d_lookup_template_argument+0x28>
    3d5c:	6900      	ldr	r0, [r0, #16]
    3d5e:	3b01      	subs	r3, #1
    3d60:	b130      	cbz	r0, 3d70 <d_lookup_template_argument+0x2c>
    3d62:	7802      	ldrb	r2, [r0, #0]
    3d64:	2a2f      	cmp	r2, #47	; 0x2f
    3d66:	d0f8      	beq.n	3d5a <d_lookup_template_argument+0x16>
    3d68:	2000      	movs	r0, #0
    3d6a:	4770      	bx	lr
    3d6c:	68c0      	ldr	r0, [r0, #12]
    3d6e:	4770      	bx	lr
    3d70:	4770      	bx	lr
    3d72:	2201      	movs	r2, #1
    3d74:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
    3d78:	4770      	bx	lr
    3d7a:	bf00      	nop

00003d7c <d_find_pack>:
    3d7c:	2900      	cmp	r1, #0
    3d7e:	d042      	beq.n	3e06 <d_find_pack+0x8a>
    3d80:	b538      	push	{r3, r4, r5, lr}
    3d82:	4605      	mov	r5, r0
    3d84:	460c      	mov	r4, r1
    3d86:	7823      	ldrb	r3, [r4, #0]
    3d88:	2b4c      	cmp	r3, #76	; 0x4c
    3d8a:	d832      	bhi.n	3df2 <d_find_pack+0x76>
    3d8c:	e8df f003 	tbb	[pc, r3]
    3d90:	3131312f 	.word	0x3131312f
    3d94:	372f2731 	.word	0x372f2731
    3d98:	31313137 	.word	0x31313137
    3d9c:	31313131 	.word	0x31313131
    3da0:	31313131 	.word	0x31313131
    3da4:	31313131 	.word	0x31313131
    3da8:	3131312f 	.word	0x3131312f
    3dac:	31313131 	.word	0x31313131
    3db0:	31313131 	.word	0x31313131
    3db4:	2f313131 	.word	0x2f313131
    3db8:	31313131 	.word	0x31313131
    3dbc:	3131312f 	.word	0x3131312f
    3dc0:	372f3131 	.word	0x372f3131
    3dc4:	31313131 	.word	0x31313131
    3dc8:	31313131 	.word	0x31313131
    3dcc:	31313131 	.word	0x31313131
    3dd0:	312f2f31 	.word	0x312f2f31
    3dd4:	2f2f3131 	.word	0x2f2f3131
    3dd8:	2f31312f 	.word	0x2f31312f
    3ddc:	2f          	.byte	0x2f
    3ddd:	00          	.byte	0x00
    3dde:	4621      	mov	r1, r4
    3de0:	4628      	mov	r0, r5
    3de2:	f7ff ffaf 	bl	3d44 <d_lookup_template_argument>
    3de6:	b110      	cbz	r0, 3dee <d_find_pack+0x72>
    3de8:	7803      	ldrb	r3, [r0, #0]
    3dea:	2b2f      	cmp	r3, #47	; 0x2f
    3dec:	d000      	beq.n	3df0 <d_find_pack+0x74>
    3dee:	2000      	movs	r0, #0
    3df0:	bd38      	pop	{r3, r4, r5, pc}
    3df2:	4628      	mov	r0, r5
    3df4:	68e1      	ldr	r1, [r4, #12]
    3df6:	f7ff ffc1 	bl	3d7c <d_find_pack>
    3dfa:	2800      	cmp	r0, #0
    3dfc:	d1f8      	bne.n	3df0 <d_find_pack+0x74>
    3dfe:	6924      	ldr	r4, [r4, #16]
    3e00:	2c00      	cmp	r4, #0
    3e02:	d1c0      	bne.n	3d86 <d_find_pack+0xa>
    3e04:	e7f3      	b.n	3dee <d_find_pack+0x72>
    3e06:	2000      	movs	r0, #0
    3e08:	4770      	bx	lr
    3e0a:	bf00      	nop

00003e0c <d_append_string>:
    3e0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3e10:	4604      	mov	r4, r0
    3e12:	4608      	mov	r0, r1
    3e14:	460d      	mov	r5, r1
    3e16:	f009 fc23 	bl	d660 <strlen>
    3e1a:	b340      	cbz	r0, 3e6e <d_append_string+0x62>
    3e1c:	3d01      	subs	r5, #1
    3e1e:	f04f 0800 	mov.w	r8, #0
    3e22:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    3e26:	182f      	adds	r7, r5, r0
    3e28:	e009      	b.n	3e3e <d_append_string+0x32>
    3e2a:	460b      	mov	r3, r1
    3e2c:	42bd      	cmp	r5, r7
    3e2e:	f101 0101 	add.w	r1, r1, #1
    3e32:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    3e36:	54e6      	strb	r6, [r4, r3]
    3e38:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    3e3c:	d017      	beq.n	3e6e <d_append_string+0x62>
    3e3e:	29ff      	cmp	r1, #255	; 0xff
    3e40:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    3e44:	d1f1      	bne.n	3e2a <d_append_string+0x1e>
    3e46:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    3e4a:	4620      	mov	r0, r4
    3e4c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    3e50:	4798      	blx	r3
    3e52:	2101      	movs	r1, #1
    3e54:	2300      	movs	r3, #0
    3e56:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    3e5a:	42bd      	cmp	r5, r7
    3e5c:	440a      	add	r2, r1
    3e5e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    3e62:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    3e66:	54e6      	strb	r6, [r4, r3]
    3e68:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    3e6c:	d1e7      	bne.n	3e3e <d_append_string+0x32>
    3e6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3e72:	bf00      	nop

00003e74 <d_template_param>:
    3e74:	b538      	push	{r3, r4, r5, lr}
    3e76:	68c3      	ldr	r3, [r0, #12]
    3e78:	781a      	ldrb	r2, [r3, #0]
    3e7a:	2a54      	cmp	r2, #84	; 0x54
    3e7c:	d125      	bne.n	3eca <d_template_param+0x56>
    3e7e:	1c5a      	adds	r2, r3, #1
    3e80:	60c2      	str	r2, [r0, #12]
    3e82:	785a      	ldrb	r2, [r3, #1]
    3e84:	4604      	mov	r4, r0
    3e86:	2a5f      	cmp	r2, #95	; 0x5f
    3e88:	d021      	beq.n	3ece <d_template_param+0x5a>
    3e8a:	2a6e      	cmp	r2, #110	; 0x6e
    3e8c:	d01d      	beq.n	3eca <d_template_param+0x56>
    3e8e:	f7ff fdc5 	bl	3a1c <d_number>
    3e92:	1c42      	adds	r2, r0, #1
    3e94:	d419      	bmi.n	3eca <d_template_param+0x56>
    3e96:	68e3      	ldr	r3, [r4, #12]
    3e98:	7819      	ldrb	r1, [r3, #0]
    3e9a:	295f      	cmp	r1, #95	; 0x5f
    3e9c:	d115      	bne.n	3eca <d_template_param+0x56>
    3e9e:	3301      	adds	r3, #1
    3ea0:	60e3      	str	r3, [r4, #12]
    3ea2:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
    3ea6:	428b      	cmp	r3, r1
    3ea8:	da0f      	bge.n	3eca <d_template_param+0x56>
    3eaa:	2500      	movs	r5, #0
    3eac:	f04f 0e05 	mov.w	lr, #5
    3eb0:	6921      	ldr	r1, [r4, #16]
    3eb2:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
    3eb6:	eb01 008c 	add.w	r0, r1, ip, lsl #2
    3eba:	3301      	adds	r3, #1
    3ebc:	e9c0 5501 	strd	r5, r5, [r0, #4]
    3ec0:	6163      	str	r3, [r4, #20]
    3ec2:	f801 e02c 	strb.w	lr, [r1, ip, lsl #2]
    3ec6:	60c2      	str	r2, [r0, #12]
    3ec8:	bd38      	pop	{r3, r4, r5, pc}
    3eca:	2000      	movs	r0, #0
    3ecc:	bd38      	pop	{r3, r4, r5, pc}
    3ece:	3302      	adds	r3, #2
    3ed0:	2200      	movs	r2, #0
    3ed2:	60c3      	str	r3, [r0, #12]
    3ed4:	e7e5      	b.n	3ea2 <d_template_param+0x2e>
    3ed6:	bf00      	nop

00003ed8 <d_append_num>:
    3ed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3edc:	b088      	sub	sp, #32
    3ede:	460a      	mov	r2, r1
    3ee0:	4604      	mov	r4, r0
    3ee2:	491a      	ldr	r1, [pc, #104]	; (3f4c <d_append_num+0x74>)
    3ee4:	a801      	add	r0, sp, #4
    3ee6:	f009 fabb 	bl	d460 <sprintf>
    3eea:	a801      	add	r0, sp, #4
    3eec:	f009 fbb8 	bl	d660 <strlen>
    3ef0:	b340      	cbz	r0, 3f44 <d_append_num+0x6c>
    3ef2:	ad01      	add	r5, sp, #4
    3ef4:	f04f 0800 	mov.w	r8, #0
    3ef8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    3efc:	182f      	adds	r7, r5, r0
    3efe:	e009      	b.n	3f14 <d_append_num+0x3c>
    3f00:	460b      	mov	r3, r1
    3f02:	42af      	cmp	r7, r5
    3f04:	f101 0101 	add.w	r1, r1, #1
    3f08:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    3f0c:	54e6      	strb	r6, [r4, r3]
    3f0e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    3f12:	d017      	beq.n	3f44 <d_append_num+0x6c>
    3f14:	29ff      	cmp	r1, #255	; 0xff
    3f16:	f815 6b01 	ldrb.w	r6, [r5], #1
    3f1a:	d1f1      	bne.n	3f00 <d_append_num+0x28>
    3f1c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    3f20:	4620      	mov	r0, r4
    3f22:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    3f26:	4798      	blx	r3
    3f28:	2101      	movs	r1, #1
    3f2a:	2300      	movs	r3, #0
    3f2c:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    3f30:	42af      	cmp	r7, r5
    3f32:	440a      	add	r2, r1
    3f34:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    3f38:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    3f3c:	54e6      	strb	r6, [r4, r3]
    3f3e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    3f42:	d1e7      	bne.n	3f14 <d_append_num+0x3c>
    3f44:	b008      	add	sp, #32
    3f46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3f4a:	bf00      	nop
    3f4c:	00019114 	.word	0x00019114

00003f50 <d_source_name>:
    3f50:	b570      	push	{r4, r5, r6, lr}
    3f52:	4604      	mov	r4, r0
    3f54:	f7ff fd62 	bl	3a1c <d_number>
    3f58:	1e05      	subs	r5, r0, #0
    3f5a:	dd46      	ble.n	3fea <d_source_name+0x9a>
    3f5c:	68e6      	ldr	r6, [r4, #12]
    3f5e:	6863      	ldr	r3, [r4, #4]
    3f60:	1b9b      	subs	r3, r3, r6
    3f62:	429d      	cmp	r5, r3
    3f64:	dc3e      	bgt.n	3fe4 <d_source_name+0x94>
    3f66:	68a2      	ldr	r2, [r4, #8]
    3f68:	1973      	adds	r3, r6, r5
    3f6a:	0752      	lsls	r2, r2, #29
    3f6c:	60e3      	str	r3, [r4, #12]
    3f6e:	d504      	bpl.n	3f7a <d_source_name+0x2a>
    3f70:	5d72      	ldrb	r2, [r6, r5]
    3f72:	2a24      	cmp	r2, #36	; 0x24
    3f74:	bf04      	itt	eq
    3f76:	3301      	addeq	r3, #1
    3f78:	60e3      	streq	r3, [r4, #12]
    3f7a:	2d09      	cmp	r5, #9
    3f7c:	dd22      	ble.n	3fc4 <d_source_name+0x74>
    3f7e:	2208      	movs	r2, #8
    3f80:	4630      	mov	r0, r6
    3f82:	4929      	ldr	r1, [pc, #164]	; (4028 <Stack_Size+0x28>)
    3f84:	f008 fc72 	bl	c86c <memcmp>
    3f88:	b930      	cbnz	r0, 3f98 <d_source_name+0x48>
    3f8a:	7a33      	ldrb	r3, [r6, #8]
    3f8c:	2b2e      	cmp	r3, #46	; 0x2e
    3f8e:	d02e      	beq.n	3fee <d_source_name+0x9e>
    3f90:	2b5f      	cmp	r3, #95	; 0x5f
    3f92:	d02c      	beq.n	3fee <d_source_name+0x9e>
    3f94:	2b24      	cmp	r3, #36	; 0x24
    3f96:	d02a      	beq.n	3fee <d_source_name+0x9e>
    3f98:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    3f9c:	4293      	cmp	r3, r2
    3f9e:	da21      	bge.n	3fe4 <d_source_name+0x94>
    3fa0:	2200      	movs	r2, #0
    3fa2:	6920      	ldr	r0, [r4, #16]
    3fa4:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    3fa8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    3fac:	3301      	adds	r3, #1
    3fae:	e9c0 2201 	strd	r2, r2, [r0, #4]
    3fb2:	6163      	str	r3, [r4, #20]
    3fb4:	2300      	movs	r3, #0
    3fb6:	7003      	strb	r3, [r0, #0]
    3fb8:	e9c0 6503 	strd	r6, r5, [r0, #12]
    3fbc:	e9c0 3301 	strd	r3, r3, [r0, #4]
    3fc0:	62a0      	str	r0, [r4, #40]	; 0x28
    3fc2:	bd70      	pop	{r4, r5, r6, pc}
    3fc4:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    3fc8:	4293      	cmp	r3, r2
    3fca:	da0b      	bge.n	3fe4 <d_source_name+0x94>
    3fcc:	2200      	movs	r2, #0
    3fce:	6920      	ldr	r0, [r4, #16]
    3fd0:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    3fd4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    3fd8:	3301      	adds	r3, #1
    3fda:	e9c0 2201 	strd	r2, r2, [r0, #4]
    3fde:	6163      	str	r3, [r4, #20]
    3fe0:	2e00      	cmp	r6, #0
    3fe2:	d1e7      	bne.n	3fb4 <d_source_name+0x64>
    3fe4:	2000      	movs	r0, #0
    3fe6:	62a0      	str	r0, [r4, #40]	; 0x28
    3fe8:	bd70      	pop	{r4, r5, r6, pc}
    3fea:	2000      	movs	r0, #0
    3fec:	bd70      	pop	{r4, r5, r6, pc}
    3fee:	7a73      	ldrb	r3, [r6, #9]
    3ff0:	2b4e      	cmp	r3, #78	; 0x4e
    3ff2:	d1d1      	bne.n	3f98 <d_source_name+0x48>
    3ff4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3ff6:	6963      	ldr	r3, [r4, #20]
    3ff8:	69a1      	ldr	r1, [r4, #24]
    3ffa:	3216      	adds	r2, #22
    3ffc:	1b55      	subs	r5, r2, r5
    3ffe:	428b      	cmp	r3, r1
    4000:	62e5      	str	r5, [r4, #44]	; 0x2c
    4002:	daef      	bge.n	3fe4 <d_source_name+0x94>
    4004:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4008:	3301      	adds	r3, #1
    400a:	6163      	str	r3, [r4, #20]
    400c:	2115      	movs	r1, #21
    400e:	2300      	movs	r3, #0
    4010:	6922      	ldr	r2, [r4, #16]
    4012:	4d06      	ldr	r5, [pc, #24]	; (402c <Stack_Size+0x2c>)
    4014:	0086      	lsls	r6, r0, #2
    4016:	eb02 0080 	add.w	r0, r2, r0, lsl #2
    401a:	e9c0 3301 	strd	r3, r3, [r0, #4]
    401e:	5593      	strb	r3, [r2, r6]
    4020:	e9c0 5103 	strd	r5, r1, [r0, #12]
    4024:	e7df      	b.n	3fe6 <d_source_name+0x96>
    4026:	bf00      	nop
    4028:	00019118 	.word	0x00019118
    402c:	00019124 	.word	0x00019124

00004030 <d_substitution>:
    4030:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    4034:	68c3      	ldr	r3, [r0, #12]
    4036:	781a      	ldrb	r2, [r3, #0]
    4038:	2a53      	cmp	r2, #83	; 0x53
    403a:	d131      	bne.n	40a0 <d_substitution+0x70>
    403c:	1c5a      	adds	r2, r3, #1
    403e:	60c2      	str	r2, [r0, #12]
    4040:	785a      	ldrb	r2, [r3, #1]
    4042:	4604      	mov	r4, r0
    4044:	b3a2      	cbz	r2, 40b0 <d_substitution+0x80>
    4046:	1c9a      	adds	r2, r3, #2
    4048:	60c2      	str	r2, [r0, #12]
    404a:	785a      	ldrb	r2, [r3, #1]
    404c:	2a5f      	cmp	r2, #95	; 0x5f
    404e:	d044      	beq.n	40da <d_substitution+0xaa>
    4050:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
    4054:	b2c3      	uxtb	r3, r0
    4056:	2b09      	cmp	r3, #9
    4058:	d826      	bhi.n	40a8 <d_substitution+0x78>
    405a:	2100      	movs	r1, #0
    405c:	e00d      	b.n	407a <d_substitution+0x4a>
    405e:	3b30      	subs	r3, #48	; 0x30
    4060:	4299      	cmp	r1, r3
    4062:	d81d      	bhi.n	40a0 <d_substitution+0x70>
    4064:	68e1      	ldr	r1, [r4, #12]
    4066:	780a      	ldrb	r2, [r1, #0]
    4068:	1c48      	adds	r0, r1, #1
    406a:	b11a      	cbz	r2, 4074 <d_substitution+0x44>
    406c:	60e0      	str	r0, [r4, #12]
    406e:	780a      	ldrb	r2, [r1, #0]
    4070:	2a5f      	cmp	r2, #95	; 0x5f
    4072:	d03c      	beq.n	40ee <d_substitution+0xbe>
    4074:	4619      	mov	r1, r3
    4076:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
    407a:	b2c0      	uxtb	r0, r0
    407c:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    4080:	2809      	cmp	r0, #9
    4082:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
    4086:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    408a:	d9e8      	bls.n	405e <d_substitution+0x2e>
    408c:	f1bc 0f19 	cmp.w	ip, #25
    4090:	d806      	bhi.n	40a0 <d_substitution+0x70>
    4092:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    4096:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    409a:	3b37      	subs	r3, #55	; 0x37
    409c:	4299      	cmp	r1, r3
    409e:	d9e1      	bls.n	4064 <d_substitution+0x34>
    40a0:	2500      	movs	r5, #0
    40a2:	4628      	mov	r0, r5
    40a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    40a8:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
    40ac:	2b19      	cmp	r3, #25
    40ae:	d9d4      	bls.n	405a <d_substitution+0x2a>
    40b0:	68a3      	ldr	r3, [r4, #8]
    40b2:	f003 0308 	and.w	r3, r3, #8
    40b6:	2b00      	cmp	r3, #0
    40b8:	bf14      	ite	ne
    40ba:	2501      	movne	r5, #1
    40bc:	2500      	moveq	r5, #0
    40be:	d100      	bne.n	40c2 <d_substitution+0x92>
    40c0:	b9b9      	cbnz	r1, 40f2 <d_substitution+0xc2>
    40c2:	4b40      	ldr	r3, [pc, #256]	; (41c4 <d_substitution+0x194>)
    40c4:	2174      	movs	r1, #116	; 0x74
    40c6:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
    40ca:	e001      	b.n	40d0 <d_substitution+0xa0>
    40cc:	f813 1f1c 	ldrb.w	r1, [r3, #28]!
    40d0:	4291      	cmp	r1, r2
    40d2:	d015      	beq.n	4100 <d_substitution+0xd0>
    40d4:	4283      	cmp	r3, r0
    40d6:	d1f9      	bne.n	40cc <d_substitution+0x9c>
    40d8:	e7e2      	b.n	40a0 <d_substitution+0x70>
    40da:	2300      	movs	r3, #0
    40dc:	6a22      	ldr	r2, [r4, #32]
    40de:	429a      	cmp	r2, r3
    40e0:	d9de      	bls.n	40a0 <d_substitution+0x70>
    40e2:	69e2      	ldr	r2, [r4, #28]
    40e4:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
    40e8:	4628      	mov	r0, r5
    40ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    40ee:	3301      	adds	r3, #1
    40f0:	e7f4      	b.n	40dc <d_substitution+0xac>
    40f2:	68e3      	ldr	r3, [r4, #12]
    40f4:	781b      	ldrb	r3, [r3, #0]
    40f6:	3b43      	subs	r3, #67	; 0x43
    40f8:	2b01      	cmp	r3, #1
    40fa:	bf98      	it	ls
    40fc:	460d      	movls	r5, r1
    40fe:	e7e0      	b.n	40c2 <d_substitution+0x92>
    4100:	695e      	ldr	r6, [r3, #20]
    4102:	2e00      	cmp	r6, #0
    4104:	d056      	beq.n	41b4 <d_substitution+0x184>
    4106:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    410a:	4282      	cmp	r2, r0
    410c:	f8d3 8018 	ldr.w	r8, [r3, #24]
    4110:	da55      	bge.n	41be <d_substitution+0x18e>
    4112:	f04f 0e00 	mov.w	lr, #0
    4116:	f04f 0918 	mov.w	r9, #24
    411a:	6927      	ldr	r7, [r4, #16]
    411c:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
    4120:	eb07 018c 	add.w	r1, r7, ip, lsl #2
    4124:	3201      	adds	r2, #1
    4126:	e9c1 ee01 	strd	lr, lr, [r1, #4]
    412a:	6162      	str	r2, [r4, #20]
    412c:	f807 902c 	strb.w	r9, [r7, ip, lsl #2]
    4130:	e9c1 6803 	strd	r6, r8, [r1, #12]
    4134:	62a1      	str	r1, [r4, #40]	; 0x28
    4136:	2d00      	cmp	r5, #0
    4138:	d039      	beq.n	41ae <d_substitution+0x17e>
    413a:	e9d3 7103 	ldrd	r7, r1, [r3, #12]
    413e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4140:	4290      	cmp	r0, r2
    4142:	440b      	add	r3, r1
    4144:	62e3      	str	r3, [r4, #44]	; 0x2c
    4146:	dd38      	ble.n	41ba <d_substitution+0x18a>
    4148:	2600      	movs	r6, #0
    414a:	f04f 0c18 	mov.w	ip, #24
    414e:	6923      	ldr	r3, [r4, #16]
    4150:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    4154:	eb03 0580 	add.w	r5, r3, r0, lsl #2
    4158:	3201      	adds	r2, #1
    415a:	e9c5 6601 	strd	r6, r6, [r5, #4]
    415e:	6162      	str	r2, [r4, #20]
    4160:	f803 c020 	strb.w	ip, [r3, r0, lsl #2]
    4164:	e9c5 7103 	strd	r7, r1, [r5, #12]
    4168:	68e3      	ldr	r3, [r4, #12]
    416a:	781a      	ldrb	r2, [r3, #0]
    416c:	2a42      	cmp	r2, #66	; 0x42
    416e:	d198      	bne.n	40a2 <d_substitution+0x72>
    4170:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    4172:	3301      	adds	r3, #1
    4174:	60e3      	str	r3, [r4, #12]
    4176:	4620      	mov	r0, r4
    4178:	f7ff feea 	bl	3f50 <d_source_name>
    417c:	462a      	mov	r2, r5
    417e:	4603      	mov	r3, r0
    4180:	214c      	movs	r1, #76	; 0x4c
    4182:	4620      	mov	r0, r4
    4184:	f7ff fc00 	bl	3988 <d_make_comp>
    4188:	68e3      	ldr	r3, [r4, #12]
    418a:	4605      	mov	r5, r0
    418c:	781a      	ldrb	r2, [r3, #0]
    418e:	2a42      	cmp	r2, #66	; 0x42
    4190:	d0ef      	beq.n	4172 <d_substitution+0x142>
    4192:	62a6      	str	r6, [r4, #40]	; 0x28
    4194:	2800      	cmp	r0, #0
    4196:	d083      	beq.n	40a0 <d_substitution+0x70>
    4198:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    419c:	4293      	cmp	r3, r2
    419e:	f6bf af7f 	bge.w	40a0 <d_substitution+0x70>
    41a2:	69e1      	ldr	r1, [r4, #28]
    41a4:	1c5a      	adds	r2, r3, #1
    41a6:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
    41aa:	6222      	str	r2, [r4, #32]
    41ac:	e779      	b.n	40a2 <d_substitution+0x72>
    41ae:	e9d3 7101 	ldrd	r7, r1, [r3, #4]
    41b2:	e7c4      	b.n	413e <d_substitution+0x10e>
    41b4:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    41b8:	e7bd      	b.n	4136 <d_substitution+0x106>
    41ba:	2500      	movs	r5, #0
    41bc:	e7d4      	b.n	4168 <d_substitution+0x138>
    41be:	2100      	movs	r1, #0
    41c0:	e7b8      	b.n	4134 <d_substitution+0x104>
    41c2:	bf00      	nop
    41c4:	000199b0 	.word	0x000199b0

000041c8 <d_print_java_identifier>:
    41c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    41cc:	188f      	adds	r7, r1, r2
    41ce:	42b9      	cmp	r1, r7
    41d0:	d24a      	bcs.n	4268 <d_print_java_identifier+0xa0>
    41d2:	460c      	mov	r4, r1
    41d4:	4605      	mov	r5, r0
    41d6:	f04f 0800 	mov.w	r8, #0
    41da:	e00c      	b.n	41f6 <d_print_java_identifier+0x2e>
    41dc:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    41e0:	29ff      	cmp	r1, #255	; 0xff
    41e2:	d033      	beq.n	424c <d_print_java_identifier+0x84>
    41e4:	1c4b      	adds	r3, r1, #1
    41e6:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
    41ea:	546e      	strb	r6, [r5, r1]
    41ec:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    41f0:	3401      	adds	r4, #1
    41f2:	42a7      	cmp	r7, r4
    41f4:	d938      	bls.n	4268 <d_print_java_identifier+0xa0>
    41f6:	1b3b      	subs	r3, r7, r4
    41f8:	2b03      	cmp	r3, #3
    41fa:	7826      	ldrb	r6, [r4, #0]
    41fc:	ddee      	ble.n	41dc <d_print_java_identifier+0x14>
    41fe:	2e5f      	cmp	r6, #95	; 0x5f
    4200:	d1ec      	bne.n	41dc <d_print_java_identifier+0x14>
    4202:	7863      	ldrb	r3, [r4, #1]
    4204:	2b5f      	cmp	r3, #95	; 0x5f
    4206:	d1e9      	bne.n	41dc <d_print_java_identifier+0x14>
    4208:	78a3      	ldrb	r3, [r4, #2]
    420a:	2b55      	cmp	r3, #85	; 0x55
    420c:	d1e6      	bne.n	41dc <d_print_java_identifier+0x14>
    420e:	1ce2      	adds	r2, r4, #3
    4210:	4297      	cmp	r7, r2
    4212:	d9e3      	bls.n	41dc <d_print_java_identifier+0x14>
    4214:	2100      	movs	r1, #0
    4216:	e005      	b.n	4224 <d_print_java_identifier+0x5c>
    4218:	f1a6 0337 	sub.w	r3, r6, #55	; 0x37
    421c:	42ba      	cmp	r2, r7
    421e:	eb03 1101 	add.w	r1, r3, r1, lsl #4
    4222:	d023      	beq.n	426c <d_print_java_identifier+0xa4>
    4224:	4691      	mov	r9, r2
    4226:	f812 6b01 	ldrb.w	r6, [r2], #1
    422a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    422e:	b2d8      	uxtb	r0, r3
    4230:	2809      	cmp	r0, #9
    4232:	f1a6 0c41 	sub.w	ip, r6, #65	; 0x41
    4236:	d9f1      	bls.n	421c <d_print_java_identifier+0x54>
    4238:	f1bc 0f05 	cmp.w	ip, #5
    423c:	f1a6 0361 	sub.w	r3, r6, #97	; 0x61
    4240:	d9ea      	bls.n	4218 <d_print_java_identifier+0x50>
    4242:	2b05      	cmp	r3, #5
    4244:	d814      	bhi.n	4270 <d_print_java_identifier+0xa8>
    4246:	f1a6 0357 	sub.w	r3, r6, #87	; 0x57
    424a:	e7e7      	b.n	421c <d_print_java_identifier+0x54>
    424c:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
    4250:	4628      	mov	r0, r5
    4252:	f885 80ff 	strb.w	r8, [r5, #255]	; 0xff
    4256:	4798      	blx	r3
    4258:	2301      	movs	r3, #1
    425a:	f8d5 2128 	ldr.w	r2, [r5, #296]	; 0x128
    425e:	2100      	movs	r1, #0
    4260:	441a      	add	r2, r3
    4262:	f8c5 2128 	str.w	r2, [r5, #296]	; 0x128
    4266:	e7be      	b.n	41e6 <d_print_java_identifier+0x1e>
    4268:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    426c:	265f      	movs	r6, #95	; 0x5f
    426e:	e7b5      	b.n	41dc <d_print_java_identifier+0x14>
    4270:	454f      	cmp	r7, r9
    4272:	d9fb      	bls.n	426c <d_print_java_identifier+0xa4>
    4274:	2e5f      	cmp	r6, #95	; 0x5f
    4276:	d1f9      	bne.n	426c <d_print_java_identifier+0xa4>
    4278:	29ff      	cmp	r1, #255	; 0xff
    427a:	d8af      	bhi.n	41dc <d_print_java_identifier+0x14>
    427c:	b2ce      	uxtb	r6, r1
    427e:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    4282:	29ff      	cmp	r1, #255	; 0xff
    4284:	d007      	beq.n	4296 <d_print_java_identifier+0xce>
    4286:	1c4b      	adds	r3, r1, #1
    4288:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
    428c:	464c      	mov	r4, r9
    428e:	546e      	strb	r6, [r5, r1]
    4290:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    4294:	e7ac      	b.n	41f0 <d_print_java_identifier+0x28>
    4296:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
    429a:	4628      	mov	r0, r5
    429c:	f885 80ff 	strb.w	r8, [r5, #255]	; 0xff
    42a0:	4798      	blx	r3
    42a2:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    42a6:	2100      	movs	r1, #0
    42a8:	3301      	adds	r3, #1
    42aa:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    42ae:	e7ea      	b.n	4286 <d_print_java_identifier+0xbe>

000042b0 <d_type>:
    42b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    42b4:	68c2      	ldr	r2, [r0, #12]
    42b6:	4604      	mov	r4, r0
    42b8:	b083      	sub	sp, #12
    42ba:	4610      	mov	r0, r2
    42bc:	f7ff fd08 	bl	3cd0 <next_is_type_qual.isra.0>
    42c0:	2800      	cmp	r0, #0
    42c2:	d16e      	bne.n	43a2 <d_type+0xf2>
    42c4:	7811      	ldrb	r1, [r2, #0]
    42c6:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    42ca:	2b4a      	cmp	r3, #74	; 0x4a
    42cc:	d864      	bhi.n	4398 <d_type+0xe8>
    42ce:	e8df f013 	tbh	[pc, r3, lsl #1]
    42d2:	00b9      	.short	0x00b9
    42d4:	00b900b9 	.word	0x00b900b9
    42d8:	00b900b9 	.word	0x00b900b9
    42dc:	00b900b9 	.word	0x00b900b9
    42e0:	00b900b9 	.word	0x00b900b9
    42e4:	006300b9 	.word	0x006300b9
    42e8:	00630063 	.word	0x00630063
    42ec:	00630063 	.word	0x00630063
    42f0:	00630063 	.word	0x00630063
    42f4:	006301ff 	.word	0x006301ff
    42f8:	014400ce 	.word	0x014400ce
    42fc:	013e0063 	.word	0x013e0063
    4300:	006301e1 	.word	0x006301e1
    4304:	00630063 	.word	0x00630063
    4308:	00630063 	.word	0x00630063
    430c:	00b90241 	.word	0x00b90241
    4310:	01c501d3 	.word	0x01c501d3
    4314:	01b70063 	.word	0x01b70063
    4318:	00f4011a 	.word	0x00f4011a
    431c:	006300dc 	.word	0x006300dc
    4320:	00630063 	.word	0x00630063
    4324:	00b90063 	.word	0x00b90063
    4328:	00630063 	.word	0x00630063
    432c:	00630063 	.word	0x00630063
    4330:	00630063 	.word	0x00630063
    4334:	00980098 	.word	0x00980098
    4338:	00980098 	.word	0x00980098
    433c:	00980098 	.word	0x00980098
    4340:	00980098 	.word	0x00980098
    4344:	00980098 	.word	0x00980098
    4348:	00980063 	.word	0x00980063
    434c:	00980098 	.word	0x00980098
    4350:	00630098 	.word	0x00630098
    4354:	00630063 	.word	0x00630063
    4358:	00980098 	.word	0x00980098
    435c:	009801ef 	.word	0x009801ef
    4360:	00980098 	.word	0x00980098
    4364:	00980098 	.word	0x00980098
    4368:	2301      	movs	r3, #1
    436a:	6b25      	ldr	r5, [r4, #48]	; 0x30
    436c:	4620      	mov	r0, r4
    436e:	6323      	str	r3, [r4, #48]	; 0x30
    4370:	f001 fbfa 	bl	5b68 <d_expression_1>
    4374:	6325      	str	r5, [r4, #48]	; 0x30
    4376:	4602      	mov	r2, r0
    4378:	2300      	movs	r3, #0
    437a:	2143      	movs	r1, #67	; 0x43
    437c:	4620      	mov	r0, r4
    437e:	f7ff fb03 	bl	3988 <d_make_comp>
    4382:	4605      	mov	r5, r0
    4384:	9001      	str	r0, [sp, #4]
    4386:	b138      	cbz	r0, 4398 <d_type+0xe8>
    4388:	68e3      	ldr	r3, [r4, #12]
    438a:	781a      	ldrb	r2, [r3, #0]
    438c:	b122      	cbz	r2, 4398 <d_type+0xe8>
    438e:	1c5a      	adds	r2, r3, #1
    4390:	60e2      	str	r2, [r4, #12]
    4392:	781b      	ldrb	r3, [r3, #0]
    4394:	2b45      	cmp	r3, #69	; 0x45
    4396:	d05c      	beq.n	4452 <d_type+0x1a2>
    4398:	2500      	movs	r5, #0
    439a:	4628      	mov	r0, r5
    439c:	b003      	add	sp, #12
    439e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    43a2:	2200      	movs	r2, #0
    43a4:	4620      	mov	r0, r4
    43a6:	a901      	add	r1, sp, #4
    43a8:	f001 fe3a 	bl	6020 <d_cv_qualifiers>
    43ac:	4605      	mov	r5, r0
    43ae:	2800      	cmp	r0, #0
    43b0:	d0f2      	beq.n	4398 <d_type+0xe8>
    43b2:	68e3      	ldr	r3, [r4, #12]
    43b4:	4620      	mov	r0, r4
    43b6:	781b      	ldrb	r3, [r3, #0]
    43b8:	2b46      	cmp	r3, #70	; 0x46
    43ba:	d01e      	beq.n	43fa <d_type+0x14a>
    43bc:	f7ff ff78 	bl	42b0 <d_type>
    43c0:	6028      	str	r0, [r5, #0]
    43c2:	2800      	cmp	r0, #0
    43c4:	d0e8      	beq.n	4398 <d_type+0xe8>
    43c6:	7803      	ldrb	r3, [r0, #0]
    43c8:	3b1f      	subs	r3, #31
    43ca:	2b01      	cmp	r3, #1
    43cc:	d805      	bhi.n	43da <d_type+0x12a>
    43ce:	9a01      	ldr	r2, [sp, #4]
    43d0:	68c3      	ldr	r3, [r0, #12]
    43d2:	60c2      	str	r2, [r0, #12]
    43d4:	682a      	ldr	r2, [r5, #0]
    43d6:	9201      	str	r2, [sp, #4]
    43d8:	602b      	str	r3, [r5, #0]
    43da:	9d01      	ldr	r5, [sp, #4]
    43dc:	2d00      	cmp	r5, #0
    43de:	d0db      	beq.n	4398 <d_type+0xe8>
    43e0:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    43e4:	4293      	cmp	r3, r2
    43e6:	dad7      	bge.n	4398 <d_type+0xe8>
    43e8:	4628      	mov	r0, r5
    43ea:	69e1      	ldr	r1, [r4, #28]
    43ec:	1c5a      	adds	r2, r3, #1
    43ee:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    43f2:	6222      	str	r2, [r4, #32]
    43f4:	b003      	add	sp, #12
    43f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    43fa:	f000 fc69 	bl	4cd0 <d_function_type>
    43fe:	6028      	str	r0, [r5, #0]
    4400:	e7df      	b.n	43c2 <d_type+0x112>
    4402:	48b2      	ldr	r0, [pc, #712]	; (46cc <d_type+0x41c>)
    4404:	3961      	subs	r1, #97	; 0x61
    4406:	eb01 0181 	add.w	r1, r1, r1, lsl #2
    440a:	6963      	ldr	r3, [r4, #20]
    440c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    4410:	69a0      	ldr	r0, [r4, #24]
    4412:	4283      	cmp	r3, r0
    4414:	f280 835a 	bge.w	4acc <d_type+0x81c>
    4418:	1c57      	adds	r7, r2, #1
    441a:	f04f 0c27 	mov.w	ip, #39	; 0x27
    441e:	2200      	movs	r2, #0
    4420:	6920      	ldr	r0, [r4, #16]
    4422:	eb03 0683 	add.w	r6, r3, r3, lsl #2
    4426:	eb00 0586 	add.w	r5, r0, r6, lsl #2
    442a:	3301      	adds	r3, #1
    442c:	e9c5 2201 	strd	r2, r2, [r5, #4]
    4430:	6163      	str	r3, [r4, #20]
    4432:	f800 c026 	strb.w	ip, [r0, r6, lsl #2]
    4436:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4438:	60e9      	str	r1, [r5, #12]
    443a:	6849      	ldr	r1, [r1, #4]
    443c:	60e7      	str	r7, [r4, #12]
    443e:	440b      	add	r3, r1
    4440:	62e3      	str	r3, [r4, #44]	; 0x2c
    4442:	e7aa      	b.n	439a <d_type+0xea>
    4444:	4620      	mov	r0, r4
    4446:	f000 fe11 	bl	506c <d_name>
    444a:	4605      	mov	r5, r0
    444c:	9001      	str	r0, [sp, #4]
    444e:	2d00      	cmp	r5, #0
    4450:	d0a2      	beq.n	4398 <d_type+0xe8>
    4452:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    4456:	4293      	cmp	r3, r2
    4458:	da9e      	bge.n	4398 <d_type+0xe8>
    445a:	69e1      	ldr	r1, [r4, #28]
    445c:	1c5a      	adds	r2, r3, #1
    445e:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    4462:	9d01      	ldr	r5, [sp, #4]
    4464:	6222      	str	r2, [r4, #32]
    4466:	4628      	mov	r0, r5
    4468:	b003      	add	sp, #12
    446a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    446e:	3201      	adds	r2, #1
    4470:	60e2      	str	r2, [r4, #12]
    4472:	4620      	mov	r0, r4
    4474:	f7ff ff1c 	bl	42b0 <d_type>
    4478:	2300      	movs	r3, #0
    447a:	4602      	mov	r2, r0
    447c:	2125      	movs	r1, #37	; 0x25
    447e:	4620      	mov	r0, r4
    4480:	f7ff fa82 	bl	3988 <d_make_comp>
    4484:	4605      	mov	r5, r0
    4486:	9001      	str	r0, [sp, #4]
    4488:	e7e1      	b.n	444e <d_type+0x19e>
    448a:	3201      	adds	r2, #1
    448c:	60e2      	str	r2, [r4, #12]
    448e:	4620      	mov	r0, r4
    4490:	f7ff fd5e 	bl	3f50 <d_source_name>
    4494:	68e3      	ldr	r3, [r4, #12]
    4496:	9001      	str	r0, [sp, #4]
    4498:	781a      	ldrb	r2, [r3, #0]
    449a:	4605      	mov	r5, r0
    449c:	2a49      	cmp	r2, #73	; 0x49
    449e:	f000 82b9 	beq.w	4a14 <d_type+0x764>
    44a2:	4620      	mov	r0, r4
    44a4:	f7ff ff04 	bl	42b0 <d_type>
    44a8:	2121      	movs	r1, #33	; 0x21
    44aa:	4602      	mov	r2, r0
    44ac:	9b01      	ldr	r3, [sp, #4]
    44ae:	4620      	mov	r0, r4
    44b0:	f7ff fa6a 	bl	3988 <d_make_comp>
    44b4:	4605      	mov	r5, r0
    44b6:	9001      	str	r0, [sp, #4]
    44b8:	e7c9      	b.n	444e <d_type+0x19e>
    44ba:	4620      	mov	r0, r4
    44bc:	f7ff fcda 	bl	3e74 <d_template_param>
    44c0:	68e6      	ldr	r6, [r4, #12]
    44c2:	9001      	str	r0, [sp, #4]
    44c4:	7833      	ldrb	r3, [r6, #0]
    44c6:	4605      	mov	r5, r0
    44c8:	2b49      	cmp	r3, #73	; 0x49
    44ca:	d1c0      	bne.n	444e <d_type+0x19e>
    44cc:	6b63      	ldr	r3, [r4, #52]	; 0x34
    44ce:	2b00      	cmp	r3, #0
    44d0:	f040 82c8 	bne.w	4a64 <d_type+0x7b4>
    44d4:	2800      	cmp	r0, #0
    44d6:	f43f af5f 	beq.w	4398 <d_type+0xe8>
    44da:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    44de:	428a      	cmp	r2, r1
    44e0:	f6bf af5a 	bge.w	4398 <d_type+0xe8>
    44e4:	69e1      	ldr	r1, [r4, #28]
    44e6:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    44ea:	3201      	adds	r2, #1
    44ec:	6222      	str	r2, [r4, #32]
    44ee:	7832      	ldrb	r2, [r6, #0]
    44f0:	3a49      	subs	r2, #73	; 0x49
    44f2:	2a01      	cmp	r2, #1
    44f4:	d805      	bhi.n	4502 <d_type+0x252>
    44f6:	3601      	adds	r6, #1
    44f8:	4620      	mov	r0, r4
    44fa:	60e6      	str	r6, [r4, #12]
    44fc:	f001 fe66 	bl	61cc <d_template_args_1>
    4500:	4603      	mov	r3, r0
    4502:	462a      	mov	r2, r5
    4504:	e01c      	b.n	4540 <d_type+0x290>
    4506:	7853      	ldrb	r3, [r2, #1]
    4508:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    450c:	2a09      	cmp	r2, #9
    450e:	d905      	bls.n	451c <d_type+0x26c>
    4510:	2b5f      	cmp	r3, #95	; 0x5f
    4512:	d003      	beq.n	451c <d_type+0x26c>
    4514:	3b41      	subs	r3, #65	; 0x41
    4516:	2b19      	cmp	r3, #25
    4518:	f200 8297 	bhi.w	4a4a <d_type+0x79a>
    451c:	2100      	movs	r1, #0
    451e:	4620      	mov	r0, r4
    4520:	f7ff fd86 	bl	4030 <d_substitution>
    4524:	68e3      	ldr	r3, [r4, #12]
    4526:	9001      	str	r0, [sp, #4]
    4528:	781a      	ldrb	r2, [r3, #0]
    452a:	4605      	mov	r5, r0
    452c:	2a49      	cmp	r2, #73	; 0x49
    452e:	f47f af34 	bne.w	439a <d_type+0xea>
    4532:	3301      	adds	r3, #1
    4534:	60e3      	str	r3, [r4, #12]
    4536:	4620      	mov	r0, r4
    4538:	f001 fe48 	bl	61cc <d_template_args_1>
    453c:	462a      	mov	r2, r5
    453e:	4603      	mov	r3, r0
    4540:	2104      	movs	r1, #4
    4542:	4620      	mov	r0, r4
    4544:	f7ff fa20 	bl	3988 <d_make_comp>
    4548:	4605      	mov	r5, r0
    454a:	9001      	str	r0, [sp, #4]
    454c:	e77f      	b.n	444e <d_type+0x19e>
    454e:	4620      	mov	r0, r4
    4550:	f000 fbbe 	bl	4cd0 <d_function_type>
    4554:	4605      	mov	r5, r0
    4556:	9001      	str	r0, [sp, #4]
    4558:	e779      	b.n	444e <d_type+0x19e>
    455a:	1c53      	adds	r3, r2, #1
    455c:	60e3      	str	r3, [r4, #12]
    455e:	7853      	ldrb	r3, [r2, #1]
    4560:	2b00      	cmp	r3, #0
    4562:	f43f af19 	beq.w	4398 <d_type+0xe8>
    4566:	1c93      	adds	r3, r2, #2
    4568:	60e3      	str	r3, [r4, #12]
    456a:	7853      	ldrb	r3, [r2, #1]
    456c:	3b46      	subs	r3, #70	; 0x46
    456e:	2b30      	cmp	r3, #48	; 0x30
    4570:	f63f af12 	bhi.w	4398 <d_type+0xe8>
    4574:	a101      	add	r1, pc, #4	; (adr r1, 457c <d_type+0x2cc>)
    4576:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
    457a:	bf00      	nop
    457c:	00004785 	.word	0x00004785
    4580:	00004399 	.word	0x00004399
    4584:	00004399 	.word	0x00004399
    4588:	00004399 	.word	0x00004399
    458c:	00004399 	.word	0x00004399
    4590:	00004399 	.word	0x00004399
    4594:	00004399 	.word	0x00004399
    4598:	00004399 	.word	0x00004399
    459c:	00004399 	.word	0x00004399
    45a0:	00004399 	.word	0x00004399
    45a4:	00004399 	.word	0x00004399
    45a8:	00004399 	.word	0x00004399
    45ac:	00004399 	.word	0x00004399
    45b0:	00004399 	.word	0x00004399
    45b4:	00004369 	.word	0x00004369
    45b8:	00004399 	.word	0x00004399
    45bc:	00004399 	.word	0x00004399
    45c0:	00004399 	.word	0x00004399
    45c4:	00004399 	.word	0x00004399
    45c8:	00004399 	.word	0x00004399
    45cc:	00004399 	.word	0x00004399
    45d0:	00004399 	.word	0x00004399
    45d4:	00004399 	.word	0x00004399
    45d8:	00004399 	.word	0x00004399
    45dc:	00004399 	.word	0x00004399
    45e0:	00004399 	.word	0x00004399
    45e4:	00004399 	.word	0x00004399
    45e8:	00004825 	.word	0x00004825
    45ec:	00004399 	.word	0x00004399
    45f0:	000047f9 	.word	0x000047f9
    45f4:	000048d7 	.word	0x000048d7
    45f8:	000048a7 	.word	0x000048a7
    45fc:	00004877 	.word	0x00004877
    4600:	00004399 	.word	0x00004399
    4604:	00004847 	.word	0x00004847
    4608:	000049f5 	.word	0x000049f5
    460c:	00004399 	.word	0x00004399
    4610:	00004399 	.word	0x00004399
    4614:	00004399 	.word	0x00004399
    4618:	00004399 	.word	0x00004399
    461c:	000049c7 	.word	0x000049c7
    4620:	00004399 	.word	0x00004399
    4624:	000049af 	.word	0x000049af
    4628:	00004399 	.word	0x00004399
    462c:	00004399 	.word	0x00004399
    4630:	0000497f 	.word	0x0000497f
    4634:	00004369 	.word	0x00004369
    4638:	0000494f 	.word	0x0000494f
    463c:	000048f5 	.word	0x000048f5
    4640:	3201      	adds	r2, #1
    4642:	60e2      	str	r2, [r4, #12]
    4644:	4620      	mov	r0, r4
    4646:	f7ff fe33 	bl	42b0 <d_type>
    464a:	2300      	movs	r3, #0
    464c:	4602      	mov	r2, r0
    464e:	2123      	movs	r1, #35	; 0x23
    4650:	4620      	mov	r0, r4
    4652:	f7ff f999 	bl	3988 <d_make_comp>
    4656:	4605      	mov	r5, r0
    4658:	9001      	str	r0, [sp, #4]
    465a:	e6f8      	b.n	444e <d_type+0x19e>
    465c:	3201      	adds	r2, #1
    465e:	60e2      	str	r2, [r4, #12]
    4660:	4620      	mov	r0, r4
    4662:	f7ff fe25 	bl	42b0 <d_type>
    4666:	2300      	movs	r3, #0
    4668:	4602      	mov	r2, r0
    466a:	2122      	movs	r1, #34	; 0x22
    466c:	4620      	mov	r0, r4
    466e:	f7ff f98b 	bl	3988 <d_make_comp>
    4672:	4605      	mov	r5, r0
    4674:	9001      	str	r0, [sp, #4]
    4676:	e6ea      	b.n	444e <d_type+0x19e>
    4678:	3201      	adds	r2, #1
    467a:	60e2      	str	r2, [r4, #12]
    467c:	4620      	mov	r0, r4
    467e:	f7ff fe17 	bl	42b0 <d_type>
    4682:	2300      	movs	r3, #0
    4684:	4602      	mov	r2, r0
    4686:	2124      	movs	r1, #36	; 0x24
    4688:	4620      	mov	r0, r4
    468a:	f7ff f97d 	bl	3988 <d_make_comp>
    468e:	4605      	mov	r5, r0
    4690:	9001      	str	r0, [sp, #4]
    4692:	e6dc      	b.n	444e <d_type+0x19e>
    4694:	3201      	adds	r2, #1
    4696:	60e2      	str	r2, [r4, #12]
    4698:	4620      	mov	r0, r4
    469a:	f7ff fe09 	bl	42b0 <d_type>
    469e:	2300      	movs	r3, #0
    46a0:	4602      	mov	r2, r0
    46a2:	2126      	movs	r1, #38	; 0x26
    46a4:	4620      	mov	r0, r4
    46a6:	f7ff f96f 	bl	3988 <d_make_comp>
    46aa:	4605      	mov	r5, r0
    46ac:	9001      	str	r0, [sp, #4]
    46ae:	e6ce      	b.n	444e <d_type+0x19e>
    46b0:	3201      	adds	r2, #1
    46b2:	60e2      	str	r2, [r4, #12]
    46b4:	4620      	mov	r0, r4
    46b6:	f7ff fc4b 	bl	3f50 <d_source_name>
    46ba:	2300      	movs	r3, #0
    46bc:	4602      	mov	r2, r0
    46be:	2128      	movs	r1, #40	; 0x28
    46c0:	4620      	mov	r0, r4
    46c2:	f7ff f961 	bl	3988 <d_make_comp>
    46c6:	4605      	mov	r5, r0
    46c8:	9001      	str	r0, [sp, #4]
    46ca:	e6c0      	b.n	444e <d_type+0x19e>
    46cc:	00019a74 	.word	0x00019a74
    46d0:	1c51      	adds	r1, r2, #1
    46d2:	60e1      	str	r1, [r4, #12]
    46d4:	7853      	ldrb	r3, [r2, #1]
    46d6:	2b5f      	cmp	r3, #95	; 0x5f
    46d8:	f000 819a 	beq.w	4a10 <d_type+0x760>
    46dc:	3b30      	subs	r3, #48	; 0x30
    46de:	2b09      	cmp	r3, #9
    46e0:	f200 81a5 	bhi.w	4a2e <d_type+0x77e>
    46e4:	460b      	mov	r3, r1
    46e6:	461d      	mov	r5, r3
    46e8:	3301      	adds	r3, #1
    46ea:	60e3      	str	r3, [r4, #12]
    46ec:	781a      	ldrb	r2, [r3, #0]
    46ee:	3a30      	subs	r2, #48	; 0x30
    46f0:	2a09      	cmp	r2, #9
    46f2:	d9f8      	bls.n	46e6 <d_type+0x436>
    46f4:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    46f8:	4282      	cmp	r2, r0
    46fa:	eba3 0c01 	sub.w	ip, r3, r1
    46fe:	f6bf ae4b 	bge.w	4398 <d_type+0xe8>
    4702:	2000      	movs	r0, #0
    4704:	f8d4 e010 	ldr.w	lr, [r4, #16]
    4708:	eb02 0782 	add.w	r7, r2, r2, lsl #2
    470c:	eb0e 0687 	add.w	r6, lr, r7, lsl #2
    4710:	3201      	adds	r2, #1
    4712:	4584      	cmp	ip, r0
    4714:	e9c6 0001 	strd	r0, r0, [r6, #4]
    4718:	ea4f 0787 	mov.w	r7, r7, lsl #2
    471c:	6162      	str	r2, [r4, #20]
    471e:	f77f ae3b 	ble.w	4398 <d_type+0xe8>
    4722:	e9c6 0001 	strd	r0, r0, [r6, #4]
    4726:	f80e 0007 	strb.w	r0, [lr, r7]
    472a:	e9c6 1c03 	strd	r1, ip, [r6, #12]
    472e:	4619      	mov	r1, r3
    4730:	786b      	ldrb	r3, [r5, #1]
    4732:	2b5f      	cmp	r3, #95	; 0x5f
    4734:	f47f ae30 	bne.w	4398 <d_type+0xe8>
    4738:	3101      	adds	r1, #1
    473a:	60e1      	str	r1, [r4, #12]
    473c:	4620      	mov	r0, r4
    473e:	f7ff fdb7 	bl	42b0 <d_type>
    4742:	4632      	mov	r2, r6
    4744:	4603      	mov	r3, r0
    4746:	212a      	movs	r1, #42	; 0x2a
    4748:	4620      	mov	r0, r4
    474a:	f7ff f91d 	bl	3988 <d_make_comp>
    474e:	4605      	mov	r5, r0
    4750:	9001      	str	r0, [sp, #4]
    4752:	e67c      	b.n	444e <d_type+0x19e>
    4754:	3201      	adds	r2, #1
    4756:	4620      	mov	r0, r4
    4758:	60e2      	str	r2, [r4, #12]
    475a:	f7ff fda9 	bl	42b0 <d_type>
    475e:	4605      	mov	r5, r0
    4760:	2800      	cmp	r0, #0
    4762:	f43f ae19 	beq.w	4398 <d_type+0xe8>
    4766:	4620      	mov	r0, r4
    4768:	f7ff fda2 	bl	42b0 <d_type>
    476c:	4603      	mov	r3, r0
    476e:	2800      	cmp	r0, #0
    4770:	f43f ae12 	beq.w	4398 <d_type+0xe8>
    4774:	462a      	mov	r2, r5
    4776:	212b      	movs	r1, #43	; 0x2b
    4778:	4620      	mov	r0, r4
    477a:	f7ff f905 	bl	3988 <d_make_comp>
    477e:	4605      	mov	r5, r0
    4780:	9001      	str	r0, [sp, #4]
    4782:	e664      	b.n	444e <d_type+0x19e>
    4784:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
    4788:	428b      	cmp	r3, r1
    478a:	f280 81a3 	bge.w	4ad4 <d_type+0x824>
    478e:	2600      	movs	r6, #0
    4790:	272c      	movs	r7, #44	; 0x2c
    4792:	6921      	ldr	r1, [r4, #16]
    4794:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4798:	eb01 0580 	add.w	r5, r1, r0, lsl #2
    479c:	e9c5 6601 	strd	r6, r6, [r5, #4]
    47a0:	3301      	adds	r3, #1
    47a2:	6163      	str	r3, [r4, #20]
    47a4:	9501      	str	r5, [sp, #4]
    47a6:	f801 7020 	strb.w	r7, [r1, r0, lsl #2]
    47aa:	7893      	ldrb	r3, [r2, #2]
    47ac:	3b30      	subs	r3, #48	; 0x30
    47ae:	b2db      	uxtb	r3, r3
    47b0:	2b09      	cmp	r3, #9
    47b2:	bf94      	ite	ls
    47b4:	2301      	movls	r3, #1
    47b6:	4633      	movhi	r3, r6
    47b8:	822b      	strh	r3, [r5, #16]
    47ba:	d803      	bhi.n	47c4 <d_type+0x514>
    47bc:	4620      	mov	r0, r4
    47be:	f7ff f92d 	bl	3a1c <d_number>
    47c2:	9d01      	ldr	r5, [sp, #4]
    47c4:	4620      	mov	r0, r4
    47c6:	f7ff fd73 	bl	42b0 <d_type>
    47ca:	9b01      	ldr	r3, [sp, #4]
    47cc:	60e8      	str	r0, [r5, #12]
    47ce:	68db      	ldr	r3, [r3, #12]
    47d0:	2b00      	cmp	r3, #0
    47d2:	f43f ade1 	beq.w	4398 <d_type+0xe8>
    47d6:	4620      	mov	r0, r4
    47d8:	f7ff f920 	bl	3a1c <d_number>
    47dc:	68e2      	ldr	r2, [r4, #12]
    47de:	7813      	ldrb	r3, [r2, #0]
    47e0:	b113      	cbz	r3, 47e8 <d_type+0x538>
    47e2:	1c53      	adds	r3, r2, #1
    47e4:	60e3      	str	r3, [r4, #12]
    47e6:	7813      	ldrb	r3, [r2, #0]
    47e8:	f1a3 0373 	sub.w	r3, r3, #115	; 0x73
    47ec:	fab3 f383 	clz	r3, r3
    47f0:	9d01      	ldr	r5, [sp, #4]
    47f2:	095b      	lsrs	r3, r3, #5
    47f4:	826b      	strh	r3, [r5, #18]
    47f6:	e5d0      	b.n	439a <d_type+0xea>
    47f8:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    47fc:	4293      	cmp	r3, r2
    47fe:	f6bf adcb 	bge.w	4398 <d_type+0xe8>
    4802:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    4806:	3301      	adds	r3, #1
    4808:	6163      	str	r3, [r4, #20]
    480a:	210e      	movs	r1, #14
    480c:	2300      	movs	r3, #0
    480e:	6922      	ldr	r2, [r4, #16]
    4810:	48b2      	ldr	r0, [pc, #712]	; (4adc <d_type+0x82c>)
    4812:	00ae      	lsls	r6, r5, #2
    4814:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    4818:	e9c5 3301 	strd	r3, r3, [r5, #4]
    481c:	5593      	strb	r3, [r2, r6]
    481e:	e9c5 0103 	strd	r0, r1, [r5, #12]
    4822:	e5ba      	b.n	439a <d_type+0xea>
    4824:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4828:	4293      	cmp	r3, r2
    482a:	f6bf adb5 	bge.w	4398 <d_type+0xe8>
    482e:	6922      	ldr	r2, [r4, #16]
    4830:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    4834:	3301      	adds	r3, #1
    4836:	00ae      	lsls	r6, r5, #2
    4838:	6163      	str	r3, [r4, #20]
    483a:	2104      	movs	r1, #4
    483c:	2300      	movs	r3, #0
    483e:	48a8      	ldr	r0, [pc, #672]	; (4ae0 <d_type+0x830>)
    4840:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    4844:	e7e8      	b.n	4818 <d_type+0x568>
    4846:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    484a:	4293      	cmp	r3, r2
    484c:	f280 813e 	bge.w	4acc <d_type+0x81c>
    4850:	2000      	movs	r0, #0
    4852:	2727      	movs	r7, #39	; 0x27
    4854:	6922      	ldr	r2, [r4, #16]
    4856:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    485a:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    485e:	3301      	adds	r3, #1
    4860:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4864:	6163      	str	r3, [r4, #20]
    4866:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    486a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    486c:	4e9d      	ldr	r6, [pc, #628]	; (4ae4 <d_type+0x834>)
    486e:	3304      	adds	r3, #4
    4870:	60ee      	str	r6, [r5, #12]
    4872:	62e3      	str	r3, [r4, #44]	; 0x2c
    4874:	e591      	b.n	439a <d_type+0xea>
    4876:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    487a:	4293      	cmp	r3, r2
    487c:	f280 8126 	bge.w	4acc <d_type+0x81c>
    4880:	2000      	movs	r0, #0
    4882:	2727      	movs	r7, #39	; 0x27
    4884:	6922      	ldr	r2, [r4, #16]
    4886:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    488a:	4e97      	ldr	r6, [pc, #604]	; (4ae8 <d_type+0x838>)
    488c:	3301      	adds	r3, #1
    488e:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4892:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4896:	6163      	str	r3, [r4, #20]
    4898:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    489c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    489e:	60ee      	str	r6, [r5, #12]
    48a0:	3309      	adds	r3, #9
    48a2:	62e3      	str	r3, [r4, #44]	; 0x2c
    48a4:	e579      	b.n	439a <d_type+0xea>
    48a6:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    48aa:	4293      	cmp	r3, r2
    48ac:	f280 810e 	bge.w	4acc <d_type+0x81c>
    48b0:	2000      	movs	r0, #0
    48b2:	2727      	movs	r7, #39	; 0x27
    48b4:	6922      	ldr	r2, [r4, #16]
    48b6:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    48ba:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    48be:	3301      	adds	r3, #1
    48c0:	e9c5 0001 	strd	r0, r0, [r5, #4]
    48c4:	6163      	str	r3, [r4, #20]
    48c6:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    48ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    48cc:	4e87      	ldr	r6, [pc, #540]	; (4aec <d_type+0x83c>)
    48ce:	330a      	adds	r3, #10
    48d0:	60ee      	str	r6, [r5, #12]
    48d2:	62e3      	str	r3, [r4, #44]	; 0x2c
    48d4:	e561      	b.n	439a <d_type+0xea>
    48d6:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    48da:	4293      	cmp	r3, r2
    48dc:	f280 80f6 	bge.w	4acc <d_type+0x81c>
    48e0:	6922      	ldr	r2, [r4, #16]
    48e2:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    48e6:	2000      	movs	r0, #0
    48e8:	2727      	movs	r7, #39	; 0x27
    48ea:	4e81      	ldr	r6, [pc, #516]	; (4af0 <d_type+0x840>)
    48ec:	3301      	adds	r3, #1
    48ee:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    48f2:	e7ce      	b.n	4892 <d_type+0x5e2>
    48f4:	7893      	ldrb	r3, [r2, #2]
    48f6:	2b5f      	cmp	r3, #95	; 0x5f
    48f8:	f000 80da 	beq.w	4ab0 <d_type+0x800>
    48fc:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4900:	4293      	cmp	r3, r2
    4902:	f6bf ad49 	bge.w	4398 <d_type+0xe8>
    4906:	2600      	movs	r6, #0
    4908:	2742      	movs	r7, #66	; 0x42
    490a:	6922      	ldr	r2, [r4, #16]
    490c:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4910:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4914:	3301      	adds	r3, #1
    4916:	e9c5 6601 	strd	r6, r6, [r5, #4]
    491a:	4620      	mov	r0, r4
    491c:	6163      	str	r3, [r4, #20]
    491e:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    4922:	f7ff f87b 	bl	3a1c <d_number>
    4926:	60e8      	str	r0, [r5, #12]
    4928:	68e3      	ldr	r3, [r4, #12]
    492a:	781a      	ldrb	r2, [r3, #0]
    492c:	2a5f      	cmp	r2, #95	; 0x5f
    492e:	f47f ad33 	bne.w	4398 <d_type+0xe8>
    4932:	3301      	adds	r3, #1
    4934:	60e3      	str	r3, [r4, #12]
    4936:	4620      	mov	r0, r4
    4938:	f7ff fcba 	bl	42b0 <d_type>
    493c:	462a      	mov	r2, r5
    493e:	4603      	mov	r3, r0
    4940:	212d      	movs	r1, #45	; 0x2d
    4942:	4620      	mov	r0, r4
    4944:	f7ff f820 	bl	3988 <d_make_comp>
    4948:	4605      	mov	r5, r0
    494a:	9001      	str	r0, [sp, #4]
    494c:	e57f      	b.n	444e <d_type+0x19e>
    494e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4952:	4293      	cmp	r3, r2
    4954:	f280 80ba 	bge.w	4acc <d_type+0x81c>
    4958:	2000      	movs	r0, #0
    495a:	2727      	movs	r7, #39	; 0x27
    495c:	6922      	ldr	r2, [r4, #16]
    495e:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4962:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4966:	3301      	adds	r3, #1
    4968:	e9c5 0001 	strd	r0, r0, [r5, #4]
    496c:	6163      	str	r3, [r4, #20]
    496e:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    4972:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4974:	4e5f      	ldr	r6, [pc, #380]	; (4af4 <d_type+0x844>)
    4976:	3307      	adds	r3, #7
    4978:	60ee      	str	r6, [r5, #12]
    497a:	62e3      	str	r3, [r4, #44]	; 0x2c
    497c:	e50d      	b.n	439a <d_type+0xea>
    497e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4982:	4293      	cmp	r3, r2
    4984:	f280 80a2 	bge.w	4acc <d_type+0x81c>
    4988:	2000      	movs	r0, #0
    498a:	2727      	movs	r7, #39	; 0x27
    498c:	6922      	ldr	r2, [r4, #16]
    498e:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4992:	4e59      	ldr	r6, [pc, #356]	; (4af8 <d_type+0x848>)
    4994:	3301      	adds	r3, #1
    4996:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    499a:	e9c5 0001 	strd	r0, r0, [r5, #4]
    499e:	6163      	str	r3, [r4, #20]
    49a0:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    49a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    49a6:	60ee      	str	r6, [r5, #12]
    49a8:	3308      	adds	r3, #8
    49aa:	62e3      	str	r3, [r4, #44]	; 0x2c
    49ac:	e4f5      	b.n	439a <d_type+0xea>
    49ae:	4620      	mov	r0, r4
    49b0:	f7ff fc7e 	bl	42b0 <d_type>
    49b4:	2300      	movs	r3, #0
    49b6:	4602      	mov	r2, r0
    49b8:	214b      	movs	r1, #75	; 0x4b
    49ba:	4620      	mov	r0, r4
    49bc:	f7fe ffe4 	bl	3988 <d_make_comp>
    49c0:	4605      	mov	r5, r0
    49c2:	9001      	str	r0, [sp, #4]
    49c4:	e543      	b.n	444e <d_type+0x19e>
    49c6:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    49ca:	4293      	cmp	r3, r2
    49cc:	da7e      	bge.n	4acc <d_type+0x81c>
    49ce:	2000      	movs	r0, #0
    49d0:	2727      	movs	r7, #39	; 0x27
    49d2:	6922      	ldr	r2, [r4, #16]
    49d4:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    49d8:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    49dc:	3301      	adds	r3, #1
    49de:	e9c5 0001 	strd	r0, r0, [r5, #4]
    49e2:	6163      	str	r3, [r4, #20]
    49e4:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    49e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    49ea:	4e44      	ldr	r6, [pc, #272]	; (4afc <d_type+0x84c>)
    49ec:	3311      	adds	r3, #17
    49ee:	60ee      	str	r6, [r5, #12]
    49f0:	62e3      	str	r3, [r4, #44]	; 0x2c
    49f2:	e4d2      	b.n	439a <d_type+0xea>
    49f4:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    49f8:	4293      	cmp	r3, r2
    49fa:	da67      	bge.n	4acc <d_type+0x81c>
    49fc:	6922      	ldr	r2, [r4, #16]
    49fe:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4a02:	2000      	movs	r0, #0
    4a04:	2727      	movs	r7, #39	; 0x27
    4a06:	4e3e      	ldr	r6, [pc, #248]	; (4b00 <d_type+0x850>)
    4a08:	3301      	adds	r3, #1
    4a0a:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4a0e:	e7c4      	b.n	499a <d_type+0x6ea>
    4a10:	2600      	movs	r6, #0
    4a12:	e691      	b.n	4738 <d_type+0x488>
    4a14:	3301      	adds	r3, #1
    4a16:	60e3      	str	r3, [r4, #12]
    4a18:	4620      	mov	r0, r4
    4a1a:	f001 fbd7 	bl	61cc <d_template_args_1>
    4a1e:	462a      	mov	r2, r5
    4a20:	4603      	mov	r3, r0
    4a22:	2104      	movs	r1, #4
    4a24:	4620      	mov	r0, r4
    4a26:	f7fe ffaf 	bl	3988 <d_make_comp>
    4a2a:	9001      	str	r0, [sp, #4]
    4a2c:	e539      	b.n	44a2 <d_type+0x1f2>
    4a2e:	2301      	movs	r3, #1
    4a30:	6b25      	ldr	r5, [r4, #48]	; 0x30
    4a32:	4620      	mov	r0, r4
    4a34:	6323      	str	r3, [r4, #48]	; 0x30
    4a36:	f001 f897 	bl	5b68 <d_expression_1>
    4a3a:	6325      	str	r5, [r4, #48]	; 0x30
    4a3c:	4606      	mov	r6, r0
    4a3e:	2800      	cmp	r0, #0
    4a40:	f43f acaa 	beq.w	4398 <d_type+0xe8>
    4a44:	68e1      	ldr	r1, [r4, #12]
    4a46:	780b      	ldrb	r3, [r1, #0]
    4a48:	e673      	b.n	4732 <d_type+0x482>
    4a4a:	4620      	mov	r0, r4
    4a4c:	f000 fb0e 	bl	506c <d_name>
    4a50:	4605      	mov	r5, r0
    4a52:	9001      	str	r0, [sp, #4]
    4a54:	2800      	cmp	r0, #0
    4a56:	f43f ac9f 	beq.w	4398 <d_type+0xe8>
    4a5a:	7803      	ldrb	r3, [r0, #0]
    4a5c:	2b18      	cmp	r3, #24
    4a5e:	f47f acf8 	bne.w	4452 <d_type+0x1a2>
    4a62:	e49a      	b.n	439a <d_type+0xea>
    4a64:	1c73      	adds	r3, r6, #1
    4a66:	60e3      	str	r3, [r4, #12]
    4a68:	4620      	mov	r0, r4
    4a6a:	f8d4 9014 	ldr.w	r9, [r4, #20]
    4a6e:	f8d4 8020 	ldr.w	r8, [r4, #32]
    4a72:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    4a74:	f001 fbaa 	bl	61cc <d_template_args_1>
    4a78:	68e3      	ldr	r3, [r4, #12]
    4a7a:	781b      	ldrb	r3, [r3, #0]
    4a7c:	2b49      	cmp	r3, #73	; 0x49
    4a7e:	d007      	beq.n	4a90 <d_type+0x7e0>
    4a80:	9d01      	ldr	r5, [sp, #4]
    4a82:	60e6      	str	r6, [r4, #12]
    4a84:	f8c4 9014 	str.w	r9, [r4, #20]
    4a88:	f8c4 8020 	str.w	r8, [r4, #32]
    4a8c:	62e7      	str	r7, [r4, #44]	; 0x2c
    4a8e:	e4de      	b.n	444e <d_type+0x19e>
    4a90:	9a01      	ldr	r2, [sp, #4]
    4a92:	2a00      	cmp	r2, #0
    4a94:	f43f ac80 	beq.w	4398 <d_type+0xe8>
    4a98:	e9d4 1308 	ldrd	r1, r3, [r4, #32]
    4a9c:	4299      	cmp	r1, r3
    4a9e:	f6bf ac7b 	bge.w	4398 <d_type+0xe8>
    4aa2:	69e5      	ldr	r5, [r4, #28]
    4aa4:	4603      	mov	r3, r0
    4aa6:	f845 2021 	str.w	r2, [r5, r1, lsl #2]
    4aaa:	3101      	adds	r1, #1
    4aac:	6221      	str	r1, [r4, #32]
    4aae:	e547      	b.n	4540 <d_type+0x290>
    4ab0:	2301      	movs	r3, #1
    4ab2:	3203      	adds	r2, #3
    4ab4:	6b25      	ldr	r5, [r4, #48]	; 0x30
    4ab6:	4620      	mov	r0, r4
    4ab8:	60e2      	str	r2, [r4, #12]
    4aba:	6323      	str	r3, [r4, #48]	; 0x30
    4abc:	f001 f854 	bl	5b68 <d_expression_1>
    4ac0:	6325      	str	r5, [r4, #48]	; 0x30
    4ac2:	4605      	mov	r5, r0
    4ac4:	2800      	cmp	r0, #0
    4ac6:	f47f af2f 	bne.w	4928 <d_type+0x678>
    4aca:	e465      	b.n	4398 <d_type+0xe8>
    4acc:	2300      	movs	r3, #0
    4ace:	9301      	str	r3, [sp, #4]
    4ad0:	68db      	ldr	r3, [r3, #12]
    4ad2:	deff      	udf	#255	; 0xff
    4ad4:	2300      	movs	r3, #0
    4ad6:	701b      	strb	r3, [r3, #0]
    4ad8:	deff      	udf	#255	; 0xff
    4ada:	bf00      	nop
    4adc:	00019144 	.word	0x00019144
    4ae0:	0001913c 	.word	0x0001913c
    4ae4:	00019cb8 	.word	0x00019cb8
    4ae8:	00019c7c 	.word	0x00019c7c
    4aec:	00019ca4 	.word	0x00019ca4
    4af0:	00019c90 	.word	0x00019c90
    4af4:	00019ccc 	.word	0x00019ccc
    4af8:	00019ce0 	.word	0x00019ce0
    4afc:	00019d08 	.word	0x00019d08
    4b00:	00019cf4 	.word	0x00019cf4

00004b04 <d_operator_name>:
    4b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4b06:	68c3      	ldr	r3, [r0, #12]
    4b08:	4606      	mov	r6, r0
    4b0a:	781f      	ldrb	r7, [r3, #0]
    4b0c:	bb77      	cbnz	r7, 4b6c <d_operator_name+0x68>
    4b0e:	f04f 0e00 	mov.w	lr, #0
    4b12:	2145      	movs	r1, #69	; 0x45
    4b14:	2200      	movs	r2, #0
    4b16:	4d3c      	ldr	r5, [pc, #240]	; (4c08 <d_operator_name+0x104>)
    4b18:	1a8b      	subs	r3, r1, r2
    4b1a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
    4b1e:	eb02 0363 	add.w	r3, r2, r3, asr #1
    4b22:	0118      	lsls	r0, r3, #4
    4b24:	582c      	ldr	r4, [r5, r0]
    4b26:	eb05 1c03 	add.w	ip, r5, r3, lsl #4
    4b2a:	7820      	ldrb	r0, [r4, #0]
    4b2c:	42b8      	cmp	r0, r7
    4b2e:	d006      	beq.n	4b3e <d_operator_name+0x3a>
    4b30:	bf8c      	ite	hi
    4b32:	4619      	movhi	r1, r3
    4b34:	1c5a      	addls	r2, r3, #1
    4b36:	428a      	cmp	r2, r1
    4b38:	d1ee      	bne.n	4b18 <d_operator_name+0x14>
    4b3a:	2000      	movs	r0, #0
    4b3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4b3e:	7860      	ldrb	r0, [r4, #1]
    4b40:	4570      	cmp	r0, lr
    4b42:	d1f5      	bne.n	4b30 <d_operator_name+0x2c>
    4b44:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
    4b48:	4293      	cmp	r3, r2
    4b4a:	daf6      	bge.n	4b3a <d_operator_name+0x36>
    4b4c:	2400      	movs	r4, #0
    4b4e:	2532      	movs	r5, #50	; 0x32
    4b50:	6932      	ldr	r2, [r6, #16]
    4b52:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4b56:	eb02 0081 	add.w	r0, r2, r1, lsl #2
    4b5a:	3301      	adds	r3, #1
    4b5c:	e9c0 4401 	strd	r4, r4, [r0, #4]
    4b60:	6173      	str	r3, [r6, #20]
    4b62:	f802 5021 	strb.w	r5, [r2, r1, lsl #2]
    4b66:	f8c0 c00c 	str.w	ip, [r0, #12]
    4b6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4b6c:	1c5a      	adds	r2, r3, #1
    4b6e:	60c2      	str	r2, [r0, #12]
    4b70:	f893 e001 	ldrb.w	lr, [r3, #1]
    4b74:	781f      	ldrb	r7, [r3, #0]
    4b76:	f1be 0f00 	cmp.w	lr, #0
    4b7a:	d102      	bne.n	4b82 <d_operator_name+0x7e>
    4b7c:	2f76      	cmp	r7, #118	; 0x76
    4b7e:	d0c8      	beq.n	4b12 <d_operator_name+0xe>
    4b80:	e7c5      	b.n	4b0e <d_operator_name+0xa>
    4b82:	1c9a      	adds	r2, r3, #2
    4b84:	60c2      	str	r2, [r0, #12]
    4b86:	2f76      	cmp	r7, #118	; 0x76
    4b88:	f893 e001 	ldrb.w	lr, [r3, #1]
    4b8c:	d11f      	bne.n	4bce <d_operator_name+0xca>
    4b8e:	f1ae 0430 	sub.w	r4, lr, #48	; 0x30
    4b92:	b2e3      	uxtb	r3, r4
    4b94:	2b09      	cmp	r3, #9
    4b96:	d8bc      	bhi.n	4b12 <d_operator_name+0xe>
    4b98:	f7ff f9da 	bl	3f50 <d_source_name>
    4b9c:	e9d6 3105 	ldrd	r3, r1, [r6, #20]
    4ba0:	428b      	cmp	r3, r1
    4ba2:	4602      	mov	r2, r0
    4ba4:	dac9      	bge.n	4b3a <d_operator_name+0x36>
    4ba6:	2100      	movs	r1, #0
    4ba8:	6935      	ldr	r5, [r6, #16]
    4baa:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4bae:	0087      	lsls	r7, r0, #2
    4bb0:	3301      	adds	r3, #1
    4bb2:	eb05 0080 	add.w	r0, r5, r0, lsl #2
    4bb6:	e9c0 1101 	strd	r1, r1, [r0, #4]
    4bba:	6173      	str	r3, [r6, #20]
    4bbc:	2a00      	cmp	r2, #0
    4bbe:	d0bc      	beq.n	4b3a <d_operator_name+0x36>
    4bc0:	2333      	movs	r3, #51	; 0x33
    4bc2:	e9c0 1101 	strd	r1, r1, [r0, #4]
    4bc6:	55eb      	strb	r3, [r5, r7]
    4bc8:	e9c0 4203 	strd	r4, r2, [r0, #12]
    4bcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4bce:	2f63      	cmp	r7, #99	; 0x63
    4bd0:	d19f      	bne.n	4b12 <d_operator_name+0xe>
    4bd2:	f1be 0f76 	cmp.w	lr, #118	; 0x76
    4bd6:	d19c      	bne.n	4b12 <d_operator_name+0xe>
    4bd8:	e9d0 340c 	ldrd	r3, r4, [r0, #48]	; 0x30
    4bdc:	fab3 f383 	clz	r3, r3
    4be0:	095b      	lsrs	r3, r3, #5
    4be2:	6343      	str	r3, [r0, #52]	; 0x34
    4be4:	f7ff fb64 	bl	42b0 <d_type>
    4be8:	6b73      	ldr	r3, [r6, #52]	; 0x34
    4bea:	4602      	mov	r2, r0
    4bec:	b133      	cbz	r3, 4bfc <d_operator_name+0xf8>
    4bee:	2300      	movs	r3, #0
    4bf0:	2135      	movs	r1, #53	; 0x35
    4bf2:	4630      	mov	r0, r6
    4bf4:	f7fe fec8 	bl	3988 <d_make_comp>
    4bf8:	6374      	str	r4, [r6, #52]	; 0x34
    4bfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4bfc:	2134      	movs	r1, #52	; 0x34
    4bfe:	4630      	mov	r0, r6
    4c00:	f7fe fec2 	bl	3988 <d_make_comp>
    4c04:	e7f8      	b.n	4bf8 <d_operator_name+0xf4>
    4c06:	bf00      	nop
    4c08:	00019d1c 	.word	0x00019d1c

00004c0c <d_parmlist>:
    4c0c:	2300      	movs	r3, #0
    4c0e:	b530      	push	{r4, r5, lr}
    4c10:	68c2      	ldr	r2, [r0, #12]
    4c12:	b083      	sub	sp, #12
    4c14:	9301      	str	r3, [sp, #4]
    4c16:	7813      	ldrb	r3, [r2, #0]
    4c18:	b323      	cbz	r3, 4c64 <d_parmlist+0x58>
    4c1a:	4604      	mov	r4, r0
    4c1c:	ad01      	add	r5, sp, #4
    4c1e:	e012      	b.n	4c46 <d_parmlist+0x3a>
    4c20:	2b4f      	cmp	r3, #79	; 0x4f
    4c22:	d016      	beq.n	4c52 <d_parmlist+0x46>
    4c24:	4620      	mov	r0, r4
    4c26:	f7ff fb43 	bl	42b0 <d_type>
    4c2a:	4602      	mov	r2, r0
    4c2c:	b1d0      	cbz	r0, 4c64 <d_parmlist+0x58>
    4c2e:	2300      	movs	r3, #0
    4c30:	212e      	movs	r1, #46	; 0x2e
    4c32:	4620      	mov	r0, r4
    4c34:	f7fe fea8 	bl	3988 <d_make_comp>
    4c38:	6028      	str	r0, [r5, #0]
    4c3a:	b198      	cbz	r0, 4c64 <d_parmlist+0x58>
    4c3c:	68e2      	ldr	r2, [r4, #12]
    4c3e:	f100 0510 	add.w	r5, r0, #16
    4c42:	7813      	ldrb	r3, [r2, #0]
    4c44:	b143      	cbz	r3, 4c58 <d_parmlist+0x4c>
    4c46:	2b45      	cmp	r3, #69	; 0x45
    4c48:	d006      	beq.n	4c58 <d_parmlist+0x4c>
    4c4a:	2b2e      	cmp	r3, #46	; 0x2e
    4c4c:	d004      	beq.n	4c58 <d_parmlist+0x4c>
    4c4e:	2b52      	cmp	r3, #82	; 0x52
    4c50:	d1e6      	bne.n	4c20 <d_parmlist+0x14>
    4c52:	7853      	ldrb	r3, [r2, #1]
    4c54:	2b45      	cmp	r3, #69	; 0x45
    4c56:	d1e5      	bne.n	4c24 <d_parmlist+0x18>
    4c58:	9801      	ldr	r0, [sp, #4]
    4c5a:	b118      	cbz	r0, 4c64 <d_parmlist+0x58>
    4c5c:	6903      	ldr	r3, [r0, #16]
    4c5e:	b123      	cbz	r3, 4c6a <d_parmlist+0x5e>
    4c60:	b003      	add	sp, #12
    4c62:	bd30      	pop	{r4, r5, pc}
    4c64:	2000      	movs	r0, #0
    4c66:	b003      	add	sp, #12
    4c68:	bd30      	pop	{r4, r5, pc}
    4c6a:	68c2      	ldr	r2, [r0, #12]
    4c6c:	7811      	ldrb	r1, [r2, #0]
    4c6e:	2927      	cmp	r1, #39	; 0x27
    4c70:	d1f6      	bne.n	4c60 <d_parmlist+0x54>
    4c72:	68d2      	ldr	r2, [r2, #12]
    4c74:	7c11      	ldrb	r1, [r2, #16]
    4c76:	2909      	cmp	r1, #9
    4c78:	d1f2      	bne.n	4c60 <d_parmlist+0x54>
    4c7a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    4c7c:	6852      	ldr	r2, [r2, #4]
    4c7e:	1a89      	subs	r1, r1, r2
    4c80:	62e1      	str	r1, [r4, #44]	; 0x2c
    4c82:	60c3      	str	r3, [r0, #12]
    4c84:	e7ec      	b.n	4c60 <d_parmlist+0x54>
    4c86:	bf00      	nop

00004c88 <d_bare_function_type>:
    4c88:	b570      	push	{r4, r5, r6, lr}
    4c8a:	68c3      	ldr	r3, [r0, #12]
    4c8c:	4605      	mov	r5, r0
    4c8e:	781a      	ldrb	r2, [r3, #0]
    4c90:	2a4a      	cmp	r2, #74	; 0x4a
    4c92:	d01a      	beq.n	4cca <d_bare_function_type+0x42>
    4c94:	b181      	cbz	r1, 4cb8 <d_bare_function_type+0x30>
    4c96:	4628      	mov	r0, r5
    4c98:	f7ff fb0a 	bl	42b0 <d_type>
    4c9c:	4604      	mov	r4, r0
    4c9e:	b190      	cbz	r0, 4cc6 <d_bare_function_type+0x3e>
    4ca0:	4628      	mov	r0, r5
    4ca2:	f7ff ffb3 	bl	4c0c <d_parmlist>
    4ca6:	4603      	mov	r3, r0
    4ca8:	b168      	cbz	r0, 4cc6 <d_bare_function_type+0x3e>
    4caa:	4622      	mov	r2, r4
    4cac:	4628      	mov	r0, r5
    4cae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    4cb2:	2129      	movs	r1, #41	; 0x29
    4cb4:	f7fe be68 	b.w	3988 <d_make_comp>
    4cb8:	4628      	mov	r0, r5
    4cba:	460c      	mov	r4, r1
    4cbc:	f7ff ffa6 	bl	4c0c <d_parmlist>
    4cc0:	4603      	mov	r3, r0
    4cc2:	2800      	cmp	r0, #0
    4cc4:	d1f1      	bne.n	4caa <d_bare_function_type+0x22>
    4cc6:	2000      	movs	r0, #0
    4cc8:	bd70      	pop	{r4, r5, r6, pc}
    4cca:	3301      	adds	r3, #1
    4ccc:	60c3      	str	r3, [r0, #12]
    4cce:	e7e2      	b.n	4c96 <d_bare_function_type+0xe>

00004cd0 <d_function_type>:
    4cd0:	b510      	push	{r4, lr}
    4cd2:	4604      	mov	r4, r0
    4cd4:	6880      	ldr	r0, [r0, #8]
    4cd6:	f410 2080 	ands.w	r0, r0, #262144	; 0x40000
    4cda:	d10b      	bne.n	4cf4 <d_function_type+0x24>
    4cdc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    4cde:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    4ce2:	d806      	bhi.n	4cf2 <d_function_type+0x22>
    4ce4:	1c51      	adds	r1, r2, #1
    4ce6:	68e3      	ldr	r3, [r4, #12]
    4ce8:	63a1      	str	r1, [r4, #56]	; 0x38
    4cea:	7819      	ldrb	r1, [r3, #0]
    4cec:	2946      	cmp	r1, #70	; 0x46
    4cee:	d007      	beq.n	4d00 <d_function_type+0x30>
    4cf0:	63a2      	str	r2, [r4, #56]	; 0x38
    4cf2:	bd10      	pop	{r4, pc}
    4cf4:	68e3      	ldr	r3, [r4, #12]
    4cf6:	781a      	ldrb	r2, [r3, #0]
    4cf8:	2a46      	cmp	r2, #70	; 0x46
    4cfa:	d001      	beq.n	4d00 <d_function_type+0x30>
    4cfc:	2000      	movs	r0, #0
    4cfe:	bd10      	pop	{r4, pc}
    4d00:	1c5a      	adds	r2, r3, #1
    4d02:	60e2      	str	r2, [r4, #12]
    4d04:	785a      	ldrb	r2, [r3, #1]
    4d06:	2101      	movs	r1, #1
    4d08:	2a59      	cmp	r2, #89	; 0x59
    4d0a:	bf04      	itt	eq
    4d0c:	3302      	addeq	r3, #2
    4d0e:	60e3      	streq	r3, [r4, #12]
    4d10:	4620      	mov	r0, r4
    4d12:	f7ff ffb9 	bl	4c88 <d_bare_function_type>
    4d16:	4601      	mov	r1, r0
    4d18:	4620      	mov	r0, r4
    4d1a:	f7fe fee1 	bl	3ae0 <d_ref_qualifier>
    4d1e:	68e3      	ldr	r3, [r4, #12]
    4d20:	781a      	ldrb	r2, [r3, #0]
    4d22:	2a45      	cmp	r2, #69	; 0x45
    4d24:	bf04      	itt	eq
    4d26:	3301      	addeq	r3, #1
    4d28:	60e3      	streq	r3, [r4, #12]
    4d2a:	68a3      	ldr	r3, [r4, #8]
    4d2c:	bf18      	it	ne
    4d2e:	2000      	movne	r0, #0
    4d30:	035b      	lsls	r3, r3, #13
    4d32:	d4de      	bmi.n	4cf2 <d_function_type+0x22>
    4d34:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    4d36:	3a01      	subs	r2, #1
    4d38:	e7da      	b.n	4cf0 <d_function_type+0x20>
    4d3a:	bf00      	nop

00004d3c <d_unqualified_name>:
    4d3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4d3e:	68c3      	ldr	r3, [r0, #12]
    4d40:	4604      	mov	r4, r0
    4d42:	781a      	ldrb	r2, [r3, #0]
    4d44:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
    4d48:	2909      	cmp	r1, #9
    4d4a:	d961      	bls.n	4e10 <d_unqualified_name+0xd4>
    4d4c:	f1a2 0161 	sub.w	r1, r2, #97	; 0x61
    4d50:	2919      	cmp	r1, #25
    4d52:	d814      	bhi.n	4d7e <d_unqualified_name+0x42>
    4d54:	2a6f      	cmp	r2, #111	; 0x6f
    4d56:	d104      	bne.n	4d62 <d_unqualified_name+0x26>
    4d58:	785a      	ldrb	r2, [r3, #1]
    4d5a:	2a6e      	cmp	r2, #110	; 0x6e
    4d5c:	bf04      	itt	eq
    4d5e:	3302      	addeq	r3, #2
    4d60:	60c3      	streq	r3, [r0, #12]
    4d62:	4620      	mov	r0, r4
    4d64:	f7ff fece 	bl	4b04 <d_operator_name>
    4d68:	4605      	mov	r5, r0
    4d6a:	b110      	cbz	r0, 4d72 <d_unqualified_name+0x36>
    4d6c:	7803      	ldrb	r3, [r0, #0]
    4d6e:	2b32      	cmp	r3, #50	; 0x32
    4d70:	d069      	beq.n	4e46 <d_unqualified_name+0x10a>
    4d72:	68e3      	ldr	r3, [r4, #12]
    4d74:	7819      	ldrb	r1, [r3, #0]
    4d76:	2942      	cmp	r1, #66	; 0x42
    4d78:	d051      	beq.n	4e1e <d_unqualified_name+0xe2>
    4d7a:	4628      	mov	r0, r5
    4d7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4d7e:	f1a2 0143 	sub.w	r1, r2, #67	; 0x43
    4d82:	2901      	cmp	r1, #1
    4d84:	f240 808b 	bls.w	4e9e <d_unqualified_name+0x162>
    4d88:	2a4c      	cmp	r2, #76	; 0x4c
    4d8a:	d079      	beq.n	4e80 <d_unqualified_name+0x144>
    4d8c:	2a55      	cmp	r2, #85	; 0x55
    4d8e:	f040 8083 	bne.w	4e98 <d_unqualified_name+0x15c>
    4d92:	785a      	ldrb	r2, [r3, #1]
    4d94:	2a6c      	cmp	r2, #108	; 0x6c
    4d96:	f000 80d5 	beq.w	4f44 <d_unqualified_name+0x208>
    4d9a:	2a74      	cmp	r2, #116	; 0x74
    4d9c:	d17c      	bne.n	4e98 <d_unqualified_name+0x15c>
    4d9e:	1c5a      	adds	r2, r3, #1
    4da0:	60c2      	str	r2, [r0, #12]
    4da2:	7859      	ldrb	r1, [r3, #1]
    4da4:	2974      	cmp	r1, #116	; 0x74
    4da6:	f040 8098 	bne.w	4eda <d_unqualified_name+0x19e>
    4daa:	1c9a      	adds	r2, r3, #2
    4dac:	60c2      	str	r2, [r0, #12]
    4dae:	789a      	ldrb	r2, [r3, #2]
    4db0:	2a5f      	cmp	r2, #95	; 0x5f
    4db2:	f000 8147 	beq.w	5044 <d_unqualified_name+0x308>
    4db6:	2a6e      	cmp	r2, #110	; 0x6e
    4db8:	d06e      	beq.n	4e98 <d_unqualified_name+0x15c>
    4dba:	f7fe fe2f 	bl	3a1c <d_number>
    4dbe:	1c46      	adds	r6, r0, #1
    4dc0:	68e3      	ldr	r3, [r4, #12]
    4dc2:	f100 8128 	bmi.w	5016 <d_unqualified_name+0x2da>
    4dc6:	7819      	ldrb	r1, [r3, #0]
    4dc8:	295f      	cmp	r1, #95	; 0x5f
    4dca:	d177      	bne.n	4ebc <d_unqualified_name+0x180>
    4dcc:	3301      	adds	r3, #1
    4dce:	60e3      	str	r3, [r4, #12]
    4dd0:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4dd4:	4293      	cmp	r3, r2
    4dd6:	f280 811d 	bge.w	5014 <d_unqualified_name+0x2d8>
    4dda:	2100      	movs	r1, #0
    4ddc:	2748      	movs	r7, #72	; 0x48
    4dde:	6922      	ldr	r2, [r4, #16]
    4de0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4de4:	eb02 0580 	add.w	r5, r2, r0, lsl #2
    4de8:	3301      	adds	r3, #1
    4dea:	e9c5 1101 	strd	r1, r1, [r5, #4]
    4dee:	6163      	str	r3, [r4, #20]
    4df0:	f802 7020 	strb.w	r7, [r2, r0, lsl #2]
    4df4:	6a22      	ldr	r2, [r4, #32]
    4df6:	6a63      	ldr	r3, [r4, #36]	; 0x24
    4df8:	60ee      	str	r6, [r5, #12]
    4dfa:	429a      	cmp	r2, r3
    4dfc:	f280 8126 	bge.w	504c <d_unqualified_name+0x310>
    4e00:	69e0      	ldr	r0, [r4, #28]
    4e02:	68e3      	ldr	r3, [r4, #12]
    4e04:	1c51      	adds	r1, r2, #1
    4e06:	f840 5022 	str.w	r5, [r0, r2, lsl #2]
    4e0a:	6221      	str	r1, [r4, #32]
    4e0c:	7819      	ldrb	r1, [r3, #0]
    4e0e:	e7b2      	b.n	4d76 <d_unqualified_name+0x3a>
    4e10:	f7ff f89e 	bl	3f50 <d_source_name>
    4e14:	68e3      	ldr	r3, [r4, #12]
    4e16:	4605      	mov	r5, r0
    4e18:	7819      	ldrb	r1, [r3, #0]
    4e1a:	2942      	cmp	r1, #66	; 0x42
    4e1c:	d1ad      	bne.n	4d7a <d_unqualified_name+0x3e>
    4e1e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    4e20:	3301      	adds	r3, #1
    4e22:	60e3      	str	r3, [r4, #12]
    4e24:	4620      	mov	r0, r4
    4e26:	f7ff f893 	bl	3f50 <d_source_name>
    4e2a:	462a      	mov	r2, r5
    4e2c:	4603      	mov	r3, r0
    4e2e:	214c      	movs	r1, #76	; 0x4c
    4e30:	4620      	mov	r0, r4
    4e32:	f7fe fda9 	bl	3988 <d_make_comp>
    4e36:	68e3      	ldr	r3, [r4, #12]
    4e38:	4605      	mov	r5, r0
    4e3a:	7819      	ldrb	r1, [r3, #0]
    4e3c:	2942      	cmp	r1, #66	; 0x42
    4e3e:	d0ef      	beq.n	4e20 <d_unqualified_name+0xe4>
    4e40:	4628      	mov	r0, r5
    4e42:	62a6      	str	r6, [r4, #40]	; 0x28
    4e44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4e46:	68c2      	ldr	r2, [r0, #12]
    4e48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4e4a:	6891      	ldr	r1, [r2, #8]
    4e4c:	3307      	adds	r3, #7
    4e4e:	6812      	ldr	r2, [r2, #0]
    4e50:	440b      	add	r3, r1
    4e52:	62e3      	str	r3, [r4, #44]	; 0x2c
    4e54:	7813      	ldrb	r3, [r2, #0]
    4e56:	2b6c      	cmp	r3, #108	; 0x6c
    4e58:	d18b      	bne.n	4d72 <d_unqualified_name+0x36>
    4e5a:	7853      	ldrb	r3, [r2, #1]
    4e5c:	2b69      	cmp	r3, #105	; 0x69
    4e5e:	d188      	bne.n	4d72 <d_unqualified_name+0x36>
    4e60:	7893      	ldrb	r3, [r2, #2]
    4e62:	2b00      	cmp	r3, #0
    4e64:	d185      	bne.n	4d72 <d_unqualified_name+0x36>
    4e66:	4620      	mov	r0, r4
    4e68:	f7ff f872 	bl	3f50 <d_source_name>
    4e6c:	462a      	mov	r2, r5
    4e6e:	4603      	mov	r3, r0
    4e70:	2137      	movs	r1, #55	; 0x37
    4e72:	4620      	mov	r0, r4
    4e74:	f7fe fd88 	bl	3988 <d_make_comp>
    4e78:	68e3      	ldr	r3, [r4, #12]
    4e7a:	4605      	mov	r5, r0
    4e7c:	7819      	ldrb	r1, [r3, #0]
    4e7e:	e77a      	b.n	4d76 <d_unqualified_name+0x3a>
    4e80:	3301      	adds	r3, #1
    4e82:	60c3      	str	r3, [r0, #12]
    4e84:	f7ff f864 	bl	3f50 <d_source_name>
    4e88:	4605      	mov	r5, r0
    4e8a:	b128      	cbz	r0, 4e98 <d_unqualified_name+0x15c>
    4e8c:	4620      	mov	r0, r4
    4e8e:	f7fe feab 	bl	3be8 <d_discriminator>
    4e92:	2800      	cmp	r0, #0
    4e94:	f47f af6d 	bne.w	4d72 <d_unqualified_name+0x36>
    4e98:	2500      	movs	r5, #0
    4e9a:	4628      	mov	r0, r5
    4e9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4e9e:	6a86      	ldr	r6, [r0, #40]	; 0x28
    4ea0:	b186      	cbz	r6, 4ec4 <d_unqualified_name+0x188>
    4ea2:	7831      	ldrb	r1, [r6, #0]
    4ea4:	b961      	cbnz	r1, 4ec0 <d_unqualified_name+0x184>
    4ea6:	6931      	ldr	r1, [r6, #16]
    4ea8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    4eaa:	440a      	add	r2, r1
    4eac:	62e2      	str	r2, [r4, #44]	; 0x2c
    4eae:	7819      	ldrb	r1, [r3, #0]
    4eb0:	2943      	cmp	r1, #67	; 0x43
    4eb2:	460a      	mov	r2, r1
    4eb4:	f000 8087 	beq.w	4fc6 <d_unqualified_name+0x28a>
    4eb8:	2944      	cmp	r1, #68	; 0x44
    4eba:	d005      	beq.n	4ec8 <d_unqualified_name+0x18c>
    4ebc:	2500      	movs	r5, #0
    4ebe:	e75a      	b.n	4d76 <d_unqualified_name+0x3a>
    4ec0:	2918      	cmp	r1, #24
    4ec2:	d0f0      	beq.n	4ea6 <d_unqualified_name+0x16a>
    4ec4:	2a43      	cmp	r2, #67	; 0x43
    4ec6:	d07e      	beq.n	4fc6 <d_unqualified_name+0x28a>
    4ec8:	7859      	ldrb	r1, [r3, #1]
    4eca:	3930      	subs	r1, #48	; 0x30
    4ecc:	2905      	cmp	r1, #5
    4ece:	d836      	bhi.n	4f3e <d_unqualified_name+0x202>
    4ed0:	e8df f001 	tbb	[pc, r1]
    4ed4:	35292c06 	.word	0x35292c06
    4ed8:	2f32      	.short	0x2f32
    4eda:	4613      	mov	r3, r2
    4edc:	2500      	movs	r5, #0
    4ede:	e74a      	b.n	4d76 <d_unqualified_name+0x3a>
    4ee0:	f04f 0e01 	mov.w	lr, #1
    4ee4:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
    4ee8:	f103 0c02 	add.w	ip, r3, #2
    4eec:	428a      	cmp	r2, r1
    4eee:	f8c4 c00c 	str.w	ip, [r4, #12]
    4ef2:	f280 80a3 	bge.w	503c <d_unqualified_name+0x300>
    4ef6:	2000      	movs	r0, #0
    4ef8:	6927      	ldr	r7, [r4, #16]
    4efa:	eb02 0182 	add.w	r1, r2, r2, lsl #2
    4efe:	eb07 0581 	add.w	r5, r7, r1, lsl #2
    4f02:	3201      	adds	r2, #1
    4f04:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4f08:	0089      	lsls	r1, r1, #2
    4f0a:	6162      	str	r2, [r4, #20]
    4f0c:	2e00      	cmp	r6, #0
    4f0e:	f000 8095 	beq.w	503c <d_unqualified_name+0x300>
    4f12:	2208      	movs	r2, #8
    4f14:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4f18:	547a      	strb	r2, [r7, r1]
    4f1a:	f885 e00c 	strb.w	lr, [r5, #12]
    4f1e:	612e      	str	r6, [r5, #16]
    4f20:	7899      	ldrb	r1, [r3, #2]
    4f22:	4663      	mov	r3, ip
    4f24:	e727      	b.n	4d76 <d_unqualified_name+0x3a>
    4f26:	f04f 0e03 	mov.w	lr, #3
    4f2a:	e7db      	b.n	4ee4 <d_unqualified_name+0x1a8>
    4f2c:	f04f 0e02 	mov.w	lr, #2
    4f30:	e7d8      	b.n	4ee4 <d_unqualified_name+0x1a8>
    4f32:	f04f 0e05 	mov.w	lr, #5
    4f36:	e7d5      	b.n	4ee4 <d_unqualified_name+0x1a8>
    4f38:	f04f 0e04 	mov.w	lr, #4
    4f3c:	e7d2      	b.n	4ee4 <d_unqualified_name+0x1a8>
    4f3e:	4611      	mov	r1, r2
    4f40:	2500      	movs	r5, #0
    4f42:	e718      	b.n	4d76 <d_unqualified_name+0x3a>
    4f44:	1c5a      	adds	r2, r3, #1
    4f46:	60c2      	str	r2, [r0, #12]
    4f48:	7859      	ldrb	r1, [r3, #1]
    4f4a:	296c      	cmp	r1, #108	; 0x6c
    4f4c:	d1c5      	bne.n	4eda <d_unqualified_name+0x19e>
    4f4e:	3302      	adds	r3, #2
    4f50:	60c3      	str	r3, [r0, #12]
    4f52:	f7ff fe5b 	bl	4c0c <d_parmlist>
    4f56:	68e3      	ldr	r3, [r4, #12]
    4f58:	4606      	mov	r6, r0
    4f5a:	2800      	cmp	r0, #0
    4f5c:	d05b      	beq.n	5016 <d_unqualified_name+0x2da>
    4f5e:	7819      	ldrb	r1, [r3, #0]
    4f60:	2945      	cmp	r1, #69	; 0x45
    4f62:	d1ab      	bne.n	4ebc <d_unqualified_name+0x180>
    4f64:	1c5a      	adds	r2, r3, #1
    4f66:	60e2      	str	r2, [r4, #12]
    4f68:	785a      	ldrb	r2, [r3, #1]
    4f6a:	2a5f      	cmp	r2, #95	; 0x5f
    4f6c:	d076      	beq.n	505c <d_unqualified_name+0x320>
    4f6e:	2a6e      	cmp	r2, #110	; 0x6e
    4f70:	d092      	beq.n	4e98 <d_unqualified_name+0x15c>
    4f72:	4620      	mov	r0, r4
    4f74:	f7fe fd52 	bl	3a1c <d_number>
    4f78:	3001      	adds	r0, #1
    4f7a:	68e3      	ldr	r3, [r4, #12]
    4f7c:	d44b      	bmi.n	5016 <d_unqualified_name+0x2da>
    4f7e:	7819      	ldrb	r1, [r3, #0]
    4f80:	295f      	cmp	r1, #95	; 0x5f
    4f82:	d19b      	bne.n	4ebc <d_unqualified_name+0x180>
    4f84:	3301      	adds	r3, #1
    4f86:	60e3      	str	r3, [r4, #12]
    4f88:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
    4f8c:	428a      	cmp	r2, r1
    4f8e:	da42      	bge.n	5016 <d_unqualified_name+0x2da>
    4f90:	2100      	movs	r1, #0
    4f92:	f04f 0e46 	mov.w	lr, #70	; 0x46
    4f96:	6927      	ldr	r7, [r4, #16]
    4f98:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
    4f9c:	eb07 058c 	add.w	r5, r7, ip, lsl #2
    4fa0:	3201      	adds	r2, #1
    4fa2:	e9c5 1101 	strd	r1, r1, [r5, #4]
    4fa6:	6162      	str	r2, [r4, #20]
    4fa8:	f807 e02c 	strb.w	lr, [r7, ip, lsl #2]
    4fac:	e9c5 6003 	strd	r6, r0, [r5, #12]
    4fb0:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
    4fb4:	4282      	cmp	r2, r0
    4fb6:	da2e      	bge.n	5016 <d_unqualified_name+0x2da>
    4fb8:	69e1      	ldr	r1, [r4, #28]
    4fba:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
    4fbe:	3201      	adds	r2, #1
    4fc0:	6222      	str	r2, [r4, #32]
    4fc2:	7819      	ldrb	r1, [r3, #0]
    4fc4:	e6d7      	b.n	4d76 <d_unqualified_name+0x3a>
    4fc6:	785a      	ldrb	r2, [r3, #1]
    4fc8:	2a49      	cmp	r2, #73	; 0x49
    4fca:	d027      	beq.n	501c <d_unqualified_name+0x2e0>
    4fcc:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
    4fd0:	2904      	cmp	r1, #4
    4fd2:	f63f af61 	bhi.w	4e98 <d_unqualified_name+0x15c>
    4fd6:	3a30      	subs	r2, #48	; 0x30
    4fd8:	3302      	adds	r3, #2
    4fda:	b2d7      	uxtb	r7, r2
    4fdc:	60e3      	str	r3, [r4, #12]
    4fde:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4fe2:	4293      	cmp	r3, r2
    4fe4:	da16      	bge.n	5014 <d_unqualified_name+0x2d8>
    4fe6:	2100      	movs	r1, #0
    4fe8:	6922      	ldr	r2, [r4, #16]
    4fea:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4fee:	eb02 0580 	add.w	r5, r2, r0, lsl #2
    4ff2:	3301      	adds	r3, #1
    4ff4:	e9c5 1101 	strd	r1, r1, [r5, #4]
    4ff8:	ea4f 0c80 	mov.w	ip, r0, lsl #2
    4ffc:	6163      	str	r3, [r4, #20]
    4ffe:	b34e      	cbz	r6, 5054 <d_unqualified_name+0x318>
    5000:	2307      	movs	r3, #7
    5002:	e9c5 1101 	strd	r1, r1, [r5, #4]
    5006:	f802 300c 	strb.w	r3, [r2, ip]
    500a:	68e3      	ldr	r3, [r4, #12]
    500c:	732f      	strb	r7, [r5, #12]
    500e:	612e      	str	r6, [r5, #16]
    5010:	7819      	ldrb	r1, [r3, #0]
    5012:	e6b0      	b.n	4d76 <d_unqualified_name+0x3a>
    5014:	68e3      	ldr	r3, [r4, #12]
    5016:	2500      	movs	r5, #0
    5018:	7819      	ldrb	r1, [r3, #0]
    501a:	e6ac      	b.n	4d76 <d_unqualified_name+0x3a>
    501c:	1c58      	adds	r0, r3, #1
    501e:	60e0      	str	r0, [r4, #12]
    5020:	789a      	ldrb	r2, [r3, #2]
    5022:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
    5026:	2904      	cmp	r1, #4
    5028:	d81c      	bhi.n	5064 <d_unqualified_name+0x328>
    502a:	3303      	adds	r3, #3
    502c:	3a30      	subs	r2, #48	; 0x30
    502e:	4620      	mov	r0, r4
    5030:	60e3      	str	r3, [r4, #12]
    5032:	b2d7      	uxtb	r7, r2
    5034:	f7ff f93c 	bl	42b0 <d_type>
    5038:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    503a:	e7d0      	b.n	4fde <d_unqualified_name+0x2a2>
    503c:	7899      	ldrb	r1, [r3, #2]
    503e:	2500      	movs	r5, #0
    5040:	4663      	mov	r3, ip
    5042:	e698      	b.n	4d76 <d_unqualified_name+0x3a>
    5044:	3303      	adds	r3, #3
    5046:	2600      	movs	r6, #0
    5048:	60c3      	str	r3, [r0, #12]
    504a:	e6c1      	b.n	4dd0 <d_unqualified_name+0x94>
    504c:	68e3      	ldr	r3, [r4, #12]
    504e:	460d      	mov	r5, r1
    5050:	7819      	ldrb	r1, [r3, #0]
    5052:	e690      	b.n	4d76 <d_unqualified_name+0x3a>
    5054:	68e3      	ldr	r3, [r4, #12]
    5056:	4635      	mov	r5, r6
    5058:	7819      	ldrb	r1, [r3, #0]
    505a:	e68c      	b.n	4d76 <d_unqualified_name+0x3a>
    505c:	3302      	adds	r3, #2
    505e:	2000      	movs	r0, #0
    5060:	60e3      	str	r3, [r4, #12]
    5062:	e791      	b.n	4f88 <d_unqualified_name+0x24c>
    5064:	7859      	ldrb	r1, [r3, #1]
    5066:	2500      	movs	r5, #0
    5068:	4603      	mov	r3, r0
    506a:	e684      	b.n	4d76 <d_unqualified_name+0x3a>

0000506c <d_name>:
    506c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    5070:	68c2      	ldr	r2, [r0, #12]
    5072:	4604      	mov	r4, r0
    5074:	7813      	ldrb	r3, [r2, #0]
    5076:	b084      	sub	sp, #16
    5078:	3b4e      	subs	r3, #78	; 0x4e
    507a:	2b0c      	cmp	r3, #12
    507c:	d808      	bhi.n	5090 <d_name+0x24>
    507e:	e8df f003 	tbb	[pc, r3]
    5082:	0731      	.short	0x0731
    5084:	17070707 	.word	0x17070707
    5088:	07071307 	.word	0x07071307
    508c:	0707      	.short	0x0707
    508e:	86          	.byte	0x86
    508f:	00          	.byte	0x00
    5090:	f7ff fe54 	bl	4d3c <d_unqualified_name>
    5094:	68e3      	ldr	r3, [r4, #12]
    5096:	4605      	mov	r5, r0
    5098:	781a      	ldrb	r2, [r3, #0]
    509a:	2a49      	cmp	r2, #73	; 0x49
    509c:	f000 80cb 	beq.w	5236 <d_name+0x1ca>
    50a0:	4628      	mov	r0, r5
    50a2:	b004      	add	sp, #16
    50a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    50a8:	b004      	add	sp, #16
    50aa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    50ae:	e645      	b.n	4d3c <d_unqualified_name>
    50b0:	7853      	ldrb	r3, [r2, #1]
    50b2:	2b74      	cmp	r3, #116	; 0x74
    50b4:	f000 80d1 	beq.w	525a <d_name+0x1ee>
    50b8:	2100      	movs	r1, #0
    50ba:	f7fe ffb9 	bl	4030 <d_substitution>
    50be:	68e3      	ldr	r3, [r4, #12]
    50c0:	4605      	mov	r5, r0
    50c2:	781a      	ldrb	r2, [r3, #0]
    50c4:	2a49      	cmp	r2, #73	; 0x49
    50c6:	d1eb      	bne.n	50a0 <d_name+0x34>
    50c8:	3301      	adds	r3, #1
    50ca:	60e3      	str	r3, [r4, #12]
    50cc:	4620      	mov	r0, r4
    50ce:	f001 f87d 	bl	61cc <d_template_args_1>
    50d2:	4603      	mov	r3, r0
    50d4:	462a      	mov	r2, r5
    50d6:	2104      	movs	r1, #4
    50d8:	4620      	mov	r0, r4
    50da:	b004      	add	sp, #16
    50dc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    50e0:	f7fe bc52 	b.w	3988 <d_make_comp>
    50e4:	1c53      	adds	r3, r2, #1
    50e6:	60c3      	str	r3, [r0, #12]
    50e8:	2201      	movs	r2, #1
    50ea:	a903      	add	r1, sp, #12
    50ec:	f000 ff98 	bl	6020 <d_cv_qualifiers>
    50f0:	4607      	mov	r7, r0
    50f2:	2800      	cmp	r0, #0
    50f4:	f000 80e9 	beq.w	52ca <d_name+0x25e>
    50f8:	2100      	movs	r1, #0
    50fa:	4620      	mov	r0, r4
    50fc:	f7fe fcf0 	bl	3ae0 <d_ref_qualifier>
    5100:	68e2      	ldr	r2, [r4, #12]
    5102:	4680      	mov	r8, r0
    5104:	7816      	ldrb	r6, [r2, #0]
    5106:	b336      	cbz	r6, 5156 <d_name+0xea>
    5108:	f04f 0a00 	mov.w	sl, #0
    510c:	f8df 92b8 	ldr.w	r9, [pc, #696]	; 53c8 <d_name+0x35c>
    5110:	2e44      	cmp	r6, #68	; 0x44
    5112:	f000 80df 	beq.w	52d4 <d_name+0x268>
    5116:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    511a:	b2db      	uxtb	r3, r3
    511c:	2b1c      	cmp	r3, #28
    511e:	f240 811d 	bls.w	535c <d_name+0x2f0>
    5122:	f1a6 0361 	sub.w	r3, r6, #97	; 0x61
    5126:	2b19      	cmp	r3, #25
    5128:	f200 811a 	bhi.w	5360 <d_name+0x2f4>
    512c:	4620      	mov	r0, r4
    512e:	f7ff fe05 	bl	4d3c <d_unqualified_name>
    5132:	4605      	mov	r5, r0
    5134:	f1ba 0f00 	cmp.w	sl, #0
    5138:	d006      	beq.n	5148 <d_name+0xdc>
    513a:	2101      	movs	r1, #1
    513c:	462b      	mov	r3, r5
    513e:	4652      	mov	r2, sl
    5140:	4620      	mov	r0, r4
    5142:	f7fe fc21 	bl	3988 <d_make_comp>
    5146:	4605      	mov	r5, r0
    5148:	2e53      	cmp	r6, #83	; 0x53
    514a:	d10e      	bne.n	516a <d_name+0xfe>
    514c:	46aa      	mov	sl, r5
    514e:	68e2      	ldr	r2, [r4, #12]
    5150:	7816      	ldrb	r6, [r2, #0]
    5152:	2e00      	cmp	r6, #0
    5154:	d1dc      	bne.n	5110 <d_name+0xa4>
    5156:	2300      	movs	r3, #0
    5158:	461d      	mov	r5, r3
    515a:	603b      	str	r3, [r7, #0]
    515c:	e7a0      	b.n	50a0 <d_name+0x34>
    515e:	f7ff f8a7 	bl	42b0 <d_type>
    5162:	4605      	mov	r5, r0
    5164:	f1ba 0f00 	cmp.w	sl, #0
    5168:	d1e7      	bne.n	513a <d_name+0xce>
    516a:	68e2      	ldr	r2, [r4, #12]
    516c:	7816      	ldrb	r6, [r2, #0]
    516e:	2e45      	cmp	r6, #69	; 0x45
    5170:	f000 80bf 	beq.w	52f2 <d_name+0x286>
    5174:	2d00      	cmp	r5, #0
    5176:	d0ee      	beq.n	5156 <d_name+0xea>
    5178:	e9d4 3108 	ldrd	r3, r1, [r4, #32]
    517c:	428b      	cmp	r3, r1
    517e:	daea      	bge.n	5156 <d_name+0xea>
    5180:	69e1      	ldr	r1, [r4, #28]
    5182:	46aa      	mov	sl, r5
    5184:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    5188:	3301      	adds	r3, #1
    518a:	6223      	str	r3, [r4, #32]
    518c:	e7e0      	b.n	5150 <d_name+0xe4>
    518e:	1c53      	adds	r3, r2, #1
    5190:	60c3      	str	r3, [r0, #12]
    5192:	7853      	ldrb	r3, [r2, #1]
    5194:	2b47      	cmp	r3, #71	; 0x47
    5196:	d002      	beq.n	519e <d_name+0x132>
    5198:	2b54      	cmp	r3, #84	; 0x54
    519a:	f040 80b8 	bne.w	530e <d_name+0x2a2>
    519e:	4620      	mov	r0, r4
    51a0:	f000 f9d2 	bl	5548 <d_special_name>
    51a4:	4605      	mov	r5, r0
    51a6:	2d00      	cmp	r5, #0
    51a8:	f000 808f 	beq.w	52ca <d_name+0x25e>
    51ac:	68e3      	ldr	r3, [r4, #12]
    51ae:	781a      	ldrb	r2, [r3, #0]
    51b0:	2a45      	cmp	r2, #69	; 0x45
    51b2:	f040 808a 	bne.w	52ca <d_name+0x25e>
    51b6:	1c5a      	adds	r2, r3, #1
    51b8:	60e2      	str	r2, [r4, #12]
    51ba:	785a      	ldrb	r2, [r3, #1]
    51bc:	2a73      	cmp	r2, #115	; 0x73
    51be:	f000 8107 	beq.w	53d0 <d_name+0x364>
    51c2:	2a64      	cmp	r2, #100	; 0x64
    51c4:	f000 80a8 	beq.w	5318 <d_name+0x2ac>
    51c8:	4620      	mov	r0, r4
    51ca:	f7ff ff4f 	bl	506c <d_name>
    51ce:	4603      	mov	r3, r0
    51d0:	b328      	cbz	r0, 521e <d_name+0x1b2>
    51d2:	7802      	ldrb	r2, [r0, #0]
    51d4:	2a46      	cmp	r2, #70	; 0x46
    51d6:	d022      	beq.n	521e <d_name+0x1b2>
    51d8:	2a48      	cmp	r2, #72	; 0x48
    51da:	d020      	beq.n	521e <d_name+0x1b2>
    51dc:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    51e0:	4620      	mov	r0, r4
    51e2:	9301      	str	r3, [sp, #4]
    51e4:	f7fe fd00 	bl	3be8 <d_discriminator>
    51e8:	9b01      	ldr	r3, [sp, #4]
    51ea:	2800      	cmp	r0, #0
    51ec:	d06d      	beq.n	52ca <d_name+0x25e>
    51ee:	1c72      	adds	r2, r6, #1
    51f0:	d015      	beq.n	521e <d_name+0x1b2>
    51f2:	469c      	mov	ip, r3
    51f4:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
    51f8:	429a      	cmp	r2, r3
    51fa:	f280 8118 	bge.w	542e <d_name+0x3c2>
    51fe:	2700      	movs	r7, #0
    5200:	f04f 0e47 	mov.w	lr, #71	; 0x47
    5204:	6921      	ldr	r1, [r4, #16]
    5206:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    520a:	eb01 0380 	add.w	r3, r1, r0, lsl #2
    520e:	3201      	adds	r2, #1
    5210:	e9c3 7701 	strd	r7, r7, [r3, #4]
    5214:	6162      	str	r2, [r4, #20]
    5216:	f801 e020 	strb.w	lr, [r1, r0, lsl #2]
    521a:	e9c3 c603 	strd	ip, r6, [r3, #12]
    521e:	782a      	ldrb	r2, [r5, #0]
    5220:	2a03      	cmp	r2, #3
    5222:	d105      	bne.n	5230 <d_name+0x1c4>
    5224:	692a      	ldr	r2, [r5, #16]
    5226:	7811      	ldrb	r1, [r2, #0]
    5228:	2929      	cmp	r1, #41	; 0x29
    522a:	bf04      	itt	eq
    522c:	2100      	moveq	r1, #0
    522e:	60d1      	streq	r1, [r2, #12]
    5230:	462a      	mov	r2, r5
    5232:	2102      	movs	r1, #2
    5234:	e750      	b.n	50d8 <d_name+0x6c>
    5236:	2800      	cmp	r0, #0
    5238:	d047      	beq.n	52ca <d_name+0x25e>
    523a:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    523e:	428a      	cmp	r2, r1
    5240:	da43      	bge.n	52ca <d_name+0x25e>
    5242:	69e1      	ldr	r1, [r4, #28]
    5244:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    5248:	3201      	adds	r2, #1
    524a:	6222      	str	r2, [r4, #32]
    524c:	781a      	ldrb	r2, [r3, #0]
    524e:	3a49      	subs	r2, #73	; 0x49
    5250:	2a01      	cmp	r2, #1
    5252:	f67f af39 	bls.w	50c8 <d_name+0x5c>
    5256:	2300      	movs	r3, #0
    5258:	e73c      	b.n	50d4 <d_name+0x68>
    525a:	3202      	adds	r2, #2
    525c:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
    5260:	428b      	cmp	r3, r1
    5262:	60c2      	str	r2, [r0, #12]
    5264:	f280 80d1 	bge.w	540a <d_name+0x39e>
    5268:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    526c:	3301      	adds	r3, #1
    526e:	6143      	str	r3, [r0, #20]
    5270:	2103      	movs	r1, #3
    5272:	2300      	movs	r3, #0
    5274:	6902      	ldr	r2, [r0, #16]
    5276:	4855      	ldr	r0, [pc, #340]	; (53cc <d_name+0x360>)
    5278:	00ae      	lsls	r6, r5, #2
    527a:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    527e:	e9c5 3301 	strd	r3, r3, [r5, #4]
    5282:	5593      	strb	r3, [r2, r6]
    5284:	e9c5 0103 	strd	r0, r1, [r5, #12]
    5288:	4620      	mov	r0, r4
    528a:	f7ff fd57 	bl	4d3c <d_unqualified_name>
    528e:	462a      	mov	r2, r5
    5290:	4603      	mov	r3, r0
    5292:	2101      	movs	r1, #1
    5294:	4620      	mov	r0, r4
    5296:	f7fe fb77 	bl	3988 <d_make_comp>
    529a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    529c:	68e3      	ldr	r3, [r4, #12]
    529e:	3203      	adds	r2, #3
    52a0:	62e2      	str	r2, [r4, #44]	; 0x2c
    52a2:	781a      	ldrb	r2, [r3, #0]
    52a4:	4605      	mov	r5, r0
    52a6:	2a49      	cmp	r2, #73	; 0x49
    52a8:	f47f aefa 	bne.w	50a0 <d_name+0x34>
    52ac:	b168      	cbz	r0, 52ca <d_name+0x25e>
    52ae:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    52b2:	428a      	cmp	r2, r1
    52b4:	da09      	bge.n	52ca <d_name+0x25e>
    52b6:	69e1      	ldr	r1, [r4, #28]
    52b8:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    52bc:	3201      	adds	r2, #1
    52be:	6222      	str	r2, [r4, #32]
    52c0:	781a      	ldrb	r2, [r3, #0]
    52c2:	3a49      	subs	r2, #73	; 0x49
    52c4:	2a01      	cmp	r2, #1
    52c6:	d8c6      	bhi.n	5256 <d_name+0x1ea>
    52c8:	e6fe      	b.n	50c8 <d_name+0x5c>
    52ca:	2500      	movs	r5, #0
    52cc:	4628      	mov	r0, r5
    52ce:	b004      	add	sp, #16
    52d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    52d4:	7853      	ldrb	r3, [r2, #1]
    52d6:	4620      	mov	r0, r4
    52d8:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    52dc:	2b54      	cmp	r3, #84	; 0x54
    52de:	f43f af3e 	beq.w	515e <d_name+0xf2>
    52e2:	f7ff fd2b 	bl	4d3c <d_unqualified_name>
    52e6:	4605      	mov	r5, r0
    52e8:	f1ba 0f00 	cmp.w	sl, #0
    52ec:	f47f af25 	bne.w	513a <d_name+0xce>
    52f0:	e73b      	b.n	516a <d_name+0xfe>
    52f2:	2315      	movs	r3, #21
    52f4:	fa29 f303 	lsr.w	r3, r9, r3
    52f8:	07d9      	lsls	r1, r3, #31
    52fa:	d540      	bpl.n	537e <d_name+0x312>
    52fc:	4620      	mov	r0, r4
    52fe:	f7ff fd1d 	bl	4d3c <d_unqualified_name>
    5302:	b115      	cbz	r5, 530a <d_name+0x29e>
    5304:	46aa      	mov	sl, r5
    5306:	4605      	mov	r5, r0
    5308:	e717      	b.n	513a <d_name+0xce>
    530a:	4605      	mov	r5, r0
    530c:	e72d      	b.n	516a <d_name+0xfe>
    530e:	2100      	movs	r1, #0
    5310:	f000 f89c 	bl	544c <d_encoding.part.0>
    5314:	4605      	mov	r5, r0
    5316:	e746      	b.n	51a6 <d_name+0x13a>
    5318:	1c9a      	adds	r2, r3, #2
    531a:	60e2      	str	r2, [r4, #12]
    531c:	789a      	ldrb	r2, [r3, #2]
    531e:	2a5f      	cmp	r2, #95	; 0x5f
    5320:	f000 8081 	beq.w	5426 <d_name+0x3ba>
    5324:	2a6e      	cmp	r2, #110	; 0x6e
    5326:	d0d0      	beq.n	52ca <d_name+0x25e>
    5328:	4620      	mov	r0, r4
    532a:	f7fe fb77 	bl	3a1c <d_number>
    532e:	1c46      	adds	r6, r0, #1
    5330:	d4cb      	bmi.n	52ca <d_name+0x25e>
    5332:	68e3      	ldr	r3, [r4, #12]
    5334:	781a      	ldrb	r2, [r3, #0]
    5336:	2a5f      	cmp	r2, #95	; 0x5f
    5338:	d1c7      	bne.n	52ca <d_name+0x25e>
    533a:	3301      	adds	r3, #1
    533c:	60e3      	str	r3, [r4, #12]
    533e:	4620      	mov	r0, r4
    5340:	f7ff fe94 	bl	506c <d_name>
    5344:	4603      	mov	r3, r0
    5346:	2800      	cmp	r0, #0
    5348:	f43f af53 	beq.w	51f2 <d_name+0x186>
    534c:	781a      	ldrb	r2, [r3, #0]
    534e:	2a46      	cmp	r2, #70	; 0x46
    5350:	f43f af4f 	beq.w	51f2 <d_name+0x186>
    5354:	2a48      	cmp	r2, #72	; 0x48
    5356:	f43f af4c 	beq.w	51f2 <d_name+0x186>
    535a:	e741      	b.n	51e0 <d_name+0x174>
    535c:	4655      	mov	r5, sl
    535e:	e7c9      	b.n	52f4 <d_name+0x288>
    5360:	2e55      	cmp	r6, #85	; 0x55
    5362:	d02f      	beq.n	53c4 <d_name+0x358>
    5364:	2e53      	cmp	r6, #83	; 0x53
    5366:	d109      	bne.n	537c <d_name+0x310>
    5368:	2101      	movs	r1, #1
    536a:	4620      	mov	r0, r4
    536c:	f7fe fe60 	bl	4030 <d_substitution>
    5370:	4605      	mov	r5, r0
    5372:	f1ba 0f00 	cmp.w	sl, #0
    5376:	f47f aee0 	bne.w	513a <d_name+0xce>
    537a:	e6e7      	b.n	514c <d_name+0xe0>
    537c:	4655      	mov	r5, sl
    537e:	2e49      	cmp	r6, #73	; 0x49
    5380:	d045      	beq.n	540e <d_name+0x3a2>
    5382:	2e54      	cmp	r6, #84	; 0x54
    5384:	d055      	beq.n	5432 <d_name+0x3c6>
    5386:	2e45      	cmp	r6, #69	; 0x45
    5388:	d009      	beq.n	539e <d_name+0x332>
    538a:	2e4d      	cmp	r6, #77	; 0x4d
    538c:	f47f aee3 	bne.w	5156 <d_name+0xea>
    5390:	2d00      	cmp	r5, #0
    5392:	f43f aee0 	beq.w	5156 <d_name+0xea>
    5396:	3201      	adds	r2, #1
    5398:	46aa      	mov	sl, r5
    539a:	60e2      	str	r2, [r4, #12]
    539c:	e6d8      	b.n	5150 <d_name+0xe4>
    539e:	603d      	str	r5, [r7, #0]
    53a0:	2d00      	cmp	r5, #0
    53a2:	d092      	beq.n	52ca <d_name+0x25e>
    53a4:	f1b8 0f00 	cmp.w	r8, #0
    53a8:	d004      	beq.n	53b4 <d_name+0x348>
    53aa:	9b03      	ldr	r3, [sp, #12]
    53ac:	f8cd 800c 	str.w	r8, [sp, #12]
    53b0:	f8c8 300c 	str.w	r3, [r8, #12]
    53b4:	68e3      	ldr	r3, [r4, #12]
    53b6:	781a      	ldrb	r2, [r3, #0]
    53b8:	2a45      	cmp	r2, #69	; 0x45
    53ba:	d186      	bne.n	52ca <d_name+0x25e>
    53bc:	3301      	adds	r3, #1
    53be:	9d03      	ldr	r5, [sp, #12]
    53c0:	60e3      	str	r3, [r4, #12]
    53c2:	e66d      	b.n	50a0 <d_name+0x34>
    53c4:	4655      	mov	r5, sl
    53c6:	e799      	b.n	52fc <d_name+0x290>
    53c8:	100803ff 	.word	0x100803ff
    53cc:	00019164 	.word	0x00019164
    53d0:	3302      	adds	r3, #2
    53d2:	4620      	mov	r0, r4
    53d4:	60e3      	str	r3, [r4, #12]
    53d6:	f7fe fc07 	bl	3be8 <d_discriminator>
    53da:	2800      	cmp	r0, #0
    53dc:	f43f af75 	beq.w	52ca <d_name+0x25e>
    53e0:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
    53e4:	429a      	cmp	r2, r3
    53e6:	da22      	bge.n	542e <d_name+0x3c2>
    53e8:	eb02 0382 	add.w	r3, r2, r2, lsl #2
    53ec:	3201      	adds	r2, #1
    53ee:	6162      	str	r2, [r4, #20]
    53f0:	200e      	movs	r0, #14
    53f2:	2200      	movs	r2, #0
    53f4:	6921      	ldr	r1, [r4, #16]
    53f6:	4e14      	ldr	r6, [pc, #80]	; (5448 <d_name+0x3dc>)
    53f8:	009f      	lsls	r7, r3, #2
    53fa:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    53fe:	e9c3 2201 	strd	r2, r2, [r3, #4]
    5402:	55ca      	strb	r2, [r1, r7]
    5404:	e9c3 6003 	strd	r6, r0, [r3, #12]
    5408:	e709      	b.n	521e <d_name+0x1b2>
    540a:	2500      	movs	r5, #0
    540c:	e73c      	b.n	5288 <d_name+0x21c>
    540e:	2d00      	cmp	r5, #0
    5410:	f43f aea1 	beq.w	5156 <d_name+0xea>
    5414:	3201      	adds	r2, #1
    5416:	4620      	mov	r0, r4
    5418:	60e2      	str	r2, [r4, #12]
    541a:	f000 fed7 	bl	61cc <d_template_args_1>
    541e:	46aa      	mov	sl, r5
    5420:	2104      	movs	r1, #4
    5422:	4605      	mov	r5, r0
    5424:	e68a      	b.n	513c <d_name+0xd0>
    5426:	3303      	adds	r3, #3
    5428:	2600      	movs	r6, #0
    542a:	60e3      	str	r3, [r4, #12]
    542c:	e787      	b.n	533e <d_name+0x2d2>
    542e:	2300      	movs	r3, #0
    5430:	e6f5      	b.n	521e <d_name+0x1b2>
    5432:	4620      	mov	r0, r4
    5434:	46aa      	mov	sl, r5
    5436:	f7fe fd1d 	bl	3e74 <d_template_param>
    543a:	4605      	mov	r5, r0
    543c:	f1ba 0f00 	cmp.w	sl, #0
    5440:	f47f ae7b 	bne.w	513a <d_name+0xce>
    5444:	e691      	b.n	516a <d_name+0xfe>
    5446:	bf00      	nop
    5448:	00019154 	.word	0x00019154

0000544c <d_encoding.part.0>:
    544c:	b570      	push	{r4, r5, r6, lr}
    544e:	4605      	mov	r5, r0
    5450:	460e      	mov	r6, r1
    5452:	f7ff fe0b 	bl	506c <d_name>
    5456:	2800      	cmp	r0, #0
    5458:	d049      	beq.n	54ee <d_encoding.part.0+0xa2>
    545a:	4604      	mov	r4, r0
    545c:	b1ee      	cbz	r6, 549a <d_encoding.part.0+0x4e>
    545e:	68ab      	ldr	r3, [r5, #8]
    5460:	07db      	lsls	r3, r3, #31
    5462:	d41a      	bmi.n	549a <d_encoding.part.0+0x4e>
    5464:	7823      	ldrb	r3, [r4, #0]
    5466:	2b4d      	cmp	r3, #77	; 0x4d
    5468:	f1a3 011c 	sub.w	r1, r3, #28
    546c:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
    5470:	d035      	beq.n	54de <d_encoding.part.0+0x92>
    5472:	d832      	bhi.n	54da <d_encoding.part.0+0x8e>
    5474:	2904      	cmp	r1, #4
    5476:	d932      	bls.n	54de <d_encoding.part.0+0x92>
    5478:	2b02      	cmp	r3, #2
    547a:	d10c      	bne.n	5496 <d_encoding.part.0+0x4a>
    547c:	6923      	ldr	r3, [r4, #16]
    547e:	2b00      	cmp	r3, #0
    5480:	d035      	beq.n	54ee <d_encoding.part.0+0xa2>
    5482:	781a      	ldrb	r2, [r3, #0]
    5484:	2a4d      	cmp	r2, #77	; 0x4d
    5486:	f1a2 001c 	sub.w	r0, r2, #28
    548a:	f1a2 014f 	sub.w	r1, r2, #79	; 0x4f
    548e:	d02a      	beq.n	54e6 <d_encoding.part.0+0x9a>
    5490:	d827      	bhi.n	54e2 <d_encoding.part.0+0x96>
    5492:	2804      	cmp	r0, #4
    5494:	d927      	bls.n	54e6 <d_encoding.part.0+0x9a>
    5496:	4620      	mov	r0, r4
    5498:	bd70      	pop	{r4, r5, r6, pc}
    549a:	68eb      	ldr	r3, [r5, #12]
    549c:	781b      	ldrb	r3, [r3, #0]
    549e:	2b00      	cmp	r3, #0
    54a0:	d0f9      	beq.n	5496 <d_encoding.part.0+0x4a>
    54a2:	2b45      	cmp	r3, #69	; 0x45
    54a4:	d0f7      	beq.n	5496 <d_encoding.part.0+0x4a>
    54a6:	4621      	mov	r1, r4
    54a8:	780b      	ldrb	r3, [r1, #0]
    54aa:	2b04      	cmp	r3, #4
    54ac:	d032      	beq.n	5514 <d_encoding.part.0+0xc8>
    54ae:	d826      	bhi.n	54fe <d_encoding.part.0+0xb2>
    54b0:	2b02      	cmp	r3, #2
    54b2:	d122      	bne.n	54fa <d_encoding.part.0+0xae>
    54b4:	6909      	ldr	r1, [r1, #16]
    54b6:	2900      	cmp	r1, #0
    54b8:	d1f6      	bne.n	54a8 <d_encoding.part.0+0x5c>
    54ba:	4628      	mov	r0, r5
    54bc:	f7ff fbe4 	bl	4c88 <d_bare_function_type>
    54c0:	4603      	mov	r3, r0
    54c2:	b1a0      	cbz	r0, 54ee <d_encoding.part.0+0xa2>
    54c4:	b916      	cbnz	r6, 54cc <d_encoding.part.0+0x80>
    54c6:	7822      	ldrb	r2, [r4, #0]
    54c8:	2a02      	cmp	r2, #2
    54ca:	d037      	beq.n	553c <d_encoding.part.0+0xf0>
    54cc:	4622      	mov	r2, r4
    54ce:	4628      	mov	r0, r5
    54d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    54d4:	2103      	movs	r1, #3
    54d6:	f7fe ba57 	b.w	3988 <d_make_comp>
    54da:	2a01      	cmp	r2, #1
    54dc:	d8db      	bhi.n	5496 <d_encoding.part.0+0x4a>
    54de:	68e4      	ldr	r4, [r4, #12]
    54e0:	e7c0      	b.n	5464 <d_encoding.part.0+0x18>
    54e2:	2901      	cmp	r1, #1
    54e4:	d8d7      	bhi.n	5496 <d_encoding.part.0+0x4a>
    54e6:	68db      	ldr	r3, [r3, #12]
    54e8:	6123      	str	r3, [r4, #16]
    54ea:	2b00      	cmp	r3, #0
    54ec:	d1c9      	bne.n	5482 <d_encoding.part.0+0x36>
    54ee:	2400      	movs	r4, #0
    54f0:	4620      	mov	r0, r4
    54f2:	bd70      	pop	{r4, r5, r6, pc}
    54f4:	3b1c      	subs	r3, #28
    54f6:	2b04      	cmp	r3, #4
    54f8:	d908      	bls.n	550c <d_encoding.part.0+0xc0>
    54fa:	2100      	movs	r1, #0
    54fc:	e7dd      	b.n	54ba <d_encoding.part.0+0x6e>
    54fe:	2b4d      	cmp	r3, #77	; 0x4d
    5500:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
    5504:	d002      	beq.n	550c <d_encoding.part.0+0xc0>
    5506:	d9f5      	bls.n	54f4 <d_encoding.part.0+0xa8>
    5508:	2a01      	cmp	r2, #1
    550a:	d8f6      	bhi.n	54fa <d_encoding.part.0+0xae>
    550c:	68c9      	ldr	r1, [r1, #12]
    550e:	2900      	cmp	r1, #0
    5510:	d1ca      	bne.n	54a8 <d_encoding.part.0+0x5c>
    5512:	e7d2      	b.n	54ba <d_encoding.part.0+0x6e>
    5514:	68cb      	ldr	r3, [r1, #12]
    5516:	b15b      	cbz	r3, 5530 <d_encoding.part.0+0xe4>
    5518:	7819      	ldrb	r1, [r3, #0]
    551a:	2908      	cmp	r1, #8
    551c:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
    5520:	d808      	bhi.n	5534 <d_encoding.part.0+0xe8>
    5522:	2906      	cmp	r1, #6
    5524:	d8e9      	bhi.n	54fa <d_encoding.part.0+0xae>
    5526:	2a01      	cmp	r2, #1
    5528:	d802      	bhi.n	5530 <d_encoding.part.0+0xe4>
    552a:	691b      	ldr	r3, [r3, #16]
    552c:	2b00      	cmp	r3, #0
    552e:	d1f3      	bne.n	5518 <d_encoding.part.0+0xcc>
    5530:	2101      	movs	r1, #1
    5532:	e7c2      	b.n	54ba <d_encoding.part.0+0x6e>
    5534:	3935      	subs	r1, #53	; 0x35
    5536:	bf18      	it	ne
    5538:	2101      	movne	r1, #1
    553a:	e7be      	b.n	54ba <d_encoding.part.0+0x6e>
    553c:	7802      	ldrb	r2, [r0, #0]
    553e:	2a29      	cmp	r2, #41	; 0x29
    5540:	bf08      	it	eq
    5542:	60c6      	streq	r6, [r0, #12]
    5544:	e7c2      	b.n	54cc <d_encoding.part.0+0x80>
    5546:	bf00      	nop

00005548 <d_special_name>:
    5548:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    554c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    554e:	68c3      	ldr	r3, [r0, #12]
    5550:	f101 0214 	add.w	r2, r1, #20
    5554:	62c2      	str	r2, [r0, #44]	; 0x2c
    5556:	781a      	ldrb	r2, [r3, #0]
    5558:	4604      	mov	r4, r0
    555a:	2a54      	cmp	r2, #84	; 0x54
    555c:	d078      	beq.n	5650 <d_special_name+0x108>
    555e:	2a47      	cmp	r2, #71	; 0x47
    5560:	d128      	bne.n	55b4 <d_special_name+0x6c>
    5562:	1c5a      	adds	r2, r3, #1
    5564:	60c2      	str	r2, [r0, #12]
    5566:	785a      	ldrb	r2, [r3, #1]
    5568:	b322      	cbz	r2, 55b4 <d_special_name+0x6c>
    556a:	1c9a      	adds	r2, r3, #2
    556c:	60c2      	str	r2, [r0, #12]
    556e:	785a      	ldrb	r2, [r3, #1]
    5570:	2a56      	cmp	r2, #86	; 0x56
    5572:	d822      	bhi.n	55ba <d_special_name+0x72>
    5574:	2a40      	cmp	r2, #64	; 0x40
    5576:	d91d      	bls.n	55b4 <d_special_name+0x6c>
    5578:	3a41      	subs	r2, #65	; 0x41
    557a:	2a15      	cmp	r2, #21
    557c:	d81a      	bhi.n	55b4 <d_special_name+0x6c>
    557e:	e8df f012 	tbh	[pc, r2, lsl #1]
    5582:	0127      	.short	0x0127
    5584:	00190019 	.word	0x00190019
    5588:	00190019 	.word	0x00190019
    558c:	00190019 	.word	0x00190019
    5590:	00190019 	.word	0x00190019
    5594:	00190019 	.word	0x00190019
    5598:	00190019 	.word	0x00190019
    559c:	00190019 	.word	0x00190019
    55a0:	00190019 	.word	0x00190019
    55a4:	00190105 	.word	0x00190105
    55a8:	001900eb 	.word	0x001900eb
    55ac:	00e1      	.short	0x00e1
    55ae:	68e3      	ldr	r3, [r4, #12]
    55b0:	3302      	adds	r3, #2
    55b2:	60e3      	str	r3, [r4, #12]
    55b4:	2000      	movs	r0, #0
    55b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    55ba:	2a72      	cmp	r2, #114	; 0x72
    55bc:	d1fa      	bne.n	55b4 <d_special_name+0x6c>
    55be:	f7fe fa2d 	bl	3a1c <d_number>
    55c2:	2801      	cmp	r0, #1
    55c4:	ddf6      	ble.n	55b4 <d_special_name+0x6c>
    55c6:	68e3      	ldr	r3, [r4, #12]
    55c8:	781a      	ldrb	r2, [r3, #0]
    55ca:	2a00      	cmp	r2, #0
    55cc:	d0f2      	beq.n	55b4 <d_special_name+0x6c>
    55ce:	1c5e      	adds	r6, r3, #1
    55d0:	60e6      	str	r6, [r4, #12]
    55d2:	781b      	ldrb	r3, [r3, #0]
    55d4:	2b5f      	cmp	r3, #95	; 0x5f
    55d6:	d1ed      	bne.n	55b4 <d_special_name+0x6c>
    55d8:	2200      	movs	r2, #0
    55da:	f04f 0841 	mov.w	r8, #65	; 0x41
    55de:	4617      	mov	r7, r2
    55e0:	1e45      	subs	r5, r0, #1
    55e2:	7833      	ldrb	r3, [r6, #0]
    55e4:	2b00      	cmp	r3, #0
    55e6:	d0e5      	beq.n	55b4 <d_special_name+0x6c>
    55e8:	2b24      	cmp	r3, #36	; 0x24
    55ea:	f040 81e6 	bne.w	59ba <d_special_name+0x472>
    55ee:	7873      	ldrb	r3, [r6, #1]
    55f0:	2b53      	cmp	r3, #83	; 0x53
    55f2:	f000 8207 	beq.w	5a04 <d_special_name+0x4bc>
    55f6:	2b5f      	cmp	r3, #95	; 0x5f
    55f8:	f000 8202 	beq.w	5a00 <d_special_name+0x4b8>
    55fc:	2b24      	cmp	r3, #36	; 0x24
    55fe:	d1d9      	bne.n	55b4 <d_special_name+0x6c>
    5600:	4619      	mov	r1, r3
    5602:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
    5606:	4298      	cmp	r0, r3
    5608:	dad1      	bge.n	55ae <d_special_name+0x66>
    560a:	6926      	ldr	r6, [r4, #16]
    560c:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
    5610:	eb06 038c 	add.w	r3, r6, ip, lsl #2
    5614:	3001      	adds	r0, #1
    5616:	e9c3 7701 	strd	r7, r7, [r3, #4]
    561a:	6160      	str	r0, [r4, #20]
    561c:	f806 802c 	strb.w	r8, [r6, ip, lsl #2]
    5620:	68e6      	ldr	r6, [r4, #12]
    5622:	60d9      	str	r1, [r3, #12]
    5624:	3602      	adds	r6, #2
    5626:	3d02      	subs	r5, #2
    5628:	60e6      	str	r6, [r4, #12]
    562a:	2a00      	cmp	r2, #0
    562c:	f000 81e6 	beq.w	59fc <d_special_name+0x4b4>
    5630:	2140      	movs	r1, #64	; 0x40
    5632:	4620      	mov	r0, r4
    5634:	f7fe f9a8 	bl	3988 <d_make_comp>
    5638:	4602      	mov	r2, r0
    563a:	2800      	cmp	r0, #0
    563c:	d0ba      	beq.n	55b4 <d_special_name+0x6c>
    563e:	2d00      	cmp	r5, #0
    5640:	dccf      	bgt.n	55e2 <d_special_name+0x9a>
    5642:	4620      	mov	r0, r4
    5644:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5648:	2300      	movs	r3, #0
    564a:	213f      	movs	r1, #63	; 0x3f
    564c:	f7fe b99c 	b.w	3988 <d_make_comp>
    5650:	1c5a      	adds	r2, r3, #1
    5652:	60c2      	str	r2, [r0, #12]
    5654:	785a      	ldrb	r2, [r3, #1]
    5656:	2a00      	cmp	r2, #0
    5658:	d0ac      	beq.n	55b4 <d_special_name+0x6c>
    565a:	1c9a      	adds	r2, r3, #2
    565c:	60c2      	str	r2, [r0, #12]
    565e:	785b      	ldrb	r3, [r3, #1]
    5660:	3b41      	subs	r3, #65	; 0x41
    5662:	2b35      	cmp	r3, #53	; 0x35
    5664:	d8a6      	bhi.n	55b4 <d_special_name+0x6c>
    5666:	a201      	add	r2, pc, #4	; (adr r2, 566c <d_special_name+0x124>)
    5668:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    566c:	0000581d 	.word	0x0000581d
    5670:	000055b5 	.word	0x000055b5
    5674:	00005831 	.word	0x00005831
    5678:	000055b5 	.word	0x000055b5
    567c:	000055b5 	.word	0x000055b5
    5680:	0000586d 	.word	0x0000586d
    5684:	000055b5 	.word	0x000055b5
    5688:	000058e9 	.word	0x000058e9
    568c:	00005993 	.word	0x00005993
    5690:	0000597f 	.word	0x0000597f
    5694:	000055b5 	.word	0x000055b5
    5698:	000055b5 	.word	0x000055b5
    569c:	000055b5 	.word	0x000055b5
    56a0:	000055b5 	.word	0x000055b5
    56a4:	000055b5 	.word	0x000055b5
    56a8:	000055b5 	.word	0x000055b5
    56ac:	000055b5 	.word	0x000055b5
    56b0:	000055b5 	.word	0x000055b5
    56b4:	000059a7 	.word	0x000059a7
    56b8:	000058fd 	.word	0x000058fd
    56bc:	000055b5 	.word	0x000055b5
    56c0:	00005915 	.word	0x00005915
    56c4:	0000592d 	.word	0x0000592d
    56c8:	000055b5 	.word	0x000055b5
    56cc:	000055b5 	.word	0x000055b5
    56d0:	000055b5 	.word	0x000055b5
    56d4:	000055b5 	.word	0x000055b5
    56d8:	000055b5 	.word	0x000055b5
    56dc:	000055b5 	.word	0x000055b5
    56e0:	000055b5 	.word	0x000055b5
    56e4:	000055b5 	.word	0x000055b5
    56e8:	000055b5 	.word	0x000055b5
    56ec:	000055b5 	.word	0x000055b5
    56f0:	000055b5 	.word	0x000055b5
    56f4:	00005941 	.word	0x00005941
    56f8:	000055b5 	.word	0x000055b5
    56fc:	000055b5 	.word	0x000055b5
    5700:	000055b5 	.word	0x000055b5
    5704:	000055b5 	.word	0x000055b5
    5708:	00005881 	.word	0x00005881
    570c:	000055b5 	.word	0x000055b5
    5710:	000055b5 	.word	0x000055b5
    5714:	000055b5 	.word	0x000055b5
    5718:	000055b5 	.word	0x000055b5
    571c:	000055b5 	.word	0x000055b5
    5720:	000055b5 	.word	0x000055b5
    5724:	000055b5 	.word	0x000055b5
    5728:	000055b5 	.word	0x000055b5
    572c:	000055b5 	.word	0x000055b5
    5730:	000055b5 	.word	0x000055b5
    5734:	000055b5 	.word	0x000055b5
    5738:	000055b5 	.word	0x000055b5
    573c:	000055b5 	.word	0x000055b5
    5740:	000058b5 	.word	0x000058b5
    5744:	f7ff fc92 	bl	506c <d_name>
    5748:	2300      	movs	r3, #0
    574a:	4602      	mov	r2, r0
    574c:	2113      	movs	r1, #19
    574e:	4620      	mov	r0, r4
    5750:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5754:	f7fe b918 	b.w	3988 <d_make_comp>
    5758:	789a      	ldrb	r2, [r3, #2]
    575a:	2a00      	cmp	r2, #0
    575c:	f000 8154 	beq.w	5a08 <d_special_name+0x4c0>
    5760:	1cda      	adds	r2, r3, #3
    5762:	60c2      	str	r2, [r0, #12]
    5764:	789a      	ldrb	r2, [r3, #2]
    5766:	78db      	ldrb	r3, [r3, #3]
    5768:	2a6e      	cmp	r2, #110	; 0x6e
    576a:	d046      	beq.n	57fa <d_special_name+0x2b2>
    576c:	2b47      	cmp	r3, #71	; 0x47
    576e:	d002      	beq.n	5776 <d_special_name+0x22e>
    5770:	2b54      	cmp	r3, #84	; 0x54
    5772:	f040 8149 	bne.w	5a08 <d_special_name+0x4c0>
    5776:	4620      	mov	r0, r4
    5778:	f7ff fee6 	bl	5548 <d_special_name>
    577c:	4602      	mov	r2, r0
    577e:	4620      	mov	r0, r4
    5780:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5784:	2300      	movs	r3, #0
    5786:	2149      	movs	r1, #73	; 0x49
    5788:	f7fe b8fe 	b.w	3988 <d_make_comp>
    578c:	f7ff fc6e 	bl	506c <d_name>
    5790:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
    5794:	4291      	cmp	r1, r2
    5796:	4606      	mov	r6, r0
    5798:	f280 8140 	bge.w	5a1c <d_special_name+0x4d4>
    579c:	2300      	movs	r3, #0
    579e:	f04f 0c42 	mov.w	ip, #66	; 0x42
    57a2:	6922      	ldr	r2, [r4, #16]
    57a4:	eb01 0781 	add.w	r7, r1, r1, lsl #2
    57a8:	eb02 0587 	add.w	r5, r2, r7, lsl #2
    57ac:	3101      	adds	r1, #1
    57ae:	e9c5 3301 	strd	r3, r3, [r5, #4]
    57b2:	4620      	mov	r0, r4
    57b4:	6161      	str	r1, [r4, #20]
    57b6:	f802 c027 	strb.w	ip, [r2, r7, lsl #2]
    57ba:	f7fe f92f 	bl	3a1c <d_number>
    57be:	60e8      	str	r0, [r5, #12]
    57c0:	462b      	mov	r3, r5
    57c2:	4632      	mov	r2, r6
    57c4:	4620      	mov	r0, r4
    57c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    57ca:	2116      	movs	r1, #22
    57cc:	f7fe b8dc 	b.w	3988 <d_make_comp>
    57d0:	789b      	ldrb	r3, [r3, #2]
    57d2:	2b47      	cmp	r3, #71	; 0x47
    57d4:	d001      	beq.n	57da <d_special_name+0x292>
    57d6:	2b54      	cmp	r3, #84	; 0x54
    57d8:	d10a      	bne.n	57f0 <d_special_name+0x2a8>
    57da:	4620      	mov	r0, r4
    57dc:	f7ff feb4 	bl	5548 <d_special_name>
    57e0:	4602      	mov	r2, r0
    57e2:	4620      	mov	r0, r4
    57e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    57e8:	2300      	movs	r3, #0
    57ea:	2117      	movs	r1, #23
    57ec:	f7fe b8cc 	b.w	3988 <d_make_comp>
    57f0:	2100      	movs	r1, #0
    57f2:	f7ff fe2b 	bl	544c <d_encoding.part.0>
    57f6:	4602      	mov	r2, r0
    57f8:	e7f3      	b.n	57e2 <d_special_name+0x29a>
    57fa:	2b47      	cmp	r3, #71	; 0x47
    57fc:	f000 811a 	beq.w	5a34 <d_special_name+0x4ec>
    5800:	2b54      	cmp	r3, #84	; 0x54
    5802:	f000 8117 	beq.w	5a34 <d_special_name+0x4ec>
    5806:	2100      	movs	r1, #0
    5808:	f7ff fe20 	bl	544c <d_encoding.part.0>
    580c:	4602      	mov	r2, r0
    580e:	4620      	mov	r0, r4
    5810:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5814:	2300      	movs	r3, #0
    5816:	214a      	movs	r1, #74	; 0x4a
    5818:	f7fe b8b6 	b.w	3988 <d_make_comp>
    581c:	f000 fcac 	bl	6178 <d_template_arg>
    5820:	2300      	movs	r3, #0
    5822:	4602      	mov	r2, r0
    5824:	2130      	movs	r1, #48	; 0x30
    5826:	4620      	mov	r0, r4
    5828:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    582c:	f7fe b8ac 	b.w	3988 <d_make_comp>
    5830:	f7fe fd3e 	bl	42b0 <d_type>
    5834:	4605      	mov	r5, r0
    5836:	4620      	mov	r0, r4
    5838:	f7fe f8f0 	bl	3a1c <d_number>
    583c:	2800      	cmp	r0, #0
    583e:	f6ff aeb9 	blt.w	55b4 <d_special_name+0x6c>
    5842:	68e3      	ldr	r3, [r4, #12]
    5844:	781a      	ldrb	r2, [r3, #0]
    5846:	2a5f      	cmp	r2, #95	; 0x5f
    5848:	f47f aeb4 	bne.w	55b4 <d_special_name+0x6c>
    584c:	3301      	adds	r3, #1
    584e:	60e3      	str	r3, [r4, #12]
    5850:	4620      	mov	r0, r4
    5852:	f7fe fd2d 	bl	42b0 <d_type>
    5856:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    5858:	4602      	mov	r2, r0
    585a:	1d48      	adds	r0, r1, #5
    585c:	62e0      	str	r0, [r4, #44]	; 0x2c
    585e:	462b      	mov	r3, r5
    5860:	4620      	mov	r0, r4
    5862:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5866:	210b      	movs	r1, #11
    5868:	f7fe b88e 	b.w	3988 <d_make_comp>
    586c:	f7fe fd20 	bl	42b0 <d_type>
    5870:	2300      	movs	r3, #0
    5872:	4602      	mov	r2, r0
    5874:	210e      	movs	r1, #14
    5876:	4620      	mov	r0, r4
    5878:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    587c:	f7fe b884 	b.w	3988 <d_make_comp>
    5880:	2168      	movs	r1, #104	; 0x68
    5882:	f7fe f905 	bl	3a90 <d_call_offset>
    5886:	2800      	cmp	r0, #0
    5888:	f43f ae94 	beq.w	55b4 <d_special_name+0x6c>
    588c:	68e3      	ldr	r3, [r4, #12]
    588e:	781b      	ldrb	r3, [r3, #0]
    5890:	2b47      	cmp	r3, #71	; 0x47
    5892:	f000 80c5 	beq.w	5a20 <d_special_name+0x4d8>
    5896:	2b54      	cmp	r3, #84	; 0x54
    5898:	f000 80c2 	beq.w	5a20 <d_special_name+0x4d8>
    589c:	2100      	movs	r1, #0
    589e:	4620      	mov	r0, r4
    58a0:	f7ff fdd4 	bl	544c <d_encoding.part.0>
    58a4:	4602      	mov	r2, r0
    58a6:	4620      	mov	r0, r4
    58a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    58ac:	2300      	movs	r3, #0
    58ae:	210f      	movs	r1, #15
    58b0:	f7fe b86a 	b.w	3988 <d_make_comp>
    58b4:	2176      	movs	r1, #118	; 0x76
    58b6:	f7fe f8eb 	bl	3a90 <d_call_offset>
    58ba:	2800      	cmp	r0, #0
    58bc:	f43f ae7a 	beq.w	55b4 <d_special_name+0x6c>
    58c0:	68e3      	ldr	r3, [r4, #12]
    58c2:	781b      	ldrb	r3, [r3, #0]
    58c4:	2b47      	cmp	r3, #71	; 0x47
    58c6:	f000 80b0 	beq.w	5a2a <d_special_name+0x4e2>
    58ca:	2b54      	cmp	r3, #84	; 0x54
    58cc:	f000 80ad 	beq.w	5a2a <d_special_name+0x4e2>
    58d0:	2100      	movs	r1, #0
    58d2:	4620      	mov	r0, r4
    58d4:	f7ff fdba 	bl	544c <d_encoding.part.0>
    58d8:	4602      	mov	r2, r0
    58da:	4620      	mov	r0, r4
    58dc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    58e0:	2300      	movs	r3, #0
    58e2:	2110      	movs	r1, #16
    58e4:	f7fe b850 	b.w	3988 <d_make_comp>
    58e8:	f7ff fbc0 	bl	506c <d_name>
    58ec:	2300      	movs	r3, #0
    58ee:	4602      	mov	r2, r0
    58f0:	2114      	movs	r1, #20
    58f2:	4620      	mov	r0, r4
    58f4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    58f8:	f7fe b846 	b.w	3988 <d_make_comp>
    58fc:	310a      	adds	r1, #10
    58fe:	62c1      	str	r1, [r0, #44]	; 0x2c
    5900:	f7fe fcd6 	bl	42b0 <d_type>
    5904:	2300      	movs	r3, #0
    5906:	4602      	mov	r2, r0
    5908:	210a      	movs	r1, #10
    590a:	4620      	mov	r0, r4
    590c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5910:	f7fe b83a 	b.w	3988 <d_make_comp>
    5914:	310f      	adds	r1, #15
    5916:	62c1      	str	r1, [r0, #44]	; 0x2c
    5918:	f7fe fcca 	bl	42b0 <d_type>
    591c:	2300      	movs	r3, #0
    591e:	4602      	mov	r2, r0
    5920:	2109      	movs	r1, #9
    5922:	4620      	mov	r0, r4
    5924:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5928:	f7fe b82e 	b.w	3988 <d_make_comp>
    592c:	f7ff fb9e 	bl	506c <d_name>
    5930:	2300      	movs	r3, #0
    5932:	4602      	mov	r2, r0
    5934:	2115      	movs	r1, #21
    5936:	4620      	mov	r0, r4
    5938:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    593c:	f7fe b824 	b.w	3988 <d_make_comp>
    5940:	2100      	movs	r1, #0
    5942:	f7fe f8a5 	bl	3a90 <d_call_offset>
    5946:	2800      	cmp	r0, #0
    5948:	f43f ae34 	beq.w	55b4 <d_special_name+0x6c>
    594c:	2100      	movs	r1, #0
    594e:	4620      	mov	r0, r4
    5950:	f7fe f89e 	bl	3a90 <d_call_offset>
    5954:	2800      	cmp	r0, #0
    5956:	f43f ae2d 	beq.w	55b4 <d_special_name+0x6c>
    595a:	68e3      	ldr	r3, [r4, #12]
    595c:	781b      	ldrb	r3, [r3, #0]
    595e:	2b47      	cmp	r3, #71	; 0x47
    5960:	d06d      	beq.n	5a3e <d_special_name+0x4f6>
    5962:	2b54      	cmp	r3, #84	; 0x54
    5964:	d06b      	beq.n	5a3e <d_special_name+0x4f6>
    5966:	2100      	movs	r1, #0
    5968:	4620      	mov	r0, r4
    596a:	f7ff fd6f 	bl	544c <d_encoding.part.0>
    596e:	4602      	mov	r2, r0
    5970:	4620      	mov	r0, r4
    5972:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5976:	2300      	movs	r3, #0
    5978:	2111      	movs	r1, #17
    597a:	f7fe b805 	b.w	3988 <d_make_comp>
    597e:	f7fe fc97 	bl	42b0 <d_type>
    5982:	2300      	movs	r3, #0
    5984:	4602      	mov	r2, r0
    5986:	2112      	movs	r1, #18
    5988:	4620      	mov	r0, r4
    598a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    598e:	f7fd bffb 	b.w	3988 <d_make_comp>
    5992:	f7fe fc8d 	bl	42b0 <d_type>
    5996:	2300      	movs	r3, #0
    5998:	4602      	mov	r2, r0
    599a:	210c      	movs	r1, #12
    599c:	4620      	mov	r0, r4
    599e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    59a2:	f7fd bff1 	b.w	3988 <d_make_comp>
    59a6:	f7fe fc83 	bl	42b0 <d_type>
    59aa:	2300      	movs	r3, #0
    59ac:	4602      	mov	r2, r0
    59ae:	210d      	movs	r1, #13
    59b0:	4620      	mov	r0, r4
    59b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    59b6:	f7fd bfe7 	b.w	3988 <d_make_comp>
    59ba:	46b4      	mov	ip, r6
    59bc:	2100      	movs	r1, #0
    59be:	e004      	b.n	59ca <d_special_name+0x482>
    59c0:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    59c4:	b123      	cbz	r3, 59d0 <d_special_name+0x488>
    59c6:	2b24      	cmp	r3, #36	; 0x24
    59c8:	d002      	beq.n	59d0 <d_special_name+0x488>
    59ca:	3101      	adds	r1, #1
    59cc:	42a9      	cmp	r1, r5
    59ce:	dbf7      	blt.n	59c0 <d_special_name+0x478>
    59d0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
    59d4:	4283      	cmp	r3, r0
    59d6:	da1d      	bge.n	5a14 <d_special_name+0x4cc>
    59d8:	6920      	ldr	r0, [r4, #16]
    59da:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
    59de:	3301      	adds	r3, #1
    59e0:	6163      	str	r3, [r4, #20]
    59e2:	eb00 038c 	add.w	r3, r0, ip, lsl #2
    59e6:	e9c3 7701 	strd	r7, r7, [r3, #4]
    59ea:	f800 702c 	strb.w	r7, [r0, ip, lsl #2]
    59ee:	e9c3 6103 	strd	r6, r1, [r3, #12]
    59f2:	68e6      	ldr	r6, [r4, #12]
    59f4:	1a6d      	subs	r5, r5, r1
    59f6:	440e      	add	r6, r1
    59f8:	60e6      	str	r6, [r4, #12]
    59fa:	e616      	b.n	562a <d_special_name+0xe2>
    59fc:	461a      	mov	r2, r3
    59fe:	e61e      	b.n	563e <d_special_name+0xf6>
    5a00:	212e      	movs	r1, #46	; 0x2e
    5a02:	e5fe      	b.n	5602 <d_special_name+0xba>
    5a04:	212f      	movs	r1, #47	; 0x2f
    5a06:	e5fc      	b.n	5602 <d_special_name+0xba>
    5a08:	2100      	movs	r1, #0
    5a0a:	4620      	mov	r0, r4
    5a0c:	f7ff fd1e 	bl	544c <d_encoding.part.0>
    5a10:	4602      	mov	r2, r0
    5a12:	e6b4      	b.n	577e <d_special_name+0x236>
    5a14:	68e3      	ldr	r3, [r4, #12]
    5a16:	440b      	add	r3, r1
    5a18:	60e3      	str	r3, [r4, #12]
    5a1a:	e5cb      	b.n	55b4 <d_special_name+0x6c>
    5a1c:	2500      	movs	r5, #0
    5a1e:	e6cf      	b.n	57c0 <d_special_name+0x278>
    5a20:	4620      	mov	r0, r4
    5a22:	f7ff fd91 	bl	5548 <d_special_name>
    5a26:	4602      	mov	r2, r0
    5a28:	e73d      	b.n	58a6 <d_special_name+0x35e>
    5a2a:	4620      	mov	r0, r4
    5a2c:	f7ff fd8c 	bl	5548 <d_special_name>
    5a30:	4602      	mov	r2, r0
    5a32:	e752      	b.n	58da <d_special_name+0x392>
    5a34:	4620      	mov	r0, r4
    5a36:	f7ff fd87 	bl	5548 <d_special_name>
    5a3a:	4602      	mov	r2, r0
    5a3c:	e6e7      	b.n	580e <d_special_name+0x2c6>
    5a3e:	4620      	mov	r0, r4
    5a40:	f7ff fd82 	bl	5548 <d_special_name>
    5a44:	4602      	mov	r2, r0
    5a46:	e793      	b.n	5970 <d_special_name+0x428>

00005a48 <d_expr_primary>:
    5a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5a4a:	68c2      	ldr	r2, [r0, #12]
    5a4c:	7813      	ldrb	r3, [r2, #0]
    5a4e:	2b4c      	cmp	r3, #76	; 0x4c
    5a50:	d132      	bne.n	5ab8 <d_expr_primary+0x70>
    5a52:	1c53      	adds	r3, r2, #1
    5a54:	60c3      	str	r3, [r0, #12]
    5a56:	7851      	ldrb	r1, [r2, #1]
    5a58:	4604      	mov	r4, r0
    5a5a:	295f      	cmp	r1, #95	; 0x5f
    5a5c:	d051      	beq.n	5b02 <d_expr_primary+0xba>
    5a5e:	295a      	cmp	r1, #90	; 0x5a
    5a60:	d113      	bne.n	5a8a <d_expr_primary+0x42>
    5a62:	1c5a      	adds	r2, r3, #1
    5a64:	60e2      	str	r2, [r4, #12]
    5a66:	785b      	ldrb	r3, [r3, #1]
    5a68:	2b47      	cmp	r3, #71	; 0x47
    5a6a:	d043      	beq.n	5af4 <d_expr_primary+0xac>
    5a6c:	2b54      	cmp	r3, #84	; 0x54
    5a6e:	d041      	beq.n	5af4 <d_expr_primary+0xac>
    5a70:	2100      	movs	r1, #0
    5a72:	4620      	mov	r0, r4
    5a74:	f7ff fcea 	bl	544c <d_encoding.part.0>
    5a78:	4606      	mov	r6, r0
    5a7a:	68e3      	ldr	r3, [r4, #12]
    5a7c:	781a      	ldrb	r2, [r3, #0]
    5a7e:	2a45      	cmp	r2, #69	; 0x45
    5a80:	d11a      	bne.n	5ab8 <d_expr_primary+0x70>
    5a82:	3301      	adds	r3, #1
    5a84:	4630      	mov	r0, r6
    5a86:	60e3      	str	r3, [r4, #12]
    5a88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5a8a:	f7fe fc11 	bl	42b0 <d_type>
    5a8e:	4606      	mov	r6, r0
    5a90:	b190      	cbz	r0, 5ab8 <d_expr_primary+0x70>
    5a92:	7803      	ldrb	r3, [r0, #0]
    5a94:	2b27      	cmp	r3, #39	; 0x27
    5a96:	d012      	beq.n	5abe <d_expr_primary+0x76>
    5a98:	68e2      	ldr	r2, [r4, #12]
    5a9a:	7815      	ldrb	r5, [r2, #0]
    5a9c:	2d6e      	cmp	r5, #110	; 0x6e
    5a9e:	d023      	beq.n	5ae8 <d_expr_primary+0xa0>
    5aa0:	213d      	movs	r1, #61	; 0x3d
    5aa2:	2d45      	cmp	r5, #69	; 0x45
    5aa4:	d059      	beq.n	5b5a <d_expr_primary+0x112>
    5aa6:	4613      	mov	r3, r2
    5aa8:	e003      	b.n	5ab2 <d_expr_primary+0x6a>
    5aaa:	60e3      	str	r3, [r4, #12]
    5aac:	781d      	ldrb	r5, [r3, #0]
    5aae:	2d45      	cmp	r5, #69	; 0x45
    5ab0:	d02f      	beq.n	5b12 <d_expr_primary+0xca>
    5ab2:	3301      	adds	r3, #1
    5ab4:	2d00      	cmp	r5, #0
    5ab6:	d1f8      	bne.n	5aaa <d_expr_primary+0x62>
    5ab8:	2600      	movs	r6, #0
    5aba:	4630      	mov	r0, r6
    5abc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5abe:	68c3      	ldr	r3, [r0, #12]
    5ac0:	7c1a      	ldrb	r2, [r3, #16]
    5ac2:	b11a      	cbz	r2, 5acc <d_expr_primary+0x84>
    5ac4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    5ac6:	6859      	ldr	r1, [r3, #4]
    5ac8:	1a52      	subs	r2, r2, r1
    5aca:	62e2      	str	r2, [r4, #44]	; 0x2c
    5acc:	4925      	ldr	r1, [pc, #148]	; (5b64 <d_expr_primary+0x11c>)
    5ace:	6818      	ldr	r0, [r3, #0]
    5ad0:	f007 fce8 	bl	d4a4 <strcmp>
    5ad4:	2800      	cmp	r0, #0
    5ad6:	d1df      	bne.n	5a98 <d_expr_primary+0x50>
    5ad8:	68e2      	ldr	r2, [r4, #12]
    5ada:	7815      	ldrb	r5, [r2, #0]
    5adc:	2d45      	cmp	r5, #69	; 0x45
    5ade:	d03e      	beq.n	5b5e <d_expr_primary+0x116>
    5ae0:	2d6e      	cmp	r5, #110	; 0x6e
    5ae2:	d001      	beq.n	5ae8 <d_expr_primary+0xa0>
    5ae4:	213d      	movs	r1, #61	; 0x3d
    5ae6:	e7de      	b.n	5aa6 <d_expr_primary+0x5e>
    5ae8:	1c53      	adds	r3, r2, #1
    5aea:	60e3      	str	r3, [r4, #12]
    5aec:	7855      	ldrb	r5, [r2, #1]
    5aee:	213e      	movs	r1, #62	; 0x3e
    5af0:	461a      	mov	r2, r3
    5af2:	e7d6      	b.n	5aa2 <d_expr_primary+0x5a>
    5af4:	4620      	mov	r0, r4
    5af6:	f7ff fd27 	bl	5548 <d_special_name>
    5afa:	68e3      	ldr	r3, [r4, #12]
    5afc:	4606      	mov	r6, r0
    5afe:	781a      	ldrb	r2, [r3, #0]
    5b00:	e7bd      	b.n	5a7e <d_expr_primary+0x36>
    5b02:	1c93      	adds	r3, r2, #2
    5b04:	60c3      	str	r3, [r0, #12]
    5b06:	7892      	ldrb	r2, [r2, #2]
    5b08:	2a5a      	cmp	r2, #90	; 0x5a
    5b0a:	bf18      	it	ne
    5b0c:	2600      	movne	r6, #0
    5b0e:	d1b6      	bne.n	5a7e <d_expr_primary+0x36>
    5b10:	e7a7      	b.n	5a62 <d_expr_primary+0x1a>
    5b12:	1a9d      	subs	r5, r3, r2
    5b14:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
    5b18:	4298      	cmp	r0, r3
    5b1a:	da1c      	bge.n	5b56 <d_expr_primary+0x10e>
    5b1c:	2700      	movs	r7, #0
    5b1e:	f8d4 e010 	ldr.w	lr, [r4, #16]
    5b22:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
    5b26:	eb0e 038c 	add.w	r3, lr, ip, lsl #2
    5b2a:	3001      	adds	r0, #1
    5b2c:	42bd      	cmp	r5, r7
    5b2e:	e9c3 7701 	strd	r7, r7, [r3, #4]
    5b32:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
    5b36:	6160      	str	r0, [r4, #20]
    5b38:	dd0d      	ble.n	5b56 <d_expr_primary+0x10e>
    5b3a:	e9c3 7701 	strd	r7, r7, [r3, #4]
    5b3e:	f80e 700c 	strb.w	r7, [lr, ip]
    5b42:	e9c3 2503 	strd	r2, r5, [r3, #12]
    5b46:	4632      	mov	r2, r6
    5b48:	4620      	mov	r0, r4
    5b4a:	f7fd ff1d 	bl	3988 <d_make_comp>
    5b4e:	68e3      	ldr	r3, [r4, #12]
    5b50:	4606      	mov	r6, r0
    5b52:	781a      	ldrb	r2, [r3, #0]
    5b54:	e793      	b.n	5a7e <d_expr_primary+0x36>
    5b56:	2300      	movs	r3, #0
    5b58:	e7f5      	b.n	5b46 <d_expr_primary+0xfe>
    5b5a:	2500      	movs	r5, #0
    5b5c:	e7da      	b.n	5b14 <d_expr_primary+0xcc>
    5b5e:	3201      	adds	r2, #1
    5b60:	60e2      	str	r2, [r4, #12]
    5b62:	e7aa      	b.n	5aba <d_expr_primary+0x72>
    5b64:	00019168 	.word	0x00019168

00005b68 <d_expression_1>:
    5b68:	68c2      	ldr	r2, [r0, #12]
    5b6a:	7813      	ldrb	r3, [r2, #0]
    5b6c:	2b4c      	cmp	r3, #76	; 0x4c
    5b6e:	f000 80a4 	beq.w	5cba <d_expression_1+0x152>
    5b72:	2b54      	cmp	r3, #84	; 0x54
    5b74:	f000 80a2 	beq.w	5cbc <d_expression_1+0x154>
    5b78:	2b73      	cmp	r3, #115	; 0x73
    5b7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    5b7e:	4604      	mov	r4, r0
    5b80:	d065      	beq.n	5c4e <d_expression_1+0xe6>
    5b82:	2b66      	cmp	r3, #102	; 0x66
    5b84:	d033      	beq.n	5bee <d_expression_1+0x86>
    5b86:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    5b8a:	2909      	cmp	r1, #9
    5b8c:	d80e      	bhi.n	5bac <d_expression_1+0x44>
    5b8e:	4620      	mov	r0, r4
    5b90:	f7ff f8d4 	bl	4d3c <d_unqualified_name>
    5b94:	4605      	mov	r5, r0
    5b96:	2800      	cmp	r0, #0
    5b98:	f000 808b 	beq.w	5cb2 <d_expression_1+0x14a>
    5b9c:	68e3      	ldr	r3, [r4, #12]
    5b9e:	781a      	ldrb	r2, [r3, #0]
    5ba0:	2a49      	cmp	r2, #73	; 0x49
    5ba2:	f000 808d 	beq.w	5cc0 <d_expression_1+0x158>
    5ba6:	4628      	mov	r0, r5
    5ba8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5bac:	2b6f      	cmp	r3, #111	; 0x6f
    5bae:	d05f      	beq.n	5c70 <d_expression_1+0x108>
    5bb0:	2b69      	cmp	r3, #105	; 0x69
    5bb2:	f040 8092 	bne.w	5cda <d_expression_1+0x172>
    5bb6:	7853      	ldrb	r3, [r2, #1]
    5bb8:	2b6c      	cmp	r3, #108	; 0x6c
    5bba:	f000 80b1 	beq.w	5d20 <d_expression_1+0x1b8>
    5bbe:	4620      	mov	r0, r4
    5bc0:	f7fe ffa0 	bl	4b04 <d_operator_name>
    5bc4:	4605      	mov	r5, r0
    5bc6:	2800      	cmp	r0, #0
    5bc8:	d073      	beq.n	5cb2 <d_expression_1+0x14a>
    5bca:	7803      	ldrb	r3, [r0, #0]
    5bcc:	2b32      	cmp	r3, #50	; 0x32
    5bce:	d055      	beq.n	5c7c <d_expression_1+0x114>
    5bd0:	2b34      	cmp	r3, #52	; 0x34
    5bd2:	f000 81a9 	beq.w	5f28 <d_expression_1+0x3c0>
    5bd6:	d86c      	bhi.n	5cb2 <d_expression_1+0x14a>
    5bd8:	2b33      	cmp	r3, #51	; 0x33
    5bda:	d16a      	bne.n	5cb2 <d_expression_1+0x14a>
    5bdc:	68c3      	ldr	r3, [r0, #12]
    5bde:	2b03      	cmp	r3, #3
    5be0:	d867      	bhi.n	5cb2 <d_expression_1+0x14a>
    5be2:	e8df f013 	tbh	[pc, r3, lsl #1]
    5be6:	00e6      	.short	0x00e6
    5be8:	006600ee 	.word	0x006600ee
    5bec:	0066      	.short	0x0066
    5bee:	7853      	ldrb	r3, [r2, #1]
    5bf0:	2b70      	cmp	r3, #112	; 0x70
    5bf2:	d1e4      	bne.n	5bbe <d_expression_1+0x56>
    5bf4:	1c93      	adds	r3, r2, #2
    5bf6:	60c3      	str	r3, [r0, #12]
    5bf8:	7893      	ldrb	r3, [r2, #2]
    5bfa:	2b54      	cmp	r3, #84	; 0x54
    5bfc:	f000 813a 	beq.w	5e74 <d_expression_1+0x30c>
    5c00:	2b5f      	cmp	r3, #95	; 0x5f
    5c02:	f000 80b6 	beq.w	5d72 <d_expression_1+0x20a>
    5c06:	2b6e      	cmp	r3, #110	; 0x6e
    5c08:	d053      	beq.n	5cb2 <d_expression_1+0x14a>
    5c0a:	f7fd ff07 	bl	3a1c <d_number>
    5c0e:	1c41      	adds	r1, r0, #1
    5c10:	d44f      	bmi.n	5cb2 <d_expression_1+0x14a>
    5c12:	68e3      	ldr	r3, [r4, #12]
    5c14:	781a      	ldrb	r2, [r3, #0]
    5c16:	2a5f      	cmp	r2, #95	; 0x5f
    5c18:	d14b      	bne.n	5cb2 <d_expression_1+0x14a>
    5c1a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
    5c1e:	3301      	adds	r3, #1
    5c20:	4291      	cmp	r1, r2
    5c22:	60e3      	str	r3, [r4, #12]
    5c24:	d045      	beq.n	5cb2 <d_expression_1+0x14a>
    5c26:	3002      	adds	r0, #2
    5c28:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    5c2c:	4293      	cmp	r3, r2
    5c2e:	da40      	bge.n	5cb2 <d_expression_1+0x14a>
    5c30:	2600      	movs	r6, #0
    5c32:	2706      	movs	r7, #6
    5c34:	6922      	ldr	r2, [r4, #16]
    5c36:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    5c3a:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    5c3e:	3301      	adds	r3, #1
    5c40:	e9c5 6601 	strd	r6, r6, [r5, #4]
    5c44:	6163      	str	r3, [r4, #20]
    5c46:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    5c4a:	60e8      	str	r0, [r5, #12]
    5c4c:	e7ab      	b.n	5ba6 <d_expression_1+0x3e>
    5c4e:	7853      	ldrb	r3, [r2, #1]
    5c50:	2b72      	cmp	r3, #114	; 0x72
    5c52:	d050      	beq.n	5cf6 <d_expression_1+0x18e>
    5c54:	2b70      	cmp	r3, #112	; 0x70
    5c56:	d1b2      	bne.n	5bbe <d_expression_1+0x56>
    5c58:	3202      	adds	r2, #2
    5c5a:	60c2      	str	r2, [r0, #12]
    5c5c:	f7ff ff84 	bl	5b68 <d_expression_1>
    5c60:	2300      	movs	r3, #0
    5c62:	4602      	mov	r2, r0
    5c64:	214b      	movs	r1, #75	; 0x4b
    5c66:	4620      	mov	r0, r4
    5c68:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5c6c:	f7fd be8c 	b.w	3988 <d_make_comp>
    5c70:	7853      	ldrb	r3, [r2, #1]
    5c72:	2b6e      	cmp	r3, #110	; 0x6e
    5c74:	d1a3      	bne.n	5bbe <d_expression_1+0x56>
    5c76:	3202      	adds	r2, #2
    5c78:	60c2      	str	r2, [r0, #12]
    5c7a:	e788      	b.n	5b8e <d_expression_1+0x26>
    5c7c:	68c1      	ldr	r1, [r0, #12]
    5c7e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5c80:	688a      	ldr	r2, [r1, #8]
    5c82:	680e      	ldr	r6, [r1, #0]
    5c84:	3a02      	subs	r2, #2
    5c86:	4413      	add	r3, r2
    5c88:	62e3      	str	r3, [r4, #44]	; 0x2c
    5c8a:	7833      	ldrb	r3, [r6, #0]
    5c8c:	2b73      	cmp	r3, #115	; 0x73
    5c8e:	d15c      	bne.n	5d4a <d_expression_1+0x1e2>
    5c90:	7872      	ldrb	r2, [r6, #1]
    5c92:	2a74      	cmp	r2, #116	; 0x74
    5c94:	d159      	bne.n	5d4a <d_expression_1+0x1e2>
    5c96:	78b2      	ldrb	r2, [r6, #2]
    5c98:	2a00      	cmp	r2, #0
    5c9a:	d156      	bne.n	5d4a <d_expression_1+0x1e2>
    5c9c:	4620      	mov	r0, r4
    5c9e:	f7fe fb07 	bl	42b0 <d_type>
    5ca2:	4603      	mov	r3, r0
    5ca4:	462a      	mov	r2, r5
    5ca6:	4620      	mov	r0, r4
    5ca8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5cac:	2137      	movs	r1, #55	; 0x37
    5cae:	f7fd be6b 	b.w	3988 <d_make_comp>
    5cb2:	2500      	movs	r5, #0
    5cb4:	4628      	mov	r0, r5
    5cb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5cba:	e6c5      	b.n	5a48 <d_expr_primary>
    5cbc:	f7fe b8da 	b.w	3e74 <d_template_param>
    5cc0:	3301      	adds	r3, #1
    5cc2:	60e3      	str	r3, [r4, #12]
    5cc4:	4620      	mov	r0, r4
    5cc6:	f000 fa81 	bl	61cc <d_template_args_1>
    5cca:	462a      	mov	r2, r5
    5ccc:	4603      	mov	r3, r0
    5cce:	2104      	movs	r1, #4
    5cd0:	4620      	mov	r0, r4
    5cd2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5cd6:	f7fd be57 	b.w	3988 <d_make_comp>
    5cda:	2b74      	cmp	r3, #116	; 0x74
    5cdc:	f47f af6f 	bne.w	5bbe <d_expression_1+0x56>
    5ce0:	7853      	ldrb	r3, [r2, #1]
    5ce2:	2b6c      	cmp	r3, #108	; 0x6c
    5ce4:	f47f af6b 	bne.w	5bbe <d_expression_1+0x56>
    5ce8:	3202      	adds	r2, #2
    5cea:	60e2      	str	r2, [r4, #12]
    5cec:	f7fe fae0 	bl	42b0 <d_type>
    5cf0:	68e2      	ldr	r2, [r4, #12]
    5cf2:	4605      	mov	r5, r0
    5cf4:	e017      	b.n	5d26 <d_expression_1+0x1be>
    5cf6:	3202      	adds	r2, #2
    5cf8:	60c2      	str	r2, [r0, #12]
    5cfa:	f7fe fad9 	bl	42b0 <d_type>
    5cfe:	4605      	mov	r5, r0
    5d00:	4620      	mov	r0, r4
    5d02:	f7ff f81b 	bl	4d3c <d_unqualified_name>
    5d06:	68e3      	ldr	r3, [r4, #12]
    5d08:	4606      	mov	r6, r0
    5d0a:	781a      	ldrb	r2, [r3, #0]
    5d0c:	2a49      	cmp	r2, #73	; 0x49
    5d0e:	d023      	beq.n	5d58 <d_expression_1+0x1f0>
    5d10:	4603      	mov	r3, r0
    5d12:	462a      	mov	r2, r5
    5d14:	4620      	mov	r0, r4
    5d16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5d1a:	2101      	movs	r1, #1
    5d1c:	f7fd be34 	b.w	3988 <d_make_comp>
    5d20:	2500      	movs	r5, #0
    5d22:	3202      	adds	r2, #2
    5d24:	60e2      	str	r2, [r4, #12]
    5d26:	7811      	ldrb	r1, [r2, #0]
    5d28:	2900      	cmp	r1, #0
    5d2a:	d0c2      	beq.n	5cb2 <d_expression_1+0x14a>
    5d2c:	7853      	ldrb	r3, [r2, #1]
    5d2e:	2b00      	cmp	r3, #0
    5d30:	d0bf      	beq.n	5cb2 <d_expression_1+0x14a>
    5d32:	2145      	movs	r1, #69	; 0x45
    5d34:	4620      	mov	r0, r4
    5d36:	f000 f939 	bl	5fac <d_exprlist>
    5d3a:	462a      	mov	r2, r5
    5d3c:	4603      	mov	r3, r0
    5d3e:	2131      	movs	r1, #49	; 0x31
    5d40:	4620      	mov	r0, r4
    5d42:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5d46:	f7fd be1f 	b.w	3988 <d_make_comp>
    5d4a:	68cf      	ldr	r7, [r1, #12]
    5d4c:	2f03      	cmp	r7, #3
    5d4e:	d8b0      	bhi.n	5cb2 <d_expression_1+0x14a>
    5d50:	e8df f007 	tbb	[pc, r7]
    5d54:	3c66132f 	.word	0x3c66132f
    5d58:	3301      	adds	r3, #1
    5d5a:	60e3      	str	r3, [r4, #12]
    5d5c:	4620      	mov	r0, r4
    5d5e:	f000 fa35 	bl	61cc <d_template_args_1>
    5d62:	4632      	mov	r2, r6
    5d64:	4603      	mov	r3, r0
    5d66:	2104      	movs	r1, #4
    5d68:	4620      	mov	r0, r4
    5d6a:	f7fd fe0d 	bl	3988 <d_make_comp>
    5d6e:	4603      	mov	r3, r0
    5d70:	e7cf      	b.n	5d12 <d_expression_1+0x1aa>
    5d72:	3203      	adds	r2, #3
    5d74:	2001      	movs	r0, #1
    5d76:	60e2      	str	r2, [r4, #12]
    5d78:	e756      	b.n	5c28 <d_expression_1+0xc0>
    5d7a:	7832      	ldrb	r2, [r6, #0]
    5d7c:	2a70      	cmp	r2, #112	; 0x70
    5d7e:	f000 8082 	beq.w	5e86 <d_expression_1+0x31e>
    5d82:	2a6d      	cmp	r2, #109	; 0x6d
    5d84:	d07f      	beq.n	5e86 <d_expression_1+0x31e>
    5d86:	2700      	movs	r7, #0
    5d88:	2b73      	cmp	r3, #115	; 0x73
    5d8a:	d177      	bne.n	5e7c <d_expression_1+0x314>
    5d8c:	7873      	ldrb	r3, [r6, #1]
    5d8e:	2b50      	cmp	r3, #80	; 0x50
    5d90:	d174      	bne.n	5e7c <d_expression_1+0x314>
    5d92:	78b3      	ldrb	r3, [r6, #2]
    5d94:	2b00      	cmp	r3, #0
    5d96:	d171      	bne.n	5e7c <d_expression_1+0x314>
    5d98:	4620      	mov	r0, r4
    5d9a:	f000 fa17 	bl	61cc <d_template_args_1>
    5d9e:	4603      	mov	r3, r0
    5da0:	2f00      	cmp	r7, #0
    5da2:	f43f af7f 	beq.w	5ca4 <d_expression_1+0x13c>
    5da6:	461a      	mov	r2, r3
    5da8:	2139      	movs	r1, #57	; 0x39
    5daa:	4620      	mov	r0, r4
    5dac:	f7fd fdec 	bl	3988 <d_make_comp>
    5db0:	e777      	b.n	5ca2 <d_expression_1+0x13a>
    5db2:	462a      	mov	r2, r5
    5db4:	4620      	mov	r0, r4
    5db6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5dba:	2300      	movs	r3, #0
    5dbc:	2136      	movs	r1, #54	; 0x36
    5dbe:	f7fd bde3 	b.w	3988 <d_make_comp>
    5dc2:	4620      	mov	r0, r4
    5dc4:	f7ff fed0 	bl	5b68 <d_expression_1>
    5dc8:	4603      	mov	r3, r0
    5dca:	e76b      	b.n	5ca4 <d_expression_1+0x13c>
    5dcc:	2b71      	cmp	r3, #113	; 0x71
    5dce:	d168      	bne.n	5ea2 <d_expression_1+0x33a>
    5dd0:	7873      	ldrb	r3, [r6, #1]
    5dd2:	2b75      	cmp	r3, #117	; 0x75
    5dd4:	d165      	bne.n	5ea2 <d_expression_1+0x33a>
    5dd6:	78b3      	ldrb	r3, [r6, #2]
    5dd8:	2b00      	cmp	r3, #0
    5dda:	d162      	bne.n	5ea2 <d_expression_1+0x33a>
    5ddc:	4620      	mov	r0, r4
    5dde:	f7ff fec3 	bl	5b68 <d_expression_1>
    5de2:	4606      	mov	r6, r0
    5de4:	4620      	mov	r0, r4
    5de6:	f7ff febf 	bl	5b68 <d_expression_1>
    5dea:	4607      	mov	r7, r0
    5dec:	4620      	mov	r0, r4
    5dee:	f7ff febb 	bl	5b68 <d_expression_1>
    5df2:	4603      	mov	r3, r0
    5df4:	2800      	cmp	r0, #0
    5df6:	f43f af5c 	beq.w	5cb2 <d_expression_1+0x14a>
    5dfa:	463a      	mov	r2, r7
    5dfc:	213c      	movs	r1, #60	; 0x3c
    5dfe:	4620      	mov	r0, r4
    5e00:	f7fd fdc2 	bl	3988 <d_make_comp>
    5e04:	4632      	mov	r2, r6
    5e06:	4603      	mov	r3, r0
    5e08:	213b      	movs	r1, #59	; 0x3b
    5e0a:	4620      	mov	r0, r4
    5e0c:	f7fd fdbc 	bl	3988 <d_make_comp>
    5e10:	462a      	mov	r2, r5
    5e12:	4603      	mov	r3, r0
    5e14:	213a      	movs	r1, #58	; 0x3a
    5e16:	4620      	mov	r0, r4
    5e18:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5e1c:	f7fd bdb4 	b.w	3988 <d_make_comp>
    5e20:	68eb      	ldr	r3, [r5, #12]
    5e22:	681b      	ldr	r3, [r3, #0]
    5e24:	785a      	ldrb	r2, [r3, #1]
    5e26:	2a63      	cmp	r2, #99	; 0x63
    5e28:	f000 8092 	beq.w	5f50 <d_expression_1+0x3e8>
    5e2c:	7833      	ldrb	r3, [r6, #0]
    5e2e:	2b66      	cmp	r3, #102	; 0x66
    5e30:	f000 809c 	beq.w	5f6c <d_expression_1+0x404>
    5e34:	4620      	mov	r0, r4
    5e36:	f7ff fe97 	bl	5b68 <d_expression_1>
    5e3a:	4607      	mov	r7, r0
    5e3c:	7833      	ldrb	r3, [r6, #0]
    5e3e:	2b63      	cmp	r3, #99	; 0x63
    5e40:	d156      	bne.n	5ef0 <d_expression_1+0x388>
    5e42:	7872      	ldrb	r2, [r6, #1]
    5e44:	2a6c      	cmp	r2, #108	; 0x6c
    5e46:	d153      	bne.n	5ef0 <d_expression_1+0x388>
    5e48:	78b2      	ldrb	r2, [r6, #2]
    5e4a:	2a00      	cmp	r2, #0
    5e4c:	d150      	bne.n	5ef0 <d_expression_1+0x388>
    5e4e:	2145      	movs	r1, #69	; 0x45
    5e50:	4620      	mov	r0, r4
    5e52:	f000 f8ab 	bl	5fac <d_exprlist>
    5e56:	4606      	mov	r6, r0
    5e58:	4633      	mov	r3, r6
    5e5a:	463a      	mov	r2, r7
    5e5c:	2139      	movs	r1, #57	; 0x39
    5e5e:	4620      	mov	r0, r4
    5e60:	f7fd fd92 	bl	3988 <d_make_comp>
    5e64:	462a      	mov	r2, r5
    5e66:	4603      	mov	r3, r0
    5e68:	2138      	movs	r1, #56	; 0x38
    5e6a:	4620      	mov	r0, r4
    5e6c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5e70:	f7fd bd8a 	b.w	3988 <d_make_comp>
    5e74:	3203      	adds	r2, #3
    5e76:	2000      	movs	r0, #0
    5e78:	60e2      	str	r2, [r4, #12]
    5e7a:	e6d5      	b.n	5c28 <d_expression_1+0xc0>
    5e7c:	4620      	mov	r0, r4
    5e7e:	f7ff fe73 	bl	5b68 <d_expression_1>
    5e82:	4603      	mov	r3, r0
    5e84:	e78c      	b.n	5da0 <d_expression_1+0x238>
    5e86:	7871      	ldrb	r1, [r6, #1]
    5e88:	4291      	cmp	r1, r2
    5e8a:	f47f af7c 	bne.w	5d86 <d_expression_1+0x21e>
    5e8e:	68e2      	ldr	r2, [r4, #12]
    5e90:	7811      	ldrb	r1, [r2, #0]
    5e92:	295f      	cmp	r1, #95	; 0x5f
    5e94:	f47f af78 	bne.w	5d88 <d_expression_1+0x220>
    5e98:	3201      	adds	r2, #1
    5e9a:	60e2      	str	r2, [r4, #12]
    5e9c:	2700      	movs	r7, #0
    5e9e:	7833      	ldrb	r3, [r6, #0]
    5ea0:	e772      	b.n	5d88 <d_expression_1+0x220>
    5ea2:	7833      	ldrb	r3, [r6, #0]
    5ea4:	2b66      	cmp	r3, #102	; 0x66
    5ea6:	d06d      	beq.n	5f84 <d_expression_1+0x41c>
    5ea8:	2b6e      	cmp	r3, #110	; 0x6e
    5eaa:	f47f af02 	bne.w	5cb2 <d_expression_1+0x14a>
    5eae:	7873      	ldrb	r3, [r6, #1]
    5eb0:	2b77      	cmp	r3, #119	; 0x77
    5eb2:	d002      	beq.n	5eba <d_expression_1+0x352>
    5eb4:	2b61      	cmp	r3, #97	; 0x61
    5eb6:	f47f aefc 	bne.w	5cb2 <d_expression_1+0x14a>
    5eba:	215f      	movs	r1, #95	; 0x5f
    5ebc:	4620      	mov	r0, r4
    5ebe:	f000 f875 	bl	5fac <d_exprlist>
    5ec2:	4606      	mov	r6, r0
    5ec4:	4620      	mov	r0, r4
    5ec6:	f7fe f9f3 	bl	42b0 <d_type>
    5eca:	68e3      	ldr	r3, [r4, #12]
    5ecc:	4607      	mov	r7, r0
    5ece:	781a      	ldrb	r2, [r3, #0]
    5ed0:	2a45      	cmp	r2, #69	; 0x45
    5ed2:	d067      	beq.n	5fa4 <d_expression_1+0x43c>
    5ed4:	2a70      	cmp	r2, #112	; 0x70
    5ed6:	d059      	beq.n	5f8c <d_expression_1+0x424>
    5ed8:	2a69      	cmp	r2, #105	; 0x69
    5eda:	f47f aeea 	bne.w	5cb2 <d_expression_1+0x14a>
    5ede:	785b      	ldrb	r3, [r3, #1]
    5ee0:	2b6c      	cmp	r3, #108	; 0x6c
    5ee2:	f47f aee6 	bne.w	5cb2 <d_expression_1+0x14a>
    5ee6:	4620      	mov	r0, r4
    5ee8:	f7ff fe3e 	bl	5b68 <d_expression_1>
    5eec:	4603      	mov	r3, r0
    5eee:	e784      	b.n	5dfa <d_expression_1+0x292>
    5ef0:	2b64      	cmp	r3, #100	; 0x64
    5ef2:	d126      	bne.n	5f42 <d_expression_1+0x3da>
    5ef4:	7872      	ldrb	r2, [r6, #1]
    5ef6:	2a74      	cmp	r2, #116	; 0x74
    5ef8:	d123      	bne.n	5f42 <d_expression_1+0x3da>
    5efa:	78b2      	ldrb	r2, [r6, #2]
    5efc:	bb0a      	cbnz	r2, 5f42 <d_expression_1+0x3da>
    5efe:	4620      	mov	r0, r4
    5f00:	f7fe ff1c 	bl	4d3c <d_unqualified_name>
    5f04:	68e3      	ldr	r3, [r4, #12]
    5f06:	4606      	mov	r6, r0
    5f08:	781a      	ldrb	r2, [r3, #0]
    5f0a:	2a49      	cmp	r2, #73	; 0x49
    5f0c:	d1a4      	bne.n	5e58 <d_expression_1+0x2f0>
    5f0e:	3301      	adds	r3, #1
    5f10:	60e3      	str	r3, [r4, #12]
    5f12:	4620      	mov	r0, r4
    5f14:	f000 f95a 	bl	61cc <d_template_args_1>
    5f18:	4632      	mov	r2, r6
    5f1a:	4603      	mov	r3, r0
    5f1c:	2104      	movs	r1, #4
    5f1e:	4620      	mov	r0, r4
    5f20:	f7fd fd32 	bl	3988 <d_make_comp>
    5f24:	4606      	mov	r6, r0
    5f26:	e797      	b.n	5e58 <d_expression_1+0x2f0>
    5f28:	68e3      	ldr	r3, [r4, #12]
    5f2a:	781a      	ldrb	r2, [r3, #0]
    5f2c:	2a5f      	cmp	r2, #95	; 0x5f
    5f2e:	f47f af48 	bne.w	5dc2 <d_expression_1+0x25a>
    5f32:	3301      	adds	r3, #1
    5f34:	60e3      	str	r3, [r4, #12]
    5f36:	2145      	movs	r1, #69	; 0x45
    5f38:	4620      	mov	r0, r4
    5f3a:	f000 f837 	bl	5fac <d_exprlist>
    5f3e:	4603      	mov	r3, r0
    5f40:	e6b0      	b.n	5ca4 <d_expression_1+0x13c>
    5f42:	2b70      	cmp	r3, #112	; 0x70
    5f44:	d017      	beq.n	5f76 <d_expression_1+0x40e>
    5f46:	4620      	mov	r0, r4
    5f48:	f7ff fe0e 	bl	5b68 <d_expression_1>
    5f4c:	4606      	mov	r6, r0
    5f4e:	e783      	b.n	5e58 <d_expression_1+0x2f0>
    5f50:	781b      	ldrb	r3, [r3, #0]
    5f52:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
    5f56:	2a01      	cmp	r2, #1
    5f58:	d903      	bls.n	5f62 <d_expression_1+0x3fa>
    5f5a:	3b72      	subs	r3, #114	; 0x72
    5f5c:	2b01      	cmp	r3, #1
    5f5e:	f63f af65 	bhi.w	5e2c <d_expression_1+0x2c4>
    5f62:	4620      	mov	r0, r4
    5f64:	f7fe f9a4 	bl	42b0 <d_type>
    5f68:	4607      	mov	r7, r0
    5f6a:	e767      	b.n	5e3c <d_expression_1+0x2d4>
    5f6c:	4620      	mov	r0, r4
    5f6e:	f7fe fdc9 	bl	4b04 <d_operator_name>
    5f72:	4607      	mov	r7, r0
    5f74:	e762      	b.n	5e3c <d_expression_1+0x2d4>
    5f76:	7873      	ldrb	r3, [r6, #1]
    5f78:	2b74      	cmp	r3, #116	; 0x74
    5f7a:	d1e4      	bne.n	5f46 <d_expression_1+0x3de>
    5f7c:	78b3      	ldrb	r3, [r6, #2]
    5f7e:	2b00      	cmp	r3, #0
    5f80:	d0bd      	beq.n	5efe <d_expression_1+0x396>
    5f82:	e7e0      	b.n	5f46 <d_expression_1+0x3de>
    5f84:	4620      	mov	r0, r4
    5f86:	f7fe fdbd 	bl	4b04 <d_operator_name>
    5f8a:	e72a      	b.n	5de2 <d_expression_1+0x27a>
    5f8c:	785a      	ldrb	r2, [r3, #1]
    5f8e:	2a69      	cmp	r2, #105	; 0x69
    5f90:	f47f ae8f 	bne.w	5cb2 <d_expression_1+0x14a>
    5f94:	3302      	adds	r3, #2
    5f96:	60e3      	str	r3, [r4, #12]
    5f98:	2145      	movs	r1, #69	; 0x45
    5f9a:	4620      	mov	r0, r4
    5f9c:	f000 f806 	bl	5fac <d_exprlist>
    5fa0:	4603      	mov	r3, r0
    5fa2:	e72a      	b.n	5dfa <d_expression_1+0x292>
    5fa4:	3301      	adds	r3, #1
    5fa6:	60e3      	str	r3, [r4, #12]
    5fa8:	2300      	movs	r3, #0
    5faa:	e726      	b.n	5dfa <d_expression_1+0x292>

00005fac <d_exprlist>:
    5fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    5fb0:	460e      	mov	r6, r1
    5fb2:	2300      	movs	r3, #0
    5fb4:	68c2      	ldr	r2, [r0, #12]
    5fb6:	b082      	sub	sp, #8
    5fb8:	7811      	ldrb	r1, [r2, #0]
    5fba:	4604      	mov	r4, r0
    5fbc:	42b1      	cmp	r1, r6
    5fbe:	9301      	str	r3, [sp, #4]
    5fc0:	d024      	beq.n	600c <d_exprlist+0x60>
    5fc2:	2701      	movs	r7, #1
    5fc4:	ad01      	add	r5, sp, #4
    5fc6:	e00c      	b.n	5fe2 <d_exprlist+0x36>
    5fc8:	2300      	movs	r3, #0
    5fca:	212e      	movs	r1, #46	; 0x2e
    5fcc:	4620      	mov	r0, r4
    5fce:	f7fd fcdb 	bl	3988 <d_make_comp>
    5fd2:	6028      	str	r0, [r5, #0]
    5fd4:	f100 0510 	add.w	r5, r0, #16
    5fd8:	b170      	cbz	r0, 5ff8 <d_exprlist+0x4c>
    5fda:	68e3      	ldr	r3, [r4, #12]
    5fdc:	781a      	ldrb	r2, [r3, #0]
    5fde:	42b2      	cmp	r2, r6
    5fe0:	d00e      	beq.n	6000 <d_exprlist+0x54>
    5fe2:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
    5fe6:	4620      	mov	r0, r4
    5fe8:	6327      	str	r7, [r4, #48]	; 0x30
    5fea:	f7ff fdbd 	bl	5b68 <d_expression_1>
    5fee:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
    5ff2:	4602      	mov	r2, r0
    5ff4:	2800      	cmp	r0, #0
    5ff6:	d1e7      	bne.n	5fc8 <d_exprlist+0x1c>
    5ff8:	2000      	movs	r0, #0
    5ffa:	b002      	add	sp, #8
    5ffc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    6000:	9801      	ldr	r0, [sp, #4]
    6002:	3301      	adds	r3, #1
    6004:	60e3      	str	r3, [r4, #12]
    6006:	b002      	add	sp, #8
    6008:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    600c:	1c51      	adds	r1, r2, #1
    600e:	60c1      	str	r1, [r0, #12]
    6010:	461a      	mov	r2, r3
    6012:	212e      	movs	r1, #46	; 0x2e
    6014:	b002      	add	sp, #8
    6016:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    601a:	f7fd bcb5 	b.w	3988 <d_make_comp>
    601e:	bf00      	nop

00006020 <d_cv_qualifiers>:
    6020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6024:	f1b2 0900 	subs.w	r9, r2, #0
    6028:	68c2      	ldr	r2, [r0, #12]
    602a:	460f      	mov	r7, r1
    602c:	460d      	mov	r5, r1
    602e:	f04f 0b01 	mov.w	fp, #1
    6032:	4604      	mov	r4, r0
    6034:	bf15      	itete	ne
    6036:	f04f 0a1e 	movne.w	sl, #30
    603a:	f04f 0a1b 	moveq.w	sl, #27
    603e:	f04f 081d 	movne.w	r8, #29
    6042:	f04f 081a 	moveq.w	r8, #26
    6046:	bf14      	ite	ne
    6048:	261c      	movne	r6, #28
    604a:	2619      	moveq	r6, #25
    604c:	7811      	ldrb	r1, [r2, #0]
    604e:	b083      	sub	sp, #12
    6050:	e01b      	b.n	608a <d_cv_qualifiers+0x6a>
    6052:	2956      	cmp	r1, #86	; 0x56
    6054:	d034      	beq.n	60c0 <d_cv_qualifiers+0xa0>
    6056:	294b      	cmp	r1, #75	; 0x4b
    6058:	d039      	beq.n	60ce <d_cv_qualifiers+0xae>
    605a:	7853      	ldrb	r3, [r2, #1]
    605c:	b35b      	cbz	r3, 60b6 <d_cv_qualifiers+0x96>
    605e:	1c93      	adds	r3, r2, #2
    6060:	60e3      	str	r3, [r4, #12]
    6062:	7851      	ldrb	r1, [r2, #1]
    6064:	2978      	cmp	r1, #120	; 0x78
    6066:	d052      	beq.n	610e <d_cv_qualifiers+0xee>
    6068:	296f      	cmp	r1, #111	; 0x6f
    606a:	d136      	bne.n	60da <d_cv_qualifiers+0xba>
    606c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    606e:	214f      	movs	r1, #79	; 0x4f
    6070:	3309      	adds	r3, #9
    6072:	62e3      	str	r3, [r4, #44]	; 0x2c
    6074:	2300      	movs	r3, #0
    6076:	2200      	movs	r2, #0
    6078:	4620      	mov	r0, r4
    607a:	f7fd fc85 	bl	3988 <d_make_comp>
    607e:	6028      	str	r0, [r5, #0]
    6080:	b1c8      	cbz	r0, 60b6 <d_cv_qualifiers+0x96>
    6082:	68e2      	ldr	r2, [r4, #12]
    6084:	f100 050c 	add.w	r5, r0, #12
    6088:	7811      	ldrb	r1, [r2, #0]
    608a:	4610      	mov	r0, r2
    608c:	f7fd fe20 	bl	3cd0 <next_is_type_qual.isra.0>
    6090:	2800      	cmp	r0, #0
    6092:	d042      	beq.n	611a <d_cv_qualifiers+0xfa>
    6094:	1c53      	adds	r3, r2, #1
    6096:	2972      	cmp	r1, #114	; 0x72
    6098:	60e3      	str	r3, [r4, #12]
    609a:	d1da      	bne.n	6052 <d_cv_qualifiers+0x32>
    609c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    609e:	4631      	mov	r1, r6
    60a0:	f103 0209 	add.w	r2, r3, #9
    60a4:	62e2      	str	r2, [r4, #44]	; 0x2c
    60a6:	2300      	movs	r3, #0
    60a8:	2200      	movs	r2, #0
    60aa:	4620      	mov	r0, r4
    60ac:	f7fd fc6c 	bl	3988 <d_make_comp>
    60b0:	6028      	str	r0, [r5, #0]
    60b2:	2800      	cmp	r0, #0
    60b4:	d1e5      	bne.n	6082 <d_cv_qualifiers+0x62>
    60b6:	2500      	movs	r5, #0
    60b8:	4628      	mov	r0, r5
    60ba:	b003      	add	sp, #12
    60bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    60c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    60c2:	4641      	mov	r1, r8
    60c4:	f103 0209 	add.w	r2, r3, #9
    60c8:	62e2      	str	r2, [r4, #44]	; 0x2c
    60ca:	2300      	movs	r3, #0
    60cc:	e7d3      	b.n	6076 <d_cv_qualifiers+0x56>
    60ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    60d0:	4651      	mov	r1, sl
    60d2:	1d9a      	adds	r2, r3, #6
    60d4:	62e2      	str	r2, [r4, #44]	; 0x2c
    60d6:	2300      	movs	r3, #0
    60d8:	e7cd      	b.n	6076 <d_cv_qualifiers+0x56>
    60da:	294f      	cmp	r1, #79	; 0x4f
    60dc:	d139      	bne.n	6152 <d_cv_qualifiers+0x132>
    60de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    60e0:	4620      	mov	r0, r4
    60e2:	3309      	adds	r3, #9
    60e4:	62e3      	str	r3, [r4, #44]	; 0x2c
    60e6:	6b23      	ldr	r3, [r4, #48]	; 0x30
    60e8:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
    60ec:	9101      	str	r1, [sp, #4]
    60ee:	9300      	str	r3, [sp, #0]
    60f0:	f7ff fd3a 	bl	5b68 <d_expression_1>
    60f4:	9b00      	ldr	r3, [sp, #0]
    60f6:	9901      	ldr	r1, [sp, #4]
    60f8:	6323      	str	r3, [r4, #48]	; 0x30
    60fa:	4603      	mov	r3, r0
    60fc:	2800      	cmp	r0, #0
    60fe:	d0da      	beq.n	60b6 <d_cv_qualifiers+0x96>
    6100:	68e2      	ldr	r2, [r4, #12]
    6102:	7810      	ldrb	r0, [r2, #0]
    6104:	2845      	cmp	r0, #69	; 0x45
    6106:	d1d6      	bne.n	60b6 <d_cv_qualifiers+0x96>
    6108:	3201      	adds	r2, #1
    610a:	60e2      	str	r2, [r4, #12]
    610c:	e7b3      	b.n	6076 <d_cv_qualifiers+0x56>
    610e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    6110:	214d      	movs	r1, #77	; 0x4d
    6112:	3311      	adds	r3, #17
    6114:	62e3      	str	r3, [r4, #44]	; 0x2c
    6116:	2300      	movs	r3, #0
    6118:	e7ad      	b.n	6076 <d_cv_qualifiers+0x56>
    611a:	f1b9 0f00 	cmp.w	r9, #0
    611e:	d1cb      	bne.n	60b8 <d_cv_qualifiers+0x98>
    6120:	2946      	cmp	r1, #70	; 0x46
    6122:	d1c9      	bne.n	60b8 <d_cv_qualifiers+0x98>
    6124:	42bd      	cmp	r5, r7
    6126:	d0c7      	beq.n	60b8 <d_cv_qualifiers+0x98>
    6128:	201d      	movs	r0, #29
    612a:	211e      	movs	r1, #30
    612c:	221c      	movs	r2, #28
    612e:	e004      	b.n	613a <d_cv_qualifiers+0x11a>
    6130:	2b19      	cmp	r3, #25
    6132:	d00c      	beq.n	614e <d_cv_qualifiers+0x12e>
    6134:	370c      	adds	r7, #12
    6136:	42bd      	cmp	r5, r7
    6138:	d0be      	beq.n	60b8 <d_cv_qualifiers+0x98>
    613a:	683f      	ldr	r7, [r7, #0]
    613c:	783b      	ldrb	r3, [r7, #0]
    613e:	2b1a      	cmp	r3, #26
    6140:	d003      	beq.n	614a <d_cv_qualifiers+0x12a>
    6142:	2b1b      	cmp	r3, #27
    6144:	d1f4      	bne.n	6130 <d_cv_qualifiers+0x110>
    6146:	7039      	strb	r1, [r7, #0]
    6148:	e7f4      	b.n	6134 <d_cv_qualifiers+0x114>
    614a:	7038      	strb	r0, [r7, #0]
    614c:	e7f2      	b.n	6134 <d_cv_qualifiers+0x114>
    614e:	703a      	strb	r2, [r7, #0]
    6150:	e7f0      	b.n	6134 <d_cv_qualifiers+0x114>
    6152:	2977      	cmp	r1, #119	; 0x77
    6154:	d1af      	bne.n	60b6 <d_cv_qualifiers+0x96>
    6156:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    6158:	4620      	mov	r0, r4
    615a:	3306      	adds	r3, #6
    615c:	62e3      	str	r3, [r4, #44]	; 0x2c
    615e:	f7fe fd55 	bl	4c0c <d_parmlist>
    6162:	4603      	mov	r3, r0
    6164:	2800      	cmp	r0, #0
    6166:	d0a6      	beq.n	60b6 <d_cv_qualifiers+0x96>
    6168:	68e2      	ldr	r2, [r4, #12]
    616a:	7811      	ldrb	r1, [r2, #0]
    616c:	2945      	cmp	r1, #69	; 0x45
    616e:	d1a2      	bne.n	60b6 <d_cv_qualifiers+0x96>
    6170:	3201      	adds	r2, #1
    6172:	2150      	movs	r1, #80	; 0x50
    6174:	60e2      	str	r2, [r4, #12]
    6176:	e77e      	b.n	6076 <d_cv_qualifiers+0x56>

00006178 <d_template_arg>:
    6178:	b538      	push	{r3, r4, r5, lr}
    617a:	68c2      	ldr	r2, [r0, #12]
    617c:	7813      	ldrb	r3, [r2, #0]
    617e:	2b4c      	cmp	r3, #76	; 0x4c
    6180:	d01f      	beq.n	61c2 <d_template_arg+0x4a>
    6182:	4604      	mov	r4, r0
    6184:	d807      	bhi.n	6196 <d_template_arg+0x1e>
    6186:	3b49      	subs	r3, #73	; 0x49
    6188:	2b01      	cmp	r3, #1
    618a:	d815      	bhi.n	61b8 <d_template_arg+0x40>
    618c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    6190:	3201      	adds	r2, #1
    6192:	60c2      	str	r2, [r0, #12]
    6194:	e01a      	b.n	61cc <d_template_args_1>
    6196:	2b58      	cmp	r3, #88	; 0x58
    6198:	d10e      	bne.n	61b8 <d_template_arg+0x40>
    619a:	2301      	movs	r3, #1
    619c:	441a      	add	r2, r3
    619e:	6b05      	ldr	r5, [r0, #48]	; 0x30
    61a0:	60c2      	str	r2, [r0, #12]
    61a2:	6303      	str	r3, [r0, #48]	; 0x30
    61a4:	f7ff fce0 	bl	5b68 <d_expression_1>
    61a8:	68e3      	ldr	r3, [r4, #12]
    61aa:	6325      	str	r5, [r4, #48]	; 0x30
    61ac:	781a      	ldrb	r2, [r3, #0]
    61ae:	2a45      	cmp	r2, #69	; 0x45
    61b0:	d10a      	bne.n	61c8 <d_template_arg+0x50>
    61b2:	3301      	adds	r3, #1
    61b4:	60e3      	str	r3, [r4, #12]
    61b6:	bd38      	pop	{r3, r4, r5, pc}
    61b8:	4620      	mov	r0, r4
    61ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    61be:	f7fe b877 	b.w	42b0 <d_type>
    61c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    61c6:	e43f      	b.n	5a48 <d_expr_primary>
    61c8:	2000      	movs	r0, #0
    61ca:	bd38      	pop	{r3, r4, r5, pc}

000061cc <d_template_args_1>:
    61cc:	b570      	push	{r4, r5, r6, lr}
    61ce:	68c2      	ldr	r2, [r0, #12]
    61d0:	4604      	mov	r4, r0
    61d2:	7813      	ldrb	r3, [r2, #0]
    61d4:	6a86      	ldr	r6, [r0, #40]	; 0x28
    61d6:	2b45      	cmp	r3, #69	; 0x45
    61d8:	b082      	sub	sp, #8
    61da:	f04f 0300 	mov.w	r3, #0
    61de:	d01e      	beq.n	621e <d_template_args_1+0x52>
    61e0:	ad01      	add	r5, sp, #4
    61e2:	9301      	str	r3, [sp, #4]
    61e4:	e00c      	b.n	6200 <d_template_args_1+0x34>
    61e6:	2300      	movs	r3, #0
    61e8:	212f      	movs	r1, #47	; 0x2f
    61ea:	4620      	mov	r0, r4
    61ec:	f7fd fbcc 	bl	3988 <d_make_comp>
    61f0:	6028      	str	r0, [r5, #0]
    61f2:	f100 0510 	add.w	r5, r0, #16
    61f6:	b148      	cbz	r0, 620c <d_template_args_1+0x40>
    61f8:	68e3      	ldr	r3, [r4, #12]
    61fa:	781a      	ldrb	r2, [r3, #0]
    61fc:	2a45      	cmp	r2, #69	; 0x45
    61fe:	d008      	beq.n	6212 <d_template_args_1+0x46>
    6200:	4620      	mov	r0, r4
    6202:	f7ff ffb9 	bl	6178 <d_template_arg>
    6206:	4602      	mov	r2, r0
    6208:	2800      	cmp	r0, #0
    620a:	d1ec      	bne.n	61e6 <d_template_args_1+0x1a>
    620c:	2000      	movs	r0, #0
    620e:	b002      	add	sp, #8
    6210:	bd70      	pop	{r4, r5, r6, pc}
    6212:	9801      	ldr	r0, [sp, #4]
    6214:	3301      	adds	r3, #1
    6216:	60e3      	str	r3, [r4, #12]
    6218:	62a6      	str	r6, [r4, #40]	; 0x28
    621a:	b002      	add	sp, #8
    621c:	bd70      	pop	{r4, r5, r6, pc}
    621e:	3201      	adds	r2, #1
    6220:	60c2      	str	r2, [r0, #12]
    6222:	212f      	movs	r1, #47	; 0x2f
    6224:	461a      	mov	r2, r3
    6226:	b002      	add	sp, #8
    6228:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    622c:	f7fd bbac 	b.w	3988 <d_make_comp>

00006230 <d_print_comp_inner>:
    6230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6234:	4604      	mov	r4, r0
    6236:	b093      	sub	sp, #76	; 0x4c
    6238:	2a00      	cmp	r2, #0
    623a:	d05c      	beq.n	62f6 <d_print_comp_inner+0xc6>
    623c:	f8d0 5118 	ldr.w	r5, [r0, #280]	; 0x118
    6240:	2d00      	cmp	r5, #0
    6242:	d15b      	bne.n	62fc <d_print_comp_inner+0xcc>
    6244:	7813      	ldrb	r3, [r2, #0]
    6246:	4616      	mov	r6, r2
    6248:	2b50      	cmp	r3, #80	; 0x50
    624a:	d854      	bhi.n	62f6 <d_print_comp_inner+0xc6>
    624c:	e8df f013 	tbh	[pc, r3, lsl #1]
    6250:	010509bf 	.word	0x010509bf
    6254:	018b0105 	.word	0x018b0105
    6258:	07930716 	.word	0x07930716
    625c:	01600651 	.word	0x01600651
    6260:	027d02b4 	.word	0x027d02b4
    6264:	022f0256 	.word	0x022f0256
    6268:	04d504fc 	.word	0x04d504fc
    626c:	047304ae 	.word	0x047304ae
    6270:	0337044c 	.word	0x0337044c
    6274:	02e90310 	.word	0x02e90310
    6278:	06c806ef 	.word	0x06c806ef
    627c:	067a06a1 	.word	0x067a06a1
    6280:	008005b8 	.word	0x008005b8
    6284:	00800080 	.word	0x00800080
    6288:	00590059 	.word	0x00590059
    628c:	00590059 	.word	0x00590059
    6290:	00590059 	.word	0x00590059
    6294:	00ad0059 	.word	0x00ad0059
    6298:	005900ad 	.word	0x005900ad
    629c:	09930059 	.word	0x09930059
    62a0:	02c30078 	.word	0x02c30078
    62a4:	0096055c 	.word	0x0096055c
    62a8:	00960750 	.word	0x00960750
    62ac:	00d000d0 	.word	0x00d000d0
    62b0:	09180164 	.word	0x09180164
    62b4:	08c708ee 	.word	0x08c708ee
    62b8:	08a00053 	.word	0x08a00053
    62bc:	093d0965 	.word	0x093d0965
    62c0:	005305ec 	.word	0x005305ec
    62c4:	005301ef 	.word	0x005301ef
    62c8:	01300053 	.word	0x01300053
    62cc:	07bf0130 	.word	0x07bf0130
    62d0:	0523022a 	.word	0x0523022a
    62d4:	08220870 	.word	0x08220870
    62d8:	096c07e6 	.word	0x096c07e6
    62dc:	00530849 	.word	0x00530849
    62e0:	03fe0425 	.word	0x03fe0425
    62e4:	038903d7 	.word	0x038903d7
    62e8:	0059035e 	.word	0x0059035e
    62ec:	00590531 	.word	0x00590531
    62f0:	0059      	.short	0x0059
    62f2:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    62f6:	2301      	movs	r3, #1
    62f8:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    62fc:	b013      	add	sp, #76	; 0x4c
    62fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6302:	2200      	movs	r2, #0
    6304:	2300      	movs	r3, #0
    6306:	9304      	str	r3, [sp, #16]
    6308:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    630c:	9603      	str	r6, [sp, #12]
    630e:	9302      	str	r3, [sp, #8]
    6310:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
    6314:	9305      	str	r3, [sp, #20]
    6316:	ab02      	add	r3, sp, #8
    6318:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    631c:	2a00      	cmp	r2, #0
    631e:	d065      	beq.n	63ec <d_print_comp_inner+0x1bc>
    6320:	2111      	movs	r1, #17
    6322:	4620      	mov	r0, r4
    6324:	f002 f83c 	bl	83a0 <d_print_comp>
    6328:	9b04      	ldr	r3, [sp, #16]
    632a:	2b00      	cmp	r3, #0
    632c:	f001 82fa 	beq.w	7924 <d_print_comp_inner+0x16f4>
    6330:	9b02      	ldr	r3, [sp, #8]
    6332:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    6336:	2d00      	cmp	r5, #0
    6338:	d0e0      	beq.n	62fc <d_print_comp_inner+0xcc>
    633a:	f8c4 7110 	str.w	r7, [r4, #272]	; 0x110
    633e:	e7dd      	b.n	62fc <d_print_comp_inner+0xcc>
    6340:	2111      	movs	r1, #17
    6342:	4620      	mov	r0, r4
    6344:	68f2      	ldr	r2, [r6, #12]
    6346:	b013      	add	sp, #76	; 0x4c
    6348:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    634c:	f002 b828 	b.w	83a0 <d_print_comp>
    6350:	f8d0 e114 	ldr.w	lr, [r0, #276]	; 0x114
    6354:	f1be 0f00 	cmp.w	lr, #0
    6358:	d03d      	beq.n	63d6 <d_print_comp_inner+0x1a6>
    635a:	4672      	mov	r2, lr
    635c:	6891      	ldr	r1, [r2, #8]
    635e:	b949      	cbnz	r1, 6374 <d_print_comp_inner+0x144>
    6360:	6850      	ldr	r0, [r2, #4]
    6362:	7800      	ldrb	r0, [r0, #0]
    6364:	f1a0 0c19 	sub.w	ip, r0, #25
    6368:	f1bc 0f02 	cmp.w	ip, #2
    636c:	f201 850c 	bhi.w	7d88 <d_print_comp_inner+0x1b58>
    6370:	4283      	cmp	r3, r0
    6372:	d0e5      	beq.n	6340 <d_print_comp_inner+0x110>
    6374:	6812      	ldr	r2, [r2, #0]
    6376:	2a00      	cmp	r2, #0
    6378:	d1f0      	bne.n	635c <d_print_comp_inner+0x12c>
    637a:	e02c      	b.n	63d6 <d_print_comp_inner+0x1a6>
    637c:	2300      	movs	r3, #0
    637e:	e9d0 2144 	ldrd	r2, r1, [r0, #272]	; 0x110
    6382:	a802      	add	r0, sp, #8
    6384:	e9cd 1602 	strd	r1, r6, [sp, #8]
    6388:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
    638c:	9205      	str	r2, [sp, #20]
    638e:	2111      	movs	r1, #17
    6390:	4620      	mov	r0, r4
    6392:	6932      	ldr	r2, [r6, #16]
    6394:	9304      	str	r3, [sp, #16]
    6396:	f002 f803 	bl	83a0 <d_print_comp>
    639a:	9b04      	ldr	r3, [sp, #16]
    639c:	2b00      	cmp	r3, #0
    639e:	f001 84da 	beq.w	7d56 <d_print_comp_inner+0x1b26>
    63a2:	9b02      	ldr	r3, [sp, #8]
    63a4:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    63a8:	e7a8      	b.n	62fc <d_print_comp_inner+0xcc>
    63aa:	f8d0 5120 	ldr.w	r5, [r0, #288]	; 0x120
    63ae:	68f1      	ldr	r1, [r6, #12]
    63b0:	2d00      	cmp	r5, #0
    63b2:	f041 83b5 	bne.w	7b20 <d_print_comp_inner+0x18f0>
    63b6:	780b      	ldrb	r3, [r1, #0]
    63b8:	2b05      	cmp	r3, #5
    63ba:	f001 85fb 	beq.w	7fb4 <d_print_comp_inner+0x1d84>
    63be:	2b23      	cmp	r3, #35	; 0x23
    63c0:	f001 8306 	beq.w	79d0 <d_print_comp_inner+0x17a0>
    63c4:	7832      	ldrb	r2, [r6, #0]
    63c6:	429a      	cmp	r2, r3
    63c8:	f001 8302 	beq.w	79d0 <d_print_comp_inner+0x17a0>
    63cc:	2b24      	cmp	r3, #36	; 0x24
    63ce:	f001 866f 	beq.w	80b0 <d_print_comp_inner+0x1e80>
    63d2:	f8d4 e114 	ldr.w	lr, [r4, #276]	; 0x114
    63d6:	ab02      	add	r3, sp, #8
    63d8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    63dc:	2300      	movs	r3, #0
    63de:	f8d4 2110 	ldr.w	r2, [r4, #272]	; 0x110
    63e2:	f8cd e008 	str.w	lr, [sp, #8]
    63e6:	e9cd 3204 	strd	r3, r2, [sp, #16]
    63ea:	9603      	str	r6, [sp, #12]
    63ec:	68f2      	ldr	r2, [r6, #12]
    63ee:	e797      	b.n	6320 <d_print_comp_inner+0xf0>
    63f0:	68f2      	ldr	r2, [r6, #12]
    63f2:	b112      	cbz	r2, 63fa <d_print_comp_inner+0x1ca>
    63f4:	2111      	movs	r1, #17
    63f6:	f001 ffd3 	bl	83a0 <d_print_comp>
    63fa:	6933      	ldr	r3, [r6, #16]
    63fc:	2b00      	cmp	r3, #0
    63fe:	f43f af7d 	beq.w	62fc <d_print_comp_inner+0xcc>
    6402:	f8d4 5100 	ldr.w	r5, [r4, #256]	; 0x100
    6406:	2dfd      	cmp	r5, #253	; 0xfd
    6408:	f201 84c1 	bhi.w	7d8e <d_print_comp_inner+0x1b5e>
    640c:	f8df 834c 	ldr.w	r8, [pc, #844]	; 675c <d_print_comp_inner+0x52c>
    6410:	272c      	movs	r7, #44	; 0x2c
    6412:	f04f 0900 	mov.w	r9, #0
    6416:	4629      	mov	r1, r5
    6418:	f108 0a01 	add.w	sl, r8, #1
    641c:	e00b      	b.n	6436 <d_print_comp_inner+0x206>
    641e:	460b      	mov	r3, r1
    6420:	3101      	adds	r1, #1
    6422:	45d0      	cmp	r8, sl
    6424:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6428:	54e7      	strb	r7, [r4, r3]
    642a:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    642e:	f001 8280 	beq.w	7932 <d_print_comp_inner+0x1702>
    6432:	f818 7f01 	ldrb.w	r7, [r8, #1]!
    6436:	29ff      	cmp	r1, #255	; 0xff
    6438:	d1f1      	bne.n	641e <d_print_comp_inner+0x1ee>
    643a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    643e:	4620      	mov	r0, r4
    6440:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6444:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    6448:	4798      	blx	r3
    644a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    644e:	2101      	movs	r1, #1
    6450:	3301      	adds	r3, #1
    6452:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6456:	2300      	movs	r3, #0
    6458:	e7e3      	b.n	6422 <d_print_comp_inner+0x1f2>
    645a:	4dc1      	ldr	r5, [pc, #772]	; (6760 <d_print_comp_inner+0x530>)
    645c:	2111      	movs	r1, #17
    645e:	68f2      	ldr	r2, [r6, #12]
    6460:	f001 ff9e 	bl	83a0 <d_print_comp>
    6464:	273a      	movs	r7, #58	; 0x3a
    6466:	f04f 0900 	mov.w	r9, #0
    646a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    646e:	f105 0801 	add.w	r8, r5, #1
    6472:	e00b      	b.n	648c <d_print_comp_inner+0x25c>
    6474:	460b      	mov	r3, r1
    6476:	3101      	adds	r1, #1
    6478:	45a8      	cmp	r8, r5
    647a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    647e:	54e7      	strb	r7, [r4, r3]
    6480:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    6484:	f001 818f 	beq.w	77a6 <d_print_comp_inner+0x1576>
    6488:	f815 7f01 	ldrb.w	r7, [r5, #1]!
    648c:	29ff      	cmp	r1, #255	; 0xff
    648e:	d1f1      	bne.n	6474 <d_print_comp_inner+0x244>
    6490:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6494:	4620      	mov	r0, r4
    6496:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    649a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    649e:	4798      	blx	r3
    64a0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    64a4:	2101      	movs	r1, #1
    64a6:	3301      	adds	r3, #1
    64a8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    64ac:	2300      	movs	r3, #0
    64ae:	e7e3      	b.n	6478 <d_print_comp_inner+0x248>
    64b0:	68f2      	ldr	r2, [r6, #12]
    64b2:	7811      	ldrb	r1, [r2, #0]
    64b4:	2927      	cmp	r1, #39	; 0x27
    64b6:	f041 8380 	bne.w	7bba <d_print_comp_inner+0x198a>
    64ba:	68d1      	ldr	r1, [r2, #12]
    64bc:	7c0d      	ldrb	r5, [r1, #16]
    64be:	2d06      	cmp	r5, #6
    64c0:	f201 828b 	bhi.w	79da <d_print_comp_inner+0x17aa>
    64c4:	2d00      	cmp	r5, #0
    64c6:	f041 8550 	bne.w	7f6a <d_print_comp_inner+0x1d3a>
    64ca:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    64ce:	29ff      	cmp	r1, #255	; 0xff
    64d0:	f001 853a 	beq.w	7f48 <d_print_comp_inner+0x1d18>
    64d4:	1c4b      	adds	r3, r1, #1
    64d6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    64da:	2328      	movs	r3, #40	; 0x28
    64dc:	4620      	mov	r0, r4
    64de:	5463      	strb	r3, [r4, r1]
    64e0:	2111      	movs	r1, #17
    64e2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    64e6:	f001 ff5b 	bl	83a0 <d_print_comp>
    64ea:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    64ee:	29ff      	cmp	r1, #255	; 0xff
    64f0:	f001 851a 	beq.w	7f28 <d_print_comp_inner+0x1cf8>
    64f4:	1c4b      	adds	r3, r1, #1
    64f6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    64fa:	2329      	movs	r3, #41	; 0x29
    64fc:	5463      	strb	r3, [r4, r1]
    64fe:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6502:	7833      	ldrb	r3, [r6, #0]
    6504:	2b3e      	cmp	r3, #62	; 0x3e
    6506:	f001 8509 	beq.w	7f1c <d_print_comp_inner+0x1cec>
    650a:	2d08      	cmp	r5, #8
    650c:	f001 84fa 	beq.w	7f04 <d_print_comp_inner+0x1cd4>
    6510:	2111      	movs	r1, #17
    6512:	4620      	mov	r0, r4
    6514:	6932      	ldr	r2, [r6, #16]
    6516:	e716      	b.n	6346 <d_print_comp_inner+0x116>
    6518:	4f92      	ldr	r7, [pc, #584]	; (6764 <d_print_comp_inner+0x534>)
    651a:	2574      	movs	r5, #116	; 0x74
    651c:	f04f 0800 	mov.w	r8, #0
    6520:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6524:	f107 091d 	add.w	r9, r7, #29
    6528:	e00b      	b.n	6542 <d_print_comp_inner+0x312>
    652a:	460b      	mov	r3, r1
    652c:	3101      	adds	r1, #1
    652e:	45b9      	cmp	r9, r7
    6530:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6534:	54e5      	strb	r5, [r4, r3]
    6536:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    653a:	f43f af01 	beq.w	6340 <d_print_comp_inner+0x110>
    653e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6542:	29ff      	cmp	r1, #255	; 0xff
    6544:	d1f1      	bne.n	652a <d_print_comp_inner+0x2fa>
    6546:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    654a:	4620      	mov	r0, r4
    654c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6550:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6554:	4798      	blx	r3
    6556:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    655a:	2101      	movs	r1, #1
    655c:	3301      	adds	r3, #1
    655e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6562:	2300      	movs	r3, #0
    6564:	e7e3      	b.n	652e <d_print_comp_inner+0x2fe>
    6566:	2300      	movs	r3, #0
    6568:	f8d6 900c 	ldr.w	r9, [r6, #12]
    656c:	f8d0 7114 	ldr.w	r7, [r0, #276]	; 0x114
    6570:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
    6574:	f1b9 0f00 	cmp.w	r9, #0
    6578:	f43f aebd 	beq.w	62f6 <d_print_comp_inner+0xc6>
    657c:	f10d 0808 	add.w	r8, sp, #8
    6580:	f8d0 c110 	ldr.w	ip, [r0, #272]	; 0x110
    6584:	4642      	mov	r2, r8
    6586:	4618      	mov	r0, r3
    6588:	469a      	mov	sl, r3
    658a:	e9c2 3900 	strd	r3, r9, [r2]
    658e:	e9c2 ac02 	strd	sl, ip, [r2, #8]
    6592:	f899 1000 	ldrb.w	r1, [r9]
    6596:	4613      	mov	r3, r2
    6598:	294d      	cmp	r1, #77	; 0x4d
    659a:	f1a1 0b1c 	sub.w	fp, r1, #28
    659e:	f1a1 0e4f 	sub.w	lr, r1, #79	; 0x4f
    65a2:	f100 0501 	add.w	r5, r0, #1
    65a6:	f001 81ef 	beq.w	7988 <d_print_comp_inner+0x1758>
    65aa:	f201 805a 	bhi.w	7662 <d_print_comp_inner+0x1432>
    65ae:	f1bb 0f04 	cmp.w	fp, #4
    65b2:	f241 81e9 	bls.w	7988 <d_print_comp_inner+0x1758>
    65b6:	2902      	cmp	r1, #2
    65b8:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    65bc:	d116      	bne.n	65ec <d_print_comp_inner+0x3bc>
    65be:	f8d9 9010 	ldr.w	r9, [r9, #16]
    65c2:	f899 1000 	ldrb.w	r1, [r9]
    65c6:	2947      	cmp	r1, #71	; 0x47
    65c8:	f001 8618 	beq.w	81fc <d_print_comp_inner+0x1fcc>
    65cc:	f04f 0a00 	mov.w	sl, #0
    65d0:	eb08 1000 	add.w	r0, r8, r0, lsl #4
    65d4:	294d      	cmp	r1, #77	; 0x4d
    65d6:	f1a1 034f 	sub.w	r3, r1, #79	; 0x4f
    65da:	f1a1 021c 	sub.w	r2, r1, #28
    65de:	f001 8398 	beq.w	7d12 <d_print_comp_inner+0x1ae2>
    65e2:	f201 8393 	bhi.w	7d0c <d_print_comp_inner+0x1adc>
    65e6:	2a04      	cmp	r2, #4
    65e8:	f241 8393 	bls.w	7d12 <d_print_comp_inner+0x1ae2>
    65ec:	2904      	cmp	r1, #4
    65ee:	bf04      	itt	eq
    65f0:	e9cd c900 	strdeq	ip, r9, [sp]
    65f4:	f8c4 d110 	streq.w	sp, [r4, #272]	; 0x110
    65f8:	2111      	movs	r1, #17
    65fa:	4620      	mov	r0, r4
    65fc:	6932      	ldr	r2, [r6, #16]
    65fe:	f001 fecf 	bl	83a0 <d_print_comp>
    6602:	f899 3000 	ldrb.w	r3, [r9]
    6606:	2b04      	cmp	r3, #4
    6608:	d102      	bne.n	6610 <d_print_comp_inner+0x3e0>
    660a:	9b00      	ldr	r3, [sp, #0]
    660c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    6610:	f04f 0920 	mov.w	r9, #32
    6614:	eb08 1505 	add.w	r5, r8, r5, lsl #4
    6618:	f855 6c08 	ldr.w	r6, [r5, #-8]
    661c:	2e00      	cmp	r6, #0
    661e:	f001 819f 	beq.w	7960 <d_print_comp_inner+0x1730>
    6622:	3d10      	subs	r5, #16
    6624:	4545      	cmp	r5, r8
    6626:	d1f7      	bne.n	6618 <d_print_comp_inner+0x3e8>
    6628:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
    662c:	e666      	b.n	62fc <d_print_comp_inner+0xcc>
    662e:	6933      	ldr	r3, [r6, #16]
    6630:	781a      	ldrb	r2, [r3, #0]
    6632:	2a3b      	cmp	r2, #59	; 0x3b
    6634:	f47f ae5f 	bne.w	62f6 <d_print_comp_inner+0xc6>
    6638:	691b      	ldr	r3, [r3, #16]
    663a:	781b      	ldrb	r3, [r3, #0]
    663c:	2b3c      	cmp	r3, #60	; 0x3c
    663e:	f47f ae5a 	bne.w	62f6 <d_print_comp_inner+0xc6>
    6642:	4632      	mov	r2, r6
    6644:	2111      	movs	r1, #17
    6646:	f002 ffed 	bl	9624 <d_maybe_print_fold_expression>
    664a:	2800      	cmp	r0, #0
    664c:	f47f ae56 	bne.w	62fc <d_print_comp_inner+0xcc>
    6650:	e9d6 8303 	ldrd	r8, r3, [r6, #12]
    6654:	e9d3 6303 	ldrd	r6, r3, [r3, #12]
    6658:	e9d3 7503 	ldrd	r7, r5, [r3, #12]
    665c:	f8d8 200c 	ldr.w	r2, [r8, #12]
    6660:	4941      	ldr	r1, [pc, #260]	; (6768 <d_print_comp_inner+0x538>)
    6662:	6810      	ldr	r0, [r2, #0]
    6664:	f006 ff1e 	bl	d4a4 <strcmp>
    6668:	2800      	cmp	r0, #0
    666a:	f041 8609 	bne.w	8280 <d_print_comp_inner+0x2050>
    666e:	4632      	mov	r2, r6
    6670:	2111      	movs	r1, #17
    6672:	4620      	mov	r0, r4
    6674:	f002 ff68 	bl	9548 <d_print_subexpr>
    6678:	4642      	mov	r2, r8
    667a:	2111      	movs	r1, #17
    667c:	4620      	mov	r0, r4
    667e:	f002 fd81 	bl	9184 <d_print_expr_op>
    6682:	2111      	movs	r1, #17
    6684:	4620      	mov	r0, r4
    6686:	463a      	mov	r2, r7
    6688:	f002 ff5e 	bl	9548 <d_print_subexpr>
    668c:	4620      	mov	r0, r4
    668e:	4937      	ldr	r1, [pc, #220]	; (676c <d_print_comp_inner+0x53c>)
    6690:	f7fd fbbc 	bl	3e0c <d_append_string>
    6694:	462a      	mov	r2, r5
    6696:	2111      	movs	r1, #17
    6698:	4620      	mov	r0, r4
    669a:	b013      	add	sp, #76	; 0x4c
    669c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    66a0:	f002 bf52 	b.w	9548 <d_print_subexpr>
    66a4:	2111      	movs	r1, #17
    66a6:	68f2      	ldr	r2, [r6, #12]
    66a8:	f001 fe7a 	bl	83a0 <d_print_comp>
    66ac:	e730      	b.n	6510 <d_print_comp_inner+0x2e0>
    66ae:	4f30      	ldr	r7, [pc, #192]	; (6770 <d_print_comp_inner+0x540>)
    66b0:	2563      	movs	r5, #99	; 0x63
    66b2:	f04f 0800 	mov.w	r8, #0
    66b6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    66ba:	f107 0917 	add.w	r9, r7, #23
    66be:	e00b      	b.n	66d8 <d_print_comp_inner+0x4a8>
    66c0:	460b      	mov	r3, r1
    66c2:	3101      	adds	r1, #1
    66c4:	45b9      	cmp	r9, r7
    66c6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    66ca:	54e5      	strb	r5, [r4, r3]
    66cc:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    66d0:	f000 87cf 	beq.w	7672 <d_print_comp_inner+0x1442>
    66d4:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    66d8:	29ff      	cmp	r1, #255	; 0xff
    66da:	d1f1      	bne.n	66c0 <d_print_comp_inner+0x490>
    66dc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    66e0:	4620      	mov	r0, r4
    66e2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    66e6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    66ea:	4798      	blx	r3
    66ec:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    66f0:	2101      	movs	r1, #1
    66f2:	3301      	adds	r3, #1
    66f4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    66f8:	2300      	movs	r3, #0
    66fa:	e7e3      	b.n	66c4 <d_print_comp_inner+0x494>
    66fc:	4f1d      	ldr	r7, [pc, #116]	; (6774 <d_print_comp_inner+0x544>)
    66fe:	2556      	movs	r5, #86	; 0x56
    6700:	f04f 0800 	mov.w	r8, #0
    6704:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6708:	f107 0907 	add.w	r9, r7, #7
    670c:	e00b      	b.n	6726 <d_print_comp_inner+0x4f6>
    670e:	460b      	mov	r3, r1
    6710:	3101      	adds	r1, #1
    6712:	45b9      	cmp	r9, r7
    6714:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6718:	54e5      	strb	r5, [r4, r3]
    671a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    671e:	f43f ae0f 	beq.w	6340 <d_print_comp_inner+0x110>
    6722:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6726:	29ff      	cmp	r1, #255	; 0xff
    6728:	d1f1      	bne.n	670e <d_print_comp_inner+0x4de>
    672a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    672e:	4620      	mov	r0, r4
    6730:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6734:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6738:	4798      	blx	r3
    673a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    673e:	2101      	movs	r1, #1
    6740:	3301      	adds	r3, #1
    6742:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6746:	2300      	movs	r3, #0
    6748:	e7e3      	b.n	6712 <d_print_comp_inner+0x4e2>
    674a:	4f0b      	ldr	r7, [pc, #44]	; (6778 <d_print_comp_inner+0x548>)
    674c:	2576      	movs	r5, #118	; 0x76
    674e:	f04f 0800 	mov.w	r8, #0
    6752:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6756:	f107 090a 	add.w	r9, r7, #10
    675a:	e01b      	b.n	6794 <d_print_comp_inner+0x564>
    675c:	00019324 	.word	0x00019324
    6760:	00019184 	.word	0x00019184
    6764:	000191a4 	.word	0x000191a4
    6768:	00019344 	.word	0x00019344
    676c:	00019348 	.word	0x00019348
    6770:	000191dc 	.word	0x000191dc
    6774:	000191d0 	.word	0x000191d0
    6778:	000191c4 	.word	0x000191c4
    677c:	460b      	mov	r3, r1
    677e:	3101      	adds	r1, #1
    6780:	45b9      	cmp	r9, r7
    6782:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6786:	54e5      	strb	r5, [r4, r3]
    6788:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    678c:	f43f add8 	beq.w	6340 <d_print_comp_inner+0x110>
    6790:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6794:	29ff      	cmp	r1, #255	; 0xff
    6796:	d1f1      	bne.n	677c <d_print_comp_inner+0x54c>
    6798:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    679c:	4620      	mov	r0, r4
    679e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    67a2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    67a6:	4798      	blx	r3
    67a8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    67ac:	2101      	movs	r1, #1
    67ae:	3301      	adds	r3, #1
    67b0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    67b4:	2300      	movs	r3, #0
    67b6:	e7e3      	b.n	6780 <d_print_comp_inner+0x550>
    67b8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    67bc:	2bff      	cmp	r3, #255	; 0xff
    67be:	f001 8363 	beq.w	7e88 <d_print_comp_inner+0x1c58>
    67c2:	1c59      	adds	r1, r3, #1
    67c4:	227e      	movs	r2, #126	; 0x7e
    67c6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    67ca:	4620      	mov	r0, r4
    67cc:	54e2      	strb	r2, [r4, r3]
    67ce:	2111      	movs	r1, #17
    67d0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    67d4:	e69e      	b.n	6514 <d_print_comp_inner+0x2e4>
    67d6:	68f2      	ldr	r2, [r6, #12]
    67d8:	b1ca      	cbz	r2, 680e <d_print_comp_inner+0x5de>
    67da:	2300      	movs	r3, #0
    67dc:	f8d0 1114 	ldr.w	r1, [r0, #276]	; 0x114
    67e0:	9304      	str	r3, [sp, #16]
    67e2:	9102      	str	r1, [sp, #8]
    67e4:	a902      	add	r1, sp, #8
    67e6:	f8c0 1114 	str.w	r1, [r0, #276]	; 0x114
    67ea:	f8d0 1110 	ldr.w	r1, [r0, #272]	; 0x110
    67ee:	9603      	str	r6, [sp, #12]
    67f0:	9105      	str	r1, [sp, #20]
    67f2:	2111      	movs	r1, #17
    67f4:	f001 fdd4 	bl	83a0 <d_print_comp>
    67f8:	9a02      	ldr	r2, [sp, #8]
    67fa:	9b04      	ldr	r3, [sp, #16]
    67fc:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    6800:	2b00      	cmp	r3, #0
    6802:	f47f ad7b 	bne.w	62fc <d_print_comp_inner+0xcc>
    6806:	2120      	movs	r1, #32
    6808:	4620      	mov	r0, r4
    680a:	f7fd fa79 	bl	3d00 <d_append_char>
    680e:	4632      	mov	r2, r6
    6810:	2111      	movs	r1, #17
    6812:	4620      	mov	r0, r4
    6814:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    6818:	b013      	add	sp, #76	; 0x4c
    681a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    681e:	f002 b90f 	b.w	8a40 <d_print_function_type>
    6822:	4fc9      	ldr	r7, [pc, #804]	; (6b48 <d_print_comp_inner+0x918>)
    6824:	2567      	movs	r5, #103	; 0x67
    6826:	f04f 0800 	mov.w	r8, #0
    682a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    682e:	f107 0912 	add.w	r9, r7, #18
    6832:	e00b      	b.n	684c <d_print_comp_inner+0x61c>
    6834:	460b      	mov	r3, r1
    6836:	3101      	adds	r1, #1
    6838:	454f      	cmp	r7, r9
    683a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    683e:	54e5      	strb	r5, [r4, r3]
    6840:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6844:	f43f ad7c 	beq.w	6340 <d_print_comp_inner+0x110>
    6848:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    684c:	29ff      	cmp	r1, #255	; 0xff
    684e:	d1f1      	bne.n	6834 <d_print_comp_inner+0x604>
    6850:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6854:	4620      	mov	r0, r4
    6856:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    685a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    685e:	4798      	blx	r3
    6860:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6864:	2101      	movs	r1, #1
    6866:	3301      	adds	r3, #1
    6868:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    686c:	2300      	movs	r3, #0
    686e:	e7e3      	b.n	6838 <d_print_comp_inner+0x608>
    6870:	4fb6      	ldr	r7, [pc, #728]	; (6b4c <d_print_comp_inner+0x91c>)
    6872:	256a      	movs	r5, #106	; 0x6a
    6874:	f04f 0800 	mov.w	r8, #0
    6878:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    687c:	f107 090e 	add.w	r9, r7, #14
    6880:	e00b      	b.n	689a <d_print_comp_inner+0x66a>
    6882:	460b      	mov	r3, r1
    6884:	3101      	adds	r1, #1
    6886:	45b9      	cmp	r9, r7
    6888:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    688c:	54e5      	strb	r5, [r4, r3]
    688e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6892:	f43f ad55 	beq.w	6340 <d_print_comp_inner+0x110>
    6896:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    689a:	29ff      	cmp	r1, #255	; 0xff
    689c:	d1f1      	bne.n	6882 <d_print_comp_inner+0x652>
    689e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    68a2:	4620      	mov	r0, r4
    68a4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    68a8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    68ac:	4798      	blx	r3
    68ae:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    68b2:	2101      	movs	r1, #1
    68b4:	3301      	adds	r3, #1
    68b6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    68ba:	2300      	movs	r3, #0
    68bc:	e7e3      	b.n	6886 <d_print_comp_inner+0x656>
    68be:	4fa4      	ldr	r7, [pc, #656]	; (6b50 <d_print_comp_inner+0x920>)
    68c0:	2563      	movs	r5, #99	; 0x63
    68c2:	f04f 0800 	mov.w	r8, #0
    68c6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    68ca:	f107 0919 	add.w	r9, r7, #25
    68ce:	e00b      	b.n	68e8 <d_print_comp_inner+0x6b8>
    68d0:	460b      	mov	r3, r1
    68d2:	3101      	adds	r1, #1
    68d4:	454f      	cmp	r7, r9
    68d6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    68da:	54e5      	strb	r5, [r4, r3]
    68dc:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    68e0:	f43f ad2e 	beq.w	6340 <d_print_comp_inner+0x110>
    68e4:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    68e8:	29ff      	cmp	r1, #255	; 0xff
    68ea:	d1f1      	bne.n	68d0 <d_print_comp_inner+0x6a0>
    68ec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    68f0:	4620      	mov	r0, r4
    68f2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    68f6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    68fa:	4798      	blx	r3
    68fc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6900:	2101      	movs	r1, #1
    6902:	3301      	adds	r3, #1
    6904:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6908:	2300      	movs	r3, #0
    690a:	e7e3      	b.n	68d4 <d_print_comp_inner+0x6a4>
    690c:	4f91      	ldr	r7, [pc, #580]	; (6b54 <d_print_comp_inner+0x924>)
    690e:	2111      	movs	r1, #17
    6910:	68f2      	ldr	r2, [r6, #12]
    6912:	f001 fd45 	bl	83a0 <d_print_comp>
    6916:	255b      	movs	r5, #91	; 0x5b
    6918:	f04f 0800 	mov.w	r8, #0
    691c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6920:	f107 0904 	add.w	r9, r7, #4
    6924:	e00b      	b.n	693e <d_print_comp_inner+0x70e>
    6926:	460b      	mov	r3, r1
    6928:	3101      	adds	r1, #1
    692a:	45b9      	cmp	r9, r7
    692c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6930:	54e5      	strb	r5, [r4, r3]
    6932:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6936:	f000 8681 	beq.w	763c <d_print_comp_inner+0x140c>
    693a:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    693e:	29ff      	cmp	r1, #255	; 0xff
    6940:	d1f1      	bne.n	6926 <d_print_comp_inner+0x6f6>
    6942:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6946:	4620      	mov	r0, r4
    6948:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    694c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6950:	4798      	blx	r3
    6952:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6956:	2101      	movs	r1, #1
    6958:	3301      	adds	r3, #1
    695a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    695e:	2300      	movs	r3, #0
    6960:	e7e3      	b.n	692a <d_print_comp_inner+0x6fa>
    6962:	68f1      	ldr	r1, [r6, #12]
    6964:	f7fd fa0a 	bl	3d7c <d_find_pack>
    6968:	f04f 0800 	mov.w	r8, #0
    696c:	b910      	cbnz	r0, 6974 <d_print_comp_inner+0x744>
    696e:	f001 bc10 	b.w	8192 <d_print_comp_inner+0x1f62>
    6972:	4690      	mov	r8, r2
    6974:	7803      	ldrb	r3, [r0, #0]
    6976:	f108 0201 	add.w	r2, r8, #1
    697a:	2b2f      	cmp	r3, #47	; 0x2f
    697c:	f041 8012 	bne.w	79a4 <d_print_comp_inner+0x1774>
    6980:	68c3      	ldr	r3, [r0, #12]
    6982:	2b00      	cmp	r3, #0
    6984:	f001 800e 	beq.w	79a4 <d_print_comp_inner+0x1774>
    6988:	6900      	ldr	r0, [r0, #16]
    698a:	2800      	cmp	r0, #0
    698c:	d1f1      	bne.n	6972 <d_print_comp_inner+0x742>
    698e:	46c2      	mov	sl, r8
    6990:	f8d6 900c 	ldr.w	r9, [r6, #12]
    6994:	4690      	mov	r8, r2
    6996:	e003      	b.n	69a0 <d_print_comp_inner+0x770>
    6998:	3501      	adds	r5, #1
    699a:	4545      	cmp	r5, r8
    699c:	f6bf acae 	bge.w	62fc <d_print_comp_inner+0xcc>
    69a0:	464a      	mov	r2, r9
    69a2:	2111      	movs	r1, #17
    69a4:	4620      	mov	r0, r4
    69a6:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
    69aa:	f001 fcf9 	bl	83a0 <d_print_comp>
    69ae:	45aa      	cmp	sl, r5
    69b0:	ddf2      	ble.n	6998 <d_print_comp_inner+0x768>
    69b2:	4e69      	ldr	r6, [pc, #420]	; (6b58 <d_print_comp_inner+0x928>)
    69b4:	272c      	movs	r7, #44	; 0x2c
    69b6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    69ba:	f106 0b01 	add.w	fp, r6, #1
    69be:	e00a      	b.n	69d6 <d_print_comp_inner+0x7a6>
    69c0:	460b      	mov	r3, r1
    69c2:	3101      	adds	r1, #1
    69c4:	45b3      	cmp	fp, r6
    69c6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    69ca:	54e7      	strb	r7, [r4, r3]
    69cc:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    69d0:	d0e2      	beq.n	6998 <d_print_comp_inner+0x768>
    69d2:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    69d6:	29ff      	cmp	r1, #255	; 0xff
    69d8:	d1f2      	bne.n	69c0 <d_print_comp_inner+0x790>
    69da:	f04f 0200 	mov.w	r2, #0
    69de:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    69e2:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    69e6:	4620      	mov	r0, r4
    69e8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    69ec:	4798      	blx	r3
    69ee:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    69f2:	2101      	movs	r1, #1
    69f4:	3301      	adds	r3, #1
    69f6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    69fa:	2300      	movs	r3, #0
    69fc:	e7e2      	b.n	69c4 <d_print_comp_inner+0x794>
    69fe:	4f57      	ldr	r7, [pc, #348]	; (6b5c <d_print_comp_inner+0x92c>)
    6a00:	256e      	movs	r5, #110	; 0x6e
    6a02:	f04f 0800 	mov.w	r8, #0
    6a06:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6a0a:	f107 0919 	add.w	r9, r7, #25
    6a0e:	e00b      	b.n	6a28 <d_print_comp_inner+0x7f8>
    6a10:	460b      	mov	r3, r1
    6a12:	3101      	adds	r1, #1
    6a14:	45b9      	cmp	r9, r7
    6a16:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6a1a:	54e5      	strb	r5, [r4, r3]
    6a1c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6a20:	f43f ac8e 	beq.w	6340 <d_print_comp_inner+0x110>
    6a24:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6a28:	29ff      	cmp	r1, #255	; 0xff
    6a2a:	d1f1      	bne.n	6a10 <d_print_comp_inner+0x7e0>
    6a2c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6a30:	4620      	mov	r0, r4
    6a32:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6a36:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6a3a:	4798      	blx	r3
    6a3c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6a40:	2101      	movs	r1, #1
    6a42:	3301      	adds	r3, #1
    6a44:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6a48:	2300      	movs	r3, #0
    6a4a:	e7e3      	b.n	6a14 <d_print_comp_inner+0x7e4>
    6a4c:	4f44      	ldr	r7, [pc, #272]	; (6b60 <d_print_comp_inner+0x930>)
    6a4e:	2574      	movs	r5, #116	; 0x74
    6a50:	f04f 0800 	mov.w	r8, #0
    6a54:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6a58:	f107 0915 	add.w	r9, r7, #21
    6a5c:	e00b      	b.n	6a76 <d_print_comp_inner+0x846>
    6a5e:	460b      	mov	r3, r1
    6a60:	3101      	adds	r1, #1
    6a62:	45b9      	cmp	r9, r7
    6a64:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6a68:	54e5      	strb	r5, [r4, r3]
    6a6a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6a6e:	f43f ac67 	beq.w	6340 <d_print_comp_inner+0x110>
    6a72:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6a76:	29ff      	cmp	r1, #255	; 0xff
    6a78:	d1f1      	bne.n	6a5e <d_print_comp_inner+0x82e>
    6a7a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6a7e:	4620      	mov	r0, r4
    6a80:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6a84:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6a88:	4798      	blx	r3
    6a8a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6a8e:	2101      	movs	r1, #1
    6a90:	3301      	adds	r3, #1
    6a92:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6a96:	2300      	movs	r3, #0
    6a98:	e7e3      	b.n	6a62 <d_print_comp_inner+0x832>
    6a9a:	4f32      	ldr	r7, [pc, #200]	; (6b64 <d_print_comp_inner+0x934>)
    6a9c:	257b      	movs	r5, #123	; 0x7b
    6a9e:	f04f 0800 	mov.w	r8, #0
    6aa2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6aa6:	f107 090d 	add.w	r9, r7, #13
    6aaa:	e00b      	b.n	6ac4 <d_print_comp_inner+0x894>
    6aac:	460b      	mov	r3, r1
    6aae:	3101      	adds	r1, #1
    6ab0:	454f      	cmp	r7, r9
    6ab2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6ab6:	54e5      	strb	r5, [r4, r3]
    6ab8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6abc:	f000 8631 	beq.w	7722 <d_print_comp_inner+0x14f2>
    6ac0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6ac4:	29ff      	cmp	r1, #255	; 0xff
    6ac6:	d1f1      	bne.n	6aac <d_print_comp_inner+0x87c>
    6ac8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6acc:	4620      	mov	r0, r4
    6ace:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6ad2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6ad6:	4798      	blx	r3
    6ad8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6adc:	2101      	movs	r1, #1
    6ade:	3301      	adds	r3, #1
    6ae0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6ae4:	2300      	movs	r3, #0
    6ae6:	e7e3      	b.n	6ab0 <d_print_comp_inner+0x880>
    6ae8:	4f1f      	ldr	r7, [pc, #124]	; (6b68 <d_print_comp_inner+0x938>)
    6aea:	2576      	movs	r5, #118	; 0x76
    6aec:	f04f 0800 	mov.w	r8, #0
    6af0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6af4:	f107 0910 	add.w	r9, r7, #16
    6af8:	e00b      	b.n	6b12 <d_print_comp_inner+0x8e2>
    6afa:	460b      	mov	r3, r1
    6afc:	3101      	adds	r1, #1
    6afe:	45b9      	cmp	r9, r7
    6b00:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6b04:	54e5      	strb	r5, [r4, r3]
    6b06:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6b0a:	f43f ac19 	beq.w	6340 <d_print_comp_inner+0x110>
    6b0e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6b12:	29ff      	cmp	r1, #255	; 0xff
    6b14:	d1f1      	bne.n	6afa <d_print_comp_inner+0x8ca>
    6b16:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6b1a:	4620      	mov	r0, r4
    6b1c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6b20:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6b24:	4798      	blx	r3
    6b26:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6b2a:	2101      	movs	r1, #1
    6b2c:	3301      	adds	r3, #1
    6b2e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6b32:	2300      	movs	r3, #0
    6b34:	e7e3      	b.n	6afe <d_print_comp_inner+0x8ce>
    6b36:	4f0d      	ldr	r7, [pc, #52]	; (6b6c <d_print_comp_inner+0x93c>)
    6b38:	256e      	movs	r5, #110	; 0x6e
    6b3a:	f04f 0800 	mov.w	r8, #0
    6b3e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6b42:	f107 0914 	add.w	r9, r7, #20
    6b46:	e01f      	b.n	6b88 <d_print_comp_inner+0x958>
    6b48:	0001927c 	.word	0x0001927c
    6b4c:	0001926c 	.word	0x0001926c
    6b50:	00019250 	.word	0x00019250
    6b54:	0001917c 	.word	0x0001917c
    6b58:	00019324 	.word	0x00019324
    6b5c:	000192f0 	.word	0x000192f0
    6b60:	000192f4 	.word	0x000192f4
    6b64:	000193f0 	.word	0x000193f0
    6b68:	0001923c 	.word	0x0001923c
    6b6c:	00019238 	.word	0x00019238
    6b70:	460b      	mov	r3, r1
    6b72:	3101      	adds	r1, #1
    6b74:	454f      	cmp	r7, r9
    6b76:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6b7a:	54e5      	strb	r5, [r4, r3]
    6b7c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6b80:	f43f abde 	beq.w	6340 <d_print_comp_inner+0x110>
    6b84:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6b88:	29ff      	cmp	r1, #255	; 0xff
    6b8a:	d1f1      	bne.n	6b70 <d_print_comp_inner+0x940>
    6b8c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6b90:	4620      	mov	r0, r4
    6b92:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6b96:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6b9a:	4798      	blx	r3
    6b9c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6ba0:	2101      	movs	r1, #1
    6ba2:	3301      	adds	r3, #1
    6ba4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6ba8:	2300      	movs	r3, #0
    6baa:	e7e3      	b.n	6b74 <d_print_comp_inner+0x944>
    6bac:	4f9a      	ldr	r7, [pc, #616]	; (6e18 <d_print_comp_inner+0xbe8>)
    6bae:	2574      	movs	r5, #116	; 0x74
    6bb0:	f04f 0800 	mov.w	r8, #0
    6bb4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6bb8:	f107 090f 	add.w	r9, r7, #15
    6bbc:	e00b      	b.n	6bd6 <d_print_comp_inner+0x9a6>
    6bbe:	460b      	mov	r3, r1
    6bc0:	3101      	adds	r1, #1
    6bc2:	45b9      	cmp	r9, r7
    6bc4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6bc8:	54e5      	strb	r5, [r4, r3]
    6bca:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6bce:	f43f abb7 	beq.w	6340 <d_print_comp_inner+0x110>
    6bd2:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6bd6:	29ff      	cmp	r1, #255	; 0xff
    6bd8:	d1f1      	bne.n	6bbe <d_print_comp_inner+0x98e>
    6bda:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6bde:	4620      	mov	r0, r4
    6be0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6be4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6be8:	4798      	blx	r3
    6bea:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6bee:	2101      	movs	r1, #1
    6bf0:	3301      	adds	r3, #1
    6bf2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6bf6:	2300      	movs	r3, #0
    6bf8:	e7e3      	b.n	6bc2 <d_print_comp_inner+0x992>
    6bfa:	4f88      	ldr	r7, [pc, #544]	; (6e1c <d_print_comp_inner+0xbec>)
    6bfc:	2574      	movs	r5, #116	; 0x74
    6bfe:	f04f 0800 	mov.w	r8, #0
    6c02:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6c06:	f107 0911 	add.w	r9, r7, #17
    6c0a:	e00b      	b.n	6c24 <d_print_comp_inner+0x9f4>
    6c0c:	460b      	mov	r3, r1
    6c0e:	3101      	adds	r1, #1
    6c10:	45b9      	cmp	r9, r7
    6c12:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6c16:	54e5      	strb	r5, [r4, r3]
    6c18:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6c1c:	f43f ab90 	beq.w	6340 <d_print_comp_inner+0x110>
    6c20:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6c24:	29ff      	cmp	r1, #255	; 0xff
    6c26:	d1f1      	bne.n	6c0c <d_print_comp_inner+0x9dc>
    6c28:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6c2c:	4620      	mov	r0, r4
    6c2e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6c32:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6c36:	4798      	blx	r3
    6c38:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6c3c:	2101      	movs	r1, #1
    6c3e:	3301      	adds	r3, #1
    6c40:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6c44:	2300      	movs	r3, #0
    6c46:	e7e3      	b.n	6c10 <d_print_comp_inner+0x9e0>
    6c48:	4f75      	ldr	r7, [pc, #468]	; (6e20 <d_print_comp_inner+0xbf0>)
    6c4a:	2574      	movs	r5, #116	; 0x74
    6c4c:	f04f 0800 	mov.w	r8, #0
    6c50:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6c54:	f107 090c 	add.w	r9, r7, #12
    6c58:	e00b      	b.n	6c72 <d_print_comp_inner+0xa42>
    6c5a:	460b      	mov	r3, r1
    6c5c:	3101      	adds	r1, #1
    6c5e:	45b9      	cmp	r9, r7
    6c60:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6c64:	54e5      	strb	r5, [r4, r3]
    6c66:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6c6a:	f43f ab69 	beq.w	6340 <d_print_comp_inner+0x110>
    6c6e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6c72:	29ff      	cmp	r1, #255	; 0xff
    6c74:	d1f1      	bne.n	6c5a <d_print_comp_inner+0xa2a>
    6c76:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6c7a:	4620      	mov	r0, r4
    6c7c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6c80:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6c84:	4798      	blx	r3
    6c86:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6c8a:	2101      	movs	r1, #1
    6c8c:	3301      	adds	r3, #1
    6c8e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6c92:	2300      	movs	r3, #0
    6c94:	e7e3      	b.n	6c5e <d_print_comp_inner+0xa2e>
    6c96:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6c9a:	7b35      	ldrb	r5, [r6, #12]
    6c9c:	29ff      	cmp	r1, #255	; 0xff
    6c9e:	f001 8087 	beq.w	7db0 <d_print_comp_inner+0x1b80>
    6ca2:	1c4b      	adds	r3, r1, #1
    6ca4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    6ca8:	5465      	strb	r5, [r4, r1]
    6caa:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6cae:	f7ff bb25 	b.w	62fc <d_print_comp_inner+0xcc>
    6cb2:	4f5c      	ldr	r7, [pc, #368]	; (6e24 <d_print_comp_inner+0xbf4>)
    6cb4:	2111      	movs	r1, #17
    6cb6:	68f2      	ldr	r2, [r6, #12]
    6cb8:	f001 fb72 	bl	83a0 <d_print_comp>
    6cbc:	2520      	movs	r5, #32
    6cbe:	f04f 0800 	mov.w	r8, #0
    6cc2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6cc6:	f107 0907 	add.w	r9, r7, #7
    6cca:	e00b      	b.n	6ce4 <d_print_comp_inner+0xab4>
    6ccc:	460b      	mov	r3, r1
    6cce:	3101      	adds	r1, #1
    6cd0:	45b9      	cmp	r9, r7
    6cd2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6cd6:	54e5      	strb	r5, [r4, r3]
    6cd8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6cdc:	f000 84ae 	beq.w	763c <d_print_comp_inner+0x140c>
    6ce0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6ce4:	29ff      	cmp	r1, #255	; 0xff
    6ce6:	d1f1      	bne.n	6ccc <d_print_comp_inner+0xa9c>
    6ce8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6cec:	4620      	mov	r0, r4
    6cee:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6cf2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6cf6:	4798      	blx	r3
    6cf8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6cfc:	2101      	movs	r1, #1
    6cfe:	3301      	adds	r3, #1
    6d00:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6d04:	2300      	movs	r3, #0
    6d06:	e7e3      	b.n	6cd0 <d_print_comp_inner+0xaa0>
    6d08:	2300      	movs	r3, #0
    6d0a:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
    6d0e:	9304      	str	r3, [sp, #16]
    6d10:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
    6d14:	f10d 0808 	add.w	r8, sp, #8
    6d18:	46e1      	mov	r9, ip
    6d1a:	f8cd c008 	str.w	ip, [sp, #8]
    6d1e:	f8c0 8114 	str.w	r8, [r0, #276]	; 0x114
    6d22:	9603      	str	r6, [sp, #12]
    6d24:	9305      	str	r3, [sp, #20]
    6d26:	f1bc 0f00 	cmp.w	ip, #0
    6d2a:	f001 82e6 	beq.w	82fa <d_print_comp_inner+0x20ca>
    6d2e:	2701      	movs	r7, #1
    6d30:	4665      	mov	r5, ip
    6d32:	46be      	mov	lr, r7
    6d34:	46b4      	mov	ip, r6
    6d36:	4646      	mov	r6, r8
    6d38:	e018      	b.n	6d6c <d_print_comp_inner+0xb3c>
    6d3a:	68ab      	ldr	r3, [r5, #8]
    6d3c:	b9a3      	cbnz	r3, 6d68 <d_print_comp_inner+0xb38>
    6d3e:	2f03      	cmp	r7, #3
    6d40:	f63f aad9 	bhi.w	62f6 <d_print_comp_inner+0xc6>
    6d44:	ab12      	add	r3, sp, #72	; 0x48
    6d46:	eb03 1b07 	add.w	fp, r3, r7, lsl #4
    6d4a:	f1ab 0a40 	sub.w	sl, fp, #64	; 0x40
    6d4e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    6d52:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
    6d56:	f84b 6c40 	str.w	r6, [fp, #-64]
    6d5a:	eb08 1607 	add.w	r6, r8, r7, lsl #4
    6d5e:	f8c4 6114 	str.w	r6, [r4, #276]	; 0x114
    6d62:	3701      	adds	r7, #1
    6d64:	f8c5 e008 	str.w	lr, [r5, #8]
    6d68:	682d      	ldr	r5, [r5, #0]
    6d6a:	b125      	cbz	r5, 6d76 <d_print_comp_inner+0xb46>
    6d6c:	686b      	ldr	r3, [r5, #4]
    6d6e:	781b      	ldrb	r3, [r3, #0]
    6d70:	3b19      	subs	r3, #25
    6d72:	2b02      	cmp	r3, #2
    6d74:	d9e1      	bls.n	6d3a <d_print_comp_inner+0xb0a>
    6d76:	2111      	movs	r1, #17
    6d78:	4620      	mov	r0, r4
    6d7a:	f8dc 2010 	ldr.w	r2, [ip, #16]
    6d7e:	4666      	mov	r6, ip
    6d80:	f001 fb0e 	bl	83a0 <d_print_comp>
    6d84:	9b04      	ldr	r3, [sp, #16]
    6d86:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    6d8a:	2b00      	cmp	r3, #0
    6d8c:	f47f aab6 	bne.w	62fc <d_print_comp_inner+0xcc>
    6d90:	2f01      	cmp	r7, #1
    6d92:	d00c      	beq.n	6dae <d_print_comp_inner+0xb7e>
    6d94:	eb08 1807 	add.w	r8, r8, r7, lsl #4
    6d98:	f858 2c0c 	ldr.w	r2, [r8, #-12]
    6d9c:	2111      	movs	r1, #17
    6d9e:	4620      	mov	r0, r4
    6da0:	3f01      	subs	r7, #1
    6da2:	f001 fb2b 	bl	83fc <d_print_mod>
    6da6:	2f01      	cmp	r7, #1
    6da8:	f1a8 0810 	sub.w	r8, r8, #16
    6dac:	d1f4      	bne.n	6d98 <d_print_comp_inner+0xb68>
    6dae:	4632      	mov	r2, r6
    6db0:	2111      	movs	r1, #17
    6db2:	4620      	mov	r0, r4
    6db4:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    6db8:	f002 f858 	bl	8e6c <d_print_array_type>
    6dbc:	f7ff ba9e 	b.w	62fc <d_print_comp_inner+0xcc>
    6dc0:	e9d6 5303 	ldrd	r5, r3, [r6, #12]
    6dc4:	2b00      	cmp	r3, #0
    6dc6:	f43f aa99 	beq.w	62fc <d_print_comp_inner+0xcc>
    6dca:	442b      	add	r3, r5
    6dcc:	f04f 0800 	mov.w	r8, #0
    6dd0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6dd4:	3d01      	subs	r5, #1
    6dd6:	1e5f      	subs	r7, r3, #1
    6dd8:	e009      	b.n	6dee <d_print_comp_inner+0xbbe>
    6dda:	460b      	mov	r3, r1
    6ddc:	3101      	adds	r1, #1
    6dde:	42af      	cmp	r7, r5
    6de0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6de4:	54e6      	strb	r6, [r4, r3]
    6de6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6dea:	f43f aa87 	beq.w	62fc <d_print_comp_inner+0xcc>
    6dee:	29ff      	cmp	r1, #255	; 0xff
    6df0:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6df4:	d1f1      	bne.n	6dda <d_print_comp_inner+0xbaa>
    6df6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6dfa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6dfe:	4620      	mov	r0, r4
    6e00:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6e04:	4798      	blx	r3
    6e06:	2101      	movs	r1, #1
    6e08:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    6e0c:	2300      	movs	r3, #0
    6e0e:	440a      	add	r2, r1
    6e10:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    6e14:	e7e3      	b.n	6dde <d_print_comp_inner+0xbae>
    6e16:	bf00      	nop
    6e18:	00019224 	.word	0x00019224
    6e1c:	00019210 	.word	0x00019210
    6e20:	00019200 	.word	0x00019200
    6e24:	00019400 	.word	0x00019400
    6e28:	6933      	ldr	r3, [r6, #16]
    6e2a:	781b      	ldrb	r3, [r3, #0]
    6e2c:	2b39      	cmp	r3, #57	; 0x39
    6e2e:	f47f aa62 	bne.w	62f6 <d_print_comp_inner+0xc6>
    6e32:	68f2      	ldr	r2, [r6, #12]
    6e34:	68d3      	ldr	r3, [r2, #12]
    6e36:	681b      	ldr	r3, [r3, #0]
    6e38:	7859      	ldrb	r1, [r3, #1]
    6e3a:	2963      	cmp	r1, #99	; 0x63
    6e3c:	f001 8103 	beq.w	8046 <d_print_comp_inner+0x1e16>
    6e40:	4632      	mov	r2, r6
    6e42:	2111      	movs	r1, #17
    6e44:	4620      	mov	r0, r4
    6e46:	f002 fbed 	bl	9624 <d_maybe_print_fold_expression>
    6e4a:	2800      	cmp	r0, #0
    6e4c:	f47f aa56 	bne.w	62fc <d_print_comp_inner+0xcc>
    6e50:	68f3      	ldr	r3, [r6, #12]
    6e52:	781a      	ldrb	r2, [r3, #0]
    6e54:	2a32      	cmp	r2, #50	; 0x32
    6e56:	f001 81b2 	beq.w	81be <d_print_comp_inner+0x1f8e>
    6e5a:	68db      	ldr	r3, [r3, #12]
    6e5c:	681b      	ldr	r3, [r3, #0]
    6e5e:	781a      	ldrb	r2, [r3, #0]
    6e60:	2a63      	cmp	r2, #99	; 0x63
    6e62:	f041 80ed 	bne.w	8040 <d_print_comp_inner+0x1e10>
    6e66:	785a      	ldrb	r2, [r3, #1]
    6e68:	2a6c      	cmp	r2, #108	; 0x6c
    6e6a:	f041 80e9 	bne.w	8040 <d_print_comp_inner+0x1e10>
    6e6e:	789b      	ldrb	r3, [r3, #2]
    6e70:	2b00      	cmp	r3, #0
    6e72:	f041 80e5 	bne.w	8040 <d_print_comp_inner+0x1e10>
    6e76:	6933      	ldr	r3, [r6, #16]
    6e78:	68da      	ldr	r2, [r3, #12]
    6e7a:	7811      	ldrb	r1, [r2, #0]
    6e7c:	2903      	cmp	r1, #3
    6e7e:	f001 8223 	beq.w	82c8 <d_print_comp_inner+0x2098>
    6e82:	2111      	movs	r1, #17
    6e84:	4620      	mov	r0, r4
    6e86:	68da      	ldr	r2, [r3, #12]
    6e88:	f002 fb5e 	bl	9548 <d_print_subexpr>
    6e8c:	68f2      	ldr	r2, [r6, #12]
    6e8e:	68d3      	ldr	r3, [r2, #12]
    6e90:	681b      	ldr	r3, [r3, #0]
    6e92:	7819      	ldrb	r1, [r3, #0]
    6e94:	2969      	cmp	r1, #105	; 0x69
    6e96:	f041 810e 	bne.w	80b6 <d_print_comp_inner+0x1e86>
    6e9a:	7858      	ldrb	r0, [r3, #1]
    6e9c:	2878      	cmp	r0, #120	; 0x78
    6e9e:	f041 810a 	bne.w	80b6 <d_print_comp_inner+0x1e86>
    6ea2:	7898      	ldrb	r0, [r3, #2]
    6ea4:	2800      	cmp	r0, #0
    6ea6:	f041 8106 	bne.w	80b6 <d_print_comp_inner+0x1e86>
    6eaa:	4620      	mov	r0, r4
    6eac:	215b      	movs	r1, #91	; 0x5b
    6eae:	f7fc ff27 	bl	3d00 <d_append_char>
    6eb2:	6933      	ldr	r3, [r6, #16]
    6eb4:	4620      	mov	r0, r4
    6eb6:	2111      	movs	r1, #17
    6eb8:	691a      	ldr	r2, [r3, #16]
    6eba:	f001 fa71 	bl	83a0 <d_print_comp>
    6ebe:	215d      	movs	r1, #93	; 0x5d
    6ec0:	4620      	mov	r0, r4
    6ec2:	f7fc ff1d 	bl	3d00 <d_append_char>
    6ec6:	68f3      	ldr	r3, [r6, #12]
    6ec8:	781a      	ldrb	r2, [r3, #0]
    6eca:	2a32      	cmp	r2, #50	; 0x32
    6ecc:	f47f aa16 	bne.w	62fc <d_print_comp_inner+0xcc>
    6ed0:	68db      	ldr	r3, [r3, #12]
    6ed2:	689a      	ldr	r2, [r3, #8]
    6ed4:	2a01      	cmp	r2, #1
    6ed6:	f47f aa11 	bne.w	62fc <d_print_comp_inner+0xcc>
    6eda:	685b      	ldr	r3, [r3, #4]
    6edc:	781b      	ldrb	r3, [r3, #0]
    6ede:	2b3e      	cmp	r3, #62	; 0x3e
    6ee0:	f47f aa0c 	bne.w	62fc <d_print_comp_inner+0xcc>
    6ee4:	2129      	movs	r1, #41	; 0x29
    6ee6:	4620      	mov	r0, r4
    6ee8:	b013      	add	sp, #76	; 0x4c
    6eea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6eee:	f7fc bf07 	b.w	3d00 <d_append_char>
    6ef2:	68f7      	ldr	r7, [r6, #12]
    6ef4:	2f00      	cmp	r7, #0
    6ef6:	f040 85b2 	bne.w	7a5e <d_print_comp_inner+0x182e>
    6efa:	4dcd      	ldr	r5, [pc, #820]	; (7230 <d_print_comp_inner+0x1000>)
    6efc:	2674      	movs	r6, #116	; 0x74
    6efe:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6f02:	f105 0803 	add.w	r8, r5, #3
    6f06:	e00b      	b.n	6f20 <d_print_comp_inner+0xcf0>
    6f08:	460b      	mov	r3, r1
    6f0a:	3101      	adds	r1, #1
    6f0c:	45a8      	cmp	r8, r5
    6f0e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6f12:	54e6      	strb	r6, [r4, r3]
    6f14:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6f18:	f43f a9f0 	beq.w	62fc <d_print_comp_inner+0xcc>
    6f1c:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6f20:	29ff      	cmp	r1, #255	; 0xff
    6f22:	d1f1      	bne.n	6f08 <d_print_comp_inner+0xcd8>
    6f24:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6f28:	4620      	mov	r0, r4
    6f2a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6f2e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    6f32:	4798      	blx	r3
    6f34:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6f38:	2101      	movs	r1, #1
    6f3a:	3301      	adds	r3, #1
    6f3c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6f40:	2300      	movs	r3, #0
    6f42:	e7e3      	b.n	6f0c <d_print_comp_inner+0xcdc>
    6f44:	4fbb      	ldr	r7, [pc, #748]	; (7234 <d_print_comp_inner+0x1004>)
    6f46:	2568      	movs	r5, #104	; 0x68
    6f48:	f04f 0800 	mov.w	r8, #0
    6f4c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6f50:	f107 0910 	add.w	r9, r7, #16
    6f54:	e00b      	b.n	6f6e <d_print_comp_inner+0xd3e>
    6f56:	460b      	mov	r3, r1
    6f58:	3101      	adds	r1, #1
    6f5a:	45b9      	cmp	r9, r7
    6f5c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6f60:	54e5      	strb	r5, [r4, r3]
    6f62:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6f66:	f43f a9eb 	beq.w	6340 <d_print_comp_inner+0x110>
    6f6a:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6f6e:	29ff      	cmp	r1, #255	; 0xff
    6f70:	d1f1      	bne.n	6f56 <d_print_comp_inner+0xd26>
    6f72:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6f76:	4620      	mov	r0, r4
    6f78:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6f7c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6f80:	4798      	blx	r3
    6f82:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6f86:	2101      	movs	r1, #1
    6f88:	3301      	adds	r3, #1
    6f8a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6f8e:	2300      	movs	r3, #0
    6f90:	e7e3      	b.n	6f5a <d_print_comp_inner+0xd2a>
    6f92:	4fa9      	ldr	r7, [pc, #676]	; (7238 <d_print_comp_inner+0x1008>)
    6f94:	2572      	movs	r5, #114	; 0x72
    6f96:	f04f 0800 	mov.w	r8, #0
    6f9a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6f9e:	f107 0914 	add.w	r9, r7, #20
    6fa2:	e00b      	b.n	6fbc <d_print_comp_inner+0xd8c>
    6fa4:	460b      	mov	r3, r1
    6fa6:	3101      	adds	r1, #1
    6fa8:	45b9      	cmp	r9, r7
    6faa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6fae:	54e5      	strb	r5, [r4, r3]
    6fb0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6fb4:	f000 8389 	beq.w	76ca <d_print_comp_inner+0x149a>
    6fb8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6fbc:	29ff      	cmp	r1, #255	; 0xff
    6fbe:	d1f1      	bne.n	6fa4 <d_print_comp_inner+0xd74>
    6fc0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6fc4:	4620      	mov	r0, r4
    6fc6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6fca:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6fce:	4798      	blx	r3
    6fd0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6fd4:	2101      	movs	r1, #1
    6fd6:	3301      	adds	r3, #1
    6fd8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6fdc:	2300      	movs	r3, #0
    6fde:	e7e3      	b.n	6fa8 <d_print_comp_inner+0xd78>
    6fe0:	4f96      	ldr	r7, [pc, #600]	; (723c <d_print_comp_inner+0x100c>)
    6fe2:	2554      	movs	r5, #84	; 0x54
    6fe4:	f04f 0800 	mov.w	r8, #0
    6fe8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6fec:	f107 0918 	add.w	r9, r7, #24
    6ff0:	e00b      	b.n	700a <d_print_comp_inner+0xdda>
    6ff2:	460b      	mov	r3, r1
    6ff4:	3101      	adds	r1, #1
    6ff6:	45b9      	cmp	r9, r7
    6ff8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6ffc:	54e5      	strb	r5, [r4, r3]
    6ffe:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7002:	f43f a99d 	beq.w	6340 <d_print_comp_inner+0x110>
    7006:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    700a:	29ff      	cmp	r1, #255	; 0xff
    700c:	d1f1      	bne.n	6ff2 <d_print_comp_inner+0xdc2>
    700e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7012:	4620      	mov	r0, r4
    7014:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7018:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    701c:	4798      	blx	r3
    701e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7022:	2101      	movs	r1, #1
    7024:	3301      	adds	r3, #1
    7026:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    702a:	2300      	movs	r3, #0
    702c:	e7e3      	b.n	6ff6 <d_print_comp_inner+0xdc6>
    702e:	4f84      	ldr	r7, [pc, #528]	; (7240 <d_print_comp_inner+0x1010>)
    7030:	2554      	movs	r5, #84	; 0x54
    7032:	f04f 0800 	mov.w	r8, #0
    7036:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    703a:	f107 0915 	add.w	r9, r7, #21
    703e:	e00b      	b.n	7058 <d_print_comp_inner+0xe28>
    7040:	460b      	mov	r3, r1
    7042:	3101      	adds	r1, #1
    7044:	454f      	cmp	r7, r9
    7046:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    704a:	54e5      	strb	r5, [r4, r3]
    704c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7050:	f43f a976 	beq.w	6340 <d_print_comp_inner+0x110>
    7054:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7058:	29ff      	cmp	r1, #255	; 0xff
    705a:	d1f1      	bne.n	7040 <d_print_comp_inner+0xe10>
    705c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7060:	4620      	mov	r0, r4
    7062:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7066:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    706a:	4798      	blx	r3
    706c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7070:	2101      	movs	r1, #1
    7072:	3301      	adds	r3, #1
    7074:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7078:	2300      	movs	r3, #0
    707a:	e7e3      	b.n	7044 <d_print_comp_inner+0xe14>
    707c:	2300      	movs	r3, #0
    707e:	f8d0 7148 	ldr.w	r7, [r0, #328]	; 0x148
    7082:	f8d0 8114 	ldr.w	r8, [r0, #276]	; 0x114
    7086:	68f2      	ldr	r2, [r6, #12]
    7088:	2111      	movs	r1, #17
    708a:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
    708e:	f8c0 6148 	str.w	r6, [r0, #328]	; 0x148
    7092:	f001 f985 	bl	83a0 <d_print_comp>
    7096:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    709a:	2b3c      	cmp	r3, #60	; 0x3c
    709c:	f000 872c 	beq.w	7ef8 <d_print_comp_inner+0x1cc8>
    70a0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    70a4:	29ff      	cmp	r1, #255	; 0xff
    70a6:	f000 8717 	beq.w	7ed8 <d_print_comp_inner+0x1ca8>
    70aa:	1c4b      	adds	r3, r1, #1
    70ac:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    70b0:	233c      	movs	r3, #60	; 0x3c
    70b2:	5463      	strb	r3, [r4, r1]
    70b4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    70b8:	2111      	movs	r1, #17
    70ba:	4620      	mov	r0, r4
    70bc:	6932      	ldr	r2, [r6, #16]
    70be:	f001 f96f 	bl	83a0 <d_print_comp>
    70c2:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    70c6:	2b3e      	cmp	r3, #62	; 0x3e
    70c8:	f000 8700 	beq.w	7ecc <d_print_comp_inner+0x1c9c>
    70cc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    70d0:	29ff      	cmp	r1, #255	; 0xff
    70d2:	f000 86eb 	beq.w	7eac <d_print_comp_inner+0x1c7c>
    70d6:	1c4b      	adds	r3, r1, #1
    70d8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    70dc:	233e      	movs	r3, #62	; 0x3e
    70de:	5463      	strb	r3, [r4, r1]
    70e0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    70e4:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
    70e8:	f8c4 7148 	str.w	r7, [r4, #328]	; 0x148
    70ec:	f7ff b906 	b.w	62fc <d_print_comp_inner+0xcc>
    70f0:	f9b6 3012 	ldrsh.w	r3, [r6, #18]
    70f4:	2b00      	cmp	r3, #0
    70f6:	f040 8629 	bne.w	7d4c <d_print_comp_inner+0x1b1c>
    70fa:	68f2      	ldr	r2, [r6, #12]
    70fc:	4b51      	ldr	r3, [pc, #324]	; (7244 <d_print_comp_inner+0x1014>)
    70fe:	68d1      	ldr	r1, [r2, #12]
    7100:	4299      	cmp	r1, r3
    7102:	f000 855d 	beq.w	7bc0 <d_print_comp_inner+0x1990>
    7106:	2111      	movs	r1, #17
    7108:	4620      	mov	r0, r4
    710a:	f001 f949 	bl	83a0 <d_print_comp>
    710e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    7112:	2bff      	cmp	r3, #255	; 0xff
    7114:	f001 802b 	beq.w	816e <d_print_comp_inner+0x1f3e>
    7118:	2220      	movs	r2, #32
    711a:	1c59      	adds	r1, r3, #1
    711c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7120:	54e2      	strb	r2, [r4, r3]
    7122:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    7126:	f9b6 8010 	ldrsh.w	r8, [r6, #16]
    712a:	f1b8 0f00 	cmp.w	r8, #0
    712e:	f040 8472 	bne.w	7a16 <d_print_comp_inner+0x17e6>
    7132:	4e45      	ldr	r6, [pc, #276]	; (7248 <d_print_comp_inner+0x1018>)
    7134:	255f      	movs	r5, #95	; 0x5f
    7136:	1d77      	adds	r7, r6, #5
    7138:	e00b      	b.n	7152 <d_print_comp_inner+0xf22>
    713a:	460b      	mov	r3, r1
    713c:	3101      	adds	r1, #1
    713e:	42b7      	cmp	r7, r6
    7140:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7144:	54e5      	strb	r5, [r4, r3]
    7146:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    714a:	f43f a8d7 	beq.w	62fc <d_print_comp_inner+0xcc>
    714e:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7152:	29ff      	cmp	r1, #255	; 0xff
    7154:	d1f1      	bne.n	713a <d_print_comp_inner+0xf0a>
    7156:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    715a:	4620      	mov	r0, r4
    715c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7160:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7164:	4798      	blx	r3
    7166:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    716a:	2101      	movs	r1, #1
    716c:	3301      	adds	r3, #1
    716e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7172:	2300      	movs	r3, #0
    7174:	e7e3      	b.n	713e <d_print_comp_inner+0xf0e>
    7176:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
    717a:	2b00      	cmp	r3, #0
    717c:	f000 84d4 	beq.w	7b28 <d_print_comp_inner+0x18f8>
    7180:	4d32      	ldr	r5, [pc, #200]	; (724c <d_print_comp_inner+0x101c>)
    7182:	2761      	movs	r7, #97	; 0x61
    7184:	f04f 0800 	mov.w	r8, #0
    7188:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    718c:	f105 0904 	add.w	r9, r5, #4
    7190:	e00b      	b.n	71aa <d_print_comp_inner+0xf7a>
    7192:	460b      	mov	r3, r1
    7194:	3101      	adds	r1, #1
    7196:	45a9      	cmp	r9, r5
    7198:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    719c:	54e7      	strb	r7, [r4, r3]
    719e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    71a2:	f000 84d9 	beq.w	7b58 <d_print_comp_inner+0x1928>
    71a6:	f815 7f01 	ldrb.w	r7, [r5, #1]!
    71aa:	29ff      	cmp	r1, #255	; 0xff
    71ac:	d1f1      	bne.n	7192 <d_print_comp_inner+0xf62>
    71ae:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    71b2:	4620      	mov	r0, r4
    71b4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    71b8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    71bc:	4798      	blx	r3
    71be:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    71c2:	2101      	movs	r1, #1
    71c4:	3301      	adds	r3, #1
    71c6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    71ca:	2300      	movs	r3, #0
    71cc:	e7e3      	b.n	7196 <d_print_comp_inner+0xf66>
    71ce:	4f20      	ldr	r7, [pc, #128]	; (7250 <d_print_comp_inner+0x1020>)
    71d0:	256a      	movs	r5, #106	; 0x6a
    71d2:	f04f 0800 	mov.w	r8, #0
    71d6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    71da:	f107 090d 	add.w	r9, r7, #13
    71de:	e00b      	b.n	71f8 <d_print_comp_inner+0xfc8>
    71e0:	460b      	mov	r3, r1
    71e2:	3101      	adds	r1, #1
    71e4:	45b9      	cmp	r9, r7
    71e6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    71ea:	54e5      	strb	r5, [r4, r3]
    71ec:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    71f0:	f43f a8a6 	beq.w	6340 <d_print_comp_inner+0x110>
    71f4:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    71f8:	29ff      	cmp	r1, #255	; 0xff
    71fa:	d1f1      	bne.n	71e0 <d_print_comp_inner+0xfb0>
    71fc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7200:	4620      	mov	r0, r4
    7202:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7206:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    720a:	4798      	blx	r3
    720c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7210:	2101      	movs	r1, #1
    7212:	3301      	adds	r3, #1
    7214:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7218:	2300      	movs	r3, #0
    721a:	e7e3      	b.n	71e4 <d_print_comp_inner+0xfb4>
    721c:	4f0d      	ldr	r7, [pc, #52]	; (7254 <d_print_comp_inner+0x1024>)
    721e:	2567      	movs	r5, #103	; 0x67
    7220:	f04f 0800 	mov.w	r8, #0
    7224:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7228:	f107 091c 	add.w	r9, r7, #28
    722c:	e020      	b.n	7270 <d_print_comp_inner+0x1040>
    722e:	bf00      	nop
    7230:	00019390 	.word	0x00019390
    7234:	000192dc 	.word	0x000192dc
    7238:	000192c4 	.word	0x000192c4
    723c:	000192a8 	.word	0x000192a8
    7240:	00019290 	.word	0x00019290
    7244:	00019b14 	.word	0x00019b14
    7248:	00019314 	.word	0x00019314
    724c:	0001919c 	.word	0x0001919c
    7250:	00019370 	.word	0x00019370
    7254:	000193a0 	.word	0x000193a0
    7258:	460b      	mov	r3, r1
    725a:	3101      	adds	r1, #1
    725c:	45b9      	cmp	r9, r7
    725e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7262:	54e5      	strb	r5, [r4, r3]
    7264:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7268:	f43f a86a 	beq.w	6340 <d_print_comp_inner+0x110>
    726c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7270:	29ff      	cmp	r1, #255	; 0xff
    7272:	d1f1      	bne.n	7258 <d_print_comp_inner+0x1028>
    7274:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7278:	4620      	mov	r0, r4
    727a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    727e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7282:	4798      	blx	r3
    7284:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7288:	2101      	movs	r1, #1
    728a:	3301      	adds	r3, #1
    728c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7290:	2300      	movs	r3, #0
    7292:	e7e3      	b.n	725c <d_print_comp_inner+0x102c>
    7294:	4fd4      	ldr	r7, [pc, #848]	; (75e8 <d_print_comp_inner+0x13b8>)
    7296:	2564      	movs	r5, #100	; 0x64
    7298:	f04f 0800 	mov.w	r8, #0
    729c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    72a0:	f107 0909 	add.w	r9, r7, #9
    72a4:	e00b      	b.n	72be <d_print_comp_inner+0x108e>
    72a6:	460b      	mov	r3, r1
    72a8:	3101      	adds	r1, #1
    72aa:	45b9      	cmp	r9, r7
    72ac:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    72b0:	54e5      	strb	r5, [r4, r3]
    72b2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    72b6:	f000 8322 	beq.w	78fe <d_print_comp_inner+0x16ce>
    72ba:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    72be:	29ff      	cmp	r1, #255	; 0xff
    72c0:	d1f1      	bne.n	72a6 <d_print_comp_inner+0x1076>
    72c2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    72c6:	4620      	mov	r0, r4
    72c8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    72cc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    72d0:	4798      	blx	r3
    72d2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    72d6:	2101      	movs	r1, #1
    72d8:	3301      	adds	r3, #1
    72da:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    72de:	2300      	movs	r3, #0
    72e0:	e7e3      	b.n	72aa <d_print_comp_inner+0x107a>
    72e2:	4fc2      	ldr	r7, [pc, #776]	; (75ec <d_print_comp_inner+0x13bc>)
    72e4:	257b      	movs	r5, #123	; 0x7b
    72e6:	f04f 0800 	mov.w	r8, #0
    72ea:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    72ee:	f107 0907 	add.w	r9, r7, #7
    72f2:	e00b      	b.n	730c <d_print_comp_inner+0x10dc>
    72f4:	460b      	mov	r3, r1
    72f6:	3101      	adds	r1, #1
    72f8:	45b9      	cmp	r9, r7
    72fa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    72fe:	54e5      	strb	r5, [r4, r3]
    7300:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7304:	f000 828d 	beq.w	7822 <d_print_comp_inner+0x15f2>
    7308:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    730c:	29ff      	cmp	r1, #255	; 0xff
    730e:	d1f1      	bne.n	72f4 <d_print_comp_inner+0x10c4>
    7310:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7314:	4620      	mov	r0, r4
    7316:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    731a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    731e:	4798      	blx	r3
    7320:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7324:	2101      	movs	r1, #1
    7326:	3301      	adds	r3, #1
    7328:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    732c:	2300      	movs	r3, #0
    732e:	e7e3      	b.n	72f8 <d_print_comp_inner+0x10c8>
    7330:	68f2      	ldr	r2, [r6, #12]
    7332:	49af      	ldr	r1, [pc, #700]	; (75f0 <d_print_comp_inner+0x13c0>)
    7334:	a802      	add	r0, sp, #8
    7336:	f006 f893 	bl	d460 <sprintf>
    733a:	a802      	add	r0, sp, #8
    733c:	f006 f990 	bl	d660 <strlen>
    7340:	2800      	cmp	r0, #0
    7342:	f43e afdb 	beq.w	62fc <d_print_comp_inner+0xcc>
    7346:	ad02      	add	r5, sp, #8
    7348:	f04f 0800 	mov.w	r8, #0
    734c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7350:	182f      	adds	r7, r5, r0
    7352:	e009      	b.n	7368 <d_print_comp_inner+0x1138>
    7354:	460b      	mov	r3, r1
    7356:	3101      	adds	r1, #1
    7358:	42af      	cmp	r7, r5
    735a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    735e:	54e6      	strb	r6, [r4, r3]
    7360:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7364:	f43e afca 	beq.w	62fc <d_print_comp_inner+0xcc>
    7368:	29ff      	cmp	r1, #255	; 0xff
    736a:	f815 6b01 	ldrb.w	r6, [r5], #1
    736e:	d1f1      	bne.n	7354 <d_print_comp_inner+0x1124>
    7370:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7374:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7378:	4620      	mov	r0, r4
    737a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    737e:	4798      	blx	r3
    7380:	2101      	movs	r1, #1
    7382:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7386:	2300      	movs	r3, #0
    7388:	440a      	add	r2, r1
    738a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    738e:	e7e3      	b.n	7358 <d_print_comp_inner+0x1128>
    7390:	4f98      	ldr	r7, [pc, #608]	; (75f4 <d_print_comp_inner+0x13c4>)
    7392:	256f      	movs	r5, #111	; 0x6f
    7394:	f04f 0800 	mov.w	r8, #0
    7398:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    739c:	f107 0908 	add.w	r9, r7, #8
    73a0:	e00b      	b.n	73ba <d_print_comp_inner+0x118a>
    73a2:	460b      	mov	r3, r1
    73a4:	3101      	adds	r1, #1
    73a6:	454f      	cmp	r7, r9
    73a8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    73ac:	54e5      	strb	r5, [r4, r3]
    73ae:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    73b2:	f000 829c 	beq.w	78ee <d_print_comp_inner+0x16be>
    73b6:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    73ba:	29ff      	cmp	r1, #255	; 0xff
    73bc:	d1f1      	bne.n	73a2 <d_print_comp_inner+0x1172>
    73be:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    73c2:	4620      	mov	r0, r4
    73c4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    73c8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    73cc:	4798      	blx	r3
    73ce:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    73d2:	2101      	movs	r1, #1
    73d4:	3301      	adds	r3, #1
    73d6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    73da:	2300      	movs	r3, #0
    73dc:	e7e3      	b.n	73a6 <d_print_comp_inner+0x1176>
    73de:	4f85      	ldr	r7, [pc, #532]	; (75f4 <d_print_comp_inner+0x13c4>)
    73e0:	256f      	movs	r5, #111	; 0x6f
    73e2:	f04f 0800 	mov.w	r8, #0
    73e6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    73ea:	f107 0908 	add.w	r9, r7, #8
    73ee:	e00b      	b.n	7408 <d_print_comp_inner+0x11d8>
    73f0:	460b      	mov	r3, r1
    73f2:	3101      	adds	r1, #1
    73f4:	454f      	cmp	r7, r9
    73f6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    73fa:	54e5      	strb	r5, [r4, r3]
    73fc:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7400:	f43f a886 	beq.w	6510 <d_print_comp_inner+0x2e0>
    7404:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7408:	29ff      	cmp	r1, #255	; 0xff
    740a:	d1f1      	bne.n	73f0 <d_print_comp_inner+0x11c0>
    740c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7410:	4620      	mov	r0, r4
    7412:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7416:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    741a:	4798      	blx	r3
    741c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7420:	2101      	movs	r1, #1
    7422:	3301      	adds	r3, #1
    7424:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7428:	2300      	movs	r3, #0
    742a:	e7e3      	b.n	73f4 <d_print_comp_inner+0x11c4>
    742c:	68f7      	ldr	r7, [r6, #12]
    742e:	4e72      	ldr	r6, [pc, #456]	; (75f8 <d_print_comp_inner+0x13c8>)
    7430:	256f      	movs	r5, #111	; 0x6f
    7432:	f04f 0900 	mov.w	r9, #0
    7436:	f8d7 8008 	ldr.w	r8, [r7, #8]
    743a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    743e:	f106 0a07 	add.w	sl, r6, #7
    7442:	e00b      	b.n	745c <d_print_comp_inner+0x122c>
    7444:	460b      	mov	r3, r1
    7446:	3101      	adds	r1, #1
    7448:	45b2      	cmp	sl, r6
    744a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    744e:	54e5      	strb	r5, [r4, r3]
    7450:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7454:	f000 81b1 	beq.w	77ba <d_print_comp_inner+0x158a>
    7458:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    745c:	29ff      	cmp	r1, #255	; 0xff
    745e:	d1f1      	bne.n	7444 <d_print_comp_inner+0x1214>
    7460:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7464:	4620      	mov	r0, r4
    7466:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    746a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    746e:	4798      	blx	r3
    7470:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7474:	2101      	movs	r1, #1
    7476:	3301      	adds	r3, #1
    7478:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    747c:	2300      	movs	r3, #0
    747e:	e7e3      	b.n	7448 <d_print_comp_inner+0x1218>
    7480:	e9d6 2603 	ldrd	r2, r6, [r6, #12]
    7484:	b112      	cbz	r2, 748c <d_print_comp_inner+0x125c>
    7486:	2111      	movs	r1, #17
    7488:	f000 ff8a 	bl	83a0 <d_print_comp>
    748c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    7490:	2bff      	cmp	r3, #255	; 0xff
    7492:	f000 84e6 	beq.w	7e62 <d_print_comp_inner+0x1c32>
    7496:	1c5a      	adds	r2, r3, #1
    7498:	257b      	movs	r5, #123	; 0x7b
    749a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    749e:	2111      	movs	r1, #17
    74a0:	54e5      	strb	r5, [r4, r3]
    74a2:	4632      	mov	r2, r6
    74a4:	4620      	mov	r0, r4
    74a6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    74aa:	f000 ff79 	bl	83a0 <d_print_comp>
    74ae:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    74b2:	29ff      	cmp	r1, #255	; 0xff
    74b4:	f000 8168 	beq.w	7788 <d_print_comp_inner+0x1558>
    74b8:	1c4a      	adds	r2, r1, #1
    74ba:	237d      	movs	r3, #125	; 0x7d
    74bc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    74c0:	5463      	strb	r3, [r4, r1]
    74c2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    74c6:	f7fe bf19 	b.w	62fc <d_print_comp_inner+0xcc>
    74ca:	e9d6 7503 	ldrd	r7, r5, [r6, #12]
    74ce:	783b      	ldrb	r3, [r7, #0]
    74d0:	2b32      	cmp	r3, #50	; 0x32
    74d2:	f000 8388 	beq.w	7be6 <d_print_comp_inner+0x19b6>
    74d6:	2b34      	cmp	r3, #52	; 0x34
    74d8:	f040 8754 	bne.w	8384 <d_print_comp_inner+0x2154>
    74dc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    74e0:	2bff      	cmp	r3, #255	; 0xff
    74e2:	f000 86be 	beq.w	8262 <d_print_comp_inner+0x2032>
    74e6:	1c5a      	adds	r2, r3, #1
    74e8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    74ec:	2228      	movs	r2, #40	; 0x28
    74ee:	54e2      	strb	r2, [r4, r3]
    74f0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    74f4:	2111      	movs	r1, #17
    74f6:	4620      	mov	r0, r4
    74f8:	68fa      	ldr	r2, [r7, #12]
    74fa:	f000 ff51 	bl	83a0 <d_print_comp>
    74fe:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7502:	29ff      	cmp	r1, #255	; 0xff
    7504:	f000 869c 	beq.w	8240 <d_print_comp_inner+0x2010>
    7508:	2329      	movs	r3, #41	; 0x29
    750a:	1c4a      	adds	r2, r1, #1
    750c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7510:	5463      	strb	r3, [r4, r1]
    7512:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7516:	f7ff b8bd 	b.w	6694 <d_print_comp_inner+0x464>
    751a:	2111      	movs	r1, #17
    751c:	68f2      	ldr	r2, [r6, #12]
    751e:	b013      	add	sp, #76	; 0x4c
    7520:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7524:	f001 be2e 	b.w	9184 <d_print_expr_op>
    7528:	4f34      	ldr	r7, [pc, #208]	; (75fc <d_print_comp_inner+0x13cc>)
    752a:	2567      	movs	r5, #103	; 0x67
    752c:	f04f 0800 	mov.w	r8, #0
    7530:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7534:	f107 091b 	add.w	r9, r7, #27
    7538:	e00b      	b.n	7552 <d_print_comp_inner+0x1322>
    753a:	460b      	mov	r3, r1
    753c:	3101      	adds	r1, #1
    753e:	45b9      	cmp	r9, r7
    7540:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7544:	54e5      	strb	r5, [r4, r3]
    7546:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    754a:	f43e aef9 	beq.w	6340 <d_print_comp_inner+0x110>
    754e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7552:	29ff      	cmp	r1, #255	; 0xff
    7554:	d1f1      	bne.n	753a <d_print_comp_inner+0x130a>
    7556:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    755a:	4620      	mov	r0, r4
    755c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7560:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7564:	4798      	blx	r3
    7566:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    756a:	2101      	movs	r1, #1
    756c:	3301      	adds	r3, #1
    756e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7572:	2300      	movs	r3, #0
    7574:	e7e3      	b.n	753e <d_print_comp_inner+0x130e>
    7576:	68f2      	ldr	r2, [r6, #12]
    7578:	e9d2 5300 	ldrd	r5, r3, [r2]
    757c:	2b00      	cmp	r3, #0
    757e:	f43e aebd 	beq.w	62fc <d_print_comp_inner+0xcc>
    7582:	442b      	add	r3, r5
    7584:	f04f 0800 	mov.w	r8, #0
    7588:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    758c:	3d01      	subs	r5, #1
    758e:	1e5f      	subs	r7, r3, #1
    7590:	e009      	b.n	75a6 <d_print_comp_inner+0x1376>
    7592:	460b      	mov	r3, r1
    7594:	3101      	adds	r1, #1
    7596:	42af      	cmp	r7, r5
    7598:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    759c:	54e6      	strb	r6, [r4, r3]
    759e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    75a2:	f43e aeab 	beq.w	62fc <d_print_comp_inner+0xcc>
    75a6:	29ff      	cmp	r1, #255	; 0xff
    75a8:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    75ac:	d1f1      	bne.n	7592 <d_print_comp_inner+0x1362>
    75ae:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    75b2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    75b6:	4620      	mov	r0, r4
    75b8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    75bc:	4798      	blx	r3
    75be:	2101      	movs	r1, #1
    75c0:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    75c4:	2300      	movs	r3, #0
    75c6:	440a      	add	r2, r1
    75c8:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    75cc:	e7e3      	b.n	7596 <d_print_comp_inner+0x1366>
    75ce:	e9d6 5303 	ldrd	r5, r3, [r6, #12]
    75d2:	2b00      	cmp	r3, #0
    75d4:	f43e ae92 	beq.w	62fc <d_print_comp_inner+0xcc>
    75d8:	442b      	add	r3, r5
    75da:	f04f 0800 	mov.w	r8, #0
    75de:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    75e2:	3d01      	subs	r5, #1
    75e4:	1e5f      	subs	r7, r3, #1
    75e6:	e015      	b.n	7614 <d_print_comp_inner+0x13e4>
    75e8:	00019380 	.word	0x00019380
    75ec:	000193e0 	.word	0x000193e0
    75f0:	00019114 	.word	0x00019114
    75f4:	00019334 	.word	0x00019334
    75f8:	00019328 	.word	0x00019328
    75fc:	000193c0 	.word	0x000193c0
    7600:	460b      	mov	r3, r1
    7602:	3101      	adds	r1, #1
    7604:	42af      	cmp	r7, r5
    7606:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    760a:	54e6      	strb	r6, [r4, r3]
    760c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7610:	f43e ae74 	beq.w	62fc <d_print_comp_inner+0xcc>
    7614:	29ff      	cmp	r1, #255	; 0xff
    7616:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    761a:	d1f1      	bne.n	7600 <d_print_comp_inner+0x13d0>
    761c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7620:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7624:	4620      	mov	r0, r4
    7626:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    762a:	4798      	blx	r3
    762c:	2101      	movs	r1, #1
    762e:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7632:	2300      	movs	r3, #0
    7634:	440a      	add	r2, r1
    7636:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    763a:	e7e3      	b.n	7604 <d_print_comp_inner+0x13d4>
    763c:	2111      	movs	r1, #17
    763e:	4620      	mov	r0, r4
    7640:	6932      	ldr	r2, [r6, #16]
    7642:	f000 fead 	bl	83a0 <d_print_comp>
    7646:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    764a:	29ff      	cmp	r1, #255	; 0xff
    764c:	f000 82bc 	beq.w	7bc8 <d_print_comp_inner+0x1998>
    7650:	1c4a      	adds	r2, r1, #1
    7652:	235d      	movs	r3, #93	; 0x5d
    7654:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7658:	5463      	strb	r3, [r4, r1]
    765a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    765e:	f7fe be4d 	b.w	62fc <d_print_comp_inner+0xcc>
    7662:	f1be 0f01 	cmp.w	lr, #1
    7666:	f240 818f 	bls.w	7988 <d_print_comp_inner+0x1758>
    766a:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    766e:	f7fe bfc3 	b.w	65f8 <d_print_comp_inner+0x3c8>
    7672:	4fd1      	ldr	r7, [pc, #836]	; (79b8 <d_print_comp_inner+0x1788>)
    7674:	2111      	movs	r1, #17
    7676:	4620      	mov	r0, r4
    7678:	68f2      	ldr	r2, [r6, #12]
    767a:	f000 fe91 	bl	83a0 <d_print_comp>
    767e:	252d      	movs	r5, #45	; 0x2d
    7680:	f04f 0800 	mov.w	r8, #0
    7684:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7688:	f107 0903 	add.w	r9, r7, #3
    768c:	e00b      	b.n	76a6 <d_print_comp_inner+0x1476>
    768e:	460b      	mov	r3, r1
    7690:	3101      	adds	r1, #1
    7692:	454f      	cmp	r7, r9
    7694:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7698:	54e5      	strb	r5, [r4, r3]
    769a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    769e:	f43e af37 	beq.w	6510 <d_print_comp_inner+0x2e0>
    76a2:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    76a6:	29ff      	cmp	r1, #255	; 0xff
    76a8:	d1f1      	bne.n	768e <d_print_comp_inner+0x145e>
    76aa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    76ae:	4620      	mov	r0, r4
    76b0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    76b4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    76b8:	4798      	blx	r3
    76ba:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    76be:	2101      	movs	r1, #1
    76c0:	3301      	adds	r3, #1
    76c2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    76c6:	2300      	movs	r3, #0
    76c8:	e7e3      	b.n	7692 <d_print_comp_inner+0x1462>
    76ca:	4fbc      	ldr	r7, [pc, #752]	; (79bc <d_print_comp_inner+0x178c>)
    76cc:	2111      	movs	r1, #17
    76ce:	4620      	mov	r0, r4
    76d0:	6932      	ldr	r2, [r6, #16]
    76d2:	f000 fe65 	bl	83a0 <d_print_comp>
    76d6:	2520      	movs	r5, #32
    76d8:	f04f 0800 	mov.w	r8, #0
    76dc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    76e0:	f107 0904 	add.w	r9, r7, #4
    76e4:	e00b      	b.n	76fe <d_print_comp_inner+0x14ce>
    76e6:	460b      	mov	r3, r1
    76e8:	3101      	adds	r1, #1
    76ea:	454f      	cmp	r7, r9
    76ec:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    76f0:	54e5      	strb	r5, [r4, r3]
    76f2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    76f6:	f43e ae23 	beq.w	6340 <d_print_comp_inner+0x110>
    76fa:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    76fe:	29ff      	cmp	r1, #255	; 0xff
    7700:	d1f1      	bne.n	76e6 <d_print_comp_inner+0x14b6>
    7702:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7706:	4620      	mov	r0, r4
    7708:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    770c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7710:	4798      	blx	r3
    7712:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7716:	2101      	movs	r1, #1
    7718:	3301      	adds	r3, #1
    771a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    771e:	2300      	movs	r3, #0
    7720:	e7e3      	b.n	76ea <d_print_comp_inner+0x14ba>
    7722:	68f2      	ldr	r2, [r6, #12]
    7724:	49a6      	ldr	r1, [pc, #664]	; (79c0 <d_print_comp_inner+0x1790>)
    7726:	3201      	adds	r2, #1
    7728:	a802      	add	r0, sp, #8
    772a:	f005 fe99 	bl	d460 <sprintf>
    772e:	a802      	add	r0, sp, #8
    7730:	f005 ff96 	bl	d660 <strlen>
    7734:	b318      	cbz	r0, 777e <d_print_comp_inner+0x154e>
    7736:	ad02      	add	r5, sp, #8
    7738:	f04f 0800 	mov.w	r8, #0
    773c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7740:	182f      	adds	r7, r5, r0
    7742:	e008      	b.n	7756 <d_print_comp_inner+0x1526>
    7744:	460b      	mov	r3, r1
    7746:	3101      	adds	r1, #1
    7748:	42af      	cmp	r7, r5
    774a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    774e:	54e6      	strb	r6, [r4, r3]
    7750:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7754:	d015      	beq.n	7782 <d_print_comp_inner+0x1552>
    7756:	29ff      	cmp	r1, #255	; 0xff
    7758:	f815 6b01 	ldrb.w	r6, [r5], #1
    775c:	d1f2      	bne.n	7744 <d_print_comp_inner+0x1514>
    775e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7762:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7766:	4620      	mov	r0, r4
    7768:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    776c:	4798      	blx	r3
    776e:	2101      	movs	r1, #1
    7770:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7774:	2300      	movs	r3, #0
    7776:	440a      	add	r2, r1
    7778:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    777c:	e7e4      	b.n	7748 <d_print_comp_inner+0x1518>
    777e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7782:	29ff      	cmp	r1, #255	; 0xff
    7784:	f47f ae98 	bne.w	74b8 <d_print_comp_inner+0x1288>
    7788:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    778c:	2500      	movs	r5, #0
    778e:	4620      	mov	r0, r4
    7790:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7794:	4798      	blx	r3
    7796:	2201      	movs	r2, #1
    7798:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    779c:	4629      	mov	r1, r5
    779e:	4413      	add	r3, r2
    77a0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    77a4:	e689      	b.n	74ba <d_print_comp_inner+0x128a>
    77a6:	6937      	ldr	r7, [r6, #16]
    77a8:	783b      	ldrb	r3, [r7, #0]
    77aa:	2b47      	cmp	r3, #71	; 0x47
    77ac:	f000 8320 	beq.w	7df0 <d_print_comp_inner+0x1bc0>
    77b0:	463a      	mov	r2, r7
    77b2:	2111      	movs	r1, #17
    77b4:	4620      	mov	r0, r4
    77b6:	f7fe bdc6 	b.w	6346 <d_print_comp_inner+0x116>
    77ba:	687d      	ldr	r5, [r7, #4]
    77bc:	782b      	ldrb	r3, [r5, #0]
    77be:	3b61      	subs	r3, #97	; 0x61
    77c0:	2b19      	cmp	r3, #25
    77c2:	f240 82cf 	bls.w	7d64 <d_print_comp_inner+0x1b34>
    77c6:	f108 37ff 	add.w	r7, r8, #4294967295	; 0xffffffff
    77ca:	5deb      	ldrb	r3, [r5, r7]
    77cc:	2b20      	cmp	r3, #32
    77ce:	bf18      	it	ne
    77d0:	4647      	movne	r7, r8
    77d2:	2f00      	cmp	r7, #0
    77d4:	f43e ad92 	beq.w	62fc <d_print_comp_inner+0xcc>
    77d8:	3d01      	subs	r5, #1
    77da:	f04f 0800 	mov.w	r8, #0
    77de:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    77e2:	442f      	add	r7, r5
    77e4:	e009      	b.n	77fa <d_print_comp_inner+0x15ca>
    77e6:	460b      	mov	r3, r1
    77e8:	3101      	adds	r1, #1
    77ea:	42af      	cmp	r7, r5
    77ec:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    77f0:	54e6      	strb	r6, [r4, r3]
    77f2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    77f6:	f43e ad81 	beq.w	62fc <d_print_comp_inner+0xcc>
    77fa:	29ff      	cmp	r1, #255	; 0xff
    77fc:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    7800:	d1f1      	bne.n	77e6 <d_print_comp_inner+0x15b6>
    7802:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7806:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    780a:	4620      	mov	r0, r4
    780c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7810:	4798      	blx	r3
    7812:	2101      	movs	r1, #1
    7814:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7818:	2300      	movs	r3, #0
    781a:	440a      	add	r2, r1
    781c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7820:	e7e3      	b.n	77ea <d_print_comp_inner+0x15ba>
    7822:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
    7826:	2111      	movs	r1, #17
    7828:	3301      	adds	r3, #1
    782a:	68f2      	ldr	r2, [r6, #12]
    782c:	4620      	mov	r0, r4
    782e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    7832:	f000 fdb5 	bl	83a0 <d_print_comp>
    7836:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
    783a:	4f62      	ldr	r7, [pc, #392]	; (79c4 <d_print_comp_inner+0x1794>)
    783c:	3b01      	subs	r3, #1
    783e:	2529      	movs	r5, #41	; 0x29
    7840:	f04f 0800 	mov.w	r8, #0
    7844:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7848:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    784c:	f107 0901 	add.w	r9, r7, #1
    7850:	e00a      	b.n	7868 <d_print_comp_inner+0x1638>
    7852:	460b      	mov	r3, r1
    7854:	3101      	adds	r1, #1
    7856:	45b9      	cmp	r9, r7
    7858:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    785c:	54e5      	strb	r5, [r4, r3]
    785e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7862:	d013      	beq.n	788c <d_print_comp_inner+0x165c>
    7864:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7868:	29ff      	cmp	r1, #255	; 0xff
    786a:	d1f2      	bne.n	7852 <d_print_comp_inner+0x1622>
    786c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7870:	4620      	mov	r0, r4
    7872:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7876:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    787a:	4798      	blx	r3
    787c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7880:	2101      	movs	r1, #1
    7882:	3301      	adds	r3, #1
    7884:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7888:	2300      	movs	r3, #0
    788a:	e7e4      	b.n	7856 <d_print_comp_inner+0x1626>
    788c:	6932      	ldr	r2, [r6, #16]
    788e:	494c      	ldr	r1, [pc, #304]	; (79c0 <d_print_comp_inner+0x1790>)
    7890:	3201      	adds	r2, #1
    7892:	a802      	add	r0, sp, #8
    7894:	f005 fde4 	bl	d460 <sprintf>
    7898:	a802      	add	r0, sp, #8
    789a:	f005 fee1 	bl	d660 <strlen>
    789e:	2800      	cmp	r0, #0
    78a0:	f43f af6d 	beq.w	777e <d_print_comp_inner+0x154e>
    78a4:	ad02      	add	r5, sp, #8
    78a6:	f04f 0800 	mov.w	r8, #0
    78aa:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    78ae:	182f      	adds	r7, r5, r0
    78b0:	e009      	b.n	78c6 <d_print_comp_inner+0x1696>
    78b2:	460b      	mov	r3, r1
    78b4:	3101      	adds	r1, #1
    78b6:	42af      	cmp	r7, r5
    78b8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    78bc:	54e6      	strb	r6, [r4, r3]
    78be:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    78c2:	f43f af5e 	beq.w	7782 <d_print_comp_inner+0x1552>
    78c6:	29ff      	cmp	r1, #255	; 0xff
    78c8:	f815 6b01 	ldrb.w	r6, [r5], #1
    78cc:	d1f1      	bne.n	78b2 <d_print_comp_inner+0x1682>
    78ce:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    78d2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    78d6:	4620      	mov	r0, r4
    78d8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    78dc:	4798      	blx	r3
    78de:	2101      	movs	r1, #1
    78e0:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    78e4:	2300      	movs	r3, #0
    78e6:	440a      	add	r2, r1
    78e8:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    78ec:	e7e3      	b.n	78b6 <d_print_comp_inner+0x1686>
    78ee:	4632      	mov	r2, r6
    78f0:	2111      	movs	r1, #17
    78f2:	4620      	mov	r0, r4
    78f4:	b013      	add	sp, #76	; 0x4c
    78f6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    78fa:	f001 bb9b 	b.w	9034 <d_print_conversion>
    78fe:	2111      	movs	r1, #17
    7900:	4620      	mov	r0, r4
    7902:	68f2      	ldr	r2, [r6, #12]
    7904:	f000 fd4c 	bl	83a0 <d_print_comp>
    7908:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    790c:	29ff      	cmp	r1, #255	; 0xff
    790e:	f000 8260 	beq.w	7dd2 <d_print_comp_inner+0x1ba2>
    7912:	1c4a      	adds	r2, r1, #1
    7914:	2329      	movs	r3, #41	; 0x29
    7916:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    791a:	5463      	strb	r3, [r4, r1]
    791c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7920:	f7fe bcec 	b.w	62fc <d_print_comp_inner+0xcc>
    7924:	4632      	mov	r2, r6
    7926:	2111      	movs	r1, #17
    7928:	4620      	mov	r0, r4
    792a:	f000 fd67 	bl	83fc <d_print_mod>
    792e:	f7fe bcff 	b.w	6330 <d_print_comp_inner+0x100>
    7932:	6932      	ldr	r2, [r6, #16]
    7934:	460d      	mov	r5, r1
    7936:	4620      	mov	r0, r4
    7938:	2111      	movs	r1, #17
    793a:	f8d4 6128 	ldr.w	r6, [r4, #296]	; 0x128
    793e:	f000 fd2f 	bl	83a0 <d_print_comp>
    7942:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7946:	42b3      	cmp	r3, r6
    7948:	f47e acd8 	bne.w	62fc <d_print_comp_inner+0xcc>
    794c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    7950:	42ab      	cmp	r3, r5
    7952:	f47e acd3 	bne.w	62fc <d_print_comp_inner+0xcc>
    7956:	3d02      	subs	r5, #2
    7958:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
    795c:	f7fe bcce 	b.w	62fc <d_print_comp_inner+0xcc>
    7960:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    7964:	2bff      	cmp	r3, #255	; 0xff
    7966:	f000 83b5 	beq.w	80d4 <d_print_comp_inner+0x1ea4>
    796a:	1c58      	adds	r0, r3, #1
    796c:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
    7970:	2111      	movs	r1, #17
    7972:	f804 9003 	strb.w	r9, [r4, r3]
    7976:	4620      	mov	r0, r4
    7978:	f855 2c0c 	ldr.w	r2, [r5, #-12]
    797c:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    7980:	f000 fd3c 	bl	83fc <d_print_mod>
    7984:	f7fe be4d 	b.w	6622 <d_print_comp_inner+0x3f2>
    7988:	f8d9 900c 	ldr.w	r9, [r9, #12]
    798c:	f1b9 0f00 	cmp.w	r9, #0
    7990:	f43e acaf 	beq.w	62f2 <d_print_comp_inner+0xc2>
    7994:	2d04      	cmp	r5, #4
    7996:	f102 0210 	add.w	r2, r2, #16
    799a:	f000 81ee 	beq.w	7d7a <d_print_comp_inner+0x1b4a>
    799e:	4628      	mov	r0, r5
    79a0:	f7fe bdf3 	b.w	658a <d_print_comp_inner+0x35a>
    79a4:	f8d6 900c 	ldr.w	r9, [r6, #12]
    79a8:	f1b8 0f00 	cmp.w	r8, #0
    79ac:	f43e aca6 	beq.w	62fc <d_print_comp_inner+0xcc>
    79b0:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
    79b4:	f7fe bff4 	b.w	69a0 <d_print_comp_inner+0x770>
    79b8:	000191f8 	.word	0x000191f8
    79bc:	000192bc 	.word	0x000192bc
    79c0:	00019114 	.word	0x00019114
    79c4:	000193ec 	.word	0x000193ec
    79c8:	7833      	ldrb	r3, [r6, #0]
    79ca:	2b2f      	cmp	r3, #47	; 0x2f
    79cc:	f47e ad01 	bne.w	63d2 <d_print_comp_inner+0x1a2>
    79d0:	460e      	mov	r6, r1
    79d2:	f8d4 e114 	ldr.w	lr, [r4, #276]	; 0x114
    79d6:	f7fe bcfe 	b.w	63d6 <d_print_comp_inner+0x1a6>
    79da:	2d07      	cmp	r5, #7
    79dc:	f47e ad75 	bne.w	64ca <d_print_comp_inner+0x29a>
    79e0:	6931      	ldr	r1, [r6, #16]
    79e2:	7808      	ldrb	r0, [r1, #0]
    79e4:	2800      	cmp	r0, #0
    79e6:	f47e ad70 	bne.w	64ca <d_print_comp_inner+0x29a>
    79ea:	6908      	ldr	r0, [r1, #16]
    79ec:	2801      	cmp	r0, #1
    79ee:	f47e ad6c 	bne.w	64ca <d_print_comp_inner+0x29a>
    79f2:	2b3d      	cmp	r3, #61	; 0x3d
    79f4:	f47e ad69 	bne.w	64ca <d_print_comp_inner+0x29a>
    79f8:	68cb      	ldr	r3, [r1, #12]
    79fa:	781b      	ldrb	r3, [r3, #0]
    79fc:	2b30      	cmp	r3, #48	; 0x30
    79fe:	f000 84bd 	beq.w	837c <d_print_comp_inner+0x214c>
    7a02:	2b31      	cmp	r3, #49	; 0x31
    7a04:	f47e ad61 	bne.w	64ca <d_print_comp_inner+0x29a>
    7a08:	4620      	mov	r0, r4
    7a0a:	49b7      	ldr	r1, [pc, #732]	; (7ce8 <d_print_comp_inner+0x1ab8>)
    7a0c:	b013      	add	sp, #76	; 0x4c
    7a0e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7a12:	f7fc b9fb 	b.w	3e0c <d_append_string>
    7a16:	4db5      	ldr	r5, [pc, #724]	; (7cec <d_print_comp_inner+0x1abc>)
    7a18:	265f      	movs	r6, #95	; 0x5f
    7a1a:	f04f 0800 	mov.w	r8, #0
    7a1e:	1d6f      	adds	r7, r5, #5
    7a20:	e00b      	b.n	7a3a <d_print_comp_inner+0x180a>
    7a22:	460b      	mov	r3, r1
    7a24:	3101      	adds	r1, #1
    7a26:	42af      	cmp	r7, r5
    7a28:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7a2c:	54e6      	strb	r6, [r4, r3]
    7a2e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7a32:	f43e ac63 	beq.w	62fc <d_print_comp_inner+0xcc>
    7a36:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    7a3a:	29ff      	cmp	r1, #255	; 0xff
    7a3c:	d1f1      	bne.n	7a22 <d_print_comp_inner+0x17f2>
    7a3e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7a42:	4620      	mov	r0, r4
    7a44:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7a48:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7a4c:	4798      	blx	r3
    7a4e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7a52:	2101      	movs	r1, #1
    7a54:	3301      	adds	r3, #1
    7a56:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7a5a:	2300      	movs	r3, #0
    7a5c:	e7e3      	b.n	7a26 <d_print_comp_inner+0x17f6>
    7a5e:	4da4      	ldr	r5, [pc, #656]	; (7cf0 <d_print_comp_inner+0x1ac0>)
    7a60:	267b      	movs	r6, #123	; 0x7b
    7a62:	f04f 0800 	mov.w	r8, #0
    7a66:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7a6a:	f105 0905 	add.w	r9, r5, #5
    7a6e:	e00a      	b.n	7a86 <d_print_comp_inner+0x1856>
    7a70:	460b      	mov	r3, r1
    7a72:	3101      	adds	r1, #1
    7a74:	45a9      	cmp	r9, r5
    7a76:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7a7a:	54e6      	strb	r6, [r4, r3]
    7a7c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7a80:	d013      	beq.n	7aaa <d_print_comp_inner+0x187a>
    7a82:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    7a86:	29ff      	cmp	r1, #255	; 0xff
    7a88:	d1f2      	bne.n	7a70 <d_print_comp_inner+0x1840>
    7a8a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7a8e:	4620      	mov	r0, r4
    7a90:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7a94:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7a98:	4798      	blx	r3
    7a9a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7a9e:	2101      	movs	r1, #1
    7aa0:	3301      	adds	r3, #1
    7aa2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7aa6:	2300      	movs	r3, #0
    7aa8:	e7e4      	b.n	7a74 <d_print_comp_inner+0x1844>
    7aaa:	463a      	mov	r2, r7
    7aac:	4991      	ldr	r1, [pc, #580]	; (7cf4 <d_print_comp_inner+0x1ac4>)
    7aae:	a802      	add	r0, sp, #8
    7ab0:	f005 fcd6 	bl	d460 <sprintf>
    7ab4:	a802      	add	r0, sp, #8
    7ab6:	f005 fdd3 	bl	d660 <strlen>
    7aba:	b318      	cbz	r0, 7b04 <d_print_comp_inner+0x18d4>
    7abc:	ad02      	add	r5, sp, #8
    7abe:	f04f 0800 	mov.w	r8, #0
    7ac2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7ac6:	182f      	adds	r7, r5, r0
    7ac8:	e008      	b.n	7adc <d_print_comp_inner+0x18ac>
    7aca:	460b      	mov	r3, r1
    7acc:	3101      	adds	r1, #1
    7ace:	42af      	cmp	r7, r5
    7ad0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7ad4:	54e6      	strb	r6, [r4, r3]
    7ad6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7ada:	d015      	beq.n	7b08 <d_print_comp_inner+0x18d8>
    7adc:	29ff      	cmp	r1, #255	; 0xff
    7ade:	f815 6b01 	ldrb.w	r6, [r5], #1
    7ae2:	d1f2      	bne.n	7aca <d_print_comp_inner+0x189a>
    7ae4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7ae8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7aec:	4620      	mov	r0, r4
    7aee:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7af2:	4798      	blx	r3
    7af4:	2101      	movs	r1, #1
    7af6:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7afa:	2300      	movs	r3, #0
    7afc:	440a      	add	r2, r1
    7afe:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7b02:	e7e4      	b.n	7ace <d_print_comp_inner+0x189e>
    7b04:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7b08:	29ff      	cmp	r1, #255	; 0xff
    7b0a:	f000 834a 	beq.w	81a2 <d_print_comp_inner+0x1f72>
    7b0e:	237d      	movs	r3, #125	; 0x7d
    7b10:	1c4a      	adds	r2, r1, #1
    7b12:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7b16:	5463      	strb	r3, [r4, r1]
    7b18:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7b1c:	f7fe bbee 	b.w	62fc <d_print_comp_inner+0xcc>
    7b20:	2500      	movs	r5, #0
    7b22:	780b      	ldrb	r3, [r1, #0]
    7b24:	f7fe bc4b 	b.w	63be <d_print_comp_inner+0x18e>
    7b28:	4631      	mov	r1, r6
    7b2a:	f7fc f90b 	bl	3d44 <d_lookup_template_argument>
    7b2e:	4602      	mov	r2, r0
    7b30:	2800      	cmp	r0, #0
    7b32:	f43e abe0 	beq.w	62f6 <d_print_comp_inner+0xc6>
    7b36:	7803      	ldrb	r3, [r0, #0]
    7b38:	2b2f      	cmp	r3, #47	; 0x2f
    7b3a:	f000 830b 	beq.w	8154 <d_print_comp_inner+0x1f24>
    7b3e:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
    7b42:	2111      	movs	r1, #17
    7b44:	682b      	ldr	r3, [r5, #0]
    7b46:	4620      	mov	r0, r4
    7b48:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    7b4c:	f000 fc28 	bl	83a0 <d_print_comp>
    7b50:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
    7b54:	f7fe bbd2 	b.w	62fc <d_print_comp_inner+0xcc>
    7b58:	68f2      	ldr	r2, [r6, #12]
    7b5a:	4966      	ldr	r1, [pc, #408]	; (7cf4 <d_print_comp_inner+0x1ac4>)
    7b5c:	3201      	adds	r2, #1
    7b5e:	a802      	add	r0, sp, #8
    7b60:	f005 fc7e 	bl	d460 <sprintf>
    7b64:	a802      	add	r0, sp, #8
    7b66:	f005 fd7b 	bl	d660 <strlen>
    7b6a:	2800      	cmp	r0, #0
    7b6c:	f43e abc6 	beq.w	62fc <d_print_comp_inner+0xcc>
    7b70:	ad02      	add	r5, sp, #8
    7b72:	f04f 0800 	mov.w	r8, #0
    7b76:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7b7a:	182f      	adds	r7, r5, r0
    7b7c:	e009      	b.n	7b92 <d_print_comp_inner+0x1962>
    7b7e:	460b      	mov	r3, r1
    7b80:	3101      	adds	r1, #1
    7b82:	42bd      	cmp	r5, r7
    7b84:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7b88:	54e6      	strb	r6, [r4, r3]
    7b8a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7b8e:	f43e abb5 	beq.w	62fc <d_print_comp_inner+0xcc>
    7b92:	29ff      	cmp	r1, #255	; 0xff
    7b94:	f815 6b01 	ldrb.w	r6, [r5], #1
    7b98:	d1f1      	bne.n	7b7e <d_print_comp_inner+0x194e>
    7b9a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7b9e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7ba2:	4620      	mov	r0, r4
    7ba4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7ba8:	4798      	blx	r3
    7baa:	2101      	movs	r1, #1
    7bac:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7bb0:	2300      	movs	r3, #0
    7bb2:	440a      	add	r2, r1
    7bb4:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7bb8:	e7e3      	b.n	7b82 <d_print_comp_inner+0x1952>
    7bba:	2500      	movs	r5, #0
    7bbc:	f7fe bc85 	b.w	64ca <d_print_comp_inner+0x29a>
    7bc0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7bc4:	f7ff baaf 	b.w	7126 <d_print_comp_inner+0xef6>
    7bc8:	2500      	movs	r5, #0
    7bca:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7bce:	4620      	mov	r0, r4
    7bd0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7bd4:	4798      	blx	r3
    7bd6:	2201      	movs	r2, #1
    7bd8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7bdc:	4629      	mov	r1, r5
    7bde:	4413      	add	r3, r2
    7be0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7be4:	e535      	b.n	7652 <d_print_comp_inner+0x1422>
    7be6:	68fb      	ldr	r3, [r7, #12]
    7be8:	681e      	ldr	r6, [r3, #0]
    7bea:	7833      	ldrb	r3, [r6, #0]
    7bec:	2b61      	cmp	r3, #97	; 0x61
    7bee:	f040 80c9 	bne.w	7d84 <d_print_comp_inner+0x1b54>
    7bf2:	7872      	ldrb	r2, [r6, #1]
    7bf4:	2a64      	cmp	r2, #100	; 0x64
    7bf6:	f040 80c5 	bne.w	7d84 <d_print_comp_inner+0x1b54>
    7bfa:	78b2      	ldrb	r2, [r6, #2]
    7bfc:	2a00      	cmp	r2, #0
    7bfe:	f040 80c1 	bne.w	7d84 <d_print_comp_inner+0x1b54>
    7c02:	782a      	ldrb	r2, [r5, #0]
    7c04:	2a03      	cmp	r2, #3
    7c06:	f000 8354 	beq.w	82b2 <d_print_comp_inner+0x2082>
    7c0a:	2a39      	cmp	r2, #57	; 0x39
    7c0c:	f000 836b 	beq.w	82e6 <d_print_comp_inner+0x20b6>
    7c10:	2b73      	cmp	r3, #115	; 0x73
    7c12:	d11d      	bne.n	7c50 <d_print_comp_inner+0x1a20>
    7c14:	7872      	ldrb	r2, [r6, #1]
    7c16:	2a5a      	cmp	r2, #90	; 0x5a
    7c18:	d143      	bne.n	7ca2 <d_print_comp_inner+0x1a72>
    7c1a:	f896 8002 	ldrb.w	r8, [r6, #2]
    7c1e:	f1b8 0f00 	cmp.w	r8, #0
    7c22:	d13e      	bne.n	7ca2 <d_print_comp_inner+0x1a72>
    7c24:	4629      	mov	r1, r5
    7c26:	4620      	mov	r0, r4
    7c28:	f7fc f8a8 	bl	3d7c <d_find_pack>
    7c2c:	b930      	cbnz	r0, 7c3c <d_print_comp_inner+0x1a0c>
    7c2e:	e008      	b.n	7c42 <d_print_comp_inner+0x1a12>
    7c30:	68c3      	ldr	r3, [r0, #12]
    7c32:	b133      	cbz	r3, 7c42 <d_print_comp_inner+0x1a12>
    7c34:	6900      	ldr	r0, [r0, #16]
    7c36:	f108 0801 	add.w	r8, r8, #1
    7c3a:	b110      	cbz	r0, 7c42 <d_print_comp_inner+0x1a12>
    7c3c:	7803      	ldrb	r3, [r0, #0]
    7c3e:	2b2f      	cmp	r3, #47	; 0x2f
    7c40:	d0f6      	beq.n	7c30 <d_print_comp_inner+0x1a00>
    7c42:	4641      	mov	r1, r8
    7c44:	4620      	mov	r0, r4
    7c46:	b013      	add	sp, #76	; 0x4c
    7c48:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7c4c:	f7fc b944 	b.w	3ed8 <d_append_num>
    7c50:	463a      	mov	r2, r7
    7c52:	2111      	movs	r1, #17
    7c54:	4620      	mov	r0, r4
    7c56:	f001 fa95 	bl	9184 <d_print_expr_op>
    7c5a:	7833      	ldrb	r3, [r6, #0]
    7c5c:	2b67      	cmp	r3, #103	; 0x67
    7c5e:	d109      	bne.n	7c74 <d_print_comp_inner+0x1a44>
    7c60:	7872      	ldrb	r2, [r6, #1]
    7c62:	2a73      	cmp	r2, #115	; 0x73
    7c64:	d106      	bne.n	7c74 <d_print_comp_inner+0x1a44>
    7c66:	78b2      	ldrb	r2, [r6, #2]
    7c68:	b922      	cbnz	r2, 7c74 <d_print_comp_inner+0x1a44>
    7c6a:	462a      	mov	r2, r5
    7c6c:	2111      	movs	r1, #17
    7c6e:	4620      	mov	r0, r4
    7c70:	f7fe bb69 	b.w	6346 <d_print_comp_inner+0x116>
    7c74:	2b73      	cmp	r3, #115	; 0x73
    7c76:	f47e ad0d 	bne.w	6694 <d_print_comp_inner+0x464>
    7c7a:	7873      	ldrb	r3, [r6, #1]
    7c7c:	2b74      	cmp	r3, #116	; 0x74
    7c7e:	f47e ad09 	bne.w	6694 <d_print_comp_inner+0x464>
    7c82:	78b3      	ldrb	r3, [r6, #2]
    7c84:	2b00      	cmp	r3, #0
    7c86:	f47e ad05 	bne.w	6694 <d_print_comp_inner+0x464>
    7c8a:	2128      	movs	r1, #40	; 0x28
    7c8c:	4620      	mov	r0, r4
    7c8e:	f7fc f837 	bl	3d00 <d_append_char>
    7c92:	2111      	movs	r1, #17
    7c94:	462a      	mov	r2, r5
    7c96:	4620      	mov	r0, r4
    7c98:	f000 fb82 	bl	83a0 <d_print_comp>
    7c9c:	2129      	movs	r1, #41	; 0x29
    7c9e:	f7ff b922 	b.w	6ee6 <d_print_comp_inner+0xcb6>
    7ca2:	2b73      	cmp	r3, #115	; 0x73
    7ca4:	d1d4      	bne.n	7c50 <d_print_comp_inner+0x1a20>
    7ca6:	7873      	ldrb	r3, [r6, #1]
    7ca8:	2b50      	cmp	r3, #80	; 0x50
    7caa:	d1d1      	bne.n	7c50 <d_print_comp_inner+0x1a20>
    7cac:	78b3      	ldrb	r3, [r6, #2]
    7cae:	2b00      	cmp	r3, #0
    7cb0:	d1ce      	bne.n	7c50 <d_print_comp_inner+0x1a20>
    7cb2:	461e      	mov	r6, r3
    7cb4:	e004      	b.n	7cc0 <d_print_comp_inner+0x1a90>
    7cb6:	3601      	adds	r6, #1
    7cb8:	692d      	ldr	r5, [r5, #16]
    7cba:	2d00      	cmp	r5, #0
    7cbc:	f000 8219 	beq.w	80f2 <d_print_comp_inner+0x1ec2>
    7cc0:	782b      	ldrb	r3, [r5, #0]
    7cc2:	2b2f      	cmp	r3, #47	; 0x2f
    7cc4:	f040 8215 	bne.w	80f2 <d_print_comp_inner+0x1ec2>
    7cc8:	68eb      	ldr	r3, [r5, #12]
    7cca:	2b00      	cmp	r3, #0
    7ccc:	f000 8211 	beq.w	80f2 <d_print_comp_inner+0x1ec2>
    7cd0:	781a      	ldrb	r2, [r3, #0]
    7cd2:	2a4b      	cmp	r2, #75	; 0x4b
    7cd4:	d1ef      	bne.n	7cb6 <d_print_comp_inner+0x1a86>
    7cd6:	4620      	mov	r0, r4
    7cd8:	68d9      	ldr	r1, [r3, #12]
    7cda:	f7fc f84f 	bl	3d7c <d_find_pack>
    7cde:	4602      	mov	r2, r0
    7ce0:	b190      	cbz	r0, 7d08 <d_print_comp_inner+0x1ad8>
    7ce2:	2200      	movs	r2, #0
    7ce4:	e00d      	b.n	7d02 <d_print_comp_inner+0x1ad2>
    7ce6:	bf00      	nop
    7ce8:	00019368 	.word	0x00019368
    7cec:	0001931c 	.word	0x0001931c
    7cf0:	00019398 	.word	0x00019398
    7cf4:	00019114 	.word	0x00019114
    7cf8:	68c1      	ldr	r1, [r0, #12]
    7cfa:	b129      	cbz	r1, 7d08 <d_print_comp_inner+0x1ad8>
    7cfc:	6900      	ldr	r0, [r0, #16]
    7cfe:	3201      	adds	r2, #1
    7d00:	b110      	cbz	r0, 7d08 <d_print_comp_inner+0x1ad8>
    7d02:	7801      	ldrb	r1, [r0, #0]
    7d04:	292f      	cmp	r1, #47	; 0x2f
    7d06:	d0f7      	beq.n	7cf8 <d_print_comp_inner+0x1ac8>
    7d08:	4416      	add	r6, r2
    7d0a:	e7d5      	b.n	7cb8 <d_print_comp_inner+0x1a88>
    7d0c:	2b01      	cmp	r3, #1
    7d0e:	f63e ac73 	bhi.w	65f8 <d_print_comp_inner+0x3c8>
    7d12:	2d04      	cmp	r5, #4
    7d14:	f43e aaef 	beq.w	62f6 <d_print_comp_inner+0xc6>
    7d18:	4686      	mov	lr, r0
    7d1a:	f100 0b10 	add.w	fp, r0, #16
    7d1e:	c80f      	ldmia	r0, {r0, r1, r2, r3}
    7d20:	e88b 000f 	stmia.w	fp, {r0, r1, r2, r3}
    7d24:	e9ce 9a01 	strd	r9, sl, [lr, #4]
    7d28:	f8d9 900c 	ldr.w	r9, [r9, #12]
    7d2c:	4658      	mov	r0, fp
    7d2e:	3501      	adds	r5, #1
    7d30:	f8ce e010 	str.w	lr, [lr, #16]
    7d34:	f8ce c00c 	str.w	ip, [lr, #12]
    7d38:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
    7d3c:	f1b9 0f00 	cmp.w	r9, #0
    7d40:	f43e aad9 	beq.w	62f6 <d_print_comp_inner+0xc6>
    7d44:	f899 1000 	ldrb.w	r1, [r9]
    7d48:	f7fe bc44 	b.w	65d4 <d_print_comp_inner+0x3a4>
    7d4c:	49d0      	ldr	r1, [pc, #832]	; (8090 <d_print_comp_inner+0x1e60>)
    7d4e:	f7fc f85d 	bl	3e0c <d_append_string>
    7d52:	f7ff b9d2 	b.w	70fa <d_print_comp_inner+0xeca>
    7d56:	4632      	mov	r2, r6
    7d58:	2111      	movs	r1, #17
    7d5a:	4620      	mov	r0, r4
    7d5c:	f000 fb4e 	bl	83fc <d_print_mod>
    7d60:	f7fe bb1f 	b.w	63a2 <d_print_comp_inner+0x172>
    7d64:	29ff      	cmp	r1, #255	; 0xff
    7d66:	f000 8253 	beq.w	8210 <d_print_comp_inner+0x1fe0>
    7d6a:	1c4b      	adds	r3, r1, #1
    7d6c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    7d70:	2320      	movs	r3, #32
    7d72:	5463      	strb	r3, [r4, r1]
    7d74:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7d78:	e525      	b.n	77c6 <d_print_comp_inner+0x1596>
    7d7a:	2201      	movs	r2, #1
    7d7c:	e9c4 3245 	strd	r3, r2, [r4, #276]	; 0x114
    7d80:	f7fe babc 	b.w	62fc <d_print_comp_inner+0xcc>
    7d84:	782a      	ldrb	r2, [r5, #0]
    7d86:	e740      	b.n	7c0a <d_print_comp_inner+0x19da>
    7d88:	460d      	mov	r5, r1
    7d8a:	f7fe bb24 	b.w	63d6 <d_print_comp_inner+0x1a6>
    7d8e:	2700      	movs	r7, #0
    7d90:	5567      	strb	r7, [r4, r5]
    7d92:	4629      	mov	r1, r5
    7d94:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7d98:	4620      	mov	r0, r4
    7d9a:	4798      	blx	r3
    7d9c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7da0:	463d      	mov	r5, r7
    7da2:	3301      	adds	r3, #1
    7da4:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
    7da8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7dac:	f7fe bb2e 	b.w	640c <d_print_comp_inner+0x1dc>
    7db0:	2600      	movs	r6, #0
    7db2:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    7db6:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    7dba:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    7dbe:	4798      	blx	r3
    7dc0:	2301      	movs	r3, #1
    7dc2:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7dc6:	4631      	mov	r1, r6
    7dc8:	441a      	add	r2, r3
    7dca:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7dce:	f7fe bf69 	b.w	6ca4 <d_print_comp_inner+0xa74>
    7dd2:	2500      	movs	r5, #0
    7dd4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7dd8:	4620      	mov	r0, r4
    7dda:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7dde:	4798      	blx	r3
    7de0:	2201      	movs	r2, #1
    7de2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7de6:	4629      	mov	r1, r5
    7de8:	4413      	add	r3, r2
    7dea:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7dee:	e591      	b.n	7914 <d_print_comp_inner+0x16e4>
    7df0:	4620      	mov	r0, r4
    7df2:	49a8      	ldr	r1, [pc, #672]	; (8094 <d_print_comp_inner+0x1e64>)
    7df4:	f7fc f80a 	bl	3e0c <d_append_string>
    7df8:	693a      	ldr	r2, [r7, #16]
    7dfa:	49a7      	ldr	r1, [pc, #668]	; (8098 <d_print_comp_inner+0x1e68>)
    7dfc:	3201      	adds	r2, #1
    7dfe:	a802      	add	r0, sp, #8
    7e00:	f005 fb2e 	bl	d460 <sprintf>
    7e04:	a802      	add	r0, sp, #8
    7e06:	f005 fc2b 	bl	d660 <strlen>
    7e0a:	4681      	mov	r9, r0
    7e0c:	b318      	cbz	r0, 7e56 <d_print_comp_inner+0x1c26>
    7e0e:	ad02      	add	r5, sp, #8
    7e10:	f04f 0800 	mov.w	r8, #0
    7e14:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7e18:	44a9      	add	r9, r5
    7e1a:	e008      	b.n	7e2e <d_print_comp_inner+0x1bfe>
    7e1c:	460b      	mov	r3, r1
    7e1e:	3101      	adds	r1, #1
    7e20:	45a9      	cmp	r9, r5
    7e22:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7e26:	54e6      	strb	r6, [r4, r3]
    7e28:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7e2c:	d013      	beq.n	7e56 <d_print_comp_inner+0x1c26>
    7e2e:	29ff      	cmp	r1, #255	; 0xff
    7e30:	f815 6b01 	ldrb.w	r6, [r5], #1
    7e34:	d1f2      	bne.n	7e1c <d_print_comp_inner+0x1bec>
    7e36:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7e3a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7e3e:	4620      	mov	r0, r4
    7e40:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7e44:	4798      	blx	r3
    7e46:	2101      	movs	r1, #1
    7e48:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7e4c:	2300      	movs	r3, #0
    7e4e:	440a      	add	r2, r1
    7e50:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7e54:	e7e4      	b.n	7e20 <d_print_comp_inner+0x1bf0>
    7e56:	4620      	mov	r0, r4
    7e58:	4990      	ldr	r1, [pc, #576]	; (809c <d_print_comp_inner+0x1e6c>)
    7e5a:	f7fb ffd7 	bl	3e0c <d_append_string>
    7e5e:	68ff      	ldr	r7, [r7, #12]
    7e60:	e4a6      	b.n	77b0 <d_print_comp_inner+0x1580>
    7e62:	2500      	movs	r5, #0
    7e64:	4619      	mov	r1, r3
    7e66:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7e6a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7e6e:	4620      	mov	r0, r4
    7e70:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7e74:	4798      	blx	r3
    7e76:	2201      	movs	r2, #1
    7e78:	f8d4 1128 	ldr.w	r1, [r4, #296]	; 0x128
    7e7c:	462b      	mov	r3, r5
    7e7e:	4411      	add	r1, r2
    7e80:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
    7e84:	f7ff bb08 	b.w	7498 <d_print_comp_inner+0x1268>
    7e88:	2500      	movs	r5, #0
    7e8a:	4619      	mov	r1, r3
    7e8c:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    7e90:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    7e94:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    7e98:	4798      	blx	r3
    7e9a:	2101      	movs	r1, #1
    7e9c:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7ea0:	462b      	mov	r3, r5
    7ea2:	440a      	add	r2, r1
    7ea4:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7ea8:	f7fe bc8c 	b.w	67c4 <d_print_comp_inner+0x594>
    7eac:	2500      	movs	r5, #0
    7eae:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7eb2:	4620      	mov	r0, r4
    7eb4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7eb8:	4798      	blx	r3
    7eba:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7ebe:	4629      	mov	r1, r5
    7ec0:	3301      	adds	r3, #1
    7ec2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7ec6:	2301      	movs	r3, #1
    7ec8:	f7ff b906 	b.w	70d8 <d_print_comp_inner+0xea8>
    7ecc:	2120      	movs	r1, #32
    7ece:	4620      	mov	r0, r4
    7ed0:	f7fb ff16 	bl	3d00 <d_append_char>
    7ed4:	f7ff b8fa 	b.w	70cc <d_print_comp_inner+0xe9c>
    7ed8:	2500      	movs	r5, #0
    7eda:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7ede:	4620      	mov	r0, r4
    7ee0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7ee4:	4798      	blx	r3
    7ee6:	2301      	movs	r3, #1
    7ee8:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7eec:	4629      	mov	r1, r5
    7eee:	441a      	add	r2, r3
    7ef0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7ef4:	f7ff b8da 	b.w	70ac <d_print_comp_inner+0xe7c>
    7ef8:	2120      	movs	r1, #32
    7efa:	4620      	mov	r0, r4
    7efc:	f7fb ff00 	bl	3d00 <d_append_char>
    7f00:	f7ff b8ce 	b.w	70a0 <d_print_comp_inner+0xe70>
    7f04:	215b      	movs	r1, #91	; 0x5b
    7f06:	4620      	mov	r0, r4
    7f08:	f7fb fefa 	bl	3d00 <d_append_char>
    7f0c:	2111      	movs	r1, #17
    7f0e:	4620      	mov	r0, r4
    7f10:	6932      	ldr	r2, [r6, #16]
    7f12:	f000 fa45 	bl	83a0 <d_print_comp>
    7f16:	215d      	movs	r1, #93	; 0x5d
    7f18:	f7fe bfe5 	b.w	6ee6 <d_print_comp_inner+0xcb6>
    7f1c:	212d      	movs	r1, #45	; 0x2d
    7f1e:	4620      	mov	r0, r4
    7f20:	f7fb feee 	bl	3d00 <d_append_char>
    7f24:	f7fe baf1 	b.w	650a <d_print_comp_inner+0x2da>
    7f28:	2700      	movs	r7, #0
    7f2a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7f2e:	4620      	mov	r0, r4
    7f30:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    7f34:	4798      	blx	r3
    7f36:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7f3a:	4639      	mov	r1, r7
    7f3c:	3301      	adds	r3, #1
    7f3e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7f42:	2301      	movs	r3, #1
    7f44:	f7fe bad7 	b.w	64f6 <d_print_comp_inner+0x2c6>
    7f48:	2700      	movs	r7, #0
    7f4a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7f4e:	4620      	mov	r0, r4
    7f50:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    7f54:	4798      	blx	r3
    7f56:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7f5a:	4639      	mov	r1, r7
    7f5c:	3301      	adds	r3, #1
    7f5e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7f62:	68f2      	ldr	r2, [r6, #12]
    7f64:	2301      	movs	r3, #1
    7f66:	f7fe bab6 	b.w	64d6 <d_print_comp_inner+0x2a6>
    7f6a:	6931      	ldr	r1, [r6, #16]
    7f6c:	7809      	ldrb	r1, [r1, #0]
    7f6e:	2900      	cmp	r1, #0
    7f70:	f47e aaab 	bne.w	64ca <d_print_comp_inner+0x29a>
    7f74:	2b3e      	cmp	r3, #62	; 0x3e
    7f76:	f000 81fa 	beq.w	836e <d_print_comp_inner+0x213e>
    7f7a:	2111      	movs	r1, #17
    7f7c:	4620      	mov	r0, r4
    7f7e:	6932      	ldr	r2, [r6, #16]
    7f80:	3d02      	subs	r5, #2
    7f82:	f000 fa0d 	bl	83a0 <d_print_comp>
    7f86:	2d04      	cmp	r5, #4
    7f88:	f63e a9b8 	bhi.w	62fc <d_print_comp_inner+0xcc>
    7f8c:	e8df f005 	tbb	[pc, r5]
    7f90:	06090c0f 	.word	0x06090c0f
    7f94:	03          	.byte	0x03
    7f95:	00          	.byte	0x00
    7f96:	4620      	mov	r0, r4
    7f98:	4941      	ldr	r1, [pc, #260]	; (80a0 <d_print_comp_inner+0x1e70>)
    7f9a:	e537      	b.n	7a0c <d_print_comp_inner+0x17dc>
    7f9c:	4620      	mov	r0, r4
    7f9e:	4941      	ldr	r1, [pc, #260]	; (80a4 <d_print_comp_inner+0x1e74>)
    7fa0:	e534      	b.n	7a0c <d_print_comp_inner+0x17dc>
    7fa2:	4620      	mov	r0, r4
    7fa4:	4940      	ldr	r1, [pc, #256]	; (80a8 <d_print_comp_inner+0x1e78>)
    7fa6:	e531      	b.n	7a0c <d_print_comp_inner+0x17dc>
    7fa8:	216c      	movs	r1, #108	; 0x6c
    7faa:	f7fe bf9c 	b.w	6ee6 <d_print_comp_inner+0xcb6>
    7fae:	2175      	movs	r1, #117	; 0x75
    7fb0:	f7fe bf99 	b.w	6ee6 <d_print_comp_inner+0xcb6>
    7fb4:	f8d0 c134 	ldr.w	ip, [r0, #308]	; 0x134
    7fb8:	f1bc 0f00 	cmp.w	ip, #0
    7fbc:	f340 81a9 	ble.w	8312 <d_print_comp_inner+0x20e2>
    7fc0:	f8d0 e130 	ldr.w	lr, [r0, #304]	; 0x130
    7fc4:	462b      	mov	r3, r5
    7fc6:	4670      	mov	r0, lr
    7fc8:	e004      	b.n	7fd4 <d_print_comp_inner+0x1da4>
    7fca:	4563      	cmp	r3, ip
    7fcc:	f100 0008 	add.w	r0, r0, #8
    7fd0:	f000 819f 	beq.w	8312 <d_print_comp_inner+0x20e2>
    7fd4:	f85e 2033 	ldr.w	r2, [lr, r3, lsl #3]
    7fd8:	3301      	adds	r3, #1
    7fda:	4291      	cmp	r1, r2
    7fdc:	d1f5      	bne.n	7fca <d_print_comp_inner+0x1d9a>
    7fde:	f8d4 c12c 	ldr.w	ip, [r4, #300]	; 0x12c
    7fe2:	4663      	mov	r3, ip
    7fe4:	f1bc 0f00 	cmp.w	ip, #0
    7fe8:	d104      	bne.n	7ff4 <d_print_comp_inner+0x1dc4>
    7fea:	e0f9      	b.n	81e0 <d_print_comp_inner+0x1fb0>
    7fec:	685b      	ldr	r3, [r3, #4]
    7fee:	2b00      	cmp	r3, #0
    7ff0:	f000 80f6 	beq.w	81e0 <d_print_comp_inner+0x1fb0>
    7ff4:	681a      	ldr	r2, [r3, #0]
    7ff6:	428a      	cmp	r2, r1
    7ff8:	d003      	beq.n	8002 <d_print_comp_inner+0x1dd2>
    7ffa:	42b2      	cmp	r2, r6
    7ffc:	d1f6      	bne.n	7fec <d_print_comp_inner+0x1dbc>
    7ffe:	459c      	cmp	ip, r3
    8000:	d0f4      	beq.n	7fec <d_print_comp_inner+0x1dbc>
    8002:	4620      	mov	r0, r4
    8004:	f7fb fe9e 	bl	3d44 <d_lookup_template_argument>
    8008:	4601      	mov	r1, r0
    800a:	2800      	cmp	r0, #0
    800c:	f43e a973 	beq.w	62f6 <d_print_comp_inner+0xc6>
    8010:	780b      	ldrb	r3, [r1, #0]
    8012:	2b2f      	cmp	r3, #47	; 0x2f
    8014:	f47e a9d3 	bne.w	63be <d_print_comp_inner+0x18e>
    8018:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
    801c:	2b00      	cmp	r3, #0
    801e:	f6ff acd3 	blt.w	79c8 <d_print_comp_inner+0x1798>
    8022:	4608      	mov	r0, r1
    8024:	4619      	mov	r1, r3
    8026:	f7fb fe05 	bl	3c34 <d_index_template_argument.part.0>
    802a:	4601      	mov	r1, r0
    802c:	2800      	cmp	r0, #0
    802e:	f47f ad78 	bne.w	7b22 <d_print_comp_inner+0x18f2>
    8032:	2d00      	cmp	r5, #0
    8034:	f43e a95f 	beq.w	62f6 <d_print_comp_inner+0xc6>
    8038:	f8c4 7110 	str.w	r7, [r4, #272]	; 0x110
    803c:	f7fe b95b 	b.w	62f6 <d_print_comp_inner+0xc6>
    8040:	6933      	ldr	r3, [r6, #16]
    8042:	f7fe bf1e 	b.w	6e82 <d_print_comp_inner+0xc52>
    8046:	781b      	ldrb	r3, [r3, #0]
    8048:	f1a3 0163 	sub.w	r1, r3, #99	; 0x63
    804c:	2901      	cmp	r1, #1
    804e:	d903      	bls.n	8058 <d_print_comp_inner+0x1e28>
    8050:	3b72      	subs	r3, #114	; 0x72
    8052:	2b01      	cmp	r3, #1
    8054:	f63e aef4 	bhi.w	6e40 <d_print_comp_inner+0xc10>
    8058:	2111      	movs	r1, #17
    805a:	4620      	mov	r0, r4
    805c:	f001 f892 	bl	9184 <d_print_expr_op>
    8060:	213c      	movs	r1, #60	; 0x3c
    8062:	4620      	mov	r0, r4
    8064:	f7fb fe4c 	bl	3d00 <d_append_char>
    8068:	6933      	ldr	r3, [r6, #16]
    806a:	2111      	movs	r1, #17
    806c:	68da      	ldr	r2, [r3, #12]
    806e:	4620      	mov	r0, r4
    8070:	f000 f996 	bl	83a0 <d_print_comp>
    8074:	4620      	mov	r0, r4
    8076:	490d      	ldr	r1, [pc, #52]	; (80ac <d_print_comp_inner+0x1e7c>)
    8078:	f7fb fec8 	bl	3e0c <d_append_string>
    807c:	6933      	ldr	r3, [r6, #16]
    807e:	2111      	movs	r1, #17
    8080:	4620      	mov	r0, r4
    8082:	691a      	ldr	r2, [r3, #16]
    8084:	f000 f98c 	bl	83a0 <d_print_comp>
    8088:	2129      	movs	r1, #41	; 0x29
    808a:	f7fe bf2c 	b.w	6ee6 <d_print_comp_inner+0xcb6>
    808e:	bf00      	nop
    8090:	0001930c 	.word	0x0001930c
    8094:	00019188 	.word	0x00019188
    8098:	00019114 	.word	0x00019114
    809c:	00019198 	.word	0x00019198
    80a0:	0001935c 	.word	0x0001935c
    80a4:	00019358 	.word	0x00019358
    80a8:	00019354 	.word	0x00019354
    80ac:	00019340 	.word	0x00019340
    80b0:	68ca      	ldr	r2, [r1, #12]
    80b2:	f7fe b927 	b.w	6304 <d_print_comp_inner+0xd4>
    80b6:	2963      	cmp	r1, #99	; 0x63
    80b8:	f000 80b9 	beq.w	822e <d_print_comp_inner+0x1ffe>
    80bc:	2111      	movs	r1, #17
    80be:	4620      	mov	r0, r4
    80c0:	f001 f860 	bl	9184 <d_print_expr_op>
    80c4:	6933      	ldr	r3, [r6, #16]
    80c6:	2111      	movs	r1, #17
    80c8:	4620      	mov	r0, r4
    80ca:	691a      	ldr	r2, [r3, #16]
    80cc:	f001 fa3c 	bl	9548 <d_print_subexpr>
    80d0:	f7fe bef9 	b.w	6ec6 <d_print_comp_inner+0xc96>
    80d4:	4619      	mov	r1, r3
    80d6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    80da:	4620      	mov	r0, r4
    80dc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    80e0:	4798      	blx	r3
    80e2:	2001      	movs	r0, #1
    80e4:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    80e8:	4633      	mov	r3, r6
    80ea:	4402      	add	r2, r0
    80ec:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    80f0:	e43c      	b.n	796c <d_print_comp_inner+0x173c>
    80f2:	4632      	mov	r2, r6
    80f4:	49a6      	ldr	r1, [pc, #664]	; (8390 <d_print_comp_inner+0x2160>)
    80f6:	a802      	add	r0, sp, #8
    80f8:	f005 f9b2 	bl	d460 <sprintf>
    80fc:	a802      	add	r0, sp, #8
    80fe:	f005 faaf 	bl	d660 <strlen>
    8102:	4607      	mov	r7, r0
    8104:	2800      	cmp	r0, #0
    8106:	f43e a8f9 	beq.w	62fc <d_print_comp_inner+0xcc>
    810a:	ad02      	add	r5, sp, #8
    810c:	f04f 0800 	mov.w	r8, #0
    8110:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8114:	442f      	add	r7, r5
    8116:	e009      	b.n	812c <d_print_comp_inner+0x1efc>
    8118:	460b      	mov	r3, r1
    811a:	3101      	adds	r1, #1
    811c:	42af      	cmp	r7, r5
    811e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8122:	54e6      	strb	r6, [r4, r3]
    8124:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8128:	f43e a8e8 	beq.w	62fc <d_print_comp_inner+0xcc>
    812c:	29ff      	cmp	r1, #255	; 0xff
    812e:	f815 6b01 	ldrb.w	r6, [r5], #1
    8132:	d1f1      	bne.n	8118 <d_print_comp_inner+0x1ee8>
    8134:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8138:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    813c:	4620      	mov	r0, r4
    813e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8142:	4798      	blx	r3
    8144:	2101      	movs	r1, #1
    8146:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    814a:	2300      	movs	r3, #0
    814c:	440a      	add	r2, r1
    814e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8152:	e7e3      	b.n	811c <d_print_comp_inner+0x1eec>
    8154:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
    8158:	2900      	cmp	r1, #0
    815a:	f6ff acf0 	blt.w	7b3e <d_print_comp_inner+0x190e>
    815e:	f7fb fd69 	bl	3c34 <d_index_template_argument.part.0>
    8162:	4602      	mov	r2, r0
    8164:	2800      	cmp	r0, #0
    8166:	f47f acea 	bne.w	7b3e <d_print_comp_inner+0x190e>
    816a:	f7fe b8c4 	b.w	62f6 <d_print_comp_inner+0xc6>
    816e:	2500      	movs	r5, #0
    8170:	4619      	mov	r1, r3
    8172:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8176:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    817a:	4620      	mov	r0, r4
    817c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8180:	4798      	blx	r3
    8182:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8186:	462b      	mov	r3, r5
    8188:	3201      	adds	r2, #1
    818a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    818e:	f7fe bfc3 	b.w	7118 <d_print_comp_inner+0xee8>
    8192:	2111      	movs	r1, #17
    8194:	4620      	mov	r0, r4
    8196:	68f2      	ldr	r2, [r6, #12]
    8198:	f001 f9d6 	bl	9548 <d_print_subexpr>
    819c:	4620      	mov	r0, r4
    819e:	497d      	ldr	r1, [pc, #500]	; (8394 <d_print_comp_inner+0x2164>)
    81a0:	e434      	b.n	7a0c <d_print_comp_inner+0x17dc>
    81a2:	2500      	movs	r5, #0
    81a4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    81a8:	4620      	mov	r0, r4
    81aa:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    81ae:	4798      	blx	r3
    81b0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    81b4:	4629      	mov	r1, r5
    81b6:	3301      	adds	r3, #1
    81b8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    81bc:	e4a7      	b.n	7b0e <d_print_comp_inner+0x18de>
    81be:	68da      	ldr	r2, [r3, #12]
    81c0:	6891      	ldr	r1, [r2, #8]
    81c2:	2901      	cmp	r1, #1
    81c4:	f47e ae49 	bne.w	6e5a <d_print_comp_inner+0xc2a>
    81c8:	6852      	ldr	r2, [r2, #4]
    81ca:	7812      	ldrb	r2, [r2, #0]
    81cc:	2a3e      	cmp	r2, #62	; 0x3e
    81ce:	f47e ae44 	bne.w	6e5a <d_print_comp_inner+0xc2a>
    81d2:	2128      	movs	r1, #40	; 0x28
    81d4:	4620      	mov	r0, r4
    81d6:	f7fb fd93 	bl	3d00 <d_append_char>
    81da:	68f3      	ldr	r3, [r6, #12]
    81dc:	f7fe be3d 	b.w	6e5a <d_print_comp_inner+0xc2a>
    81e0:	6843      	ldr	r3, [r0, #4]
    81e2:	f8d4 7110 	ldr.w	r7, [r4, #272]	; 0x110
    81e6:	4620      	mov	r0, r4
    81e8:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    81ec:	f7fb fdaa 	bl	3d44 <d_lookup_template_argument>
    81f0:	4601      	mov	r1, r0
    81f2:	2800      	cmp	r0, #0
    81f4:	f43f af20 	beq.w	8038 <d_print_comp_inner+0x1e08>
    81f8:	2501      	movs	r5, #1
    81fa:	e709      	b.n	8010 <d_print_comp_inner+0x1de0>
    81fc:	f8d9 900c 	ldr.w	r9, [r9, #12]
    8200:	f1b9 0f00 	cmp.w	r9, #0
    8204:	f43e a877 	beq.w	62f6 <d_print_comp_inner+0xc6>
    8208:	f899 1000 	ldrb.w	r1, [r9]
    820c:	f7fe b9de 	b.w	65cc <d_print_comp_inner+0x39c>
    8210:	2500      	movs	r5, #0
    8212:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8216:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    821a:	4620      	mov	r0, r4
    821c:	4798      	blx	r3
    821e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8222:	4629      	mov	r1, r5
    8224:	3301      	adds	r3, #1
    8226:	687d      	ldr	r5, [r7, #4]
    8228:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    822c:	e59d      	b.n	7d6a <d_print_comp_inner+0x1b3a>
    822e:	7859      	ldrb	r1, [r3, #1]
    8230:	296c      	cmp	r1, #108	; 0x6c
    8232:	f47f af43 	bne.w	80bc <d_print_comp_inner+0x1e8c>
    8236:	789b      	ldrb	r3, [r3, #2]
    8238:	2b00      	cmp	r3, #0
    823a:	f43f af43 	beq.w	80c4 <d_print_comp_inner+0x1e94>
    823e:	e73d      	b.n	80bc <d_print_comp_inner+0x1e8c>
    8240:	2600      	movs	r6, #0
    8242:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8246:	4620      	mov	r0, r4
    8248:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    824c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    8250:	4798      	blx	r3
    8252:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8256:	4631      	mov	r1, r6
    8258:	3301      	adds	r3, #1
    825a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    825e:	f7ff b953 	b.w	7508 <d_print_comp_inner+0x12d8>
    8262:	2600      	movs	r6, #0
    8264:	4619      	mov	r1, r3
    8266:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    826a:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    826e:	4798      	blx	r3
    8270:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8274:	4633      	mov	r3, r6
    8276:	3201      	adds	r2, #1
    8278:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    827c:	f7ff b933 	b.w	74e6 <d_print_comp_inner+0x12b6>
    8280:	4620      	mov	r0, r4
    8282:	4945      	ldr	r1, [pc, #276]	; (8398 <d_print_comp_inner+0x2168>)
    8284:	f7fb fdc2 	bl	3e0c <d_append_string>
    8288:	68f3      	ldr	r3, [r6, #12]
    828a:	b143      	cbz	r3, 829e <d_print_comp_inner+0x206e>
    828c:	2111      	movs	r1, #17
    828e:	4620      	mov	r0, r4
    8290:	4632      	mov	r2, r6
    8292:	f001 f959 	bl	9548 <d_print_subexpr>
    8296:	2120      	movs	r1, #32
    8298:	4620      	mov	r0, r4
    829a:	f7fb fd31 	bl	3d00 <d_append_char>
    829e:	463a      	mov	r2, r7
    82a0:	2111      	movs	r1, #17
    82a2:	4620      	mov	r0, r4
    82a4:	f000 f87c 	bl	83a0 <d_print_comp>
    82a8:	2d00      	cmp	r5, #0
    82aa:	f47e a9f3 	bne.w	6694 <d_print_comp_inner+0x464>
    82ae:	f7fe b825 	b.w	62fc <d_print_comp_inner+0xcc>
    82b2:	68ea      	ldr	r2, [r5, #12]
    82b4:	7811      	ldrb	r1, [r2, #0]
    82b6:	2901      	cmp	r1, #1
    82b8:	f47f acaa 	bne.w	7c10 <d_print_comp_inner+0x19e0>
    82bc:	6929      	ldr	r1, [r5, #16]
    82be:	7809      	ldrb	r1, [r1, #0]
    82c0:	2929      	cmp	r1, #41	; 0x29
    82c2:	bf08      	it	eq
    82c4:	4615      	moveq	r5, r2
    82c6:	e4a3      	b.n	7c10 <d_print_comp_inner+0x19e0>
    82c8:	6913      	ldr	r3, [r2, #16]
    82ca:	2111      	movs	r1, #17
    82cc:	781b      	ldrb	r3, [r3, #0]
    82ce:	4620      	mov	r0, r4
    82d0:	2b29      	cmp	r3, #41	; 0x29
    82d2:	bf18      	it	ne
    82d4:	2301      	movne	r3, #1
    82d6:	68d2      	ldr	r2, [r2, #12]
    82d8:	bf18      	it	ne
    82da:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
    82de:	f001 f933 	bl	9548 <d_print_subexpr>
    82e2:	f7fe bdd3 	b.w	6e8c <d_print_comp_inner+0xc5c>
    82e6:	2111      	movs	r1, #17
    82e8:	4620      	mov	r0, r4
    82ea:	68ea      	ldr	r2, [r5, #12]
    82ec:	f001 f92c 	bl	9548 <d_print_subexpr>
    82f0:	463a      	mov	r2, r7
    82f2:	2111      	movs	r1, #17
    82f4:	4620      	mov	r0, r4
    82f6:	f7ff b912 	b.w	751e <d_print_comp_inner+0x12ee>
    82fa:	2111      	movs	r1, #17
    82fc:	6932      	ldr	r2, [r6, #16]
    82fe:	f000 f84f 	bl	83a0 <d_print_comp>
    8302:	9b04      	ldr	r3, [sp, #16]
    8304:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    8308:	2b00      	cmp	r3, #0
    830a:	f43e ad50 	beq.w	6dae <d_print_comp_inner+0xb7e>
    830e:	f7fd bff5 	b.w	62fc <d_print_comp_inner+0xcc>
    8312:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
    8316:	4563      	cmp	r3, ip
    8318:	f77d afed 	ble.w	62f6 <d_print_comp_inner+0xc6>
    831c:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
    8320:	f8d4 e110 	ldr.w	lr, [r4, #272]	; 0x110
    8324:	eb02 03cc 	add.w	r3, r2, ip, lsl #3
    8328:	f10c 0001 	add.w	r0, ip, #1
    832c:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
    8330:	3304      	adds	r3, #4
    8332:	f842 103c 	str.w	r1, [r2, ip, lsl #3]
    8336:	f1be 0f00 	cmp.w	lr, #0
    833a:	d01c      	beq.n	8376 <d_print_comp_inner+0x2146>
    833c:	e9d4 2c50 	ldrd	r2, ip, [r4, #320]	; 0x140
    8340:	e011      	b.n	8366 <d_print_comp_inner+0x2136>
    8342:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
    8346:	f8de 8004 	ldr.w	r8, [lr, #4]
    834a:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
    834e:	3201      	adds	r2, #1
    8350:	f8c4 2140 	str.w	r2, [r4, #320]	; 0x140
    8354:	f8c0 8004 	str.w	r8, [r0, #4]
    8358:	6018      	str	r0, [r3, #0]
    835a:	f8de e000 	ldr.w	lr, [lr]
    835e:	4603      	mov	r3, r0
    8360:	f1be 0f00 	cmp.w	lr, #0
    8364:	d007      	beq.n	8376 <d_print_comp_inner+0x2146>
    8366:	4562      	cmp	r2, ip
    8368:	dbeb      	blt.n	8342 <d_print_comp_inner+0x2112>
    836a:	f7fd bfc4 	b.w	62f6 <d_print_comp_inner+0xc6>
    836e:	212d      	movs	r1, #45	; 0x2d
    8370:	f7fb fcc6 	bl	3d00 <d_append_char>
    8374:	e601      	b.n	7f7a <d_print_comp_inner+0x1d4a>
    8376:	2200      	movs	r2, #0
    8378:	601a      	str	r2, [r3, #0]
    837a:	e642      	b.n	8002 <d_print_comp_inner+0x1dd2>
    837c:	4620      	mov	r0, r4
    837e:	4907      	ldr	r1, [pc, #28]	; (839c <d_print_comp_inner+0x216c>)
    8380:	f7ff bb44 	b.w	7a0c <d_print_comp_inner+0x17dc>
    8384:	463a      	mov	r2, r7
    8386:	2111      	movs	r1, #17
    8388:	f000 fefc 	bl	9184 <d_print_expr_op>
    838c:	f7fe b982 	b.w	6694 <d_print_comp_inner+0x464>
    8390:	00019114 	.word	0x00019114
    8394:	0001938c 	.word	0x0001938c
    8398:	0001934c 	.word	0x0001934c
    839c:	00019360 	.word	0x00019360

000083a0 <d_print_comp>:
    83a0:	b530      	push	{r4, r5, lr}
    83a2:	4605      	mov	r5, r0
    83a4:	b083      	sub	sp, #12
    83a6:	b31a      	cbz	r2, 83f0 <d_print_comp+0x50>
    83a8:	6853      	ldr	r3, [r2, #4]
    83aa:	4614      	mov	r4, r2
    83ac:	2b01      	cmp	r3, #1
    83ae:	dc1f      	bgt.n	83f0 <d_print_comp+0x50>
    83b0:	f8d0 111c 	ldr.w	r1, [r0, #284]	; 0x11c
    83b4:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    83b8:	dc1a      	bgt.n	83f0 <d_print_comp+0x50>
    83ba:	3301      	adds	r3, #1
    83bc:	6053      	str	r3, [r2, #4]
    83be:	3101      	adds	r1, #1
    83c0:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
    83c4:	f8c0 111c 	str.w	r1, [r0, #284]	; 0x11c
    83c8:	f8c0 d12c 	str.w	sp, [r0, #300]	; 0x12c
    83cc:	2111      	movs	r1, #17
    83ce:	e9cd 2300 	strd	r2, r3, [sp]
    83d2:	f7fd ff2d 	bl	6230 <d_print_comp_inner>
    83d6:	6862      	ldr	r2, [r4, #4]
    83d8:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
    83dc:	9901      	ldr	r1, [sp, #4]
    83de:	3a01      	subs	r2, #1
    83e0:	3b01      	subs	r3, #1
    83e2:	f8c5 112c 	str.w	r1, [r5, #300]	; 0x12c
    83e6:	6062      	str	r2, [r4, #4]
    83e8:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
    83ec:	b003      	add	sp, #12
    83ee:	bd30      	pop	{r4, r5, pc}
    83f0:	2301      	movs	r3, #1
    83f2:	f8c5 3118 	str.w	r3, [r5, #280]	; 0x118
    83f6:	b003      	add	sp, #12
    83f8:	bd30      	pop	{r4, r5, pc}
    83fa:	bf00      	nop

000083fc <d_print_mod>:
    83fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8400:	7813      	ldrb	r3, [r2, #0]
    8402:	4615      	mov	r5, r2
    8404:	3b03      	subs	r3, #3
    8406:	4604      	mov	r4, r0
    8408:	2b4d      	cmp	r3, #77	; 0x4d
    840a:	d84f      	bhi.n	84ac <d_print_mod+0xb0>
    840c:	e8df f013 	tbh	[pc, r3, lsl #1]
    8410:	004e011a 	.word	0x004e011a
    8414:	004e004e 	.word	0x004e004e
    8418:	004e004e 	.word	0x004e004e
    841c:	004e004e 	.word	0x004e004e
    8420:	004e004e 	.word	0x004e004e
    8424:	004e004e 	.word	0x004e004e
    8428:	004e004e 	.word	0x004e004e
    842c:	004e004e 	.word	0x004e004e
    8430:	004e004e 	.word	0x004e004e
    8434:	004e004e 	.word	0x004e004e
    8438:	004e004e 	.word	0x004e004e
    843c:	007a0053 	.word	0x007a0053
    8440:	005300a1 	.word	0x005300a1
    8444:	00a1007a 	.word	0x00a1007a
    8448:	00fb00ee 	.word	0x00fb00ee
    844c:	02990108 	.word	0x02990108
    8450:	012d011f 	.word	0x012d011f
    8454:	01780152 	.word	0x01780152
    8458:	004e004e 	.word	0x004e004e
    845c:	004e004e 	.word	0x004e004e
    8460:	004e019e 	.word	0x004e019e
    8464:	004e01ce 	.word	0x004e01ce
    8468:	004e004e 	.word	0x004e004e
    846c:	004e004e 	.word	0x004e004e
    8470:	004e004e 	.word	0x004e004e
    8474:	004e004e 	.word	0x004e004e
    8478:	004e004e 	.word	0x004e004e
    847c:	004e004e 	.word	0x004e004e
    8480:	004e004e 	.word	0x004e004e
    8484:	004e004e 	.word	0x004e004e
    8488:	004e004e 	.word	0x004e004e
    848c:	004e004e 	.word	0x004e004e
    8490:	004e004e 	.word	0x004e004e
    8494:	004e004e 	.word	0x004e004e
    8498:	004e004e 	.word	0x004e004e
    849c:	004e004e 	.word	0x004e004e
    84a0:	004e004e 	.word	0x004e004e
    84a4:	004e01f5 	.word	0x004e01f5
    84a8:	00c60230 	.word	0x00c60230
    84ac:	462a      	mov	r2, r5
    84ae:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    84b2:	2111      	movs	r1, #17
    84b4:	e774      	b.n	83a0 <d_print_comp>
    84b6:	4dd5      	ldr	r5, [pc, #852]	; (880c <d_print_mod+0x410>)
    84b8:	2620      	movs	r6, #32
    84ba:	f04f 0800 	mov.w	r8, #0
    84be:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    84c2:	f105 0708 	add.w	r7, r5, #8
    84c6:	e00b      	b.n	84e0 <d_print_mod+0xe4>
    84c8:	460b      	mov	r3, r1
    84ca:	3101      	adds	r1, #1
    84cc:	42af      	cmp	r7, r5
    84ce:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    84d2:	54e6      	strb	r6, [r4, r3]
    84d4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    84d8:	f000 80c5 	beq.w	8666 <d_print_mod+0x26a>
    84dc:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    84e0:	29ff      	cmp	r1, #255	; 0xff
    84e2:	d1f1      	bne.n	84c8 <d_print_mod+0xcc>
    84e4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    84e8:	4620      	mov	r0, r4
    84ea:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    84ee:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    84f2:	4798      	blx	r3
    84f4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    84f8:	2101      	movs	r1, #1
    84fa:	3301      	adds	r3, #1
    84fc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8500:	2300      	movs	r3, #0
    8502:	e7e3      	b.n	84cc <d_print_mod+0xd0>
    8504:	4dc2      	ldr	r5, [pc, #776]	; (8810 <d_print_mod+0x414>)
    8506:	2620      	movs	r6, #32
    8508:	f04f 0800 	mov.w	r8, #0
    850c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8510:	f105 0708 	add.w	r7, r5, #8
    8514:	e00b      	b.n	852e <d_print_mod+0x132>
    8516:	460b      	mov	r3, r1
    8518:	3101      	adds	r1, #1
    851a:	42af      	cmp	r7, r5
    851c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8520:	54e6      	strb	r6, [r4, r3]
    8522:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8526:	f000 809e 	beq.w	8666 <d_print_mod+0x26a>
    852a:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    852e:	29ff      	cmp	r1, #255	; 0xff
    8530:	d1f1      	bne.n	8516 <d_print_mod+0x11a>
    8532:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8536:	4620      	mov	r0, r4
    8538:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    853c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8540:	4798      	blx	r3
    8542:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8546:	2101      	movs	r1, #1
    8548:	3301      	adds	r3, #1
    854a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    854e:	2300      	movs	r3, #0
    8550:	e7e3      	b.n	851a <d_print_mod+0x11e>
    8552:	4db0      	ldr	r5, [pc, #704]	; (8814 <d_print_mod+0x418>)
    8554:	2620      	movs	r6, #32
    8556:	f04f 0800 	mov.w	r8, #0
    855a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    855e:	1d6f      	adds	r7, r5, #5
    8560:	e00a      	b.n	8578 <d_print_mod+0x17c>
    8562:	460b      	mov	r3, r1
    8564:	3101      	adds	r1, #1
    8566:	42bd      	cmp	r5, r7
    8568:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    856c:	54e6      	strb	r6, [r4, r3]
    856e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8572:	d078      	beq.n	8666 <d_print_mod+0x26a>
    8574:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8578:	29ff      	cmp	r1, #255	; 0xff
    857a:	d1f2      	bne.n	8562 <d_print_mod+0x166>
    857c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8580:	4620      	mov	r0, r4
    8582:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8586:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    858a:	4798      	blx	r3
    858c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8590:	2101      	movs	r1, #1
    8592:	3301      	adds	r3, #1
    8594:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8598:	2300      	movs	r3, #0
    859a:	e7e4      	b.n	8566 <d_print_mod+0x16a>
    859c:	4e9e      	ldr	r6, [pc, #632]	; (8818 <d_print_mod+0x41c>)
    859e:	2720      	movs	r7, #32
    85a0:	f04f 0800 	mov.w	r8, #0
    85a4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    85a8:	f106 0905 	add.w	r9, r6, #5
    85ac:	e00b      	b.n	85c6 <d_print_mod+0x1ca>
    85ae:	461a      	mov	r2, r3
    85b0:	3301      	adds	r3, #1
    85b2:	45b1      	cmp	r9, r6
    85b4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    85b8:	54a7      	strb	r7, [r4, r2]
    85ba:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    85be:	f000 817e 	beq.w	88be <d_print_mod+0x4c2>
    85c2:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    85c6:	2bff      	cmp	r3, #255	; 0xff
    85c8:	d1f1      	bne.n	85ae <d_print_mod+0x1b2>
    85ca:	4619      	mov	r1, r3
    85cc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    85d0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    85d4:	4620      	mov	r0, r4
    85d6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    85da:	4798      	blx	r3
    85dc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    85e0:	2200      	movs	r2, #0
    85e2:	3301      	adds	r3, #1
    85e4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    85e8:	2301      	movs	r3, #1
    85ea:	e7e2      	b.n	85b2 <d_print_mod+0x1b6>
    85ec:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    85f0:	2bff      	cmp	r3, #255	; 0xff
    85f2:	f000 81e5 	beq.w	89c0 <d_print_mod+0x5c4>
    85f6:	2220      	movs	r2, #32
    85f8:	1c59      	adds	r1, r3, #1
    85fa:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
    85fe:	54c2      	strb	r2, [r0, r3]
    8600:	f880 2104 	strb.w	r2, [r0, #260]	; 0x104
    8604:	e025      	b.n	8652 <d_print_mod+0x256>
    8606:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    860a:	2bff      	cmp	r3, #255	; 0xff
    860c:	f000 81b8 	beq.w	8980 <d_print_mod+0x584>
    8610:	1c59      	adds	r1, r3, #1
    8612:	2220      	movs	r2, #32
    8614:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8618:	54e2      	strb	r2, [r4, r3]
    861a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    861e:	e026      	b.n	866e <d_print_mod+0x272>
    8620:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    8624:	2bff      	cmp	r3, #255	; 0xff
    8626:	f000 81ba 	beq.w	899e <d_print_mod+0x5a2>
    862a:	1c59      	adds	r1, r3, #1
    862c:	2220      	movs	r2, #32
    862e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8632:	54e2      	strb	r2, [r4, r3]
    8634:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8638:	4620      	mov	r0, r4
    863a:	692a      	ldr	r2, [r5, #16]
    863c:	2111      	movs	r1, #17
    863e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8642:	e6ad      	b.n	83a0 <d_print_comp>
    8644:	68ea      	ldr	r2, [r5, #12]
    8646:	2111      	movs	r1, #17
    8648:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    864c:	e6a8      	b.n	83a0 <d_print_comp>
    864e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8652:	29ff      	cmp	r1, #255	; 0xff
    8654:	f000 81c4 	beq.w	89e0 <d_print_mod+0x5e4>
    8658:	1c4a      	adds	r2, r1, #1
    865a:	2326      	movs	r3, #38	; 0x26
    865c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8660:	5463      	strb	r3, [r4, r1]
    8662:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8666:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    866a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    866e:	4d6b      	ldr	r5, [pc, #428]	; (881c <d_print_mod+0x420>)
    8670:	2626      	movs	r6, #38	; 0x26
    8672:	f04f 0800 	mov.w	r8, #0
    8676:	1c6f      	adds	r7, r5, #1
    8678:	e00a      	b.n	8690 <d_print_mod+0x294>
    867a:	460b      	mov	r3, r1
    867c:	3101      	adds	r1, #1
    867e:	42bd      	cmp	r5, r7
    8680:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8684:	54e6      	strb	r6, [r4, r3]
    8686:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    868a:	d0ec      	beq.n	8666 <d_print_mod+0x26a>
    868c:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8690:	29ff      	cmp	r1, #255	; 0xff
    8692:	d1f2      	bne.n	867a <d_print_mod+0x27e>
    8694:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8698:	4620      	mov	r0, r4
    869a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    869e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    86a2:	4798      	blx	r3
    86a4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    86a8:	2101      	movs	r1, #1
    86aa:	3301      	adds	r3, #1
    86ac:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    86b0:	2300      	movs	r3, #0
    86b2:	e7e4      	b.n	867e <d_print_mod+0x282>
    86b4:	4d5a      	ldr	r5, [pc, #360]	; (8820 <d_print_mod+0x424>)
    86b6:	2620      	movs	r6, #32
    86b8:	f04f 0800 	mov.w	r8, #0
    86bc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    86c0:	f105 0708 	add.w	r7, r5, #8
    86c4:	e00a      	b.n	86dc <d_print_mod+0x2e0>
    86c6:	460b      	mov	r3, r1
    86c8:	3101      	adds	r1, #1
    86ca:	42bd      	cmp	r5, r7
    86cc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    86d0:	54e6      	strb	r6, [r4, r3]
    86d2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    86d6:	d0c6      	beq.n	8666 <d_print_mod+0x26a>
    86d8:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    86dc:	29ff      	cmp	r1, #255	; 0xff
    86de:	d1f2      	bne.n	86c6 <d_print_mod+0x2ca>
    86e0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    86e4:	4620      	mov	r0, r4
    86e6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    86ea:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    86ee:	4798      	blx	r3
    86f0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    86f4:	2101      	movs	r1, #1
    86f6:	3301      	adds	r3, #1
    86f8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    86fc:	2300      	movs	r3, #0
    86fe:	e7e4      	b.n	86ca <d_print_mod+0x2ce>
    8700:	4d48      	ldr	r5, [pc, #288]	; (8824 <d_print_mod+0x428>)
    8702:	2620      	movs	r6, #32
    8704:	f04f 0800 	mov.w	r8, #0
    8708:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    870c:	f105 070a 	add.w	r7, r5, #10
    8710:	e00a      	b.n	8728 <d_print_mod+0x32c>
    8712:	460b      	mov	r3, r1
    8714:	3101      	adds	r1, #1
    8716:	42bd      	cmp	r5, r7
    8718:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    871c:	54e6      	strb	r6, [r4, r3]
    871e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8722:	d0a0      	beq.n	8666 <d_print_mod+0x26a>
    8724:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8728:	29ff      	cmp	r1, #255	; 0xff
    872a:	d1f2      	bne.n	8712 <d_print_mod+0x316>
    872c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8730:	4620      	mov	r0, r4
    8732:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8736:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    873a:	4798      	blx	r3
    873c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8740:	2101      	movs	r1, #1
    8742:	3301      	adds	r3, #1
    8744:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8748:	2300      	movs	r3, #0
    874a:	e7e4      	b.n	8716 <d_print_mod+0x31a>
    874c:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
    8750:	2b28      	cmp	r3, #40	; 0x28
    8752:	f040 80ea 	bne.w	892a <d_print_mod+0x52e>
    8756:	68ea      	ldr	r2, [r5, #12]
    8758:	4d33      	ldr	r5, [pc, #204]	; (8828 <d_print_mod+0x42c>)
    875a:	2111      	movs	r1, #17
    875c:	4620      	mov	r0, r4
    875e:	f7ff fe1f 	bl	83a0 <d_print_comp>
    8762:	263a      	movs	r6, #58	; 0x3a
    8764:	2700      	movs	r7, #0
    8766:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    876a:	f105 0802 	add.w	r8, r5, #2
    876e:	e00b      	b.n	8788 <d_print_mod+0x38c>
    8770:	460b      	mov	r3, r1
    8772:	3101      	adds	r1, #1
    8774:	45a8      	cmp	r8, r5
    8776:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    877a:	54e6      	strb	r6, [r4, r3]
    877c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8780:	f43f af71 	beq.w	8666 <d_print_mod+0x26a>
    8784:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8788:	29ff      	cmp	r1, #255	; 0xff
    878a:	d1f1      	bne.n	8770 <d_print_mod+0x374>
    878c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8790:	4620      	mov	r0, r4
    8792:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8796:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    879a:	4798      	blx	r3
    879c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    87a0:	2101      	movs	r1, #1
    87a2:	3301      	adds	r3, #1
    87a4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    87a8:	2300      	movs	r3, #0
    87aa:	e7e3      	b.n	8774 <d_print_mod+0x378>
    87ac:	4e1f      	ldr	r6, [pc, #124]	; (882c <d_print_mod+0x430>)
    87ae:	2720      	movs	r7, #32
    87b0:	f04f 0800 	mov.w	r8, #0
    87b4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    87b8:	f106 0909 	add.w	r9, r6, #9
    87bc:	e00b      	b.n	87d6 <d_print_mod+0x3da>
    87be:	460b      	mov	r3, r1
    87c0:	3101      	adds	r1, #1
    87c2:	45b1      	cmp	r9, r6
    87c4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    87c8:	54e7      	strb	r7, [r4, r3]
    87ca:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    87ce:	f000 809a 	beq.w	8906 <d_print_mod+0x50a>
    87d2:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    87d6:	29ff      	cmp	r1, #255	; 0xff
    87d8:	d1f1      	bne.n	87be <d_print_mod+0x3c2>
    87da:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    87de:	4620      	mov	r0, r4
    87e0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    87e4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    87e8:	4798      	blx	r3
    87ea:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    87ee:	2101      	movs	r1, #1
    87f0:	3301      	adds	r3, #1
    87f2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    87f6:	2300      	movs	r3, #0
    87f8:	e7e3      	b.n	87c2 <d_print_mod+0x3c6>
    87fa:	4d0d      	ldr	r5, [pc, #52]	; (8830 <d_print_mod+0x434>)
    87fc:	2620      	movs	r6, #32
    87fe:	f04f 0800 	mov.w	r8, #0
    8802:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8806:	f105 0710 	add.w	r7, r5, #16
    880a:	e01f      	b.n	884c <d_print_mod+0x450>
    880c:	0001940c 	.word	0x0001940c
    8810:	00019418 	.word	0x00019418
    8814:	00019424 	.word	0x00019424
    8818:	0001944c 	.word	0x0001944c
    881c:	00019454 	.word	0x00019454
    8820:	00019458 	.word	0x00019458
    8824:	00019464 	.word	0x00019464
    8828:	00019470 	.word	0x00019470
    882c:	00019474 	.word	0x00019474
    8830:	0001942c 	.word	0x0001942c
    8834:	460b      	mov	r3, r1
    8836:	3101      	adds	r1, #1
    8838:	42af      	cmp	r7, r5
    883a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    883e:	54e6      	strb	r6, [r4, r3]
    8840:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8844:	f43f af0f 	beq.w	8666 <d_print_mod+0x26a>
    8848:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    884c:	29ff      	cmp	r1, #255	; 0xff
    884e:	d1f1      	bne.n	8834 <d_print_mod+0x438>
    8850:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8854:	4620      	mov	r0, r4
    8856:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    885a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    885e:	4798      	blx	r3
    8860:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8864:	2101      	movs	r1, #1
    8866:	3301      	adds	r3, #1
    8868:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    886c:	2300      	movs	r3, #0
    886e:	e7e3      	b.n	8838 <d_print_mod+0x43c>
    8870:	4e72      	ldr	r6, [pc, #456]	; (8a3c <d_print_mod+0x640>)
    8872:	2720      	movs	r7, #32
    8874:	f04f 0800 	mov.w	r8, #0
    8878:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    887c:	f106 0908 	add.w	r9, r6, #8
    8880:	e00a      	b.n	8898 <d_print_mod+0x49c>
    8882:	461a      	mov	r2, r3
    8884:	3301      	adds	r3, #1
    8886:	454e      	cmp	r6, r9
    8888:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    888c:	54a7      	strb	r7, [r4, r2]
    888e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    8892:	d014      	beq.n	88be <d_print_mod+0x4c2>
    8894:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    8898:	2bff      	cmp	r3, #255	; 0xff
    889a:	d1f2      	bne.n	8882 <d_print_mod+0x486>
    889c:	4619      	mov	r1, r3
    889e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    88a2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    88a6:	4620      	mov	r0, r4
    88a8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    88ac:	4798      	blx	r3
    88ae:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    88b2:	2200      	movs	r2, #0
    88b4:	3301      	adds	r3, #1
    88b6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    88ba:	2301      	movs	r3, #1
    88bc:	e7e3      	b.n	8886 <d_print_mod+0x48a>
    88be:	692a      	ldr	r2, [r5, #16]
    88c0:	2a00      	cmp	r2, #0
    88c2:	f43f aed0 	beq.w	8666 <d_print_mod+0x26a>
    88c6:	2bff      	cmp	r3, #255	; 0xff
    88c8:	d047      	beq.n	895a <d_print_mod+0x55e>
    88ca:	1c59      	adds	r1, r3, #1
    88cc:	2528      	movs	r5, #40	; 0x28
    88ce:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    88d2:	4620      	mov	r0, r4
    88d4:	2111      	movs	r1, #17
    88d6:	54e5      	strb	r5, [r4, r3]
    88d8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    88dc:	f7ff fd60 	bl	83a0 <d_print_comp>
    88e0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    88e4:	29ff      	cmp	r1, #255	; 0xff
    88e6:	d117      	bne.n	8918 <d_print_mod+0x51c>
    88e8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    88ec:	2500      	movs	r5, #0
    88ee:	4620      	mov	r0, r4
    88f0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    88f4:	4798      	blx	r3
    88f6:	2201      	movs	r2, #1
    88f8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    88fc:	4629      	mov	r1, r5
    88fe:	4413      	add	r3, r2
    8900:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8904:	e009      	b.n	891a <d_print_mod+0x51e>
    8906:	2111      	movs	r1, #17
    8908:	4620      	mov	r0, r4
    890a:	68ea      	ldr	r2, [r5, #12]
    890c:	f7ff fd48 	bl	83a0 <d_print_comp>
    8910:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8914:	29ff      	cmp	r1, #255	; 0xff
    8916:	d0e7      	beq.n	88e8 <d_print_mod+0x4ec>
    8918:	1c4a      	adds	r2, r1, #1
    891a:	2329      	movs	r3, #41	; 0x29
    891c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8920:	5463      	strb	r3, [r4, r1]
    8922:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8926:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    892a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    892e:	29ff      	cmp	r1, #255	; 0xff
    8930:	d065      	beq.n	89fe <d_print_mod+0x602>
    8932:	1c4a      	adds	r2, r1, #1
    8934:	2320      	movs	r3, #32
    8936:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    893a:	5463      	strb	r3, [r4, r1]
    893c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8940:	e709      	b.n	8756 <d_print_mod+0x35a>
    8942:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8946:	29ff      	cmp	r1, #255	; 0xff
    8948:	d069      	beq.n	8a1e <d_print_mod+0x622>
    894a:	1c4a      	adds	r2, r1, #1
    894c:	232a      	movs	r3, #42	; 0x2a
    894e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8952:	5463      	strb	r3, [r4, r1]
    8954:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8958:	e685      	b.n	8666 <d_print_mod+0x26a>
    895a:	2600      	movs	r6, #0
    895c:	4619      	mov	r1, r3
    895e:	4620      	mov	r0, r4
    8960:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8964:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8968:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    896c:	4798      	blx	r3
    896e:	2101      	movs	r1, #1
    8970:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
    8974:	692a      	ldr	r2, [r5, #16]
    8976:	4408      	add	r0, r1
    8978:	4633      	mov	r3, r6
    897a:	f8c4 0128 	str.w	r0, [r4, #296]	; 0x128
    897e:	e7a5      	b.n	88cc <d_print_mod+0x4d0>
    8980:	2500      	movs	r5, #0
    8982:	4619      	mov	r1, r3
    8984:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    8988:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    898c:	4798      	blx	r3
    898e:	2101      	movs	r1, #1
    8990:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8994:	462b      	mov	r3, r5
    8996:	440a      	add	r2, r1
    8998:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    899c:	e639      	b.n	8612 <d_print_mod+0x216>
    899e:	2600      	movs	r6, #0
    89a0:	4619      	mov	r1, r3
    89a2:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    89a6:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    89aa:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    89ae:	4798      	blx	r3
    89b0:	2101      	movs	r1, #1
    89b2:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    89b6:	4633      	mov	r3, r6
    89b8:	440a      	add	r2, r1
    89ba:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    89be:	e635      	b.n	862c <d_print_mod+0x230>
    89c0:	2500      	movs	r5, #0
    89c2:	4619      	mov	r1, r3
    89c4:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    89c8:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    89cc:	4798      	blx	r3
    89ce:	2101      	movs	r1, #1
    89d0:	2220      	movs	r2, #32
    89d2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    89d6:	7022      	strb	r2, [r4, #0]
    89d8:	440b      	add	r3, r1
    89da:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    89de:	e63b      	b.n	8658 <d_print_mod+0x25c>
    89e0:	2500      	movs	r5, #0
    89e2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    89e6:	4620      	mov	r0, r4
    89e8:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    89ec:	4798      	blx	r3
    89ee:	2201      	movs	r2, #1
    89f0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    89f4:	4629      	mov	r1, r5
    89f6:	4413      	add	r3, r2
    89f8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    89fc:	e62d      	b.n	865a <d_print_mod+0x25e>
    89fe:	2600      	movs	r6, #0
    8a00:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    8a04:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    8a08:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    8a0c:	4798      	blx	r3
    8a0e:	2201      	movs	r2, #1
    8a10:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8a14:	4631      	mov	r1, r6
    8a16:	4413      	add	r3, r2
    8a18:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8a1c:	e78a      	b.n	8934 <d_print_mod+0x538>
    8a1e:	2500      	movs	r5, #0
    8a20:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    8a24:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    8a28:	4798      	blx	r3
    8a2a:	2201      	movs	r2, #1
    8a2c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8a30:	4629      	mov	r1, r5
    8a32:	4413      	add	r3, r2
    8a34:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8a38:	e788      	b.n	894c <d_print_mod+0x550>
    8a3a:	bf00      	nop
    8a3c:	00019440 	.word	0x00019440

00008a40 <d_print_function_type>:
    8a40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8a44:	4604      	mov	r4, r0
    8a46:	4617      	mov	r7, r2
    8a48:	461d      	mov	r5, r3
    8a4a:	2b00      	cmp	r3, #0
    8a4c:	d064      	beq.n	8b18 <d_print_function_type+0xd8>
    8a4e:	689a      	ldr	r2, [r3, #8]
    8a50:	2a00      	cmp	r2, #0
    8a52:	d161      	bne.n	8b18 <d_print_function_type+0xd8>
    8a54:	685a      	ldr	r2, [r3, #4]
    8a56:	7811      	ldrb	r1, [r2, #0]
    8a58:	3919      	subs	r1, #25
    8a5a:	2912      	cmp	r1, #18
    8a5c:	d859      	bhi.n	8b12 <d_print_function_type+0xd2>
    8a5e:	e8df f001 	tbb	[pc, r1]
    8a62:	0a0a      	.short	0x0a0a
    8a64:	5858580a 	.word	0x5858580a
    8a68:	800a5858 	.word	0x800a5858
    8a6c:	0a0a8080 	.word	0x0a0a8080
    8a70:	58585858 	.word	0x58585858
    8a74:	0a          	.byte	0x0a
    8a75:	00          	.byte	0x00
    8a76:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    8a7a:	2b20      	cmp	r3, #32
    8a7c:	d179      	bne.n	8b72 <d_print_function_type+0x132>
    8a7e:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
    8a82:	2eff      	cmp	r6, #255	; 0xff
    8a84:	f000 8083 	beq.w	8b8e <d_print_function_type+0x14e>
    8a88:	1c73      	adds	r3, r6, #1
    8a8a:	f04f 0928 	mov.w	r9, #40	; 0x28
    8a8e:	f04f 0a00 	mov.w	sl, #0
    8a92:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8a96:	f804 9006 	strb.w	r9, [r4, r6]
    8a9a:	462a      	mov	r2, r5
    8a9c:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
    8aa0:	2111      	movs	r1, #17
    8aa2:	4620      	mov	r0, r4
    8aa4:	4653      	mov	r3, sl
    8aa6:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    8aaa:	f8c4 a114 	str.w	sl, [r4, #276]	; 0x114
    8aae:	f000 f8b9 	bl	8c24 <d_print_mod_list>
    8ab2:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
    8ab6:	2aff      	cmp	r2, #255	; 0xff
    8ab8:	f000 808a 	beq.w	8bd0 <d_print_function_type+0x190>
    8abc:	2329      	movs	r3, #41	; 0x29
    8abe:	1c51      	adds	r1, r2, #1
    8ac0:	29ff      	cmp	r1, #255	; 0xff
    8ac2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8ac6:	54a3      	strb	r3, [r4, r2]
    8ac8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8acc:	d032      	beq.n	8b34 <d_print_function_type+0xf4>
    8ace:	2328      	movs	r3, #40	; 0x28
    8ad0:	1c4e      	adds	r6, r1, #1
    8ad2:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
    8ad6:	5463      	strb	r3, [r4, r1]
    8ad8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8adc:	693a      	ldr	r2, [r7, #16]
    8ade:	b12a      	cbz	r2, 8aec <d_print_function_type+0xac>
    8ae0:	2111      	movs	r1, #17
    8ae2:	4620      	mov	r0, r4
    8ae4:	f7ff fc5c 	bl	83a0 <d_print_comp>
    8ae8:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
    8aec:	2eff      	cmp	r6, #255	; 0xff
    8aee:	d05f      	beq.n	8bb0 <d_print_function_type+0x170>
    8af0:	1c73      	adds	r3, r6, #1
    8af2:	2729      	movs	r7, #41	; 0x29
    8af4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8af8:	462a      	mov	r2, r5
    8afa:	55a7      	strb	r7, [r4, r6]
    8afc:	2301      	movs	r3, #1
    8afe:	2111      	movs	r1, #17
    8b00:	4620      	mov	r0, r4
    8b02:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    8b06:	f000 f88d 	bl	8c24 <d_print_mod_list>
    8b0a:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
    8b0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8b12:	681b      	ldr	r3, [r3, #0]
    8b14:	2b00      	cmp	r3, #0
    8b16:	d19a      	bne.n	8a4e <d_print_function_type+0xe>
    8b18:	2300      	movs	r3, #0
    8b1a:	2111      	movs	r1, #17
    8b1c:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
    8b20:	462a      	mov	r2, r5
    8b22:	4620      	mov	r0, r4
    8b24:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    8b28:	f000 f87c 	bl	8c24 <d_print_mod_list>
    8b2c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8b30:	29ff      	cmp	r1, #255	; 0xff
    8b32:	d1cc      	bne.n	8ace <d_print_function_type+0x8e>
    8b34:	2300      	movs	r3, #0
    8b36:	4620      	mov	r0, r4
    8b38:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
    8b3c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8b40:	4798      	blx	r3
    8b42:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8b46:	2601      	movs	r6, #1
    8b48:	3301      	adds	r3, #1
    8b4a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8b4e:	2328      	movs	r3, #40	; 0x28
    8b50:	7023      	strb	r3, [r4, #0]
    8b52:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8b56:	693a      	ldr	r2, [r7, #16]
    8b58:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
    8b5c:	2a00      	cmp	r2, #0
    8b5e:	d1bf      	bne.n	8ae0 <d_print_function_type+0xa0>
    8b60:	e7c6      	b.n	8af0 <d_print_function_type+0xb0>
    8b62:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    8b66:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
    8b6a:	2a28      	cmp	r2, #40	; 0x28
    8b6c:	d087      	beq.n	8a7e <d_print_function_type+0x3e>
    8b6e:	2b20      	cmp	r3, #32
    8b70:	d085      	beq.n	8a7e <d_print_function_type+0x3e>
    8b72:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8b76:	29ff      	cmp	r1, #255	; 0xff
    8b78:	d043      	beq.n	8c02 <d_print_function_type+0x1c2>
    8b7a:	2320      	movs	r3, #32
    8b7c:	1c4e      	adds	r6, r1, #1
    8b7e:	2eff      	cmp	r6, #255	; 0xff
    8b80:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
    8b84:	5463      	strb	r3, [r4, r1]
    8b86:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8b8a:	f47f af7d 	bne.w	8a88 <d_print_function_type+0x48>
    8b8e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8b92:	f04f 0800 	mov.w	r8, #0
    8b96:	4631      	mov	r1, r6
    8b98:	4620      	mov	r0, r4
    8b9a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8b9e:	4798      	blx	r3
    8ba0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8ba4:	4646      	mov	r6, r8
    8ba6:	3301      	adds	r3, #1
    8ba8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8bac:	2301      	movs	r3, #1
    8bae:	e76c      	b.n	8a8a <d_print_function_type+0x4a>
    8bb0:	2700      	movs	r7, #0
    8bb2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8bb6:	4631      	mov	r1, r6
    8bb8:	4620      	mov	r0, r4
    8bba:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    8bbe:	4798      	blx	r3
    8bc0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8bc4:	463e      	mov	r6, r7
    8bc6:	3301      	adds	r3, #1
    8bc8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8bcc:	2301      	movs	r3, #1
    8bce:	e790      	b.n	8af2 <d_print_function_type+0xb2>
    8bd0:	4611      	mov	r1, r2
    8bd2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8bd6:	4620      	mov	r0, r4
    8bd8:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
    8bdc:	4798      	blx	r3
    8bde:	f642 0229 	movw	r2, #10281	; 0x2829
    8be2:	2602      	movs	r6, #2
    8be4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8be8:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    8bec:	8022      	strh	r2, [r4, #0]
    8bee:	693a      	ldr	r2, [r7, #16]
    8bf0:	3301      	adds	r3, #1
    8bf2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8bf6:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
    8bfa:	2a00      	cmp	r2, #0
    8bfc:	f47f af70 	bne.w	8ae0 <d_print_function_type+0xa0>
    8c00:	e776      	b.n	8af0 <d_print_function_type+0xb0>
    8c02:	2600      	movs	r6, #0
    8c04:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8c08:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    8c0c:	4620      	mov	r0, r4
    8c0e:	4798      	blx	r3
    8c10:	2220      	movs	r2, #32
    8c12:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8c16:	2601      	movs	r6, #1
    8c18:	3301      	adds	r3, #1
    8c1a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8c1e:	7022      	strb	r2, [r4, #0]
    8c20:	e732      	b.n	8a88 <d_print_function_type+0x48>
    8c22:	bf00      	nop

00008c24 <d_print_mod_list>:
    8c24:	2a00      	cmp	r2, #0
    8c26:	f000 80c2 	beq.w	8dae <d_print_mod_list+0x18a>
    8c2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8c2e:	4605      	mov	r5, r0
    8c30:	4614      	mov	r4, r2
    8c32:	461e      	mov	r6, r3
    8c34:	2701      	movs	r7, #1
    8c36:	b089      	sub	sp, #36	; 0x24
    8c38:	f8d5 2118 	ldr.w	r2, [r5, #280]	; 0x118
    8c3c:	b9ca      	cbnz	r2, 8c72 <d_print_mod_list+0x4e>
    8c3e:	68a2      	ldr	r2, [r4, #8]
    8c40:	bb0a      	cbnz	r2, 8c86 <d_print_mod_list+0x62>
    8c42:	6862      	ldr	r2, [r4, #4]
    8c44:	7811      	ldrb	r1, [r2, #0]
    8c46:	b1be      	cbz	r6, 8c78 <d_print_mod_list+0x54>
    8c48:	68e3      	ldr	r3, [r4, #12]
    8c4a:	2929      	cmp	r1, #41	; 0x29
    8c4c:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
    8c50:	60a7      	str	r7, [r4, #8]
    8c52:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
    8c56:	d024      	beq.n	8ca2 <d_print_mod_list+0x7e>
    8c58:	292a      	cmp	r1, #42	; 0x2a
    8c5a:	d02c      	beq.n	8cb6 <d_print_mod_list+0x92>
    8c5c:	2902      	cmp	r1, #2
    8c5e:	d034      	beq.n	8cca <d_print_mod_list+0xa6>
    8c60:	2111      	movs	r1, #17
    8c62:	4628      	mov	r0, r5
    8c64:	f7ff fbca 	bl	83fc <d_print_mod>
    8c68:	6824      	ldr	r4, [r4, #0]
    8c6a:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    8c6e:	2c00      	cmp	r4, #0
    8c70:	d1e2      	bne.n	8c38 <d_print_mod_list+0x14>
    8c72:	b009      	add	sp, #36	; 0x24
    8c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8c78:	294d      	cmp	r1, #77	; 0x4d
    8c7a:	d004      	beq.n	8c86 <d_print_mod_list+0x62>
    8c7c:	d807      	bhi.n	8c8e <d_print_mod_list+0x6a>
    8c7e:	f1a1 031c 	sub.w	r3, r1, #28
    8c82:	2b04      	cmp	r3, #4
    8c84:	d8e0      	bhi.n	8c48 <d_print_mod_list+0x24>
    8c86:	6824      	ldr	r4, [r4, #0]
    8c88:	2c00      	cmp	r4, #0
    8c8a:	d1d5      	bne.n	8c38 <d_print_mod_list+0x14>
    8c8c:	e7f1      	b.n	8c72 <d_print_mod_list+0x4e>
    8c8e:	394f      	subs	r1, #79	; 0x4f
    8c90:	2901      	cmp	r1, #1
    8c92:	d9f8      	bls.n	8c86 <d_print_mod_list+0x62>
    8c94:	68e3      	ldr	r3, [r4, #12]
    8c96:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
    8c9a:	60a7      	str	r7, [r4, #8]
    8c9c:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
    8ca0:	e7de      	b.n	8c60 <d_print_mod_list+0x3c>
    8ca2:	2111      	movs	r1, #17
    8ca4:	4628      	mov	r0, r5
    8ca6:	6823      	ldr	r3, [r4, #0]
    8ca8:	f7ff feca 	bl	8a40 <d_print_function_type>
    8cac:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    8cb0:	b009      	add	sp, #36	; 0x24
    8cb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8cb6:	2111      	movs	r1, #17
    8cb8:	4628      	mov	r0, r5
    8cba:	6823      	ldr	r3, [r4, #0]
    8cbc:	f000 f8d6 	bl	8e6c <d_print_array_type>
    8cc0:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    8cc4:	b009      	add	sp, #36	; 0x24
    8cc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8cca:	f04f 0900 	mov.w	r9, #0
    8cce:	f8d5 b114 	ldr.w	fp, [r5, #276]	; 0x114
    8cd2:	4e62      	ldr	r6, [pc, #392]	; (8e5c <d_print_mod_list+0x238>)
    8cd4:	2111      	movs	r1, #17
    8cd6:	68d2      	ldr	r2, [r2, #12]
    8cd8:	4628      	mov	r0, r5
    8cda:	f8c5 9114 	str.w	r9, [r5, #276]	; 0x114
    8cde:	f7ff fb5f 	bl	83a0 <d_print_comp>
    8ce2:	273a      	movs	r7, #58	; 0x3a
    8ce4:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    8ce8:	f106 0a01 	add.w	sl, r6, #1
    8cec:	f8c5 b114 	str.w	fp, [r5, #276]	; 0x114
    8cf0:	e00a      	b.n	8d08 <d_print_mod_list+0xe4>
    8cf2:	460b      	mov	r3, r1
    8cf4:	3101      	adds	r1, #1
    8cf6:	4556      	cmp	r6, sl
    8cf8:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8cfc:	54ef      	strb	r7, [r5, r3]
    8cfe:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
    8d02:	d013      	beq.n	8d2c <d_print_mod_list+0x108>
    8d04:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    8d08:	29ff      	cmp	r1, #255	; 0xff
    8d0a:	d1f2      	bne.n	8cf2 <d_print_mod_list+0xce>
    8d0c:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8d10:	4628      	mov	r0, r5
    8d12:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8d16:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8d1a:	4798      	blx	r3
    8d1c:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8d20:	2101      	movs	r1, #1
    8d22:	3301      	adds	r3, #1
    8d24:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8d28:	2300      	movs	r3, #0
    8d2a:	e7e4      	b.n	8cf6 <d_print_mod_list+0xd2>
    8d2c:	6863      	ldr	r3, [r4, #4]
    8d2e:	691c      	ldr	r4, [r3, #16]
    8d30:	7823      	ldrb	r3, [r4, #0]
    8d32:	2b47      	cmp	r3, #71	; 0x47
    8d34:	d017      	beq.n	8d66 <d_print_mod_list+0x142>
    8d36:	2b4d      	cmp	r3, #77	; 0x4d
    8d38:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
    8d3c:	f1a3 011c 	sub.w	r1, r3, #28
    8d40:	d00e      	beq.n	8d60 <d_print_mod_list+0x13c>
    8d42:	d80b      	bhi.n	8d5c <d_print_mod_list+0x138>
    8d44:	2904      	cmp	r1, #4
    8d46:	d90b      	bls.n	8d60 <d_print_mod_list+0x13c>
    8d48:	4622      	mov	r2, r4
    8d4a:	2111      	movs	r1, #17
    8d4c:	4628      	mov	r0, r5
    8d4e:	f7ff fb27 	bl	83a0 <d_print_comp>
    8d52:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    8d56:	b009      	add	sp, #36	; 0x24
    8d58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8d5c:	2a01      	cmp	r2, #1
    8d5e:	d8f3      	bhi.n	8d48 <d_print_mod_list+0x124>
    8d60:	68e4      	ldr	r4, [r4, #12]
    8d62:	7823      	ldrb	r3, [r4, #0]
    8d64:	e7e7      	b.n	8d36 <d_print_mod_list+0x112>
    8d66:	4f3e      	ldr	r7, [pc, #248]	; (8e60 <d_print_mod_list+0x23c>)
    8d68:	267b      	movs	r6, #123	; 0x7b
    8d6a:	f04f 0900 	mov.w	r9, #0
    8d6e:	f107 0a0c 	add.w	sl, r7, #12
    8d72:	e00a      	b.n	8d8a <d_print_mod_list+0x166>
    8d74:	460b      	mov	r3, r1
    8d76:	3101      	adds	r1, #1
    8d78:	4557      	cmp	r7, sl
    8d7a:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8d7e:	54ee      	strb	r6, [r5, r3]
    8d80:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    8d84:	d014      	beq.n	8db0 <d_print_mod_list+0x18c>
    8d86:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    8d8a:	29ff      	cmp	r1, #255	; 0xff
    8d8c:	d1f2      	bne.n	8d74 <d_print_mod_list+0x150>
    8d8e:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8d92:	4628      	mov	r0, r5
    8d94:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8d98:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8d9c:	4798      	blx	r3
    8d9e:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8da2:	2101      	movs	r1, #1
    8da4:	3301      	adds	r3, #1
    8da6:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8daa:	2300      	movs	r3, #0
    8dac:	e7e4      	b.n	8d78 <d_print_mod_list+0x154>
    8dae:	4770      	bx	lr
    8db0:	6922      	ldr	r2, [r4, #16]
    8db2:	492c      	ldr	r1, [pc, #176]	; (8e64 <d_print_mod_list+0x240>)
    8db4:	3201      	adds	r2, #1
    8db6:	a801      	add	r0, sp, #4
    8db8:	f004 fb52 	bl	d460 <sprintf>
    8dbc:	a801      	add	r0, sp, #4
    8dbe:	f004 fc4f 	bl	d660 <strlen>
    8dc2:	4682      	mov	sl, r0
    8dc4:	b318      	cbz	r0, 8e0e <d_print_mod_list+0x1ea>
    8dc6:	ae01      	add	r6, sp, #4
    8dc8:	f04f 0900 	mov.w	r9, #0
    8dcc:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    8dd0:	44b2      	add	sl, r6
    8dd2:	e008      	b.n	8de6 <d_print_mod_list+0x1c2>
    8dd4:	460b      	mov	r3, r1
    8dd6:	3101      	adds	r1, #1
    8dd8:	4556      	cmp	r6, sl
    8dda:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8dde:	54ef      	strb	r7, [r5, r3]
    8de0:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
    8de4:	d015      	beq.n	8e12 <d_print_mod_list+0x1ee>
    8de6:	29ff      	cmp	r1, #255	; 0xff
    8de8:	f816 7b01 	ldrb.w	r7, [r6], #1
    8dec:	d1f2      	bne.n	8dd4 <d_print_mod_list+0x1b0>
    8dee:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8df2:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8df6:	4628      	mov	r0, r5
    8df8:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8dfc:	4798      	blx	r3
    8dfe:	2101      	movs	r1, #1
    8e00:	f8d5 2128 	ldr.w	r2, [r5, #296]	; 0x128
    8e04:	2300      	movs	r3, #0
    8e06:	440a      	add	r2, r1
    8e08:	f8c5 2128 	str.w	r2, [r5, #296]	; 0x128
    8e0c:	e7e4      	b.n	8dd8 <d_print_mod_list+0x1b4>
    8e0e:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    8e12:	4f15      	ldr	r7, [pc, #84]	; (8e68 <d_print_mod_list+0x244>)
    8e14:	267d      	movs	r6, #125	; 0x7d
    8e16:	f04f 0900 	mov.w	r9, #0
    8e1a:	f107 0a02 	add.w	sl, r7, #2
    8e1e:	e00a      	b.n	8e36 <d_print_mod_list+0x212>
    8e20:	460b      	mov	r3, r1
    8e22:	3101      	adds	r1, #1
    8e24:	45ba      	cmp	sl, r7
    8e26:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8e2a:	54ee      	strb	r6, [r5, r3]
    8e2c:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    8e30:	d096      	beq.n	8d60 <d_print_mod_list+0x13c>
    8e32:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    8e36:	29ff      	cmp	r1, #255	; 0xff
    8e38:	d1f2      	bne.n	8e20 <d_print_mod_list+0x1fc>
    8e3a:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8e3e:	4628      	mov	r0, r5
    8e40:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8e44:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8e48:	4798      	blx	r3
    8e4a:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8e4e:	2101      	movs	r1, #1
    8e50:	3301      	adds	r3, #1
    8e52:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8e56:	2300      	movs	r3, #0
    8e58:	e7e4      	b.n	8e24 <d_print_mod_list+0x200>
    8e5a:	bf00      	nop
    8e5c:	00019184 	.word	0x00019184
    8e60:	00019188 	.word	0x00019188
    8e64:	00019114 	.word	0x00019114
    8e68:	00019198 	.word	0x00019198

00008e6c <d_print_array_type>:
    8e6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8e70:	4604      	mov	r4, r0
    8e72:	4616      	mov	r6, r2
    8e74:	b153      	cbz	r3, 8e8c <d_print_array_type+0x20>
    8e76:	461f      	mov	r7, r3
    8e78:	689d      	ldr	r5, [r3, #8]
    8e7a:	b37d      	cbz	r5, 8edc <d_print_array_type+0x70>
    8e7c:	681b      	ldr	r3, [r3, #0]
    8e7e:	2b00      	cmp	r3, #0
    8e80:	d1fa      	bne.n	8e78 <d_print_array_type+0xc>
    8e82:	463a      	mov	r2, r7
    8e84:	2111      	movs	r1, #17
    8e86:	4620      	mov	r0, r4
    8e88:	f7ff fecc 	bl	8c24 <d_print_mod_list>
    8e8c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    8e90:	2bff      	cmp	r3, #255	; 0xff
    8e92:	f000 809d 	beq.w	8fd0 <d_print_array_type+0x164>
    8e96:	2220      	movs	r2, #32
    8e98:	1c59      	adds	r1, r3, #1
    8e9a:	29ff      	cmp	r1, #255	; 0xff
    8e9c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8ea0:	54e2      	strb	r2, [r4, r3]
    8ea2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8ea6:	d027      	beq.n	8ef8 <d_print_array_type+0x8c>
    8ea8:	225b      	movs	r2, #91	; 0x5b
    8eaa:	1c4b      	adds	r3, r1, #1
    8eac:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8eb0:	5462      	strb	r2, [r4, r1]
    8eb2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8eb6:	68f2      	ldr	r2, [r6, #12]
    8eb8:	b12a      	cbz	r2, 8ec6 <d_print_array_type+0x5a>
    8eba:	2111      	movs	r1, #17
    8ebc:	4620      	mov	r0, r4
    8ebe:	f7ff fa6f 	bl	83a0 <d_print_comp>
    8ec2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    8ec6:	2bff      	cmp	r3, #255	; 0xff
    8ec8:	d02f      	beq.n	8f2a <d_print_array_type+0xbe>
    8eca:	1c59      	adds	r1, r3, #1
    8ecc:	225d      	movs	r2, #93	; 0x5d
    8ece:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8ed2:	54e2      	strb	r2, [r4, r3]
    8ed4:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8ed8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8edc:	685b      	ldr	r3, [r3, #4]
    8ede:	781b      	ldrb	r3, [r3, #0]
    8ee0:	2b2a      	cmp	r3, #42	; 0x2a
    8ee2:	d132      	bne.n	8f4a <d_print_array_type+0xde>
    8ee4:	2111      	movs	r1, #17
    8ee6:	462b      	mov	r3, r5
    8ee8:	463a      	mov	r2, r7
    8eea:	4620      	mov	r0, r4
    8eec:	f7ff fe9a 	bl	8c24 <d_print_mod_list>
    8ef0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8ef4:	29ff      	cmp	r1, #255	; 0xff
    8ef6:	d1d7      	bne.n	8ea8 <d_print_array_type+0x3c>
    8ef8:	2500      	movs	r5, #0
    8efa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8efe:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8f02:	4620      	mov	r0, r4
    8f04:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8f08:	4798      	blx	r3
    8f0a:	215b      	movs	r1, #91	; 0x5b
    8f0c:	2301      	movs	r3, #1
    8f0e:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8f12:	7021      	strb	r1, [r4, #0]
    8f14:	441a      	add	r2, r3
    8f16:	f884 1104 	strb.w	r1, [r4, #260]	; 0x104
    8f1a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8f1e:	68f2      	ldr	r2, [r6, #12]
    8f20:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8f24:	2a00      	cmp	r2, #0
    8f26:	d1c8      	bne.n	8eba <d_print_array_type+0x4e>
    8f28:	e7cf      	b.n	8eca <d_print_array_type+0x5e>
    8f2a:	2500      	movs	r5, #0
    8f2c:	4619      	mov	r1, r3
    8f2e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8f32:	4620      	mov	r0, r4
    8f34:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8f38:	4798      	blx	r3
    8f3a:	2101      	movs	r1, #1
    8f3c:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8f40:	462b      	mov	r3, r5
    8f42:	440a      	add	r2, r1
    8f44:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8f48:	e7c0      	b.n	8ecc <d_print_array_type+0x60>
    8f4a:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 9030 <d_print_array_type+0x1c4>
    8f4e:	f04f 0920 	mov.w	r9, #32
    8f52:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8f56:	f108 0a01 	add.w	sl, r8, #1
    8f5a:	e00c      	b.n	8f76 <d_print_array_type+0x10a>
    8f5c:	460b      	mov	r3, r1
    8f5e:	45d0      	cmp	r8, sl
    8f60:	f101 0101 	add.w	r1, r1, #1
    8f64:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8f68:	f804 9003 	strb.w	r9, [r4, r3]
    8f6c:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    8f70:	d01a      	beq.n	8fa8 <d_print_array_type+0x13c>
    8f72:	f818 9f01 	ldrb.w	r9, [r8, #1]!
    8f76:	29ff      	cmp	r1, #255	; 0xff
    8f78:	d1f0      	bne.n	8f5c <d_print_array_type+0xf0>
    8f7a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8f7e:	4620      	mov	r0, r4
    8f80:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8f84:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8f88:	4798      	blx	r3
    8f8a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8f8e:	2101      	movs	r1, #1
    8f90:	3301      	adds	r3, #1
    8f92:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8f96:	2300      	movs	r3, #0
    8f98:	45d0      	cmp	r8, sl
    8f9a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8f9e:	f804 9003 	strb.w	r9, [r4, r3]
    8fa2:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    8fa6:	d1e4      	bne.n	8f72 <d_print_array_type+0x106>
    8fa8:	2111      	movs	r1, #17
    8faa:	2300      	movs	r3, #0
    8fac:	463a      	mov	r2, r7
    8fae:	4620      	mov	r0, r4
    8fb0:	f7ff fe38 	bl	8c24 <d_print_mod_list>
    8fb4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8fb8:	29ff      	cmp	r1, #255	; 0xff
    8fba:	d026      	beq.n	900a <d_print_array_type+0x19e>
    8fbc:	2229      	movs	r2, #41	; 0x29
    8fbe:	1c4b      	adds	r3, r1, #1
    8fc0:	2bff      	cmp	r3, #255	; 0xff
    8fc2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8fc6:	5462      	strb	r2, [r4, r1]
    8fc8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8fcc:	f47f af63 	bne.w	8e96 <d_print_array_type+0x2a>
    8fd0:	2500      	movs	r5, #0
    8fd2:	4619      	mov	r1, r3
    8fd4:	4620      	mov	r0, r4
    8fd6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8fda:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8fde:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8fe2:	4798      	blx	r3
    8fe4:	f645 3020 	movw	r0, #23328	; 0x5b20
    8fe8:	215b      	movs	r1, #91	; 0x5b
    8fea:	2302      	movs	r3, #2
    8fec:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8ff0:	8020      	strh	r0, [r4, #0]
    8ff2:	3201      	adds	r2, #1
    8ff4:	f884 1104 	strb.w	r1, [r4, #260]	; 0x104
    8ff8:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8ffc:	68f2      	ldr	r2, [r6, #12]
    8ffe:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    9002:	2a00      	cmp	r2, #0
    9004:	f47f af59 	bne.w	8eba <d_print_array_type+0x4e>
    9008:	e75f      	b.n	8eca <d_print_array_type+0x5e>
    900a:	2500      	movs	r5, #0
    900c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    9010:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    9014:	4620      	mov	r0, r4
    9016:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    901a:	4798      	blx	r3
    901c:	2301      	movs	r3, #1
    901e:	2129      	movs	r1, #41	; 0x29
    9020:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    9024:	7021      	strb	r1, [r4, #0]
    9026:	441a      	add	r2, r3
    9028:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    902c:	e733      	b.n	8e96 <d_print_array_type+0x2a>
    902e:	bf00      	nop
    9030:	00019388 	.word	0x00019388

00009034 <d_print_conversion>:
    9034:	b570      	push	{r4, r5, r6, lr}
    9036:	f8d0 3148 	ldr.w	r3, [r0, #328]	; 0x148
    903a:	4604      	mov	r4, r0
    903c:	4615      	mov	r5, r2
    903e:	b082      	sub	sp, #8
    9040:	b12b      	cbz	r3, 904e <d_print_conversion+0x1a>
    9042:	f8d0 2110 	ldr.w	r2, [r0, #272]	; 0x110
    9046:	9301      	str	r3, [sp, #4]
    9048:	9200      	str	r2, [sp, #0]
    904a:	f8c0 d110 	str.w	sp, [r0, #272]	; 0x110
    904e:	68ea      	ldr	r2, [r5, #12]
    9050:	2111      	movs	r1, #17
    9052:	7813      	ldrb	r3, [r2, #0]
    9054:	4620      	mov	r0, r4
    9056:	2b04      	cmp	r3, #4
    9058:	d009      	beq.n	906e <d_print_conversion+0x3a>
    905a:	f7ff f9a1 	bl	83a0 <d_print_comp>
    905e:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    9062:	b113      	cbz	r3, 906a <d_print_conversion+0x36>
    9064:	9b00      	ldr	r3, [sp, #0]
    9066:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    906a:	b002      	add	sp, #8
    906c:	bd70      	pop	{r4, r5, r6, pc}
    906e:	68d2      	ldr	r2, [r2, #12]
    9070:	f7ff f996 	bl	83a0 <d_print_comp>
    9074:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    9078:	b113      	cbz	r3, 9080 <d_print_conversion+0x4c>
    907a:	9b00      	ldr	r3, [sp, #0]
    907c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    9080:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    9084:	2b3c      	cmp	r3, #60	; 0x3c
    9086:	d021      	beq.n	90cc <d_print_conversion+0x98>
    9088:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    908c:	2bff      	cmp	r3, #255	; 0xff
    908e:	d044      	beq.n	911a <d_print_conversion+0xe6>
    9090:	1c59      	adds	r1, r3, #1
    9092:	223c      	movs	r2, #60	; 0x3c
    9094:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    9098:	54e2      	strb	r2, [r4, r3]
    909a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    909e:	68eb      	ldr	r3, [r5, #12]
    90a0:	2111      	movs	r1, #17
    90a2:	691a      	ldr	r2, [r3, #16]
    90a4:	4620      	mov	r0, r4
    90a6:	f7ff f97b 	bl	83a0 <d_print_comp>
    90aa:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    90ae:	2b3e      	cmp	r3, #62	; 0x3e
    90b0:	d027      	beq.n	9102 <d_print_conversion+0xce>
    90b2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    90b6:	29ff      	cmp	r1, #255	; 0xff
    90b8:	d014      	beq.n	90e4 <d_print_conversion+0xb0>
    90ba:	1c4a      	adds	r2, r1, #1
    90bc:	233e      	movs	r3, #62	; 0x3e
    90be:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    90c2:	5463      	strb	r3, [r4, r1]
    90c4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    90c8:	b002      	add	sp, #8
    90ca:	bd70      	pop	{r4, r5, r6, pc}
    90cc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    90d0:	29ff      	cmp	r1, #255	; 0xff
    90d2:	d034      	beq.n	913e <d_print_conversion+0x10a>
    90d4:	2220      	movs	r2, #32
    90d6:	1c4b      	adds	r3, r1, #1
    90d8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    90dc:	5462      	strb	r2, [r4, r1]
    90de:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    90e2:	e7d3      	b.n	908c <d_print_conversion+0x58>
    90e4:	2500      	movs	r5, #0
    90e6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    90ea:	4620      	mov	r0, r4
    90ec:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    90f0:	4798      	blx	r3
    90f2:	2201      	movs	r2, #1
    90f4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    90f8:	4629      	mov	r1, r5
    90fa:	4413      	add	r3, r2
    90fc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9100:	e7dc      	b.n	90bc <d_print_conversion+0x88>
    9102:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    9106:	2bff      	cmp	r3, #255	; 0xff
    9108:	d02b      	beq.n	9162 <d_print_conversion+0x12e>
    910a:	2220      	movs	r2, #32
    910c:	1c59      	adds	r1, r3, #1
    910e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    9112:	54e2      	strb	r2, [r4, r3]
    9114:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    9118:	e7cd      	b.n	90b6 <d_print_conversion+0x82>
    911a:	2600      	movs	r6, #0
    911c:	4619      	mov	r1, r3
    911e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    9122:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    9126:	4620      	mov	r0, r4
    9128:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    912c:	4798      	blx	r3
    912e:	2101      	movs	r1, #1
    9130:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    9134:	4633      	mov	r3, r6
    9136:	440a      	add	r2, r1
    9138:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    913c:	e7a9      	b.n	9092 <d_print_conversion+0x5e>
    913e:	2600      	movs	r6, #0
    9140:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    9144:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    9148:	4620      	mov	r0, r4
    914a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    914e:	4798      	blx	r3
    9150:	2301      	movs	r3, #1
    9152:	2120      	movs	r1, #32
    9154:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    9158:	7021      	strb	r1, [r4, #0]
    915a:	441a      	add	r2, r3
    915c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    9160:	e796      	b.n	9090 <d_print_conversion+0x5c>
    9162:	2500      	movs	r5, #0
    9164:	4619      	mov	r1, r3
    9166:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    916a:	4620      	mov	r0, r4
    916c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    9170:	4798      	blx	r3
    9172:	2101      	movs	r1, #1
    9174:	2220      	movs	r2, #32
    9176:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    917a:	7022      	strb	r2, [r4, #0]
    917c:	440b      	add	r3, r1
    917e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9182:	e79a      	b.n	90ba <d_print_conversion+0x86>

00009184 <d_print_expr_op>:
    9184:	7811      	ldrb	r1, [r2, #0]
    9186:	2932      	cmp	r1, #50	; 0x32
    9188:	d002      	beq.n	9190 <d_print_expr_op+0xc>
    918a:	2111      	movs	r1, #17
    918c:	f7ff b908 	b.w	83a0 <d_print_comp>
    9190:	68d3      	ldr	r3, [r2, #12]
    9192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9196:	e9d3 5701 	ldrd	r5, r7, [r3, #4]
    919a:	b367      	cbz	r7, 91f6 <d_print_expr_op+0x72>
    919c:	442f      	add	r7, r5
    919e:	4604      	mov	r4, r0
    91a0:	f04f 0800 	mov.w	r8, #0
    91a4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    91a8:	3d01      	subs	r5, #1
    91aa:	3f01      	subs	r7, #1
    91ac:	e009      	b.n	91c2 <d_print_expr_op+0x3e>
    91ae:	460b      	mov	r3, r1
    91b0:	42bd      	cmp	r5, r7
    91b2:	f101 0101 	add.w	r1, r1, #1
    91b6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    91ba:	54e6      	strb	r6, [r4, r3]
    91bc:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    91c0:	d019      	beq.n	91f6 <d_print_expr_op+0x72>
    91c2:	29ff      	cmp	r1, #255	; 0xff
    91c4:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    91c8:	d1f1      	bne.n	91ae <d_print_expr_op+0x2a>
    91ca:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    91ce:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    91d2:	4620      	mov	r0, r4
    91d4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    91d8:	4798      	blx	r3
    91da:	2101      	movs	r1, #1
    91dc:	2300      	movs	r3, #0
    91de:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    91e2:	42bd      	cmp	r5, r7
    91e4:	440a      	add	r2, r1
    91e6:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    91ea:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    91ee:	54e6      	strb	r6, [r4, r3]
    91f0:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    91f4:	d1e5      	bne.n	91c2 <d_print_expr_op+0x3e>
    91f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    91fa:	bf00      	nop

000091fc <d_demangle_callback.constprop.0>:
    91fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9200:	b0e5      	sub	sp, #404	; 0x194
    9202:	f890 9000 	ldrb.w	r9, [r0]
    9206:	4604      	mov	r4, r0
    9208:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
    920c:	460d      	mov	r5, r1
    920e:	4616      	mov	r6, r2
    9210:	af00      	add	r7, sp, #0
    9212:	f000 80f2 	beq.w	93fa <d_demangle_callback.constprop.0+0x1fe>
    9216:	2208      	movs	r2, #8
    9218:	4620      	mov	r0, r4
    921a:	49c3      	ldr	r1, [pc, #780]	; (9528 <d_demangle_callback.constprop.0+0x32c>)
    921c:	f004 fa4e 	bl	d6bc <strncmp>
    9220:	b948      	cbnz	r0, 9236 <d_demangle_callback.constprop.0+0x3a>
    9222:	7a23      	ldrb	r3, [r4, #8]
    9224:	2b2e      	cmp	r3, #46	; 0x2e
    9226:	f000 80d7 	beq.w	93d8 <d_demangle_callback.constprop.0+0x1dc>
    922a:	2b5f      	cmp	r3, #95	; 0x5f
    922c:	f000 80d4 	beq.w	93d8 <d_demangle_callback.constprop.0+0x1dc>
    9230:	2b24      	cmp	r3, #36	; 0x24
    9232:	f000 80d1 	beq.w	93d8 <d_demangle_callback.constprop.0+0x1dc>
    9236:	f04f 0a00 	mov.w	sl, #0
    923a:	4620      	mov	r0, r4
    923c:	f004 fa10 	bl	d660 <strlen>
    9240:	2311      	movs	r3, #17
    9242:	2100      	movs	r1, #0
    9244:	0042      	lsls	r2, r0, #1
    9246:	e9c7 3404 	strd	r3, r4, [r7, #16]
    924a:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    924e:	eb04 0300 	add.w	r3, r4, r0
    9252:	e9c7 110c 	strd	r1, r1, [r7, #48]	; 0x30
    9256:	e9c7 110e 	strd	r1, r1, [r7, #56]	; 0x38
    925a:	60bc      	str	r4, [r7, #8]
    925c:	61f9      	str	r1, [r7, #28]
    925e:	62b9      	str	r1, [r7, #40]	; 0x28
    9260:	6439      	str	r1, [r7, #64]	; 0x40
    9262:	62f8      	str	r0, [r7, #44]	; 0x2c
    9264:	60fb      	str	r3, [r7, #12]
    9266:	623a      	str	r2, [r7, #32]
    9268:	f200 80b0 	bhi.w	93cc <d_demangle_callback.constprop.0+0x1d0>
    926c:	46e8      	mov	r8, sp
    926e:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
    9272:	0083      	lsls	r3, r0, #2
    9274:	eba8 00cc 	sub.w	r0, r8, ip, lsl #3
    9278:	4685      	mov	sp, r0
    927a:	46eb      	mov	fp, sp
    927c:	3307      	adds	r3, #7
    927e:	f023 0307 	bic.w	r3, r3, #7
    9282:	ebad 0d03 	sub.w	sp, sp, r3
    9286:	f1ba 0f01 	cmp.w	sl, #1
    928a:	f8c7 d024 	str.w	sp, [r7, #36]	; 0x24
    928e:	f8c7 b018 	str.w	fp, [r7, #24]
    9292:	f000 80b9 	beq.w	9408 <d_demangle_callback.constprop.0+0x20c>
    9296:	f1aa 0302 	sub.w	r3, sl, #2
    929a:	2b01      	cmp	r3, #1
    929c:	f200 80ba 	bhi.w	9414 <d_demangle_callback.constprop.0+0x218>
    92a0:	7ae3      	ldrb	r3, [r4, #11]
    92a2:	f1ba 0f02 	cmp.w	sl, #2
    92a6:	bf0c      	ite	eq
    92a8:	f04f 0944 	moveq.w	r9, #68	; 0x44
    92ac:	f04f 0945 	movne.w	r9, #69	; 0x45
    92b0:	f104 0a0b 	add.w	sl, r4, #11
    92b4:	2b5f      	cmp	r3, #95	; 0x5f
    92b6:	f8c7 a014 	str.w	sl, [r7, #20]
    92ba:	d103      	bne.n	92c4 <d_demangle_callback.constprop.0+0xc8>
    92bc:	7b23      	ldrb	r3, [r4, #12]
    92be:	2b5a      	cmp	r3, #90	; 0x5a
    92c0:	f000 8125 	beq.w	950e <d_demangle_callback.constprop.0+0x312>
    92c4:	2a00      	cmp	r2, #0
    92c6:	f340 80ad 	ble.w	9424 <d_demangle_callback.constprop.0+0x228>
    92ca:	4650      	mov	r0, sl
    92cc:	f004 f9c8 	bl	d660 <strlen>
    92d0:	2300      	movs	r3, #0
    92d2:	2201      	movs	r2, #1
    92d4:	e9cb 3301 	strd	r3, r3, [fp, #4]
    92d8:	61fa      	str	r2, [r7, #28]
    92da:	2800      	cmp	r0, #0
    92dc:	f000 80a2 	beq.w	9424 <d_demangle_callback.constprop.0+0x228>
    92e0:	e9cb a003 	strd	sl, r0, [fp, #12]
    92e4:	f88b 3000 	strb.w	r3, [fp]
    92e8:	4649      	mov	r1, r9
    92ea:	2300      	movs	r3, #0
    92ec:	465a      	mov	r2, fp
    92ee:	f107 0008 	add.w	r0, r7, #8
    92f2:	f7fa fb49 	bl	3988 <d_make_comp>
    92f6:	697c      	ldr	r4, [r7, #20]
    92f8:	4681      	mov	r9, r0
    92fa:	4620      	mov	r0, r4
    92fc:	f004 f9b0 	bl	d660 <strlen>
    9300:	1823      	adds	r3, r4, r0
    9302:	617b      	str	r3, [r7, #20]
    9304:	5c23      	ldrb	r3, [r4, r0]
    9306:	2b00      	cmp	r3, #0
    9308:	f040 8081 	bne.w	940e <d_demangle_callback.constprop.0+0x212>
    930c:	f1b9 0f00 	cmp.w	r9, #0
    9310:	d07d      	beq.n	940e <d_demangle_callback.constprop.0+0x212>
    9312:	f107 0444 	add.w	r4, r7, #68	; 0x44
    9316:	4649      	mov	r1, r9
    9318:	4620      	mov	r0, r4
    931a:	e9c4 3344 	strd	r3, r3, [r4, #272]	; 0x110
    931e:	e9c4 3349 	strd	r3, r3, [r4, #292]	; 0x124
    9322:	e9c4 3346 	strd	r3, r3, [r4, #280]	; 0x118
    9326:	e9c4 334b 	strd	r3, r3, [r4, #300]	; 0x12c
    932a:	e9c4 334d 	strd	r3, r3, [r4, #308]	; 0x134
    932e:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
    9332:	607b      	str	r3, [r7, #4]
    9334:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    9338:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    933c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    9340:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
    9344:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
    9348:	f8c4 610c 	str.w	r6, [r4, #268]	; 0x10c
    934c:	f7fa fbe2 	bl	3b14 <d_count_templates_scopes>
    9350:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    9354:	f8d4 1138 	ldr.w	r1, [r4, #312]	; 0x138
    9358:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    935c:	bfb8      	it	lt
    935e:	687b      	ldrlt	r3, [r7, #4]
    9360:	466e      	mov	r6, sp
    9362:	bfb8      	it	lt
    9364:	f8c4 311c 	strlt.w	r3, [r4, #284]	; 0x11c
    9368:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
    936c:	2901      	cmp	r1, #1
    936e:	fb01 f303 	mul.w	r3, r1, r3
    9372:	bfb8      	it	lt
    9374:	2101      	movlt	r1, #1
    9376:	2b01      	cmp	r3, #1
    9378:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
    937c:	eba6 01c1 	sub.w	r1, r6, r1, lsl #3
    9380:	bfb8      	it	lt
    9382:	2301      	movlt	r3, #1
    9384:	468d      	mov	sp, r1
    9386:	eba1 03c3 	sub.w	r3, r1, r3, lsl #3
    938a:	46ec      	mov	ip, sp
    938c:	2500      	movs	r5, #0
    938e:	469d      	mov	sp, r3
    9390:	464a      	mov	r2, r9
    9392:	2111      	movs	r1, #17
    9394:	4620      	mov	r0, r4
    9396:	f8c4 d13c 	str.w	sp, [r4, #316]	; 0x13c
    939a:	f8c4 c130 	str.w	ip, [r4, #304]	; 0x130
    939e:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
    93a2:	f7fe fffd 	bl	83a0 <d_print_comp>
    93a6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    93aa:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    93ae:	46b5      	mov	sp, r6
    93b0:	4620      	mov	r0, r4
    93b2:	5465      	strb	r5, [r4, r1]
    93b4:	4798      	blx	r3
    93b6:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
    93ba:	46c5      	mov	sp, r8
    93bc:	fab0 f080 	clz	r0, r0
    93c0:	0940      	lsrs	r0, r0, #5
    93c2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
    93c6:	46bd      	mov	sp, r7
    93c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    93cc:	4608      	mov	r0, r1
    93ce:	f507 77ca 	add.w	r7, r7, #404	; 0x194
    93d2:	46bd      	mov	sp, r7
    93d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    93d8:	7a63      	ldrb	r3, [r4, #9]
    93da:	2b44      	cmp	r3, #68	; 0x44
    93dc:	d002      	beq.n	93e4 <d_demangle_callback.constprop.0+0x1e8>
    93de:	2b49      	cmp	r3, #73	; 0x49
    93e0:	f47f af29 	bne.w	9236 <d_demangle_callback.constprop.0+0x3a>
    93e4:	7aa2      	ldrb	r2, [r4, #10]
    93e6:	2a5f      	cmp	r2, #95	; 0x5f
    93e8:	f47f af25 	bne.w	9236 <d_demangle_callback.constprop.0+0x3a>
    93ec:	2b49      	cmp	r3, #73	; 0x49
    93ee:	bf0c      	ite	eq
    93f0:	f04f 0a02 	moveq.w	sl, #2
    93f4:	f04f 0a03 	movne.w	sl, #3
    93f8:	e71f      	b.n	923a <d_demangle_callback.constprop.0+0x3e>
    93fa:	7843      	ldrb	r3, [r0, #1]
    93fc:	2b5a      	cmp	r3, #90	; 0x5a
    93fe:	f47f af0a 	bne.w	9216 <d_demangle_callback.constprop.0+0x1a>
    9402:	f04f 0a01 	mov.w	sl, #1
    9406:	e718      	b.n	923a <d_demangle_callback.constprop.0+0x3e>
    9408:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
    940c:	d00d      	beq.n	942a <d_demangle_callback.constprop.0+0x22e>
    940e:	2000      	movs	r0, #0
    9410:	46c5      	mov	sp, r8
    9412:	e7d6      	b.n	93c2 <d_demangle_callback.constprop.0+0x1c6>
    9414:	f107 0008 	add.w	r0, r7, #8
    9418:	f7fa ff4a 	bl	42b0 <d_type>
    941c:	697b      	ldr	r3, [r7, #20]
    941e:	4681      	mov	r9, r0
    9420:	781b      	ldrb	r3, [r3, #0]
    9422:	e770      	b.n	9306 <d_demangle_callback.constprop.0+0x10a>
    9424:	f04f 0b00 	mov.w	fp, #0
    9428:	e75e      	b.n	92e8 <d_demangle_callback.constprop.0+0xec>
    942a:	7863      	ldrb	r3, [r4, #1]
    942c:	2b5a      	cmp	r3, #90	; 0x5a
    942e:	d1ee      	bne.n	940e <d_demangle_callback.constprop.0+0x212>
    9430:	78a3      	ldrb	r3, [r4, #2]
    9432:	3402      	adds	r4, #2
    9434:	2b47      	cmp	r3, #71	; 0x47
    9436:	617c      	str	r4, [r7, #20]
    9438:	d07f      	beq.n	953a <d_demangle_callback.constprop.0+0x33e>
    943a:	2b54      	cmp	r3, #84	; 0x54
    943c:	d07d      	beq.n	953a <d_demangle_callback.constprop.0+0x33e>
    943e:	4651      	mov	r1, sl
    9440:	f107 0008 	add.w	r0, r7, #8
    9444:	f7fc f802 	bl	544c <d_encoding.part.0>
    9448:	4681      	mov	r9, r0
    944a:	693b      	ldr	r3, [r7, #16]
    944c:	07db      	lsls	r3, r3, #31
    944e:	d571      	bpl.n	9534 <d_demangle_callback.constprop.0+0x338>
    9450:	6979      	ldr	r1, [r7, #20]
    9452:	780b      	ldrb	r3, [r1, #0]
    9454:	2b2e      	cmp	r3, #46	; 0x2e
    9456:	f47f af56 	bne.w	9306 <d_demangle_callback.constprop.0+0x10a>
    945a:	2400      	movs	r4, #0
    945c:	784b      	ldrb	r3, [r1, #1]
    945e:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
    9462:	2a19      	cmp	r2, #25
    9464:	d947      	bls.n	94f6 <d_demangle_callback.constprop.0+0x2fa>
    9466:	2b5f      	cmp	r3, #95	; 0x5f
    9468:	d045      	beq.n	94f6 <d_demangle_callback.constprop.0+0x2fa>
    946a:	3b30      	subs	r3, #48	; 0x30
    946c:	2b09      	cmp	r3, #9
    946e:	d861      	bhi.n	9534 <d_demangle_callback.constprop.0+0x338>
    9470:	460b      	mov	r3, r1
    9472:	7808      	ldrb	r0, [r1, #0]
    9474:	282e      	cmp	r0, #46	; 0x2e
    9476:	d117      	bne.n	94a8 <d_demangle_callback.constprop.0+0x2ac>
    9478:	f893 c001 	ldrb.w	ip, [r3, #1]
    947c:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
    9480:	f1bc 0f09 	cmp.w	ip, #9
    9484:	d810      	bhi.n	94a8 <d_demangle_callback.constprop.0+0x2ac>
    9486:	f893 c002 	ldrb.w	ip, [r3, #2]
    948a:	3302      	adds	r3, #2
    948c:	f1ac 0230 	sub.w	r2, ip, #48	; 0x30
    9490:	2a09      	cmp	r2, #9
    9492:	d806      	bhi.n	94a2 <d_demangle_callback.constprop.0+0x2a6>
    9494:	f813 cf01 	ldrb.w	ip, [r3, #1]!
    9498:	f1ac 0e30 	sub.w	lr, ip, #48	; 0x30
    949c:	f1be 0f09 	cmp.w	lr, #9
    94a0:	d9f8      	bls.n	9494 <d_demangle_callback.constprop.0+0x298>
    94a2:	f1bc 0f2e 	cmp.w	ip, #46	; 0x2e
    94a6:	d0e7      	beq.n	9478 <d_demangle_callback.constprop.0+0x27c>
    94a8:	e9d7 2007 	ldrd	r2, r0, [r7, #28]
    94ac:	4282      	cmp	r2, r0
    94ae:	617b      	str	r3, [r7, #20]
    94b0:	eba3 0c01 	sub.w	ip, r3, r1
    94b4:	da1d      	bge.n	94f2 <d_demangle_callback.constprop.0+0x2f6>
    94b6:	69b8      	ldr	r0, [r7, #24]
    94b8:	eb02 0e82 	add.w	lr, r2, r2, lsl #2
    94bc:	eb00 038e 	add.w	r3, r0, lr, lsl #2
    94c0:	3201      	adds	r2, #1
    94c2:	f1bc 0f00 	cmp.w	ip, #0
    94c6:	e9c3 4401 	strd	r4, r4, [r3, #4]
    94ca:	61fa      	str	r2, [r7, #28]
    94cc:	dd11      	ble.n	94f2 <d_demangle_callback.constprop.0+0x2f6>
    94ce:	e9c3 4401 	strd	r4, r4, [r3, #4]
    94d2:	f800 402e 	strb.w	r4, [r0, lr, lsl #2]
    94d6:	e9c3 1c03 	strd	r1, ip, [r3, #12]
    94da:	464a      	mov	r2, r9
    94dc:	214e      	movs	r1, #78	; 0x4e
    94de:	f107 0008 	add.w	r0, r7, #8
    94e2:	f7fa fa51 	bl	3988 <d_make_comp>
    94e6:	6979      	ldr	r1, [r7, #20]
    94e8:	4681      	mov	r9, r0
    94ea:	780b      	ldrb	r3, [r1, #0]
    94ec:	2b2e      	cmp	r3, #46	; 0x2e
    94ee:	d0b5      	beq.n	945c <d_demangle_callback.constprop.0+0x260>
    94f0:	e709      	b.n	9306 <d_demangle_callback.constprop.0+0x10a>
    94f2:	2300      	movs	r3, #0
    94f4:	e7f1      	b.n	94da <d_demangle_callback.constprop.0+0x2de>
    94f6:	1c8a      	adds	r2, r1, #2
    94f8:	4613      	mov	r3, r2
    94fa:	f812 0b01 	ldrb.w	r0, [r2], #1
    94fe:	f1a0 0c61 	sub.w	ip, r0, #97	; 0x61
    9502:	f1bc 0f19 	cmp.w	ip, #25
    9506:	d9f7      	bls.n	94f8 <d_demangle_callback.constprop.0+0x2fc>
    9508:	285f      	cmp	r0, #95	; 0x5f
    950a:	d0f5      	beq.n	94f8 <d_demangle_callback.constprop.0+0x2fc>
    950c:	e7b2      	b.n	9474 <d_demangle_callback.constprop.0+0x278>
    950e:	7b63      	ldrb	r3, [r4, #13]
    9510:	340d      	adds	r4, #13
    9512:	2b47      	cmp	r3, #71	; 0x47
    9514:	617c      	str	r4, [r7, #20]
    9516:	f107 0008 	add.w	r0, r7, #8
    951a:	d007      	beq.n	952c <d_demangle_callback.constprop.0+0x330>
    951c:	2b54      	cmp	r3, #84	; 0x54
    951e:	d005      	beq.n	952c <d_demangle_callback.constprop.0+0x330>
    9520:	f7fb ff94 	bl	544c <d_encoding.part.0>
    9524:	4683      	mov	fp, r0
    9526:	e6df      	b.n	92e8 <d_demangle_callback.constprop.0+0xec>
    9528:	00019118 	.word	0x00019118
    952c:	f7fc f80c 	bl	5548 <d_special_name>
    9530:	4683      	mov	fp, r0
    9532:	e6d9      	b.n	92e8 <d_demangle_callback.constprop.0+0xec>
    9534:	697b      	ldr	r3, [r7, #20]
    9536:	781b      	ldrb	r3, [r3, #0]
    9538:	e6e5      	b.n	9306 <d_demangle_callback.constprop.0+0x10a>
    953a:	f107 0008 	add.w	r0, r7, #8
    953e:	f7fc f803 	bl	5548 <d_special_name>
    9542:	4681      	mov	r9, r0
    9544:	e781      	b.n	944a <d_demangle_callback.constprop.0+0x24e>
    9546:	bf00      	nop

00009548 <d_print_subexpr>:
    9548:	b570      	push	{r4, r5, r6, lr}
    954a:	7813      	ldrb	r3, [r2, #0]
    954c:	4615      	mov	r5, r2
    954e:	2b01      	cmp	r3, #1
    9550:	4604      	mov	r4, r0
    9552:	b082      	sub	sp, #8
    9554:	d903      	bls.n	955e <d_print_subexpr+0x16>
    9556:	2b31      	cmp	r3, #49	; 0x31
    9558:	d001      	beq.n	955e <d_print_subexpr+0x16>
    955a:	2b06      	cmp	r3, #6
    955c:	d138      	bne.n	95d0 <d_print_subexpr+0x88>
    955e:	2601      	movs	r6, #1
    9560:	686b      	ldr	r3, [r5, #4]
    9562:	2b01      	cmp	r3, #1
    9564:	dc22      	bgt.n	95ac <d_print_subexpr+0x64>
    9566:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    956a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    956e:	dc1d      	bgt.n	95ac <d_print_subexpr+0x64>
    9570:	3301      	adds	r3, #1
    9572:	606b      	str	r3, [r5, #4]
    9574:	3201      	adds	r2, #1
    9576:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
    957a:	2111      	movs	r1, #17
    957c:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
    9580:	4620      	mov	r0, r4
    9582:	462a      	mov	r2, r5
    9584:	f8c4 d12c 	str.w	sp, [r4, #300]	; 0x12c
    9588:	e9cd 5300 	strd	r5, r3, [sp]
    958c:	f7fc fe50 	bl	6230 <d_print_comp_inner>
    9590:	686a      	ldr	r2, [r5, #4]
    9592:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
    9596:	9901      	ldr	r1, [sp, #4]
    9598:	3a01      	subs	r2, #1
    959a:	3b01      	subs	r3, #1
    959c:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
    95a0:	606a      	str	r2, [r5, #4]
    95a2:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
    95a6:	b136      	cbz	r6, 95b6 <d_print_subexpr+0x6e>
    95a8:	b002      	add	sp, #8
    95aa:	bd70      	pop	{r4, r5, r6, pc}
    95ac:	2301      	movs	r3, #1
    95ae:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    95b2:	2e00      	cmp	r6, #0
    95b4:	d1f8      	bne.n	95a8 <d_print_subexpr+0x60>
    95b6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    95ba:	29ff      	cmp	r1, #255	; 0xff
    95bc:	d015      	beq.n	95ea <d_print_subexpr+0xa2>
    95be:	1c4a      	adds	r2, r1, #1
    95c0:	2329      	movs	r3, #41	; 0x29
    95c2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    95c6:	5463      	strb	r3, [r4, r1]
    95c8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    95cc:	b002      	add	sp, #8
    95ce:	bd70      	pop	{r4, r5, r6, pc}
    95d0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    95d4:	29ff      	cmp	r1, #255	; 0xff
    95d6:	d016      	beq.n	9606 <d_print_subexpr+0xbe>
    95d8:	1c4a      	adds	r2, r1, #1
    95da:	2328      	movs	r3, #40	; 0x28
    95dc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    95e0:	2600      	movs	r6, #0
    95e2:	5463      	strb	r3, [r4, r1]
    95e4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    95e8:	e7ba      	b.n	9560 <d_print_subexpr+0x18>
    95ea:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    95ee:	4620      	mov	r0, r4
    95f0:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    95f4:	4798      	blx	r3
    95f6:	2201      	movs	r2, #1
    95f8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    95fc:	4631      	mov	r1, r6
    95fe:	4413      	add	r3, r2
    9600:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9604:	e7dc      	b.n	95c0 <d_print_subexpr+0x78>
    9606:	2600      	movs	r6, #0
    9608:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    960c:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    9610:	4798      	blx	r3
    9612:	2201      	movs	r2, #1
    9614:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    9618:	4631      	mov	r1, r6
    961a:	4413      	add	r3, r2
    961c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9620:	e7db      	b.n	95da <d_print_subexpr+0x92>
    9622:	bf00      	nop

00009624 <d_maybe_print_fold_expression>:
    9624:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9628:	68d3      	ldr	r3, [r2, #12]
    962a:	68db      	ldr	r3, [r3, #12]
    962c:	681b      	ldr	r3, [r3, #0]
    962e:	7819      	ldrb	r1, [r3, #0]
    9630:	2966      	cmp	r1, #102	; 0x66
    9632:	d178      	bne.n	9726 <d_maybe_print_fold_expression+0x102>
    9634:	6912      	ldr	r2, [r2, #16]
    9636:	f8d0 7124 	ldr.w	r7, [r0, #292]	; 0x124
    963a:	e9d2 8a03 	ldrd	r8, sl, [r2, #12]
    963e:	f89a 2000 	ldrb.w	r2, [sl]
    9642:	4604      	mov	r4, r0
    9644:	2a3c      	cmp	r2, #60	; 0x3c
    9646:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    964a:	bf08      	it	eq
    964c:	e9da a903 	ldrdeq	sl, r9, [sl, #12]
    9650:	f8c0 2124 	str.w	r2, [r0, #292]	; 0x124
    9654:	785b      	ldrb	r3, [r3, #1]
    9656:	bf18      	it	ne
    9658:	f04f 0900 	movne.w	r9, #0
    965c:	2b6c      	cmp	r3, #108	; 0x6c
    965e:	f000 80a2 	beq.w	97a6 <d_maybe_print_fold_expression+0x182>
    9662:	d863      	bhi.n	972c <d_maybe_print_fold_expression+0x108>
    9664:	2b4c      	cmp	r3, #76	; 0x4c
    9666:	d001      	beq.n	966c <d_maybe_print_fold_expression+0x48>
    9668:	2b52      	cmp	r3, #82	; 0x52
    966a:	d157      	bne.n	971c <d_maybe_print_fold_expression+0xf8>
    966c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    9670:	29ff      	cmp	r1, #255	; 0xff
    9672:	f000 80eb 	beq.w	984c <d_maybe_print_fold_expression+0x228>
    9676:	1c4b      	adds	r3, r1, #1
    9678:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    967c:	2328      	movs	r3, #40	; 0x28
    967e:	4652      	mov	r2, sl
    9680:	5463      	strb	r3, [r4, r1]
    9682:	4620      	mov	r0, r4
    9684:	2111      	movs	r1, #17
    9686:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    968a:	4d78      	ldr	r5, [pc, #480]	; (986c <d_maybe_print_fold_expression+0x248>)
    968c:	f7ff ff5c 	bl	9548 <d_print_subexpr>
    9690:	2111      	movs	r1, #17
    9692:	4642      	mov	r2, r8
    9694:	4620      	mov	r0, r4
    9696:	f7ff fd75 	bl	9184 <d_print_expr_op>
    969a:	262e      	movs	r6, #46	; 0x2e
    969c:	f04f 0a00 	mov.w	sl, #0
    96a0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    96a4:	f105 0b02 	add.w	fp, r5, #2
    96a8:	e00b      	b.n	96c2 <d_maybe_print_fold_expression+0x9e>
    96aa:	460b      	mov	r3, r1
    96ac:	45ab      	cmp	fp, r5
    96ae:	f101 0101 	add.w	r1, r1, #1
    96b2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    96b6:	54e6      	strb	r6, [r4, r3]
    96b8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    96bc:	d019      	beq.n	96f2 <d_maybe_print_fold_expression+0xce>
    96be:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    96c2:	29ff      	cmp	r1, #255	; 0xff
    96c4:	d1f1      	bne.n	96aa <d_maybe_print_fold_expression+0x86>
    96c6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    96ca:	4620      	mov	r0, r4
    96cc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    96d0:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
    96d4:	4798      	blx	r3
    96d6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    96da:	2101      	movs	r1, #1
    96dc:	3301      	adds	r3, #1
    96de:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    96e2:	2300      	movs	r3, #0
    96e4:	45ab      	cmp	fp, r5
    96e6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    96ea:	54e6      	strb	r6, [r4, r3]
    96ec:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    96f0:	d1e5      	bne.n	96be <d_maybe_print_fold_expression+0x9a>
    96f2:	4642      	mov	r2, r8
    96f4:	2111      	movs	r1, #17
    96f6:	4620      	mov	r0, r4
    96f8:	f7ff fd44 	bl	9184 <d_print_expr_op>
    96fc:	464a      	mov	r2, r9
    96fe:	2111      	movs	r1, #17
    9700:	4620      	mov	r0, r4
    9702:	f7ff ff21 	bl	9548 <d_print_subexpr>
    9706:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    970a:	29ff      	cmp	r1, #255	; 0xff
    970c:	d07f      	beq.n	980e <d_maybe_print_fold_expression+0x1ea>
    970e:	1c4a      	adds	r2, r1, #1
    9710:	2329      	movs	r3, #41	; 0x29
    9712:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    9716:	5463      	strb	r3, [r4, r1]
    9718:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    971c:	2001      	movs	r0, #1
    971e:	f8c4 7124 	str.w	r7, [r4, #292]	; 0x124
    9722:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9726:	2000      	movs	r0, #0
    9728:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    972c:	2b72      	cmp	r3, #114	; 0x72
    972e:	d1f5      	bne.n	971c <d_maybe_print_fold_expression+0xf8>
    9730:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    9734:	29ff      	cmp	r1, #255	; 0xff
    9736:	d07b      	beq.n	9830 <d_maybe_print_fold_expression+0x20c>
    9738:	1c4b      	adds	r3, r1, #1
    973a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    973e:	2328      	movs	r3, #40	; 0x28
    9740:	4652      	mov	r2, sl
    9742:	5463      	strb	r3, [r4, r1]
    9744:	4620      	mov	r0, r4
    9746:	2111      	movs	r1, #17
    9748:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    974c:	4d48      	ldr	r5, [pc, #288]	; (9870 <d_maybe_print_fold_expression+0x24c>)
    974e:	f7ff fefb 	bl	9548 <d_print_subexpr>
    9752:	4642      	mov	r2, r8
    9754:	2111      	movs	r1, #17
    9756:	4620      	mov	r0, r4
    9758:	f7ff fd14 	bl	9184 <d_print_expr_op>
    975c:	262e      	movs	r6, #46	; 0x2e
    975e:	f04f 0900 	mov.w	r9, #0
    9762:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    9766:	f105 0803 	add.w	r8, r5, #3
    976a:	e00a      	b.n	9782 <d_maybe_print_fold_expression+0x15e>
    976c:	460b      	mov	r3, r1
    976e:	3101      	adds	r1, #1
    9770:	4545      	cmp	r5, r8
    9772:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    9776:	54e6      	strb	r6, [r4, r3]
    9778:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    977c:	d0ce      	beq.n	971c <d_maybe_print_fold_expression+0xf8>
    977e:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    9782:	29ff      	cmp	r1, #255	; 0xff
    9784:	d1f2      	bne.n	976c <d_maybe_print_fold_expression+0x148>
    9786:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    978a:	4620      	mov	r0, r4
    978c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    9790:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    9794:	4798      	blx	r3
    9796:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    979a:	2101      	movs	r1, #1
    979c:	3301      	adds	r3, #1
    979e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    97a2:	2300      	movs	r3, #0
    97a4:	e7e4      	b.n	9770 <d_maybe_print_fold_expression+0x14c>
    97a6:	4d33      	ldr	r5, [pc, #204]	; (9874 <d_maybe_print_fold_expression+0x250>)
    97a8:	2628      	movs	r6, #40	; 0x28
    97aa:	f04f 0900 	mov.w	r9, #0
    97ae:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    97b2:	f105 0b03 	add.w	fp, r5, #3
    97b6:	e00b      	b.n	97d0 <d_maybe_print_fold_expression+0x1ac>
    97b8:	460b      	mov	r3, r1
    97ba:	45ab      	cmp	fp, r5
    97bc:	f101 0101 	add.w	r1, r1, #1
    97c0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    97c4:	54e6      	strb	r6, [r4, r3]
    97c6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    97ca:	d019      	beq.n	9800 <d_maybe_print_fold_expression+0x1dc>
    97cc:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    97d0:	29ff      	cmp	r1, #255	; 0xff
    97d2:	d1f1      	bne.n	97b8 <d_maybe_print_fold_expression+0x194>
    97d4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    97d8:	4620      	mov	r0, r4
    97da:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    97de:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    97e2:	4798      	blx	r3
    97e4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    97e8:	2101      	movs	r1, #1
    97ea:	3301      	adds	r3, #1
    97ec:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    97f0:	2300      	movs	r3, #0
    97f2:	45ab      	cmp	fp, r5
    97f4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    97f8:	54e6      	strb	r6, [r4, r3]
    97fa:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    97fe:	d1e5      	bne.n	97cc <d_maybe_print_fold_expression+0x1a8>
    9800:	4642      	mov	r2, r8
    9802:	2111      	movs	r1, #17
    9804:	4620      	mov	r0, r4
    9806:	f7ff fcbd 	bl	9184 <d_print_expr_op>
    980a:	4652      	mov	r2, sl
    980c:	e777      	b.n	96fe <d_maybe_print_fold_expression+0xda>
    980e:	2500      	movs	r5, #0
    9810:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    9814:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    9818:	4620      	mov	r0, r4
    981a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    981e:	4798      	blx	r3
    9820:	2201      	movs	r2, #1
    9822:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    9826:	4629      	mov	r1, r5
    9828:	4413      	add	r3, r2
    982a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    982e:	e76f      	b.n	9710 <d_maybe_print_fold_expression+0xec>
    9830:	2500      	movs	r5, #0
    9832:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    9836:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    983a:	4798      	blx	r3
    983c:	2301      	movs	r3, #1
    983e:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    9842:	4629      	mov	r1, r5
    9844:	441a      	add	r2, r3
    9846:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    984a:	e776      	b.n	973a <d_maybe_print_fold_expression+0x116>
    984c:	2500      	movs	r5, #0
    984e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    9852:	4620      	mov	r0, r4
    9854:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    9858:	4798      	blx	r3
    985a:	2301      	movs	r3, #1
    985c:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    9860:	4629      	mov	r1, r5
    9862:	441a      	add	r2, r3
    9864:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    9868:	e706      	b.n	9678 <d_maybe_print_fold_expression+0x54>
    986a:	bf00      	nop
    986c:	0001938c 	.word	0x0001938c
    9870:	00019488 	.word	0x00019488
    9874:	00019480 	.word	0x00019480

00009878 <__cxa_demangle>:
    9878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    987c:	461e      	mov	r6, r3
    987e:	b084      	sub	sp, #16
    9880:	2800      	cmp	r0, #0
    9882:	d040      	beq.n	9906 <__cxa_demangle+0x8e>
    9884:	460c      	mov	r4, r1
    9886:	4615      	mov	r5, r2
    9888:	b109      	cbz	r1, 988e <__cxa_demangle+0x16>
    988a:	2a00      	cmp	r2, #0
    988c:	d03b      	beq.n	9906 <__cxa_demangle+0x8e>
    988e:	2300      	movs	r3, #0
    9890:	466a      	mov	r2, sp
    9892:	4929      	ldr	r1, [pc, #164]	; (9938 <__cxa_demangle+0xc0>)
    9894:	e9cd 3300 	strd	r3, r3, [sp]
    9898:	e9cd 3302 	strd	r3, r3, [sp, #8]
    989c:	f7ff fcae 	bl	91fc <d_demangle_callback.constprop.0>
    98a0:	2800      	cmp	r0, #0
    98a2:	d039      	beq.n	9918 <__cxa_demangle+0xa0>
    98a4:	9b03      	ldr	r3, [sp, #12]
    98a6:	9f00      	ldr	r7, [sp, #0]
    98a8:	b9d3      	cbnz	r3, 98e0 <__cxa_demangle+0x68>
    98aa:	f8dd 8008 	ldr.w	r8, [sp, #8]
    98ae:	2f00      	cmp	r7, #0
    98b0:	d038      	beq.n	9924 <__cxa_demangle+0xac>
    98b2:	b32c      	cbz	r4, 9900 <__cxa_demangle+0x88>
    98b4:	4638      	mov	r0, r7
    98b6:	f003 fed3 	bl	d660 <strlen>
    98ba:	682b      	ldr	r3, [r5, #0]
    98bc:	4298      	cmp	r0, r3
    98be:	d219      	bcs.n	98f4 <__cxa_demangle+0x7c>
    98c0:	4639      	mov	r1, r7
    98c2:	1c42      	adds	r2, r0, #1
    98c4:	4620      	mov	r0, r4
    98c6:	f003 f805 	bl	c8d4 <memcpy>
    98ca:	4638      	mov	r0, r7
    98cc:	f002 fcd2 	bl	c274 <free>
    98d0:	4627      	mov	r7, r4
    98d2:	b10e      	cbz	r6, 98d8 <__cxa_demangle+0x60>
    98d4:	2300      	movs	r3, #0
    98d6:	6033      	str	r3, [r6, #0]
    98d8:	4638      	mov	r0, r7
    98da:	b004      	add	sp, #16
    98dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    98e0:	f04f 0801 	mov.w	r8, #1
    98e4:	2f00      	cmp	r7, #0
    98e6:	d1e4      	bne.n	98b2 <__cxa_demangle+0x3a>
    98e8:	b1d6      	cbz	r6, 9920 <__cxa_demangle+0xa8>
    98ea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    98ee:	2700      	movs	r7, #0
    98f0:	6033      	str	r3, [r6, #0]
    98f2:	e7f1      	b.n	98d8 <__cxa_demangle+0x60>
    98f4:	4620      	mov	r0, r4
    98f6:	f002 fcbd 	bl	c274 <free>
    98fa:	f8c5 8000 	str.w	r8, [r5]
    98fe:	e7e8      	b.n	98d2 <__cxa_demangle+0x5a>
    9900:	2d00      	cmp	r5, #0
    9902:	d1fa      	bne.n	98fa <__cxa_demangle+0x82>
    9904:	e7e5      	b.n	98d2 <__cxa_demangle+0x5a>
    9906:	b15e      	cbz	r6, 9920 <__cxa_demangle+0xa8>
    9908:	2700      	movs	r7, #0
    990a:	f06f 0302 	mvn.w	r3, #2
    990e:	4638      	mov	r0, r7
    9910:	6033      	str	r3, [r6, #0]
    9912:	b004      	add	sp, #16
    9914:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9918:	9800      	ldr	r0, [sp, #0]
    991a:	f002 fcab 	bl	c274 <free>
    991e:	b936      	cbnz	r6, 992e <__cxa_demangle+0xb6>
    9920:	2700      	movs	r7, #0
    9922:	e7d9      	b.n	98d8 <__cxa_demangle+0x60>
    9924:	2e00      	cmp	r6, #0
    9926:	d0fb      	beq.n	9920 <__cxa_demangle+0xa8>
    9928:	f1b8 0f01 	cmp.w	r8, #1
    992c:	d0dd      	beq.n	98ea <__cxa_demangle+0x72>
    992e:	f06f 0301 	mvn.w	r3, #1
    9932:	2700      	movs	r7, #0
    9934:	6033      	str	r3, [r6, #0]
    9936:	e7cf      	b.n	98d8 <__cxa_demangle+0x60>
    9938:	00003c59 	.word	0x00003c59

0000993c <__gcclibcxx_demangle_callback>:
    993c:	b160      	cbz	r0, 9958 <__gcclibcxx_demangle_callback+0x1c>
    993e:	b508      	push	{r3, lr}
    9940:	b139      	cbz	r1, 9952 <__gcclibcxx_demangle_callback+0x16>
    9942:	f7ff fc5b 	bl	91fc <d_demangle_callback.constprop.0>
    9946:	2800      	cmp	r0, #0
    9948:	bf14      	ite	ne
    994a:	2000      	movne	r0, #0
    994c:	f06f 0001 	mvneq.w	r0, #1
    9950:	bd08      	pop	{r3, pc}
    9952:	f06f 0002 	mvn.w	r0, #2
    9956:	bd08      	pop	{r3, pc}
    9958:	f06f 0002 	mvn.w	r0, #2
    995c:	4770      	bx	lr
    995e:	bf00      	nop

00009960 <__cxa_end_cleanup>:
    9960:	b41e      	push	{r1, r2, r3, r4}
    9962:	f000 f88f 	bl	9a84 <__gnu_end_cleanup>
    9966:	bc1e      	pop	{r1, r2, r3, r4}
    9968:	f001 ff2c 	bl	b7c4 <_Unwind_Resume>

0000996c <__cxa_type_match>:
    996c:	b5f0      	push	{r4, r5, r6, r7, lr}
    996e:	461c      	mov	r4, r3
    9970:	7803      	ldrb	r3, [r0, #0]
    9972:	460d      	mov	r5, r1
    9974:	2b47      	cmp	r3, #71	; 0x47
    9976:	b083      	sub	sp, #12
    9978:	d019      	beq.n	99ae <__cxa_type_match+0x42>
    997a:	2300      	movs	r3, #0
    997c:	4e26      	ldr	r6, [pc, #152]	; (9a18 <__cxa_type_match+0xac>)
    997e:	9301      	str	r3, [sp, #4]
    9980:	6833      	ldr	r3, [r6, #0]
    9982:	4630      	mov	r0, r6
    9984:	689b      	ldr	r3, [r3, #8]
    9986:	4798      	blx	r3
    9988:	b178      	cbz	r0, 99aa <__cxa_type_match+0x3e>
    998a:	2702      	movs	r7, #2
    998c:	9b01      	ldr	r3, [sp, #4]
    998e:	681b      	ldr	r3, [r3, #0]
    9990:	9301      	str	r3, [sp, #4]
    9992:	682b      	ldr	r3, [r5, #0]
    9994:	4628      	mov	r0, r5
    9996:	4631      	mov	r1, r6
    9998:	691d      	ldr	r5, [r3, #16]
    999a:	aa01      	add	r2, sp, #4
    999c:	2301      	movs	r3, #1
    999e:	47a8      	blx	r5
    99a0:	bb18      	cbnz	r0, 99ea <__cxa_type_match+0x7e>
    99a2:	4607      	mov	r7, r0
    99a4:	4638      	mov	r0, r7
    99a6:	b003      	add	sp, #12
    99a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    99aa:	2701      	movs	r7, #1
    99ac:	e7f1      	b.n	9992 <__cxa_type_match+0x26>
    99ae:	7843      	ldrb	r3, [r0, #1]
    99b0:	2b4e      	cmp	r3, #78	; 0x4e
    99b2:	d1e2      	bne.n	997a <__cxa_type_match+0xe>
    99b4:	7883      	ldrb	r3, [r0, #2]
    99b6:	2b55      	cmp	r3, #85	; 0x55
    99b8:	d1df      	bne.n	997a <__cxa_type_match+0xe>
    99ba:	78c3      	ldrb	r3, [r0, #3]
    99bc:	2b43      	cmp	r3, #67	; 0x43
    99be:	d1dc      	bne.n	997a <__cxa_type_match+0xe>
    99c0:	7903      	ldrb	r3, [r0, #4]
    99c2:	2b46      	cmp	r3, #70	; 0x46
    99c4:	d01b      	beq.n	99fe <__cxa_type_match+0x92>
    99c6:	7903      	ldrb	r3, [r0, #4]
    99c8:	2b43      	cmp	r3, #67	; 0x43
    99ca:	d1d6      	bne.n	997a <__cxa_type_match+0xe>
    99cc:	7943      	ldrb	r3, [r0, #5]
    99ce:	2b2b      	cmp	r3, #43	; 0x2b
    99d0:	d1d3      	bne.n	997a <__cxa_type_match+0xe>
    99d2:	7983      	ldrb	r3, [r0, #6]
    99d4:	2b2b      	cmp	r3, #43	; 0x2b
    99d6:	d1d0      	bne.n	997a <__cxa_type_match+0xe>
    99d8:	79c3      	ldrb	r3, [r0, #7]
    99da:	2b01      	cmp	r3, #1
    99dc:	d8cd      	bhi.n	997a <__cxa_type_match+0xe>
    99de:	d009      	beq.n	99f4 <__cxa_type_match+0x88>
    99e0:	f850 6c20 	ldr.w	r6, [r0, #-32]
    99e4:	3058      	adds	r0, #88	; 0x58
    99e6:	9001      	str	r0, [sp, #4]
    99e8:	e7ca      	b.n	9980 <__cxa_type_match+0x14>
    99ea:	4638      	mov	r0, r7
    99ec:	9b01      	ldr	r3, [sp, #4]
    99ee:	6023      	str	r3, [r4, #0]
    99f0:	b003      	add	sp, #12
    99f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    99f4:	f850 0c20 	ldr.w	r0, [r0, #-32]
    99f8:	f850 6c78 	ldr.w	r6, [r0, #-120]
    99fc:	e7f3      	b.n	99e6 <__cxa_type_match+0x7a>
    99fe:	7943      	ldrb	r3, [r0, #5]
    9a00:	2b4f      	cmp	r3, #79	; 0x4f
    9a02:	d1e0      	bne.n	99c6 <__cxa_type_match+0x5a>
    9a04:	7983      	ldrb	r3, [r0, #6]
    9a06:	2b52      	cmp	r3, #82	; 0x52
    9a08:	d1dd      	bne.n	99c6 <__cxa_type_match+0x5a>
    9a0a:	79c3      	ldrb	r3, [r0, #7]
    9a0c:	2b00      	cmp	r3, #0
    9a0e:	d1da      	bne.n	99c6 <__cxa_type_match+0x5a>
    9a10:	4e02      	ldr	r6, [pc, #8]	; (9a1c <__cxa_type_match+0xb0>)
    9a12:	9301      	str	r3, [sp, #4]
    9a14:	e7b4      	b.n	9980 <__cxa_type_match+0x14>
    9a16:	bf00      	nop
    9a18:	00018f6c 	.word	0x00018f6c
    9a1c:	00018f64 	.word	0x00018f64

00009a20 <__cxa_begin_cleanup>:
    9a20:	b510      	push	{r4, lr}
    9a22:	4604      	mov	r4, r0
    9a24:	f000 f9a0 	bl	9d68 <__cxa_get_globals>
    9a28:	4622      	mov	r2, r4
    9a2a:	f812 3920 	ldrb.w	r3, [r2], #-32
    9a2e:	2b47      	cmp	r3, #71	; 0x47
    9a30:	d004      	beq.n	9a3c <__cxa_begin_cleanup+0x1c>
    9a32:	6883      	ldr	r3, [r0, #8]
    9a34:	bb23      	cbnz	r3, 9a80 <__cxa_begin_cleanup+0x60>
    9a36:	6082      	str	r2, [r0, #8]
    9a38:	2001      	movs	r0, #1
    9a3a:	bd10      	pop	{r4, pc}
    9a3c:	7863      	ldrb	r3, [r4, #1]
    9a3e:	2b4e      	cmp	r3, #78	; 0x4e
    9a40:	d1f7      	bne.n	9a32 <__cxa_begin_cleanup+0x12>
    9a42:	78a3      	ldrb	r3, [r4, #2]
    9a44:	2b55      	cmp	r3, #85	; 0x55
    9a46:	d1f4      	bne.n	9a32 <__cxa_begin_cleanup+0x12>
    9a48:	78e3      	ldrb	r3, [r4, #3]
    9a4a:	2b43      	cmp	r3, #67	; 0x43
    9a4c:	d1f1      	bne.n	9a32 <__cxa_begin_cleanup+0x12>
    9a4e:	7923      	ldrb	r3, [r4, #4]
    9a50:	2b43      	cmp	r3, #67	; 0x43
    9a52:	d1ee      	bne.n	9a32 <__cxa_begin_cleanup+0x12>
    9a54:	7963      	ldrb	r3, [r4, #5]
    9a56:	2b2b      	cmp	r3, #43	; 0x2b
    9a58:	d1eb      	bne.n	9a32 <__cxa_begin_cleanup+0x12>
    9a5a:	79a3      	ldrb	r3, [r4, #6]
    9a5c:	2b2b      	cmp	r3, #43	; 0x2b
    9a5e:	d1e8      	bne.n	9a32 <__cxa_begin_cleanup+0x12>
    9a60:	79e3      	ldrb	r3, [r4, #7]
    9a62:	2b01      	cmp	r3, #1
    9a64:	d8e5      	bhi.n	9a32 <__cxa_begin_cleanup+0x12>
    9a66:	f854 3c04 	ldr.w	r3, [r4, #-4]
    9a6a:	3301      	adds	r3, #1
    9a6c:	2b01      	cmp	r3, #1
    9a6e:	f844 3c04 	str.w	r3, [r4, #-4]
    9a72:	d1e1      	bne.n	9a38 <__cxa_begin_cleanup+0x18>
    9a74:	6883      	ldr	r3, [r0, #8]
    9a76:	f844 3c08 	str.w	r3, [r4, #-8]
    9a7a:	6082      	str	r2, [r0, #8]
    9a7c:	2001      	movs	r0, #1
    9a7e:	bd10      	pop	{r4, pc}
    9a80:	f7f9 fdde 	bl	3640 <std::terminate()>

00009a84 <__gnu_end_cleanup>:
    9a84:	b508      	push	{r3, lr}
    9a86:	f000 f96f 	bl	9d68 <__cxa_get_globals>
    9a8a:	6883      	ldr	r3, [r0, #8]
    9a8c:	b383      	cbz	r3, 9af0 <__gnu_end_cleanup+0x6c>
    9a8e:	f893 2020 	ldrb.w	r2, [r3, #32]
    9a92:	2a47      	cmp	r2, #71	; 0x47
    9a94:	d004      	beq.n	9aa0 <__gnu_end_cleanup+0x1c>
    9a96:	2200      	movs	r2, #0
    9a98:	6082      	str	r2, [r0, #8]
    9a9a:	f103 0020 	add.w	r0, r3, #32
    9a9e:	bd08      	pop	{r3, pc}
    9aa0:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
    9aa4:	2a4e      	cmp	r2, #78	; 0x4e
    9aa6:	d1f6      	bne.n	9a96 <__gnu_end_cleanup+0x12>
    9aa8:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
    9aac:	2a55      	cmp	r2, #85	; 0x55
    9aae:	d1f2      	bne.n	9a96 <__gnu_end_cleanup+0x12>
    9ab0:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
    9ab4:	2a43      	cmp	r2, #67	; 0x43
    9ab6:	d1ee      	bne.n	9a96 <__gnu_end_cleanup+0x12>
    9ab8:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
    9abc:	2a43      	cmp	r2, #67	; 0x43
    9abe:	d1ea      	bne.n	9a96 <__gnu_end_cleanup+0x12>
    9ac0:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
    9ac4:	2a2b      	cmp	r2, #43	; 0x2b
    9ac6:	d1e6      	bne.n	9a96 <__gnu_end_cleanup+0x12>
    9ac8:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
    9acc:	2a2b      	cmp	r2, #43	; 0x2b
    9ace:	d1e2      	bne.n	9a96 <__gnu_end_cleanup+0x12>
    9ad0:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
    9ad4:	2a01      	cmp	r2, #1
    9ad6:	d8de      	bhi.n	9a96 <__gnu_end_cleanup+0x12>
    9ad8:	69da      	ldr	r2, [r3, #28]
    9ada:	3a01      	subs	r2, #1
    9adc:	61da      	str	r2, [r3, #28]
    9ade:	2a00      	cmp	r2, #0
    9ae0:	d1db      	bne.n	9a9a <__gnu_end_cleanup+0x16>
    9ae2:	2200      	movs	r2, #0
    9ae4:	6999      	ldr	r1, [r3, #24]
    9ae6:	6081      	str	r1, [r0, #8]
    9ae8:	619a      	str	r2, [r3, #24]
    9aea:	f103 0020 	add.w	r0, r3, #32
    9aee:	bd08      	pop	{r3, pc}
    9af0:	f7f9 fda6 	bl	3640 <std::terminate()>

00009af4 <__cxxabiv1::__is_gxx_exception_class(char*)>:
    9af4:	7803      	ldrb	r3, [r0, #0]
    9af6:	2b47      	cmp	r3, #71	; 0x47
    9af8:	d001      	beq.n	9afe <__cxxabiv1::__is_gxx_exception_class(char*)+0xa>
    9afa:	2000      	movs	r0, #0
    9afc:	4770      	bx	lr
    9afe:	7843      	ldrb	r3, [r0, #1]
    9b00:	2b4e      	cmp	r3, #78	; 0x4e
    9b02:	d1fa      	bne.n	9afa <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9b04:	7883      	ldrb	r3, [r0, #2]
    9b06:	2b55      	cmp	r3, #85	; 0x55
    9b08:	d1f7      	bne.n	9afa <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9b0a:	78c3      	ldrb	r3, [r0, #3]
    9b0c:	2b43      	cmp	r3, #67	; 0x43
    9b0e:	d1f4      	bne.n	9afa <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9b10:	7903      	ldrb	r3, [r0, #4]
    9b12:	2b43      	cmp	r3, #67	; 0x43
    9b14:	d1f1      	bne.n	9afa <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9b16:	7943      	ldrb	r3, [r0, #5]
    9b18:	2b2b      	cmp	r3, #43	; 0x2b
    9b1a:	d1ee      	bne.n	9afa <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9b1c:	7983      	ldrb	r3, [r0, #6]
    9b1e:	2b2b      	cmp	r3, #43	; 0x2b
    9b20:	d1eb      	bne.n	9afa <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9b22:	79c0      	ldrb	r0, [r0, #7]
    9b24:	2801      	cmp	r0, #1
    9b26:	bf8c      	ite	hi
    9b28:	2000      	movhi	r0, #0
    9b2a:	2001      	movls	r0, #1
    9b2c:	4770      	bx	lr
    9b2e:	bf00      	nop

00009b30 <__cxa_call_terminate>:
    9b30:	b510      	push	{r4, lr}
    9b32:	b130      	cbz	r0, 9b42 <__cxa_call_terminate+0x12>
    9b34:	4604      	mov	r4, r0
    9b36:	f000 f881 	bl	9c3c <__cxa_begin_catch>
    9b3a:	4620      	mov	r0, r4
    9b3c:	f7ff ffda 	bl	9af4 <__cxxabiv1::__is_gxx_exception_class(char*)>
    9b40:	b908      	cbnz	r0, 9b46 <__cxa_call_terminate+0x16>
    9b42:	f7f9 fd7d 	bl	3640 <std::terminate()>
    9b46:	f854 0c14 	ldr.w	r0, [r4, #-20]
    9b4a:	f7f9 fd65 	bl	3618 <__cxxabiv1::__terminate(void (*)())>
    9b4e:	bf00      	nop

00009b50 <__cxa_call_unexpected>:
    9b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9b54:	b085      	sub	sp, #20
    9b56:	4602      	mov	r2, r0
    9b58:	f7ff ffcc 	bl	9af4 <__cxxabiv1::__is_gxx_exception_class(char*)>
    9b5c:	b140      	cbz	r0, 9b70 <__cxa_call_unexpected+0x20>
    9b5e:	e952 7406 	ldrd	r7, r4, [r2, #-24]
    9b62:	2600      	movs	r6, #0
    9b64:	f8d2 a028 	ldr.w	sl, [r2, #40]	; 0x28
    9b68:	f8d2 8030 	ldr.w	r8, [r2, #48]	; 0x30
    9b6c:	6b55      	ldr	r5, [r2, #52]	; 0x34
    9b6e:	e005      	b.n	9b7c <__cxa_call_unexpected+0x2c>
    9b70:	4604      	mov	r4, r0
    9b72:	2601      	movs	r6, #1
    9b74:	4607      	mov	r7, r0
    9b76:	4605      	mov	r5, r0
    9b78:	4680      	mov	r8, r0
    9b7a:	4682      	mov	sl, r0
    9b7c:	4610      	mov	r0, r2
    9b7e:	f000 f85d 	bl	9c3c <__cxa_begin_catch>
    9b82:	b10e      	cbz	r6, 9b88 <__cxa_call_unexpected+0x38>
    9b84:	f7f9 fd6a 	bl	365c <std::unexpected()>
    9b88:	4638      	mov	r0, r7
    9b8a:	f7f9 fd63 	bl	3654 <__cxxabiv1::__unexpected(void (*)())>
    9b8e:	f000 f855 	bl	9c3c <__cxa_begin_catch>
    9b92:	b10e      	cbz	r6, 9b98 <__cxa_call_unexpected+0x48>
    9b94:	f7f9 fd54 	bl	3640 <std::terminate()>
    9b98:	f000 f8e2 	bl	9d60 <__cxa_get_globals_fast>
    9b9c:	f04f 0900 	mov.w	r9, #0
    9ba0:	6807      	ldr	r7, [r0, #0]
    9ba2:	f8df b088 	ldr.w	fp, [pc, #136]	; 9c2c <__cxa_call_unexpected+0xdc>
    9ba6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
    9baa:	2b01      	cmp	r3, #1
    9bac:	bf0c      	ite	eq
    9bae:	683b      	ldreq	r3, [r7, #0]
    9bb0:	f107 0378 	addne.w	r3, r7, #120	; 0x78
    9bb4:	9302      	str	r3, [sp, #8]
    9bb6:	f028 0303 	bic.w	r3, r8, #3
    9bba:	9301      	str	r3, [sp, #4]
    9bbc:	3720      	adds	r7, #32
    9bbe:	45ca      	cmp	sl, r9
    9bc0:	dd20      	ble.n	9c04 <__cxa_call_unexpected+0xb4>
    9bc2:	f8d5 8000 	ldr.w	r8, [r5]
    9bc6:	f1b8 0f00 	cmp.w	r8, #0
    9bca:	d000      	beq.n	9bce <__cxa_call_unexpected+0x7e>
    9bcc:	44a8      	add	r8, r5
    9bce:	2200      	movs	r2, #0
    9bd0:	4641      	mov	r1, r8
    9bd2:	4638      	mov	r0, r7
    9bd4:	ab02      	add	r3, sp, #8
    9bd6:	f7ff fec9 	bl	996c <__cxa_type_match>
    9bda:	b108      	cbz	r0, 9be0 <__cxa_call_unexpected+0x90>
    9bdc:	f7f9 fdea 	bl	37b4 <__cxa_rethrow>
    9be0:	f8d8 3000 	ldr.w	r3, [r8]
    9be4:	9003      	str	r0, [sp, #12]
    9be6:	4659      	mov	r1, fp
    9be8:	4640      	mov	r0, r8
    9bea:	aa03      	add	r2, sp, #12
    9bec:	f8d3 8010 	ldr.w	r8, [r3, #16]
    9bf0:	2301      	movs	r3, #1
    9bf2:	47c0      	blx	r8
    9bf4:	9b01      	ldr	r3, [sp, #4]
    9bf6:	2800      	cmp	r0, #0
    9bf8:	bf18      	it	ne
    9bfa:	4606      	movne	r6, r0
    9bfc:	f109 0901 	add.w	r9, r9, #1
    9c00:	441d      	add	r5, r3
    9c02:	e7dc      	b.n	9bbe <__cxa_call_unexpected+0x6e>
    9c04:	b146      	cbz	r6, 9c18 <__cxa_call_unexpected+0xc8>
    9c06:	2004      	movs	r0, #4
    9c08:	f7f9 fc72 	bl	34f0 <__cxa_allocate_exception>
    9c0c:	4b08      	ldr	r3, [pc, #32]	; (9c30 <__cxa_call_unexpected+0xe0>)
    9c0e:	4a09      	ldr	r2, [pc, #36]	; (9c34 <__cxa_call_unexpected+0xe4>)
    9c10:	4906      	ldr	r1, [pc, #24]	; (9c2c <__cxa_call_unexpected+0xdc>)
    9c12:	6003      	str	r3, [r0, #0]
    9c14:	f7f9 fdb2 	bl	377c <__cxa_throw>
    9c18:	4620      	mov	r0, r4
    9c1a:	f7f9 fcfd 	bl	3618 <__cxxabiv1::__terminate(void (*)())>
    9c1e:	f000 f84d 	bl	9cbc <__cxa_end_catch>
    9c22:	f000 f84b 	bl	9cbc <__cxa_end_catch>
    9c26:	f7ff fe9b 	bl	9960 <__cxa_end_cleanup>
    9c2a:	bf00      	nop
    9c2c:	00018f74 	.word	0x00018f74
    9c30:	00019020 	.word	0x00019020
    9c34:	000035b5 	.word	0x000035b5

00009c38 <__cxa_get_exception_ptr>:
    9c38:	6a40      	ldr	r0, [r0, #36]	; 0x24
    9c3a:	4770      	bx	lr

00009c3c <__cxa_begin_catch>:
    9c3c:	b538      	push	{r3, r4, r5, lr}
    9c3e:	4604      	mov	r4, r0
    9c40:	f000 f892 	bl	9d68 <__cxa_get_globals>
    9c44:	4622      	mov	r2, r4
    9c46:	f812 3920 	ldrb.w	r3, [r2], #-32
    9c4a:	6805      	ldr	r5, [r0, #0]
    9c4c:	2b47      	cmp	r3, #71	; 0x47
    9c4e:	d003      	beq.n	9c58 <__cxa_begin_catch+0x1c>
    9c50:	bb8d      	cbnz	r5, 9cb6 <__cxa_begin_catch+0x7a>
    9c52:	6002      	str	r2, [r0, #0]
    9c54:	4628      	mov	r0, r5
    9c56:	bd38      	pop	{r3, r4, r5, pc}
    9c58:	7863      	ldrb	r3, [r4, #1]
    9c5a:	2b4e      	cmp	r3, #78	; 0x4e
    9c5c:	d1f8      	bne.n	9c50 <__cxa_begin_catch+0x14>
    9c5e:	78a3      	ldrb	r3, [r4, #2]
    9c60:	2b55      	cmp	r3, #85	; 0x55
    9c62:	d1f5      	bne.n	9c50 <__cxa_begin_catch+0x14>
    9c64:	78e3      	ldrb	r3, [r4, #3]
    9c66:	2b43      	cmp	r3, #67	; 0x43
    9c68:	d1f2      	bne.n	9c50 <__cxa_begin_catch+0x14>
    9c6a:	7923      	ldrb	r3, [r4, #4]
    9c6c:	2b43      	cmp	r3, #67	; 0x43
    9c6e:	d1ef      	bne.n	9c50 <__cxa_begin_catch+0x14>
    9c70:	7963      	ldrb	r3, [r4, #5]
    9c72:	2b2b      	cmp	r3, #43	; 0x2b
    9c74:	d1ec      	bne.n	9c50 <__cxa_begin_catch+0x14>
    9c76:	79a3      	ldrb	r3, [r4, #6]
    9c78:	2b2b      	cmp	r3, #43	; 0x2b
    9c7a:	d1e9      	bne.n	9c50 <__cxa_begin_catch+0x14>
    9c7c:	79e3      	ldrb	r3, [r4, #7]
    9c7e:	2b01      	cmp	r3, #1
    9c80:	d8e6      	bhi.n	9c50 <__cxa_begin_catch+0x14>
    9c82:	f854 3c0c 	ldr.w	r3, [r4, #-12]
    9c86:	2b00      	cmp	r3, #0
    9c88:	db12      	blt.n	9cb0 <__cxa_begin_catch+0x74>
    9c8a:	3301      	adds	r3, #1
    9c8c:	f844 3c0c 	str.w	r3, [r4, #-12]
    9c90:	6843      	ldr	r3, [r0, #4]
    9c92:	4295      	cmp	r5, r2
    9c94:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    9c98:	6043      	str	r3, [r0, #4]
    9c9a:	bf18      	it	ne
    9c9c:	f844 5c10 	strne.w	r5, [r4, #-16]
    9ca0:	6a65      	ldr	r5, [r4, #36]	; 0x24
    9ca2:	bf18      	it	ne
    9ca4:	6002      	strne	r2, [r0, #0]
    9ca6:	4620      	mov	r0, r4
    9ca8:	f001 f9d8 	bl	b05c <_Unwind_Complete>
    9cac:	4628      	mov	r0, r5
    9cae:	bd38      	pop	{r3, r4, r5, pc}
    9cb0:	f1c3 0301 	rsb	r3, r3, #1
    9cb4:	e7ea      	b.n	9c8c <__cxa_begin_catch+0x50>
    9cb6:	f7f9 fcc3 	bl	3640 <std::terminate()>
    9cba:	bf00      	nop

00009cbc <__cxa_end_catch>:
    9cbc:	b508      	push	{r3, lr}
    9cbe:	f000 f84f 	bl	9d60 <__cxa_get_globals_fast>
    9cc2:	4602      	mov	r2, r0
    9cc4:	6800      	ldr	r0, [r0, #0]
    9cc6:	b370      	cbz	r0, 9d26 <__cxa_end_catch+0x6a>
    9cc8:	f890 1020 	ldrb.w	r1, [r0, #32]
    9ccc:	2947      	cmp	r1, #71	; 0x47
    9cce:	d006      	beq.n	9cde <__cxa_end_catch+0x22>
    9cd0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9cd4:	2100      	movs	r1, #0
    9cd6:	3020      	adds	r0, #32
    9cd8:	6011      	str	r1, [r2, #0]
    9cda:	f001 b9c1 	b.w	b060 <_Unwind_DeleteException>
    9cde:	f890 1021 	ldrb.w	r1, [r0, #33]	; 0x21
    9ce2:	294e      	cmp	r1, #78	; 0x4e
    9ce4:	d1f4      	bne.n	9cd0 <__cxa_end_catch+0x14>
    9ce6:	f890 1022 	ldrb.w	r1, [r0, #34]	; 0x22
    9cea:	2955      	cmp	r1, #85	; 0x55
    9cec:	d1f0      	bne.n	9cd0 <__cxa_end_catch+0x14>
    9cee:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
    9cf2:	2943      	cmp	r1, #67	; 0x43
    9cf4:	d1ec      	bne.n	9cd0 <__cxa_end_catch+0x14>
    9cf6:	f890 1024 	ldrb.w	r1, [r0, #36]	; 0x24
    9cfa:	2943      	cmp	r1, #67	; 0x43
    9cfc:	d1e8      	bne.n	9cd0 <__cxa_end_catch+0x14>
    9cfe:	f890 1025 	ldrb.w	r1, [r0, #37]	; 0x25
    9d02:	292b      	cmp	r1, #43	; 0x2b
    9d04:	d1e4      	bne.n	9cd0 <__cxa_end_catch+0x14>
    9d06:	f890 1026 	ldrb.w	r1, [r0, #38]	; 0x26
    9d0a:	292b      	cmp	r1, #43	; 0x2b
    9d0c:	d1e0      	bne.n	9cd0 <__cxa_end_catch+0x14>
    9d0e:	f890 1027 	ldrb.w	r1, [r0, #39]	; 0x27
    9d12:	2901      	cmp	r1, #1
    9d14:	d8dc      	bhi.n	9cd0 <__cxa_end_catch+0x14>
    9d16:	6941      	ldr	r1, [r0, #20]
    9d18:	2900      	cmp	r1, #0
    9d1a:	db05      	blt.n	9d28 <__cxa_end_catch+0x6c>
    9d1c:	3901      	subs	r1, #1
    9d1e:	d008      	beq.n	9d32 <__cxa_end_catch+0x76>
    9d20:	1c4b      	adds	r3, r1, #1
    9d22:	d00d      	beq.n	9d40 <__cxa_end_catch+0x84>
    9d24:	6141      	str	r1, [r0, #20]
    9d26:	bd08      	pop	{r3, pc}
    9d28:	3101      	adds	r1, #1
    9d2a:	d1fb      	bne.n	9d24 <__cxa_end_catch+0x68>
    9d2c:	6903      	ldr	r3, [r0, #16]
    9d2e:	6013      	str	r3, [r2, #0]
    9d30:	e7f8      	b.n	9d24 <__cxa_end_catch+0x68>
    9d32:	6901      	ldr	r1, [r0, #16]
    9d34:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9d38:	3020      	adds	r0, #32
    9d3a:	6011      	str	r1, [r2, #0]
    9d3c:	f001 b990 	b.w	b060 <_Unwind_DeleteException>
    9d40:	f7f9 fc7e 	bl	3640 <std::terminate()>

00009d44 <std::uncaught_exception()>:
    9d44:	b508      	push	{r3, lr}
    9d46:	f000 f80f 	bl	9d68 <__cxa_get_globals>
    9d4a:	6840      	ldr	r0, [r0, #4]
    9d4c:	3800      	subs	r0, #0
    9d4e:	bf18      	it	ne
    9d50:	2001      	movne	r0, #1
    9d52:	bd08      	pop	{r3, pc}

00009d54 <std::uncaught_exceptions()>:
    9d54:	b508      	push	{r3, lr}
    9d56:	f000 f807 	bl	9d68 <__cxa_get_globals>
    9d5a:	6840      	ldr	r0, [r0, #4]
    9d5c:	bd08      	pop	{r3, pc}
    9d5e:	bf00      	nop

00009d60 <__cxa_get_globals_fast>:
    9d60:	4800      	ldr	r0, [pc, #0]	; (9d64 <__cxa_get_globals_fast+0x4>)
    9d62:	4770      	bx	lr
    9d64:	20001f40 	.word	0x20001f40

00009d68 <__cxa_get_globals>:
    9d68:	4800      	ldr	r0, [pc, #0]	; (9d6c <__cxa_get_globals+0x4>)
    9d6a:	4770      	bx	lr
    9d6c:	20001f40 	.word	0x20001f40

00009d70 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>:
    9d70:	2850      	cmp	r0, #80	; 0x50
    9d72:	b570      	push	{r4, r5, r6, lr}
    9d74:	d01d      	beq.n	9db2 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x42>
    9d76:	4684      	mov	ip, r0
    9d78:	f000 000f 	and.w	r0, r0, #15
    9d7c:	280c      	cmp	r0, #12
    9d7e:	d855      	bhi.n	9e2c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xbc>
    9d80:	e8df f000 	tbb	[pc, r0]
    9d84:	07264407 	.word	0x07264407
    9d88:	5454541e 	.word	0x5454541e
    9d8c:	07222a54 	.word	0x07222a54
    9d90:	1e          	.byte	0x1e
    9d91:	00          	.byte	0x00
    9d92:	4610      	mov	r0, r2
    9d94:	f850 6b04 	ldr.w	r6, [r0], #4
    9d98:	b14e      	cbz	r6, 9dae <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x3e>
    9d9a:	f00c 0470 	and.w	r4, ip, #112	; 0x70
    9d9e:	2c10      	cmp	r4, #16
    9da0:	bf08      	it	eq
    9da2:	4611      	moveq	r1, r2
    9da4:	f01c 0f80 	tst.w	ip, #128	; 0x80
    9da8:	440e      	add	r6, r1
    9daa:	bf18      	it	ne
    9dac:	6836      	ldrne	r6, [r6, #0]
    9dae:	601e      	str	r6, [r3, #0]
    9db0:	bd70      	pop	{r4, r5, r6, pc}
    9db2:	3203      	adds	r2, #3
    9db4:	f022 0003 	bic.w	r0, r2, #3
    9db8:	f850 6b04 	ldr.w	r6, [r0], #4
    9dbc:	601e      	str	r6, [r3, #0]
    9dbe:	bd70      	pop	{r4, r5, r6, pc}
    9dc0:	4610      	mov	r0, r2
    9dc2:	f850 6b08 	ldr.w	r6, [r0], #8
    9dc6:	e7e7      	b.n	9d98 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9dc8:	4610      	mov	r0, r2
    9dca:	f930 6b02 	ldrsh.w	r6, [r0], #2
    9dce:	e7e3      	b.n	9d98 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9dd0:	4610      	mov	r0, r2
    9dd2:	f830 6b02 	ldrh.w	r6, [r0], #2
    9dd6:	e7df      	b.n	9d98 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9dd8:	2600      	movs	r6, #0
    9dda:	4610      	mov	r0, r2
    9ddc:	4634      	mov	r4, r6
    9dde:	f810 5b01 	ldrb.w	r5, [r0], #1
    9de2:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
    9de6:	fa0e fe04 	lsl.w	lr, lr, r4
    9dea:	f015 0f80 	tst.w	r5, #128	; 0x80
    9dee:	ea46 060e 	orr.w	r6, r6, lr
    9df2:	f104 0407 	add.w	r4, r4, #7
    9df6:	d1f2      	bne.n	9dde <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x6e>
    9df8:	2c1f      	cmp	r4, #31
    9dfa:	d8cd      	bhi.n	9d98 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9dfc:	066d      	lsls	r5, r5, #25
    9dfe:	d5cb      	bpl.n	9d98 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9e00:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    9e04:	fa05 f404 	lsl.w	r4, r5, r4
    9e08:	4326      	orrs	r6, r4
    9e0a:	e7c6      	b.n	9d9a <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x2a>
    9e0c:	2600      	movs	r6, #0
    9e0e:	4610      	mov	r0, r2
    9e10:	4634      	mov	r4, r6
    9e12:	f810 5b01 	ldrb.w	r5, [r0], #1
    9e16:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
    9e1a:	fa0e fe04 	lsl.w	lr, lr, r4
    9e1e:	062d      	lsls	r5, r5, #24
    9e20:	ea46 060e 	orr.w	r6, r6, lr
    9e24:	f104 0407 	add.w	r4, r4, #7
    9e28:	d4f3      	bmi.n	9e12 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xa2>
    9e2a:	e7b5      	b.n	9d98 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9e2c:	f001 fede 	bl	bbec <abort>

00009e30 <base_of_encoded_value(unsigned char, _Unwind_Context*)>:
    9e30:	28ff      	cmp	r0, #255	; 0xff
    9e32:	b508      	push	{r3, lr}
    9e34:	4603      	mov	r3, r0
    9e36:	d019      	beq.n	9e6c <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x3c>
    9e38:	f003 0270 	and.w	r2, r3, #112	; 0x70
    9e3c:	2a30      	cmp	r2, #48	; 0x30
    9e3e:	4608      	mov	r0, r1
    9e40:	d016      	beq.n	9e70 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x40>
    9e42:	d805      	bhi.n	9e50 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x20>
    9e44:	2a20      	cmp	r2, #32
    9e46:	d109      	bne.n	9e5c <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x2c>
    9e48:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9e4c:	f001 becb 	b.w	bbe6 <_Unwind_GetTextRelBase>
    9e50:	2a40      	cmp	r2, #64	; 0x40
    9e52:	d109      	bne.n	9e68 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x38>
    9e54:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9e58:	f001 beb2 	b.w	bbc0 <_Unwind_GetRegionStart>
    9e5c:	d802      	bhi.n	9e64 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x34>
    9e5e:	f013 0f60 	tst.w	r3, #96	; 0x60
    9e62:	d003      	beq.n	9e6c <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x3c>
    9e64:	f001 fec2 	bl	bbec <abort>
    9e68:	2a50      	cmp	r2, #80	; 0x50
    9e6a:	d1fb      	bne.n	9e64 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x34>
    9e6c:	2000      	movs	r0, #0
    9e6e:	bd08      	pop	{r3, pc}
    9e70:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9e74:	f001 beb4 	b.w	bbe0 <_Unwind_GetDataRelBase>

00009e78 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>:
    9e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9e7a:	4606      	mov	r6, r0
    9e7c:	460c      	mov	r4, r1
    9e7e:	4615      	mov	r5, r2
    9e80:	b108      	cbz	r0, 9e86 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0xe>
    9e82:	f001 fe9d 	bl	bbc0 <_Unwind_GetRegionStart>
    9e86:	6028      	str	r0, [r5, #0]
    9e88:	f814 7b01 	ldrb.w	r7, [r4], #1
    9e8c:	2fff      	cmp	r7, #255	; 0xff
    9e8e:	d129      	bne.n	9ee4 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x6c>
    9e90:	6068      	str	r0, [r5, #4]
    9e92:	4620      	mov	r0, r4
    9e94:	f810 3b01 	ldrb.w	r3, [r0], #1
    9e98:	2bff      	cmp	r3, #255	; 0xff
    9e9a:	752b      	strb	r3, [r5, #20]
    9e9c:	d033      	beq.n	9f06 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x8e>
    9e9e:	2400      	movs	r4, #0
    9ea0:	2310      	movs	r3, #16
    9ea2:	4622      	mov	r2, r4
    9ea4:	752b      	strb	r3, [r5, #20]
    9ea6:	f810 1b01 	ldrb.w	r1, [r0], #1
    9eaa:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    9eae:	4093      	lsls	r3, r2
    9eb0:	0609      	lsls	r1, r1, #24
    9eb2:	ea44 0403 	orr.w	r4, r4, r3
    9eb6:	f102 0207 	add.w	r2, r2, #7
    9eba:	d4f4      	bmi.n	9ea6 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x2e>
    9ebc:	4404      	add	r4, r0
    9ebe:	60ec      	str	r4, [r5, #12]
    9ec0:	2400      	movs	r4, #0
    9ec2:	4622      	mov	r2, r4
    9ec4:	f810 3b01 	ldrb.w	r3, [r0], #1
    9ec8:	756b      	strb	r3, [r5, #21]
    9eca:	f810 1b01 	ldrb.w	r1, [r0], #1
    9ece:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    9ed2:	4093      	lsls	r3, r2
    9ed4:	431c      	orrs	r4, r3
    9ed6:	060b      	lsls	r3, r1, #24
    9ed8:	f102 0207 	add.w	r2, r2, #7
    9edc:	d4f5      	bmi.n	9eca <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x52>
    9ede:	4404      	add	r4, r0
    9ee0:	612c      	str	r4, [r5, #16]
    9ee2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9ee4:	4631      	mov	r1, r6
    9ee6:	4638      	mov	r0, r7
    9ee8:	f7ff ffa2 	bl	9e30 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9eec:	4622      	mov	r2, r4
    9eee:	4601      	mov	r1, r0
    9ef0:	1d2b      	adds	r3, r5, #4
    9ef2:	4638      	mov	r0, r7
    9ef4:	f7ff ff3c 	bl	9d70 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    9ef8:	4604      	mov	r4, r0
    9efa:	4620      	mov	r0, r4
    9efc:	f810 3b01 	ldrb.w	r3, [r0], #1
    9f00:	2bff      	cmp	r3, #255	; 0xff
    9f02:	752b      	strb	r3, [r5, #20]
    9f04:	d1cb      	bne.n	9e9e <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x26>
    9f06:	2300      	movs	r3, #0
    9f08:	60eb      	str	r3, [r5, #12]
    9f0a:	e7d9      	b.n	9ec0 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x48>

00009f0c <__gxx_personality_v0>:
    9f0c:	2300      	movs	r3, #0
    9f0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9f12:	4617      	mov	r7, r2
    9f14:	f000 0203 	and.w	r2, r0, #3
    9f18:	b093      	sub	sp, #76	; 0x4c
    9f1a:	2a01      	cmp	r2, #1
    9f1c:	4688      	mov	r8, r1
    9f1e:	9308      	str	r3, [sp, #32]
    9f20:	d013      	beq.n	9f4a <__gxx_personality_v0+0x3e>
    9f22:	2a02      	cmp	r2, #2
    9f24:	d108      	bne.n	9f38 <__gxx_personality_v0+0x2c>
    9f26:	4639      	mov	r1, r7
    9f28:	4640      	mov	r0, r8
    9f2a:	f001 fe31 	bl	bb90 <__gnu_unwind_frame>
    9f2e:	b940      	cbnz	r0, 9f42 <__gxx_personality_v0+0x36>
    9f30:	2008      	movs	r0, #8
    9f32:	b013      	add	sp, #76	; 0x4c
    9f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9f38:	2a00      	cmp	r2, #0
    9f3a:	f000 8097 	beq.w	a06c <__gxx_personality_v0+0x160>
    9f3e:	f001 fe55 	bl	bbec <abort>
    9f42:	2009      	movs	r0, #9
    9f44:	b013      	add	sp, #76	; 0x4c
    9f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9f4a:	f010 0408 	ands.w	r4, r0, #8
    9f4e:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
    9f52:	f000 80a2 	beq.w	a09a <__gxx_personality_v0+0x18e>
    9f56:	f044 0202 	orr.w	r2, r4, #2
    9f5a:	9202      	str	r2, [sp, #8]
    9f5c:	910c      	str	r1, [sp, #48]	; 0x30
    9f5e:	220c      	movs	r2, #12
    9f60:	4619      	mov	r1, r3
    9f62:	4638      	mov	r0, r7
    9f64:	f8cd b000 	str.w	fp, [sp]
    9f68:	f001 f8a6 	bl	b0b8 <_Unwind_VRS_Set>
    9f6c:	4638      	mov	r0, r7
    9f6e:	f001 fe2d 	bl	bbcc <_Unwind_GetLanguageSpecificData>
    9f72:	9003      	str	r0, [sp, #12]
    9f74:	2800      	cmp	r0, #0
    9f76:	d0d6      	beq.n	9f26 <__gxx_personality_v0+0x1a>
    9f78:	465a      	mov	r2, fp
    9f7a:	9903      	ldr	r1, [sp, #12]
    9f7c:	4638      	mov	r0, r7
    9f7e:	f7ff ff7b 	bl	9e78 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
    9f82:	4639      	mov	r1, r7
    9f84:	4605      	mov	r5, r0
    9f86:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    9f8a:	f7ff ff51 	bl	9e30 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9f8e:	2300      	movs	r3, #0
    9f90:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
    9f94:	4619      	mov	r1, r3
    9f96:	900e      	str	r0, [sp, #56]	; 0x38
    9f98:	220f      	movs	r2, #15
    9f9a:	4638      	mov	r0, r7
    9f9c:	f8cd 9000 	str.w	r9, [sp]
    9fa0:	f001 f864 	bl	b06c <_Unwind_VRS_Get>
    9fa4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9fa6:	f023 0301 	bic.w	r3, r3, #1
    9faa:	1e5e      	subs	r6, r3, #1
    9fac:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9fae:	429d      	cmp	r5, r3
    9fb0:	d237      	bcs.n	a022 <__gxx_personality_v0+0x116>
    9fb2:	f89d 4045 	ldrb.w	r4, [sp, #69]	; 0x45
    9fb6:	2100      	movs	r1, #0
    9fb8:	4620      	mov	r0, r4
    9fba:	f7ff ff39 	bl	9e30 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9fbe:	462a      	mov	r2, r5
    9fc0:	4601      	mov	r1, r0
    9fc2:	ab09      	add	r3, sp, #36	; 0x24
    9fc4:	4620      	mov	r0, r4
    9fc6:	f7ff fed3 	bl	9d70 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    9fca:	2100      	movs	r1, #0
    9fcc:	f89d a045 	ldrb.w	sl, [sp, #69]	; 0x45
    9fd0:	4605      	mov	r5, r0
    9fd2:	4650      	mov	r0, sl
    9fd4:	460c      	mov	r4, r1
    9fd6:	f7ff ff2b 	bl	9e30 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9fda:	462a      	mov	r2, r5
    9fdc:	4601      	mov	r1, r0
    9fde:	ab0a      	add	r3, sp, #40	; 0x28
    9fe0:	4650      	mov	r0, sl
    9fe2:	f7ff fec5 	bl	9d70 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    9fe6:	f89d a045 	ldrb.w	sl, [sp, #69]	; 0x45
    9fea:	4605      	mov	r5, r0
    9fec:	4621      	mov	r1, r4
    9fee:	4650      	mov	r0, sl
    9ff0:	f7ff ff1e 	bl	9e30 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9ff4:	462a      	mov	r2, r5
    9ff6:	4601      	mov	r1, r0
    9ff8:	464b      	mov	r3, r9
    9ffa:	4650      	mov	r0, sl
    9ffc:	f7ff feb8 	bl	9d70 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    a000:	4622      	mov	r2, r4
    a002:	4605      	mov	r5, r0
    a004:	f815 1b01 	ldrb.w	r1, [r5], #1
    a008:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    a00c:	4093      	lsls	r3, r2
    a00e:	431c      	orrs	r4, r3
    a010:	060b      	lsls	r3, r1, #24
    a012:	f102 0207 	add.w	r2, r2, #7
    a016:	d4f5      	bmi.n	a004 <__gxx_personality_v0+0xf8>
    a018:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a01a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a01c:	4413      	add	r3, r2
    a01e:	42b3      	cmp	r3, r6
    a020:	d91c      	bls.n	a05c <__gxx_personality_v0+0x150>
    a022:	9b02      	ldr	r3, [sp, #8]
    a024:	07d8      	lsls	r0, r3, #31
    a026:	d533      	bpl.n	a090 <__gxx_personality_v0+0x184>
    a028:	2400      	movs	r4, #0
    a02a:	9404      	str	r4, [sp, #16]
    a02c:	2300      	movs	r3, #0
    a02e:	4638      	mov	r0, r7
    a030:	4619      	mov	r1, r3
    a032:	220d      	movs	r2, #13
    a034:	f8cd 9000 	str.w	r9, [sp]
    a038:	9d08      	ldr	r5, [sp, #32]
    a03a:	f001 f817 	bl	b06c <_Unwind_VRS_Get>
    a03e:	9b03      	ldr	r3, [sp, #12]
    a040:	2006      	movs	r0, #6
    a042:	f8c8 302c 	str.w	r3, [r8, #44]	; 0x2c
    a046:	9b04      	ldr	r3, [sp, #16]
    a048:	f8c8 5024 	str.w	r5, [r8, #36]	; 0x24
    a04c:	f8c8 3030 	str.w	r3, [r8, #48]	; 0x30
    a050:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a052:	f8c8 4028 	str.w	r4, [r8, #40]	; 0x28
    a056:	f8c8 3020 	str.w	r3, [r8, #32]
    a05a:	e76a      	b.n	9f32 <__gxx_personality_v0+0x26>
    a05c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a05e:	4413      	add	r3, r2
    a060:	42b3      	cmp	r3, r6
    a062:	d871      	bhi.n	a148 <__gxx_personality_v0+0x23c>
    a064:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a066:	42ab      	cmp	r3, r5
    a068:	d8a3      	bhi.n	9fb2 <__gxx_personality_v0+0xa6>
    a06a:	e7da      	b.n	a022 <__gxx_personality_v0+0x116>
    a06c:	0702      	lsls	r2, r0, #28
    a06e:	f53f af5a 	bmi.w	9f26 <__gxx_personality_v0+0x1a>
    a072:	2301      	movs	r3, #1
    a074:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
    a078:	9302      	str	r3, [sp, #8]
    a07a:	2300      	movs	r3, #0
    a07c:	220c      	movs	r2, #12
    a07e:	4638      	mov	r0, r7
    a080:	4619      	mov	r1, r3
    a082:	f8cd b000 	str.w	fp, [sp]
    a086:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    a08a:	f001 f815 	bl	b0b8 <_Unwind_VRS_Set>
    a08e:	e76d      	b.n	9f6c <__gxx_personality_v0+0x60>
    a090:	9b02      	ldr	r3, [sp, #8]
    a092:	071a      	lsls	r2, r3, #28
    a094:	d555      	bpl.n	a142 <__gxx_personality_v0+0x236>
    a096:	f7f9 fad3 	bl	3640 <std::terminate()>
    a09a:	f8cd b000 	str.w	fp, [sp]
    a09e:	6a0d      	ldr	r5, [r1, #32]
    a0a0:	4623      	mov	r3, r4
    a0a2:	220d      	movs	r2, #13
    a0a4:	4621      	mov	r1, r4
    a0a6:	4638      	mov	r0, r7
    a0a8:	f000 ffe0 	bl	b06c <_Unwind_VRS_Get>
    a0ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a0ae:	429d      	cmp	r5, r3
    a0b0:	d002      	beq.n	a0b8 <__gxx_personality_v0+0x1ac>
    a0b2:	2302      	movs	r3, #2
    a0b4:	9302      	str	r3, [sp, #8]
    a0b6:	e7e0      	b.n	a07a <__gxx_personality_v0+0x16e>
    a0b8:	4623      	mov	r3, r4
    a0ba:	4621      	mov	r1, r4
    a0bc:	220c      	movs	r2, #12
    a0be:	4638      	mov	r0, r7
    a0c0:	f8cd b000 	str.w	fp, [sp]
    a0c4:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    a0c8:	f000 fff6 	bl	b0b8 <_Unwind_VRS_Set>
    a0cc:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
    a0d0:	9304      	str	r3, [sp, #16]
    a0d2:	b3b3      	cbz	r3, a142 <__gxx_personality_v0+0x236>
    a0d4:	e9d8 430a 	ldrd	r4, r3, [r8, #40]	; 0x28
    a0d8:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
    a0dc:	9303      	str	r3, [sp, #12]
    a0de:	2c00      	cmp	r4, #0
    a0e0:	db4e      	blt.n	a180 <__gxx_personality_v0+0x274>
    a0e2:	2503      	movs	r5, #3
    a0e4:	2300      	movs	r3, #0
    a0e6:	4638      	mov	r0, r7
    a0e8:	461a      	mov	r2, r3
    a0ea:	4619      	mov	r1, r3
    a0ec:	f8cd 9000 	str.w	r9, [sp]
    a0f0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
    a0f4:	f000 ffe0 	bl	b0b8 <_Unwind_VRS_Set>
    a0f8:	2300      	movs	r3, #0
    a0fa:	2201      	movs	r2, #1
    a0fc:	4619      	mov	r1, r3
    a0fe:	4638      	mov	r0, r7
    a100:	f8cd 9000 	str.w	r9, [sp]
    a104:	940b      	str	r4, [sp, #44]	; 0x2c
    a106:	f000 ffd7 	bl	b0b8 <_Unwind_VRS_Set>
    a10a:	2300      	movs	r3, #0
    a10c:	220f      	movs	r2, #15
    a10e:	4619      	mov	r1, r3
    a110:	4638      	mov	r0, r7
    a112:	f8cd 9000 	str.w	r9, [sp]
    a116:	f000 ffa9 	bl	b06c <_Unwind_VRS_Get>
    a11a:	2300      	movs	r3, #0
    a11c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a11e:	9904      	ldr	r1, [sp, #16]
    a120:	f002 0201 	and.w	r2, r2, #1
    a124:	430a      	orrs	r2, r1
    a126:	920b      	str	r2, [sp, #44]	; 0x2c
    a128:	4638      	mov	r0, r7
    a12a:	220f      	movs	r2, #15
    a12c:	4619      	mov	r1, r3
    a12e:	f8cd 9000 	str.w	r9, [sp]
    a132:	f000 ffc1 	bl	b0b8 <_Unwind_VRS_Set>
    a136:	2d02      	cmp	r5, #2
    a138:	d01d      	beq.n	a176 <__gxx_personality_v0+0x26a>
    a13a:	2007      	movs	r0, #7
    a13c:	b013      	add	sp, #76	; 0x4c
    a13e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a142:	4640      	mov	r0, r8
    a144:	f7ff fcf4 	bl	9b30 <__cxa_call_terminate>
    a148:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a14a:	2b00      	cmp	r3, #0
    a14c:	f43f aeeb 	beq.w	9f26 <__gxx_personality_v0+0x1a>
    a150:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    a152:	4413      	add	r3, r2
    a154:	9304      	str	r3, [sp, #16]
    a156:	2c00      	cmp	r4, #0
    a158:	d138      	bne.n	a1cc <__gxx_personality_v0+0x2c0>
    a15a:	2b00      	cmp	r3, #0
    a15c:	f43f aee3 	beq.w	9f26 <__gxx_personality_v0+0x1a>
    a160:	9b02      	ldr	r3, [sp, #8]
    a162:	07dd      	lsls	r5, r3, #31
    a164:	f53f aedf 	bmi.w	9f26 <__gxx_personality_v0+0x1a>
    a168:	9b02      	ldr	r3, [sp, #8]
    a16a:	071b      	lsls	r3, r3, #28
    a16c:	f140 811b 	bpl.w	a3a6 <__gxx_personality_v0+0x49a>
    a170:	2400      	movs	r4, #0
    a172:	2502      	movs	r5, #2
    a174:	e7b6      	b.n	a0e4 <__gxx_personality_v0+0x1d8>
    a176:	4640      	mov	r0, r8
    a178:	f7ff fc52 	bl	9a20 <__cxa_begin_cleanup>
    a17c:	2007      	movs	r0, #7
    a17e:	e6d8      	b.n	9f32 <__gxx_personality_v0+0x26>
    a180:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
    a184:	1b1b      	subs	r3, r3, r4
    a186:	461d      	mov	r5, r3
    a188:	465a      	mov	r2, fp
    a18a:	9903      	ldr	r1, [sp, #12]
    a18c:	4638      	mov	r0, r7
    a18e:	f7ff fe73 	bl	9e78 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
    a192:	4639      	mov	r1, r7
    a194:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    a198:	f7ff fe4a 	bl	9e30 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    a19c:	462a      	mov	r2, r5
    a19e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a1a0:	900e      	str	r0, [sp, #56]	; 0x38
    a1a2:	eb03 0585 	add.w	r5, r3, r5, lsl #2
    a1a6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    a1aa:	b133      	cbz	r3, a1ba <__gxx_personality_v0+0x2ae>
    a1ac:	462a      	mov	r2, r5
    a1ae:	2300      	movs	r3, #0
    a1b0:	f852 1f04 	ldr.w	r1, [r2, #4]!
    a1b4:	3301      	adds	r3, #1
    a1b6:	2900      	cmp	r1, #0
    a1b8:	d1fa      	bne.n	a1b0 <__gxx_personality_v0+0x2a4>
    a1ba:	e9c8 300a 	strd	r3, r0, [r8, #40]	; 0x28
    a1be:	2304      	movs	r3, #4
    a1c0:	f8c8 5034 	str.w	r5, [r8, #52]	; 0x34
    a1c4:	f8c8 3030 	str.w	r3, [r8, #48]	; 0x30
    a1c8:	2503      	movs	r5, #3
    a1ca:	e78b      	b.n	a0e4 <__gxx_personality_v0+0x1d8>
    a1cc:	9e10      	ldr	r6, [sp, #64]	; 0x40
    a1ce:	9b04      	ldr	r3, [sp, #16]
    a1d0:	3c01      	subs	r4, #1
    a1d2:	4426      	add	r6, r4
    a1d4:	2b00      	cmp	r3, #0
    a1d6:	f43f aea6 	beq.w	9f26 <__gxx_personality_v0+0x1a>
    a1da:	9b02      	ldr	r3, [sp, #8]
    a1dc:	2e00      	cmp	r6, #0
    a1de:	f000 80da 	beq.w	a396 <__gxx_personality_v0+0x48a>
    a1e2:	f013 0308 	ands.w	r3, r3, #8
    a1e6:	9305      	str	r3, [sp, #20]
    a1e8:	f000 80c1 	beq.w	a36e <__gxx_personality_v0+0x462>
    a1ec:	2347      	movs	r3, #71	; 0x47
    a1ee:	f888 3000 	strb.w	r3, [r8]
    a1f2:	234e      	movs	r3, #78	; 0x4e
    a1f4:	f888 3001 	strb.w	r3, [r8, #1]
    a1f8:	2355      	movs	r3, #85	; 0x55
    a1fa:	f888 3002 	strb.w	r3, [r8, #2]
    a1fe:	2343      	movs	r3, #67	; 0x43
    a200:	f888 3003 	strb.w	r3, [r8, #3]
    a204:	2346      	movs	r3, #70	; 0x46
    a206:	f888 3004 	strb.w	r3, [r8, #4]
    a20a:	234f      	movs	r3, #79	; 0x4f
    a20c:	f888 3005 	strb.w	r3, [r8, #5]
    a210:	2352      	movs	r3, #82	; 0x52
    a212:	f888 3006 	strb.w	r3, [r8, #6]
    a216:	2300      	movs	r3, #0
    a218:	f888 3007 	strb.w	r3, [r8, #7]
    a21c:	2300      	movs	r3, #0
    a21e:	e9cd 7b06 	strd	r7, fp, [sp, #24]
    a222:	469b      	mov	fp, r3
    a224:	2400      	movs	r4, #0
    a226:	4622      	mov	r2, r4
    a228:	f816 1b01 	ldrb.w	r1, [r6], #1
    a22c:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    a230:	4093      	lsls	r3, r2
    a232:	0608      	lsls	r0, r1, #24
    a234:	ea44 0403 	orr.w	r4, r4, r3
    a238:	f102 0207 	add.w	r2, r2, #7
    a23c:	d4f4      	bmi.n	a228 <__gxx_personality_v0+0x31c>
    a23e:	2a1f      	cmp	r2, #31
    a240:	d805      	bhi.n	a24e <__gxx_personality_v0+0x342>
    a242:	064b      	lsls	r3, r1, #25
    a244:	d503      	bpl.n	a24e <__gxx_personality_v0+0x342>
    a246:	2301      	movs	r3, #1
    a248:	4093      	lsls	r3, r2
    a24a:	425b      	negs	r3, r3
    a24c:	431c      	orrs	r4, r3
    a24e:	2500      	movs	r5, #0
    a250:	4630      	mov	r0, r6
    a252:	462a      	mov	r2, r5
    a254:	f810 1b01 	ldrb.w	r1, [r0], #1
    a258:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    a25c:	4093      	lsls	r3, r2
    a25e:	060f      	lsls	r7, r1, #24
    a260:	ea45 0503 	orr.w	r5, r5, r3
    a264:	f102 0207 	add.w	r2, r2, #7
    a268:	d4f4      	bmi.n	a254 <__gxx_personality_v0+0x348>
    a26a:	2a1f      	cmp	r2, #31
    a26c:	d805      	bhi.n	a27a <__gxx_personality_v0+0x36e>
    a26e:	0649      	lsls	r1, r1, #25
    a270:	d503      	bpl.n	a27a <__gxx_personality_v0+0x36e>
    a272:	2301      	movs	r3, #1
    a274:	4093      	lsls	r3, r2
    a276:	425b      	negs	r3, r3
    a278:	431d      	orrs	r5, r3
    a27a:	2c00      	cmp	r4, #0
    a27c:	d035      	beq.n	a2ea <__gxx_personality_v0+0x3de>
    a27e:	dc37      	bgt.n	a2f0 <__gxx_personality_v0+0x3e4>
    a280:	f1b8 0f00 	cmp.w	r8, #0
    a284:	d002      	beq.n	a28c <__gxx_personality_v0+0x380>
    a286:	9b05      	ldr	r3, [sp, #20]
    a288:	2b00      	cmp	r3, #0
    a28a:	d04d      	beq.n	a328 <__gxx_personality_v0+0x41c>
    a28c:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
    a290:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a292:	ebaa 0a04 	sub.w	sl, sl, r4
    a296:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
    a29a:	b1bb      	cbz	r3, a2cc <__gxx_personality_v0+0x3c0>
    a29c:	2d00      	cmp	r5, #0
    a29e:	d070      	beq.n	a382 <__gxx_personality_v0+0x476>
    a2a0:	442e      	add	r6, r5
    a2a2:	e7bf      	b.n	a224 <__gxx_personality_v0+0x318>
    a2a4:	00a3      	lsls	r3, r4, #2
    a2a6:	425b      	negs	r3, r3
    a2a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    a2aa:	990e      	ldr	r1, [sp, #56]	; 0x38
    a2ac:	441a      	add	r2, r3
    a2ae:	464b      	mov	r3, r9
    a2b0:	f7ff fd5e 	bl	9d70 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    a2b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
    a2b6:	b149      	cbz	r1, a2cc <__gxx_personality_v0+0x3c0>
    a2b8:	f1b8 0f00 	cmp.w	r8, #0
    a2bc:	d0ee      	beq.n	a29c <__gxx_personality_v0+0x390>
    a2be:	2200      	movs	r2, #0
    a2c0:	4640      	mov	r0, r8
    a2c2:	ab08      	add	r3, sp, #32
    a2c4:	f7ff fb52 	bl	996c <__cxa_type_match>
    a2c8:	2800      	cmp	r0, #0
    a2ca:	d0e7      	beq.n	a29c <__gxx_personality_v0+0x390>
    a2cc:	9b02      	ldr	r3, [sp, #8]
    a2ce:	e9dd 7b06 	ldrd	r7, fp, [sp, #24]
    a2d2:	07d9      	lsls	r1, r3, #31
    a2d4:	f53f aeaa 	bmi.w	a02c <__gxx_personality_v0+0x120>
    a2d8:	9b05      	ldr	r3, [sp, #20]
    a2da:	2b00      	cmp	r3, #0
    a2dc:	f43f aeff 	beq.w	a0de <__gxx_personality_v0+0x1d2>
    a2e0:	2c00      	cmp	r4, #0
    a2e2:	f6bf aefe 	bge.w	a0e2 <__gxx_personality_v0+0x1d6>
    a2e6:	f7f9 f9b9 	bl	365c <std::unexpected()>
    a2ea:	f04f 0b01 	mov.w	fp, #1
    a2ee:	e7d5      	b.n	a29c <__gxx_personality_v0+0x390>
    a2f0:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    a2f4:	28ff      	cmp	r0, #255	; 0xff
    a2f6:	d030      	beq.n	a35a <__gxx_personality_v0+0x44e>
    a2f8:	f000 0307 	and.w	r3, r0, #7
    a2fc:	2b04      	cmp	r3, #4
    a2fe:	f63f ae1e 	bhi.w	9f3e <__gxx_personality_v0+0x32>
    a302:	a201      	add	r2, pc, #4	; (adr r2, a308 <__gxx_personality_v0+0x3fc>)
    a304:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    a308:	0000a2a5 	.word	0x0000a2a5
    a30c:	00009f3f 	.word	0x00009f3f
    a310:	0000a323 	.word	0x0000a323
    a314:	0000a2a5 	.word	0x0000a2a5
    a318:	0000a31d 	.word	0x0000a31d
    a31c:	00e3      	lsls	r3, r4, #3
    a31e:	425b      	negs	r3, r3
    a320:	e7c2      	b.n	a2a8 <__gxx_personality_v0+0x39c>
    a322:	0063      	lsls	r3, r4, #1
    a324:	425b      	negs	r3, r3
    a326:	e7bf      	b.n	a2a8 <__gxx_personality_v0+0x39c>
    a328:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
    a32c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    a32e:	ebaa 0a04 	sub.w	sl, sl, r4
    a332:	9b08      	ldr	r3, [sp, #32]
    a334:	f857 102a 	ldr.w	r1, [r7, sl, lsl #2]
    a338:	930b      	str	r3, [sp, #44]	; 0x2c
    a33a:	eb07 078a 	add.w	r7, r7, sl, lsl #2
    a33e:	b919      	cbnz	r1, a348 <__gxx_personality_v0+0x43c>
    a340:	e00d      	b.n	a35e <__gxx_personality_v0+0x452>
    a342:	f857 1f04 	ldr.w	r1, [r7, #4]!
    a346:	b151      	cbz	r1, a35e <__gxx_personality_v0+0x452>
    a348:	464b      	mov	r3, r9
    a34a:	2200      	movs	r2, #0
    a34c:	4640      	mov	r0, r8
    a34e:	4439      	add	r1, r7
    a350:	f7ff fb0c 	bl	996c <__cxa_type_match>
    a354:	2800      	cmp	r0, #0
    a356:	d0f4      	beq.n	a342 <__gxx_personality_v0+0x436>
    a358:	e7a0      	b.n	a29c <__gxx_personality_v0+0x390>
    a35a:	2300      	movs	r3, #0
    a35c:	e7a4      	b.n	a2a8 <__gxx_personality_v0+0x39c>
    a35e:	9b02      	ldr	r3, [sp, #8]
    a360:	4655      	mov	r5, sl
    a362:	e9dd 7b06 	ldrd	r7, fp, [sp, #24]
    a366:	07da      	lsls	r2, r3, #31
    a368:	f53f ae60 	bmi.w	a02c <__gxx_personality_v0+0x120>
    a36c:	e70c      	b.n	a188 <__gxx_personality_v0+0x27c>
    a36e:	f898 3007 	ldrb.w	r3, [r8, #7]
    a372:	2b01      	cmp	r3, #1
    a374:	bf0c      	ite	eq
    a376:	f858 3c20 	ldreq.w	r3, [r8, #-32]
    a37a:	f108 0358 	addne.w	r3, r8, #88	; 0x58
    a37e:	9308      	str	r3, [sp, #32]
    a380:	e74c      	b.n	a21c <__gxx_personality_v0+0x310>
    a382:	465b      	mov	r3, fp
    a384:	9f06      	ldr	r7, [sp, #24]
    a386:	2b00      	cmp	r3, #0
    a388:	f43f adcd 	beq.w	9f26 <__gxx_personality_v0+0x1a>
    a38c:	9b02      	ldr	r3, [sp, #8]
    a38e:	07db      	lsls	r3, r3, #31
    a390:	f53f adc9 	bmi.w	9f26 <__gxx_personality_v0+0x1a>
    a394:	e6ec      	b.n	a170 <__gxx_personality_v0+0x264>
    a396:	07de      	lsls	r6, r3, #31
    a398:	f53f adc5 	bmi.w	9f26 <__gxx_personality_v0+0x1a>
    a39c:	9b02      	ldr	r3, [sp, #8]
    a39e:	f013 0408 	ands.w	r4, r3, #8
    a3a2:	f47f aee5 	bne.w	a170 <__gxx_personality_v0+0x264>
    a3a6:	2502      	movs	r5, #2
    a3a8:	e69c      	b.n	a0e4 <__gxx_personality_v0+0x1d8>
    a3aa:	f7ff fc47 	bl	9c3c <__cxa_begin_catch>
    a3ae:	e672      	b.n	a096 <__gxx_personality_v0+0x18a>

0000a3b0 <__cxa_current_exception_type>:
    a3b0:	b508      	push	{r3, lr}
    a3b2:	f7ff fcd9 	bl	9d68 <__cxa_get_globals>
    a3b6:	6800      	ldr	r0, [r0, #0]
    a3b8:	b130      	cbz	r0, a3c8 <__cxa_current_exception_type+0x18>
    a3ba:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
    a3be:	2b01      	cmp	r3, #1
    a3c0:	bf04      	itt	eq
    a3c2:	6800      	ldreq	r0, [r0, #0]
    a3c4:	3878      	subeq	r0, #120	; 0x78
    a3c6:	6800      	ldr	r0, [r0, #0]
    a3c8:	bd08      	pop	{r3, pc}
    a3ca:	bf00      	nop

0000a3cc <ceilf>:
    a3cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a3ce:	f3c0 55c7 	ubfx	r5, r0, #23, #8
    a3d2:	3d7f      	subs	r5, #127	; 0x7f
    a3d4:	2d16      	cmp	r5, #22
    a3d6:	4604      	mov	r4, r0
    a3d8:	f020 4700 	bic.w	r7, r0, #2147483648	; 0x80000000
    a3dc:	dc26      	bgt.n	a42c <ceilf+0x60>
    a3de:	2d00      	cmp	r5, #0
    a3e0:	4606      	mov	r6, r0
    a3e2:	db14      	blt.n	a40e <ceilf+0x42>
    a3e4:	4f16      	ldr	r7, [pc, #88]	; (a440 <ceilf+0x74>)
    a3e6:	412f      	asrs	r7, r5
    a3e8:	4238      	tst	r0, r7
    a3ea:	d01d      	beq.n	a428 <ceilf+0x5c>
    a3ec:	4915      	ldr	r1, [pc, #84]	; (a444 <ceilf+0x78>)
    a3ee:	f000 f95f 	bl	a6b0 <__addsf3>
    a3f2:	2100      	movs	r1, #0
    a3f4:	f000 fc20 	bl	ac38 <__aeabi_fcmpgt>
    a3f8:	b1b0      	cbz	r0, a428 <ceilf+0x5c>
    a3fa:	2c00      	cmp	r4, #0
    a3fc:	dd04      	ble.n	a408 <ceilf+0x3c>
    a3fe:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
    a402:	fa43 f505 	asr.w	r5, r3, r5
    a406:	442e      	add	r6, r5
    a408:	ea26 0007 	bic.w	r0, r6, r7
    a40c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a40e:	490d      	ldr	r1, [pc, #52]	; (a444 <ceilf+0x78>)
    a410:	f000 f94e 	bl	a6b0 <__addsf3>
    a414:	2100      	movs	r1, #0
    a416:	f000 fc0f 	bl	ac38 <__aeabi_fcmpgt>
    a41a:	b128      	cbz	r0, a428 <ceilf+0x5c>
    a41c:	2c00      	cmp	r4, #0
    a41e:	db0c      	blt.n	a43a <ceilf+0x6e>
    a420:	b117      	cbz	r7, a428 <ceilf+0x5c>
    a422:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
    a426:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a428:	4620      	mov	r0, r4
    a42a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a42c:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
    a430:	d3fa      	bcc.n	a428 <ceilf+0x5c>
    a432:	4601      	mov	r1, r0
    a434:	f000 f93c 	bl	a6b0 <__addsf3>
    a438:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a43a:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
    a43e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a440:	007fffff 	.word	0x007fffff
    a444:	7149f2ca 	.word	0x7149f2ca

0000a448 <floorf>:
    a448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a44a:	f3c0 55c7 	ubfx	r5, r0, #23, #8
    a44e:	3d7f      	subs	r5, #127	; 0x7f
    a450:	2d16      	cmp	r5, #22
    a452:	4604      	mov	r4, r0
    a454:	f020 4700 	bic.w	r7, r0, #2147483648	; 0x80000000
    a458:	dc24      	bgt.n	a4a4 <floorf+0x5c>
    a45a:	2d00      	cmp	r5, #0
    a45c:	4606      	mov	r6, r0
    a45e:	db14      	blt.n	a48a <floorf+0x42>
    a460:	4f16      	ldr	r7, [pc, #88]	; (a4bc <floorf+0x74>)
    a462:	412f      	asrs	r7, r5
    a464:	4238      	tst	r0, r7
    a466:	d01b      	beq.n	a4a0 <floorf+0x58>
    a468:	4915      	ldr	r1, [pc, #84]	; (a4c0 <floorf+0x78>)
    a46a:	f000 f921 	bl	a6b0 <__addsf3>
    a46e:	2100      	movs	r1, #0
    a470:	f000 fbe2 	bl	ac38 <__aeabi_fcmpgt>
    a474:	b1a0      	cbz	r0, a4a0 <floorf+0x58>
    a476:	2c00      	cmp	r4, #0
    a478:	da04      	bge.n	a484 <floorf+0x3c>
    a47a:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
    a47e:	fa43 f505 	asr.w	r5, r3, r5
    a482:	442e      	add	r6, r5
    a484:	ea26 0007 	bic.w	r0, r6, r7
    a488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a48a:	490d      	ldr	r1, [pc, #52]	; (a4c0 <floorf+0x78>)
    a48c:	f000 f910 	bl	a6b0 <__addsf3>
    a490:	2100      	movs	r1, #0
    a492:	f000 fbd1 	bl	ac38 <__aeabi_fcmpgt>
    a496:	b118      	cbz	r0, a4a0 <floorf+0x58>
    a498:	2c00      	cmp	r4, #0
    a49a:	db0a      	blt.n	a4b2 <floorf+0x6a>
    a49c:	2000      	movs	r0, #0
    a49e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a4a0:	4620      	mov	r0, r4
    a4a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a4a4:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
    a4a8:	d3fa      	bcc.n	a4a0 <floorf+0x58>
    a4aa:	4601      	mov	r1, r0
    a4ac:	f000 f900 	bl	a6b0 <__addsf3>
    a4b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a4b2:	2f00      	cmp	r7, #0
    a4b4:	d0f4      	beq.n	a4a0 <floorf+0x58>
    a4b6:	4803      	ldr	r0, [pc, #12]	; (a4c4 <floorf+0x7c>)
    a4b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a4ba:	bf00      	nop
    a4bc:	007fffff 	.word	0x007fffff
    a4c0:	7149f2ca 	.word	0x7149f2ca
    a4c4:	bf800000 	.word	0xbf800000

0000a4c8 <roundf>:
    a4c8:	b508      	push	{r3, lr}
    a4ca:	f3c0 53c7 	ubfx	r3, r0, #23, #8
    a4ce:	3b7f      	subs	r3, #127	; 0x7f
    a4d0:	2b16      	cmp	r3, #22
    a4d2:	4601      	mov	r1, r0
    a4d4:	dc15      	bgt.n	a502 <roundf+0x3a>
    a4d6:	2b00      	cmp	r3, #0
    a4d8:	4602      	mov	r2, r0
    a4da:	db0b      	blt.n	a4f4 <roundf+0x2c>
    a4dc:	480b      	ldr	r0, [pc, #44]	; (a50c <roundf+0x44>)
    a4de:	4118      	asrs	r0, r3
    a4e0:	4201      	tst	r1, r0
    a4e2:	d005      	beq.n	a4f0 <roundf+0x28>
    a4e4:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
    a4e8:	4119      	asrs	r1, r3
    a4ea:	4411      	add	r1, r2
    a4ec:	ea21 0100 	bic.w	r1, r1, r0
    a4f0:	4608      	mov	r0, r1
    a4f2:	bd08      	pop	{r3, pc}
    a4f4:	3301      	adds	r3, #1
    a4f6:	f000 4100 	and.w	r1, r0, #2147483648	; 0x80000000
    a4fa:	d1f9      	bne.n	a4f0 <roundf+0x28>
    a4fc:	f041 517e 	orr.w	r1, r1, #1065353216	; 0x3f800000
    a500:	e7f6      	b.n	a4f0 <roundf+0x28>
    a502:	2b80      	cmp	r3, #128	; 0x80
    a504:	d1f4      	bne.n	a4f0 <roundf+0x28>
    a506:	f000 f8d3 	bl	a6b0 <__addsf3>
    a50a:	bd08      	pop	{r3, pc}
    a50c:	007fffff 	.word	0x007fffff
    a510:	f04f 0cff 	mov.w	ip, #255	; 0xff
    a514:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    a518:	bf1e      	ittt	ne
    a51a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    a51e:	ea92 0f0c 	teqne	r2, ip
    a522:	ea93 0f0c 	teqne	r3, ip
    a526:	d06f      	beq.n	a608 <roundf+0x140>
    a528:	441a      	add	r2, r3
    a52a:	ea80 0c01 	eor.w	ip, r0, r1
    a52e:	0240      	lsls	r0, r0, #9
    a530:	bf18      	it	ne
    a532:	ea5f 2141 	movsne.w	r1, r1, lsl #9
    a536:	d01e      	beq.n	a576 <roundf+0xae>
    a538:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
    a53c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
    a540:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
    a544:	fba0 3101 	umull	r3, r1, r0, r1
    a548:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    a54c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
    a550:	bf3e      	ittt	cc
    a552:	0049      	lslcc	r1, r1, #1
    a554:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
    a558:	005b      	lslcc	r3, r3, #1
    a55a:	ea40 0001 	orr.w	r0, r0, r1
    a55e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
    a562:	2afd      	cmp	r2, #253	; 0xfd
    a564:	d81d      	bhi.n	a5a2 <roundf+0xda>
    a566:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
    a56a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    a56e:	bf08      	it	eq
    a570:	f020 0001 	biceq.w	r0, r0, #1
    a574:	4770      	bx	lr
    a576:	f090 0f00 	teq	r0, #0
    a57a:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    a57e:	bf08      	it	eq
    a580:	0249      	lsleq	r1, r1, #9
    a582:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    a586:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
    a58a:	3a7f      	subs	r2, #127	; 0x7f
    a58c:	bfc2      	ittt	gt
    a58e:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    a592:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    a596:	4770      	bxgt	lr
    a598:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a59c:	f04f 0300 	mov.w	r3, #0
    a5a0:	3a01      	subs	r2, #1
    a5a2:	dc5d      	bgt.n	a660 <roundf+0x198>
    a5a4:	f112 0f19 	cmn.w	r2, #25
    a5a8:	bfdc      	itt	le
    a5aa:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
    a5ae:	4770      	bxle	lr
    a5b0:	f1c2 0200 	rsb	r2, r2, #0
    a5b4:	0041      	lsls	r1, r0, #1
    a5b6:	fa21 f102 	lsr.w	r1, r1, r2
    a5ba:	f1c2 0220 	rsb	r2, r2, #32
    a5be:	fa00 fc02 	lsl.w	ip, r0, r2
    a5c2:	ea5f 0031 	movs.w	r0, r1, rrx
    a5c6:	f140 0000 	adc.w	r0, r0, #0
    a5ca:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
    a5ce:	bf08      	it	eq
    a5d0:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    a5d4:	4770      	bx	lr
    a5d6:	f092 0f00 	teq	r2, #0
    a5da:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    a5de:	bf02      	ittt	eq
    a5e0:	0040      	lsleq	r0, r0, #1
    a5e2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    a5e6:	3a01      	subeq	r2, #1
    a5e8:	d0f9      	beq.n	a5de <roundf+0x116>
    a5ea:	ea40 000c 	orr.w	r0, r0, ip
    a5ee:	f093 0f00 	teq	r3, #0
    a5f2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    a5f6:	bf02      	ittt	eq
    a5f8:	0049      	lsleq	r1, r1, #1
    a5fa:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    a5fe:	3b01      	subeq	r3, #1
    a600:	d0f9      	beq.n	a5f6 <roundf+0x12e>
    a602:	ea41 010c 	orr.w	r1, r1, ip
    a606:	e78f      	b.n	a528 <roundf+0x60>
    a608:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    a60c:	ea92 0f0c 	teq	r2, ip
    a610:	bf18      	it	ne
    a612:	ea93 0f0c 	teqne	r3, ip
    a616:	d00a      	beq.n	a62e <roundf+0x166>
    a618:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    a61c:	bf18      	it	ne
    a61e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    a622:	d1d8      	bne.n	a5d6 <roundf+0x10e>
    a624:	ea80 0001 	eor.w	r0, r0, r1
    a628:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    a62c:	4770      	bx	lr
    a62e:	f090 0f00 	teq	r0, #0
    a632:	bf17      	itett	ne
    a634:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
    a638:	4608      	moveq	r0, r1
    a63a:	f091 0f00 	teqne	r1, #0
    a63e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
    a642:	d014      	beq.n	a66e <roundf+0x1a6>
    a644:	ea92 0f0c 	teq	r2, ip
    a648:	d101      	bne.n	a64e <roundf+0x186>
    a64a:	0242      	lsls	r2, r0, #9
    a64c:	d10f      	bne.n	a66e <roundf+0x1a6>
    a64e:	ea93 0f0c 	teq	r3, ip
    a652:	d103      	bne.n	a65c <roundf+0x194>
    a654:	024b      	lsls	r3, r1, #9
    a656:	bf18      	it	ne
    a658:	4608      	movne	r0, r1
    a65a:	d108      	bne.n	a66e <roundf+0x1a6>
    a65c:	ea80 0001 	eor.w	r0, r0, r1
    a660:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    a664:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    a668:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a66c:	4770      	bx	lr
    a66e:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    a672:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
    a676:	4770      	bx	lr

0000a678 <__aeabi_dcmpun>:
    a678:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a67c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a680:	d102      	bne.n	a688 <__aeabi_dcmpun+0x10>
    a682:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    a686:	d10a      	bne.n	a69e <__aeabi_dcmpun+0x26>
    a688:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a68c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a690:	d102      	bne.n	a698 <__aeabi_dcmpun+0x20>
    a692:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    a696:	d102      	bne.n	a69e <__aeabi_dcmpun+0x26>
    a698:	f04f 0000 	mov.w	r0, #0
    a69c:	4770      	bx	lr
    a69e:	f04f 0001 	mov.w	r0, #1
    a6a2:	4770      	bx	lr

0000a6a4 <__aeabi_frsub>:
    a6a4:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
    a6a8:	e002      	b.n	a6b0 <__addsf3>
    a6aa:	bf00      	nop

0000a6ac <__aeabi_fsub>:
    a6ac:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0000a6b0 <__addsf3>:
    a6b0:	0042      	lsls	r2, r0, #1
    a6b2:	bf1f      	itttt	ne
    a6b4:	ea5f 0341 	movsne.w	r3, r1, lsl #1
    a6b8:	ea92 0f03 	teqne	r2, r3
    a6bc:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
    a6c0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    a6c4:	d06a      	beq.n	a79c <__addsf3+0xec>
    a6c6:	ea4f 6212 	mov.w	r2, r2, lsr #24
    a6ca:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
    a6ce:	bfc1      	itttt	gt
    a6d0:	18d2      	addgt	r2, r2, r3
    a6d2:	4041      	eorgt	r1, r0
    a6d4:	4048      	eorgt	r0, r1
    a6d6:	4041      	eorgt	r1, r0
    a6d8:	bfb8      	it	lt
    a6da:	425b      	neglt	r3, r3
    a6dc:	2b19      	cmp	r3, #25
    a6de:	bf88      	it	hi
    a6e0:	4770      	bxhi	lr
    a6e2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
    a6e6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a6ea:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    a6ee:	bf18      	it	ne
    a6f0:	4240      	negne	r0, r0
    a6f2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    a6f6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
    a6fa:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
    a6fe:	bf18      	it	ne
    a700:	4249      	negne	r1, r1
    a702:	ea92 0f03 	teq	r2, r3
    a706:	d03f      	beq.n	a788 <__addsf3+0xd8>
    a708:	f1a2 0201 	sub.w	r2, r2, #1
    a70c:	fa41 fc03 	asr.w	ip, r1, r3
    a710:	eb10 000c 	adds.w	r0, r0, ip
    a714:	f1c3 0320 	rsb	r3, r3, #32
    a718:	fa01 f103 	lsl.w	r1, r1, r3
    a71c:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
    a720:	d502      	bpl.n	a728 <__addsf3+0x78>
    a722:	4249      	negs	r1, r1
    a724:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
    a728:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
    a72c:	d313      	bcc.n	a756 <__addsf3+0xa6>
    a72e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
    a732:	d306      	bcc.n	a742 <__addsf3+0x92>
    a734:	0840      	lsrs	r0, r0, #1
    a736:	ea4f 0131 	mov.w	r1, r1, rrx
    a73a:	f102 0201 	add.w	r2, r2, #1
    a73e:	2afe      	cmp	r2, #254	; 0xfe
    a740:	d251      	bcs.n	a7e6 <__addsf3+0x136>
    a742:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
    a746:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    a74a:	bf08      	it	eq
    a74c:	f020 0001 	biceq.w	r0, r0, #1
    a750:	ea40 0003 	orr.w	r0, r0, r3
    a754:	4770      	bx	lr
    a756:	0049      	lsls	r1, r1, #1
    a758:	eb40 0000 	adc.w	r0, r0, r0
    a75c:	3a01      	subs	r2, #1
    a75e:	bf28      	it	cs
    a760:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
    a764:	d2ed      	bcs.n	a742 <__addsf3+0x92>
    a766:	fab0 fc80 	clz	ip, r0
    a76a:	f1ac 0c08 	sub.w	ip, ip, #8
    a76e:	ebb2 020c 	subs.w	r2, r2, ip
    a772:	fa00 f00c 	lsl.w	r0, r0, ip
    a776:	bfaa      	itet	ge
    a778:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
    a77c:	4252      	neglt	r2, r2
    a77e:	4318      	orrge	r0, r3
    a780:	bfbc      	itt	lt
    a782:	40d0      	lsrlt	r0, r2
    a784:	4318      	orrlt	r0, r3
    a786:	4770      	bx	lr
    a788:	f092 0f00 	teq	r2, #0
    a78c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
    a790:	bf06      	itte	eq
    a792:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
    a796:	3201      	addeq	r2, #1
    a798:	3b01      	subne	r3, #1
    a79a:	e7b5      	b.n	a708 <__addsf3+0x58>
    a79c:	ea4f 0341 	mov.w	r3, r1, lsl #1
    a7a0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    a7a4:	bf18      	it	ne
    a7a6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    a7aa:	d021      	beq.n	a7f0 <__addsf3+0x140>
    a7ac:	ea92 0f03 	teq	r2, r3
    a7b0:	d004      	beq.n	a7bc <__addsf3+0x10c>
    a7b2:	f092 0f00 	teq	r2, #0
    a7b6:	bf08      	it	eq
    a7b8:	4608      	moveq	r0, r1
    a7ba:	4770      	bx	lr
    a7bc:	ea90 0f01 	teq	r0, r1
    a7c0:	bf1c      	itt	ne
    a7c2:	2000      	movne	r0, #0
    a7c4:	4770      	bxne	lr
    a7c6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
    a7ca:	d104      	bne.n	a7d6 <__addsf3+0x126>
    a7cc:	0040      	lsls	r0, r0, #1
    a7ce:	bf28      	it	cs
    a7d0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
    a7d4:	4770      	bx	lr
    a7d6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
    a7da:	bf3c      	itt	cc
    a7dc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
    a7e0:	4770      	bxcc	lr
    a7e2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
    a7e6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
    a7ea:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a7ee:	4770      	bx	lr
    a7f0:	ea7f 6222 	mvns.w	r2, r2, asr #24
    a7f4:	bf16      	itet	ne
    a7f6:	4608      	movne	r0, r1
    a7f8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
    a7fc:	4601      	movne	r1, r0
    a7fe:	0242      	lsls	r2, r0, #9
    a800:	bf06      	itte	eq
    a802:	ea5f 2341 	movseq.w	r3, r1, lsl #9
    a806:	ea90 0f01 	teqeq	r0, r1
    a80a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
    a80e:	4770      	bx	lr

0000a810 <__aeabi_ui2f>:
    a810:	f04f 0300 	mov.w	r3, #0
    a814:	e004      	b.n	a820 <__aeabi_i2f+0x8>
    a816:	bf00      	nop

0000a818 <__aeabi_i2f>:
    a818:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
    a81c:	bf48      	it	mi
    a81e:	4240      	negmi	r0, r0
    a820:	ea5f 0c00 	movs.w	ip, r0
    a824:	bf08      	it	eq
    a826:	4770      	bxeq	lr
    a828:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
    a82c:	4601      	mov	r1, r0
    a82e:	f04f 0000 	mov.w	r0, #0
    a832:	e01c      	b.n	a86e <__aeabi_l2f+0x2a>

0000a834 <__aeabi_ul2f>:
    a834:	ea50 0201 	orrs.w	r2, r0, r1
    a838:	bf08      	it	eq
    a83a:	4770      	bxeq	lr
    a83c:	f04f 0300 	mov.w	r3, #0
    a840:	e00a      	b.n	a858 <__aeabi_l2f+0x14>
    a842:	bf00      	nop

0000a844 <__aeabi_l2f>:
    a844:	ea50 0201 	orrs.w	r2, r0, r1
    a848:	bf08      	it	eq
    a84a:	4770      	bxeq	lr
    a84c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
    a850:	d502      	bpl.n	a858 <__aeabi_l2f+0x14>
    a852:	4240      	negs	r0, r0
    a854:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    a858:	ea5f 0c01 	movs.w	ip, r1
    a85c:	bf02      	ittt	eq
    a85e:	4684      	moveq	ip, r0
    a860:	4601      	moveq	r1, r0
    a862:	2000      	moveq	r0, #0
    a864:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
    a868:	bf08      	it	eq
    a86a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
    a86e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
    a872:	fabc f28c 	clz	r2, ip
    a876:	3a08      	subs	r2, #8
    a878:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
    a87c:	db10      	blt.n	a8a0 <__aeabi_l2f+0x5c>
    a87e:	fa01 fc02 	lsl.w	ip, r1, r2
    a882:	4463      	add	r3, ip
    a884:	fa00 fc02 	lsl.w	ip, r0, r2
    a888:	f1c2 0220 	rsb	r2, r2, #32
    a88c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    a890:	fa20 f202 	lsr.w	r2, r0, r2
    a894:	eb43 0002 	adc.w	r0, r3, r2
    a898:	bf08      	it	eq
    a89a:	f020 0001 	biceq.w	r0, r0, #1
    a89e:	4770      	bx	lr
    a8a0:	f102 0220 	add.w	r2, r2, #32
    a8a4:	fa01 fc02 	lsl.w	ip, r1, r2
    a8a8:	f1c2 0220 	rsb	r2, r2, #32
    a8ac:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
    a8b0:	fa21 f202 	lsr.w	r2, r1, r2
    a8b4:	eb43 0002 	adc.w	r0, r3, r2
    a8b8:	bf08      	it	eq
    a8ba:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    a8be:	4770      	bx	lr

0000a8c0 <__aeabi_fmul>:
    a8c0:	f04f 0cff 	mov.w	ip, #255	; 0xff
    a8c4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    a8c8:	bf1e      	ittt	ne
    a8ca:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    a8ce:	ea92 0f0c 	teqne	r2, ip
    a8d2:	ea93 0f0c 	teqne	r3, ip
    a8d6:	d06f      	beq.n	a9b8 <__aeabi_fmul+0xf8>
    a8d8:	441a      	add	r2, r3
    a8da:	ea80 0c01 	eor.w	ip, r0, r1
    a8de:	0240      	lsls	r0, r0, #9
    a8e0:	bf18      	it	ne
    a8e2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
    a8e6:	d01e      	beq.n	a926 <__aeabi_fmul+0x66>
    a8e8:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
    a8ec:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
    a8f0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
    a8f4:	fba0 3101 	umull	r3, r1, r0, r1
    a8f8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    a8fc:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
    a900:	bf3e      	ittt	cc
    a902:	0049      	lslcc	r1, r1, #1
    a904:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
    a908:	005b      	lslcc	r3, r3, #1
    a90a:	ea40 0001 	orr.w	r0, r0, r1
    a90e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
    a912:	2afd      	cmp	r2, #253	; 0xfd
    a914:	d81d      	bhi.n	a952 <__aeabi_fmul+0x92>
    a916:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
    a91a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    a91e:	bf08      	it	eq
    a920:	f020 0001 	biceq.w	r0, r0, #1
    a924:	4770      	bx	lr
    a926:	f090 0f00 	teq	r0, #0
    a92a:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    a92e:	bf08      	it	eq
    a930:	0249      	lsleq	r1, r1, #9
    a932:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    a936:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
    a93a:	3a7f      	subs	r2, #127	; 0x7f
    a93c:	bfc2      	ittt	gt
    a93e:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    a942:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    a946:	4770      	bxgt	lr
    a948:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a94c:	f04f 0300 	mov.w	r3, #0
    a950:	3a01      	subs	r2, #1
    a952:	dc5d      	bgt.n	aa10 <__aeabi_fmul+0x150>
    a954:	f112 0f19 	cmn.w	r2, #25
    a958:	bfdc      	itt	le
    a95a:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
    a95e:	4770      	bxle	lr
    a960:	f1c2 0200 	rsb	r2, r2, #0
    a964:	0041      	lsls	r1, r0, #1
    a966:	fa21 f102 	lsr.w	r1, r1, r2
    a96a:	f1c2 0220 	rsb	r2, r2, #32
    a96e:	fa00 fc02 	lsl.w	ip, r0, r2
    a972:	ea5f 0031 	movs.w	r0, r1, rrx
    a976:	f140 0000 	adc.w	r0, r0, #0
    a97a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
    a97e:	bf08      	it	eq
    a980:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    a984:	4770      	bx	lr
    a986:	f092 0f00 	teq	r2, #0
    a98a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    a98e:	bf02      	ittt	eq
    a990:	0040      	lsleq	r0, r0, #1
    a992:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    a996:	3a01      	subeq	r2, #1
    a998:	d0f9      	beq.n	a98e <__aeabi_fmul+0xce>
    a99a:	ea40 000c 	orr.w	r0, r0, ip
    a99e:	f093 0f00 	teq	r3, #0
    a9a2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    a9a6:	bf02      	ittt	eq
    a9a8:	0049      	lsleq	r1, r1, #1
    a9aa:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    a9ae:	3b01      	subeq	r3, #1
    a9b0:	d0f9      	beq.n	a9a6 <__aeabi_fmul+0xe6>
    a9b2:	ea41 010c 	orr.w	r1, r1, ip
    a9b6:	e78f      	b.n	a8d8 <__aeabi_fmul+0x18>
    a9b8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    a9bc:	ea92 0f0c 	teq	r2, ip
    a9c0:	bf18      	it	ne
    a9c2:	ea93 0f0c 	teqne	r3, ip
    a9c6:	d00a      	beq.n	a9de <__aeabi_fmul+0x11e>
    a9c8:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    a9cc:	bf18      	it	ne
    a9ce:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    a9d2:	d1d8      	bne.n	a986 <__aeabi_fmul+0xc6>
    a9d4:	ea80 0001 	eor.w	r0, r0, r1
    a9d8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    a9dc:	4770      	bx	lr
    a9de:	f090 0f00 	teq	r0, #0
    a9e2:	bf17      	itett	ne
    a9e4:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
    a9e8:	4608      	moveq	r0, r1
    a9ea:	f091 0f00 	teqne	r1, #0
    a9ee:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
    a9f2:	d014      	beq.n	aa1e <__aeabi_fmul+0x15e>
    a9f4:	ea92 0f0c 	teq	r2, ip
    a9f8:	d101      	bne.n	a9fe <__aeabi_fmul+0x13e>
    a9fa:	0242      	lsls	r2, r0, #9
    a9fc:	d10f      	bne.n	aa1e <__aeabi_fmul+0x15e>
    a9fe:	ea93 0f0c 	teq	r3, ip
    aa02:	d103      	bne.n	aa0c <__aeabi_fmul+0x14c>
    aa04:	024b      	lsls	r3, r1, #9
    aa06:	bf18      	it	ne
    aa08:	4608      	movne	r0, r1
    aa0a:	d108      	bne.n	aa1e <__aeabi_fmul+0x15e>
    aa0c:	ea80 0001 	eor.w	r0, r0, r1
    aa10:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    aa14:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    aa18:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    aa1c:	4770      	bx	lr
    aa1e:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    aa22:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
    aa26:	4770      	bx	lr

0000aa28 <__aeabi_fdiv>:
    aa28:	f04f 0cff 	mov.w	ip, #255	; 0xff
    aa2c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    aa30:	bf1e      	ittt	ne
    aa32:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    aa36:	ea92 0f0c 	teqne	r2, ip
    aa3a:	ea93 0f0c 	teqne	r3, ip
    aa3e:	d069      	beq.n	ab14 <__aeabi_fdiv+0xec>
    aa40:	eba2 0203 	sub.w	r2, r2, r3
    aa44:	ea80 0c01 	eor.w	ip, r0, r1
    aa48:	0249      	lsls	r1, r1, #9
    aa4a:	ea4f 2040 	mov.w	r0, r0, lsl #9
    aa4e:	d037      	beq.n	aac0 <__aeabi_fdiv+0x98>
    aa50:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    aa54:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
    aa58:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
    aa5c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    aa60:	428b      	cmp	r3, r1
    aa62:	bf38      	it	cc
    aa64:	005b      	lslcc	r3, r3, #1
    aa66:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
    aa6a:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
    aa6e:	428b      	cmp	r3, r1
    aa70:	bf24      	itt	cs
    aa72:	1a5b      	subcs	r3, r3, r1
    aa74:	ea40 000c 	orrcs.w	r0, r0, ip
    aa78:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
    aa7c:	bf24      	itt	cs
    aa7e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
    aa82:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    aa86:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
    aa8a:	bf24      	itt	cs
    aa8c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
    aa90:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    aa94:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
    aa98:	bf24      	itt	cs
    aa9a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
    aa9e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    aaa2:	011b      	lsls	r3, r3, #4
    aaa4:	bf18      	it	ne
    aaa6:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
    aaaa:	d1e0      	bne.n	aa6e <__aeabi_fdiv+0x46>
    aaac:	2afd      	cmp	r2, #253	; 0xfd
    aaae:	f63f af50 	bhi.w	a952 <__aeabi_fmul+0x92>
    aab2:	428b      	cmp	r3, r1
    aab4:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    aab8:	bf08      	it	eq
    aaba:	f020 0001 	biceq.w	r0, r0, #1
    aabe:	4770      	bx	lr
    aac0:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    aac4:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    aac8:	327f      	adds	r2, #127	; 0x7f
    aaca:	bfc2      	ittt	gt
    aacc:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    aad0:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    aad4:	4770      	bxgt	lr
    aad6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    aada:	f04f 0300 	mov.w	r3, #0
    aade:	3a01      	subs	r2, #1
    aae0:	e737      	b.n	a952 <__aeabi_fmul+0x92>
    aae2:	f092 0f00 	teq	r2, #0
    aae6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    aaea:	bf02      	ittt	eq
    aaec:	0040      	lsleq	r0, r0, #1
    aaee:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    aaf2:	3a01      	subeq	r2, #1
    aaf4:	d0f9      	beq.n	aaea <__aeabi_fdiv+0xc2>
    aaf6:	ea40 000c 	orr.w	r0, r0, ip
    aafa:	f093 0f00 	teq	r3, #0
    aafe:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    ab02:	bf02      	ittt	eq
    ab04:	0049      	lsleq	r1, r1, #1
    ab06:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    ab0a:	3b01      	subeq	r3, #1
    ab0c:	d0f9      	beq.n	ab02 <__aeabi_fdiv+0xda>
    ab0e:	ea41 010c 	orr.w	r1, r1, ip
    ab12:	e795      	b.n	aa40 <__aeabi_fdiv+0x18>
    ab14:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    ab18:	ea92 0f0c 	teq	r2, ip
    ab1c:	d108      	bne.n	ab30 <__aeabi_fdiv+0x108>
    ab1e:	0242      	lsls	r2, r0, #9
    ab20:	f47f af7d 	bne.w	aa1e <__aeabi_fmul+0x15e>
    ab24:	ea93 0f0c 	teq	r3, ip
    ab28:	f47f af70 	bne.w	aa0c <__aeabi_fmul+0x14c>
    ab2c:	4608      	mov	r0, r1
    ab2e:	e776      	b.n	aa1e <__aeabi_fmul+0x15e>
    ab30:	ea93 0f0c 	teq	r3, ip
    ab34:	d104      	bne.n	ab40 <__aeabi_fdiv+0x118>
    ab36:	024b      	lsls	r3, r1, #9
    ab38:	f43f af4c 	beq.w	a9d4 <__aeabi_fmul+0x114>
    ab3c:	4608      	mov	r0, r1
    ab3e:	e76e      	b.n	aa1e <__aeabi_fmul+0x15e>
    ab40:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    ab44:	bf18      	it	ne
    ab46:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    ab4a:	d1ca      	bne.n	aae2 <__aeabi_fdiv+0xba>
    ab4c:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
    ab50:	f47f af5c 	bne.w	aa0c <__aeabi_fmul+0x14c>
    ab54:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
    ab58:	f47f af3c 	bne.w	a9d4 <__aeabi_fmul+0x114>
    ab5c:	e75f      	b.n	aa1e <__aeabi_fmul+0x15e>
    ab5e:	bf00      	nop

0000ab60 <__gesf2>:
    ab60:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    ab64:	e006      	b.n	ab74 <__cmpsf2+0x4>
    ab66:	bf00      	nop

0000ab68 <__lesf2>:
    ab68:	f04f 0c01 	mov.w	ip, #1
    ab6c:	e002      	b.n	ab74 <__cmpsf2+0x4>
    ab6e:	bf00      	nop

0000ab70 <__cmpsf2>:
    ab70:	f04f 0c01 	mov.w	ip, #1
    ab74:	f84d cd04 	str.w	ip, [sp, #-4]!
    ab78:	ea4f 0240 	mov.w	r2, r0, lsl #1
    ab7c:	ea4f 0341 	mov.w	r3, r1, lsl #1
    ab80:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    ab84:	bf18      	it	ne
    ab86:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    ab8a:	d011      	beq.n	abb0 <__cmpsf2+0x40>
    ab8c:	b001      	add	sp, #4
    ab8e:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
    ab92:	bf18      	it	ne
    ab94:	ea90 0f01 	teqne	r0, r1
    ab98:	bf58      	it	pl
    ab9a:	ebb2 0003 	subspl.w	r0, r2, r3
    ab9e:	bf88      	it	hi
    aba0:	17c8      	asrhi	r0, r1, #31
    aba2:	bf38      	it	cc
    aba4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
    aba8:	bf18      	it	ne
    abaa:	f040 0001 	orrne.w	r0, r0, #1
    abae:	4770      	bx	lr
    abb0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    abb4:	d102      	bne.n	abbc <__cmpsf2+0x4c>
    abb6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
    abba:	d105      	bne.n	abc8 <__cmpsf2+0x58>
    abbc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
    abc0:	d1e4      	bne.n	ab8c <__cmpsf2+0x1c>
    abc2:	ea5f 2c41 	movs.w	ip, r1, lsl #9
    abc6:	d0e1      	beq.n	ab8c <__cmpsf2+0x1c>
    abc8:	f85d 0b04 	ldr.w	r0, [sp], #4
    abcc:	4770      	bx	lr
    abce:	bf00      	nop

0000abd0 <__aeabi_cfrcmple>:
    abd0:	4684      	mov	ip, r0
    abd2:	4608      	mov	r0, r1
    abd4:	4661      	mov	r1, ip
    abd6:	e7ff      	b.n	abd8 <__aeabi_cfcmpeq>

0000abd8 <__aeabi_cfcmpeq>:
    abd8:	b50f      	push	{r0, r1, r2, r3, lr}
    abda:	f7ff ffc9 	bl	ab70 <__cmpsf2>
    abde:	2800      	cmp	r0, #0
    abe0:	bf48      	it	mi
    abe2:	f110 0f00 	cmnmi.w	r0, #0
    abe6:	bd0f      	pop	{r0, r1, r2, r3, pc}

0000abe8 <__aeabi_fcmpeq>:
    abe8:	f84d ed08 	str.w	lr, [sp, #-8]!
    abec:	f7ff fff4 	bl	abd8 <__aeabi_cfcmpeq>
    abf0:	bf0c      	ite	eq
    abf2:	2001      	moveq	r0, #1
    abf4:	2000      	movne	r0, #0
    abf6:	f85d fb08 	ldr.w	pc, [sp], #8
    abfa:	bf00      	nop

0000abfc <__aeabi_fcmplt>:
    abfc:	f84d ed08 	str.w	lr, [sp, #-8]!
    ac00:	f7ff ffea 	bl	abd8 <__aeabi_cfcmpeq>
    ac04:	bf34      	ite	cc
    ac06:	2001      	movcc	r0, #1
    ac08:	2000      	movcs	r0, #0
    ac0a:	f85d fb08 	ldr.w	pc, [sp], #8
    ac0e:	bf00      	nop

0000ac10 <__aeabi_fcmple>:
    ac10:	f84d ed08 	str.w	lr, [sp, #-8]!
    ac14:	f7ff ffe0 	bl	abd8 <__aeabi_cfcmpeq>
    ac18:	bf94      	ite	ls
    ac1a:	2001      	movls	r0, #1
    ac1c:	2000      	movhi	r0, #0
    ac1e:	f85d fb08 	ldr.w	pc, [sp], #8
    ac22:	bf00      	nop

0000ac24 <__aeabi_fcmpge>:
    ac24:	f84d ed08 	str.w	lr, [sp, #-8]!
    ac28:	f7ff ffd2 	bl	abd0 <__aeabi_cfrcmple>
    ac2c:	bf94      	ite	ls
    ac2e:	2001      	movls	r0, #1
    ac30:	2000      	movhi	r0, #0
    ac32:	f85d fb08 	ldr.w	pc, [sp], #8
    ac36:	bf00      	nop

0000ac38 <__aeabi_fcmpgt>:
    ac38:	f84d ed08 	str.w	lr, [sp, #-8]!
    ac3c:	f7ff ffc8 	bl	abd0 <__aeabi_cfrcmple>
    ac40:	bf34      	ite	cc
    ac42:	2001      	movcc	r0, #1
    ac44:	2000      	movcs	r0, #0
    ac46:	f85d fb08 	ldr.w	pc, [sp], #8
    ac4a:	bf00      	nop

0000ac4c <__aeabi_fcmpun>:
    ac4c:	ea4f 0240 	mov.w	r2, r0, lsl #1
    ac50:	ea4f 0341 	mov.w	r3, r1, lsl #1
    ac54:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    ac58:	d102      	bne.n	ac60 <__aeabi_fcmpun+0x14>
    ac5a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
    ac5e:	d108      	bne.n	ac72 <__aeabi_fcmpun+0x26>
    ac60:	ea7f 6c23 	mvns.w	ip, r3, asr #24
    ac64:	d102      	bne.n	ac6c <__aeabi_fcmpun+0x20>
    ac66:	ea5f 2c41 	movs.w	ip, r1, lsl #9
    ac6a:	d102      	bne.n	ac72 <__aeabi_fcmpun+0x26>
    ac6c:	f04f 0000 	mov.w	r0, #0
    ac70:	4770      	bx	lr
    ac72:	f04f 0001 	mov.w	r0, #1
    ac76:	4770      	bx	lr

0000ac78 <__aeabi_f2iz>:
    ac78:	ea4f 0240 	mov.w	r2, r0, lsl #1
    ac7c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
    ac80:	d30f      	bcc.n	aca2 <__aeabi_f2iz+0x2a>
    ac82:	f04f 039e 	mov.w	r3, #158	; 0x9e
    ac86:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
    ac8a:	d90d      	bls.n	aca8 <__aeabi_f2iz+0x30>
    ac8c:	ea4f 2300 	mov.w	r3, r0, lsl #8
    ac90:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    ac94:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
    ac98:	fa23 f002 	lsr.w	r0, r3, r2
    ac9c:	bf18      	it	ne
    ac9e:	4240      	negne	r0, r0
    aca0:	4770      	bx	lr
    aca2:	f04f 0000 	mov.w	r0, #0
    aca6:	4770      	bx	lr
    aca8:	f112 0f61 	cmn.w	r2, #97	; 0x61
    acac:	d101      	bne.n	acb2 <__aeabi_f2iz+0x3a>
    acae:	0242      	lsls	r2, r0, #9
    acb0:	d105      	bne.n	acbe <__aeabi_f2iz+0x46>
    acb2:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
    acb6:	bf08      	it	eq
    acb8:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    acbc:	4770      	bx	lr
    acbe:	f04f 0000 	mov.w	r0, #0
    acc2:	4770      	bx	lr

0000acc4 <selfrel_offset31>:
    acc4:	6803      	ldr	r3, [r0, #0]
    acc6:	005a      	lsls	r2, r3, #1
    acc8:	bf4c      	ite	mi
    acca:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
    acce:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
    acd2:	4418      	add	r0, r3
    acd4:	4770      	bx	lr
    acd6:	bf00      	nop

0000acd8 <search_EIT_table>:
    acd8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    acdc:	b339      	cbz	r1, ad2e <search_EIT_table+0x56>
    acde:	1e4f      	subs	r7, r1, #1
    ace0:	4604      	mov	r4, r0
    ace2:	4615      	mov	r5, r2
    ace4:	463e      	mov	r6, r7
    ace6:	f04f 0800 	mov.w	r8, #0
    acea:	eb08 0106 	add.w	r1, r8, r6
    acee:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
    acf2:	1049      	asrs	r1, r1, #1
    acf4:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
    acf8:	4648      	mov	r0, r9
    acfa:	f7ff ffe3 	bl	acc4 <selfrel_offset31>
    acfe:	4603      	mov	r3, r0
    ad00:	00c8      	lsls	r0, r1, #3
    ad02:	3008      	adds	r0, #8
    ad04:	428f      	cmp	r7, r1
    ad06:	4420      	add	r0, r4
    ad08:	d00b      	beq.n	ad22 <search_EIT_table+0x4a>
    ad0a:	42ab      	cmp	r3, r5
    ad0c:	d80b      	bhi.n	ad26 <search_EIT_table+0x4e>
    ad0e:	f7ff ffd9 	bl	acc4 <selfrel_offset31>
    ad12:	3801      	subs	r0, #1
    ad14:	42a8      	cmp	r0, r5
    ad16:	f101 0801 	add.w	r8, r1, #1
    ad1a:	d3e6      	bcc.n	acea <search_EIT_table+0x12>
    ad1c:	4648      	mov	r0, r9
    ad1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    ad22:	42ab      	cmp	r3, r5
    ad24:	d9fa      	bls.n	ad1c <search_EIT_table+0x44>
    ad26:	4588      	cmp	r8, r1
    ad28:	d001      	beq.n	ad2e <search_EIT_table+0x56>
    ad2a:	1e4e      	subs	r6, r1, #1
    ad2c:	e7dd      	b.n	acea <search_EIT_table+0x12>
    ad2e:	f04f 0900 	mov.w	r9, #0
    ad32:	4648      	mov	r0, r9
    ad34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0000ad38 <__gnu_unwind_get_pr_addr>:
    ad38:	2801      	cmp	r0, #1
    ad3a:	d007      	beq.n	ad4c <__gnu_unwind_get_pr_addr+0x14>
    ad3c:	2802      	cmp	r0, #2
    ad3e:	d007      	beq.n	ad50 <__gnu_unwind_get_pr_addr+0x18>
    ad40:	4b04      	ldr	r3, [pc, #16]	; (ad54 <__gnu_unwind_get_pr_addr+0x1c>)
    ad42:	2800      	cmp	r0, #0
    ad44:	bf0c      	ite	eq
    ad46:	4618      	moveq	r0, r3
    ad48:	2000      	movne	r0, #0
    ad4a:	4770      	bx	lr
    ad4c:	4802      	ldr	r0, [pc, #8]	; (ad58 <__gnu_unwind_get_pr_addr+0x20>)
    ad4e:	4770      	bx	lr
    ad50:	4802      	ldr	r0, [pc, #8]	; (ad5c <__gnu_unwind_get_pr_addr+0x24>)
    ad52:	4770      	bx	lr
    ad54:	0000b429 	.word	0x0000b429
    ad58:	0000b42d 	.word	0x0000b42d
    ad5c:	0000b431 	.word	0x0000b431

0000ad60 <get_eit_entry>:
    ad60:	b530      	push	{r4, r5, lr}
    ad62:	4b24      	ldr	r3, [pc, #144]	; (adf4 <get_eit_entry+0x94>)
    ad64:	4604      	mov	r4, r0
    ad66:	b083      	sub	sp, #12
    ad68:	1e8d      	subs	r5, r1, #2
    ad6a:	b33b      	cbz	r3, adbc <get_eit_entry+0x5c>
    ad6c:	4628      	mov	r0, r5
    ad6e:	a901      	add	r1, sp, #4
    ad70:	f3af 8000 	nop.w
    ad74:	b1e8      	cbz	r0, adb2 <get_eit_entry+0x52>
    ad76:	9901      	ldr	r1, [sp, #4]
    ad78:	462a      	mov	r2, r5
    ad7a:	f7ff ffad 	bl	acd8 <search_EIT_table>
    ad7e:	4601      	mov	r1, r0
    ad80:	b1b8      	cbz	r0, adb2 <get_eit_entry+0x52>
    ad82:	f7ff ff9f 	bl	acc4 <selfrel_offset31>
    ad86:	684b      	ldr	r3, [r1, #4]
    ad88:	64a0      	str	r0, [r4, #72]	; 0x48
    ad8a:	2b01      	cmp	r3, #1
    ad8c:	d02e      	beq.n	adec <get_eit_entry+0x8c>
    ad8e:	2b00      	cmp	r3, #0
    ad90:	db27      	blt.n	ade2 <get_eit_entry+0x82>
    ad92:	1d08      	adds	r0, r1, #4
    ad94:	f7ff ff96 	bl	acc4 <selfrel_offset31>
    ad98:	2300      	movs	r3, #0
    ad9a:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
    ad9e:	6803      	ldr	r3, [r0, #0]
    ada0:	2b00      	cmp	r3, #0
    ada2:	db12      	blt.n	adca <get_eit_entry+0x6a>
    ada4:	f7ff ff8e 	bl	acc4 <selfrel_offset31>
    ada8:	4603      	mov	r3, r0
    adaa:	2000      	movs	r0, #0
    adac:	6123      	str	r3, [r4, #16]
    adae:	b003      	add	sp, #12
    adb0:	bd30      	pop	{r4, r5, pc}
    adb2:	2300      	movs	r3, #0
    adb4:	2009      	movs	r0, #9
    adb6:	6123      	str	r3, [r4, #16]
    adb8:	b003      	add	sp, #12
    adba:	bd30      	pop	{r4, r5, pc}
    adbc:	4b0e      	ldr	r3, [pc, #56]	; (adf8 <get_eit_entry+0x98>)
    adbe:	490f      	ldr	r1, [pc, #60]	; (adfc <get_eit_entry+0x9c>)
    adc0:	4618      	mov	r0, r3
    adc2:	1ac9      	subs	r1, r1, r3
    adc4:	10c9      	asrs	r1, r1, #3
    adc6:	9101      	str	r1, [sp, #4]
    adc8:	e7d6      	b.n	ad78 <get_eit_entry+0x18>
    adca:	f3c3 6003 	ubfx	r0, r3, #24, #4
    adce:	f7ff ffb3 	bl	ad38 <__gnu_unwind_get_pr_addr>
    add2:	2800      	cmp	r0, #0
    add4:	4603      	mov	r3, r0
    add6:	bf14      	ite	ne
    add8:	2000      	movne	r0, #0
    adda:	2009      	moveq	r0, #9
    addc:	6123      	str	r3, [r4, #16]
    adde:	b003      	add	sp, #12
    ade0:	bd30      	pop	{r4, r5, pc}
    ade2:	2301      	movs	r3, #1
    ade4:	1d08      	adds	r0, r1, #4
    ade6:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
    adea:	e7d8      	b.n	ad9e <get_eit_entry+0x3e>
    adec:	2300      	movs	r3, #0
    adee:	2005      	movs	r0, #5
    adf0:	6123      	str	r3, [r4, #16]
    adf2:	e7dc      	b.n	adae <get_eit_entry+0x4e>
    adf4:	00000000 	.word	0x00000000
    adf8:	0001a858 	.word	0x0001a858
    adfc:	0001ab88 	.word	0x0001ab88

0000ae00 <restore_non_core_regs>:
    ae00:	6803      	ldr	r3, [r0, #0]
    ae02:	b510      	push	{r4, lr}
    ae04:	07da      	lsls	r2, r3, #31
    ae06:	4604      	mov	r4, r0
    ae08:	d406      	bmi.n	ae18 <restore_non_core_regs+0x18>
    ae0a:	079b      	lsls	r3, r3, #30
    ae0c:	f100 0048 	add.w	r0, r0, #72	; 0x48
    ae10:	d509      	bpl.n	ae26 <restore_non_core_regs+0x26>
    ae12:	f000 fc5d 	bl	b6d0 <__gnu_Unwind_Restore_VFP_D>
    ae16:	6823      	ldr	r3, [r4, #0]
    ae18:	0759      	lsls	r1, r3, #29
    ae1a:	d509      	bpl.n	ae30 <restore_non_core_regs+0x30>
    ae1c:	071a      	lsls	r2, r3, #28
    ae1e:	d50e      	bpl.n	ae3e <restore_non_core_regs+0x3e>
    ae20:	06db      	lsls	r3, r3, #27
    ae22:	d513      	bpl.n	ae4c <restore_non_core_regs+0x4c>
    ae24:	bd10      	pop	{r4, pc}
    ae26:	f000 fc4b 	bl	b6c0 <__gnu_Unwind_Restore_VFP>
    ae2a:	6823      	ldr	r3, [r4, #0]
    ae2c:	0759      	lsls	r1, r3, #29
    ae2e:	d4f5      	bmi.n	ae1c <restore_non_core_regs+0x1c>
    ae30:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
    ae34:	f000 fc54 	bl	b6e0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
    ae38:	6823      	ldr	r3, [r4, #0]
    ae3a:	071a      	lsls	r2, r3, #28
    ae3c:	d4f0      	bmi.n	ae20 <restore_non_core_regs+0x20>
    ae3e:	f504 70a8 	add.w	r0, r4, #336	; 0x150
    ae42:	f000 fc55 	bl	b6f0 <__gnu_Unwind_Restore_WMMXD>
    ae46:	6823      	ldr	r3, [r4, #0]
    ae48:	06db      	lsls	r3, r3, #27
    ae4a:	d4eb      	bmi.n	ae24 <restore_non_core_regs+0x24>
    ae4c:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
    ae50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ae54:	f000 bc90 	b.w	b778 <__gnu_Unwind_Restore_WMMXC>

0000ae58 <__gnu_unwind_24bit.constprop.0>:
    ae58:	2009      	movs	r0, #9
    ae5a:	4770      	bx	lr

0000ae5c <_Unwind_decode_typeinfo_ptr.constprop.0>:
    ae5c:	4603      	mov	r3, r0
    ae5e:	6800      	ldr	r0, [r0, #0]
    ae60:	b100      	cbz	r0, ae64 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
    ae62:	4418      	add	r0, r3
    ae64:	4770      	bx	lr
    ae66:	bf00      	nop

0000ae68 <_Unwind_DebugHook>:
    ae68:	4770      	bx	lr
    ae6a:	bf00      	nop

0000ae6c <unwind_phase2>:
    ae6c:	b570      	push	{r4, r5, r6, lr}
    ae6e:	4604      	mov	r4, r0
    ae70:	460e      	mov	r6, r1
    ae72:	4620      	mov	r0, r4
    ae74:	6c31      	ldr	r1, [r6, #64]	; 0x40
    ae76:	f7ff ff73 	bl	ad60 <get_eit_entry>
    ae7a:	4605      	mov	r5, r0
    ae7c:	b998      	cbnz	r0, aea6 <unwind_phase2+0x3a>
    ae7e:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
    ae82:	4632      	mov	r2, r6
    ae84:	4621      	mov	r1, r4
    ae86:	2001      	movs	r0, #1
    ae88:	6923      	ldr	r3, [r4, #16]
    ae8a:	f8c4 c014 	str.w	ip, [r4, #20]
    ae8e:	4798      	blx	r3
    ae90:	2808      	cmp	r0, #8
    ae92:	d0ee      	beq.n	ae72 <unwind_phase2+0x6>
    ae94:	2807      	cmp	r0, #7
    ae96:	d106      	bne.n	aea6 <unwind_phase2+0x3a>
    ae98:	4628      	mov	r0, r5
    ae9a:	6c31      	ldr	r1, [r6, #64]	; 0x40
    ae9c:	f7ff ffe4 	bl	ae68 <_Unwind_DebugHook>
    aea0:	1d30      	adds	r0, r6, #4
    aea2:	f000 fc01 	bl	b6a8 <__restore_core_regs>
    aea6:	f000 fea1 	bl	bbec <abort>
    aeaa:	bf00      	nop

0000aeac <unwind_phase2_forced>:
    aeac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    aeb0:	f04f 0a00 	mov.w	sl, #0
    aeb4:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
    aeb8:	f10d 0e0c 	add.w	lr, sp, #12
    aebc:	f101 0c04 	add.w	ip, r1, #4
    aec0:	68c7      	ldr	r7, [r0, #12]
    aec2:	f8d0 8018 	ldr.w	r8, [r0, #24]
    aec6:	4606      	mov	r6, r0
    aec8:	4614      	mov	r4, r2
    aeca:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    aece:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    aed2:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    aed6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    aeda:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    aede:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    aee2:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    aee6:	ad02      	add	r5, sp, #8
    aee8:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
    aeec:	f8c5 a000 	str.w	sl, [r5]
    aef0:	e021      	b.n	af36 <unwind_phase2_forced+0x8a>
    aef2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
    aef4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
    aef8:	4629      	mov	r1, r5
    aefa:	6173      	str	r3, [r6, #20]
    aefc:	a87a      	add	r0, sp, #488	; 0x1e8
    aefe:	f001 fce9 	bl	c8d4 <memcpy>
    af02:	4631      	mov	r1, r6
    af04:	4650      	mov	r0, sl
    af06:	6933      	ldr	r3, [r6, #16]
    af08:	aa7a      	add	r2, sp, #488	; 0x1e8
    af0a:	4798      	blx	r3
    af0c:	9c88      	ldr	r4, [sp, #544]	; 0x220
    af0e:	4682      	mov	sl, r0
    af10:	646c      	str	r4, [r5, #68]	; 0x44
    af12:	4633      	mov	r3, r6
    af14:	4632      	mov	r2, r6
    af16:	4649      	mov	r1, r9
    af18:	2001      	movs	r0, #1
    af1a:	e9cd 5800 	strd	r5, r8, [sp]
    af1e:	47b8      	blx	r7
    af20:	4604      	mov	r4, r0
    af22:	b9f0      	cbnz	r0, af62 <unwind_phase2_forced+0xb6>
    af24:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
    af28:	4628      	mov	r0, r5
    af2a:	a97a      	add	r1, sp, #488	; 0x1e8
    af2c:	f001 fcd2 	bl	c8d4 <memcpy>
    af30:	f1ba 0f08 	cmp.w	sl, #8
    af34:	d11b      	bne.n	af6e <unwind_phase2_forced+0xc2>
    af36:	4630      	mov	r0, r6
    af38:	6c29      	ldr	r1, [r5, #64]	; 0x40
    af3a:	f7ff ff11 	bl	ad60 <get_eit_entry>
    af3e:	f104 0909 	add.w	r9, r4, #9
    af42:	fa5f fa89 	uxtb.w	sl, r9
    af46:	4604      	mov	r4, r0
    af48:	2800      	cmp	r0, #0
    af4a:	d0d2      	beq.n	aef2 <unwind_phase2_forced+0x46>
    af4c:	6ba9      	ldr	r1, [r5, #56]	; 0x38
    af4e:	4633      	mov	r3, r6
    af50:	6469      	str	r1, [r5, #68]	; 0x44
    af52:	4632      	mov	r2, r6
    af54:	2001      	movs	r0, #1
    af56:	e9cd 5800 	strd	r5, r8, [sp]
    af5a:	f04a 0110 	orr.w	r1, sl, #16
    af5e:	47b8      	blx	r7
    af60:	b100      	cbz	r0, af64 <unwind_phase2_forced+0xb8>
    af62:	2409      	movs	r4, #9
    af64:	4620      	mov	r0, r4
    af66:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
    af6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    af6e:	f1ba 0f07 	cmp.w	sl, #7
    af72:	d1f6      	bne.n	af62 <unwind_phase2_forced+0xb6>
    af74:	4620      	mov	r0, r4
    af76:	6c29      	ldr	r1, [r5, #64]	; 0x40
    af78:	f7ff ff76 	bl	ae68 <_Unwind_DebugHook>
    af7c:	a803      	add	r0, sp, #12
    af7e:	f000 fb93 	bl	b6a8 <__restore_core_regs>
    af82:	bf00      	nop

0000af84 <_Unwind_GetCFA>:
    af84:	6c40      	ldr	r0, [r0, #68]	; 0x44
    af86:	4770      	bx	lr

0000af88 <__gnu_Unwind_RaiseException>:
    af88:	b5f0      	push	{r4, r5, r6, r7, lr}
    af8a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    af8e:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
    af90:	b0f9      	sub	sp, #484	; 0x1e4
    af92:	640b      	str	r3, [r1, #64]	; 0x40
    af94:	ac01      	add	r4, sp, #4
    af96:	f101 0c04 	add.w	ip, r1, #4
    af9a:	460e      	mov	r6, r1
    af9c:	4605      	mov	r5, r0
    af9e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    afa2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    afa4:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    afa8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    afaa:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    afae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    afb0:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    afb4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    afb8:	9700      	str	r7, [sp, #0]
    afba:	e006      	b.n	afca <__gnu_Unwind_RaiseException+0x42>
    afbc:	466a      	mov	r2, sp
    afbe:	4629      	mov	r1, r5
    afc0:	692b      	ldr	r3, [r5, #16]
    afc2:	4798      	blx	r3
    afc4:	2808      	cmp	r0, #8
    afc6:	4604      	mov	r4, r0
    afc8:	d108      	bne.n	afdc <__gnu_Unwind_RaiseException+0x54>
    afca:	4628      	mov	r0, r5
    afcc:	9910      	ldr	r1, [sp, #64]	; 0x40
    afce:	f7ff fec7 	bl	ad60 <get_eit_entry>
    afd2:	2800      	cmp	r0, #0
    afd4:	d0f2      	beq.n	afbc <__gnu_Unwind_RaiseException+0x34>
    afd6:	2009      	movs	r0, #9
    afd8:	b079      	add	sp, #484	; 0x1e4
    afda:	bdf0      	pop	{r4, r5, r6, r7, pc}
    afdc:	4668      	mov	r0, sp
    afde:	f7ff ff0f 	bl	ae00 <restore_non_core_regs>
    afe2:	2c06      	cmp	r4, #6
    afe4:	d1f7      	bne.n	afd6 <__gnu_Unwind_RaiseException+0x4e>
    afe6:	4631      	mov	r1, r6
    afe8:	4628      	mov	r0, r5
    afea:	f7ff ff3f 	bl	ae6c <unwind_phase2>
    afee:	bf00      	nop

0000aff0 <__gnu_Unwind_ForcedUnwind>:
    aff0:	b410      	push	{r4}
    aff2:	4614      	mov	r4, r2
    aff4:	6184      	str	r4, [r0, #24]
    aff6:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
    aff8:	60c1      	str	r1, [r0, #12]
    affa:	2200      	movs	r2, #0
    affc:	641c      	str	r4, [r3, #64]	; 0x40
    affe:	4619      	mov	r1, r3
    b000:	bc10      	pop	{r4}
    b002:	e753      	b.n	aeac <unwind_phase2_forced>

0000b004 <__gnu_Unwind_Resume>:
    b004:	b570      	push	{r4, r5, r6, lr}
    b006:	6943      	ldr	r3, [r0, #20]
    b008:	68c6      	ldr	r6, [r0, #12]
    b00a:	640b      	str	r3, [r1, #64]	; 0x40
    b00c:	b9ae      	cbnz	r6, b03a <__gnu_Unwind_Resume+0x36>
    b00e:	460a      	mov	r2, r1
    b010:	6903      	ldr	r3, [r0, #16]
    b012:	4604      	mov	r4, r0
    b014:	460d      	mov	r5, r1
    b016:	4601      	mov	r1, r0
    b018:	2002      	movs	r0, #2
    b01a:	4798      	blx	r3
    b01c:	2807      	cmp	r0, #7
    b01e:	d005      	beq.n	b02c <__gnu_Unwind_Resume+0x28>
    b020:	2808      	cmp	r0, #8
    b022:	d10f      	bne.n	b044 <__gnu_Unwind_Resume+0x40>
    b024:	4629      	mov	r1, r5
    b026:	4620      	mov	r0, r4
    b028:	f7ff ff20 	bl	ae6c <unwind_phase2>
    b02c:	4630      	mov	r0, r6
    b02e:	6c29      	ldr	r1, [r5, #64]	; 0x40
    b030:	f7ff ff1a 	bl	ae68 <_Unwind_DebugHook>
    b034:	1d28      	adds	r0, r5, #4
    b036:	f000 fb37 	bl	b6a8 <__restore_core_regs>
    b03a:	2201      	movs	r2, #1
    b03c:	f7ff ff36 	bl	aeac <unwind_phase2_forced>
    b040:	f000 fdd4 	bl	bbec <abort>
    b044:	f000 fdd2 	bl	bbec <abort>

0000b048 <__gnu_Unwind_Resume_or_Rethrow>:
    b048:	68c2      	ldr	r2, [r0, #12]
    b04a:	b12a      	cbz	r2, b058 <__gnu_Unwind_Resume_or_Rethrow+0x10>
    b04c:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
    b050:	2200      	movs	r2, #0
    b052:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
    b056:	e729      	b.n	aeac <unwind_phase2_forced>
    b058:	e796      	b.n	af88 <__gnu_Unwind_RaiseException>
    b05a:	bf00      	nop

0000b05c <_Unwind_Complete>:
    b05c:	4770      	bx	lr
    b05e:	bf00      	nop

0000b060 <_Unwind_DeleteException>:
    b060:	6883      	ldr	r3, [r0, #8]
    b062:	4601      	mov	r1, r0
    b064:	b10b      	cbz	r3, b06a <_Unwind_DeleteException+0xa>
    b066:	2001      	movs	r0, #1
    b068:	4718      	bx	r3
    b06a:	4770      	bx	lr

0000b06c <_Unwind_VRS_Get>:
    b06c:	2901      	cmp	r1, #1
    b06e:	d012      	beq.n	b096 <_Unwind_VRS_Get+0x2a>
    b070:	d809      	bhi.n	b086 <_Unwind_VRS_Get+0x1a>
    b072:	b973      	cbnz	r3, b092 <_Unwind_VRS_Get+0x26>
    b074:	2a0f      	cmp	r2, #15
    b076:	d80c      	bhi.n	b092 <_Unwind_VRS_Get+0x26>
    b078:	eb00 0082 	add.w	r0, r0, r2, lsl #2
    b07c:	6842      	ldr	r2, [r0, #4]
    b07e:	4618      	mov	r0, r3
    b080:	9b00      	ldr	r3, [sp, #0]
    b082:	601a      	str	r2, [r3, #0]
    b084:	4770      	bx	lr
    b086:	3903      	subs	r1, #3
    b088:	2901      	cmp	r1, #1
    b08a:	bf94      	ite	ls
    b08c:	2001      	movls	r0, #1
    b08e:	2002      	movhi	r0, #2
    b090:	4770      	bx	lr
    b092:	2002      	movs	r0, #2
    b094:	4770      	bx	lr
    b096:	4608      	mov	r0, r1
    b098:	4770      	bx	lr
    b09a:	bf00      	nop

0000b09c <_Unwind_GetGR>:
    b09c:	2300      	movs	r3, #0
    b09e:	b500      	push	{lr}
    b0a0:	b085      	sub	sp, #20
    b0a2:	460a      	mov	r2, r1
    b0a4:	a903      	add	r1, sp, #12
    b0a6:	9100      	str	r1, [sp, #0]
    b0a8:	4619      	mov	r1, r3
    b0aa:	f7ff ffdf 	bl	b06c <_Unwind_VRS_Get>
    b0ae:	9803      	ldr	r0, [sp, #12]
    b0b0:	b005      	add	sp, #20
    b0b2:	f85d fb04 	ldr.w	pc, [sp], #4
    b0b6:	bf00      	nop

0000b0b8 <_Unwind_VRS_Set>:
    b0b8:	2901      	cmp	r1, #1
    b0ba:	d012      	beq.n	b0e2 <_Unwind_VRS_Set+0x2a>
    b0bc:	d809      	bhi.n	b0d2 <_Unwind_VRS_Set+0x1a>
    b0be:	b973      	cbnz	r3, b0de <_Unwind_VRS_Set+0x26>
    b0c0:	2a0f      	cmp	r2, #15
    b0c2:	d80c      	bhi.n	b0de <_Unwind_VRS_Set+0x26>
    b0c4:	9900      	ldr	r1, [sp, #0]
    b0c6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
    b0ca:	6809      	ldr	r1, [r1, #0]
    b0cc:	4618      	mov	r0, r3
    b0ce:	6051      	str	r1, [r2, #4]
    b0d0:	4770      	bx	lr
    b0d2:	3903      	subs	r1, #3
    b0d4:	2901      	cmp	r1, #1
    b0d6:	bf94      	ite	ls
    b0d8:	2001      	movls	r0, #1
    b0da:	2002      	movhi	r0, #2
    b0dc:	4770      	bx	lr
    b0de:	2002      	movs	r0, #2
    b0e0:	4770      	bx	lr
    b0e2:	4608      	mov	r0, r1
    b0e4:	4770      	bx	lr
    b0e6:	bf00      	nop

0000b0e8 <_Unwind_SetGR>:
    b0e8:	2300      	movs	r3, #0
    b0ea:	b510      	push	{r4, lr}
    b0ec:	b084      	sub	sp, #16
    b0ee:	ac03      	add	r4, sp, #12
    b0f0:	9203      	str	r2, [sp, #12]
    b0f2:	9400      	str	r4, [sp, #0]
    b0f4:	460a      	mov	r2, r1
    b0f6:	4619      	mov	r1, r3
    b0f8:	f7ff ffde 	bl	b0b8 <_Unwind_VRS_Set>
    b0fc:	b004      	add	sp, #16
    b0fe:	bd10      	pop	{r4, pc}

0000b100 <__gnu_Unwind_Backtrace>:
    b100:	b570      	push	{r4, r5, r6, lr}
    b102:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    b106:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
    b108:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
    b10c:	6413      	str	r3, [r2, #64]	; 0x40
    b10e:	f10d 0e5c 	add.w	lr, sp, #92	; 0x5c
    b112:	f102 0c04 	add.w	ip, r2, #4
    b116:	4605      	mov	r5, r0
    b118:	460c      	mov	r4, r1
    b11a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    b11e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    b122:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    b126:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    b12a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    b12e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    b132:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    b136:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
    b13a:	9616      	str	r6, [sp, #88]	; 0x58
    b13c:	e012      	b.n	b164 <__gnu_Unwind_Backtrace+0x64>
    b13e:	210c      	movs	r1, #12
    b140:	a816      	add	r0, sp, #88	; 0x58
    b142:	466a      	mov	r2, sp
    b144:	f7ff ffd0 	bl	b0e8 <_Unwind_SetGR>
    b148:	4621      	mov	r1, r4
    b14a:	a816      	add	r0, sp, #88	; 0x58
    b14c:	47a8      	blx	r5
    b14e:	b978      	cbnz	r0, b170 <__gnu_Unwind_Backtrace+0x70>
    b150:	4669      	mov	r1, sp
    b152:	2008      	movs	r0, #8
    b154:	9b04      	ldr	r3, [sp, #16]
    b156:	aa16      	add	r2, sp, #88	; 0x58
    b158:	4798      	blx	r3
    b15a:	2805      	cmp	r0, #5
    b15c:	4606      	mov	r6, r0
    b15e:	d008      	beq.n	b172 <__gnu_Unwind_Backtrace+0x72>
    b160:	2809      	cmp	r0, #9
    b162:	d005      	beq.n	b170 <__gnu_Unwind_Backtrace+0x70>
    b164:	4668      	mov	r0, sp
    b166:	9926      	ldr	r1, [sp, #152]	; 0x98
    b168:	f7ff fdfa 	bl	ad60 <get_eit_entry>
    b16c:	2800      	cmp	r0, #0
    b16e:	d0e6      	beq.n	b13e <__gnu_Unwind_Backtrace+0x3e>
    b170:	2609      	movs	r6, #9
    b172:	a816      	add	r0, sp, #88	; 0x58
    b174:	f7ff fe44 	bl	ae00 <restore_non_core_regs>
    b178:	4630      	mov	r0, r6
    b17a:	f50d 7d0e 	add.w	sp, sp, #568	; 0x238
    b17e:	bd70      	pop	{r4, r5, r6, pc}

0000b180 <__gnu_unwind_pr_common>:
    b180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b184:	461e      	mov	r6, r3
    b186:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
    b188:	b089      	sub	sp, #36	; 0x24
    b18a:	f854 3b04 	ldr.w	r3, [r4], #4
    b18e:	460d      	mov	r5, r1
    b190:	4617      	mov	r7, r2
    b192:	f000 0803 	and.w	r8, r0, #3
    b196:	9406      	str	r4, [sp, #24]
    b198:	2e00      	cmp	r6, #0
    b19a:	d079      	beq.n	b290 <__gnu_unwind_pr_common+0x110>
    b19c:	2202      	movs	r2, #2
    b19e:	f88d 201c 	strb.w	r2, [sp, #28]
    b1a2:	0c1a      	lsrs	r2, r3, #16
    b1a4:	f88d 201d 	strb.w	r2, [sp, #29]
    b1a8:	041b      	lsls	r3, r3, #16
    b1aa:	b2d2      	uxtb	r2, r2
    b1ac:	9305      	str	r3, [sp, #20]
    b1ae:	eb04 0482 	add.w	r4, r4, r2, lsl #2
    b1b2:	6d2b      	ldr	r3, [r5, #80]	; 0x50
    b1b4:	f1b8 0f02 	cmp.w	r8, #2
    b1b8:	bf08      	it	eq
    b1ba:	6bac      	ldreq	r4, [r5, #56]	; 0x38
    b1bc:	f013 0301 	ands.w	r3, r3, #1
    b1c0:	d00c      	beq.n	b1dc <__gnu_unwind_pr_common+0x5c>
    b1c2:	4638      	mov	r0, r7
    b1c4:	a905      	add	r1, sp, #20
    b1c6:	f000 fb71 	bl	b8ac <__gnu_unwind_execute>
    b1ca:	b918      	cbnz	r0, b1d4 <__gnu_unwind_pr_common+0x54>
    b1cc:	2008      	movs	r0, #8
    b1ce:	b009      	add	sp, #36	; 0x24
    b1d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b1d4:	2009      	movs	r0, #9
    b1d6:	b009      	add	sp, #36	; 0x24
    b1d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b1dc:	f8d4 a000 	ldr.w	sl, [r4]
    b1e0:	f1ba 0f00 	cmp.w	sl, #0
    b1e4:	d0ed      	beq.n	b1c2 <__gnu_unwind_pr_common+0x42>
    b1e6:	9301      	str	r3, [sp, #4]
    b1e8:	f000 0308 	and.w	r3, r0, #8
    b1ec:	9302      	str	r3, [sp, #8]
    b1ee:	2e02      	cmp	r6, #2
    b1f0:	d04a      	beq.n	b288 <__gnu_unwind_pr_common+0x108>
    b1f2:	f8b4 a000 	ldrh.w	sl, [r4]
    b1f6:	f8b4 9002 	ldrh.w	r9, [r4, #2]
    b1fa:	3404      	adds	r4, #4
    b1fc:	6caa      	ldr	r2, [r5, #72]	; 0x48
    b1fe:	210f      	movs	r1, #15
    b200:	4638      	mov	r0, r7
    b202:	f029 0b01 	bic.w	fp, r9, #1
    b206:	4493      	add	fp, r2
    b208:	f7ff ff48 	bl	b09c <_Unwind_GetGR>
    b20c:	4583      	cmp	fp, r0
    b20e:	d839      	bhi.n	b284 <__gnu_unwind_pr_common+0x104>
    b210:	f02a 0201 	bic.w	r2, sl, #1
    b214:	445a      	add	r2, fp
    b216:	4282      	cmp	r2, r0
    b218:	bf94      	ite	ls
    b21a:	2000      	movls	r0, #0
    b21c:	2001      	movhi	r0, #1
    b21e:	ea4f 0349 	mov.w	r3, r9, lsl #1
    b222:	f003 0302 	and.w	r3, r3, #2
    b226:	f00a 0a01 	and.w	sl, sl, #1
    b22a:	ea43 030a 	orr.w	r3, r3, sl
    b22e:	2b01      	cmp	r3, #1
    b230:	d049      	beq.n	b2c6 <__gnu_unwind_pr_common+0x146>
    b232:	2b02      	cmp	r3, #2
    b234:	d032      	beq.n	b29c <__gnu_unwind_pr_common+0x11c>
    b236:	2b00      	cmp	r3, #0
    b238:	d1cc      	bne.n	b1d4 <__gnu_unwind_pr_common+0x54>
    b23a:	f1b8 0f00 	cmp.w	r8, #0
    b23e:	d002      	beq.n	b246 <__gnu_unwind_pr_common+0xc6>
    b240:	2800      	cmp	r0, #0
    b242:	f040 80ce 	bne.w	b3e2 <__gnu_unwind_pr_common+0x262>
    b246:	3404      	adds	r4, #4
    b248:	f8d4 a000 	ldr.w	sl, [r4]
    b24c:	f1ba 0f00 	cmp.w	sl, #0
    b250:	d1cd      	bne.n	b1ee <__gnu_unwind_pr_common+0x6e>
    b252:	4638      	mov	r0, r7
    b254:	a905      	add	r1, sp, #20
    b256:	f000 fb29 	bl	b8ac <__gnu_unwind_execute>
    b25a:	2800      	cmp	r0, #0
    b25c:	d1ba      	bne.n	b1d4 <__gnu_unwind_pr_common+0x54>
    b25e:	9b01      	ldr	r3, [sp, #4]
    b260:	2b00      	cmp	r3, #0
    b262:	d0b3      	beq.n	b1cc <__gnu_unwind_pr_common+0x4c>
    b264:	210f      	movs	r1, #15
    b266:	4638      	mov	r0, r7
    b268:	f7ff ff18 	bl	b09c <_Unwind_GetGR>
    b26c:	210e      	movs	r1, #14
    b26e:	4602      	mov	r2, r0
    b270:	4638      	mov	r0, r7
    b272:	f7ff ff39 	bl	b0e8 <_Unwind_SetGR>
    b276:	4638      	mov	r0, r7
    b278:	210f      	movs	r1, #15
    b27a:	4a6a      	ldr	r2, [pc, #424]	; (b424 <__gnu_unwind_pr_common+0x2a4>)
    b27c:	f7ff ff34 	bl	b0e8 <_Unwind_SetGR>
    b280:	2007      	movs	r0, #7
    b282:	e7a8      	b.n	b1d6 <__gnu_unwind_pr_common+0x56>
    b284:	2000      	movs	r0, #0
    b286:	e7ca      	b.n	b21e <__gnu_unwind_pr_common+0x9e>
    b288:	f8d4 9004 	ldr.w	r9, [r4, #4]
    b28c:	3408      	adds	r4, #8
    b28e:	e7b5      	b.n	b1fc <__gnu_unwind_pr_common+0x7c>
    b290:	021b      	lsls	r3, r3, #8
    b292:	9305      	str	r3, [sp, #20]
    b294:	2303      	movs	r3, #3
    b296:	f8ad 301c 	strh.w	r3, [sp, #28]
    b29a:	e78a      	b.n	b1b2 <__gnu_unwind_pr_common+0x32>
    b29c:	6823      	ldr	r3, [r4, #0]
    b29e:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
    b2a2:	f1b8 0f00 	cmp.w	r8, #0
    b2a6:	d145      	bne.n	b334 <__gnu_unwind_pr_common+0x1b4>
    b2a8:	b128      	cbz	r0, b2b6 <__gnu_unwind_pr_common+0x136>
    b2aa:	9a02      	ldr	r2, [sp, #8]
    b2ac:	2a00      	cmp	r2, #0
    b2ae:	d05c      	beq.n	b36a <__gnu_unwind_pr_common+0x1ea>
    b2b0:	f1bb 0f00 	cmp.w	fp, #0
    b2b4:	d074      	beq.n	b3a0 <__gnu_unwind_pr_common+0x220>
    b2b6:	2b00      	cmp	r3, #0
    b2b8:	da00      	bge.n	b2bc <__gnu_unwind_pr_common+0x13c>
    b2ba:	3404      	adds	r4, #4
    b2bc:	f10b 0b01 	add.w	fp, fp, #1
    b2c0:	eb04 048b 	add.w	r4, r4, fp, lsl #2
    b2c4:	e7c0      	b.n	b248 <__gnu_unwind_pr_common+0xc8>
    b2c6:	f1b8 0f00 	cmp.w	r8, #0
    b2ca:	d119      	bne.n	b300 <__gnu_unwind_pr_common+0x180>
    b2cc:	b1b0      	cbz	r0, b2fc <__gnu_unwind_pr_common+0x17c>
    b2ce:	6863      	ldr	r3, [r4, #4]
    b2d0:	6822      	ldr	r2, [r4, #0]
    b2d2:	1c99      	adds	r1, r3, #2
    b2d4:	ea4f 72d2 	mov.w	r2, r2, lsr #31
    b2d8:	f43f af7c 	beq.w	b1d4 <__gnu_unwind_pr_common+0x54>
    b2dc:	f105 0158 	add.w	r1, r5, #88	; 0x58
    b2e0:	3301      	adds	r3, #1
    b2e2:	9104      	str	r1, [sp, #16]
    b2e4:	f000 8091 	beq.w	b40a <__gnu_unwind_pr_common+0x28a>
    b2e8:	1d20      	adds	r0, r4, #4
    b2ea:	f7ff fdb7 	bl	ae5c <_Unwind_decode_typeinfo_ptr.constprop.0>
    b2ee:	ab04      	add	r3, sp, #16
    b2f0:	4601      	mov	r1, r0
    b2f2:	4628      	mov	r0, r5
    b2f4:	f7fe fb3a 	bl	996c <__cxa_type_match>
    b2f8:	2800      	cmp	r0, #0
    b2fa:	d15c      	bne.n	b3b6 <__gnu_unwind_pr_common+0x236>
    b2fc:	3408      	adds	r4, #8
    b2fe:	e7a3      	b.n	b248 <__gnu_unwind_pr_common+0xc8>
    b300:	210d      	movs	r1, #13
    b302:	4638      	mov	r0, r7
    b304:	f8d5 9020 	ldr.w	r9, [r5, #32]
    b308:	f7ff fec8 	bl	b09c <_Unwind_GetGR>
    b30c:	4581      	cmp	r9, r0
    b30e:	d1f5      	bne.n	b2fc <__gnu_unwind_pr_common+0x17c>
    b310:	6aab      	ldr	r3, [r5, #40]	; 0x28
    b312:	429c      	cmp	r4, r3
    b314:	d1f2      	bne.n	b2fc <__gnu_unwind_pr_common+0x17c>
    b316:	4620      	mov	r0, r4
    b318:	f7ff fcd4 	bl	acc4 <selfrel_offset31>
    b31c:	210f      	movs	r1, #15
    b31e:	4602      	mov	r2, r0
    b320:	4638      	mov	r0, r7
    b322:	f7ff fee1 	bl	b0e8 <_Unwind_SetGR>
    b326:	4638      	mov	r0, r7
    b328:	462a      	mov	r2, r5
    b32a:	2100      	movs	r1, #0
    b32c:	f7ff fedc 	bl	b0e8 <_Unwind_SetGR>
    b330:	2007      	movs	r0, #7
    b332:	e750      	b.n	b1d6 <__gnu_unwind_pr_common+0x56>
    b334:	210d      	movs	r1, #13
    b336:	4638      	mov	r0, r7
    b338:	f8d5 9020 	ldr.w	r9, [r5, #32]
    b33c:	f7ff feae 	bl	b09c <_Unwind_GetGR>
    b340:	4581      	cmp	r9, r0
    b342:	d001      	beq.n	b348 <__gnu_unwind_pr_common+0x1c8>
    b344:	6823      	ldr	r3, [r4, #0]
    b346:	e7b6      	b.n	b2b6 <__gnu_unwind_pr_common+0x136>
    b348:	6aab      	ldr	r3, [r5, #40]	; 0x28
    b34a:	429c      	cmp	r4, r3
    b34c:	d1fa      	bne.n	b344 <__gnu_unwind_pr_common+0x1c4>
    b34e:	2304      	movs	r3, #4
    b350:	2200      	movs	r2, #0
    b352:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
    b356:	18e3      	adds	r3, r4, r3
    b358:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
    b35c:	636b      	str	r3, [r5, #52]	; 0x34
    b35e:	6823      	ldr	r3, [r4, #0]
    b360:	2b00      	cmp	r3, #0
    b362:	db5a      	blt.n	b41a <__gnu_unwind_pr_common+0x29a>
    b364:	2301      	movs	r3, #1
    b366:	9301      	str	r3, [sp, #4]
    b368:	e7a8      	b.n	b2bc <__gnu_unwind_pr_common+0x13c>
    b36a:	f105 0358 	add.w	r3, r5, #88	; 0x58
    b36e:	f8cd 800c 	str.w	r8, [sp, #12]
    b372:	4691      	mov	r9, r2
    b374:	46b0      	mov	r8, r6
    b376:	f104 0a04 	add.w	sl, r4, #4
    b37a:	461e      	mov	r6, r3
    b37c:	e00e      	b.n	b39c <__gnu_unwind_pr_common+0x21c>
    b37e:	4650      	mov	r0, sl
    b380:	9604      	str	r6, [sp, #16]
    b382:	f7ff fd6b 	bl	ae5c <_Unwind_decode_typeinfo_ptr.constprop.0>
    b386:	2200      	movs	r2, #0
    b388:	4601      	mov	r1, r0
    b38a:	ab04      	add	r3, sp, #16
    b38c:	4628      	mov	r0, r5
    b38e:	f109 0901 	add.w	r9, r9, #1
    b392:	f10a 0a04 	add.w	sl, sl, #4
    b396:	f7fe fae9 	bl	996c <__cxa_type_match>
    b39a:	b9e8      	cbnz	r0, b3d8 <__gnu_unwind_pr_common+0x258>
    b39c:	45d9      	cmp	r9, fp
    b39e:	d1ee      	bne.n	b37e <__gnu_unwind_pr_common+0x1fe>
    b3a0:	210d      	movs	r1, #13
    b3a2:	4638      	mov	r0, r7
    b3a4:	f7ff fe7a 	bl	b09c <_Unwind_GetGR>
    b3a8:	4603      	mov	r3, r0
    b3aa:	9a04      	ldr	r2, [sp, #16]
    b3ac:	2006      	movs	r0, #6
    b3ae:	e9c5 2409 	strd	r2, r4, [r5, #36]	; 0x24
    b3b2:	622b      	str	r3, [r5, #32]
    b3b4:	e70f      	b.n	b1d6 <__gnu_unwind_pr_common+0x56>
    b3b6:	4681      	mov	r9, r0
    b3b8:	210d      	movs	r1, #13
    b3ba:	4638      	mov	r0, r7
    b3bc:	f7ff fe6e 	bl	b09c <_Unwind_GetGR>
    b3c0:	f1b9 0f02 	cmp.w	r9, #2
    b3c4:	6228      	str	r0, [r5, #32]
    b3c6:	d125      	bne.n	b414 <__gnu_unwind_pr_common+0x294>
    b3c8:	462b      	mov	r3, r5
    b3ca:	9a04      	ldr	r2, [sp, #16]
    b3cc:	f843 2f2c 	str.w	r2, [r3, #44]!
    b3d0:	626b      	str	r3, [r5, #36]	; 0x24
    b3d2:	2006      	movs	r0, #6
    b3d4:	62ac      	str	r4, [r5, #40]	; 0x28
    b3d6:	e6fe      	b.n	b1d6 <__gnu_unwind_pr_common+0x56>
    b3d8:	4646      	mov	r6, r8
    b3da:	6823      	ldr	r3, [r4, #0]
    b3dc:	f8dd 800c 	ldr.w	r8, [sp, #12]
    b3e0:	e769      	b.n	b2b6 <__gnu_unwind_pr_common+0x136>
    b3e2:	4620      	mov	r0, r4
    b3e4:	f7ff fc6e 	bl	acc4 <selfrel_offset31>
    b3e8:	4602      	mov	r2, r0
    b3ea:	3404      	adds	r4, #4
    b3ec:	63ac      	str	r4, [r5, #56]	; 0x38
    b3ee:	4628      	mov	r0, r5
    b3f0:	4614      	mov	r4, r2
    b3f2:	f7fe fb15 	bl	9a20 <__cxa_begin_cleanup>
    b3f6:	2800      	cmp	r0, #0
    b3f8:	f43f aeec 	beq.w	b1d4 <__gnu_unwind_pr_common+0x54>
    b3fc:	4638      	mov	r0, r7
    b3fe:	4622      	mov	r2, r4
    b400:	210f      	movs	r1, #15
    b402:	f7ff fe71 	bl	b0e8 <_Unwind_SetGR>
    b406:	2007      	movs	r0, #7
    b408:	e6e5      	b.n	b1d6 <__gnu_unwind_pr_common+0x56>
    b40a:	210d      	movs	r1, #13
    b40c:	4638      	mov	r0, r7
    b40e:	f7ff fe45 	bl	b09c <_Unwind_GetGR>
    b412:	6228      	str	r0, [r5, #32]
    b414:	9b04      	ldr	r3, [sp, #16]
    b416:	626b      	str	r3, [r5, #36]	; 0x24
    b418:	e7db      	b.n	b3d2 <__gnu_unwind_pr_common+0x252>
    b41a:	f10b 0001 	add.w	r0, fp, #1
    b41e:	eb04 0080 	add.w	r0, r4, r0, lsl #2
    b422:	e779      	b.n	b318 <__gnu_unwind_pr_common+0x198>
    b424:	00009b51 	.word	0x00009b51

0000b428 <__aeabi_unwind_cpp_pr0>:
    b428:	2300      	movs	r3, #0
    b42a:	e6a9      	b.n	b180 <__gnu_unwind_pr_common>

0000b42c <__aeabi_unwind_cpp_pr1>:
    b42c:	2301      	movs	r3, #1
    b42e:	e6a7      	b.n	b180 <__gnu_unwind_pr_common>

0000b430 <__aeabi_unwind_cpp_pr2>:
    b430:	2302      	movs	r3, #2
    b432:	e6a5      	b.n	b180 <__gnu_unwind_pr_common>

0000b434 <_Unwind_VRS_Pop>:
    b434:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b438:	4606      	mov	r6, r0
    b43a:	4615      	mov	r5, r2
    b43c:	461c      	mov	r4, r3
    b43e:	b0c3      	sub	sp, #268	; 0x10c
    b440:	2904      	cmp	r1, #4
    b442:	f200 80b8 	bhi.w	b5b6 <_Unwind_VRS_Pop+0x182>
    b446:	e8df f001 	tbb	[pc, r1]
    b44a:	569c      	.short	0x569c
    b44c:	2db6      	.short	0x2db6
    b44e:	03          	.byte	0x03
    b44f:	00          	.byte	0x00
    b450:	2c00      	cmp	r4, #0
    b452:	f040 80b0 	bne.w	b5b6 <_Unwind_VRS_Pop+0x182>
    b456:	2a10      	cmp	r2, #16
    b458:	f200 80ad 	bhi.w	b5b6 <_Unwind_VRS_Pop+0x182>
    b45c:	6803      	ldr	r3, [r0, #0]
    b45e:	06d8      	lsls	r0, r3, #27
    b460:	f100 80f1 	bmi.w	b646 <_Unwind_VRS_Pop+0x212>
    b464:	af20      	add	r7, sp, #128	; 0x80
    b466:	4638      	mov	r0, r7
    b468:	f000 f990 	bl	b78c <__gnu_Unwind_Save_WMMXC>
    b46c:	2401      	movs	r4, #1
    b46e:	4638      	mov	r0, r7
    b470:	2300      	movs	r3, #0
    b472:	6bb1      	ldr	r1, [r6, #56]	; 0x38
    b474:	fa04 f203 	lsl.w	r2, r4, r3
    b478:	422a      	tst	r2, r5
    b47a:	f103 0301 	add.w	r3, r3, #1
    b47e:	d005      	beq.n	b48c <_Unwind_VRS_Pop+0x58>
    b480:	460a      	mov	r2, r1
    b482:	f852 cb04 	ldr.w	ip, [r2], #4
    b486:	4611      	mov	r1, r2
    b488:	f8c0 c000 	str.w	ip, [r0]
    b48c:	2b04      	cmp	r3, #4
    b48e:	f100 0004 	add.w	r0, r0, #4
    b492:	d1ef      	bne.n	b474 <_Unwind_VRS_Pop+0x40>
    b494:	4638      	mov	r0, r7
    b496:	63b1      	str	r1, [r6, #56]	; 0x38
    b498:	f000 f96e 	bl	b778 <__gnu_Unwind_Restore_WMMXC>
    b49c:	2000      	movs	r0, #0
    b49e:	b043      	add	sp, #268	; 0x10c
    b4a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b4a4:	2c03      	cmp	r4, #3
    b4a6:	f040 8086 	bne.w	b5b6 <_Unwind_VRS_Pop+0x182>
    b4aa:	b294      	uxth	r4, r2
    b4ac:	eb04 4312 	add.w	r3, r4, r2, lsr #16
    b4b0:	2b10      	cmp	r3, #16
    b4b2:	ea4f 4512 	mov.w	r5, r2, lsr #16
    b4b6:	d87e      	bhi.n	b5b6 <_Unwind_VRS_Pop+0x182>
    b4b8:	6803      	ldr	r3, [r0, #0]
    b4ba:	071f      	lsls	r7, r3, #28
    b4bc:	f100 80cb 	bmi.w	b656 <_Unwind_VRS_Pop+0x222>
    b4c0:	af20      	add	r7, sp, #128	; 0x80
    b4c2:	4638      	mov	r0, r7
    b4c4:	f000 f936 	bl	b734 <__gnu_Unwind_Save_WMMXD>
    b4c8:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    b4ca:	eb07 01c5 	add.w	r1, r7, r5, lsl #3
    b4ce:	b154      	cbz	r4, b4e6 <_Unwind_VRS_Pop+0xb2>
    b4d0:	460b      	mov	r3, r1
    b4d2:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
    b4d6:	1ad0      	subs	r0, r2, r3
    b4d8:	00e4      	lsls	r4, r4, #3
    b4da:	581d      	ldr	r5, [r3, r0]
    b4dc:	f843 5b04 	str.w	r5, [r3], #4
    b4e0:	428b      	cmp	r3, r1
    b4e2:	d1fa      	bne.n	b4da <_Unwind_VRS_Pop+0xa6>
    b4e4:	4422      	add	r2, r4
    b4e6:	4638      	mov	r0, r7
    b4e8:	63b2      	str	r2, [r6, #56]	; 0x38
    b4ea:	f000 f901 	bl	b6f0 <__gnu_Unwind_Restore_WMMXD>
    b4ee:	2000      	movs	r0, #0
    b4f0:	b043      	add	sp, #268	; 0x10c
    b4f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b4f6:	2c01      	cmp	r4, #1
    b4f8:	ea4f 4812 	mov.w	r8, r2, lsr #16
    b4fc:	b295      	uxth	r5, r2
    b4fe:	d056      	beq.n	b5ae <_Unwind_VRS_Pop+0x17a>
    b500:	2c05      	cmp	r4, #5
    b502:	d158      	bne.n	b5b6 <_Unwind_VRS_Pop+0x182>
    b504:	eb08 0905 	add.w	r9, r8, r5
    b508:	f1b9 0f20 	cmp.w	r9, #32
    b50c:	d853      	bhi.n	b5b6 <_Unwind_VRS_Pop+0x182>
    b50e:	f1b8 0f0f 	cmp.w	r8, #15
    b512:	d973      	bls.n	b5fc <_Unwind_VRS_Pop+0x1c8>
    b514:	46a9      	mov	r9, r5
    b516:	2d00      	cmp	r5, #0
    b518:	f040 8084 	bne.w	b624 <_Unwind_VRS_Pop+0x1f0>
    b51c:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    b51e:	b365      	cbz	r5, b57a <_Unwind_VRS_Pop+0x146>
    b520:	af20      	add	r7, sp, #128	; 0x80
    b522:	f04f 0900 	mov.w	r9, #0
    b526:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
    b52a:	3f04      	subs	r7, #4
    b52c:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
    b530:	f853 1b04 	ldr.w	r1, [r3], #4
    b534:	42ab      	cmp	r3, r5
    b536:	f847 1f04 	str.w	r1, [r7, #4]!
    b53a:	d1f9      	bne.n	b530 <_Unwind_VRS_Pop+0xfc>
    b53c:	f1b9 0f00 	cmp.w	r9, #0
    b540:	d00f      	beq.n	b562 <_Unwind_VRS_Pop+0x12e>
    b542:	466f      	mov	r7, sp
    b544:	4641      	mov	r1, r8
    b546:	2910      	cmp	r1, #16
    b548:	bf38      	it	cc
    b54a:	2110      	movcc	r1, #16
    b54c:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
    b550:	3984      	subs	r1, #132	; 0x84
    b552:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
    b556:	f853 0b04 	ldr.w	r0, [r3], #4
    b55a:	42ab      	cmp	r3, r5
    b55c:	f841 0f04 	str.w	r0, [r1, #4]!
    b560:	d1f9      	bne.n	b556 <_Unwind_VRS_Pop+0x122>
    b562:	2c01      	cmp	r4, #1
    b564:	d07f      	beq.n	b666 <_Unwind_VRS_Pop+0x232>
    b566:	f1b8 0f0f 	cmp.w	r8, #15
    b56a:	63b5      	str	r5, [r6, #56]	; 0x38
    b56c:	d942      	bls.n	b5f4 <_Unwind_VRS_Pop+0x1c0>
    b56e:	f1b9 0f00 	cmp.w	r9, #0
    b572:	d002      	beq.n	b57a <_Unwind_VRS_Pop+0x146>
    b574:	4668      	mov	r0, sp
    b576:	f000 f8b3 	bl	b6e0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
    b57a:	2000      	movs	r0, #0
    b57c:	b043      	add	sp, #268	; 0x10c
    b57e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b582:	b9c4      	cbnz	r4, b5b6 <_Unwind_VRS_Pop+0x182>
    b584:	4623      	mov	r3, r4
    b586:	2401      	movs	r4, #1
    b588:	6b82      	ldr	r2, [r0, #56]	; 0x38
    b58a:	1d37      	adds	r7, r6, #4
    b58c:	b2a8      	uxth	r0, r5
    b58e:	fa04 f103 	lsl.w	r1, r4, r3
    b592:	4201      	tst	r1, r0
    b594:	bf1c      	itt	ne
    b596:	f852 1b04 	ldrne.w	r1, [r2], #4
    b59a:	f847 1023 	strne.w	r1, [r7, r3, lsl #2]
    b59e:	3301      	adds	r3, #1
    b5a0:	2b10      	cmp	r3, #16
    b5a2:	d1f4      	bne.n	b58e <_Unwind_VRS_Pop+0x15a>
    b5a4:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
    b5a8:	d1e7      	bne.n	b57a <_Unwind_VRS_Pop+0x146>
    b5aa:	63b2      	str	r2, [r6, #56]	; 0x38
    b5ac:	e004      	b.n	b5b8 <_Unwind_VRS_Pop+0x184>
    b5ae:	eb08 0305 	add.w	r3, r8, r5
    b5b2:	2b10      	cmp	r3, #16
    b5b4:	d903      	bls.n	b5be <_Unwind_VRS_Pop+0x18a>
    b5b6:	2002      	movs	r0, #2
    b5b8:	b043      	add	sp, #268	; 0x10c
    b5ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b5be:	f1b8 0f0f 	cmp.w	r8, #15
    b5c2:	d8f8      	bhi.n	b5b6 <_Unwind_VRS_Pop+0x182>
    b5c4:	6833      	ldr	r3, [r6, #0]
    b5c6:	07da      	lsls	r2, r3, #31
    b5c8:	d506      	bpl.n	b5d8 <_Unwind_VRS_Pop+0x1a4>
    b5ca:	4630      	mov	r0, r6
    b5cc:	f023 0303 	bic.w	r3, r3, #3
    b5d0:	f840 3b48 	str.w	r3, [r0], #72
    b5d4:	f000 f878 	bl	b6c8 <__gnu_Unwind_Save_VFP>
    b5d8:	af20      	add	r7, sp, #128	; 0x80
    b5da:	4638      	mov	r0, r7
    b5dc:	f000 f874 	bl	b6c8 <__gnu_Unwind_Save_VFP>
    b5e0:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    b5e2:	2d00      	cmp	r5, #0
    b5e4:	d19d      	bne.n	b522 <_Unwind_VRS_Pop+0xee>
    b5e6:	461d      	mov	r5, r3
    b5e8:	3504      	adds	r5, #4
    b5ea:	4638      	mov	r0, r7
    b5ec:	63b5      	str	r5, [r6, #56]	; 0x38
    b5ee:	f000 f867 	bl	b6c0 <__gnu_Unwind_Restore_VFP>
    b5f2:	e7c2      	b.n	b57a <_Unwind_VRS_Pop+0x146>
    b5f4:	a820      	add	r0, sp, #128	; 0x80
    b5f6:	f000 f86b 	bl	b6d0 <__gnu_Unwind_Restore_VFP_D>
    b5fa:	e7b8      	b.n	b56e <_Unwind_VRS_Pop+0x13a>
    b5fc:	f1b9 0f10 	cmp.w	r9, #16
    b600:	d93f      	bls.n	b682 <_Unwind_VRS_Pop+0x24e>
    b602:	f1a9 0910 	sub.w	r9, r9, #16
    b606:	6833      	ldr	r3, [r6, #0]
    b608:	07d9      	lsls	r1, r3, #31
    b60a:	d508      	bpl.n	b61e <_Unwind_VRS_Pop+0x1ea>
    b60c:	4630      	mov	r0, r6
    b60e:	f023 0301 	bic.w	r3, r3, #1
    b612:	f043 0302 	orr.w	r3, r3, #2
    b616:	f840 3b48 	str.w	r3, [r0], #72
    b61a:	f000 f85d 	bl	b6d8 <__gnu_Unwind_Save_VFP_D>
    b61e:	f1b9 0f00 	cmp.w	r9, #0
    b622:	d031      	beq.n	b688 <_Unwind_VRS_Pop+0x254>
    b624:	6833      	ldr	r3, [r6, #0]
    b626:	075a      	lsls	r2, r3, #29
    b628:	d41f      	bmi.n	b66a <_Unwind_VRS_Pop+0x236>
    b62a:	f1b8 0f0f 	cmp.w	r8, #15
    b62e:	d924      	bls.n	b67a <_Unwind_VRS_Pop+0x246>
    b630:	466f      	mov	r7, sp
    b632:	f1c8 0510 	rsb	r5, r8, #16
    b636:	4638      	mov	r0, r7
    b638:	f000 f856 	bl	b6e8 <__gnu_Unwind_Save_VFP_D_16_to_31>
    b63c:	2d00      	cmp	r5, #0
    b63e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    b640:	dd80      	ble.n	b544 <_Unwind_VRS_Pop+0x110>
    b642:	af20      	add	r7, sp, #128	; 0x80
    b644:	e76f      	b.n	b526 <_Unwind_VRS_Pop+0xf2>
    b646:	f023 0310 	bic.w	r3, r3, #16
    b64a:	6033      	str	r3, [r6, #0]
    b64c:	f506 70e8 	add.w	r0, r6, #464	; 0x1d0
    b650:	f000 f89c 	bl	b78c <__gnu_Unwind_Save_WMMXC>
    b654:	e706      	b.n	b464 <_Unwind_VRS_Pop+0x30>
    b656:	f023 0308 	bic.w	r3, r3, #8
    b65a:	6003      	str	r3, [r0, #0]
    b65c:	f500 70a8 	add.w	r0, r0, #336	; 0x150
    b660:	f000 f868 	bl	b734 <__gnu_Unwind_Save_WMMXD>
    b664:	e72c      	b.n	b4c0 <_Unwind_VRS_Pop+0x8c>
    b666:	af20      	add	r7, sp, #128	; 0x80
    b668:	e7be      	b.n	b5e8 <_Unwind_VRS_Pop+0x1b4>
    b66a:	4630      	mov	r0, r6
    b66c:	f023 0304 	bic.w	r3, r3, #4
    b670:	f840 3bd0 	str.w	r3, [r0], #208
    b674:	f000 f838 	bl	b6e8 <__gnu_Unwind_Save_VFP_D_16_to_31>
    b678:	e7d7      	b.n	b62a <_Unwind_VRS_Pop+0x1f6>
    b67a:	a820      	add	r0, sp, #128	; 0x80
    b67c:	f000 f82c 	bl	b6d8 <__gnu_Unwind_Save_VFP_D>
    b680:	e7d6      	b.n	b630 <_Unwind_VRS_Pop+0x1fc>
    b682:	f04f 0900 	mov.w	r9, #0
    b686:	e7be      	b.n	b606 <_Unwind_VRS_Pop+0x1d2>
    b688:	f1b8 0f0f 	cmp.w	r8, #15
    b68c:	f63f af46 	bhi.w	b51c <_Unwind_VRS_Pop+0xe8>
    b690:	af20      	add	r7, sp, #128	; 0x80
    b692:	4638      	mov	r0, r7
    b694:	f000 f820 	bl	b6d8 <__gnu_Unwind_Save_VFP_D>
    b698:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    b69a:	2d00      	cmp	r5, #0
    b69c:	f47f af41 	bne.w	b522 <_Unwind_VRS_Pop+0xee>
    b6a0:	4638      	mov	r0, r7
    b6a2:	f000 f815 	bl	b6d0 <__gnu_Unwind_Restore_VFP_D>
    b6a6:	e768      	b.n	b57a <_Unwind_VRS_Pop+0x146>

0000b6a8 <__restore_core_regs>:
    b6a8:	f100 0134 	add.w	r1, r0, #52	; 0x34
    b6ac:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
    b6b0:	469c      	mov	ip, r3
    b6b2:	46a6      	mov	lr, r4
    b6b4:	f84c 5d04 	str.w	r5, [ip, #-4]!
    b6b8:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    b6bc:	46e5      	mov	sp, ip
    b6be:	bd00      	pop	{pc}

0000b6c0 <__gnu_Unwind_Restore_VFP>:
    b6c0:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
    b6c4:	4770      	bx	lr
    b6c6:	bf00      	nop

0000b6c8 <__gnu_Unwind_Save_VFP>:
    b6c8:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
    b6cc:	4770      	bx	lr
    b6ce:	bf00      	nop

0000b6d0 <__gnu_Unwind_Restore_VFP_D>:
    b6d0:	ec90 0b20 	vldmia	r0, {d0-d15}
    b6d4:	4770      	bx	lr
    b6d6:	bf00      	nop

0000b6d8 <__gnu_Unwind_Save_VFP_D>:
    b6d8:	ec80 0b20 	vstmia	r0, {d0-d15}
    b6dc:	4770      	bx	lr
    b6de:	bf00      	nop

0000b6e0 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
    b6e0:	ecd0 0b20 	vldmia	r0, {d16-d31}
    b6e4:	4770      	bx	lr
    b6e6:	bf00      	nop

0000b6e8 <__gnu_Unwind_Save_VFP_D_16_to_31>:
    b6e8:	ecc0 0b20 	vstmia	r0, {d16-d31}
    b6ec:	4770      	bx	lr
    b6ee:	bf00      	nop

0000b6f0 <__gnu_Unwind_Restore_WMMXD>:
    b6f0:	ecf0 0102 	ldfe	f0, [r0], #8
    b6f4:	ecf0 1102 	ldfe	f1, [r0], #8
    b6f8:	ecf0 2102 	ldfe	f2, [r0], #8
    b6fc:	ecf0 3102 	ldfe	f3, [r0], #8
    b700:	ecf0 4102 	ldfe	f4, [r0], #8
    b704:	ecf0 5102 	ldfe	f5, [r0], #8
    b708:	ecf0 6102 	ldfe	f6, [r0], #8
    b70c:	ecf0 7102 	ldfe	f7, [r0], #8
    b710:	ecf0 8102 	ldfp	f0, [r0], #8
    b714:	ecf0 9102 	ldfp	f1, [r0], #8
    b718:	ecf0 a102 	ldfp	f2, [r0], #8
    b71c:	ecf0 b102 	ldfp	f3, [r0], #8
    b720:	ecf0 c102 	ldfp	f4, [r0], #8
    b724:	ecf0 d102 	ldfp	f5, [r0], #8
    b728:	ecf0 e102 	ldfp	f6, [r0], #8
    b72c:	ecf0 f102 	ldfp	f7, [r0], #8
    b730:	4770      	bx	lr
    b732:	bf00      	nop

0000b734 <__gnu_Unwind_Save_WMMXD>:
    b734:	ece0 0102 	stfe	f0, [r0], #8
    b738:	ece0 1102 	stfe	f1, [r0], #8
    b73c:	ece0 2102 	stfe	f2, [r0], #8
    b740:	ece0 3102 	stfe	f3, [r0], #8
    b744:	ece0 4102 	stfe	f4, [r0], #8
    b748:	ece0 5102 	stfe	f5, [r0], #8
    b74c:	ece0 6102 	stfe	f6, [r0], #8
    b750:	ece0 7102 	stfe	f7, [r0], #8
    b754:	ece0 8102 	stfp	f0, [r0], #8
    b758:	ece0 9102 	stfp	f1, [r0], #8
    b75c:	ece0 a102 	stfp	f2, [r0], #8
    b760:	ece0 b102 	stfp	f3, [r0], #8
    b764:	ece0 c102 	stfp	f4, [r0], #8
    b768:	ece0 d102 	stfp	f5, [r0], #8
    b76c:	ece0 e102 	stfp	f6, [r0], #8
    b770:	ece0 f102 	stfp	f7, [r0], #8
    b774:	4770      	bx	lr
    b776:	bf00      	nop

0000b778 <__gnu_Unwind_Restore_WMMXC>:
    b778:	fcb0 8101 	ldc2	1, cr8, [r0], #4
    b77c:	fcb0 9101 	ldc2	1, cr9, [r0], #4
    b780:	fcb0 a101 	ldc2	1, cr10, [r0], #4
    b784:	fcb0 b101 	ldc2	1, cr11, [r0], #4
    b788:	4770      	bx	lr
    b78a:	bf00      	nop

0000b78c <__gnu_Unwind_Save_WMMXC>:
    b78c:	fca0 8101 	stc2	1, cr8, [r0], #4
    b790:	fca0 9101 	stc2	1, cr9, [r0], #4
    b794:	fca0 a101 	stc2	1, cr10, [r0], #4
    b798:	fca0 b101 	stc2	1, cr11, [r0], #4
    b79c:	4770      	bx	lr
    b79e:	bf00      	nop

0000b7a0 <_Unwind_RaiseException>:
    b7a0:	46ec      	mov	ip, sp
    b7a2:	b500      	push	{lr}
    b7a4:	e92d 5000 	stmdb	sp!, {ip, lr}
    b7a8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b7ac:	f04f 0300 	mov.w	r3, #0
    b7b0:	e92d 000c 	stmdb	sp!, {r2, r3}
    b7b4:	a901      	add	r1, sp, #4
    b7b6:	f7ff fbe7 	bl	af88 <__gnu_Unwind_RaiseException>
    b7ba:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b7be:	b012      	add	sp, #72	; 0x48
    b7c0:	4770      	bx	lr
    b7c2:	bf00      	nop

0000b7c4 <_Unwind_Resume>:
    b7c4:	46ec      	mov	ip, sp
    b7c6:	b500      	push	{lr}
    b7c8:	e92d 5000 	stmdb	sp!, {ip, lr}
    b7cc:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b7d0:	f04f 0300 	mov.w	r3, #0
    b7d4:	e92d 000c 	stmdb	sp!, {r2, r3}
    b7d8:	a901      	add	r1, sp, #4
    b7da:	f7ff fc13 	bl	b004 <__gnu_Unwind_Resume>
    b7de:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b7e2:	b012      	add	sp, #72	; 0x48
    b7e4:	4770      	bx	lr
    b7e6:	bf00      	nop

0000b7e8 <_Unwind_Resume_or_Rethrow>:
    b7e8:	46ec      	mov	ip, sp
    b7ea:	b500      	push	{lr}
    b7ec:	e92d 5000 	stmdb	sp!, {ip, lr}
    b7f0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b7f4:	f04f 0300 	mov.w	r3, #0
    b7f8:	e92d 000c 	stmdb	sp!, {r2, r3}
    b7fc:	a901      	add	r1, sp, #4
    b7fe:	f7ff fc23 	bl	b048 <__gnu_Unwind_Resume_or_Rethrow>
    b802:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b806:	b012      	add	sp, #72	; 0x48
    b808:	4770      	bx	lr
    b80a:	bf00      	nop

0000b80c <_Unwind_ForcedUnwind>:
    b80c:	46ec      	mov	ip, sp
    b80e:	b500      	push	{lr}
    b810:	e92d 5000 	stmdb	sp!, {ip, lr}
    b814:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b818:	f04f 0300 	mov.w	r3, #0
    b81c:	e92d 000c 	stmdb	sp!, {r2, r3}
    b820:	ab01      	add	r3, sp, #4
    b822:	f7ff fbe5 	bl	aff0 <__gnu_Unwind_ForcedUnwind>
    b826:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b82a:	b012      	add	sp, #72	; 0x48
    b82c:	4770      	bx	lr
    b82e:	bf00      	nop

0000b830 <_Unwind_Backtrace>:
    b830:	46ec      	mov	ip, sp
    b832:	b500      	push	{lr}
    b834:	e92d 5000 	stmdb	sp!, {ip, lr}
    b838:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b83c:	f04f 0300 	mov.w	r3, #0
    b840:	e92d 000c 	stmdb	sp!, {r2, r3}
    b844:	aa01      	add	r2, sp, #4
    b846:	f7ff fc5b 	bl	b100 <__gnu_Unwind_Backtrace>
    b84a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b84e:	b012      	add	sp, #72	; 0x48
    b850:	4770      	bx	lr
    b852:	bf00      	nop

0000b854 <next_unwind_byte>:
    b854:	7a02      	ldrb	r2, [r0, #8]
    b856:	4603      	mov	r3, r0
    b858:	b97a      	cbnz	r2, b87a <next_unwind_byte+0x26>
    b85a:	7a42      	ldrb	r2, [r0, #9]
    b85c:	b1a2      	cbz	r2, b888 <next_unwind_byte+0x34>
    b85e:	f04f 0c03 	mov.w	ip, #3
    b862:	6841      	ldr	r1, [r0, #4]
    b864:	3a01      	subs	r2, #1
    b866:	7242      	strb	r2, [r0, #9]
    b868:	6808      	ldr	r0, [r1, #0]
    b86a:	1d0a      	adds	r2, r1, #4
    b86c:	605a      	str	r2, [r3, #4]
    b86e:	0202      	lsls	r2, r0, #8
    b870:	f883 c008 	strb.w	ip, [r3, #8]
    b874:	0e00      	lsrs	r0, r0, #24
    b876:	601a      	str	r2, [r3, #0]
    b878:	4770      	bx	lr
    b87a:	6800      	ldr	r0, [r0, #0]
    b87c:	3a01      	subs	r2, #1
    b87e:	721a      	strb	r2, [r3, #8]
    b880:	0202      	lsls	r2, r0, #8
    b882:	601a      	str	r2, [r3, #0]
    b884:	0e00      	lsrs	r0, r0, #24
    b886:	4770      	bx	lr
    b888:	20b0      	movs	r0, #176	; 0xb0
    b88a:	4770      	bx	lr

0000b88c <_Unwind_GetGR.constprop.0>:
    b88c:	2300      	movs	r3, #0
    b88e:	b500      	push	{lr}
    b890:	b085      	sub	sp, #20
    b892:	a903      	add	r1, sp, #12
    b894:	9100      	str	r1, [sp, #0]
    b896:	220c      	movs	r2, #12
    b898:	4619      	mov	r1, r3
    b89a:	f7ff fbe7 	bl	b06c <_Unwind_VRS_Get>
    b89e:	9803      	ldr	r0, [sp, #12]
    b8a0:	b005      	add	sp, #20
    b8a2:	f85d fb04 	ldr.w	pc, [sp], #4
    b8a6:	bf00      	nop

0000b8a8 <unwind_UCB_from_context>:
    b8a8:	e7f0      	b.n	b88c <_Unwind_GetGR.constprop.0>
    b8aa:	bf00      	nop

0000b8ac <__gnu_unwind_execute>:
    b8ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b8b0:	f04f 0800 	mov.w	r8, #0
    b8b4:	4605      	mov	r5, r0
    b8b6:	460e      	mov	r6, r1
    b8b8:	b085      	sub	sp, #20
    b8ba:	4630      	mov	r0, r6
    b8bc:	f7ff ffca 	bl	b854 <next_unwind_byte>
    b8c0:	28b0      	cmp	r0, #176	; 0xb0
    b8c2:	4604      	mov	r4, r0
    b8c4:	f000 80ba 	beq.w	ba3c <__gnu_unwind_execute+0x190>
    b8c8:	0607      	lsls	r7, r0, #24
    b8ca:	d520      	bpl.n	b90e <__gnu_unwind_execute+0x62>
    b8cc:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
    b8d0:	2b80      	cmp	r3, #128	; 0x80
    b8d2:	d04d      	beq.n	b970 <__gnu_unwind_execute+0xc4>
    b8d4:	2b90      	cmp	r3, #144	; 0x90
    b8d6:	d036      	beq.n	b946 <__gnu_unwind_execute+0x9a>
    b8d8:	2ba0      	cmp	r3, #160	; 0xa0
    b8da:	d060      	beq.n	b99e <__gnu_unwind_execute+0xf2>
    b8dc:	2bb0      	cmp	r3, #176	; 0xb0
    b8de:	d073      	beq.n	b9c8 <__gnu_unwind_execute+0x11c>
    b8e0:	2bc0      	cmp	r3, #192	; 0xc0
    b8e2:	f000 808a 	beq.w	b9fa <__gnu_unwind_execute+0x14e>
    b8e6:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
    b8ea:	2bd0      	cmp	r3, #208	; 0xd0
    b8ec:	d10b      	bne.n	b906 <__gnu_unwind_execute+0x5a>
    b8ee:	f000 0207 	and.w	r2, r0, #7
    b8f2:	3201      	adds	r2, #1
    b8f4:	2305      	movs	r3, #5
    b8f6:	2101      	movs	r1, #1
    b8f8:	4628      	mov	r0, r5
    b8fa:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    b8fe:	f7ff fd99 	bl	b434 <_Unwind_VRS_Pop>
    b902:	2800      	cmp	r0, #0
    b904:	d0d9      	beq.n	b8ba <__gnu_unwind_execute+0xe>
    b906:	2009      	movs	r0, #9
    b908:	b005      	add	sp, #20
    b90a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b90e:	0083      	lsls	r3, r0, #2
    b910:	b2db      	uxtb	r3, r3
    b912:	1d1f      	adds	r7, r3, #4
    b914:	2300      	movs	r3, #0
    b916:	f10d 090c 	add.w	r9, sp, #12
    b91a:	4619      	mov	r1, r3
    b91c:	220d      	movs	r2, #13
    b91e:	4628      	mov	r0, r5
    b920:	f8cd 9000 	str.w	r9, [sp]
    b924:	f7ff fba2 	bl	b06c <_Unwind_VRS_Get>
    b928:	9b03      	ldr	r3, [sp, #12]
    b92a:	0660      	lsls	r0, r4, #25
    b92c:	bf4c      	ite	mi
    b92e:	1bdf      	submi	r7, r3, r7
    b930:	18ff      	addpl	r7, r7, r3
    b932:	2300      	movs	r3, #0
    b934:	220d      	movs	r2, #13
    b936:	4628      	mov	r0, r5
    b938:	4619      	mov	r1, r3
    b93a:	f8cd 9000 	str.w	r9, [sp]
    b93e:	9703      	str	r7, [sp, #12]
    b940:	f7ff fbba 	bl	b0b8 <_Unwind_VRS_Set>
    b944:	e7b9      	b.n	b8ba <__gnu_unwind_execute+0xe>
    b946:	f000 030d 	and.w	r3, r0, #13
    b94a:	2b0d      	cmp	r3, #13
    b94c:	d0db      	beq.n	b906 <__gnu_unwind_execute+0x5a>
    b94e:	2300      	movs	r3, #0
    b950:	af03      	add	r7, sp, #12
    b952:	4619      	mov	r1, r3
    b954:	f000 020f 	and.w	r2, r0, #15
    b958:	9700      	str	r7, [sp, #0]
    b95a:	4628      	mov	r0, r5
    b95c:	f7ff fb86 	bl	b06c <_Unwind_VRS_Get>
    b960:	2300      	movs	r3, #0
    b962:	220d      	movs	r2, #13
    b964:	4628      	mov	r0, r5
    b966:	4619      	mov	r1, r3
    b968:	9700      	str	r7, [sp, #0]
    b96a:	f7ff fba5 	bl	b0b8 <_Unwind_VRS_Set>
    b96e:	e7a4      	b.n	b8ba <__gnu_unwind_execute+0xe>
    b970:	4630      	mov	r0, r6
    b972:	f7ff ff6f 	bl	b854 <next_unwind_byte>
    b976:	0224      	lsls	r4, r4, #8
    b978:	4320      	orrs	r0, r4
    b97a:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
    b97e:	d0c2      	beq.n	b906 <__gnu_unwind_execute+0x5a>
    b980:	2300      	movs	r3, #0
    b982:	0104      	lsls	r4, r0, #4
    b984:	4619      	mov	r1, r3
    b986:	4628      	mov	r0, r5
    b988:	b2a2      	uxth	r2, r4
    b98a:	f7ff fd53 	bl	b434 <_Unwind_VRS_Pop>
    b98e:	2800      	cmp	r0, #0
    b990:	d1b9      	bne.n	b906 <__gnu_unwind_execute+0x5a>
    b992:	f414 4f00 	tst.w	r4, #32768	; 0x8000
    b996:	bf18      	it	ne
    b998:	f04f 0801 	movne.w	r8, #1
    b99c:	e78d      	b.n	b8ba <__gnu_unwind_execute+0xe>
    b99e:	43c3      	mvns	r3, r0
    b9a0:	f44f 627f 	mov.w	r2, #4080	; 0xff0
    b9a4:	f003 0307 	and.w	r3, r3, #7
    b9a8:	411a      	asrs	r2, r3
    b9aa:	2300      	movs	r3, #0
    b9ac:	0701      	lsls	r1, r0, #28
    b9ae:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
    b9b2:	bf48      	it	mi
    b9b4:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
    b9b8:	4628      	mov	r0, r5
    b9ba:	4619      	mov	r1, r3
    b9bc:	f7ff fd3a 	bl	b434 <_Unwind_VRS_Pop>
    b9c0:	2800      	cmp	r0, #0
    b9c2:	f43f af7a 	beq.w	b8ba <__gnu_unwind_execute+0xe>
    b9c6:	e79e      	b.n	b906 <__gnu_unwind_execute+0x5a>
    b9c8:	28b1      	cmp	r0, #177	; 0xb1
    b9ca:	d03c      	beq.n	ba46 <__gnu_unwind_execute+0x19a>
    b9cc:	28b2      	cmp	r0, #178	; 0xb2
    b9ce:	f000 80b0 	beq.w	bb32 <__gnu_unwind_execute+0x286>
    b9d2:	28b3      	cmp	r0, #179	; 0xb3
    b9d4:	d04a      	beq.n	ba6c <__gnu_unwind_execute+0x1c0>
    b9d6:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
    b9da:	2bb4      	cmp	r3, #180	; 0xb4
    b9dc:	d093      	beq.n	b906 <__gnu_unwind_execute+0x5a>
    b9de:	2301      	movs	r3, #1
    b9e0:	f000 0207 	and.w	r2, r0, #7
    b9e4:	441a      	add	r2, r3
    b9e6:	4628      	mov	r0, r5
    b9e8:	4619      	mov	r1, r3
    b9ea:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    b9ee:	f7ff fd21 	bl	b434 <_Unwind_VRS_Pop>
    b9f2:	2800      	cmp	r0, #0
    b9f4:	f43f af61 	beq.w	b8ba <__gnu_unwind_execute+0xe>
    b9f8:	e785      	b.n	b906 <__gnu_unwind_execute+0x5a>
    b9fa:	28c6      	cmp	r0, #198	; 0xc6
    b9fc:	d04f      	beq.n	ba9e <__gnu_unwind_execute+0x1f2>
    b9fe:	28c7      	cmp	r0, #199	; 0xc7
    ba00:	d061      	beq.n	bac6 <__gnu_unwind_execute+0x21a>
    ba02:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
    ba06:	2bc0      	cmp	r3, #192	; 0xc0
    ba08:	d070      	beq.n	baec <__gnu_unwind_execute+0x240>
    ba0a:	28c8      	cmp	r0, #200	; 0xc8
    ba0c:	d07c      	beq.n	bb08 <__gnu_unwind_execute+0x25c>
    ba0e:	28c9      	cmp	r0, #201	; 0xc9
    ba10:	f47f af79 	bne.w	b906 <__gnu_unwind_execute+0x5a>
    ba14:	4630      	mov	r0, r6
    ba16:	f7ff ff1d 	bl	b854 <next_unwind_byte>
    ba1a:	2305      	movs	r3, #5
    ba1c:	4602      	mov	r2, r0
    ba1e:	2101      	movs	r1, #1
    ba20:	4628      	mov	r0, r5
    ba22:	0314      	lsls	r4, r2, #12
    ba24:	f002 020f 	and.w	r2, r2, #15
    ba28:	f404 2470 	and.w	r4, r4, #983040	; 0xf0000
    ba2c:	440a      	add	r2, r1
    ba2e:	4322      	orrs	r2, r4
    ba30:	f7ff fd00 	bl	b434 <_Unwind_VRS_Pop>
    ba34:	2800      	cmp	r0, #0
    ba36:	f43f af40 	beq.w	b8ba <__gnu_unwind_execute+0xe>
    ba3a:	e764      	b.n	b906 <__gnu_unwind_execute+0x5a>
    ba3c:	f1b8 0f00 	cmp.w	r8, #0
    ba40:	d01c      	beq.n	ba7c <__gnu_unwind_execute+0x1d0>
    ba42:	2000      	movs	r0, #0
    ba44:	e760      	b.n	b908 <__gnu_unwind_execute+0x5c>
    ba46:	4630      	mov	r0, r6
    ba48:	f7ff ff04 	bl	b854 <next_unwind_byte>
    ba4c:	4602      	mov	r2, r0
    ba4e:	2800      	cmp	r0, #0
    ba50:	f43f af59 	beq.w	b906 <__gnu_unwind_execute+0x5a>
    ba54:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
    ba58:	f47f af55 	bne.w	b906 <__gnu_unwind_execute+0x5a>
    ba5c:	4619      	mov	r1, r3
    ba5e:	4628      	mov	r0, r5
    ba60:	f7ff fce8 	bl	b434 <_Unwind_VRS_Pop>
    ba64:	2800      	cmp	r0, #0
    ba66:	f43f af28 	beq.w	b8ba <__gnu_unwind_execute+0xe>
    ba6a:	e74c      	b.n	b906 <__gnu_unwind_execute+0x5a>
    ba6c:	4630      	mov	r0, r6
    ba6e:	f7ff fef1 	bl	b854 <next_unwind_byte>
    ba72:	2301      	movs	r3, #1
    ba74:	4602      	mov	r2, r0
    ba76:	4619      	mov	r1, r3
    ba78:	4628      	mov	r0, r5
    ba7a:	e7d2      	b.n	ba22 <__gnu_unwind_execute+0x176>
    ba7c:	ac03      	add	r4, sp, #12
    ba7e:	4643      	mov	r3, r8
    ba80:	220e      	movs	r2, #14
    ba82:	4641      	mov	r1, r8
    ba84:	4628      	mov	r0, r5
    ba86:	9400      	str	r4, [sp, #0]
    ba88:	f7ff faf0 	bl	b06c <_Unwind_VRS_Get>
    ba8c:	4643      	mov	r3, r8
    ba8e:	220f      	movs	r2, #15
    ba90:	4628      	mov	r0, r5
    ba92:	4641      	mov	r1, r8
    ba94:	9400      	str	r4, [sp, #0]
    ba96:	f7ff fb0f 	bl	b0b8 <_Unwind_VRS_Set>
    ba9a:	4640      	mov	r0, r8
    ba9c:	e734      	b.n	b908 <__gnu_unwind_execute+0x5c>
    ba9e:	4630      	mov	r0, r6
    baa0:	f7ff fed8 	bl	b854 <next_unwind_byte>
    baa4:	4602      	mov	r2, r0
    baa6:	2303      	movs	r3, #3
    baa8:	0314      	lsls	r4, r2, #12
    baaa:	f002 020f 	and.w	r2, r2, #15
    baae:	f404 2470 	and.w	r4, r4, #983040	; 0xf0000
    bab2:	3201      	adds	r2, #1
    bab4:	4628      	mov	r0, r5
    bab6:	4619      	mov	r1, r3
    bab8:	4322      	orrs	r2, r4
    baba:	f7ff fcbb 	bl	b434 <_Unwind_VRS_Pop>
    babe:	2800      	cmp	r0, #0
    bac0:	f43f aefb 	beq.w	b8ba <__gnu_unwind_execute+0xe>
    bac4:	e71f      	b.n	b906 <__gnu_unwind_execute+0x5a>
    bac6:	4630      	mov	r0, r6
    bac8:	f7ff fec4 	bl	b854 <next_unwind_byte>
    bacc:	4602      	mov	r2, r0
    bace:	2800      	cmp	r0, #0
    bad0:	f43f af19 	beq.w	b906 <__gnu_unwind_execute+0x5a>
    bad4:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
    bad8:	f47f af15 	bne.w	b906 <__gnu_unwind_execute+0x5a>
    badc:	2104      	movs	r1, #4
    bade:	4628      	mov	r0, r5
    bae0:	f7ff fca8 	bl	b434 <_Unwind_VRS_Pop>
    bae4:	2800      	cmp	r0, #0
    bae6:	f43f aee8 	beq.w	b8ba <__gnu_unwind_execute+0xe>
    baea:	e70c      	b.n	b906 <__gnu_unwind_execute+0x5a>
    baec:	2303      	movs	r3, #3
    baee:	f000 020f 	and.w	r2, r0, #15
    baf2:	3201      	adds	r2, #1
    baf4:	4628      	mov	r0, r5
    baf6:	4619      	mov	r1, r3
    baf8:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
    bafc:	f7ff fc9a 	bl	b434 <_Unwind_VRS_Pop>
    bb00:	2800      	cmp	r0, #0
    bb02:	f43f aeda 	beq.w	b8ba <__gnu_unwind_execute+0xe>
    bb06:	e6fe      	b.n	b906 <__gnu_unwind_execute+0x5a>
    bb08:	4630      	mov	r0, r6
    bb0a:	f7ff fea3 	bl	b854 <next_unwind_byte>
    bb0e:	4602      	mov	r2, r0
    bb10:	2101      	movs	r1, #1
    bb12:	f002 04f0 	and.w	r4, r2, #240	; 0xf0
    bb16:	f002 020f 	and.w	r2, r2, #15
    bb1a:	3410      	adds	r4, #16
    bb1c:	440a      	add	r2, r1
    bb1e:	2305      	movs	r3, #5
    bb20:	4628      	mov	r0, r5
    bb22:	ea42 3204 	orr.w	r2, r2, r4, lsl #12
    bb26:	f7ff fc85 	bl	b434 <_Unwind_VRS_Pop>
    bb2a:	2800      	cmp	r0, #0
    bb2c:	f43f aec5 	beq.w	b8ba <__gnu_unwind_execute+0xe>
    bb30:	e6e9      	b.n	b906 <__gnu_unwind_execute+0x5a>
    bb32:	2300      	movs	r3, #0
    bb34:	f10d 090c 	add.w	r9, sp, #12
    bb38:	220d      	movs	r2, #13
    bb3a:	4619      	mov	r1, r3
    bb3c:	4628      	mov	r0, r5
    bb3e:	f8cd 9000 	str.w	r9, [sp]
    bb42:	f7ff fa93 	bl	b06c <_Unwind_VRS_Get>
    bb46:	4630      	mov	r0, r6
    bb48:	f7ff fe84 	bl	b854 <next_unwind_byte>
    bb4c:	0602      	lsls	r2, r0, #24
    bb4e:	f04f 0402 	mov.w	r4, #2
    bb52:	d50c      	bpl.n	bb6e <__gnu_unwind_execute+0x2c2>
    bb54:	9b03      	ldr	r3, [sp, #12]
    bb56:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    bb5a:	40a0      	lsls	r0, r4
    bb5c:	4418      	add	r0, r3
    bb5e:	9003      	str	r0, [sp, #12]
    bb60:	4630      	mov	r0, r6
    bb62:	f7ff fe77 	bl	b854 <next_unwind_byte>
    bb66:	0603      	lsls	r3, r0, #24
    bb68:	f104 0407 	add.w	r4, r4, #7
    bb6c:	d4f2      	bmi.n	bb54 <__gnu_unwind_execute+0x2a8>
    bb6e:	9b03      	ldr	r3, [sp, #12]
    bb70:	f000 027f 	and.w	r2, r0, #127	; 0x7f
    bb74:	40a2      	lsls	r2, r4
    bb76:	f503 7301 	add.w	r3, r3, #516	; 0x204
    bb7a:	441a      	add	r2, r3
    bb7c:	2300      	movs	r3, #0
    bb7e:	9203      	str	r2, [sp, #12]
    bb80:	4628      	mov	r0, r5
    bb82:	220d      	movs	r2, #13
    bb84:	4619      	mov	r1, r3
    bb86:	f8cd 9000 	str.w	r9, [sp]
    bb8a:	f7ff fa95 	bl	b0b8 <_Unwind_VRS_Set>
    bb8e:	e694      	b.n	b8ba <__gnu_unwind_execute+0xe>

0000bb90 <__gnu_unwind_frame>:
    bb90:	460b      	mov	r3, r1
    bb92:	f04f 0c03 	mov.w	ip, #3
    bb96:	b500      	push	{lr}
    bb98:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
    bb9a:	4618      	mov	r0, r3
    bb9c:	6853      	ldr	r3, [r2, #4]
    bb9e:	b085      	sub	sp, #20
    bba0:	3208      	adds	r2, #8
    bba2:	9202      	str	r2, [sp, #8]
    bba4:	a901      	add	r1, sp, #4
    bba6:	0e1a      	lsrs	r2, r3, #24
    bba8:	021b      	lsls	r3, r3, #8
    bbaa:	f88d c00c 	strb.w	ip, [sp, #12]
    bbae:	9301      	str	r3, [sp, #4]
    bbb0:	f88d 200d 	strb.w	r2, [sp, #13]
    bbb4:	f7ff fe7a 	bl	b8ac <__gnu_unwind_execute>
    bbb8:	b005      	add	sp, #20
    bbba:	f85d fb04 	ldr.w	pc, [sp], #4
    bbbe:	bf00      	nop

0000bbc0 <_Unwind_GetRegionStart>:
    bbc0:	b508      	push	{r3, lr}
    bbc2:	f7ff fe71 	bl	b8a8 <unwind_UCB_from_context>
    bbc6:	6c80      	ldr	r0, [r0, #72]	; 0x48
    bbc8:	bd08      	pop	{r3, pc}
    bbca:	bf00      	nop

0000bbcc <_Unwind_GetLanguageSpecificData>:
    bbcc:	b508      	push	{r3, lr}
    bbce:	f7ff fe6b 	bl	b8a8 <unwind_UCB_from_context>
    bbd2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    bbd4:	79c3      	ldrb	r3, [r0, #7]
    bbd6:	3302      	adds	r3, #2
    bbd8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
    bbdc:	bd08      	pop	{r3, pc}
    bbde:	bf00      	nop

0000bbe0 <_Unwind_GetDataRelBase>:
    bbe0:	b508      	push	{r3, lr}
    bbe2:	f000 f803 	bl	bbec <abort>

0000bbe6 <_Unwind_GetTextRelBase>:
    bbe6:	b508      	push	{r3, lr}
    bbe8:	f7ff fffa 	bl	bbe0 <_Unwind_GetDataRelBase>

0000bbec <abort>:
    bbec:	2006      	movs	r0, #6
    bbee:	b508      	push	{r3, lr}
    bbf0:	f001 fb5a 	bl	d2a8 <raise>
    bbf4:	2001      	movs	r0, #1
    bbf6:	f00b fa05 	bl	17004 <_exit>
    bbfa:	bf00      	nop

0000bbfc <__assert_func>:
    bbfc:	4614      	mov	r4, r2
    bbfe:	b500      	push	{lr}
    bc00:	461a      	mov	r2, r3
    bc02:	4b0a      	ldr	r3, [pc, #40]	; (bc2c <__assert_func+0x30>)
    bc04:	460d      	mov	r5, r1
    bc06:	681b      	ldr	r3, [r3, #0]
    bc08:	b085      	sub	sp, #20
    bc0a:	68de      	ldr	r6, [r3, #12]
    bc0c:	4603      	mov	r3, r0
    bc0e:	b14c      	cbz	r4, bc24 <__assert_func+0x28>
    bc10:	4907      	ldr	r1, [pc, #28]	; (bc30 <__assert_func+0x34>)
    bc12:	9101      	str	r1, [sp, #4]
    bc14:	4630      	mov	r0, r6
    bc16:	4907      	ldr	r1, [pc, #28]	; (bc34 <__assert_func+0x38>)
    bc18:	9402      	str	r4, [sp, #8]
    bc1a:	9500      	str	r5, [sp, #0]
    bc1c:	f000 f832 	bl	bc84 <fiprintf>
    bc20:	f7ff ffe4 	bl	bbec <abort>
    bc24:	4904      	ldr	r1, [pc, #16]	; (bc38 <__assert_func+0x3c>)
    bc26:	460c      	mov	r4, r1
    bc28:	e7f3      	b.n	bc12 <__assert_func+0x16>
    bc2a:	bf00      	nop
    bc2c:	20000124 	.word	0x20000124
    bc30:	0001a17c 	.word	0x0001a17c
    bc34:	0001a18c 	.word	0x0001a18c
    bc38:	0001a188 	.word	0x0001a188

0000bc3c <__assert>:
    bc3c:	b508      	push	{r3, lr}
    bc3e:	4613      	mov	r3, r2
    bc40:	2200      	movs	r2, #0
    bc42:	f7ff ffdb 	bl	bbfc <__assert_func>
    bc46:	bf00      	nop

0000bc48 <exit>:
    bc48:	b508      	push	{r3, lr}
    bc4a:	2100      	movs	r1, #0
    bc4c:	4604      	mov	r4, r0
    bc4e:	f006 f91d 	bl	11e8c <__call_exitprocs>
    bc52:	4b04      	ldr	r3, [pc, #16]	; (bc64 <exit+0x1c>)
    bc54:	6818      	ldr	r0, [r3, #0]
    bc56:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
    bc58:	b103      	cbz	r3, bc5c <exit+0x14>
    bc5a:	4798      	blx	r3
    bc5c:	4620      	mov	r0, r4
    bc5e:	f00b f9d1 	bl	17004 <_exit>
    bc62:	bf00      	nop
    bc64:	0001a1bc 	.word	0x0001a1bc

0000bc68 <_fiprintf_r>:
    bc68:	b40c      	push	{r2, r3}
    bc6a:	b500      	push	{lr}
    bc6c:	b083      	sub	sp, #12
    bc6e:	ab04      	add	r3, sp, #16
    bc70:	f853 2b04 	ldr.w	r2, [r3], #4
    bc74:	9301      	str	r3, [sp, #4]
    bc76:	f003 fb05 	bl	f284 <_vfiprintf_r>
    bc7a:	b003      	add	sp, #12
    bc7c:	f85d eb04 	ldr.w	lr, [sp], #4
    bc80:	b002      	add	sp, #8
    bc82:	4770      	bx	lr

0000bc84 <fiprintf>:
    bc84:	b40e      	push	{r1, r2, r3}
    bc86:	b500      	push	{lr}
    bc88:	4a07      	ldr	r2, [pc, #28]	; (bca8 <fiprintf+0x24>)
    bc8a:	b082      	sub	sp, #8
    bc8c:	ab03      	add	r3, sp, #12
    bc8e:	4601      	mov	r1, r0
    bc90:	6810      	ldr	r0, [r2, #0]
    bc92:	f853 2b04 	ldr.w	r2, [r3], #4
    bc96:	9301      	str	r3, [sp, #4]
    bc98:	f003 faf4 	bl	f284 <_vfiprintf_r>
    bc9c:	b002      	add	sp, #8
    bc9e:	f85d eb04 	ldr.w	lr, [sp], #4
    bca2:	b003      	add	sp, #12
    bca4:	4770      	bx	lr
    bca6:	bf00      	nop
    bca8:	20000124 	.word	0x20000124

0000bcac <_fputc_r>:
    bcac:	b570      	push	{r4, r5, r6, lr}
    bcae:	4605      	mov	r5, r0
    bcb0:	460e      	mov	r6, r1
    bcb2:	4614      	mov	r4, r2
    bcb4:	b108      	cbz	r0, bcba <_fputc_r+0xe>
    bcb6:	6b83      	ldr	r3, [r0, #56]	; 0x38
    bcb8:	b19b      	cbz	r3, bce2 <_fputc_r+0x36>
    bcba:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bcbc:	07d8      	lsls	r0, r3, #31
    bcbe:	d402      	bmi.n	bcc6 <_fputc_r+0x1a>
    bcc0:	89a3      	ldrh	r3, [r4, #12]
    bcc2:	0599      	lsls	r1, r3, #22
    bcc4:	d515      	bpl.n	bcf2 <_fputc_r+0x46>
    bcc6:	4622      	mov	r2, r4
    bcc8:	4628      	mov	r0, r5
    bcca:	4631      	mov	r1, r6
    bccc:	f000 ff76 	bl	cbbc <_putc_r>
    bcd0:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bcd2:	4605      	mov	r5, r0
    bcd4:	07da      	lsls	r2, r3, #31
    bcd6:	d402      	bmi.n	bcde <_fputc_r+0x32>
    bcd8:	89a3      	ldrh	r3, [r4, #12]
    bcda:	059b      	lsls	r3, r3, #22
    bcdc:	d504      	bpl.n	bce8 <_fputc_r+0x3c>
    bcde:	4628      	mov	r0, r5
    bce0:	bd70      	pop	{r4, r5, r6, pc}
    bce2:	f007 fa75 	bl	131d0 <__sinit>
    bce6:	e7e8      	b.n	bcba <_fputc_r+0xe>
    bce8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bcea:	f000 fab9 	bl	c260 <__retarget_lock_release_recursive>
    bcee:	4628      	mov	r0, r5
    bcf0:	bd70      	pop	{r4, r5, r6, pc}
    bcf2:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bcf4:	f000 faac 	bl	c250 <__retarget_lock_acquire_recursive>
    bcf8:	e7e5      	b.n	bcc6 <_fputc_r+0x1a>
    bcfa:	bf00      	nop

0000bcfc <fputc>:
    bcfc:	4b14      	ldr	r3, [pc, #80]	; (bd50 <fputc+0x54>)
    bcfe:	b570      	push	{r4, r5, r6, lr}
    bd00:	681e      	ldr	r6, [r3, #0]
    bd02:	4605      	mov	r5, r0
    bd04:	460c      	mov	r4, r1
    bd06:	b10e      	cbz	r6, bd0c <fputc+0x10>
    bd08:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    bd0a:	b19b      	cbz	r3, bd34 <fputc+0x38>
    bd0c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bd0e:	07d8      	lsls	r0, r3, #31
    bd10:	d402      	bmi.n	bd18 <fputc+0x1c>
    bd12:	89a3      	ldrh	r3, [r4, #12]
    bd14:	0599      	lsls	r1, r3, #22
    bd16:	d516      	bpl.n	bd46 <fputc+0x4a>
    bd18:	4622      	mov	r2, r4
    bd1a:	4629      	mov	r1, r5
    bd1c:	4630      	mov	r0, r6
    bd1e:	f000 ff4d 	bl	cbbc <_putc_r>
    bd22:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bd24:	4605      	mov	r5, r0
    bd26:	07da      	lsls	r2, r3, #31
    bd28:	d402      	bmi.n	bd30 <fputc+0x34>
    bd2a:	89a3      	ldrh	r3, [r4, #12]
    bd2c:	059b      	lsls	r3, r3, #22
    bd2e:	d505      	bpl.n	bd3c <fputc+0x40>
    bd30:	4628      	mov	r0, r5
    bd32:	bd70      	pop	{r4, r5, r6, pc}
    bd34:	4630      	mov	r0, r6
    bd36:	f007 fa4b 	bl	131d0 <__sinit>
    bd3a:	e7e7      	b.n	bd0c <fputc+0x10>
    bd3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bd3e:	f000 fa8f 	bl	c260 <__retarget_lock_release_recursive>
    bd42:	4628      	mov	r0, r5
    bd44:	bd70      	pop	{r4, r5, r6, pc}
    bd46:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bd48:	f000 fa82 	bl	c250 <__retarget_lock_acquire_recursive>
    bd4c:	e7e4      	b.n	bd18 <fputc+0x1c>
    bd4e:	bf00      	nop
    bd50:	20000124 	.word	0x20000124

0000bd54 <_fputs_r>:
    bd54:	b530      	push	{r4, r5, lr}
    bd56:	4605      	mov	r5, r0
    bd58:	b087      	sub	sp, #28
    bd5a:	4608      	mov	r0, r1
    bd5c:	4614      	mov	r4, r2
    bd5e:	9101      	str	r1, [sp, #4]
    bd60:	f001 fc7e 	bl	d660 <strlen>
    bd64:	2301      	movs	r3, #1
    bd66:	aa01      	add	r2, sp, #4
    bd68:	e9cd 2303 	strd	r2, r3, [sp, #12]
    bd6c:	9005      	str	r0, [sp, #20]
    bd6e:	9002      	str	r0, [sp, #8]
    bd70:	b10d      	cbz	r5, bd76 <_fputs_r+0x22>
    bd72:	6bab      	ldr	r3, [r5, #56]	; 0x38
    bd74:	b303      	cbz	r3, bdb8 <_fputs_r+0x64>
    bd76:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bd78:	f013 0f01 	tst.w	r3, #1
    bd7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bd80:	b29a      	uxth	r2, r3
    bd82:	d101      	bne.n	bd88 <_fputs_r+0x34>
    bd84:	0598      	lsls	r0, r3, #22
    bd86:	d521      	bpl.n	bdcc <_fputs_r+0x78>
    bd88:	0491      	lsls	r1, r2, #18
    bd8a:	d406      	bmi.n	bd9a <_fputs_r+0x46>
    bd8c:	6e62      	ldr	r2, [r4, #100]	; 0x64
    bd8e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    bd92:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    bd96:	81a3      	strh	r3, [r4, #12]
    bd98:	6662      	str	r2, [r4, #100]	; 0x64
    bd9a:	4628      	mov	r0, r5
    bd9c:	aa03      	add	r2, sp, #12
    bd9e:	4621      	mov	r1, r4
    bda0:	f000 f826 	bl	bdf0 <__sfvwrite_r>
    bda4:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bda6:	4605      	mov	r5, r0
    bda8:	07da      	lsls	r2, r3, #31
    bdaa:	d402      	bmi.n	bdb2 <_fputs_r+0x5e>
    bdac:	89a3      	ldrh	r3, [r4, #12]
    bdae:	059b      	lsls	r3, r3, #22
    bdb0:	d506      	bpl.n	bdc0 <_fputs_r+0x6c>
    bdb2:	4628      	mov	r0, r5
    bdb4:	b007      	add	sp, #28
    bdb6:	bd30      	pop	{r4, r5, pc}
    bdb8:	4628      	mov	r0, r5
    bdba:	f007 fa09 	bl	131d0 <__sinit>
    bdbe:	e7da      	b.n	bd76 <_fputs_r+0x22>
    bdc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bdc2:	f000 fa4d 	bl	c260 <__retarget_lock_release_recursive>
    bdc6:	4628      	mov	r0, r5
    bdc8:	b007      	add	sp, #28
    bdca:	bd30      	pop	{r4, r5, pc}
    bdcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bdce:	f000 fa3f 	bl	c250 <__retarget_lock_acquire_recursive>
    bdd2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bdd6:	b29a      	uxth	r2, r3
    bdd8:	e7d6      	b.n	bd88 <_fputs_r+0x34>
    bdda:	bf00      	nop

0000bddc <fputs>:
    bddc:	4603      	mov	r3, r0
    bdde:	460a      	mov	r2, r1
    bde0:	4902      	ldr	r1, [pc, #8]	; (bdec <fputs+0x10>)
    bde2:	6808      	ldr	r0, [r1, #0]
    bde4:	4619      	mov	r1, r3
    bde6:	f7ff bfb5 	b.w	bd54 <_fputs_r>
    bdea:	bf00      	nop
    bdec:	20000124 	.word	0x20000124

0000bdf0 <__sfvwrite_r>:
    bdf0:	6893      	ldr	r3, [r2, #8]
    bdf2:	2b00      	cmp	r3, #0
    bdf4:	f000 80b7 	beq.w	bf66 <__sfvwrite_r+0x176>
    bdf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bdfc:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
    be00:	460c      	mov	r4, r1
    be02:	0719      	lsls	r1, r3, #28
    be04:	4680      	mov	r8, r0
    be06:	4617      	mov	r7, r2
    be08:	b083      	sub	sp, #12
    be0a:	b298      	uxth	r0, r3
    be0c:	d525      	bpl.n	be5a <__sfvwrite_r+0x6a>
    be0e:	6923      	ldr	r3, [r4, #16]
    be10:	b31b      	cbz	r3, be5a <__sfvwrite_r+0x6a>
    be12:	f010 0302 	ands.w	r3, r0, #2
    be16:	683d      	ldr	r5, [r7, #0]
    be18:	d02d      	beq.n	be76 <__sfvwrite_r+0x86>
    be1a:	f04f 0b00 	mov.w	fp, #0
    be1e:	465e      	mov	r6, fp
    be20:	f8df a2b8 	ldr.w	sl, [pc, #696]	; c0dc <__sfvwrite_r+0x2ec>
    be24:	2e00      	cmp	r6, #0
    be26:	f000 808b 	beq.w	bf40 <__sfvwrite_r+0x150>
    be2a:	4556      	cmp	r6, sl
    be2c:	4633      	mov	r3, r6
    be2e:	465a      	mov	r2, fp
    be30:	bf28      	it	cs
    be32:	4653      	movcs	r3, sl
    be34:	4640      	mov	r0, r8
    be36:	69e1      	ldr	r1, [r4, #28]
    be38:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
    be3c:	47e0      	blx	ip
    be3e:	2800      	cmp	r0, #0
    be40:	f340 8087 	ble.w	bf52 <__sfvwrite_r+0x162>
    be44:	68bb      	ldr	r3, [r7, #8]
    be46:	4483      	add	fp, r0
    be48:	1a1b      	subs	r3, r3, r0
    be4a:	1a36      	subs	r6, r6, r0
    be4c:	60bb      	str	r3, [r7, #8]
    be4e:	2b00      	cmp	r3, #0
    be50:	d1e8      	bne.n	be24 <__sfvwrite_r+0x34>
    be52:	2000      	movs	r0, #0
    be54:	b003      	add	sp, #12
    be56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    be5a:	4621      	mov	r1, r4
    be5c:	4640      	mov	r0, r8
    be5e:	f005 ffa1 	bl	11da4 <__swsetup_r>
    be62:	2800      	cmp	r0, #0
    be64:	f040 8136 	bne.w	c0d4 <__sfvwrite_r+0x2e4>
    be68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    be6c:	683d      	ldr	r5, [r7, #0]
    be6e:	b298      	uxth	r0, r3
    be70:	f010 0302 	ands.w	r3, r0, #2
    be74:	d1d1      	bne.n	be1a <__sfvwrite_r+0x2a>
    be76:	f010 0901 	ands.w	r9, r0, #1
    be7a:	d176      	bne.n	bf6a <__sfvwrite_r+0x17a>
    be7c:	464e      	mov	r6, r9
    be7e:	2e00      	cmp	r6, #0
    be80:	d05a      	beq.n	bf38 <__sfvwrite_r+0x148>
    be82:	0582      	lsls	r2, r0, #22
    be84:	f8d4 b008 	ldr.w	fp, [r4, #8]
    be88:	f140 80b5 	bpl.w	bff6 <__sfvwrite_r+0x206>
    be8c:	45b3      	cmp	fp, r6
    be8e:	465a      	mov	r2, fp
    be90:	f200 80cd 	bhi.w	c02e <__sfvwrite_r+0x23e>
    be94:	f410 6f90 	tst.w	r0, #1152	; 0x480
    be98:	f000 80cb 	beq.w	c032 <__sfvwrite_r+0x242>
    be9c:	6823      	ldr	r3, [r4, #0]
    be9e:	6921      	ldr	r1, [r4, #16]
    bea0:	eba3 0b01 	sub.w	fp, r3, r1
    bea4:	6963      	ldr	r3, [r4, #20]
    bea6:	eb03 0a43 	add.w	sl, r3, r3, lsl #1
    beaa:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
    beae:	f10b 0301 	add.w	r3, fp, #1
    beb2:	ea4f 0a6a 	mov.w	sl, sl, asr #1
    beb6:	4433      	add	r3, r6
    beb8:	4553      	cmp	r3, sl
    beba:	4652      	mov	r2, sl
    bebc:	bf84      	itt	hi
    bebe:	469a      	movhi	sl, r3
    bec0:	4652      	movhi	r2, sl
    bec2:	0543      	lsls	r3, r0, #21
    bec4:	f140 80ea 	bpl.w	c09c <__sfvwrite_r+0x2ac>
    bec8:	4611      	mov	r1, r2
    beca:	4640      	mov	r0, r8
    becc:	f000 f9da 	bl	c284 <_malloc_r>
    bed0:	2800      	cmp	r0, #0
    bed2:	f000 80f9 	beq.w	c0c8 <__sfvwrite_r+0x2d8>
    bed6:	465a      	mov	r2, fp
    bed8:	6921      	ldr	r1, [r4, #16]
    beda:	9001      	str	r0, [sp, #4]
    bedc:	f000 fcfa 	bl	c8d4 <memcpy>
    bee0:	89a2      	ldrh	r2, [r4, #12]
    bee2:	9b01      	ldr	r3, [sp, #4]
    bee4:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
    bee8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    beec:	81a2      	strh	r2, [r4, #12]
    beee:	eb03 000b 	add.w	r0, r3, fp
    bef2:	6123      	str	r3, [r4, #16]
    bef4:	4632      	mov	r2, r6
    bef6:	ebaa 030b 	sub.w	r3, sl, fp
    befa:	46b3      	mov	fp, r6
    befc:	f8c4 a014 	str.w	sl, [r4, #20]
    bf00:	60a3      	str	r3, [r4, #8]
    bf02:	6020      	str	r0, [r4, #0]
    bf04:	46b2      	mov	sl, r6
    bf06:	2600      	movs	r6, #0
    bf08:	4649      	mov	r1, r9
    bf0a:	9201      	str	r2, [sp, #4]
    bf0c:	f000 fd58 	bl	c9c0 <memmove>
    bf10:	68a3      	ldr	r3, [r4, #8]
    bf12:	6821      	ldr	r1, [r4, #0]
    bf14:	9a01      	ldr	r2, [sp, #4]
    bf16:	eba3 030b 	sub.w	r3, r3, fp
    bf1a:	440a      	add	r2, r1
    bf1c:	60a3      	str	r3, [r4, #8]
    bf1e:	6022      	str	r2, [r4, #0]
    bf20:	68b8      	ldr	r0, [r7, #8]
    bf22:	44d1      	add	r9, sl
    bf24:	eba0 000a 	sub.w	r0, r0, sl
    bf28:	60b8      	str	r0, [r7, #8]
    bf2a:	2800      	cmp	r0, #0
    bf2c:	d091      	beq.n	be52 <__sfvwrite_r+0x62>
    bf2e:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
    bf32:	b280      	uxth	r0, r0
    bf34:	2e00      	cmp	r6, #0
    bf36:	d1a4      	bne.n	be82 <__sfvwrite_r+0x92>
    bf38:	e9d5 9600 	ldrd	r9, r6, [r5]
    bf3c:	3508      	adds	r5, #8
    bf3e:	e79e      	b.n	be7e <__sfvwrite_r+0x8e>
    bf40:	e9d5 b600 	ldrd	fp, r6, [r5]
    bf44:	3508      	adds	r5, #8
    bf46:	e76d      	b.n	be24 <__sfvwrite_r+0x34>
    bf48:	4621      	mov	r1, r4
    bf4a:	4640      	mov	r0, r8
    bf4c:	f007 f894 	bl	13078 <_fflush_r>
    bf50:	b380      	cbz	r0, bfb4 <__sfvwrite_r+0x1c4>
    bf52:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bf56:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    bf5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    bf5e:	81a3      	strh	r3, [r4, #12]
    bf60:	b003      	add	sp, #12
    bf62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bf66:	2000      	movs	r0, #0
    bf68:	4770      	bx	lr
    bf6a:	461e      	mov	r6, r3
    bf6c:	46aa      	mov	sl, r5
    bf6e:	4699      	mov	r9, r3
    bf70:	4618      	mov	r0, r3
    bf72:	461d      	mov	r5, r3
    bf74:	b356      	cbz	r6, bfcc <__sfvwrite_r+0x1dc>
    bf76:	2800      	cmp	r0, #0
    bf78:	d032      	beq.n	bfe0 <__sfvwrite_r+0x1f0>
    bf7a:	464a      	mov	r2, r9
    bf7c:	6820      	ldr	r0, [r4, #0]
    bf7e:	6921      	ldr	r1, [r4, #16]
    bf80:	42b2      	cmp	r2, r6
    bf82:	bf28      	it	cs
    bf84:	4632      	movcs	r2, r6
    bf86:	4288      	cmp	r0, r1
    bf88:	6963      	ldr	r3, [r4, #20]
    bf8a:	d904      	bls.n	bf96 <__sfvwrite_r+0x1a6>
    bf8c:	68a1      	ldr	r1, [r4, #8]
    bf8e:	eb03 0b01 	add.w	fp, r3, r1
    bf92:	455a      	cmp	r2, fp
    bf94:	dc74      	bgt.n	c080 <__sfvwrite_r+0x290>
    bf96:	4293      	cmp	r3, r2
    bf98:	dc65      	bgt.n	c066 <__sfvwrite_r+0x276>
    bf9a:	462a      	mov	r2, r5
    bf9c:	4640      	mov	r0, r8
    bf9e:	69e1      	ldr	r1, [r4, #28]
    bfa0:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
    bfa4:	47e0      	blx	ip
    bfa6:	f1b0 0b00 	subs.w	fp, r0, #0
    bfaa:	ddd2      	ble.n	bf52 <__sfvwrite_r+0x162>
    bfac:	ebb9 090b 	subs.w	r9, r9, fp
    bfb0:	d0ca      	beq.n	bf48 <__sfvwrite_r+0x158>
    bfb2:	2001      	movs	r0, #1
    bfb4:	68bb      	ldr	r3, [r7, #8]
    bfb6:	445d      	add	r5, fp
    bfb8:	eba3 030b 	sub.w	r3, r3, fp
    bfbc:	eba6 060b 	sub.w	r6, r6, fp
    bfc0:	60bb      	str	r3, [r7, #8]
    bfc2:	2b00      	cmp	r3, #0
    bfc4:	f43f af45 	beq.w	be52 <__sfvwrite_r+0x62>
    bfc8:	2e00      	cmp	r6, #0
    bfca:	d1d4      	bne.n	bf76 <__sfvwrite_r+0x186>
    bfcc:	f10a 0308 	add.w	r3, sl, #8
    bfd0:	f853 6c04 	ldr.w	r6, [r3, #-4]
    bfd4:	469a      	mov	sl, r3
    bfd6:	f853 5c08 	ldr.w	r5, [r3, #-8]
    bfda:	3308      	adds	r3, #8
    bfdc:	2e00      	cmp	r6, #0
    bfde:	d0f7      	beq.n	bfd0 <__sfvwrite_r+0x1e0>
    bfe0:	4632      	mov	r2, r6
    bfe2:	210a      	movs	r1, #10
    bfe4:	4628      	mov	r0, r5
    bfe6:	f000 fbf9 	bl	c7dc <memchr>
    bfea:	2800      	cmp	r0, #0
    bfec:	d069      	beq.n	c0c2 <__sfvwrite_r+0x2d2>
    bfee:	3001      	adds	r0, #1
    bff0:	eba0 0905 	sub.w	r9, r0, r5
    bff4:	e7c1      	b.n	bf7a <__sfvwrite_r+0x18a>
    bff6:	6820      	ldr	r0, [r4, #0]
    bff8:	6923      	ldr	r3, [r4, #16]
    bffa:	4298      	cmp	r0, r3
    bffc:	d81b      	bhi.n	c036 <__sfvwrite_r+0x246>
    bffe:	6963      	ldr	r3, [r4, #20]
    c000:	42b3      	cmp	r3, r6
    c002:	d818      	bhi.n	c036 <__sfvwrite_r+0x246>
    c004:	f06f 4c00 	mvn.w	ip, #2147483648	; 0x80000000
    c008:	45b4      	cmp	ip, r6
    c00a:	bf28      	it	cs
    c00c:	46b4      	movcs	ip, r6
    c00e:	fb9c fcf3 	sdiv	ip, ip, r3
    c012:	464a      	mov	r2, r9
    c014:	fb03 f30c 	mul.w	r3, r3, ip
    c018:	4640      	mov	r0, r8
    c01a:	69e1      	ldr	r1, [r4, #28]
    c01c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
    c020:	47e0      	blx	ip
    c022:	f1b0 0a00 	subs.w	sl, r0, #0
    c026:	dd94      	ble.n	bf52 <__sfvwrite_r+0x162>
    c028:	eba6 060a 	sub.w	r6, r6, sl
    c02c:	e778      	b.n	bf20 <__sfvwrite_r+0x130>
    c02e:	46b3      	mov	fp, r6
    c030:	4632      	mov	r2, r6
    c032:	6820      	ldr	r0, [r4, #0]
    c034:	e766      	b.n	bf04 <__sfvwrite_r+0x114>
    c036:	45b3      	cmp	fp, r6
    c038:	46da      	mov	sl, fp
    c03a:	bf28      	it	cs
    c03c:	46b2      	movcs	sl, r6
    c03e:	4649      	mov	r1, r9
    c040:	4652      	mov	r2, sl
    c042:	f000 fcbd 	bl	c9c0 <memmove>
    c046:	68a3      	ldr	r3, [r4, #8]
    c048:	6822      	ldr	r2, [r4, #0]
    c04a:	eba3 030a 	sub.w	r3, r3, sl
    c04e:	4452      	add	r2, sl
    c050:	60a3      	str	r3, [r4, #8]
    c052:	6022      	str	r2, [r4, #0]
    c054:	2b00      	cmp	r3, #0
    c056:	d1e7      	bne.n	c028 <__sfvwrite_r+0x238>
    c058:	4621      	mov	r1, r4
    c05a:	4640      	mov	r0, r8
    c05c:	f007 f80c 	bl	13078 <_fflush_r>
    c060:	2800      	cmp	r0, #0
    c062:	d0e1      	beq.n	c028 <__sfvwrite_r+0x238>
    c064:	e775      	b.n	bf52 <__sfvwrite_r+0x162>
    c066:	4629      	mov	r1, r5
    c068:	4693      	mov	fp, r2
    c06a:	9201      	str	r2, [sp, #4]
    c06c:	f000 fca8 	bl	c9c0 <memmove>
    c070:	68a3      	ldr	r3, [r4, #8]
    c072:	9a01      	ldr	r2, [sp, #4]
    c074:	1a9b      	subs	r3, r3, r2
    c076:	60a3      	str	r3, [r4, #8]
    c078:	6823      	ldr	r3, [r4, #0]
    c07a:	441a      	add	r2, r3
    c07c:	6022      	str	r2, [r4, #0]
    c07e:	e795      	b.n	bfac <__sfvwrite_r+0x1bc>
    c080:	4629      	mov	r1, r5
    c082:	465a      	mov	r2, fp
    c084:	f000 fc9c 	bl	c9c0 <memmove>
    c088:	6823      	ldr	r3, [r4, #0]
    c08a:	4621      	mov	r1, r4
    c08c:	445b      	add	r3, fp
    c08e:	4640      	mov	r0, r8
    c090:	6023      	str	r3, [r4, #0]
    c092:	f006 fff1 	bl	13078 <_fflush_r>
    c096:	2800      	cmp	r0, #0
    c098:	d088      	beq.n	bfac <__sfvwrite_r+0x1bc>
    c09a:	e75a      	b.n	bf52 <__sfvwrite_r+0x162>
    c09c:	4640      	mov	r0, r8
    c09e:	f000 fe65 	bl	cd6c <_realloc_r>
    c0a2:	4603      	mov	r3, r0
    c0a4:	2800      	cmp	r0, #0
    c0a6:	f47f af22 	bne.w	beee <__sfvwrite_r+0xfe>
    c0aa:	4640      	mov	r0, r8
    c0ac:	6921      	ldr	r1, [r4, #16]
    c0ae:	f007 fad9 	bl	13664 <_free_r>
    c0b2:	220c      	movs	r2, #12
    c0b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    c0b8:	f8c8 2000 	str.w	r2, [r8]
    c0bc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    c0c0:	e749      	b.n	bf56 <__sfvwrite_r+0x166>
    c0c2:	1c72      	adds	r2, r6, #1
    c0c4:	4691      	mov	r9, r2
    c0c6:	e759      	b.n	bf7c <__sfvwrite_r+0x18c>
    c0c8:	220c      	movs	r2, #12
    c0ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    c0ce:	f8c8 2000 	str.w	r2, [r8]
    c0d2:	e740      	b.n	bf56 <__sfvwrite_r+0x166>
    c0d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    c0d8:	e6bc      	b.n	be54 <__sfvwrite_r+0x64>
    c0da:	bf00      	nop
    c0dc:	7ffffc00 	.word	0x7ffffc00

0000c0e0 <_fwrite_r>:
    c0e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    c0e4:	4690      	mov	r8, r2
    c0e6:	461d      	mov	r5, r3
    c0e8:	2301      	movs	r3, #1
    c0ea:	fb08 f705 	mul.w	r7, r8, r5
    c0ee:	b086      	sub	sp, #24
    c0f0:	aa01      	add	r2, sp, #4
    c0f2:	4606      	mov	r6, r0
    c0f4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    c0f6:	9101      	str	r1, [sp, #4]
    c0f8:	9203      	str	r2, [sp, #12]
    c0fa:	9304      	str	r3, [sp, #16]
    c0fc:	9702      	str	r7, [sp, #8]
    c0fe:	9705      	str	r7, [sp, #20]
    c100:	b108      	cbz	r0, c106 <_fwrite_r+0x26>
    c102:	6b83      	ldr	r3, [r0, #56]	; 0x38
    c104:	b343      	cbz	r3, c158 <_fwrite_r+0x78>
    c106:	6e63      	ldr	r3, [r4, #100]	; 0x64
    c108:	f013 0f01 	tst.w	r3, #1
    c10c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    c110:	b29a      	uxth	r2, r3
    c112:	d101      	bne.n	c118 <_fwrite_r+0x38>
    c114:	0599      	lsls	r1, r3, #22
    c116:	d530      	bpl.n	c17a <_fwrite_r+0x9a>
    c118:	0492      	lsls	r2, r2, #18
    c11a:	d406      	bmi.n	c12a <_fwrite_r+0x4a>
    c11c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    c120:	81a3      	strh	r3, [r4, #12]
    c122:	6e63      	ldr	r3, [r4, #100]	; 0x64
    c124:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    c128:	6663      	str	r3, [r4, #100]	; 0x64
    c12a:	4630      	mov	r0, r6
    c12c:	4621      	mov	r1, r4
    c12e:	aa03      	add	r2, sp, #12
    c130:	f7ff fe5e 	bl	bdf0 <__sfvwrite_r>
    c134:	6e63      	ldr	r3, [r4, #100]	; 0x64
    c136:	b190      	cbz	r0, c15e <_fwrite_r+0x7e>
    c138:	07da      	lsls	r2, r3, #31
    c13a:	d506      	bpl.n	c14a <_fwrite_r+0x6a>
    c13c:	9805      	ldr	r0, [sp, #20]
    c13e:	1a3f      	subs	r7, r7, r0
    c140:	fbb7 f0f8 	udiv	r0, r7, r8
    c144:	b006      	add	sp, #24
    c146:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c14a:	89a3      	ldrh	r3, [r4, #12]
    c14c:	059b      	lsls	r3, r3, #22
    c14e:	d4f5      	bmi.n	c13c <_fwrite_r+0x5c>
    c150:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c152:	f000 f885 	bl	c260 <__retarget_lock_release_recursive>
    c156:	e7f1      	b.n	c13c <_fwrite_r+0x5c>
    c158:	f007 f83a 	bl	131d0 <__sinit>
    c15c:	e7d3      	b.n	c106 <_fwrite_r+0x26>
    c15e:	07d8      	lsls	r0, r3, #31
    c160:	d407      	bmi.n	c172 <_fwrite_r+0x92>
    c162:	89a3      	ldrh	r3, [r4, #12]
    c164:	0599      	lsls	r1, r3, #22
    c166:	d404      	bmi.n	c172 <_fwrite_r+0x92>
    c168:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c16a:	f000 f879 	bl	c260 <__retarget_lock_release_recursive>
    c16e:	4628      	mov	r0, r5
    c170:	e7e8      	b.n	c144 <_fwrite_r+0x64>
    c172:	4628      	mov	r0, r5
    c174:	b006      	add	sp, #24
    c176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c17a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c17c:	f000 f868 	bl	c250 <__retarget_lock_acquire_recursive>
    c180:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    c184:	b29a      	uxth	r2, r3
    c186:	e7c7      	b.n	c118 <_fwrite_r+0x38>

0000c188 <fwrite>:
    c188:	b530      	push	{r4, r5, lr}
    c18a:	4694      	mov	ip, r2
    c18c:	468e      	mov	lr, r1
    c18e:	4605      	mov	r5, r0
    c190:	461c      	mov	r4, r3
    c192:	4b05      	ldr	r3, [pc, #20]	; (c1a8 <fwrite+0x20>)
    c194:	b083      	sub	sp, #12
    c196:	6818      	ldr	r0, [r3, #0]
    c198:	4629      	mov	r1, r5
    c19a:	4672      	mov	r2, lr
    c19c:	4663      	mov	r3, ip
    c19e:	9400      	str	r4, [sp, #0]
    c1a0:	f7ff ff9e 	bl	c0e0 <_fwrite_r>
    c1a4:	b003      	add	sp, #12
    c1a6:	bd30      	pop	{r4, r5, pc}
    c1a8:	20000124 	.word	0x20000124

0000c1ac <__libc_init_array>:
    c1ac:	b570      	push	{r4, r5, r6, lr}
    c1ae:	4e0d      	ldr	r6, [pc, #52]	; (c1e4 <__libc_init_array+0x38>)
    c1b0:	4d0d      	ldr	r5, [pc, #52]	; (c1e8 <__libc_init_array+0x3c>)
    c1b2:	1b76      	subs	r6, r6, r5
    c1b4:	10b6      	asrs	r6, r6, #2
    c1b6:	d006      	beq.n	c1c6 <__libc_init_array+0x1a>
    c1b8:	2400      	movs	r4, #0
    c1ba:	f855 3b04 	ldr.w	r3, [r5], #4
    c1be:	3401      	adds	r4, #1
    c1c0:	4798      	blx	r3
    c1c2:	42a6      	cmp	r6, r4
    c1c4:	d1f9      	bne.n	c1ba <__libc_init_array+0xe>
    c1c6:	4e09      	ldr	r6, [pc, #36]	; (c1ec <__libc_init_array+0x40>)
    c1c8:	4d09      	ldr	r5, [pc, #36]	; (c1f0 <__libc_init_array+0x44>)
    c1ca:	f00a ff4b 	bl	17064 <_init>
    c1ce:	1b76      	subs	r6, r6, r5
    c1d0:	10b6      	asrs	r6, r6, #2
    c1d2:	d006      	beq.n	c1e2 <__libc_init_array+0x36>
    c1d4:	2400      	movs	r4, #0
    c1d6:	f855 3b04 	ldr.w	r3, [r5], #4
    c1da:	3401      	adds	r4, #1
    c1dc:	4798      	blx	r3
    c1de:	42a6      	cmp	r6, r4
    c1e0:	d1f9      	bne.n	c1d6 <__libc_init_array+0x2a>
    c1e2:	bd70      	pop	{r4, r5, r6, pc}
    c1e4:	20000adc 	.word	0x20000adc
    c1e8:	20000adc 	.word	0x20000adc
    c1ec:	20000ae8 	.word	0x20000ae8
    c1f0:	20000adc 	.word	0x20000adc

0000c1f4 <iprintf>:
    c1f4:	b40f      	push	{r0, r1, r2, r3}
    c1f6:	b500      	push	{lr}
    c1f8:	4a07      	ldr	r2, [pc, #28]	; (c218 <iprintf+0x24>)
    c1fa:	b083      	sub	sp, #12
    c1fc:	ab04      	add	r3, sp, #16
    c1fe:	6810      	ldr	r0, [r2, #0]
    c200:	f853 2b04 	ldr.w	r2, [r3], #4
    c204:	6881      	ldr	r1, [r0, #8]
    c206:	9301      	str	r3, [sp, #4]
    c208:	f003 f83c 	bl	f284 <_vfiprintf_r>
    c20c:	b003      	add	sp, #12
    c20e:	f85d eb04 	ldr.w	lr, [sp], #4
    c212:	b004      	add	sp, #16
    c214:	4770      	bx	lr
    c216:	bf00      	nop
    c218:	20000124 	.word	0x20000124

0000c21c <_iprintf_r>:
    c21c:	b40e      	push	{r1, r2, r3}
    c21e:	b500      	push	{lr}
    c220:	b082      	sub	sp, #8
    c222:	ab03      	add	r3, sp, #12
    c224:	f853 2b04 	ldr.w	r2, [r3], #4
    c228:	6881      	ldr	r1, [r0, #8]
    c22a:	9301      	str	r3, [sp, #4]
    c22c:	f003 f82a 	bl	f284 <_vfiprintf_r>
    c230:	b002      	add	sp, #8
    c232:	f85d eb04 	ldr.w	lr, [sp], #4
    c236:	b003      	add	sp, #12
    c238:	4770      	bx	lr
    c23a:	bf00      	nop

0000c23c <__retarget_lock_init>:
    c23c:	4770      	bx	lr
    c23e:	bf00      	nop

0000c240 <__retarget_lock_init_recursive>:
    c240:	4770      	bx	lr
    c242:	bf00      	nop

0000c244 <__retarget_lock_close>:
    c244:	4770      	bx	lr
    c246:	bf00      	nop

0000c248 <__retarget_lock_close_recursive>:
    c248:	4770      	bx	lr
    c24a:	bf00      	nop

0000c24c <__retarget_lock_acquire>:
    c24c:	4770      	bx	lr
    c24e:	bf00      	nop

0000c250 <__retarget_lock_acquire_recursive>:
    c250:	4770      	bx	lr
    c252:	bf00      	nop

0000c254 <__retarget_lock_try_acquire>:
    c254:	2001      	movs	r0, #1
    c256:	4770      	bx	lr

0000c258 <__retarget_lock_try_acquire_recursive>:
    c258:	2001      	movs	r0, #1
    c25a:	4770      	bx	lr

0000c25c <__retarget_lock_release>:
    c25c:	4770      	bx	lr
    c25e:	bf00      	nop

0000c260 <__retarget_lock_release_recursive>:
    c260:	4770      	bx	lr
    c262:	bf00      	nop

0000c264 <malloc>:
    c264:	4b02      	ldr	r3, [pc, #8]	; (c270 <malloc+0xc>)
    c266:	4601      	mov	r1, r0
    c268:	6818      	ldr	r0, [r3, #0]
    c26a:	f000 b80b 	b.w	c284 <_malloc_r>
    c26e:	bf00      	nop
    c270:	20000124 	.word	0x20000124

0000c274 <free>:
    c274:	4b02      	ldr	r3, [pc, #8]	; (c280 <free+0xc>)
    c276:	4601      	mov	r1, r0
    c278:	6818      	ldr	r0, [r3, #0]
    c27a:	f007 b9f3 	b.w	13664 <_free_r>
    c27e:	bf00      	nop
    c280:	20000124 	.word	0x20000124

0000c284 <_malloc_r>:
    c284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c288:	f101 050b 	add.w	r5, r1, #11
    c28c:	2d16      	cmp	r5, #22
    c28e:	4606      	mov	r6, r0
    c290:	b083      	sub	sp, #12
    c292:	d825      	bhi.n	c2e0 <_malloc_r+0x5c>
    c294:	2910      	cmp	r1, #16
    c296:	f200 80b8 	bhi.w	c40a <_malloc_r+0x186>
    c29a:	f000 fc5f 	bl	cb5c <__malloc_lock>
    c29e:	2510      	movs	r5, #16
    c2a0:	2218      	movs	r2, #24
    c2a2:	f04f 0c02 	mov.w	ip, #2
    c2a6:	4fb5      	ldr	r7, [pc, #724]	; (c57c <_malloc_r+0x2f8>)
    c2a8:	443a      	add	r2, r7
    c2aa:	6853      	ldr	r3, [r2, #4]
    c2ac:	f1a2 0108 	sub.w	r1, r2, #8
    c2b0:	428b      	cmp	r3, r1
    c2b2:	f000 80b7 	beq.w	c424 <_malloc_r+0x1a0>
    c2b6:	685a      	ldr	r2, [r3, #4]
    c2b8:	68d9      	ldr	r1, [r3, #12]
    c2ba:	f022 0203 	bic.w	r2, r2, #3
    c2be:	441a      	add	r2, r3
    c2c0:	689c      	ldr	r4, [r3, #8]
    c2c2:	4630      	mov	r0, r6
    c2c4:	60e1      	str	r1, [r4, #12]
    c2c6:	608c      	str	r4, [r1, #8]
    c2c8:	6851      	ldr	r1, [r2, #4]
    c2ca:	f103 0408 	add.w	r4, r3, #8
    c2ce:	f041 0101 	orr.w	r1, r1, #1
    c2d2:	6051      	str	r1, [r2, #4]
    c2d4:	f000 fc48 	bl	cb68 <__malloc_unlock>
    c2d8:	4620      	mov	r0, r4
    c2da:	b003      	add	sp, #12
    c2dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c2e0:	f035 0507 	bics.w	r5, r5, #7
    c2e4:	f100 8091 	bmi.w	c40a <_malloc_r+0x186>
    c2e8:	42a9      	cmp	r1, r5
    c2ea:	f200 808e 	bhi.w	c40a <_malloc_r+0x186>
    c2ee:	f000 fc35 	bl	cb5c <__malloc_lock>
    c2f2:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
    c2f6:	f0c0 8194 	bcc.w	c622 <_malloc_r+0x39e>
    c2fa:	0a6b      	lsrs	r3, r5, #9
    c2fc:	f000 808c 	beq.w	c418 <_malloc_r+0x194>
    c300:	2b04      	cmp	r3, #4
    c302:	f200 816a 	bhi.w	c5da <_malloc_r+0x356>
    c306:	09ab      	lsrs	r3, r5, #6
    c308:	f103 0c39 	add.w	ip, r3, #57	; 0x39
    c30c:	f103 0438 	add.w	r4, r3, #56	; 0x38
    c310:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c314:	4f99      	ldr	r7, [pc, #612]	; (c57c <_malloc_r+0x2f8>)
    c316:	4438      	add	r0, r7
    c318:	6843      	ldr	r3, [r0, #4]
    c31a:	3808      	subs	r0, #8
    c31c:	4298      	cmp	r0, r3
    c31e:	d106      	bne.n	c32e <_malloc_r+0xaa>
    c320:	e00c      	b.n	c33c <_malloc_r+0xb8>
    c322:	2900      	cmp	r1, #0
    c324:	f280 8126 	bge.w	c574 <_malloc_r+0x2f0>
    c328:	68db      	ldr	r3, [r3, #12]
    c32a:	4298      	cmp	r0, r3
    c32c:	d006      	beq.n	c33c <_malloc_r+0xb8>
    c32e:	685a      	ldr	r2, [r3, #4]
    c330:	f022 0203 	bic.w	r2, r2, #3
    c334:	1b51      	subs	r1, r2, r5
    c336:	290f      	cmp	r1, #15
    c338:	ddf3      	ble.n	c322 <_malloc_r+0x9e>
    c33a:	46a4      	mov	ip, r4
    c33c:	693c      	ldr	r4, [r7, #16]
    c33e:	f8df e240 	ldr.w	lr, [pc, #576]	; c580 <_malloc_r+0x2fc>
    c342:	4574      	cmp	r4, lr
    c344:	d07a      	beq.n	c43c <_malloc_r+0x1b8>
    c346:	6862      	ldr	r2, [r4, #4]
    c348:	f022 0203 	bic.w	r2, r2, #3
    c34c:	1b53      	subs	r3, r2, r5
    c34e:	2b0f      	cmp	r3, #15
    c350:	f300 8176 	bgt.w	c640 <_malloc_r+0x3bc>
    c354:	2b00      	cmp	r3, #0
    c356:	e9c7 ee04 	strd	lr, lr, [r7, #16]
    c35a:	f280 8167 	bge.w	c62c <_malloc_r+0x3a8>
    c35e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
    c362:	f080 8119 	bcs.w	c598 <_malloc_r+0x314>
    c366:	2101      	movs	r1, #1
    c368:	08d3      	lsrs	r3, r2, #3
    c36a:	0952      	lsrs	r2, r2, #5
    c36c:	440b      	add	r3, r1
    c36e:	4091      	lsls	r1, r2
    c370:	687a      	ldr	r2, [r7, #4]
    c372:	f857 0033 	ldr.w	r0, [r7, r3, lsl #3]
    c376:	430a      	orrs	r2, r1
    c378:	eb07 01c3 	add.w	r1, r7, r3, lsl #3
    c37c:	3908      	subs	r1, #8
    c37e:	60a0      	str	r0, [r4, #8]
    c380:	60e1      	str	r1, [r4, #12]
    c382:	607a      	str	r2, [r7, #4]
    c384:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
    c388:	60c4      	str	r4, [r0, #12]
    c38a:	2101      	movs	r1, #1
    c38c:	ea4f 03ac 	mov.w	r3, ip, asr #2
    c390:	4099      	lsls	r1, r3
    c392:	4291      	cmp	r1, r2
    c394:	d859      	bhi.n	c44a <_malloc_r+0x1c6>
    c396:	4211      	tst	r1, r2
    c398:	d106      	bne.n	c3a8 <_malloc_r+0x124>
    c39a:	f02c 0c03 	bic.w	ip, ip, #3
    c39e:	0049      	lsls	r1, r1, #1
    c3a0:	4211      	tst	r1, r2
    c3a2:	f10c 0c04 	add.w	ip, ip, #4
    c3a6:	d0fa      	beq.n	c39e <_malloc_r+0x11a>
    c3a8:	eb07 09cc 	add.w	r9, r7, ip, lsl #3
    c3ac:	4648      	mov	r0, r9
    c3ae:	4664      	mov	r4, ip
    c3b0:	f8d0 800c 	ldr.w	r8, [r0, #12]
    c3b4:	4540      	cmp	r0, r8
    c3b6:	d108      	bne.n	c3ca <_malloc_r+0x146>
    c3b8:	e11c      	b.n	c5f4 <_malloc_r+0x370>
    c3ba:	2b00      	cmp	r3, #0
    c3bc:	f280 8121 	bge.w	c602 <_malloc_r+0x37e>
    c3c0:	f8d8 800c 	ldr.w	r8, [r8, #12]
    c3c4:	4540      	cmp	r0, r8
    c3c6:	f000 8115 	beq.w	c5f4 <_malloc_r+0x370>
    c3ca:	f8d8 2004 	ldr.w	r2, [r8, #4]
    c3ce:	f022 0203 	bic.w	r2, r2, #3
    c3d2:	1b53      	subs	r3, r2, r5
    c3d4:	2b0f      	cmp	r3, #15
    c3d6:	ddf0      	ble.n	c3ba <_malloc_r+0x136>
    c3d8:	eb08 0105 	add.w	r1, r8, r5
    c3dc:	f045 0501 	orr.w	r5, r5, #1
    c3e0:	f8c8 5004 	str.w	r5, [r8, #4]
    c3e4:	4630      	mov	r0, r6
    c3e6:	e9d8 6402 	ldrd	r6, r4, [r8, #8]
    c3ea:	60f4      	str	r4, [r6, #12]
    c3ec:	60a6      	str	r6, [r4, #8]
    c3ee:	f043 0401 	orr.w	r4, r3, #1
    c3f2:	e9c7 1104 	strd	r1, r1, [r7, #16]
    c3f6:	604c      	str	r4, [r1, #4]
    c3f8:	e9c1 ee02 	strd	lr, lr, [r1, #8]
    c3fc:	f848 3002 	str.w	r3, [r8, r2]
    c400:	f000 fbb2 	bl	cb68 <__malloc_unlock>
    c404:	f108 0408 	add.w	r4, r8, #8
    c408:	e002      	b.n	c410 <_malloc_r+0x18c>
    c40a:	230c      	movs	r3, #12
    c40c:	2400      	movs	r4, #0
    c40e:	6033      	str	r3, [r6, #0]
    c410:	4620      	mov	r0, r4
    c412:	b003      	add	sp, #12
    c414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c418:	f44f 7000 	mov.w	r0, #512	; 0x200
    c41c:	f04f 0c40 	mov.w	ip, #64	; 0x40
    c420:	243f      	movs	r4, #63	; 0x3f
    c422:	e777      	b.n	c314 <_malloc_r+0x90>
    c424:	68d3      	ldr	r3, [r2, #12]
    c426:	429a      	cmp	r2, r3
    c428:	bf08      	it	eq
    c42a:	f10c 0c02 	addeq.w	ip, ip, #2
    c42e:	f47f af42 	bne.w	c2b6 <_malloc_r+0x32>
    c432:	693c      	ldr	r4, [r7, #16]
    c434:	f8df e148 	ldr.w	lr, [pc, #328]	; c580 <_malloc_r+0x2fc>
    c438:	4574      	cmp	r4, lr
    c43a:	d184      	bne.n	c346 <_malloc_r+0xc2>
    c43c:	2101      	movs	r1, #1
    c43e:	687a      	ldr	r2, [r7, #4]
    c440:	ea4f 03ac 	mov.w	r3, ip, asr #2
    c444:	4099      	lsls	r1, r3
    c446:	4291      	cmp	r1, r2
    c448:	d9a5      	bls.n	c396 <_malloc_r+0x112>
    c44a:	68bc      	ldr	r4, [r7, #8]
    c44c:	6863      	ldr	r3, [r4, #4]
    c44e:	f023 0903 	bic.w	r9, r3, #3
    c452:	454d      	cmp	r5, r9
    c454:	d803      	bhi.n	c45e <_malloc_r+0x1da>
    c456:	eba9 0305 	sub.w	r3, r9, r5
    c45a:	2b0f      	cmp	r3, #15
    c45c:	dc7a      	bgt.n	c554 <_malloc_r+0x2d0>
    c45e:	f8df b124 	ldr.w	fp, [pc, #292]	; c584 <_malloc_r+0x300>
    c462:	4b49      	ldr	r3, [pc, #292]	; (c588 <_malloc_r+0x304>)
    c464:	f8db 2000 	ldr.w	r2, [fp]
    c468:	681b      	ldr	r3, [r3, #0]
    c46a:	3201      	adds	r2, #1
    c46c:	442b      	add	r3, r5
    c46e:	eb04 0a09 	add.w	sl, r4, r9
    c472:	f000 812f 	beq.w	c6d4 <_malloc_r+0x450>
    c476:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    c47a:	330f      	adds	r3, #15
    c47c:	f423 687f 	bic.w	r8, r3, #4080	; 0xff0
    c480:	f028 080f 	bic.w	r8, r8, #15
    c484:	4641      	mov	r1, r8
    c486:	4630      	mov	r0, r6
    c488:	f000 fe5e 	bl	d148 <_sbrk_r>
    c48c:	1c41      	adds	r1, r0, #1
    c48e:	4602      	mov	r2, r0
    c490:	f000 80ef 	beq.w	c672 <_malloc_r+0x3ee>
    c494:	4582      	cmp	sl, r0
    c496:	f200 80ea 	bhi.w	c66e <_malloc_r+0x3ea>
    c49a:	4b3c      	ldr	r3, [pc, #240]	; (c58c <_malloc_r+0x308>)
    c49c:	6819      	ldr	r1, [r3, #0]
    c49e:	4441      	add	r1, r8
    c4a0:	4608      	mov	r0, r1
    c4a2:	6019      	str	r1, [r3, #0]
    c4a4:	f000 8149 	beq.w	c73a <_malloc_r+0x4b6>
    c4a8:	f8db 1000 	ldr.w	r1, [fp]
    c4ac:	9301      	str	r3, [sp, #4]
    c4ae:	3101      	adds	r1, #1
    c4b0:	bf1b      	ittet	ne
    c4b2:	eba2 0a0a 	subne.w	sl, r2, sl
    c4b6:	4450      	addne	r0, sl
    c4b8:	f8cb 2000 	streq.w	r2, [fp]
    c4bc:	6018      	strne	r0, [r3, #0]
    c4be:	f012 0b07 	ands.w	fp, r2, #7
    c4c2:	f000 8111 	beq.w	c6e8 <_malloc_r+0x464>
    c4c6:	f1cb 0108 	rsb	r1, fp, #8
    c4ca:	440a      	add	r2, r1
    c4cc:	f5cb 5180 	rsb	r1, fp, #4096	; 0x1000
    c4d0:	4490      	add	r8, r2
    c4d2:	3108      	adds	r1, #8
    c4d4:	eba1 0108 	sub.w	r1, r1, r8
    c4d8:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    c4dc:	4651      	mov	r1, sl
    c4de:	4630      	mov	r0, r6
    c4e0:	9200      	str	r2, [sp, #0]
    c4e2:	f000 fe31 	bl	d148 <_sbrk_r>
    c4e6:	1c42      	adds	r2, r0, #1
    c4e8:	e9dd 2300 	ldrd	r2, r3, [sp]
    c4ec:	f000 814b 	beq.w	c786 <_malloc_r+0x502>
    c4f0:	1a80      	subs	r0, r0, r2
    c4f2:	eb00 080a 	add.w	r8, r0, sl
    c4f6:	6819      	ldr	r1, [r3, #0]
    c4f8:	f048 0001 	orr.w	r0, r8, #1
    c4fc:	4451      	add	r1, sl
    c4fe:	42bc      	cmp	r4, r7
    c500:	60ba      	str	r2, [r7, #8]
    c502:	6019      	str	r1, [r3, #0]
    c504:	6050      	str	r0, [r2, #4]
    c506:	f000 8124 	beq.w	c752 <_malloc_r+0x4ce>
    c50a:	f1b9 0f0f 	cmp.w	r9, #15
    c50e:	f240 8122 	bls.w	c756 <_malloc_r+0x4d2>
    c512:	f04f 0e05 	mov.w	lr, #5
    c516:	6860      	ldr	r0, [r4, #4]
    c518:	f1a9 0c0c 	sub.w	ip, r9, #12
    c51c:	f02c 0c07 	bic.w	ip, ip, #7
    c520:	f000 0001 	and.w	r0, r0, #1
    c524:	ea40 000c 	orr.w	r0, r0, ip
    c528:	6060      	str	r0, [r4, #4]
    c52a:	f1bc 0f0f 	cmp.w	ip, #15
    c52e:	eb04 000c 	add.w	r0, r4, ip
    c532:	e9c0 ee01 	strd	lr, lr, [r0, #4]
    c536:	f200 812e 	bhi.w	c796 <_malloc_r+0x512>
    c53a:	4614      	mov	r4, r2
    c53c:	6850      	ldr	r0, [r2, #4]
    c53e:	4b14      	ldr	r3, [pc, #80]	; (c590 <_malloc_r+0x30c>)
    c540:	681a      	ldr	r2, [r3, #0]
    c542:	428a      	cmp	r2, r1
    c544:	bf38      	it	cc
    c546:	6019      	strcc	r1, [r3, #0]
    c548:	4b12      	ldr	r3, [pc, #72]	; (c594 <_malloc_r+0x310>)
    c54a:	681a      	ldr	r2, [r3, #0]
    c54c:	428a      	cmp	r2, r1
    c54e:	bf38      	it	cc
    c550:	6019      	strcc	r1, [r3, #0]
    c552:	e090      	b.n	c676 <_malloc_r+0x3f2>
    c554:	1962      	adds	r2, r4, r5
    c556:	f043 0301 	orr.w	r3, r3, #1
    c55a:	f045 0501 	orr.w	r5, r5, #1
    c55e:	6065      	str	r5, [r4, #4]
    c560:	4630      	mov	r0, r6
    c562:	60ba      	str	r2, [r7, #8]
    c564:	3408      	adds	r4, #8
    c566:	6053      	str	r3, [r2, #4]
    c568:	f000 fafe 	bl	cb68 <__malloc_unlock>
    c56c:	4620      	mov	r0, r4
    c56e:	b003      	add	sp, #12
    c570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c574:	68d9      	ldr	r1, [r3, #12]
    c576:	441a      	add	r2, r3
    c578:	e6a2      	b.n	c2c0 <_malloc_r+0x3c>
    c57a:	bf00      	nop
    c57c:	20000550 	.word	0x20000550
    c580:	20000558 	.word	0x20000558
    c584:	20000958 	.word	0x20000958
    c588:	20001fa0 	.word	0x20001fa0
    c58c:	20001f70 	.word	0x20001f70
    c590:	20001f98 	.word	0x20001f98
    c594:	20001f9c 	.word	0x20001f9c
    c598:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
    c59c:	ea4f 2352 	mov.w	r3, r2, lsr #9
    c5a0:	d35f      	bcc.n	c662 <_malloc_r+0x3de>
    c5a2:	2b14      	cmp	r3, #20
    c5a4:	f200 80b1 	bhi.w	c70a <_malloc_r+0x486>
    c5a8:	f103 015c 	add.w	r1, r3, #92	; 0x5c
    c5ac:	00c9      	lsls	r1, r1, #3
    c5ae:	335b      	adds	r3, #91	; 0x5b
    c5b0:	1878      	adds	r0, r7, r1
    c5b2:	5879      	ldr	r1, [r7, r1]
    c5b4:	3808      	subs	r0, #8
    c5b6:	4288      	cmp	r0, r1
    c5b8:	f000 808f 	beq.w	c6da <_malloc_r+0x456>
    c5bc:	684b      	ldr	r3, [r1, #4]
    c5be:	f023 0303 	bic.w	r3, r3, #3
    c5c2:	4293      	cmp	r3, r2
    c5c4:	d902      	bls.n	c5cc <_malloc_r+0x348>
    c5c6:	6889      	ldr	r1, [r1, #8]
    c5c8:	4288      	cmp	r0, r1
    c5ca:	d1f7      	bne.n	c5bc <_malloc_r+0x338>
    c5cc:	68c8      	ldr	r0, [r1, #12]
    c5ce:	687a      	ldr	r2, [r7, #4]
    c5d0:	e9c4 1002 	strd	r1, r0, [r4, #8]
    c5d4:	6084      	str	r4, [r0, #8]
    c5d6:	60cc      	str	r4, [r1, #12]
    c5d8:	e6d7      	b.n	c38a <_malloc_r+0x106>
    c5da:	2b14      	cmp	r3, #20
    c5dc:	d959      	bls.n	c692 <_malloc_r+0x40e>
    c5de:	2b54      	cmp	r3, #84	; 0x54
    c5e0:	f200 809b 	bhi.w	c71a <_malloc_r+0x496>
    c5e4:	0b2b      	lsrs	r3, r5, #12
    c5e6:	f103 0c6f 	add.w	ip, r3, #111	; 0x6f
    c5ea:	f103 046e 	add.w	r4, r3, #110	; 0x6e
    c5ee:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c5f2:	e68f      	b.n	c314 <_malloc_r+0x90>
    c5f4:	3401      	adds	r4, #1
    c5f6:	07a3      	lsls	r3, r4, #30
    c5f8:	f100 0008 	add.w	r0, r0, #8
    c5fc:	f47f aed8 	bne.w	c3b0 <_malloc_r+0x12c>
    c600:	e053      	b.n	c6aa <_malloc_r+0x426>
    c602:	4644      	mov	r4, r8
    c604:	4442      	add	r2, r8
    c606:	6853      	ldr	r3, [r2, #4]
    c608:	f8d8 100c 	ldr.w	r1, [r8, #12]
    c60c:	f043 0301 	orr.w	r3, r3, #1
    c610:	6053      	str	r3, [r2, #4]
    c612:	f854 3f08 	ldr.w	r3, [r4, #8]!
    c616:	4630      	mov	r0, r6
    c618:	60d9      	str	r1, [r3, #12]
    c61a:	608b      	str	r3, [r1, #8]
    c61c:	f000 faa4 	bl	cb68 <__malloc_unlock>
    c620:	e6f6      	b.n	c410 <_malloc_r+0x18c>
    c622:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
    c626:	f105 0208 	add.w	r2, r5, #8
    c62a:	e63c      	b.n	c2a6 <_malloc_r+0x22>
    c62c:	4422      	add	r2, r4
    c62e:	6853      	ldr	r3, [r2, #4]
    c630:	4630      	mov	r0, r6
    c632:	f043 0301 	orr.w	r3, r3, #1
    c636:	6053      	str	r3, [r2, #4]
    c638:	f000 fa96 	bl	cb68 <__malloc_unlock>
    c63c:	3408      	adds	r4, #8
    c63e:	e6e7      	b.n	c410 <_malloc_r+0x18c>
    c640:	1961      	adds	r1, r4, r5
    c642:	f045 0501 	orr.w	r5, r5, #1
    c646:	6065      	str	r5, [r4, #4]
    c648:	f043 0501 	orr.w	r5, r3, #1
    c64c:	e9c7 1104 	strd	r1, r1, [r7, #16]
    c650:	4630      	mov	r0, r6
    c652:	e9c1 ee02 	strd	lr, lr, [r1, #8]
    c656:	604d      	str	r5, [r1, #4]
    c658:	50a3      	str	r3, [r4, r2]
    c65a:	f000 fa85 	bl	cb68 <__malloc_unlock>
    c65e:	3408      	adds	r4, #8
    c660:	e6d6      	b.n	c410 <_malloc_r+0x18c>
    c662:	0993      	lsrs	r3, r2, #6
    c664:	f103 0139 	add.w	r1, r3, #57	; 0x39
    c668:	00c9      	lsls	r1, r1, #3
    c66a:	3338      	adds	r3, #56	; 0x38
    c66c:	e7a0      	b.n	c5b0 <_malloc_r+0x32c>
    c66e:	42bc      	cmp	r4, r7
    c670:	d05e      	beq.n	c730 <_malloc_r+0x4ac>
    c672:	68bc      	ldr	r4, [r7, #8]
    c674:	6860      	ldr	r0, [r4, #4]
    c676:	f020 0803 	bic.w	r8, r0, #3
    c67a:	4545      	cmp	r5, r8
    c67c:	eba8 0305 	sub.w	r3, r8, r5
    c680:	d802      	bhi.n	c688 <_malloc_r+0x404>
    c682:	2b0f      	cmp	r3, #15
    c684:	f73f af66 	bgt.w	c554 <_malloc_r+0x2d0>
    c688:	4630      	mov	r0, r6
    c68a:	f000 fa6d 	bl	cb68 <__malloc_unlock>
    c68e:	2400      	movs	r4, #0
    c690:	e6be      	b.n	c410 <_malloc_r+0x18c>
    c692:	f103 0c5c 	add.w	ip, r3, #92	; 0x5c
    c696:	f103 045b 	add.w	r4, r3, #91	; 0x5b
    c69a:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c69e:	e639      	b.n	c314 <_malloc_r+0x90>
    c6a0:	f859 3908 	ldr.w	r3, [r9], #-8
    c6a4:	454b      	cmp	r3, r9
    c6a6:	f040 8095 	bne.w	c7d4 <_malloc_r+0x550>
    c6aa:	f01c 0f03 	tst.w	ip, #3
    c6ae:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
    c6b2:	d1f5      	bne.n	c6a0 <_malloc_r+0x41c>
    c6b4:	687b      	ldr	r3, [r7, #4]
    c6b6:	ea23 0301 	bic.w	r3, r3, r1
    c6ba:	607b      	str	r3, [r7, #4]
    c6bc:	0049      	lsls	r1, r1, #1
    c6be:	4299      	cmp	r1, r3
    c6c0:	f63f aec3 	bhi.w	c44a <_malloc_r+0x1c6>
    c6c4:	b911      	cbnz	r1, c6cc <_malloc_r+0x448>
    c6c6:	e6c0      	b.n	c44a <_malloc_r+0x1c6>
    c6c8:	0049      	lsls	r1, r1, #1
    c6ca:	3404      	adds	r4, #4
    c6cc:	4219      	tst	r1, r3
    c6ce:	d0fb      	beq.n	c6c8 <_malloc_r+0x444>
    c6d0:	46a4      	mov	ip, r4
    c6d2:	e669      	b.n	c3a8 <_malloc_r+0x124>
    c6d4:	f103 0810 	add.w	r8, r3, #16
    c6d8:	e6d4      	b.n	c484 <_malloc_r+0x200>
    c6da:	2201      	movs	r2, #1
    c6dc:	109b      	asrs	r3, r3, #2
    c6de:	409a      	lsls	r2, r3
    c6e0:	687b      	ldr	r3, [r7, #4]
    c6e2:	431a      	orrs	r2, r3
    c6e4:	607a      	str	r2, [r7, #4]
    c6e6:	e773      	b.n	c5d0 <_malloc_r+0x34c>
    c6e8:	eb02 0108 	add.w	r1, r2, r8
    c6ec:	4249      	negs	r1, r1
    c6ee:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    c6f2:	4651      	mov	r1, sl
    c6f4:	4630      	mov	r0, r6
    c6f6:	9200      	str	r2, [sp, #0]
    c6f8:	f000 fd26 	bl	d148 <_sbrk_r>
    c6fc:	1c43      	adds	r3, r0, #1
    c6fe:	e9dd 2300 	ldrd	r2, r3, [sp]
    c702:	f47f aef5 	bne.w	c4f0 <_malloc_r+0x26c>
    c706:	46da      	mov	sl, fp
    c708:	e6f5      	b.n	c4f6 <_malloc_r+0x272>
    c70a:	2b54      	cmp	r3, #84	; 0x54
    c70c:	d826      	bhi.n	c75c <_malloc_r+0x4d8>
    c70e:	0b13      	lsrs	r3, r2, #12
    c710:	f103 016f 	add.w	r1, r3, #111	; 0x6f
    c714:	00c9      	lsls	r1, r1, #3
    c716:	336e      	adds	r3, #110	; 0x6e
    c718:	e74a      	b.n	c5b0 <_malloc_r+0x32c>
    c71a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    c71e:	d826      	bhi.n	c76e <_malloc_r+0x4ea>
    c720:	0beb      	lsrs	r3, r5, #15
    c722:	f103 0c78 	add.w	ip, r3, #120	; 0x78
    c726:	f103 0477 	add.w	r4, r3, #119	; 0x77
    c72a:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c72e:	e5f1      	b.n	c314 <_malloc_r+0x90>
    c730:	4b29      	ldr	r3, [pc, #164]	; (c7d8 <_malloc_r+0x554>)
    c732:	6818      	ldr	r0, [r3, #0]
    c734:	4440      	add	r0, r8
    c736:	6018      	str	r0, [r3, #0]
    c738:	e6b6      	b.n	c4a8 <_malloc_r+0x224>
    c73a:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
    c73e:	f1bc 0f00 	cmp.w	ip, #0
    c742:	f47f aeb1 	bne.w	c4a8 <_malloc_r+0x224>
    c746:	68bc      	ldr	r4, [r7, #8]
    c748:	44c8      	add	r8, r9
    c74a:	f048 0001 	orr.w	r0, r8, #1
    c74e:	6060      	str	r0, [r4, #4]
    c750:	e6f5      	b.n	c53e <_malloc_r+0x2ba>
    c752:	4614      	mov	r4, r2
    c754:	e6f3      	b.n	c53e <_malloc_r+0x2ba>
    c756:	2301      	movs	r3, #1
    c758:	6053      	str	r3, [r2, #4]
    c75a:	e795      	b.n	c688 <_malloc_r+0x404>
    c75c:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    c760:	d824      	bhi.n	c7ac <_malloc_r+0x528>
    c762:	0bd3      	lsrs	r3, r2, #15
    c764:	f103 0178 	add.w	r1, r3, #120	; 0x78
    c768:	00c9      	lsls	r1, r1, #3
    c76a:	3377      	adds	r3, #119	; 0x77
    c76c:	e720      	b.n	c5b0 <_malloc_r+0x32c>
    c76e:	f240 5254 	movw	r2, #1364	; 0x554
    c772:	4293      	cmp	r3, r2
    c774:	d824      	bhi.n	c7c0 <_malloc_r+0x53c>
    c776:	0cab      	lsrs	r3, r5, #18
    c778:	f103 0c7d 	add.w	ip, r3, #125	; 0x7d
    c77c:	f103 047c 	add.w	r4, r3, #124	; 0x7c
    c780:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c784:	e5c6      	b.n	c314 <_malloc_r+0x90>
    c786:	f1ab 0b08 	sub.w	fp, fp, #8
    c78a:	44d8      	add	r8, fp
    c78c:	f04f 0a00 	mov.w	sl, #0
    c790:	eba8 0802 	sub.w	r8, r8, r2
    c794:	e6af      	b.n	c4f6 <_malloc_r+0x272>
    c796:	f104 0108 	add.w	r1, r4, #8
    c79a:	4630      	mov	r0, r6
    c79c:	9300      	str	r3, [sp, #0]
    c79e:	f006 ff61 	bl	13664 <_free_r>
    c7a2:	68bc      	ldr	r4, [r7, #8]
    c7a4:	9b00      	ldr	r3, [sp, #0]
    c7a6:	6860      	ldr	r0, [r4, #4]
    c7a8:	6819      	ldr	r1, [r3, #0]
    c7aa:	e6c8      	b.n	c53e <_malloc_r+0x2ba>
    c7ac:	f240 5154 	movw	r1, #1364	; 0x554
    c7b0:	428b      	cmp	r3, r1
    c7b2:	d80b      	bhi.n	c7cc <_malloc_r+0x548>
    c7b4:	0c93      	lsrs	r3, r2, #18
    c7b6:	f103 017d 	add.w	r1, r3, #125	; 0x7d
    c7ba:	00c9      	lsls	r1, r1, #3
    c7bc:	337c      	adds	r3, #124	; 0x7c
    c7be:	e6f7      	b.n	c5b0 <_malloc_r+0x32c>
    c7c0:	f44f 707e 	mov.w	r0, #1016	; 0x3f8
    c7c4:	f04f 0c7f 	mov.w	ip, #127	; 0x7f
    c7c8:	247e      	movs	r4, #126	; 0x7e
    c7ca:	e5a3      	b.n	c314 <_malloc_r+0x90>
    c7cc:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
    c7d0:	237e      	movs	r3, #126	; 0x7e
    c7d2:	e6ed      	b.n	c5b0 <_malloc_r+0x32c>
    c7d4:	687b      	ldr	r3, [r7, #4]
    c7d6:	e771      	b.n	c6bc <_malloc_r+0x438>
    c7d8:	20001f70 	.word	0x20001f70

0000c7dc <memchr>:
    c7dc:	fa5f fc81 	uxtb.w	ip, r1
    c7e0:	0781      	lsls	r1, r0, #30
    c7e2:	d010      	beq.n	c806 <memchr+0x2a>
    c7e4:	4603      	mov	r3, r0
    c7e6:	1e51      	subs	r1, r2, #1
    c7e8:	b92a      	cbnz	r2, c7f6 <memchr+0x1a>
    c7ea:	e00a      	b.n	c802 <memchr+0x26>
    c7ec:	079a      	lsls	r2, r3, #30
    c7ee:	4618      	mov	r0, r3
    c7f0:	d00a      	beq.n	c808 <memchr+0x2c>
    c7f2:	3901      	subs	r1, #1
    c7f4:	d305      	bcc.n	c802 <memchr+0x26>
    c7f6:	4618      	mov	r0, r3
    c7f8:	f813 2b01 	ldrb.w	r2, [r3], #1
    c7fc:	4562      	cmp	r2, ip
    c7fe:	d1f5      	bne.n	c7ec <memchr+0x10>
    c800:	4770      	bx	lr
    c802:	2000      	movs	r0, #0
    c804:	4770      	bx	lr
    c806:	4611      	mov	r1, r2
    c808:	2903      	cmp	r1, #3
    c80a:	d80c      	bhi.n	c826 <memchr+0x4a>
    c80c:	2900      	cmp	r1, #0
    c80e:	d0f8      	beq.n	c802 <memchr+0x26>
    c810:	4603      	mov	r3, r0
    c812:	4401      	add	r1, r0
    c814:	e001      	b.n	c81a <memchr+0x3e>
    c816:	428b      	cmp	r3, r1
    c818:	d0f3      	beq.n	c802 <memchr+0x26>
    c81a:	4618      	mov	r0, r3
    c81c:	f813 2b01 	ldrb.w	r2, [r3], #1
    c820:	4562      	cmp	r2, ip
    c822:	d1f8      	bne.n	c816 <memchr+0x3a>
    c824:	e7ec      	b.n	c800 <memchr+0x24>
    c826:	4602      	mov	r2, r0
    c828:	b510      	push	{r4, lr}
    c82a:	ea4c 240c 	orr.w	r4, ip, ip, lsl #8
    c82e:	ea44 4404 	orr.w	r4, r4, r4, lsl #16
    c832:	4610      	mov	r0, r2
    c834:	6803      	ldr	r3, [r0, #0]
    c836:	3204      	adds	r2, #4
    c838:	4063      	eors	r3, r4
    c83a:	f1a3 3e01 	sub.w	lr, r3, #16843009	; 0x1010101
    c83e:	ea2e 0303 	bic.w	r3, lr, r3
    c842:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
    c846:	d104      	bne.n	c852 <memchr+0x76>
    c848:	3904      	subs	r1, #4
    c84a:	2903      	cmp	r1, #3
    c84c:	4610      	mov	r0, r2
    c84e:	d8f0      	bhi.n	c832 <memchr+0x56>
    c850:	b151      	cbz	r1, c868 <memchr+0x8c>
    c852:	4603      	mov	r3, r0
    c854:	4401      	add	r1, r0
    c856:	e001      	b.n	c85c <memchr+0x80>
    c858:	428b      	cmp	r3, r1
    c85a:	d005      	beq.n	c868 <memchr+0x8c>
    c85c:	4618      	mov	r0, r3
    c85e:	f813 2b01 	ldrb.w	r2, [r3], #1
    c862:	4562      	cmp	r2, ip
    c864:	d1f8      	bne.n	c858 <memchr+0x7c>
    c866:	bd10      	pop	{r4, pc}
    c868:	2000      	movs	r0, #0
    c86a:	bd10      	pop	{r4, pc}

0000c86c <memcmp>:
    c86c:	2a03      	cmp	r2, #3
    c86e:	b510      	push	{r4, lr}
    c870:	d916      	bls.n	c8a0 <memcmp+0x34>
    c872:	ea40 0c01 	orr.w	ip, r0, r1
    c876:	f01c 0f03 	tst.w	ip, #3
    c87a:	4604      	mov	r4, r0
    c87c:	460b      	mov	r3, r1
    c87e:	d122      	bne.n	c8c6 <memcmp+0x5a>
    c880:	4619      	mov	r1, r3
    c882:	4620      	mov	r0, r4
    c884:	f8d1 e000 	ldr.w	lr, [r1]
    c888:	f8d0 c000 	ldr.w	ip, [r0]
    c88c:	3304      	adds	r3, #4
    c88e:	45f4      	cmp	ip, lr
    c890:	f104 0404 	add.w	r4, r4, #4
    c894:	d117      	bne.n	c8c6 <memcmp+0x5a>
    c896:	3a04      	subs	r2, #4
    c898:	2a03      	cmp	r2, #3
    c89a:	4620      	mov	r0, r4
    c89c:	4619      	mov	r1, r3
    c89e:	d8ef      	bhi.n	c880 <memcmp+0x14>
    c8a0:	1e54      	subs	r4, r2, #1
    c8a2:	b1a2      	cbz	r2, c8ce <memcmp+0x62>
    c8a4:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
    c8a8:	3901      	subs	r1, #1
    c8aa:	e001      	b.n	c8b0 <memcmp+0x44>
    c8ac:	18c3      	adds	r3, r0, r3
    c8ae:	d00c      	beq.n	c8ca <memcmp+0x5e>
    c8b0:	f81c ef01 	ldrb.w	lr, [ip, #1]!
    c8b4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
    c8b8:	eba4 030c 	sub.w	r3, r4, ip
    c8bc:	4596      	cmp	lr, r2
    c8be:	d0f5      	beq.n	c8ac <memcmp+0x40>
    c8c0:	ebae 0002 	sub.w	r0, lr, r2
    c8c4:	bd10      	pop	{r4, pc}
    c8c6:	1e54      	subs	r4, r2, #1
    c8c8:	e7ec      	b.n	c8a4 <memcmp+0x38>
    c8ca:	4618      	mov	r0, r3
    c8cc:	bd10      	pop	{r4, pc}
    c8ce:	4610      	mov	r0, r2
    c8d0:	bd10      	pop	{r4, pc}
    c8d2:	bf00      	nop

0000c8d4 <memcpy>:
    c8d4:	4684      	mov	ip, r0
    c8d6:	ea41 0300 	orr.w	r3, r1, r0
    c8da:	f013 0303 	ands.w	r3, r3, #3
    c8de:	d149      	bne.n	c974 <memcpy+0xa0>
    c8e0:	3a40      	subs	r2, #64	; 0x40
    c8e2:	d323      	bcc.n	c92c <memcpy+0x58>
    c8e4:	680b      	ldr	r3, [r1, #0]
    c8e6:	6003      	str	r3, [r0, #0]
    c8e8:	684b      	ldr	r3, [r1, #4]
    c8ea:	6043      	str	r3, [r0, #4]
    c8ec:	688b      	ldr	r3, [r1, #8]
    c8ee:	6083      	str	r3, [r0, #8]
    c8f0:	68cb      	ldr	r3, [r1, #12]
    c8f2:	60c3      	str	r3, [r0, #12]
    c8f4:	690b      	ldr	r3, [r1, #16]
    c8f6:	6103      	str	r3, [r0, #16]
    c8f8:	694b      	ldr	r3, [r1, #20]
    c8fa:	6143      	str	r3, [r0, #20]
    c8fc:	698b      	ldr	r3, [r1, #24]
    c8fe:	6183      	str	r3, [r0, #24]
    c900:	69cb      	ldr	r3, [r1, #28]
    c902:	61c3      	str	r3, [r0, #28]
    c904:	6a0b      	ldr	r3, [r1, #32]
    c906:	6203      	str	r3, [r0, #32]
    c908:	6a4b      	ldr	r3, [r1, #36]	; 0x24
    c90a:	6243      	str	r3, [r0, #36]	; 0x24
    c90c:	6a8b      	ldr	r3, [r1, #40]	; 0x28
    c90e:	6283      	str	r3, [r0, #40]	; 0x28
    c910:	6acb      	ldr	r3, [r1, #44]	; 0x2c
    c912:	62c3      	str	r3, [r0, #44]	; 0x2c
    c914:	6b0b      	ldr	r3, [r1, #48]	; 0x30
    c916:	6303      	str	r3, [r0, #48]	; 0x30
    c918:	6b4b      	ldr	r3, [r1, #52]	; 0x34
    c91a:	6343      	str	r3, [r0, #52]	; 0x34
    c91c:	6b8b      	ldr	r3, [r1, #56]	; 0x38
    c91e:	6383      	str	r3, [r0, #56]	; 0x38
    c920:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
    c922:	63c3      	str	r3, [r0, #60]	; 0x3c
    c924:	3040      	adds	r0, #64	; 0x40
    c926:	3140      	adds	r1, #64	; 0x40
    c928:	3a40      	subs	r2, #64	; 0x40
    c92a:	d2db      	bcs.n	c8e4 <memcpy+0x10>
    c92c:	3230      	adds	r2, #48	; 0x30
    c92e:	d30b      	bcc.n	c948 <memcpy+0x74>
    c930:	680b      	ldr	r3, [r1, #0]
    c932:	6003      	str	r3, [r0, #0]
    c934:	684b      	ldr	r3, [r1, #4]
    c936:	6043      	str	r3, [r0, #4]
    c938:	688b      	ldr	r3, [r1, #8]
    c93a:	6083      	str	r3, [r0, #8]
    c93c:	68cb      	ldr	r3, [r1, #12]
    c93e:	60c3      	str	r3, [r0, #12]
    c940:	3010      	adds	r0, #16
    c942:	3110      	adds	r1, #16
    c944:	3a10      	subs	r2, #16
    c946:	d2f3      	bcs.n	c930 <memcpy+0x5c>
    c948:	320c      	adds	r2, #12
    c94a:	d305      	bcc.n	c958 <memcpy+0x84>
    c94c:	f851 3b04 	ldr.w	r3, [r1], #4
    c950:	f840 3b04 	str.w	r3, [r0], #4
    c954:	3a04      	subs	r2, #4
    c956:	d2f9      	bcs.n	c94c <memcpy+0x78>
    c958:	3204      	adds	r2, #4
    c95a:	d008      	beq.n	c96e <memcpy+0x9a>
    c95c:	07d2      	lsls	r2, r2, #31
    c95e:	bf1c      	itt	ne
    c960:	f811 3b01 	ldrbne.w	r3, [r1], #1
    c964:	f800 3b01 	strbne.w	r3, [r0], #1
    c968:	d301      	bcc.n	c96e <memcpy+0x9a>
    c96a:	880b      	ldrh	r3, [r1, #0]
    c96c:	8003      	strh	r3, [r0, #0]
    c96e:	4660      	mov	r0, ip
    c970:	4770      	bx	lr
    c972:	bf00      	nop
    c974:	2a08      	cmp	r2, #8
    c976:	d313      	bcc.n	c9a0 <memcpy+0xcc>
    c978:	078b      	lsls	r3, r1, #30
    c97a:	d0b1      	beq.n	c8e0 <memcpy+0xc>
    c97c:	f010 0303 	ands.w	r3, r0, #3
    c980:	d0ae      	beq.n	c8e0 <memcpy+0xc>
    c982:	f1c3 0304 	rsb	r3, r3, #4
    c986:	1ad2      	subs	r2, r2, r3
    c988:	07db      	lsls	r3, r3, #31
    c98a:	bf1c      	itt	ne
    c98c:	f811 3b01 	ldrbne.w	r3, [r1], #1
    c990:	f800 3b01 	strbne.w	r3, [r0], #1
    c994:	d3a4      	bcc.n	c8e0 <memcpy+0xc>
    c996:	f831 3b02 	ldrh.w	r3, [r1], #2
    c99a:	f820 3b02 	strh.w	r3, [r0], #2
    c99e:	e79f      	b.n	c8e0 <memcpy+0xc>
    c9a0:	3a04      	subs	r2, #4
    c9a2:	d3d9      	bcc.n	c958 <memcpy+0x84>
    c9a4:	3a01      	subs	r2, #1
    c9a6:	f811 3b01 	ldrb.w	r3, [r1], #1
    c9aa:	f800 3b01 	strb.w	r3, [r0], #1
    c9ae:	d2f9      	bcs.n	c9a4 <memcpy+0xd0>
    c9b0:	780b      	ldrb	r3, [r1, #0]
    c9b2:	7003      	strb	r3, [r0, #0]
    c9b4:	784b      	ldrb	r3, [r1, #1]
    c9b6:	7043      	strb	r3, [r0, #1]
    c9b8:	788b      	ldrb	r3, [r1, #2]
    c9ba:	7083      	strb	r3, [r0, #2]
    c9bc:	4660      	mov	r0, ip
    c9be:	4770      	bx	lr

0000c9c0 <memmove>:
    c9c0:	4288      	cmp	r0, r1
    c9c2:	d90d      	bls.n	c9e0 <memmove+0x20>
    c9c4:	188b      	adds	r3, r1, r2
    c9c6:	4283      	cmp	r3, r0
    c9c8:	d90a      	bls.n	c9e0 <memmove+0x20>
    c9ca:	eb00 0c02 	add.w	ip, r0, r2
    c9ce:	b1ba      	cbz	r2, ca00 <memmove+0x40>
    c9d0:	4662      	mov	r2, ip
    c9d2:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
    c9d6:	4299      	cmp	r1, r3
    c9d8:	f802 cd01 	strb.w	ip, [r2, #-1]!
    c9dc:	d1f9      	bne.n	c9d2 <memmove+0x12>
    c9de:	4770      	bx	lr
    c9e0:	2a0f      	cmp	r2, #15
    c9e2:	d80e      	bhi.n	ca02 <memmove+0x42>
    c9e4:	4603      	mov	r3, r0
    c9e6:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    c9ea:	b14a      	cbz	r2, ca00 <memmove+0x40>
    c9ec:	f10c 0c01 	add.w	ip, ip, #1
    c9f0:	3b01      	subs	r3, #1
    c9f2:	448c      	add	ip, r1
    c9f4:	f811 2b01 	ldrb.w	r2, [r1], #1
    c9f8:	4561      	cmp	r1, ip
    c9fa:	f803 2f01 	strb.w	r2, [r3, #1]!
    c9fe:	d1f9      	bne.n	c9f4 <memmove+0x34>
    ca00:	4770      	bx	lr
    ca02:	ea40 0301 	orr.w	r3, r0, r1
    ca06:	079b      	lsls	r3, r3, #30
    ca08:	d14f      	bne.n	caaa <memmove+0xea>
    ca0a:	f1a2 0310 	sub.w	r3, r2, #16
    ca0e:	b570      	push	{r4, r5, r6, lr}
    ca10:	f101 0c20 	add.w	ip, r1, #32
    ca14:	f023 050f 	bic.w	r5, r3, #15
    ca18:	f101 0e10 	add.w	lr, r1, #16
    ca1c:	f100 0410 	add.w	r4, r0, #16
    ca20:	44ac      	add	ip, r5
    ca22:	091b      	lsrs	r3, r3, #4
    ca24:	f85e 5c10 	ldr.w	r5, [lr, #-16]
    ca28:	f10e 0e10 	add.w	lr, lr, #16
    ca2c:	f844 5c10 	str.w	r5, [r4, #-16]
    ca30:	f85e 5c1c 	ldr.w	r5, [lr, #-28]
    ca34:	3410      	adds	r4, #16
    ca36:	f844 5c1c 	str.w	r5, [r4, #-28]
    ca3a:	f85e 5c18 	ldr.w	r5, [lr, #-24]
    ca3e:	f844 5c18 	str.w	r5, [r4, #-24]
    ca42:	f85e 5c14 	ldr.w	r5, [lr, #-20]
    ca46:	45e6      	cmp	lr, ip
    ca48:	f844 5c14 	str.w	r5, [r4, #-20]
    ca4c:	d1ea      	bne.n	ca24 <memmove+0x64>
    ca4e:	3301      	adds	r3, #1
    ca50:	f012 0f0c 	tst.w	r2, #12
    ca54:	eb01 1103 	add.w	r1, r1, r3, lsl #4
    ca58:	f002 040f 	and.w	r4, r2, #15
    ca5c:	eb00 1303 	add.w	r3, r0, r3, lsl #4
    ca60:	d027      	beq.n	cab2 <memmove+0xf2>
    ca62:	468e      	mov	lr, r1
    ca64:	3c04      	subs	r4, #4
    ca66:	f024 0603 	bic.w	r6, r4, #3
    ca6a:	ea4f 0c94 	mov.w	ip, r4, lsr #2
    ca6e:	441e      	add	r6, r3
    ca70:	1f1c      	subs	r4, r3, #4
    ca72:	f85e 5b04 	ldr.w	r5, [lr], #4
    ca76:	f844 5f04 	str.w	r5, [r4, #4]!
    ca7a:	42b4      	cmp	r4, r6
    ca7c:	d1f9      	bne.n	ca72 <memmove+0xb2>
    ca7e:	f10c 0401 	add.w	r4, ip, #1
    ca82:	f002 0203 	and.w	r2, r2, #3
    ca86:	eb03 0384 	add.w	r3, r3, r4, lsl #2
    ca8a:	eb01 0184 	add.w	r1, r1, r4, lsl #2
    ca8e:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    ca92:	b14a      	cbz	r2, caa8 <memmove+0xe8>
    ca94:	f10c 0c01 	add.w	ip, ip, #1
    ca98:	3b01      	subs	r3, #1
    ca9a:	448c      	add	ip, r1
    ca9c:	f811 2b01 	ldrb.w	r2, [r1], #1
    caa0:	4561      	cmp	r1, ip
    caa2:	f803 2f01 	strb.w	r2, [r3, #1]!
    caa6:	d1f9      	bne.n	ca9c <memmove+0xdc>
    caa8:	bd70      	pop	{r4, r5, r6, pc}
    caaa:	4603      	mov	r3, r0
    caac:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    cab0:	e79c      	b.n	c9ec <memmove+0x2c>
    cab2:	4622      	mov	r2, r4
    cab4:	e7eb      	b.n	ca8e <memmove+0xce>
    cab6:	bf00      	nop

0000cab8 <memset>:
    cab8:	0783      	lsls	r3, r0, #30
    caba:	b530      	push	{r4, r5, lr}
    cabc:	d048      	beq.n	cb50 <memset+0x98>
    cabe:	1e54      	subs	r4, r2, #1
    cac0:	2a00      	cmp	r2, #0
    cac2:	d03f      	beq.n	cb44 <memset+0x8c>
    cac4:	4603      	mov	r3, r0
    cac6:	b2ca      	uxtb	r2, r1
    cac8:	e001      	b.n	cace <memset+0x16>
    caca:	3c01      	subs	r4, #1
    cacc:	d33a      	bcc.n	cb44 <memset+0x8c>
    cace:	f803 2b01 	strb.w	r2, [r3], #1
    cad2:	079d      	lsls	r5, r3, #30
    cad4:	d1f9      	bne.n	caca <memset+0x12>
    cad6:	2c03      	cmp	r4, #3
    cad8:	d92d      	bls.n	cb36 <memset+0x7e>
    cada:	b2cd      	uxtb	r5, r1
    cadc:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
    cae0:	2c0f      	cmp	r4, #15
    cae2:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
    cae6:	d936      	bls.n	cb56 <memset+0x9e>
    cae8:	f1a4 0210 	sub.w	r2, r4, #16
    caec:	f022 0c0f 	bic.w	ip, r2, #15
    caf0:	f103 0e20 	add.w	lr, r3, #32
    caf4:	44e6      	add	lr, ip
    caf6:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    cafa:	f103 0210 	add.w	r2, r3, #16
    cafe:	e942 5504 	strd	r5, r5, [r2, #-16]
    cb02:	e942 5502 	strd	r5, r5, [r2, #-8]
    cb06:	3210      	adds	r2, #16
    cb08:	4572      	cmp	r2, lr
    cb0a:	d1f8      	bne.n	cafe <memset+0x46>
    cb0c:	f10c 0201 	add.w	r2, ip, #1
    cb10:	f014 0f0c 	tst.w	r4, #12
    cb14:	eb03 1202 	add.w	r2, r3, r2, lsl #4
    cb18:	f004 0c0f 	and.w	ip, r4, #15
    cb1c:	d013      	beq.n	cb46 <memset+0x8e>
    cb1e:	f1ac 0304 	sub.w	r3, ip, #4
    cb22:	f023 0303 	bic.w	r3, r3, #3
    cb26:	3304      	adds	r3, #4
    cb28:	4413      	add	r3, r2
    cb2a:	f842 5b04 	str.w	r5, [r2], #4
    cb2e:	4293      	cmp	r3, r2
    cb30:	d1fb      	bne.n	cb2a <memset+0x72>
    cb32:	f00c 0403 	and.w	r4, ip, #3
    cb36:	b12c      	cbz	r4, cb44 <memset+0x8c>
    cb38:	b2ca      	uxtb	r2, r1
    cb3a:	441c      	add	r4, r3
    cb3c:	f803 2b01 	strb.w	r2, [r3], #1
    cb40:	429c      	cmp	r4, r3
    cb42:	d1fb      	bne.n	cb3c <memset+0x84>
    cb44:	bd30      	pop	{r4, r5, pc}
    cb46:	4664      	mov	r4, ip
    cb48:	4613      	mov	r3, r2
    cb4a:	2c00      	cmp	r4, #0
    cb4c:	d1f4      	bne.n	cb38 <memset+0x80>
    cb4e:	e7f9      	b.n	cb44 <memset+0x8c>
    cb50:	4603      	mov	r3, r0
    cb52:	4614      	mov	r4, r2
    cb54:	e7bf      	b.n	cad6 <memset+0x1e>
    cb56:	461a      	mov	r2, r3
    cb58:	46a4      	mov	ip, r4
    cb5a:	e7e0      	b.n	cb1e <memset+0x66>

0000cb5c <__malloc_lock>:
    cb5c:	4801      	ldr	r0, [pc, #4]	; (cb64 <__malloc_lock+0x8>)
    cb5e:	f7ff bb77 	b.w	c250 <__retarget_lock_acquire_recursive>
    cb62:	bf00      	nop
    cb64:	20001f60 	.word	0x20001f60

0000cb68 <__malloc_unlock>:
    cb68:	4801      	ldr	r0, [pc, #4]	; (cb70 <__malloc_unlock+0x8>)
    cb6a:	f7ff bb79 	b.w	c260 <__retarget_lock_release_recursive>
    cb6e:	bf00      	nop
    cb70:	20001f60 	.word	0x20001f60

0000cb74 <_printf_r>:
    cb74:	b40e      	push	{r1, r2, r3}
    cb76:	b500      	push	{lr}
    cb78:	b082      	sub	sp, #8
    cb7a:	ab03      	add	r3, sp, #12
    cb7c:	f853 2b04 	ldr.w	r2, [r3], #4
    cb80:	6881      	ldr	r1, [r0, #8]
    cb82:	9301      	str	r3, [sp, #4]
    cb84:	f003 fa9a 	bl	100bc <_vfprintf_r>
    cb88:	b002      	add	sp, #8
    cb8a:	f85d eb04 	ldr.w	lr, [sp], #4
    cb8e:	b003      	add	sp, #12
    cb90:	4770      	bx	lr
    cb92:	bf00      	nop

0000cb94 <printf>:
    cb94:	b40f      	push	{r0, r1, r2, r3}
    cb96:	b500      	push	{lr}
    cb98:	4a07      	ldr	r2, [pc, #28]	; (cbb8 <printf+0x24>)
    cb9a:	b083      	sub	sp, #12
    cb9c:	ab04      	add	r3, sp, #16
    cb9e:	6810      	ldr	r0, [r2, #0]
    cba0:	f853 2b04 	ldr.w	r2, [r3], #4
    cba4:	6881      	ldr	r1, [r0, #8]
    cba6:	9301      	str	r3, [sp, #4]
    cba8:	f003 fa88 	bl	100bc <_vfprintf_r>
    cbac:	b003      	add	sp, #12
    cbae:	f85d eb04 	ldr.w	lr, [sp], #4
    cbb2:	b004      	add	sp, #16
    cbb4:	4770      	bx	lr
    cbb6:	bf00      	nop
    cbb8:	20000124 	.word	0x20000124

0000cbbc <_putc_r>:
    cbbc:	b570      	push	{r4, r5, r6, lr}
    cbbe:	4605      	mov	r5, r0
    cbc0:	460e      	mov	r6, r1
    cbc2:	4614      	mov	r4, r2
    cbc4:	b108      	cbz	r0, cbca <_putc_r+0xe>
    cbc6:	6b83      	ldr	r3, [r0, #56]	; 0x38
    cbc8:	b1eb      	cbz	r3, cc06 <_putc_r+0x4a>
    cbca:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cbcc:	07d8      	lsls	r0, r3, #31
    cbce:	d402      	bmi.n	cbd6 <_putc_r+0x1a>
    cbd0:	89a3      	ldrh	r3, [r4, #12]
    cbd2:	0599      	lsls	r1, r3, #22
    cbd4:	d523      	bpl.n	cc1e <_putc_r+0x62>
    cbd6:	68a3      	ldr	r3, [r4, #8]
    cbd8:	3b01      	subs	r3, #1
    cbda:	2b00      	cmp	r3, #0
    cbdc:	60a3      	str	r3, [r4, #8]
    cbde:	da1c      	bge.n	cc1a <_putc_r+0x5e>
    cbe0:	69a2      	ldr	r2, [r4, #24]
    cbe2:	4293      	cmp	r3, r2
    cbe4:	db12      	blt.n	cc0c <_putc_r+0x50>
    cbe6:	b2f0      	uxtb	r0, r6
    cbe8:	280a      	cmp	r0, #10
    cbea:	d00f      	beq.n	cc0c <_putc_r+0x50>
    cbec:	4605      	mov	r5, r0
    cbee:	6823      	ldr	r3, [r4, #0]
    cbf0:	1c5a      	adds	r2, r3, #1
    cbf2:	6022      	str	r2, [r4, #0]
    cbf4:	701e      	strb	r6, [r3, #0]
    cbf6:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cbf8:	07da      	lsls	r2, r3, #31
    cbfa:	d402      	bmi.n	cc02 <_putc_r+0x46>
    cbfc:	89a3      	ldrh	r3, [r4, #12]
    cbfe:	059b      	lsls	r3, r3, #22
    cc00:	d511      	bpl.n	cc26 <_putc_r+0x6a>
    cc02:	4628      	mov	r0, r5
    cc04:	bd70      	pop	{r4, r5, r6, pc}
    cc06:	f006 fae3 	bl	131d0 <__sinit>
    cc0a:	e7de      	b.n	cbca <_putc_r+0xe>
    cc0c:	4628      	mov	r0, r5
    cc0e:	4622      	mov	r2, r4
    cc10:	4631      	mov	r1, r6
    cc12:	f005 f84f 	bl	11cb4 <__swbuf_r>
    cc16:	4605      	mov	r5, r0
    cc18:	e7ed      	b.n	cbf6 <_putc_r+0x3a>
    cc1a:	b2f0      	uxtb	r0, r6
    cc1c:	e7e6      	b.n	cbec <_putc_r+0x30>
    cc1e:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cc20:	f7ff fb16 	bl	c250 <__retarget_lock_acquire_recursive>
    cc24:	e7d7      	b.n	cbd6 <_putc_r+0x1a>
    cc26:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cc28:	f7ff fb1a 	bl	c260 <__retarget_lock_release_recursive>
    cc2c:	4628      	mov	r0, r5
    cc2e:	bd70      	pop	{r4, r5, r6, pc}

0000cc30 <putc>:
    cc30:	4b1d      	ldr	r3, [pc, #116]	; (cca8 <putc+0x78>)
    cc32:	b570      	push	{r4, r5, r6, lr}
    cc34:	681e      	ldr	r6, [r3, #0]
    cc36:	4605      	mov	r5, r0
    cc38:	460c      	mov	r4, r1
    cc3a:	b10e      	cbz	r6, cc40 <putc+0x10>
    cc3c:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    cc3e:	b1eb      	cbz	r3, cc7c <putc+0x4c>
    cc40:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cc42:	07d8      	lsls	r0, r3, #31
    cc44:	d402      	bmi.n	cc4c <putc+0x1c>
    cc46:	89a3      	ldrh	r3, [r4, #12]
    cc48:	0599      	lsls	r1, r3, #22
    cc4a:	d524      	bpl.n	cc96 <putc+0x66>
    cc4c:	68a3      	ldr	r3, [r4, #8]
    cc4e:	3b01      	subs	r3, #1
    cc50:	2b00      	cmp	r3, #0
    cc52:	60a3      	str	r3, [r4, #8]
    cc54:	da1d      	bge.n	cc92 <putc+0x62>
    cc56:	69a2      	ldr	r2, [r4, #24]
    cc58:	4293      	cmp	r3, r2
    cc5a:	db13      	blt.n	cc84 <putc+0x54>
    cc5c:	b2e8      	uxtb	r0, r5
    cc5e:	280a      	cmp	r0, #10
    cc60:	d010      	beq.n	cc84 <putc+0x54>
    cc62:	4606      	mov	r6, r0
    cc64:	6823      	ldr	r3, [r4, #0]
    cc66:	1c5a      	adds	r2, r3, #1
    cc68:	6022      	str	r2, [r4, #0]
    cc6a:	701d      	strb	r5, [r3, #0]
    cc6c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cc6e:	07da      	lsls	r2, r3, #31
    cc70:	d402      	bmi.n	cc78 <putc+0x48>
    cc72:	89a3      	ldrh	r3, [r4, #12]
    cc74:	059b      	lsls	r3, r3, #22
    cc76:	d512      	bpl.n	cc9e <putc+0x6e>
    cc78:	4630      	mov	r0, r6
    cc7a:	bd70      	pop	{r4, r5, r6, pc}
    cc7c:	4630      	mov	r0, r6
    cc7e:	f006 faa7 	bl	131d0 <__sinit>
    cc82:	e7dd      	b.n	cc40 <putc+0x10>
    cc84:	4630      	mov	r0, r6
    cc86:	4622      	mov	r2, r4
    cc88:	4629      	mov	r1, r5
    cc8a:	f005 f813 	bl	11cb4 <__swbuf_r>
    cc8e:	4606      	mov	r6, r0
    cc90:	e7ec      	b.n	cc6c <putc+0x3c>
    cc92:	b2e8      	uxtb	r0, r5
    cc94:	e7e5      	b.n	cc62 <putc+0x32>
    cc96:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cc98:	f7ff fada 	bl	c250 <__retarget_lock_acquire_recursive>
    cc9c:	e7d6      	b.n	cc4c <putc+0x1c>
    cc9e:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cca0:	f7ff fade 	bl	c260 <__retarget_lock_release_recursive>
    cca4:	4630      	mov	r0, r6
    cca6:	bd70      	pop	{r4, r5, r6, pc}
    cca8:	20000124 	.word	0x20000124

0000ccac <_puts_r>:
    ccac:	b530      	push	{r4, r5, lr}
    ccae:	4605      	mov	r5, r0
    ccb0:	b089      	sub	sp, #36	; 0x24
    ccb2:	4608      	mov	r0, r1
    ccb4:	460c      	mov	r4, r1
    ccb6:	f000 fcd3 	bl	d660 <strlen>
    ccba:	2101      	movs	r1, #1
    ccbc:	2302      	movs	r3, #2
    ccbe:	4a21      	ldr	r2, [pc, #132]	; (cd44 <_puts_r+0x98>)
    ccc0:	9404      	str	r4, [sp, #16]
    ccc2:	9206      	str	r2, [sp, #24]
    ccc4:	6baa      	ldr	r2, [r5, #56]	; 0x38
    ccc6:	ac04      	add	r4, sp, #16
    ccc8:	9005      	str	r0, [sp, #20]
    ccca:	4408      	add	r0, r1
    cccc:	9401      	str	r4, [sp, #4]
    ccce:	9107      	str	r1, [sp, #28]
    ccd0:	68ac      	ldr	r4, [r5, #8]
    ccd2:	9302      	str	r3, [sp, #8]
    ccd4:	9003      	str	r0, [sp, #12]
    ccd6:	b322      	cbz	r2, cd22 <_puts_r+0x76>
    ccd8:	6e63      	ldr	r3, [r4, #100]	; 0x64
    ccda:	f013 0f01 	tst.w	r3, #1
    ccde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    cce2:	b29a      	uxth	r2, r3
    cce4:	d101      	bne.n	ccea <_puts_r+0x3e>
    cce6:	0598      	lsls	r0, r3, #22
    cce8:	d525      	bpl.n	cd36 <_puts_r+0x8a>
    ccea:	0491      	lsls	r1, r2, #18
    ccec:	d406      	bmi.n	ccfc <_puts_r+0x50>
    ccee:	6e62      	ldr	r2, [r4, #100]	; 0x64
    ccf0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    ccf4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    ccf8:	81a3      	strh	r3, [r4, #12]
    ccfa:	6662      	str	r2, [r4, #100]	; 0x64
    ccfc:	4628      	mov	r0, r5
    ccfe:	aa01      	add	r2, sp, #4
    cd00:	4621      	mov	r1, r4
    cd02:	f7ff f875 	bl	bdf0 <__sfvwrite_r>
    cd06:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cd08:	2800      	cmp	r0, #0
    cd0a:	bf14      	ite	ne
    cd0c:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
    cd10:	250a      	moveq	r5, #10
    cd12:	07da      	lsls	r2, r3, #31
    cd14:	d402      	bmi.n	cd1c <_puts_r+0x70>
    cd16:	89a3      	ldrh	r3, [r4, #12]
    cd18:	059b      	lsls	r3, r3, #22
    cd1a:	d506      	bpl.n	cd2a <_puts_r+0x7e>
    cd1c:	4628      	mov	r0, r5
    cd1e:	b009      	add	sp, #36	; 0x24
    cd20:	bd30      	pop	{r4, r5, pc}
    cd22:	4628      	mov	r0, r5
    cd24:	f006 fa54 	bl	131d0 <__sinit>
    cd28:	e7d6      	b.n	ccd8 <_puts_r+0x2c>
    cd2a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cd2c:	f7ff fa98 	bl	c260 <__retarget_lock_release_recursive>
    cd30:	4628      	mov	r0, r5
    cd32:	b009      	add	sp, #36	; 0x24
    cd34:	bd30      	pop	{r4, r5, pc}
    cd36:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cd38:	f7ff fa8a 	bl	c250 <__retarget_lock_acquire_recursive>
    cd3c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    cd40:	b29a      	uxth	r2, r3
    cd42:	e7d2      	b.n	ccea <_puts_r+0x3e>
    cd44:	00019104 	.word	0x00019104

0000cd48 <puts>:
    cd48:	4b02      	ldr	r3, [pc, #8]	; (cd54 <puts+0xc>)
    cd4a:	4601      	mov	r1, r0
    cd4c:	6818      	ldr	r0, [r3, #0]
    cd4e:	f7ff bfad 	b.w	ccac <_puts_r>
    cd52:	bf00      	nop
    cd54:	20000124 	.word	0x20000124

0000cd58 <realloc>:
    cd58:	4603      	mov	r3, r0
    cd5a:	460a      	mov	r2, r1
    cd5c:	4902      	ldr	r1, [pc, #8]	; (cd68 <realloc+0x10>)
    cd5e:	6808      	ldr	r0, [r1, #0]
    cd60:	4619      	mov	r1, r3
    cd62:	f000 b803 	b.w	cd6c <_realloc_r>
    cd66:	bf00      	nop
    cd68:	20000124 	.word	0x20000124

0000cd6c <_realloc_r>:
    cd6c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cd70:	4616      	mov	r6, r2
    cd72:	2900      	cmp	r1, #0
    cd74:	f000 8098 	beq.w	cea8 <_realloc_r+0x13c>
    cd78:	f106 050b 	add.w	r5, r6, #11
    cd7c:	4680      	mov	r8, r0
    cd7e:	460c      	mov	r4, r1
    cd80:	f7ff feec 	bl	cb5c <__malloc_lock>
    cd84:	2d16      	cmp	r5, #22
    cd86:	d85d      	bhi.n	ce44 <_realloc_r+0xd8>
    cd88:	2510      	movs	r5, #16
    cd8a:	462a      	mov	r2, r5
    cd8c:	42ae      	cmp	r6, r5
    cd8e:	d85e      	bhi.n	ce4e <_realloc_r+0xe2>
    cd90:	f854 1c04 	ldr.w	r1, [r4, #-4]
    cd94:	f1a4 0908 	sub.w	r9, r4, #8
    cd98:	f021 0703 	bic.w	r7, r1, #3
    cd9c:	4297      	cmp	r7, r2
    cd9e:	da62      	bge.n	ce66 <_realloc_r+0xfa>
    cda0:	4bbc      	ldr	r3, [pc, #752]	; (d094 <_realloc_r+0x328>)
    cda2:	eb09 0007 	add.w	r0, r9, r7
    cda6:	f8d3 c008 	ldr.w	ip, [r3, #8]
    cdaa:	4584      	cmp	ip, r0
    cdac:	f000 8097 	beq.w	cede <_realloc_r+0x172>
    cdb0:	f8d0 c004 	ldr.w	ip, [r0, #4]
    cdb4:	f02c 0301 	bic.w	r3, ip, #1
    cdb8:	4403      	add	r3, r0
    cdba:	685b      	ldr	r3, [r3, #4]
    cdbc:	07db      	lsls	r3, r3, #31
    cdbe:	d468      	bmi.n	ce92 <_realloc_r+0x126>
    cdc0:	f02c 0c03 	bic.w	ip, ip, #3
    cdc4:	eb07 030c 	add.w	r3, r7, ip
    cdc8:	4293      	cmp	r3, r2
    cdca:	da47      	bge.n	ce5c <_realloc_r+0xf0>
    cdcc:	07cb      	lsls	r3, r1, #31
    cdce:	d410      	bmi.n	cdf2 <_realloc_r+0x86>
    cdd0:	f854 3c08 	ldr.w	r3, [r4, #-8]
    cdd4:	eba9 0a03 	sub.w	sl, r9, r3
    cdd8:	f8da 3004 	ldr.w	r3, [sl, #4]
    cddc:	f023 0103 	bic.w	r1, r3, #3
    cde0:	448c      	add	ip, r1
    cde2:	44bc      	add	ip, r7
    cde4:	4594      	cmp	ip, r2
    cde6:	f280 8111 	bge.w	d00c <_realloc_r+0x2a0>
    cdea:	187b      	adds	r3, r7, r1
    cdec:	4293      	cmp	r3, r2
    cdee:	f280 80e8 	bge.w	cfc2 <_realloc_r+0x256>
    cdf2:	4631      	mov	r1, r6
    cdf4:	4640      	mov	r0, r8
    cdf6:	f7ff fa45 	bl	c284 <_malloc_r>
    cdfa:	4606      	mov	r6, r0
    cdfc:	b1e0      	cbz	r0, ce38 <_realloc_r+0xcc>
    cdfe:	f854 3c04 	ldr.w	r3, [r4, #-4]
    ce02:	f1a0 0208 	sub.w	r2, r0, #8
    ce06:	f023 0301 	bic.w	r3, r3, #1
    ce0a:	444b      	add	r3, r9
    ce0c:	4293      	cmp	r3, r2
    ce0e:	f000 80d2 	beq.w	cfb6 <_realloc_r+0x24a>
    ce12:	1f3a      	subs	r2, r7, #4
    ce14:	2a24      	cmp	r2, #36	; 0x24
    ce16:	f200 80f5 	bhi.w	d004 <_realloc_r+0x298>
    ce1a:	2a13      	cmp	r2, #19
    ce1c:	f200 80ac 	bhi.w	cf78 <_realloc_r+0x20c>
    ce20:	4603      	mov	r3, r0
    ce22:	4622      	mov	r2, r4
    ce24:	6811      	ldr	r1, [r2, #0]
    ce26:	6019      	str	r1, [r3, #0]
    ce28:	6851      	ldr	r1, [r2, #4]
    ce2a:	6059      	str	r1, [r3, #4]
    ce2c:	6892      	ldr	r2, [r2, #8]
    ce2e:	609a      	str	r2, [r3, #8]
    ce30:	4621      	mov	r1, r4
    ce32:	4640      	mov	r0, r8
    ce34:	f006 fc16 	bl	13664 <_free_r>
    ce38:	4640      	mov	r0, r8
    ce3a:	f7ff fe95 	bl	cb68 <__malloc_unlock>
    ce3e:	4630      	mov	r0, r6
    ce40:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ce44:	f025 0507 	bic.w	r5, r5, #7
    ce48:	2d00      	cmp	r5, #0
    ce4a:	462a      	mov	r2, r5
    ce4c:	da9e      	bge.n	cd8c <_realloc_r+0x20>
    ce4e:	230c      	movs	r3, #12
    ce50:	2600      	movs	r6, #0
    ce52:	f8c8 3000 	str.w	r3, [r8]
    ce56:	4630      	mov	r0, r6
    ce58:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ce5c:	461f      	mov	r7, r3
    ce5e:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
    ce62:	60d3      	str	r3, [r2, #12]
    ce64:	609a      	str	r2, [r3, #8]
    ce66:	1b7b      	subs	r3, r7, r5
    ce68:	2b0f      	cmp	r3, #15
    ce6a:	d822      	bhi.n	ceb2 <_realloc_r+0x146>
    ce6c:	f8d9 3004 	ldr.w	r3, [r9, #4]
    ce70:	f003 0301 	and.w	r3, r3, #1
    ce74:	433b      	orrs	r3, r7
    ce76:	f8c9 3004 	str.w	r3, [r9, #4]
    ce7a:	444f      	add	r7, r9
    ce7c:	687b      	ldr	r3, [r7, #4]
    ce7e:	f043 0301 	orr.w	r3, r3, #1
    ce82:	607b      	str	r3, [r7, #4]
    ce84:	4626      	mov	r6, r4
    ce86:	4640      	mov	r0, r8
    ce88:	f7ff fe6e 	bl	cb68 <__malloc_unlock>
    ce8c:	4630      	mov	r0, r6
    ce8e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ce92:	07c9      	lsls	r1, r1, #31
    ce94:	d4ad      	bmi.n	cdf2 <_realloc_r+0x86>
    ce96:	f854 3c08 	ldr.w	r3, [r4, #-8]
    ce9a:	eba9 0a03 	sub.w	sl, r9, r3
    ce9e:	f8da 1004 	ldr.w	r1, [sl, #4]
    cea2:	f021 0103 	bic.w	r1, r1, #3
    cea6:	e7a0      	b.n	cdea <_realloc_r+0x7e>
    cea8:	4611      	mov	r1, r2
    ceaa:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ceae:	f7ff b9e9 	b.w	c284 <_malloc_r>
    ceb2:	f8d9 1004 	ldr.w	r1, [r9, #4]
    ceb6:	f043 0301 	orr.w	r3, r3, #1
    ceba:	f001 0101 	and.w	r1, r1, #1
    cebe:	4329      	orrs	r1, r5
    cec0:	f8c9 1004 	str.w	r1, [r9, #4]
    cec4:	eb09 0105 	add.w	r1, r9, r5
    cec8:	604b      	str	r3, [r1, #4]
    ceca:	444f      	add	r7, r9
    cecc:	687b      	ldr	r3, [r7, #4]
    cece:	4640      	mov	r0, r8
    ced0:	f043 0301 	orr.w	r3, r3, #1
    ced4:	3108      	adds	r1, #8
    ced6:	607b      	str	r3, [r7, #4]
    ced8:	f006 fbc4 	bl	13664 <_free_r>
    cedc:	e7d2      	b.n	ce84 <_realloc_r+0x118>
    cede:	f8dc 0004 	ldr.w	r0, [ip, #4]
    cee2:	f020 0b03 	bic.w	fp, r0, #3
    cee6:	eb07 0c0b 	add.w	ip, r7, fp
    ceea:	f105 0010 	add.w	r0, r5, #16
    ceee:	4584      	cmp	ip, r0
    cef0:	da4d      	bge.n	cf8e <_realloc_r+0x222>
    cef2:	07c9      	lsls	r1, r1, #31
    cef4:	f53f af7d 	bmi.w	cdf2 <_realloc_r+0x86>
    cef8:	f854 1c08 	ldr.w	r1, [r4, #-8]
    cefc:	eba9 0a01 	sub.w	sl, r9, r1
    cf00:	f8da 1004 	ldr.w	r1, [sl, #4]
    cf04:	f021 0103 	bic.w	r1, r1, #3
    cf08:	448b      	add	fp, r1
    cf0a:	44bb      	add	fp, r7
    cf0c:	4558      	cmp	r0, fp
    cf0e:	f73f af6c 	bgt.w	cdea <_realloc_r+0x7e>
    cf12:	4656      	mov	r6, sl
    cf14:	f8da 100c 	ldr.w	r1, [sl, #12]
    cf18:	f856 0f08 	ldr.w	r0, [r6, #8]!
    cf1c:	1f3a      	subs	r2, r7, #4
    cf1e:	2a24      	cmp	r2, #36	; 0x24
    cf20:	60c1      	str	r1, [r0, #12]
    cf22:	6088      	str	r0, [r1, #8]
    cf24:	f200 80db 	bhi.w	d0de <_realloc_r+0x372>
    cf28:	2a13      	cmp	r2, #19
    cf2a:	f240 80d6 	bls.w	d0da <_realloc_r+0x36e>
    cf2e:	6821      	ldr	r1, [r4, #0]
    cf30:	2a1b      	cmp	r2, #27
    cf32:	f8ca 1008 	str.w	r1, [sl, #8]
    cf36:	6861      	ldr	r1, [r4, #4]
    cf38:	f8ca 100c 	str.w	r1, [sl, #12]
    cf3c:	f200 80e0 	bhi.w	d100 <_realloc_r+0x394>
    cf40:	3408      	adds	r4, #8
    cf42:	f10a 0210 	add.w	r2, sl, #16
    cf46:	6821      	ldr	r1, [r4, #0]
    cf48:	6011      	str	r1, [r2, #0]
    cf4a:	6861      	ldr	r1, [r4, #4]
    cf4c:	6051      	str	r1, [r2, #4]
    cf4e:	68a1      	ldr	r1, [r4, #8]
    cf50:	6091      	str	r1, [r2, #8]
    cf52:	ebab 0205 	sub.w	r2, fp, r5
    cf56:	eb0a 0105 	add.w	r1, sl, r5
    cf5a:	f042 0201 	orr.w	r2, r2, #1
    cf5e:	6099      	str	r1, [r3, #8]
    cf60:	604a      	str	r2, [r1, #4]
    cf62:	f8da 3004 	ldr.w	r3, [sl, #4]
    cf66:	4640      	mov	r0, r8
    cf68:	f003 0301 	and.w	r3, r3, #1
    cf6c:	431d      	orrs	r5, r3
    cf6e:	f8ca 5004 	str.w	r5, [sl, #4]
    cf72:	f7ff fdf9 	bl	cb68 <__malloc_unlock>
    cf76:	e76e      	b.n	ce56 <_realloc_r+0xea>
    cf78:	6823      	ldr	r3, [r4, #0]
    cf7a:	2a1b      	cmp	r2, #27
    cf7c:	6003      	str	r3, [r0, #0]
    cf7e:	6863      	ldr	r3, [r4, #4]
    cf80:	6043      	str	r3, [r0, #4]
    cf82:	d868      	bhi.n	d056 <_realloc_r+0x2ea>
    cf84:	f104 0208 	add.w	r2, r4, #8
    cf88:	f100 0308 	add.w	r3, r0, #8
    cf8c:	e74a      	b.n	ce24 <_realloc_r+0xb8>
    cf8e:	eb09 0205 	add.w	r2, r9, r5
    cf92:	ebac 0c05 	sub.w	ip, ip, r5
    cf96:	609a      	str	r2, [r3, #8]
    cf98:	f04c 0301 	orr.w	r3, ip, #1
    cf9c:	6053      	str	r3, [r2, #4]
    cf9e:	f854 3c04 	ldr.w	r3, [r4, #-4]
    cfa2:	4640      	mov	r0, r8
    cfa4:	f003 0301 	and.w	r3, r3, #1
    cfa8:	431d      	orrs	r5, r3
    cfaa:	f844 5c04 	str.w	r5, [r4, #-4]
    cfae:	f7ff fddb 	bl	cb68 <__malloc_unlock>
    cfb2:	4626      	mov	r6, r4
    cfb4:	e74f      	b.n	ce56 <_realloc_r+0xea>
    cfb6:	f850 3c04 	ldr.w	r3, [r0, #-4]
    cfba:	f023 0303 	bic.w	r3, r3, #3
    cfbe:	441f      	add	r7, r3
    cfc0:	e751      	b.n	ce66 <_realloc_r+0xfa>
    cfc2:	4656      	mov	r6, sl
    cfc4:	f8da 100c 	ldr.w	r1, [sl, #12]
    cfc8:	f856 0f08 	ldr.w	r0, [r6, #8]!
    cfcc:	1f3a      	subs	r2, r7, #4
    cfce:	2a24      	cmp	r2, #36	; 0x24
    cfd0:	60c1      	str	r1, [r0, #12]
    cfd2:	6088      	str	r0, [r1, #8]
    cfd4:	d84c      	bhi.n	d070 <_realloc_r+0x304>
    cfd6:	2a13      	cmp	r2, #19
    cfd8:	d948      	bls.n	d06c <_realloc_r+0x300>
    cfda:	6821      	ldr	r1, [r4, #0]
    cfdc:	2a1b      	cmp	r2, #27
    cfde:	f8ca 1008 	str.w	r1, [sl, #8]
    cfe2:	6861      	ldr	r1, [r4, #4]
    cfe4:	f8ca 100c 	str.w	r1, [sl, #12]
    cfe8:	d856      	bhi.n	d098 <_realloc_r+0x32c>
    cfea:	3408      	adds	r4, #8
    cfec:	f10a 0210 	add.w	r2, sl, #16
    cff0:	461f      	mov	r7, r3
    cff2:	6823      	ldr	r3, [r4, #0]
    cff4:	46d1      	mov	r9, sl
    cff6:	6013      	str	r3, [r2, #0]
    cff8:	6863      	ldr	r3, [r4, #4]
    cffa:	6053      	str	r3, [r2, #4]
    cffc:	68a3      	ldr	r3, [r4, #8]
    cffe:	4634      	mov	r4, r6
    d000:	6093      	str	r3, [r2, #8]
    d002:	e730      	b.n	ce66 <_realloc_r+0xfa>
    d004:	4621      	mov	r1, r4
    d006:	f7ff fcdb 	bl	c9c0 <memmove>
    d00a:	e711      	b.n	ce30 <_realloc_r+0xc4>
    d00c:	4656      	mov	r6, sl
    d00e:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
    d012:	60cb      	str	r3, [r1, #12]
    d014:	6099      	str	r1, [r3, #8]
    d016:	f856 1f08 	ldr.w	r1, [r6, #8]!
    d01a:	f8da 300c 	ldr.w	r3, [sl, #12]
    d01e:	1f3a      	subs	r2, r7, #4
    d020:	2a24      	cmp	r2, #36	; 0x24
    d022:	60cb      	str	r3, [r1, #12]
    d024:	6099      	str	r1, [r3, #8]
    d026:	d82d      	bhi.n	d084 <_realloc_r+0x318>
    d028:	2a13      	cmp	r2, #19
    d02a:	d929      	bls.n	d080 <_realloc_r+0x314>
    d02c:	6823      	ldr	r3, [r4, #0]
    d02e:	2a1b      	cmp	r2, #27
    d030:	f8ca 3008 	str.w	r3, [sl, #8]
    d034:	6863      	ldr	r3, [r4, #4]
    d036:	f8ca 300c 	str.w	r3, [sl, #12]
    d03a:	d842      	bhi.n	d0c2 <_realloc_r+0x356>
    d03c:	3408      	adds	r4, #8
    d03e:	f10a 0310 	add.w	r3, sl, #16
    d042:	6822      	ldr	r2, [r4, #0]
    d044:	4667      	mov	r7, ip
    d046:	601a      	str	r2, [r3, #0]
    d048:	6862      	ldr	r2, [r4, #4]
    d04a:	46d1      	mov	r9, sl
    d04c:	605a      	str	r2, [r3, #4]
    d04e:	68a2      	ldr	r2, [r4, #8]
    d050:	4634      	mov	r4, r6
    d052:	609a      	str	r2, [r3, #8]
    d054:	e707      	b.n	ce66 <_realloc_r+0xfa>
    d056:	68a3      	ldr	r3, [r4, #8]
    d058:	2a24      	cmp	r2, #36	; 0x24
    d05a:	6083      	str	r3, [r0, #8]
    d05c:	68e3      	ldr	r3, [r4, #12]
    d05e:	60c3      	str	r3, [r0, #12]
    d060:	d026      	beq.n	d0b0 <_realloc_r+0x344>
    d062:	f104 0210 	add.w	r2, r4, #16
    d066:	f100 0310 	add.w	r3, r0, #16
    d06a:	e6db      	b.n	ce24 <_realloc_r+0xb8>
    d06c:	4632      	mov	r2, r6
    d06e:	e7bf      	b.n	cff0 <_realloc_r+0x284>
    d070:	4621      	mov	r1, r4
    d072:	4630      	mov	r0, r6
    d074:	461f      	mov	r7, r3
    d076:	46d1      	mov	r9, sl
    d078:	f7ff fca2 	bl	c9c0 <memmove>
    d07c:	4634      	mov	r4, r6
    d07e:	e6f2      	b.n	ce66 <_realloc_r+0xfa>
    d080:	4633      	mov	r3, r6
    d082:	e7de      	b.n	d042 <_realloc_r+0x2d6>
    d084:	4621      	mov	r1, r4
    d086:	4630      	mov	r0, r6
    d088:	4667      	mov	r7, ip
    d08a:	46d1      	mov	r9, sl
    d08c:	f7ff fc98 	bl	c9c0 <memmove>
    d090:	4634      	mov	r4, r6
    d092:	e6e8      	b.n	ce66 <_realloc_r+0xfa>
    d094:	20000550 	.word	0x20000550
    d098:	68a1      	ldr	r1, [r4, #8]
    d09a:	2a24      	cmp	r2, #36	; 0x24
    d09c:	f8ca 1010 	str.w	r1, [sl, #16]
    d0a0:	68e1      	ldr	r1, [r4, #12]
    d0a2:	f8ca 1014 	str.w	r1, [sl, #20]
    d0a6:	d020      	beq.n	d0ea <_realloc_r+0x37e>
    d0a8:	3410      	adds	r4, #16
    d0aa:	f10a 0218 	add.w	r2, sl, #24
    d0ae:	e79f      	b.n	cff0 <_realloc_r+0x284>
    d0b0:	6923      	ldr	r3, [r4, #16]
    d0b2:	f104 0218 	add.w	r2, r4, #24
    d0b6:	6103      	str	r3, [r0, #16]
    d0b8:	6963      	ldr	r3, [r4, #20]
    d0ba:	6143      	str	r3, [r0, #20]
    d0bc:	f100 0318 	add.w	r3, r0, #24
    d0c0:	e6b0      	b.n	ce24 <_realloc_r+0xb8>
    d0c2:	68a3      	ldr	r3, [r4, #8]
    d0c4:	2a24      	cmp	r2, #36	; 0x24
    d0c6:	f8ca 3010 	str.w	r3, [sl, #16]
    d0ca:	68e3      	ldr	r3, [r4, #12]
    d0cc:	f8ca 3014 	str.w	r3, [sl, #20]
    d0d0:	d022      	beq.n	d118 <_realloc_r+0x3ac>
    d0d2:	3410      	adds	r4, #16
    d0d4:	f10a 0318 	add.w	r3, sl, #24
    d0d8:	e7b3      	b.n	d042 <_realloc_r+0x2d6>
    d0da:	4632      	mov	r2, r6
    d0dc:	e733      	b.n	cf46 <_realloc_r+0x1da>
    d0de:	4621      	mov	r1, r4
    d0e0:	4630      	mov	r0, r6
    d0e2:	f7ff fc6d 	bl	c9c0 <memmove>
    d0e6:	4b17      	ldr	r3, [pc, #92]	; (d144 <_realloc_r+0x3d8>)
    d0e8:	e733      	b.n	cf52 <_realloc_r+0x1e6>
    d0ea:	6922      	ldr	r2, [r4, #16]
    d0ec:	3418      	adds	r4, #24
    d0ee:	f8ca 2018 	str.w	r2, [sl, #24]
    d0f2:	f854 2c04 	ldr.w	r2, [r4, #-4]
    d0f6:	f8ca 201c 	str.w	r2, [sl, #28]
    d0fa:	f10a 0220 	add.w	r2, sl, #32
    d0fe:	e777      	b.n	cff0 <_realloc_r+0x284>
    d100:	68a1      	ldr	r1, [r4, #8]
    d102:	2a24      	cmp	r2, #36	; 0x24
    d104:	f8ca 1010 	str.w	r1, [sl, #16]
    d108:	68e1      	ldr	r1, [r4, #12]
    d10a:	f8ca 1014 	str.w	r1, [sl, #20]
    d10e:	d00e      	beq.n	d12e <_realloc_r+0x3c2>
    d110:	3410      	adds	r4, #16
    d112:	f10a 0218 	add.w	r2, sl, #24
    d116:	e716      	b.n	cf46 <_realloc_r+0x1da>
    d118:	6923      	ldr	r3, [r4, #16]
    d11a:	3418      	adds	r4, #24
    d11c:	f8ca 3018 	str.w	r3, [sl, #24]
    d120:	f854 3c04 	ldr.w	r3, [r4, #-4]
    d124:	f8ca 301c 	str.w	r3, [sl, #28]
    d128:	f10a 0320 	add.w	r3, sl, #32
    d12c:	e789      	b.n	d042 <_realloc_r+0x2d6>
    d12e:	6922      	ldr	r2, [r4, #16]
    d130:	3418      	adds	r4, #24
    d132:	f8ca 2018 	str.w	r2, [sl, #24]
    d136:	f854 2c04 	ldr.w	r2, [r4, #-4]
    d13a:	f8ca 201c 	str.w	r2, [sl, #28]
    d13e:	f10a 0220 	add.w	r2, sl, #32
    d142:	e700      	b.n	cf46 <_realloc_r+0x1da>
    d144:	20000550 	.word	0x20000550

0000d148 <_sbrk_r>:
    d148:	2200      	movs	r2, #0
    d14a:	b538      	push	{r3, r4, r5, lr}
    d14c:	4d06      	ldr	r5, [pc, #24]	; (d168 <_sbrk_r+0x20>)
    d14e:	4604      	mov	r4, r0
    d150:	4608      	mov	r0, r1
    d152:	602a      	str	r2, [r5, #0]
    d154:	f009 fbf4 	bl	16940 <_sbrk>
    d158:	1c43      	adds	r3, r0, #1
    d15a:	d000      	beq.n	d15e <_sbrk_r+0x16>
    d15c:	bd38      	pop	{r3, r4, r5, pc}
    d15e:	682b      	ldr	r3, [r5, #0]
    d160:	2b00      	cmp	r3, #0
    d162:	d0fb      	beq.n	d15c <_sbrk_r+0x14>
    d164:	6023      	str	r3, [r4, #0]
    d166:	bd38      	pop	{r3, r4, r5, pc}
    d168:	20001fa8 	.word	0x20001fa8

0000d16c <_init_signal_r>:
    d16c:	b538      	push	{r3, r4, r5, lr}
    d16e:	f8d0 42dc 	ldr.w	r4, [r0, #732]	; 0x2dc
    d172:	b10c      	cbz	r4, d178 <_init_signal_r+0xc>
    d174:	2000      	movs	r0, #0
    d176:	bd38      	pop	{r3, r4, r5, pc}
    d178:	2180      	movs	r1, #128	; 0x80
    d17a:	4605      	mov	r5, r0
    d17c:	f7ff f882 	bl	c284 <_malloc_r>
    d180:	4602      	mov	r2, r0
    d182:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d186:	b130      	cbz	r0, d196 <_init_signal_r+0x2a>
    d188:	1f03      	subs	r3, r0, #4
    d18a:	327c      	adds	r2, #124	; 0x7c
    d18c:	f843 4f04 	str.w	r4, [r3, #4]!
    d190:	4293      	cmp	r3, r2
    d192:	d1fb      	bne.n	d18c <_init_signal_r+0x20>
    d194:	e7ee      	b.n	d174 <_init_signal_r+0x8>
    d196:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d19a:	bd38      	pop	{r3, r4, r5, pc}

0000d19c <_signal_r>:
    d19c:	291f      	cmp	r1, #31
    d19e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d1a0:	4605      	mov	r5, r0
    d1a2:	d809      	bhi.n	d1b8 <_signal_r+0x1c>
    d1a4:	f8d0 62dc 	ldr.w	r6, [r0, #732]	; 0x2dc
    d1a8:	460c      	mov	r4, r1
    d1aa:	4617      	mov	r7, r2
    d1ac:	b14e      	cbz	r6, d1c2 <_signal_r+0x26>
    d1ae:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    d1b2:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
    d1b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d1b8:	2316      	movs	r3, #22
    d1ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d1be:	602b      	str	r3, [r5, #0]
    d1c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d1c2:	2180      	movs	r1, #128	; 0x80
    d1c4:	f7ff f85e 	bl	c284 <_malloc_r>
    d1c8:	4606      	mov	r6, r0
    d1ca:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d1ce:	b140      	cbz	r0, d1e2 <_signal_r+0x46>
    d1d0:	2100      	movs	r1, #0
    d1d2:	1f03      	subs	r3, r0, #4
    d1d4:	f100 057c 	add.w	r5, r0, #124	; 0x7c
    d1d8:	f843 1f04 	str.w	r1, [r3, #4]!
    d1dc:	429d      	cmp	r5, r3
    d1de:	d1fb      	bne.n	d1d8 <_signal_r+0x3c>
    d1e0:	e7e5      	b.n	d1ae <_signal_r+0x12>
    d1e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d1e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000d1e8 <_raise_r>:
    d1e8:	291f      	cmp	r1, #31
    d1ea:	b538      	push	{r3, r4, r5, lr}
    d1ec:	4605      	mov	r5, r0
    d1ee:	d821      	bhi.n	d234 <_raise_r+0x4c>
    d1f0:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
    d1f4:	460c      	mov	r4, r1
    d1f6:	b16a      	cbz	r2, d214 <_raise_r+0x2c>
    d1f8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
    d1fc:	b153      	cbz	r3, d214 <_raise_r+0x2c>
    d1fe:	2b01      	cmp	r3, #1
    d200:	d016      	beq.n	d230 <_raise_r+0x48>
    d202:	1c59      	adds	r1, r3, #1
    d204:	d010      	beq.n	d228 <_raise_r+0x40>
    d206:	2500      	movs	r5, #0
    d208:	4620      	mov	r0, r4
    d20a:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
    d20e:	4798      	blx	r3
    d210:	4628      	mov	r0, r5
    d212:	bd38      	pop	{r3, r4, r5, pc}
    d214:	4628      	mov	r0, r5
    d216:	f000 f903 	bl	d420 <_getpid_r>
    d21a:	4622      	mov	r2, r4
    d21c:	4601      	mov	r1, r0
    d21e:	4628      	mov	r0, r5
    d220:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    d224:	f000 b8e8 	b.w	d3f8 <_kill_r>
    d228:	2316      	movs	r3, #22
    d22a:	2001      	movs	r0, #1
    d22c:	602b      	str	r3, [r5, #0]
    d22e:	bd38      	pop	{r3, r4, r5, pc}
    d230:	2000      	movs	r0, #0
    d232:	bd38      	pop	{r3, r4, r5, pc}
    d234:	2316      	movs	r3, #22
    d236:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d23a:	602b      	str	r3, [r5, #0]
    d23c:	bd38      	pop	{r3, r4, r5, pc}
    d23e:	bf00      	nop

0000d240 <__sigtramp_r>:
    d240:	291f      	cmp	r1, #31
    d242:	d82d      	bhi.n	d2a0 <__sigtramp_r+0x60>
    d244:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
    d248:	b538      	push	{r3, r4, r5, lr}
    d24a:	460c      	mov	r4, r1
    d24c:	4605      	mov	r5, r0
    d24e:	b182      	cbz	r2, d272 <__sigtramp_r+0x32>
    d250:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
    d254:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    d258:	b14b      	cbz	r3, d26e <__sigtramp_r+0x2e>
    d25a:	1c59      	adds	r1, r3, #1
    d25c:	d01b      	beq.n	d296 <__sigtramp_r+0x56>
    d25e:	2b01      	cmp	r3, #1
    d260:	d017      	beq.n	d292 <__sigtramp_r+0x52>
    d262:	2500      	movs	r5, #0
    d264:	4620      	mov	r0, r4
    d266:	6015      	str	r5, [r2, #0]
    d268:	4798      	blx	r3
    d26a:	4628      	mov	r0, r5
    d26c:	bd38      	pop	{r3, r4, r5, pc}
    d26e:	2001      	movs	r0, #1
    d270:	bd38      	pop	{r3, r4, r5, pc}
    d272:	2180      	movs	r1, #128	; 0x80
    d274:	f7ff f806 	bl	c284 <_malloc_r>
    d278:	4602      	mov	r2, r0
    d27a:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d27e:	b160      	cbz	r0, d29a <__sigtramp_r+0x5a>
    d280:	2000      	movs	r0, #0
    d282:	1f13      	subs	r3, r2, #4
    d284:	f102 017c 	add.w	r1, r2, #124	; 0x7c
    d288:	f843 0f04 	str.w	r0, [r3, #4]!
    d28c:	4299      	cmp	r1, r3
    d28e:	d1fb      	bne.n	d288 <__sigtramp_r+0x48>
    d290:	e7de      	b.n	d250 <__sigtramp_r+0x10>
    d292:	2003      	movs	r0, #3
    d294:	bd38      	pop	{r3, r4, r5, pc}
    d296:	2002      	movs	r0, #2
    d298:	bd38      	pop	{r3, r4, r5, pc}
    d29a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d29e:	bd38      	pop	{r3, r4, r5, pc}
    d2a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d2a4:	4770      	bx	lr
    d2a6:	bf00      	nop

0000d2a8 <raise>:
    d2a8:	b538      	push	{r3, r4, r5, lr}
    d2aa:	4b15      	ldr	r3, [pc, #84]	; (d300 <raise+0x58>)
    d2ac:	281f      	cmp	r0, #31
    d2ae:	681d      	ldr	r5, [r3, #0]
    d2b0:	d820      	bhi.n	d2f4 <raise+0x4c>
    d2b2:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
    d2b6:	4604      	mov	r4, r0
    d2b8:	b162      	cbz	r2, d2d4 <raise+0x2c>
    d2ba:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
    d2be:	b14b      	cbz	r3, d2d4 <raise+0x2c>
    d2c0:	2b01      	cmp	r3, #1
    d2c2:	d015      	beq.n	d2f0 <raise+0x48>
    d2c4:	1c59      	adds	r1, r3, #1
    d2c6:	d00f      	beq.n	d2e8 <raise+0x40>
    d2c8:	2500      	movs	r5, #0
    d2ca:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
    d2ce:	4798      	blx	r3
    d2d0:	4628      	mov	r0, r5
    d2d2:	bd38      	pop	{r3, r4, r5, pc}
    d2d4:	4628      	mov	r0, r5
    d2d6:	f000 f8a3 	bl	d420 <_getpid_r>
    d2da:	4622      	mov	r2, r4
    d2dc:	4601      	mov	r1, r0
    d2de:	4628      	mov	r0, r5
    d2e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    d2e4:	f000 b888 	b.w	d3f8 <_kill_r>
    d2e8:	2316      	movs	r3, #22
    d2ea:	2001      	movs	r0, #1
    d2ec:	602b      	str	r3, [r5, #0]
    d2ee:	bd38      	pop	{r3, r4, r5, pc}
    d2f0:	2000      	movs	r0, #0
    d2f2:	bd38      	pop	{r3, r4, r5, pc}
    d2f4:	2316      	movs	r3, #22
    d2f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d2fa:	602b      	str	r3, [r5, #0]
    d2fc:	bd38      	pop	{r3, r4, r5, pc}
    d2fe:	bf00      	nop
    d300:	20000124 	.word	0x20000124

0000d304 <signal>:
    d304:	4b13      	ldr	r3, [pc, #76]	; (d354 <signal+0x50>)
    d306:	281f      	cmp	r0, #31
    d308:	b570      	push	{r4, r5, r6, lr}
    d30a:	681e      	ldr	r6, [r3, #0]
    d30c:	d809      	bhi.n	d322 <signal+0x1e>
    d30e:	460d      	mov	r5, r1
    d310:	f8d6 12dc 	ldr.w	r1, [r6, #732]	; 0x2dc
    d314:	4604      	mov	r4, r0
    d316:	b149      	cbz	r1, d32c <signal+0x28>
    d318:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
    d31c:	f841 5024 	str.w	r5, [r1, r4, lsl #2]
    d320:	bd70      	pop	{r4, r5, r6, pc}
    d322:	2316      	movs	r3, #22
    d324:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d328:	6033      	str	r3, [r6, #0]
    d32a:	bd70      	pop	{r4, r5, r6, pc}
    d32c:	2180      	movs	r1, #128	; 0x80
    d32e:	4630      	mov	r0, r6
    d330:	f7fe ffa8 	bl	c284 <_malloc_r>
    d334:	4601      	mov	r1, r0
    d336:	f8c6 02dc 	str.w	r0, [r6, #732]	; 0x2dc
    d33a:	b140      	cbz	r0, d34e <signal+0x4a>
    d33c:	2200      	movs	r2, #0
    d33e:	1f03      	subs	r3, r0, #4
    d340:	f100 0c7c 	add.w	ip, r0, #124	; 0x7c
    d344:	f843 2f04 	str.w	r2, [r3, #4]!
    d348:	4563      	cmp	r3, ip
    d34a:	d1fb      	bne.n	d344 <signal+0x40>
    d34c:	e7e4      	b.n	d318 <signal+0x14>
    d34e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d352:	bd70      	pop	{r4, r5, r6, pc}
    d354:	20000124 	.word	0x20000124

0000d358 <_init_signal>:
    d358:	b538      	push	{r3, r4, r5, lr}
    d35a:	4b0c      	ldr	r3, [pc, #48]	; (d38c <_init_signal+0x34>)
    d35c:	681d      	ldr	r5, [r3, #0]
    d35e:	f8d5 42dc 	ldr.w	r4, [r5, #732]	; 0x2dc
    d362:	b10c      	cbz	r4, d368 <_init_signal+0x10>
    d364:	2000      	movs	r0, #0
    d366:	bd38      	pop	{r3, r4, r5, pc}
    d368:	2180      	movs	r1, #128	; 0x80
    d36a:	4628      	mov	r0, r5
    d36c:	f7fe ff8a 	bl	c284 <_malloc_r>
    d370:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d374:	b138      	cbz	r0, d386 <_init_signal+0x2e>
    d376:	1f03      	subs	r3, r0, #4
    d378:	f100 027c 	add.w	r2, r0, #124	; 0x7c
    d37c:	f843 4f04 	str.w	r4, [r3, #4]!
    d380:	4293      	cmp	r3, r2
    d382:	d1fb      	bne.n	d37c <_init_signal+0x24>
    d384:	e7ee      	b.n	d364 <_init_signal+0xc>
    d386:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d38a:	bd38      	pop	{r3, r4, r5, pc}
    d38c:	20000124 	.word	0x20000124

0000d390 <__sigtramp>:
    d390:	b538      	push	{r3, r4, r5, lr}
    d392:	4b18      	ldr	r3, [pc, #96]	; (d3f4 <__sigtramp+0x64>)
    d394:	281f      	cmp	r0, #31
    d396:	681d      	ldr	r5, [r3, #0]
    d398:	d829      	bhi.n	d3ee <__sigtramp+0x5e>
    d39a:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
    d39e:	4604      	mov	r4, r0
    d3a0:	b182      	cbz	r2, d3c4 <__sigtramp+0x34>
    d3a2:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
    d3a6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    d3aa:	b14b      	cbz	r3, d3c0 <__sigtramp+0x30>
    d3ac:	1c59      	adds	r1, r3, #1
    d3ae:	d01c      	beq.n	d3ea <__sigtramp+0x5a>
    d3b0:	2b01      	cmp	r3, #1
    d3b2:	d018      	beq.n	d3e6 <__sigtramp+0x56>
    d3b4:	2500      	movs	r5, #0
    d3b6:	4620      	mov	r0, r4
    d3b8:	6015      	str	r5, [r2, #0]
    d3ba:	4798      	blx	r3
    d3bc:	4628      	mov	r0, r5
    d3be:	bd38      	pop	{r3, r4, r5, pc}
    d3c0:	2001      	movs	r0, #1
    d3c2:	bd38      	pop	{r3, r4, r5, pc}
    d3c4:	2180      	movs	r1, #128	; 0x80
    d3c6:	4628      	mov	r0, r5
    d3c8:	f7fe ff5c 	bl	c284 <_malloc_r>
    d3cc:	4602      	mov	r2, r0
    d3ce:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d3d2:	b160      	cbz	r0, d3ee <__sigtramp+0x5e>
    d3d4:	2000      	movs	r0, #0
    d3d6:	1f13      	subs	r3, r2, #4
    d3d8:	f102 017c 	add.w	r1, r2, #124	; 0x7c
    d3dc:	f843 0f04 	str.w	r0, [r3, #4]!
    d3e0:	428b      	cmp	r3, r1
    d3e2:	d1fb      	bne.n	d3dc <__sigtramp+0x4c>
    d3e4:	e7dd      	b.n	d3a2 <__sigtramp+0x12>
    d3e6:	2003      	movs	r0, #3
    d3e8:	bd38      	pop	{r3, r4, r5, pc}
    d3ea:	2002      	movs	r0, #2
    d3ec:	bd38      	pop	{r3, r4, r5, pc}
    d3ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d3f2:	bd38      	pop	{r3, r4, r5, pc}
    d3f4:	20000124 	.word	0x20000124

0000d3f8 <_kill_r>:
    d3f8:	b570      	push	{r4, r5, r6, lr}
    d3fa:	2600      	movs	r6, #0
    d3fc:	4d07      	ldr	r5, [pc, #28]	; (d41c <_kill_r+0x24>)
    d3fe:	4604      	mov	r4, r0
    d400:	4608      	mov	r0, r1
    d402:	4611      	mov	r1, r2
    d404:	602e      	str	r6, [r5, #0]
    d406:	f009 fe1f 	bl	17048 <_kill>
    d40a:	1c43      	adds	r3, r0, #1
    d40c:	d000      	beq.n	d410 <_kill_r+0x18>
    d40e:	bd70      	pop	{r4, r5, r6, pc}
    d410:	682b      	ldr	r3, [r5, #0]
    d412:	2b00      	cmp	r3, #0
    d414:	d0fb      	beq.n	d40e <_kill_r+0x16>
    d416:	6023      	str	r3, [r4, #0]
    d418:	bd70      	pop	{r4, r5, r6, pc}
    d41a:	bf00      	nop
    d41c:	20001fa8 	.word	0x20001fa8

0000d420 <_getpid_r>:
    d420:	f009 ba8c 	b.w	1693c <_getpid>

0000d424 <_sprintf_r>:
    d424:	b40c      	push	{r2, r3}
    d426:	b530      	push	{r4, r5, lr}
    d428:	460c      	mov	r4, r1
    d42a:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
    d42e:	b09d      	sub	sp, #116	; 0x74
    d430:	4a0a      	ldr	r2, [pc, #40]	; (d45c <_sprintf_r+0x38>)
    d432:	ab20      	add	r3, sp, #128	; 0x80
    d434:	9205      	str	r2, [sp, #20]
    d436:	f853 2b04 	ldr.w	r2, [r3], #4
    d43a:	a902      	add	r1, sp, #8
    d43c:	e9cd 3401 	strd	r3, r4, [sp, #4]
    d440:	9507      	str	r5, [sp, #28]
    d442:	9504      	str	r5, [sp, #16]
    d444:	9406      	str	r4, [sp, #24]
    d446:	f000 f977 	bl	d738 <_svfprintf_r>
    d44a:	2200      	movs	r2, #0
    d44c:	9b02      	ldr	r3, [sp, #8]
    d44e:	701a      	strb	r2, [r3, #0]
    d450:	b01d      	add	sp, #116	; 0x74
    d452:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    d456:	b002      	add	sp, #8
    d458:	4770      	bx	lr
    d45a:	bf00      	nop
    d45c:	ffff0208 	.word	0xffff0208

0000d460 <sprintf>:
    d460:	b40e      	push	{r1, r2, r3}
    d462:	b530      	push	{r4, r5, lr}
    d464:	4604      	mov	r4, r0
    d466:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
    d46a:	b09c      	sub	sp, #112	; 0x70
    d46c:	4a0b      	ldr	r2, [pc, #44]	; (d49c <sprintf+0x3c>)
    d46e:	ab1f      	add	r3, sp, #124	; 0x7c
    d470:	490b      	ldr	r1, [pc, #44]	; (d4a0 <sprintf+0x40>)
    d472:	9205      	str	r2, [sp, #20]
    d474:	f853 2b04 	ldr.w	r2, [r3], #4
    d478:	6808      	ldr	r0, [r1, #0]
    d47a:	a902      	add	r1, sp, #8
    d47c:	e9cd 3401 	strd	r3, r4, [sp, #4]
    d480:	9507      	str	r5, [sp, #28]
    d482:	9504      	str	r5, [sp, #16]
    d484:	9406      	str	r4, [sp, #24]
    d486:	f000 f957 	bl	d738 <_svfprintf_r>
    d48a:	2200      	movs	r2, #0
    d48c:	9b02      	ldr	r3, [sp, #8]
    d48e:	701a      	strb	r2, [r3, #0]
    d490:	b01c      	add	sp, #112	; 0x70
    d492:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    d496:	b003      	add	sp, #12
    d498:	4770      	bx	lr
    d49a:	bf00      	nop
    d49c:	ffff0208 	.word	0xffff0208
    d4a0:	20000124 	.word	0x20000124

0000d4a4 <strcmp>:
    d4a4:	ea80 0c01 	eor.w	ip, r0, r1
    d4a8:	f01c 0f03 	tst.w	ip, #3
    d4ac:	d137      	bne.n	d51e <strcmp+0x7a>
    d4ae:	f010 0c03 	ands.w	ip, r0, #3
    d4b2:	f020 0003 	bic.w	r0, r0, #3
    d4b6:	f021 0103 	bic.w	r1, r1, #3
    d4ba:	f850 2b04 	ldr.w	r2, [r0], #4
    d4be:	bf08      	it	eq
    d4c0:	f851 3b04 	ldreq.w	r3, [r1], #4
    d4c4:	d00e      	beq.n	d4e4 <strcmp+0x40>
    d4c6:	f08c 0c03 	eor.w	ip, ip, #3
    d4ca:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
    d4ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
    d4d2:	fa23 fc0c 	lsr.w	ip, r3, ip
    d4d6:	f851 3b04 	ldr.w	r3, [r1], #4
    d4da:	ea42 020c 	orr.w	r2, r2, ip
    d4de:	ea43 030c 	orr.w	r3, r3, ip
    d4e2:	bf00      	nop
    d4e4:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
    d4e8:	429a      	cmp	r2, r3
    d4ea:	bf01      	itttt	eq
    d4ec:	ea2c 0c02 	biceq.w	ip, ip, r2
    d4f0:	f01c 3f80 	tsteq.w	ip, #2155905152	; 0x80808080
    d4f4:	f850 2b04 	ldreq.w	r2, [r0], #4
    d4f8:	f851 3b04 	ldreq.w	r3, [r1], #4
    d4fc:	d0f2      	beq.n	d4e4 <strcmp+0x40>
    d4fe:	ea4f 6002 	mov.w	r0, r2, lsl #24
    d502:	ea4f 2212 	mov.w	r2, r2, lsr #8
    d506:	2801      	cmp	r0, #1
    d508:	bf28      	it	cs
    d50a:	ebb0 6f03 	cmpcs.w	r0, r3, lsl #24
    d50e:	bf08      	it	eq
    d510:	0a1b      	lsreq	r3, r3, #8
    d512:	d0f4      	beq.n	d4fe <strcmp+0x5a>
    d514:	f003 03ff 	and.w	r3, r3, #255	; 0xff
    d518:	0e00      	lsrs	r0, r0, #24
    d51a:	1ac0      	subs	r0, r0, r3
    d51c:	4770      	bx	lr
    d51e:	f010 0f03 	tst.w	r0, #3
    d522:	d00a      	beq.n	d53a <strcmp+0x96>
    d524:	f810 2b01 	ldrb.w	r2, [r0], #1
    d528:	f811 3b01 	ldrb.w	r3, [r1], #1
    d52c:	2a01      	cmp	r2, #1
    d52e:	bf28      	it	cs
    d530:	429a      	cmpcs	r2, r3
    d532:	d0f4      	beq.n	d51e <strcmp+0x7a>
    d534:	eba2 0003 	sub.w	r0, r2, r3
    d538:	4770      	bx	lr
    d53a:	f84d 5d04 	str.w	r5, [sp, #-4]!
    d53e:	f850 2b04 	ldr.w	r2, [r0], #4
    d542:	f001 0503 	and.w	r5, r1, #3
    d546:	f021 0103 	bic.w	r1, r1, #3
    d54a:	f851 3b04 	ldr.w	r3, [r1], #4
    d54e:	2d02      	cmp	r5, #2
    d550:	d026      	beq.n	d5a0 <strcmp+0xfc>
    d552:	d84d      	bhi.n	d5f0 <strcmp+0x14c>
    d554:	f022 457f 	bic.w	r5, r2, #4278190080	; 0xff000000
    d558:	ebb5 2f13 	cmp.w	r5, r3, lsr #8
    d55c:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
    d560:	ea2c 0c02 	bic.w	ip, ip, r2
    d564:	d10d      	bne.n	d582 <strcmp+0xde>
    d566:	f01c 3c80 	ands.w	ip, ip, #2155905152	; 0x80808080
    d56a:	bf08      	it	eq
    d56c:	f851 3b04 	ldreq.w	r3, [r1], #4
    d570:	d10a      	bne.n	d588 <strcmp+0xe4>
    d572:	ea85 0502 	eor.w	r5, r5, r2
    d576:	ebb5 6f03 	cmp.w	r5, r3, lsl #24
    d57a:	d10c      	bne.n	d596 <strcmp+0xf2>
    d57c:	f850 2b04 	ldr.w	r2, [r0], #4
    d580:	e7e8      	b.n	d554 <strcmp+0xb0>
    d582:	ea4f 2313 	mov.w	r3, r3, lsr #8
    d586:	e05b      	b.n	d640 <strcmp+0x19c>
    d588:	f03c 4c7f 	bics.w	ip, ip, #4278190080	; 0xff000000
    d58c:	d154      	bne.n	d638 <strcmp+0x194>
    d58e:	780b      	ldrb	r3, [r1, #0]
    d590:	ea4f 6512 	mov.w	r5, r2, lsr #24
    d594:	e054      	b.n	d640 <strcmp+0x19c>
    d596:	ea4f 6512 	mov.w	r5, r2, lsr #24
    d59a:	f003 03ff 	and.w	r3, r3, #255	; 0xff
    d59e:	e04f      	b.n	d640 <strcmp+0x19c>
    d5a0:	ea4f 4502 	mov.w	r5, r2, lsl #16
    d5a4:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
    d5a8:	ea4f 4515 	mov.w	r5, r5, lsr #16
    d5ac:	ea2c 0c02 	bic.w	ip, ip, r2
    d5b0:	ebb5 4f13 	cmp.w	r5, r3, lsr #16
    d5b4:	d118      	bne.n	d5e8 <strcmp+0x144>
    d5b6:	f01c 3c80 	ands.w	ip, ip, #2155905152	; 0x80808080
    d5ba:	bf08      	it	eq
    d5bc:	f851 3b04 	ldreq.w	r3, [r1], #4
    d5c0:	d107      	bne.n	d5d2 <strcmp+0x12e>
    d5c2:	ea85 0502 	eor.w	r5, r5, r2
    d5c6:	ebb5 4f03 	cmp.w	r5, r3, lsl #16
    d5ca:	d109      	bne.n	d5e0 <strcmp+0x13c>
    d5cc:	f850 2b04 	ldr.w	r2, [r0], #4
    d5d0:	e7e6      	b.n	d5a0 <strcmp+0xfc>
    d5d2:	ea5f 4c0c 	movs.w	ip, ip, lsl #16
    d5d6:	d12f      	bne.n	d638 <strcmp+0x194>
    d5d8:	880b      	ldrh	r3, [r1, #0]
    d5da:	ea4f 4512 	mov.w	r5, r2, lsr #16
    d5de:	e02f      	b.n	d640 <strcmp+0x19c>
    d5e0:	ea4f 4303 	mov.w	r3, r3, lsl #16
    d5e4:	ea4f 4512 	mov.w	r5, r2, lsr #16
    d5e8:	ea4f 4313 	mov.w	r3, r3, lsr #16
    d5ec:	e028      	b.n	d640 <strcmp+0x19c>
    d5ee:	bf00      	nop
    d5f0:	f002 05ff 	and.w	r5, r2, #255	; 0xff
    d5f4:	ebb5 6f13 	cmp.w	r5, r3, lsr #24
    d5f8:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
    d5fc:	ea2c 0c02 	bic.w	ip, ip, r2
    d600:	d10d      	bne.n	d61e <strcmp+0x17a>
    d602:	f01c 3c80 	ands.w	ip, ip, #2155905152	; 0x80808080
    d606:	bf08      	it	eq
    d608:	f851 3b04 	ldreq.w	r3, [r1], #4
    d60c:	d10a      	bne.n	d624 <strcmp+0x180>
    d60e:	ea85 0502 	eor.w	r5, r5, r2
    d612:	ebb5 2f03 	cmp.w	r5, r3, lsl #8
    d616:	d10a      	bne.n	d62e <strcmp+0x18a>
    d618:	f850 2b04 	ldr.w	r2, [r0], #4
    d61c:	e7e8      	b.n	d5f0 <strcmp+0x14c>
    d61e:	ea4f 6313 	mov.w	r3, r3, lsr #24
    d622:	e00d      	b.n	d640 <strcmp+0x19c>
    d624:	f012 0fff 	tst.w	r2, #255	; 0xff
    d628:	d006      	beq.n	d638 <strcmp+0x194>
    d62a:	f851 3b04 	ldr.w	r3, [r1], #4
    d62e:	ea4f 2512 	mov.w	r5, r2, lsr #8
    d632:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
    d636:	e003      	b.n	d640 <strcmp+0x19c>
    d638:	f04f 0000 	mov.w	r0, #0
    d63c:	bc20      	pop	{r5}
    d63e:	4770      	bx	lr
    d640:	f005 02ff 	and.w	r2, r5, #255	; 0xff
    d644:	f003 00ff 	and.w	r0, r3, #255	; 0xff
    d648:	2801      	cmp	r0, #1
    d64a:	bf28      	it	cs
    d64c:	4290      	cmpcs	r0, r2
    d64e:	bf04      	itt	eq
    d650:	0a2d      	lsreq	r5, r5, #8
    d652:	0a1b      	lsreq	r3, r3, #8
    d654:	d0f4      	beq.n	d640 <strcmp+0x19c>
    d656:	eba2 0000 	sub.w	r0, r2, r0
    d65a:	bc20      	pop	{r5}
    d65c:	4770      	bx	lr
    d65e:	bf00      	nop

0000d660 <strlen>:
    d660:	f020 0103 	bic.w	r1, r0, #3
    d664:	f010 0003 	ands.w	r0, r0, #3
    d668:	f1c0 0000 	rsb	r0, r0, #0
    d66c:	f851 3b04 	ldr.w	r3, [r1], #4
    d670:	f100 0c04 	add.w	ip, r0, #4
    d674:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
    d678:	f06f 0200 	mvn.w	r2, #0
    d67c:	bf1c      	itt	ne
    d67e:	fa22 f20c 	lsrne.w	r2, r2, ip
    d682:	4313      	orrne	r3, r2
    d684:	f04f 0c01 	mov.w	ip, #1
    d688:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
    d68c:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
    d690:	eba3 020c 	sub.w	r2, r3, ip
    d694:	ea22 0203 	bic.w	r2, r2, r3
    d698:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
    d69c:	bf04      	itt	eq
    d69e:	f851 3b04 	ldreq.w	r3, [r1], #4
    d6a2:	3004      	addeq	r0, #4
    d6a4:	d0f4      	beq.n	d690 <strlen+0x30>
    d6a6:	f1c2 0100 	rsb	r1, r2, #0
    d6aa:	ea02 0201 	and.w	r2, r2, r1
    d6ae:	fab2 f282 	clz	r2, r2
    d6b2:	f1c2 021f 	rsb	r2, r2, #31
    d6b6:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
    d6ba:	4770      	bx	lr

0000d6bc <strncmp>:
    d6bc:	b3a2      	cbz	r2, d728 <strncmp+0x6c>
    d6be:	b530      	push	{r4, r5, lr}
    d6c0:	ea40 0401 	orr.w	r4, r0, r1
    d6c4:	07a4      	lsls	r4, r4, #30
    d6c6:	4686      	mov	lr, r0
    d6c8:	460b      	mov	r3, r1
    d6ca:	d02a      	beq.n	d722 <strncmp+0x66>
    d6cc:	7804      	ldrb	r4, [r0, #0]
    d6ce:	780b      	ldrb	r3, [r1, #0]
    d6d0:	42a3      	cmp	r3, r4
    d6d2:	d12f      	bne.n	d734 <strncmp+0x78>
    d6d4:	2a01      	cmp	r2, #1
    d6d6:	d00c      	beq.n	d6f2 <strncmp+0x36>
    d6d8:	4684      	mov	ip, r0
    d6da:	b154      	cbz	r4, d6f2 <strncmp+0x36>
    d6dc:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
    d6e0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
    d6e4:	429c      	cmp	r4, r3
    d6e6:	d125      	bne.n	d734 <strncmp+0x78>
    d6e8:	ea6f 030c 	mvn.w	r3, ip
    d6ec:	4413      	add	r3, r2
    d6ee:	18c3      	adds	r3, r0, r3
    d6f0:	d1f3      	bne.n	d6da <strncmp+0x1e>
    d6f2:	2000      	movs	r0, #0
    d6f4:	bd30      	pop	{r4, r5, pc}
    d6f6:	4619      	mov	r1, r3
    d6f8:	f8de 4000 	ldr.w	r4, [lr]
    d6fc:	4670      	mov	r0, lr
    d6fe:	f1a4 3301 	sub.w	r3, r4, #16843009	; 0x1010101
    d702:	ea23 0c04 	bic.w	ip, r3, r4
    d706:	460b      	mov	r3, r1
    d708:	f853 5b04 	ldr.w	r5, [r3], #4
    d70c:	f10e 0e04 	add.w	lr, lr, #4
    d710:	42ac      	cmp	r4, r5
    d712:	d10b      	bne.n	d72c <strncmp+0x70>
    d714:	3a04      	subs	r2, #4
    d716:	d0ec      	beq.n	d6f2 <strncmp+0x36>
    d718:	f01c 3f80 	tst.w	ip, #2155905152	; 0x80808080
    d71c:	d1e9      	bne.n	d6f2 <strncmp+0x36>
    d71e:	4670      	mov	r0, lr
    d720:	4619      	mov	r1, r3
    d722:	2a03      	cmp	r2, #3
    d724:	d8e7      	bhi.n	d6f6 <strncmp+0x3a>
    d726:	e7d1      	b.n	d6cc <strncmp+0x10>
    d728:	4610      	mov	r0, r2
    d72a:	4770      	bx	lr
    d72c:	7804      	ldrb	r4, [r0, #0]
    d72e:	780b      	ldrb	r3, [r1, #0]
    d730:	429c      	cmp	r4, r3
    d732:	d0d1      	beq.n	d6d8 <strncmp+0x1c>
    d734:	1ae0      	subs	r0, r4, r3
    d736:	bd30      	pop	{r4, r5, pc}

0000d738 <_svfprintf_r>:
    d738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d73c:	b0d5      	sub	sp, #340	; 0x154
    d73e:	460c      	mov	r4, r1
    d740:	910c      	str	r1, [sp, #48]	; 0x30
    d742:	4691      	mov	r9, r2
    d744:	930e      	str	r3, [sp, #56]	; 0x38
    d746:	900a      	str	r0, [sp, #40]	; 0x28
    d748:	f006 f918 	bl	1397c <_localeconv_r>
    d74c:	6803      	ldr	r3, [r0, #0]
    d74e:	4618      	mov	r0, r3
    d750:	9317      	str	r3, [sp, #92]	; 0x5c
    d752:	f7ff ff85 	bl	d660 <strlen>
    d756:	89a3      	ldrh	r3, [r4, #12]
    d758:	9016      	str	r0, [sp, #88]	; 0x58
    d75a:	0619      	lsls	r1, r3, #24
    d75c:	d503      	bpl.n	d766 <_svfprintf_r+0x2e>
    d75e:	6923      	ldr	r3, [r4, #16]
    d760:	2b00      	cmp	r3, #0
    d762:	f000 878f 	beq.w	e684 <_svfprintf_r+0xf4c>
    d766:	2400      	movs	r4, #0
    d768:	ab2b      	add	r3, sp, #172	; 0xac
    d76a:	4622      	mov	r2, r4
    d76c:	4698      	mov	r8, r3
    d76e:	464d      	mov	r5, r9
    d770:	e9cd 4429 	strd	r4, r4, [sp, #164]	; 0xa4
    d774:	9328      	str	r3, [sp, #160]	; 0xa0
    d776:	9412      	str	r4, [sp, #72]	; 0x48
    d778:	2300      	movs	r3, #0
    d77a:	2400      	movs	r4, #0
    d77c:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
    d780:	782b      	ldrb	r3, [r5, #0]
    d782:	e9cd 2219 	strd	r2, r2, [sp, #100]	; 0x64
    d786:	e9cd 221b 	strd	r2, r2, [sp, #108]	; 0x6c
    d78a:	9218      	str	r2, [sp, #96]	; 0x60
    d78c:	9208      	str	r2, [sp, #32]
    d78e:	2b00      	cmp	r3, #0
    d790:	f000 81ce 	beq.w	db30 <_svfprintf_r+0x3f8>
    d794:	46aa      	mov	sl, r5
    d796:	e004      	b.n	d7a2 <_svfprintf_r+0x6a>
    d798:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
    d79c:	2b00      	cmp	r3, #0
    d79e:	f000 8109 	beq.w	d9b4 <_svfprintf_r+0x27c>
    d7a2:	2b25      	cmp	r3, #37	; 0x25
    d7a4:	d1f8      	bne.n	d798 <_svfprintf_r+0x60>
    d7a6:	ebba 0605 	subs.w	r6, sl, r5
    d7aa:	f040 8107 	bne.w	d9bc <_svfprintf_r+0x284>
    d7ae:	f89a 3000 	ldrb.w	r3, [sl]
    d7b2:	2b00      	cmp	r3, #0
    d7b4:	f000 81bc 	beq.w	db30 <_svfprintf_r+0x3f8>
    d7b8:	2300      	movs	r3, #0
    d7ba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    d7be:	f04f 092b 	mov.w	r9, #43	; 0x2b
    d7c2:	2420      	movs	r4, #32
    d7c4:	461f      	mov	r7, r3
    d7c6:	f89a 6001 	ldrb.w	r6, [sl, #1]
    d7ca:	9207      	str	r2, [sp, #28]
    d7cc:	f10a 0a01 	add.w	sl, sl, #1
    d7d0:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
    d7d4:	9309      	str	r3, [sp, #36]	; 0x24
    d7d6:	f10a 0a01 	add.w	sl, sl, #1
    d7da:	f1a6 0320 	sub.w	r3, r6, #32
    d7de:	2b5a      	cmp	r3, #90	; 0x5a
    d7e0:	f200 8120 	bhi.w	da24 <_svfprintf_r+0x2ec>
    d7e4:	e8df f013 	tbh	[pc, r3, lsl #1]
    d7e8:	011e02ca 	.word	0x011e02ca
    d7ec:	02c5011e 	.word	0x02c5011e
    d7f0:	011e011e 	.word	0x011e011e
    d7f4:	02a3011e 	.word	0x02a3011e
    d7f8:	011e011e 	.word	0x011e011e
    d7fc:	02f3006a 	.word	0x02f3006a
    d800:	0247011e 	.word	0x0247011e
    d804:	011e02d9 	.word	0x011e02d9
    d808:	005b02d4 	.word	0x005b02d4
    d80c:	005b005b 	.word	0x005b005b
    d810:	005b005b 	.word	0x005b005b
    d814:	005b005b 	.word	0x005b005b
    d818:	005b005b 	.word	0x005b005b
    d81c:	011e011e 	.word	0x011e011e
    d820:	011e011e 	.word	0x011e011e
    d824:	011e011e 	.word	0x011e011e
    d828:	01b0011e 	.word	0x01b0011e
    d82c:	020b011e 	.word	0x020b011e
    d830:	01b0007a 	.word	0x01b0007a
    d834:	01b001b0 	.word	0x01b001b0
    d838:	011e011e 	.word	0x011e011e
    d83c:	011e011e 	.word	0x011e011e
    d840:	011e029e 	.word	0x011e029e
    d844:	00b6011e 	.word	0x00b6011e
    d848:	011e011e 	.word	0x011e011e
    d84c:	0219011e 	.word	0x0219011e
    d850:	024c011e 	.word	0x024c011e
    d854:	011e011e 	.word	0x011e011e
    d858:	011e073f 	.word	0x011e073f
    d85c:	011e011e 	.word	0x011e011e
    d860:	011e011e 	.word	0x011e011e
    d864:	011e011e 	.word	0x011e011e
    d868:	01b0011e 	.word	0x01b0011e
    d86c:	020b011e 	.word	0x020b011e
    d870:	01b0007c 	.word	0x01b0007c
    d874:	01b001b0 	.word	0x01b001b0
    d878:	007c0291 	.word	0x007c0291
    d87c:	011e0075 	.word	0x011e0075
    d880:	011e0284 	.word	0x011e0284
    d884:	00b80270 	.word	0x00b80270
    d888:	0075025e 	.word	0x0075025e
    d88c:	0219011e 	.word	0x0219011e
    d890:	071c0072 	.word	0x071c0072
    d894:	011e011e 	.word	0x011e011e
    d898:	011e071f 	.word	0x011e071f
    d89c:	0072      	.short	0x0072
    d89e:	2200      	movs	r2, #0
    d8a0:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    d8a4:	f81a 6b01 	ldrb.w	r6, [sl], #1
    d8a8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
    d8ac:	eb03 0242 	add.w	r2, r3, r2, lsl #1
    d8b0:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    d8b4:	2b09      	cmp	r3, #9
    d8b6:	d9f5      	bls.n	d8a4 <_svfprintf_r+0x16c>
    d8b8:	9209      	str	r2, [sp, #36]	; 0x24
    d8ba:	e78e      	b.n	d7da <_svfprintf_r+0xa2>
    d8bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d8be:	f853 2b04 	ldr.w	r2, [r3], #4
    d8c2:	2a00      	cmp	r2, #0
    d8c4:	9209      	str	r2, [sp, #36]	; 0x24
    d8c6:	930e      	str	r3, [sp, #56]	; 0x38
    d8c8:	f2c0 81d2 	blt.w	dc70 <_svfprintf_r+0x538>
    d8cc:	f89a 6000 	ldrb.w	r6, [sl]
    d8d0:	e781      	b.n	d7d6 <_svfprintf_r+0x9e>
    d8d2:	f89a 6000 	ldrb.w	r6, [sl]
    d8d6:	f047 0720 	orr.w	r7, r7, #32
    d8da:	e77c      	b.n	d7d6 <_svfprintf_r+0x9e>
    d8dc:	f047 0710 	orr.w	r7, r7, #16
    d8e0:	06ba      	lsls	r2, r7, #26
    d8e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d8e4:	f140 817d 	bpl.w	dbe2 <_svfprintf_r+0x4aa>
    d8e8:	3307      	adds	r3, #7
    d8ea:	f023 0307 	bic.w	r3, r3, #7
    d8ee:	461a      	mov	r2, r3
    d8f0:	685b      	ldr	r3, [r3, #4]
    d8f2:	f852 4b08 	ldr.w	r4, [r2], #8
    d8f6:	4699      	mov	r9, r3
    d8f8:	920e      	str	r2, [sp, #56]	; 0x38
    d8fa:	2b00      	cmp	r3, #0
    d8fc:	f2c0 857f 	blt.w	e3fe <_svfprintf_r+0xcc6>
    d900:	9b07      	ldr	r3, [sp, #28]
    d902:	3301      	adds	r3, #1
    d904:	f001 8039 	beq.w	e97a <_svfprintf_r+0x1242>
    d908:	ea54 0309 	orrs.w	r3, r4, r9
    d90c:	f027 0b80 	bic.w	fp, r7, #128	; 0x80
    d910:	f000 8505 	beq.w	e31e <_svfprintf_r+0xbe6>
    d914:	2c0a      	cmp	r4, #10
    d916:	f179 0300 	sbcs.w	r3, r9, #0
    d91a:	f080 8793 	bcs.w	e844 <_svfprintf_r+0x110c>
    d91e:	2301      	movs	r3, #1
    d920:	465f      	mov	r7, fp
    d922:	3430      	adds	r4, #48	; 0x30
    d924:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
    d928:	930b      	str	r3, [sp, #44]	; 0x2c
    d92a:	f20d 154f 	addw	r5, sp, #335	; 0x14f
    d92e:	9a07      	ldr	r2, [sp, #28]
    d930:	990b      	ldr	r1, [sp, #44]	; 0x2c
    d932:	2300      	movs	r3, #0
    d934:	428a      	cmp	r2, r1
    d936:	bfb8      	it	lt
    d938:	460a      	movlt	r2, r1
    d93a:	9206      	str	r2, [sp, #24]
    d93c:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    d940:	930d      	str	r3, [sp, #52]	; 0x34
    d942:	930f      	str	r3, [sp, #60]	; 0x3c
    d944:	9313      	str	r3, [sp, #76]	; 0x4c
    d946:	9310      	str	r3, [sp, #64]	; 0x40
    d948:	2a00      	cmp	r2, #0
    d94a:	d07c      	beq.n	da46 <_svfprintf_r+0x30e>
    d94c:	9b06      	ldr	r3, [sp, #24]
    d94e:	3301      	adds	r3, #1
    d950:	9306      	str	r3, [sp, #24]
    d952:	e078      	b.n	da46 <_svfprintf_r+0x30e>
    d954:	f047 0710 	orr.w	r7, r7, #16
    d958:	f017 0920 	ands.w	r9, r7, #32
    d95c:	f000 8132 	beq.w	dbc4 <_svfprintf_r+0x48c>
    d960:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d962:	3307      	adds	r3, #7
    d964:	f023 0307 	bic.w	r3, r3, #7
    d968:	f8d3 9004 	ldr.w	r9, [r3, #4]
    d96c:	f853 4b08 	ldr.w	r4, [r3], #8
    d970:	930e      	str	r3, [sp, #56]	; 0x38
    d972:	2300      	movs	r3, #0
    d974:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
    d978:	2200      	movs	r2, #0
    d97a:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    d97e:	9a07      	ldr	r2, [sp, #28]
    d980:	1c51      	adds	r1, r2, #1
    d982:	f000 822a 	beq.w	ddda <_svfprintf_r+0x6a2>
    d986:	ea54 0109 	orrs.w	r1, r4, r9
    d98a:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
    d98e:	f040 8223 	bne.w	ddd8 <_svfprintf_r+0x6a0>
    d992:	2a00      	cmp	r2, #0
    d994:	f041 802b 	bne.w	e9ee <_svfprintf_r+0x12b6>
    d998:	2b00      	cmp	r3, #0
    d99a:	f040 84c5 	bne.w	e328 <_svfprintf_r+0xbf0>
    d99e:	f01b 0301 	ands.w	r3, fp, #1
    d9a2:	930b      	str	r3, [sp, #44]	; 0x2c
    d9a4:	f000 8554 	beq.w	e450 <_svfprintf_r+0xd18>
    d9a8:	2330      	movs	r3, #48	; 0x30
    d9aa:	f20d 154f 	addw	r5, sp, #335	; 0x14f
    d9ae:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
    d9b2:	e7bc      	b.n	d92e <_svfprintf_r+0x1f6>
    d9b4:	ebba 0605 	subs.w	r6, sl, r5
    d9b8:	f000 80ba 	beq.w	db30 <_svfprintf_r+0x3f8>
    d9bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
    d9be:	e9c8 5600 	strd	r5, r6, [r8]
    d9c2:	4433      	add	r3, r6
    d9c4:	932a      	str	r3, [sp, #168]	; 0xa8
    d9c6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    d9c8:	3301      	adds	r3, #1
    d9ca:	2b07      	cmp	r3, #7
    d9cc:	9329      	str	r3, [sp, #164]	; 0xa4
    d9ce:	dc05      	bgt.n	d9dc <_svfprintf_r+0x2a4>
    d9d0:	f108 0808 	add.w	r8, r8, #8
    d9d4:	9b08      	ldr	r3, [sp, #32]
    d9d6:	4433      	add	r3, r6
    d9d8:	9308      	str	r3, [sp, #32]
    d9da:	e6e8      	b.n	d7ae <_svfprintf_r+0x76>
    d9dc:	990c      	ldr	r1, [sp, #48]	; 0x30
    d9de:	980a      	ldr	r0, [sp, #40]	; 0x28
    d9e0:	aa28      	add	r2, sp, #160	; 0xa0
    d9e2:	f006 fee7 	bl	147b4 <__ssprint_r>
    d9e6:	b980      	cbnz	r0, da0a <_svfprintf_r+0x2d2>
    d9e8:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    d9ec:	e7f2      	b.n	d9d4 <_svfprintf_r+0x29c>
    d9ee:	990c      	ldr	r1, [sp, #48]	; 0x30
    d9f0:	980a      	ldr	r0, [sp, #40]	; 0x28
    d9f2:	aa28      	add	r2, sp, #160	; 0xa0
    d9f4:	f006 fede 	bl	147b4 <__ssprint_r>
    d9f8:	2800      	cmp	r0, #0
    d9fa:	f000 808a 	beq.w	db12 <_svfprintf_r+0x3da>
    d9fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    da00:	b11b      	cbz	r3, da0a <_svfprintf_r+0x2d2>
    da02:	990d      	ldr	r1, [sp, #52]	; 0x34
    da04:	980a      	ldr	r0, [sp, #40]	; 0x28
    da06:	f005 fe2d 	bl	13664 <_free_r>
    da0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    da0c:	899b      	ldrh	r3, [r3, #12]
    da0e:	f013 0f40 	tst.w	r3, #64	; 0x40
    da12:	9b08      	ldr	r3, [sp, #32]
    da14:	bf18      	it	ne
    da16:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
    da1a:	9308      	str	r3, [sp, #32]
    da1c:	9808      	ldr	r0, [sp, #32]
    da1e:	b055      	add	sp, #340	; 0x154
    da20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    da24:	2e00      	cmp	r6, #0
    da26:	f000 8083 	beq.w	db30 <_svfprintf_r+0x3f8>
    da2a:	2301      	movs	r3, #1
    da2c:	2200      	movs	r2, #0
    da2e:	f88d 60ec 	strb.w	r6, [sp, #236]	; 0xec
    da32:	9306      	str	r3, [sp, #24]
    da34:	ad3b      	add	r5, sp, #236	; 0xec
    da36:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    da3a:	930b      	str	r3, [sp, #44]	; 0x2c
    da3c:	920d      	str	r2, [sp, #52]	; 0x34
    da3e:	9207      	str	r2, [sp, #28]
    da40:	920f      	str	r2, [sp, #60]	; 0x3c
    da42:	9213      	str	r2, [sp, #76]	; 0x4c
    da44:	9210      	str	r2, [sp, #64]	; 0x40
    da46:	f017 0302 	ands.w	r3, r7, #2
    da4a:	d002      	beq.n	da52 <_svfprintf_r+0x31a>
    da4c:	9906      	ldr	r1, [sp, #24]
    da4e:	3102      	adds	r1, #2
    da50:	9106      	str	r1, [sp, #24]
    da52:	f017 0b84 	ands.w	fp, r7, #132	; 0x84
    da56:	d107      	bne.n	da68 <_svfprintf_r+0x330>
    da58:	9909      	ldr	r1, [sp, #36]	; 0x24
    da5a:	9806      	ldr	r0, [sp, #24]
    da5c:	eba1 0900 	sub.w	r9, r1, r0
    da60:	f1b9 0f00 	cmp.w	r9, #0
    da64:	f300 8336 	bgt.w	e0d4 <_svfprintf_r+0x99c>
    da68:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    da6a:	b182      	cbz	r2, da8e <_svfprintf_r+0x356>
    da6c:	2201      	movs	r2, #1
    da6e:	f8c8 2004 	str.w	r2, [r8, #4]
    da72:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    da74:	3401      	adds	r4, #1
    da76:	3201      	adds	r2, #1
    da78:	f10d 0183 	add.w	r1, sp, #131	; 0x83
    da7c:	2a07      	cmp	r2, #7
    da7e:	942a      	str	r4, [sp, #168]	; 0xa8
    da80:	9229      	str	r2, [sp, #164]	; 0xa4
    da82:	f8c8 1000 	str.w	r1, [r8]
    da86:	f300 8369 	bgt.w	e15c <_svfprintf_r+0xa24>
    da8a:	f108 0808 	add.w	r8, r8, #8
    da8e:	b17b      	cbz	r3, dab0 <_svfprintf_r+0x378>
    da90:	2302      	movs	r3, #2
    da92:	f8c8 3004 	str.w	r3, [r8, #4]
    da96:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    da98:	3402      	adds	r4, #2
    da9a:	3301      	adds	r3, #1
    da9c:	aa21      	add	r2, sp, #132	; 0x84
    da9e:	2b07      	cmp	r3, #7
    daa0:	942a      	str	r4, [sp, #168]	; 0xa8
    daa2:	9329      	str	r3, [sp, #164]	; 0xa4
    daa4:	f8c8 2000 	str.w	r2, [r8]
    daa8:	f300 836c 	bgt.w	e184 <_svfprintf_r+0xa4c>
    daac:	f108 0808 	add.w	r8, r8, #8
    dab0:	f1bb 0f80 	cmp.w	fp, #128	; 0x80
    dab4:	f000 822e 	beq.w	df14 <_svfprintf_r+0x7dc>
    dab8:	9b07      	ldr	r3, [sp, #28]
    daba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    dabc:	eba3 0b02 	sub.w	fp, r3, r2
    dac0:	f1bb 0f00 	cmp.w	fp, #0
    dac4:	f300 8271 	bgt.w	dfaa <_svfprintf_r+0x872>
    dac8:	05fb      	lsls	r3, r7, #23
    daca:	f100 81c5 	bmi.w	de58 <_svfprintf_r+0x720>
    dace:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    dad0:	f8c8 5000 	str.w	r5, [r8]
    dad4:	441c      	add	r4, r3
    dad6:	f8c8 3004 	str.w	r3, [r8, #4]
    dada:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    dadc:	942a      	str	r4, [sp, #168]	; 0xa8
    dade:	3301      	adds	r3, #1
    dae0:	2b07      	cmp	r3, #7
    dae2:	9329      	str	r3, [sp, #164]	; 0xa4
    dae4:	f300 82ea 	bgt.w	e0bc <_svfprintf_r+0x984>
    dae8:	f108 0808 	add.w	r8, r8, #8
    daec:	077b      	lsls	r3, r7, #29
    daee:	d505      	bpl.n	dafc <_svfprintf_r+0x3c4>
    daf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    daf2:	9a06      	ldr	r2, [sp, #24]
    daf4:	1a9d      	subs	r5, r3, r2
    daf6:	2d00      	cmp	r5, #0
    daf8:	f300 8350 	bgt.w	e19c <_svfprintf_r+0xa64>
    dafc:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
    db00:	9906      	ldr	r1, [sp, #24]
    db02:	428a      	cmp	r2, r1
    db04:	bfac      	ite	ge
    db06:	189b      	addge	r3, r3, r2
    db08:	185b      	addlt	r3, r3, r1
    db0a:	9308      	str	r3, [sp, #32]
    db0c:	2c00      	cmp	r4, #0
    db0e:	f47f af6e 	bne.w	d9ee <_svfprintf_r+0x2b6>
    db12:	2300      	movs	r3, #0
    db14:	9329      	str	r3, [sp, #164]	; 0xa4
    db16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    db18:	b11b      	cbz	r3, db22 <_svfprintf_r+0x3ea>
    db1a:	990d      	ldr	r1, [sp, #52]	; 0x34
    db1c:	980a      	ldr	r0, [sp, #40]	; 0x28
    db1e:	f005 fda1 	bl	13664 <_free_r>
    db22:	4655      	mov	r5, sl
    db24:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    db28:	782b      	ldrb	r3, [r5, #0]
    db2a:	2b00      	cmp	r3, #0
    db2c:	f47f ae32 	bne.w	d794 <_svfprintf_r+0x5c>
    db30:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
    db32:	2b00      	cmp	r3, #0
    db34:	f43f af69 	beq.w	da0a <_svfprintf_r+0x2d2>
    db38:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    db3a:	980a      	ldr	r0, [sp, #40]	; 0x28
    db3c:	4621      	mov	r1, r4
    db3e:	aa28      	add	r2, sp, #160	; 0xa0
    db40:	f006 fe38 	bl	147b4 <__ssprint_r>
    db44:	89a3      	ldrh	r3, [r4, #12]
    db46:	e762      	b.n	da0e <_svfprintf_r+0x2d6>
    db48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    db4a:	3307      	adds	r3, #7
    db4c:	f023 0207 	bic.w	r2, r3, #7
    db50:	e8f2 3402 	ldrd	r3, r4, [r2], #8
    db54:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
    db58:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
    db5c:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
    db60:	4699      	mov	r9, r3
    db62:	4618      	mov	r0, r3
    db64:	920e      	str	r2, [sp, #56]	; 0x38
    db66:	4621      	mov	r1, r4
    db68:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    db6c:	4bb6      	ldr	r3, [pc, #728]	; (de48 <_svfprintf_r+0x710>)
    db6e:	f7fc fd83 	bl	a678 <__aeabi_dcmpun>
    db72:	2800      	cmp	r0, #0
    db74:	f040 8496 	bne.w	e4a4 <_svfprintf_r+0xd6c>
    db78:	4648      	mov	r0, r9
    db7a:	4621      	mov	r1, r4
    db7c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    db80:	4bb1      	ldr	r3, [pc, #708]	; (de48 <_svfprintf_r+0x710>)
    db82:	f008 fb53 	bl	1622c <__aeabi_dcmple>
    db86:	2800      	cmp	r0, #0
    db88:	f040 848c 	bne.w	e4a4 <_svfprintf_r+0xd6c>
    db8c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
    db90:	2200      	movs	r2, #0
    db92:	2300      	movs	r3, #0
    db94:	f008 fb40 	bl	16218 <__aeabi_dcmplt>
    db98:	2800      	cmp	r0, #0
    db9a:	f040 87a6 	bne.w	eaea <_svfprintf_r+0x13b2>
    db9e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    dba2:	2100      	movs	r1, #0
    dba4:	2003      	movs	r0, #3
    dba6:	4da9      	ldr	r5, [pc, #676]	; (de4c <_svfprintf_r+0x714>)
    dba8:	4ba9      	ldr	r3, [pc, #676]	; (de50 <_svfprintf_r+0x718>)
    dbaa:	f027 0780 	bic.w	r7, r7, #128	; 0x80
    dbae:	910d      	str	r1, [sp, #52]	; 0x34
    dbb0:	9006      	str	r0, [sp, #24]
    dbb2:	2e47      	cmp	r6, #71	; 0x47
    dbb4:	bfc8      	it	gt
    dbb6:	461d      	movgt	r5, r3
    dbb8:	9107      	str	r1, [sp, #28]
    dbba:	900b      	str	r0, [sp, #44]	; 0x2c
    dbbc:	910f      	str	r1, [sp, #60]	; 0x3c
    dbbe:	9113      	str	r1, [sp, #76]	; 0x4c
    dbc0:	9110      	str	r1, [sp, #64]	; 0x40
    dbc2:	e6c1      	b.n	d948 <_svfprintf_r+0x210>
    dbc4:	f017 0310 	ands.w	r3, r7, #16
    dbc8:	f040 8462 	bne.w	e490 <_svfprintf_r+0xd58>
    dbcc:	f017 0240 	ands.w	r2, r7, #64	; 0x40
    dbd0:	f000 877b 	beq.w	eaca <_svfprintf_r+0x1392>
    dbd4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    dbd6:	4699      	mov	r9, r3
    dbd8:	f852 4b04 	ldr.w	r4, [r2], #4
    dbdc:	920e      	str	r2, [sp, #56]	; 0x38
    dbde:	b2a4      	uxth	r4, r4
    dbe0:	e6c7      	b.n	d972 <_svfprintf_r+0x23a>
    dbe2:	f853 4b04 	ldr.w	r4, [r3], #4
    dbe6:	930e      	str	r3, [sp, #56]	; 0x38
    dbe8:	06fb      	lsls	r3, r7, #27
    dbea:	f100 8441 	bmi.w	e470 <_svfprintf_r+0xd38>
    dbee:	067d      	lsls	r5, r7, #25
    dbf0:	f140 843b 	bpl.w	e46a <_svfprintf_r+0xd32>
    dbf4:	f344 39c0 	sbfx	r9, r4, #15, #1
    dbf8:	464b      	mov	r3, r9
    dbfa:	b224      	sxth	r4, r4
    dbfc:	e67d      	b.n	d8fa <_svfprintf_r+0x1c2>
    dbfe:	2001      	movs	r0, #1
    dc00:	2200      	movs	r2, #0
    dc02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    dc04:	9006      	str	r0, [sp, #24]
    dc06:	f853 1b04 	ldr.w	r1, [r3], #4
    dc0a:	ad3b      	add	r5, sp, #236	; 0xec
    dc0c:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    dc10:	f88d 10ec 	strb.w	r1, [sp, #236]	; 0xec
    dc14:	930e      	str	r3, [sp, #56]	; 0x38
    dc16:	900b      	str	r0, [sp, #44]	; 0x2c
    dc18:	e710      	b.n	da3c <_svfprintf_r+0x304>
    dc1a:	f04f 0900 	mov.w	r9, #0
    dc1e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    dc20:	9b07      	ldr	r3, [sp, #28]
    dc22:	f854 5b04 	ldr.w	r5, [r4], #4
    dc26:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
    dc2a:	2d00      	cmp	r5, #0
    dc2c:	f000 86ee 	beq.w	ea0c <_svfprintf_r+0x12d4>
    dc30:	1c5a      	adds	r2, r3, #1
    dc32:	f000 8560 	beq.w	e6f6 <_svfprintf_r+0xfbe>
    dc36:	461a      	mov	r2, r3
    dc38:	4649      	mov	r1, r9
    dc3a:	4628      	mov	r0, r5
    dc3c:	f7fe fdce 	bl	c7dc <memchr>
    dc40:	900d      	str	r0, [sp, #52]	; 0x34
    dc42:	2800      	cmp	r0, #0
    dc44:	f001 809e 	beq.w	ed84 <_svfprintf_r+0x164c>
    dc48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    dc4a:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    dc4e:	1b5b      	subs	r3, r3, r5
    dc50:	930b      	str	r3, [sp, #44]	; 0x2c
    dc52:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    dc56:	f8cd 901c 	str.w	r9, [sp, #28]
    dc5a:	940e      	str	r4, [sp, #56]	; 0x38
    dc5c:	9306      	str	r3, [sp, #24]
    dc5e:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
    dc62:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
    dc66:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
    dc6a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
    dc6e:	e66b      	b.n	d948 <_svfprintf_r+0x210>
    dc70:	9b09      	ldr	r3, [sp, #36]	; 0x24
    dc72:	425b      	negs	r3, r3
    dc74:	9309      	str	r3, [sp, #36]	; 0x24
    dc76:	f89a 6000 	ldrb.w	r6, [sl]
    dc7a:	f047 0704 	orr.w	r7, r7, #4
    dc7e:	e5aa      	b.n	d7d6 <_svfprintf_r+0x9e>
    dc80:	f047 0b10 	orr.w	fp, r7, #16
    dc84:	f01b 0920 	ands.w	r9, fp, #32
    dc88:	f000 83aa 	beq.w	e3e0 <_svfprintf_r+0xca8>
    dc8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    dc8e:	3307      	adds	r3, #7
    dc90:	f023 0307 	bic.w	r3, r3, #7
    dc94:	461a      	mov	r2, r3
    dc96:	f852 4b08 	ldr.w	r4, [r2], #8
    dc9a:	f8d3 9004 	ldr.w	r9, [r3, #4]
    dc9e:	920e      	str	r2, [sp, #56]	; 0x38
    dca0:	2301      	movs	r3, #1
    dca2:	e669      	b.n	d978 <_svfprintf_r+0x240>
    dca4:	2230      	movs	r2, #48	; 0x30
    dca6:	2678      	movs	r6, #120	; 0x78
    dca8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    dcaa:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
    dcae:	f853 4b04 	ldr.w	r4, [r3], #4
    dcb2:	4a68      	ldr	r2, [pc, #416]	; (de54 <_svfprintf_r+0x71c>)
    dcb4:	930e      	str	r3, [sp, #56]	; 0x38
    dcb6:	f04f 0900 	mov.w	r9, #0
    dcba:	2302      	movs	r3, #2
    dcbc:	f047 0b02 	orr.w	fp, r7, #2
    dcc0:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
    dcc4:	9218      	str	r2, [sp, #96]	; 0x60
    dcc6:	e657      	b.n	d978 <_svfprintf_r+0x240>
    dcc8:	06bd      	lsls	r5, r7, #26
    dcca:	f100 83d6 	bmi.w	e47a <_svfprintf_r+0xd42>
    dcce:	06fc      	lsls	r4, r7, #27
    dcd0:	f100 8693 	bmi.w	e9fa <_svfprintf_r+0x12c2>
    dcd4:	0678      	lsls	r0, r7, #25
    dcd6:	f100 875d 	bmi.w	eb94 <_svfprintf_r+0x145c>
    dcda:	05b9      	lsls	r1, r7, #22
    dcdc:	f140 868d 	bpl.w	e9fa <_svfprintf_r+0x12c2>
    dce0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    dce2:	9908      	ldr	r1, [sp, #32]
    dce4:	f853 2b04 	ldr.w	r2, [r3], #4
    dce8:	4655      	mov	r5, sl
    dcea:	7011      	strb	r1, [r2, #0]
    dcec:	930e      	str	r3, [sp, #56]	; 0x38
    dcee:	e71b      	b.n	db28 <_svfprintf_r+0x3f0>
    dcf0:	f89a 6000 	ldrb.w	r6, [sl]
    dcf4:	2e6c      	cmp	r6, #108	; 0x6c
    dcf6:	bf03      	ittte	eq
    dcf8:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
    dcfc:	f047 0720 	orreq.w	r7, r7, #32
    dd00:	f10a 0a01 	addeq.w	sl, sl, #1
    dd04:	f047 0710 	orrne.w	r7, r7, #16
    dd08:	e565      	b.n	d7d6 <_svfprintf_r+0x9e>
    dd0a:	f89a 6000 	ldrb.w	r6, [sl]
    dd0e:	2e68      	cmp	r6, #104	; 0x68
    dd10:	bf03      	ittte	eq
    dd12:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
    dd16:	f447 7700 	orreq.w	r7, r7, #512	; 0x200
    dd1a:	f10a 0a01 	addeq.w	sl, sl, #1
    dd1e:	f047 0740 	orrne.w	r7, r7, #64	; 0x40
    dd22:	e558      	b.n	d7d6 <_svfprintf_r+0x9e>
    dd24:	f89a 6000 	ldrb.w	r6, [sl]
    dd28:	f047 0708 	orr.w	r7, r7, #8
    dd2c:	e553      	b.n	d7d6 <_svfprintf_r+0x9e>
    dd2e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    dd30:	4630      	mov	r0, r6
    dd32:	f005 fe23 	bl	1397c <_localeconv_r>
    dd36:	6843      	ldr	r3, [r0, #4]
    dd38:	4618      	mov	r0, r3
    dd3a:	931b      	str	r3, [sp, #108]	; 0x6c
    dd3c:	f7ff fc90 	bl	d660 <strlen>
    dd40:	4603      	mov	r3, r0
    dd42:	4630      	mov	r0, r6
    dd44:	931c      	str	r3, [sp, #112]	; 0x70
    dd46:	461e      	mov	r6, r3
    dd48:	f005 fe18 	bl	1397c <_localeconv_r>
    dd4c:	6883      	ldr	r3, [r0, #8]
    dd4e:	9319      	str	r3, [sp, #100]	; 0x64
    dd50:	2e00      	cmp	r6, #0
    dd52:	f43f adbb 	beq.w	d8cc <_svfprintf_r+0x194>
    dd56:	9b19      	ldr	r3, [sp, #100]	; 0x64
    dd58:	2b00      	cmp	r3, #0
    dd5a:	f43f adb7 	beq.w	d8cc <_svfprintf_r+0x194>
    dd5e:	9b19      	ldr	r3, [sp, #100]	; 0x64
    dd60:	781b      	ldrb	r3, [r3, #0]
    dd62:	2b00      	cmp	r3, #0
    dd64:	f43f adb2 	beq.w	d8cc <_svfprintf_r+0x194>
    dd68:	f89a 6000 	ldrb.w	r6, [sl]
    dd6c:	f447 6780 	orr.w	r7, r7, #1024	; 0x400
    dd70:	e531      	b.n	d7d6 <_svfprintf_r+0x9e>
    dd72:	f89a 6000 	ldrb.w	r6, [sl]
    dd76:	f047 0701 	orr.w	r7, r7, #1
    dd7a:	e52c      	b.n	d7d6 <_svfprintf_r+0x9e>
    dd7c:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
    dd80:	2b00      	cmp	r3, #0
    dd82:	f47f ada3 	bne.w	d8cc <_svfprintf_r+0x194>
    dd86:	f89a 6000 	ldrb.w	r6, [sl]
    dd8a:	f88d 4083 	strb.w	r4, [sp, #131]	; 0x83
    dd8e:	e522      	b.n	d7d6 <_svfprintf_r+0x9e>
    dd90:	f89a 6000 	ldrb.w	r6, [sl]
    dd94:	f047 0780 	orr.w	r7, r7, #128	; 0x80
    dd98:	e51d      	b.n	d7d6 <_svfprintf_r+0x9e>
    dd9a:	4652      	mov	r2, sl
    dd9c:	f812 6b01 	ldrb.w	r6, [r2], #1
    dda0:	2e2a      	cmp	r6, #42	; 0x2a
    dda2:	f001 81eb 	beq.w	f17c <_svfprintf_r+0x1a44>
    dda6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    ddaa:	2b09      	cmp	r3, #9
    ddac:	4692      	mov	sl, r2
    ddae:	bf98      	it	ls
    ddb0:	2200      	movls	r2, #0
    ddb2:	f201 8003 	bhi.w	edbc <_svfprintf_r+0x1684>
    ddb6:	f81a 6b01 	ldrb.w	r6, [sl], #1
    ddba:	eb02 0282 	add.w	r2, r2, r2, lsl #2
    ddbe:	eb03 0242 	add.w	r2, r3, r2, lsl #1
    ddc2:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    ddc6:	2b09      	cmp	r3, #9
    ddc8:	d9f5      	bls.n	ddb6 <_svfprintf_r+0x67e>
    ddca:	9207      	str	r2, [sp, #28]
    ddcc:	e505      	b.n	d7da <_svfprintf_r+0xa2>
    ddce:	f89a 6000 	ldrb.w	r6, [sl]
    ddd2:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
    ddd6:	e4fe      	b.n	d7d6 <_svfprintf_r+0x9e>
    ddd8:	46bb      	mov	fp, r7
    ddda:	2b01      	cmp	r3, #1
    dddc:	f43f ad9a 	beq.w	d914 <_svfprintf_r+0x1dc>
    dde0:	2b02      	cmp	r3, #2
    dde2:	ad54      	add	r5, sp, #336	; 0x150
    dde4:	d112      	bne.n	de0c <_svfprintf_r+0x6d4>
    dde6:	9a18      	ldr	r2, [sp, #96]	; 0x60
    dde8:	f004 030f 	and.w	r3, r4, #15
    ddec:	5cd3      	ldrb	r3, [r2, r3]
    ddee:	0924      	lsrs	r4, r4, #4
    ddf0:	ea44 7409 	orr.w	r4, r4, r9, lsl #28
    ddf4:	ea4f 1919 	mov.w	r9, r9, lsr #4
    ddf8:	f805 3d01 	strb.w	r3, [r5, #-1]!
    ddfc:	ea54 0309 	orrs.w	r3, r4, r9
    de00:	d1f2      	bne.n	dde8 <_svfprintf_r+0x6b0>
    de02:	ab54      	add	r3, sp, #336	; 0x150
    de04:	1b5b      	subs	r3, r3, r5
    de06:	465f      	mov	r7, fp
    de08:	930b      	str	r3, [sp, #44]	; 0x2c
    de0a:	e590      	b.n	d92e <_svfprintf_r+0x1f6>
    de0c:	f004 0307 	and.w	r3, r4, #7
    de10:	08e4      	lsrs	r4, r4, #3
    de12:	ea44 7449 	orr.w	r4, r4, r9, lsl #29
    de16:	ea4f 09d9 	mov.w	r9, r9, lsr #3
    de1a:	3330      	adds	r3, #48	; 0x30
    de1c:	ea54 0109 	orrs.w	r1, r4, r9
    de20:	462a      	mov	r2, r5
    de22:	f805 3d01 	strb.w	r3, [r5, #-1]!
    de26:	d1f1      	bne.n	de0c <_svfprintf_r+0x6d4>
    de28:	f01b 0f01 	tst.w	fp, #1
    de2c:	d0e9      	beq.n	de02 <_svfprintf_r+0x6ca>
    de2e:	2b30      	cmp	r3, #48	; 0x30
    de30:	d0e7      	beq.n	de02 <_svfprintf_r+0x6ca>
    de32:	2330      	movs	r3, #48	; 0x30
    de34:	3a02      	subs	r2, #2
    de36:	f805 3c01 	strb.w	r3, [r5, #-1]
    de3a:	ab54      	add	r3, sp, #336	; 0x150
    de3c:	1a9b      	subs	r3, r3, r2
    de3e:	465f      	mov	r7, fp
    de40:	4615      	mov	r5, r2
    de42:	930b      	str	r3, [sp, #44]	; 0x2c
    de44:	e573      	b.n	d92e <_svfprintf_r+0x1f6>
    de46:	bf00      	nop
    de48:	7fefffff 	.word	0x7fefffff
    de4c:	0001a1c0 	.word	0x0001a1c0
    de50:	0001a1c4 	.word	0x0001a1c4
    de54:	0001a1d0 	.word	0x0001a1d0
    de58:	2e65      	cmp	r6, #101	; 0x65
    de5a:	f340 80e9 	ble.w	e030 <_svfprintf_r+0x8f8>
    de5e:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
    de62:	2200      	movs	r2, #0
    de64:	2300      	movs	r3, #0
    de66:	f008 f9cd 	bl	16204 <__aeabi_dcmpeq>
    de6a:	2800      	cmp	r0, #0
    de6c:	f000 81d2 	beq.w	e214 <_svfprintf_r+0xadc>
    de70:	2301      	movs	r3, #1
    de72:	f8c8 3004 	str.w	r3, [r8, #4]
    de76:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    de78:	4abf      	ldr	r2, [pc, #764]	; (e178 <_svfprintf_r+0xa40>)
    de7a:	3301      	adds	r3, #1
    de7c:	3401      	adds	r4, #1
    de7e:	2b07      	cmp	r3, #7
    de80:	942a      	str	r4, [sp, #168]	; 0xa8
    de82:	9329      	str	r3, [sp, #164]	; 0xa4
    de84:	f8c8 2000 	str.w	r2, [r8]
    de88:	f300 857a 	bgt.w	e980 <_svfprintf_r+0x1248>
    de8c:	f108 0808 	add.w	r8, r8, #8
    de90:	9b22      	ldr	r3, [sp, #136]	; 0x88
    de92:	9a12      	ldr	r2, [sp, #72]	; 0x48
    de94:	4293      	cmp	r3, r2
    de96:	f280 82d7 	bge.w	e448 <_svfprintf_r+0xd10>
    de9a:	9b16      	ldr	r3, [sp, #88]	; 0x58
    de9c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    de9e:	441c      	add	r4, r3
    dea0:	e9c8 2300 	strd	r2, r3, [r8]
    dea4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    dea6:	942a      	str	r4, [sp, #168]	; 0xa8
    dea8:	3301      	adds	r3, #1
    deaa:	2b07      	cmp	r3, #7
    deac:	9329      	str	r3, [sp, #164]	; 0xa4
    deae:	f300 83dd 	bgt.w	e66c <_svfprintf_r+0xf34>
    deb2:	f108 0808 	add.w	r8, r8, #8
    deb6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    deb8:	1e5d      	subs	r5, r3, #1
    deba:	2d00      	cmp	r5, #0
    debc:	f77f ae16 	ble.w	daec <_svfprintf_r+0x3b4>
    dec0:	2d10      	cmp	r5, #16
    dec2:	f341 8141 	ble.w	f148 <_svfprintf_r+0x1a10>
    dec6:	f8df 92b4 	ldr.w	r9, [pc, #692]	; e17c <_svfprintf_r+0xa44>
    deca:	4622      	mov	r2, r4
    decc:	4649      	mov	r1, r9
    dece:	2610      	movs	r6, #16
    ded0:	46b9      	mov	r9, r7
    ded2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    ded4:	460f      	mov	r7, r1
    ded6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
    deda:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    dedc:	e005      	b.n	deea <_svfprintf_r+0x7b2>
    dede:	f108 0808 	add.w	r8, r8, #8
    dee2:	3d10      	subs	r5, #16
    dee4:	2d10      	cmp	r5, #16
    dee6:	f340 8558 	ble.w	e99a <_svfprintf_r+0x1262>
    deea:	3301      	adds	r3, #1
    deec:	3210      	adds	r2, #16
    deee:	2b07      	cmp	r3, #7
    def0:	e9c8 7600 	strd	r7, r6, [r8]
    def4:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
    def8:	ddf1      	ble.n	dede <_svfprintf_r+0x7a6>
    defa:	4621      	mov	r1, r4
    defc:	4658      	mov	r0, fp
    defe:	aa28      	add	r2, sp, #160	; 0xa0
    df00:	f006 fc58 	bl	147b4 <__ssprint_r>
    df04:	2800      	cmp	r0, #0
    df06:	f47f ad7a 	bne.w	d9fe <_svfprintf_r+0x2c6>
    df0a:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    df0e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    df12:	e7e6      	b.n	dee2 <_svfprintf_r+0x7aa>
    df14:	9b09      	ldr	r3, [sp, #36]	; 0x24
    df16:	9a06      	ldr	r2, [sp, #24]
    df18:	eba3 0b02 	sub.w	fp, r3, r2
    df1c:	f1bb 0f00 	cmp.w	fp, #0
    df20:	f77f adca 	ble.w	dab8 <_svfprintf_r+0x380>
    df24:	f1bb 0f10 	cmp.w	fp, #16
    df28:	f341 8005 	ble.w	ef36 <_svfprintf_r+0x17fe>
    df2c:	f8df 924c 	ldr.w	r9, [pc, #588]	; e17c <_svfprintf_r+0xa44>
    df30:	4641      	mov	r1, r8
    df32:	4620      	mov	r0, r4
    df34:	46a8      	mov	r8, r5
    df36:	464c      	mov	r4, r9
    df38:	2310      	movs	r3, #16
    df3a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    df3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    df3e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    df42:	e006      	b.n	df52 <_svfprintf_r+0x81a>
    df44:	f1ab 0b10 	sub.w	fp, fp, #16
    df48:	f1bb 0f10 	cmp.w	fp, #16
    df4c:	f101 0108 	add.w	r1, r1, #8
    df50:	dd19      	ble.n	df86 <_svfprintf_r+0x84e>
    df52:	3201      	adds	r2, #1
    df54:	3010      	adds	r0, #16
    df56:	2a07      	cmp	r2, #7
    df58:	e9c1 4300 	strd	r4, r3, [r1]
    df5c:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
    df60:	ddf0      	ble.n	df44 <_svfprintf_r+0x80c>
    df62:	4629      	mov	r1, r5
    df64:	4648      	mov	r0, r9
    df66:	aa28      	add	r2, sp, #160	; 0xa0
    df68:	f006 fc24 	bl	147b4 <__ssprint_r>
    df6c:	2800      	cmp	r0, #0
    df6e:	f47f ad46 	bne.w	d9fe <_svfprintf_r+0x2c6>
    df72:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
    df76:	f1ab 0b10 	sub.w	fp, fp, #16
    df7a:	f1bb 0f10 	cmp.w	fp, #16
    df7e:	f04f 0310 	mov.w	r3, #16
    df82:	a92b      	add	r1, sp, #172	; 0xac
    df84:	dce5      	bgt.n	df52 <_svfprintf_r+0x81a>
    df86:	4645      	mov	r5, r8
    df88:	46a1      	mov	r9, r4
    df8a:	4688      	mov	r8, r1
    df8c:	4604      	mov	r4, r0
    df8e:	3201      	adds	r2, #1
    df90:	445c      	add	r4, fp
    df92:	2a07      	cmp	r2, #7
    df94:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
    df98:	f8c8 9000 	str.w	r9, [r8]
    df9c:	f8c8 b004 	str.w	fp, [r8, #4]
    dfa0:	f300 8518 	bgt.w	e9d4 <_svfprintf_r+0x129c>
    dfa4:	f108 0808 	add.w	r8, r8, #8
    dfa8:	e586      	b.n	dab8 <_svfprintf_r+0x380>
    dfaa:	f1bb 0f10 	cmp.w	fp, #16
    dfae:	f340 8597 	ble.w	eae0 <_svfprintf_r+0x13a8>
    dfb2:	f8df 91c8 	ldr.w	r9, [pc, #456]	; e17c <_svfprintf_r+0xa44>
    dfb6:	4641      	mov	r1, r8
    dfb8:	4620      	mov	r0, r4
    dfba:	46a8      	mov	r8, r5
    dfbc:	464c      	mov	r4, r9
    dfbe:	2310      	movs	r3, #16
    dfc0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    dfc2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    dfc4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    dfc8:	e006      	b.n	dfd8 <_svfprintf_r+0x8a0>
    dfca:	f1ab 0b10 	sub.w	fp, fp, #16
    dfce:	f1bb 0f10 	cmp.w	fp, #16
    dfd2:	f101 0108 	add.w	r1, r1, #8
    dfd6:	dd19      	ble.n	e00c <_svfprintf_r+0x8d4>
    dfd8:	3201      	adds	r2, #1
    dfda:	3010      	adds	r0, #16
    dfdc:	2a07      	cmp	r2, #7
    dfde:	e9c1 4300 	strd	r4, r3, [r1]
    dfe2:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
    dfe6:	ddf0      	ble.n	dfca <_svfprintf_r+0x892>
    dfe8:	4629      	mov	r1, r5
    dfea:	4648      	mov	r0, r9
    dfec:	aa28      	add	r2, sp, #160	; 0xa0
    dfee:	f006 fbe1 	bl	147b4 <__ssprint_r>
    dff2:	2800      	cmp	r0, #0
    dff4:	f47f ad03 	bne.w	d9fe <_svfprintf_r+0x2c6>
    dff8:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
    dffc:	f1ab 0b10 	sub.w	fp, fp, #16
    e000:	f1bb 0f10 	cmp.w	fp, #16
    e004:	f04f 0310 	mov.w	r3, #16
    e008:	a92b      	add	r1, sp, #172	; 0xac
    e00a:	dce5      	bgt.n	dfd8 <_svfprintf_r+0x8a0>
    e00c:	4645      	mov	r5, r8
    e00e:	46a1      	mov	r9, r4
    e010:	4688      	mov	r8, r1
    e012:	4604      	mov	r4, r0
    e014:	3201      	adds	r2, #1
    e016:	445c      	add	r4, fp
    e018:	2a07      	cmp	r2, #7
    e01a:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
    e01e:	f8c8 9000 	str.w	r9, [r8]
    e022:	f8c8 b004 	str.w	fp, [r8, #4]
    e026:	f300 81ce 	bgt.w	e3c6 <_svfprintf_r+0xc8e>
    e02a:	f108 0808 	add.w	r8, r8, #8
    e02e:	e54b      	b.n	dac8 <_svfprintf_r+0x390>
    e030:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e032:	2b01      	cmp	r3, #1
    e034:	f340 817e 	ble.w	e334 <_svfprintf_r+0xbfc>
    e038:	2301      	movs	r3, #1
    e03a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
    e03c:	3401      	adds	r4, #1
    e03e:	441e      	add	r6, r3
    e040:	2e07      	cmp	r6, #7
    e042:	f8c8 5000 	str.w	r5, [r8]
    e046:	942a      	str	r4, [sp, #168]	; 0xa8
    e048:	f8c8 3004 	str.w	r3, [r8, #4]
    e04c:	9629      	str	r6, [sp, #164]	; 0xa4
    e04e:	f300 81e1 	bgt.w	e414 <_svfprintf_r+0xcdc>
    e052:	f108 0808 	add.w	r8, r8, #8
    e056:	9b16      	ldr	r3, [sp, #88]	; 0x58
    e058:	3601      	adds	r6, #1
    e05a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    e05c:	441c      	add	r4, r3
    e05e:	2e07      	cmp	r6, #7
    e060:	e9c8 2300 	strd	r2, r3, [r8]
    e064:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
    e068:	f300 81e1 	bgt.w	e42e <_svfprintf_r+0xcf6>
    e06c:	f108 0808 	add.w	r8, r8, #8
    e070:	2200      	movs	r2, #0
    e072:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
    e076:	2300      	movs	r3, #0
    e078:	f008 f8c4 	bl	16204 <__aeabi_dcmpeq>
    e07c:	2800      	cmp	r0, #0
    e07e:	f040 8176 	bne.w	e36e <_svfprintf_r+0xc36>
    e082:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e084:	3601      	adds	r6, #1
    e086:	3b01      	subs	r3, #1
    e088:	3501      	adds	r5, #1
    e08a:	441c      	add	r4, r3
    e08c:	2e07      	cmp	r6, #7
    e08e:	f8c8 5000 	str.w	r5, [r8]
    e092:	9629      	str	r6, [sp, #164]	; 0xa4
    e094:	f8c8 3004 	str.w	r3, [r8, #4]
    e098:	942a      	str	r4, [sp, #168]	; 0xa8
    e09a:	f300 815b 	bgt.w	e354 <_svfprintf_r+0xc1c>
    e09e:	f108 0808 	add.w	r8, r8, #8
    e0a2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    e0a4:	3601      	adds	r6, #1
    e0a6:	441c      	add	r4, r3
    e0a8:	f8c8 3004 	str.w	r3, [r8, #4]
    e0ac:	2e07      	cmp	r6, #7
    e0ae:	ab24      	add	r3, sp, #144	; 0x90
    e0b0:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
    e0b4:	f8c8 3000 	str.w	r3, [r8]
    e0b8:	f77f ad16 	ble.w	dae8 <_svfprintf_r+0x3b0>
    e0bc:	990c      	ldr	r1, [sp, #48]	; 0x30
    e0be:	980a      	ldr	r0, [sp, #40]	; 0x28
    e0c0:	aa28      	add	r2, sp, #160	; 0xa0
    e0c2:	f006 fb77 	bl	147b4 <__ssprint_r>
    e0c6:	2800      	cmp	r0, #0
    e0c8:	f47f ac99 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e0cc:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e0ce:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e0d2:	e50b      	b.n	daec <_svfprintf_r+0x3b4>
    e0d4:	f1b9 0f10 	cmp.w	r9, #16
    e0d8:	f340 8650 	ble.w	ed7c <_svfprintf_r+0x1644>
    e0dc:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
    e0e0:	4640      	mov	r0, r8
    e0e2:	e9cd 361d 	strd	r3, r6, [sp, #116]	; 0x74
    e0e6:	46b8      	mov	r8, r7
    e0e8:	2410      	movs	r4, #16
    e0ea:	464f      	mov	r7, r9
    e0ec:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    e0ee:	46a9      	mov	r9, r5
    e0f0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    e0f2:	e004      	b.n	e0fe <_svfprintf_r+0x9c6>
    e0f4:	3f10      	subs	r7, #16
    e0f6:	2f10      	cmp	r7, #16
    e0f8:	f100 0008 	add.w	r0, r0, #8
    e0fc:	dd16      	ble.n	e12c <_svfprintf_r+0x9f4>
    e0fe:	3201      	adds	r2, #1
    e100:	4b1f      	ldr	r3, [pc, #124]	; (e180 <_svfprintf_r+0xa48>)
    e102:	3110      	adds	r1, #16
    e104:	2a07      	cmp	r2, #7
    e106:	e9c0 3400 	strd	r3, r4, [r0]
    e10a:	e9cd 2129 	strd	r2, r1, [sp, #164]	; 0xa4
    e10e:	ddf1      	ble.n	e0f4 <_svfprintf_r+0x9bc>
    e110:	4631      	mov	r1, r6
    e112:	4628      	mov	r0, r5
    e114:	aa28      	add	r2, sp, #160	; 0xa0
    e116:	f006 fb4d 	bl	147b4 <__ssprint_r>
    e11a:	2800      	cmp	r0, #0
    e11c:	f47f ac6f 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e120:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
    e124:	3f10      	subs	r7, #16
    e126:	2f10      	cmp	r7, #16
    e128:	a82b      	add	r0, sp, #172	; 0xac
    e12a:	dce8      	bgt.n	e0fe <_svfprintf_r+0x9c6>
    e12c:	464d      	mov	r5, r9
    e12e:	e9dd 361d 	ldrd	r3, r6, [sp, #116]	; 0x74
    e132:	46b9      	mov	r9, r7
    e134:	4647      	mov	r7, r8
    e136:	4680      	mov	r8, r0
    e138:	eb09 0401 	add.w	r4, r9, r1
    e13c:	3201      	adds	r2, #1
    e13e:	4910      	ldr	r1, [pc, #64]	; (e180 <_svfprintf_r+0xa48>)
    e140:	2a07      	cmp	r2, #7
    e142:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
    e146:	f8c8 9004 	str.w	r9, [r8, #4]
    e14a:	f8c8 1000 	str.w	r1, [r8]
    e14e:	f300 83c3 	bgt.w	e8d8 <_svfprintf_r+0x11a0>
    e152:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    e156:	f108 0808 	add.w	r8, r8, #8
    e15a:	e486      	b.n	da6a <_svfprintf_r+0x332>
    e15c:	990c      	ldr	r1, [sp, #48]	; 0x30
    e15e:	980a      	ldr	r0, [sp, #40]	; 0x28
    e160:	aa28      	add	r2, sp, #160	; 0xa0
    e162:	931d      	str	r3, [sp, #116]	; 0x74
    e164:	f006 fb26 	bl	147b4 <__ssprint_r>
    e168:	2800      	cmp	r0, #0
    e16a:	f47f ac48 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e16e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e170:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    e172:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e176:	e48a      	b.n	da8e <_svfprintf_r+0x356>
    e178:	0001a200 	.word	0x0001a200
    e17c:	0001a214 	.word	0x0001a214
    e180:	0001a204 	.word	0x0001a204
    e184:	990c      	ldr	r1, [sp, #48]	; 0x30
    e186:	980a      	ldr	r0, [sp, #40]	; 0x28
    e188:	aa28      	add	r2, sp, #160	; 0xa0
    e18a:	f006 fb13 	bl	147b4 <__ssprint_r>
    e18e:	2800      	cmp	r0, #0
    e190:	f47f ac35 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e194:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e196:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e19a:	e489      	b.n	dab0 <_svfprintf_r+0x378>
    e19c:	2d10      	cmp	r5, #16
    e19e:	f340 86c4 	ble.w	ef2a <_svfprintf_r+0x17f2>
    e1a2:	2610      	movs	r6, #16
    e1a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e1a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
    e1a8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
    e1ac:	e004      	b.n	e1b8 <_svfprintf_r+0xa80>
    e1ae:	3d10      	subs	r5, #16
    e1b0:	2d10      	cmp	r5, #16
    e1b2:	f108 0808 	add.w	r8, r8, #8
    e1b6:	dd17      	ble.n	e1e8 <_svfprintf_r+0xab0>
    e1b8:	3301      	adds	r3, #1
    e1ba:	4ab8      	ldr	r2, [pc, #736]	; (e49c <_svfprintf_r+0xd64>)
    e1bc:	3410      	adds	r4, #16
    e1be:	2b07      	cmp	r3, #7
    e1c0:	e9c8 2600 	strd	r2, r6, [r8]
    e1c4:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    e1c8:	ddf1      	ble.n	e1ae <_svfprintf_r+0xa76>
    e1ca:	4649      	mov	r1, r9
    e1cc:	4638      	mov	r0, r7
    e1ce:	aa28      	add	r2, sp, #160	; 0xa0
    e1d0:	f006 faf0 	bl	147b4 <__ssprint_r>
    e1d4:	2800      	cmp	r0, #0
    e1d6:	f47f ac12 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e1da:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
    e1de:	3d10      	subs	r5, #16
    e1e0:	2d10      	cmp	r5, #16
    e1e2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e1e6:	dce7      	bgt.n	e1b8 <_svfprintf_r+0xa80>
    e1e8:	3301      	adds	r3, #1
    e1ea:	4aac      	ldr	r2, [pc, #688]	; (e49c <_svfprintf_r+0xd64>)
    e1ec:	442c      	add	r4, r5
    e1ee:	2b07      	cmp	r3, #7
    e1f0:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    e1f4:	f8c8 5004 	str.w	r5, [r8, #4]
    e1f8:	f8c8 2000 	str.w	r2, [r8]
    e1fc:	f77f ac7e 	ble.w	dafc <_svfprintf_r+0x3c4>
    e200:	990c      	ldr	r1, [sp, #48]	; 0x30
    e202:	980a      	ldr	r0, [sp, #40]	; 0x28
    e204:	aa28      	add	r2, sp, #160	; 0xa0
    e206:	f006 fad5 	bl	147b4 <__ssprint_r>
    e20a:	2800      	cmp	r0, #0
    e20c:	f47f abf7 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e210:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e212:	e473      	b.n	dafc <_svfprintf_r+0x3c4>
    e214:	9922      	ldr	r1, [sp, #136]	; 0x88
    e216:	2900      	cmp	r1, #0
    e218:	f340 836f 	ble.w	e8fa <_svfprintf_r+0x11c2>
    e21c:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
    e220:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e222:	4599      	cmp	r9, r3
    e224:	bfa8      	it	ge
    e226:	4699      	movge	r9, r3
    e228:	f1b9 0f00 	cmp.w	r9, #0
    e22c:	dd0b      	ble.n	e246 <_svfprintf_r+0xb0e>
    e22e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e230:	444c      	add	r4, r9
    e232:	3301      	adds	r3, #1
    e234:	2b07      	cmp	r3, #7
    e236:	e9c8 5900 	strd	r5, r9, [r8]
    e23a:	942a      	str	r4, [sp, #168]	; 0xa8
    e23c:	9329      	str	r3, [sp, #164]	; 0xa4
    e23e:	f300 851d 	bgt.w	ec7c <_svfprintf_r+0x1544>
    e242:	f108 0808 	add.w	r8, r8, #8
    e246:	9e10      	ldr	r6, [sp, #64]	; 0x40
    e248:	f1b9 0f00 	cmp.w	r9, #0
    e24c:	bfa8      	it	ge
    e24e:	eba6 0609 	subge.w	r6, r6, r9
    e252:	2e00      	cmp	r6, #0
    e254:	f300 8225 	bgt.w	e6a2 <_svfprintf_r+0xf6a>
    e258:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
    e25c:	0578      	lsls	r0, r7, #21
    e25e:	44ab      	add	fp, r5
    e260:	f100 825f 	bmi.w	e722 <_svfprintf_r+0xfea>
    e264:	9b22      	ldr	r3, [sp, #136]	; 0x88
    e266:	9a12      	ldr	r2, [sp, #72]	; 0x48
    e268:	4293      	cmp	r3, r2
    e26a:	db02      	blt.n	e272 <_svfprintf_r+0xb3a>
    e26c:	07f9      	lsls	r1, r7, #31
    e26e:	f140 8476 	bpl.w	eb5e <_svfprintf_r+0x1426>
    e272:	9a16      	ldr	r2, [sp, #88]	; 0x58
    e274:	9917      	ldr	r1, [sp, #92]	; 0x5c
    e276:	4414      	add	r4, r2
    e278:	e9c8 1200 	strd	r1, r2, [r8]
    e27c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    e27e:	942a      	str	r4, [sp, #168]	; 0xa8
    e280:	3201      	adds	r2, #1
    e282:	2a07      	cmp	r2, #7
    e284:	9229      	str	r2, [sp, #164]	; 0xa4
    e286:	f300 8513 	bgt.w	ecb0 <_svfprintf_r+0x1578>
    e28a:	f108 0808 	add.w	r8, r8, #8
    e28e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    e290:	18ae      	adds	r6, r5, r2
    e292:	eba6 060b 	sub.w	r6, r6, fp
    e296:	1ad5      	subs	r5, r2, r3
    e298:	42ae      	cmp	r6, r5
    e29a:	bfa8      	it	ge
    e29c:	462e      	movge	r6, r5
    e29e:	2e00      	cmp	r6, #0
    e2a0:	dd0d      	ble.n	e2be <_svfprintf_r+0xb86>
    e2a2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e2a4:	4434      	add	r4, r6
    e2a6:	3301      	adds	r3, #1
    e2a8:	2b07      	cmp	r3, #7
    e2aa:	f8c8 b000 	str.w	fp, [r8]
    e2ae:	f8c8 6004 	str.w	r6, [r8, #4]
    e2b2:	942a      	str	r4, [sp, #168]	; 0xa8
    e2b4:	9329      	str	r3, [sp, #164]	; 0xa4
    e2b6:	f300 8571 	bgt.w	ed9c <_svfprintf_r+0x1664>
    e2ba:	f108 0808 	add.w	r8, r8, #8
    e2be:	2e00      	cmp	r6, #0
    e2c0:	bfa8      	it	ge
    e2c2:	1bad      	subge	r5, r5, r6
    e2c4:	2d00      	cmp	r5, #0
    e2c6:	f77f ac11 	ble.w	daec <_svfprintf_r+0x3b4>
    e2ca:	2d10      	cmp	r5, #16
    e2cc:	f340 873c 	ble.w	f148 <_svfprintf_r+0x1a10>
    e2d0:	f8df 91cc 	ldr.w	r9, [pc, #460]	; e4a0 <_svfprintf_r+0xd68>
    e2d4:	4622      	mov	r2, r4
    e2d6:	4649      	mov	r1, r9
    e2d8:	2610      	movs	r6, #16
    e2da:	46b9      	mov	r9, r7
    e2dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e2de:	460f      	mov	r7, r1
    e2e0:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
    e2e4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    e2e6:	e005      	b.n	e2f4 <_svfprintf_r+0xbbc>
    e2e8:	f108 0808 	add.w	r8, r8, #8
    e2ec:	3d10      	subs	r5, #16
    e2ee:	2d10      	cmp	r5, #16
    e2f0:	f340 8353 	ble.w	e99a <_svfprintf_r+0x1262>
    e2f4:	3301      	adds	r3, #1
    e2f6:	3210      	adds	r2, #16
    e2f8:	2b07      	cmp	r3, #7
    e2fa:	e9c8 7600 	strd	r7, r6, [r8]
    e2fe:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
    e302:	ddf1      	ble.n	e2e8 <_svfprintf_r+0xbb0>
    e304:	4621      	mov	r1, r4
    e306:	4658      	mov	r0, fp
    e308:	aa28      	add	r2, sp, #160	; 0xa0
    e30a:	f006 fa53 	bl	147b4 <__ssprint_r>
    e30e:	2800      	cmp	r0, #0
    e310:	f47f ab75 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e314:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    e318:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e31c:	e7e6      	b.n	e2ec <_svfprintf_r+0xbb4>
    e31e:	9b07      	ldr	r3, [sp, #28]
    e320:	2b00      	cmp	r3, #0
    e322:	f47f aafc 	bne.w	d91e <_svfprintf_r+0x1e6>
    e326:	465f      	mov	r7, fp
    e328:	2300      	movs	r3, #0
    e32a:	ad54      	add	r5, sp, #336	; 0x150
    e32c:	9307      	str	r3, [sp, #28]
    e32e:	930b      	str	r3, [sp, #44]	; 0x2c
    e330:	f7ff bafd 	b.w	d92e <_svfprintf_r+0x1f6>
    e334:	07fa      	lsls	r2, r7, #31
    e336:	f53f ae7f 	bmi.w	e038 <_svfprintf_r+0x900>
    e33a:	2301      	movs	r3, #1
    e33c:	9e29      	ldr	r6, [sp, #164]	; 0xa4
    e33e:	3401      	adds	r4, #1
    e340:	441e      	add	r6, r3
    e342:	2e07      	cmp	r6, #7
    e344:	f8c8 5000 	str.w	r5, [r8]
    e348:	942a      	str	r4, [sp, #168]	; 0xa8
    e34a:	f8c8 3004 	str.w	r3, [r8, #4]
    e34e:	9629      	str	r6, [sp, #164]	; 0xa4
    e350:	f77f aea5 	ble.w	e09e <_svfprintf_r+0x966>
    e354:	990c      	ldr	r1, [sp, #48]	; 0x30
    e356:	980a      	ldr	r0, [sp, #40]	; 0x28
    e358:	aa28      	add	r2, sp, #160	; 0xa0
    e35a:	f006 fa2b 	bl	147b4 <__ssprint_r>
    e35e:	2800      	cmp	r0, #0
    e360:	f47f ab4d 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e364:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
    e368:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e36c:	e699      	b.n	e0a2 <_svfprintf_r+0x96a>
    e36e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e370:	1e5d      	subs	r5, r3, #1
    e372:	2d00      	cmp	r5, #0
    e374:	f77f ae95 	ble.w	e0a2 <_svfprintf_r+0x96a>
    e378:	2d10      	cmp	r5, #16
    e37a:	f340 86df 	ble.w	f13c <_svfprintf_r+0x1a04>
    e37e:	4622      	mov	r2, r4
    e380:	9707      	str	r7, [sp, #28]
    e382:	f04f 0b10 	mov.w	fp, #16
    e386:	f8df 9118 	ldr.w	r9, [pc, #280]	; e4a0 <_svfprintf_r+0xd68>
    e38a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    e38c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
    e38e:	e005      	b.n	e39c <_svfprintf_r+0xc64>
    e390:	f108 0808 	add.w	r8, r8, #8
    e394:	3d10      	subs	r5, #16
    e396:	2d10      	cmp	r5, #16
    e398:	f340 837f 	ble.w	ea9a <_svfprintf_r+0x1362>
    e39c:	3601      	adds	r6, #1
    e39e:	3210      	adds	r2, #16
    e3a0:	2e07      	cmp	r6, #7
    e3a2:	e9c8 9b00 	strd	r9, fp, [r8]
    e3a6:	e9cd 6229 	strd	r6, r2, [sp, #164]	; 0xa4
    e3aa:	ddf1      	ble.n	e390 <_svfprintf_r+0xc58>
    e3ac:	4639      	mov	r1, r7
    e3ae:	4620      	mov	r0, r4
    e3b0:	aa28      	add	r2, sp, #160	; 0xa0
    e3b2:	f006 f9ff 	bl	147b4 <__ssprint_r>
    e3b6:	2800      	cmp	r0, #0
    e3b8:	f47f ab21 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e3bc:	e9dd 6229 	ldrd	r6, r2, [sp, #164]	; 0xa4
    e3c0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e3c4:	e7e6      	b.n	e394 <_svfprintf_r+0xc5c>
    e3c6:	990c      	ldr	r1, [sp, #48]	; 0x30
    e3c8:	980a      	ldr	r0, [sp, #40]	; 0x28
    e3ca:	aa28      	add	r2, sp, #160	; 0xa0
    e3cc:	f006 f9f2 	bl	147b4 <__ssprint_r>
    e3d0:	2800      	cmp	r0, #0
    e3d2:	f47f ab14 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e3d6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e3d8:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e3dc:	f7ff bb74 	b.w	dac8 <_svfprintf_r+0x390>
    e3e0:	f01b 0310 	ands.w	r3, fp, #16
    e3e4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    e3e6:	d13a      	bne.n	e45e <_svfprintf_r+0xd26>
    e3e8:	f01b 0140 	ands.w	r1, fp, #64	; 0x40
    e3ec:	d033      	beq.n	e456 <_svfprintf_r+0xd1e>
    e3ee:	f852 4b04 	ldr.w	r4, [r2], #4
    e3f2:	4699      	mov	r9, r3
    e3f4:	920e      	str	r2, [sp, #56]	; 0x38
    e3f6:	2301      	movs	r3, #1
    e3f8:	b2a4      	uxth	r4, r4
    e3fa:	f7ff babd 	b.w	d978 <_svfprintf_r+0x240>
    e3fe:	232d      	movs	r3, #45	; 0x2d
    e400:	4264      	negs	r4, r4
    e402:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
    e406:	46bb      	mov	fp, r7
    e408:	f04f 0301 	mov.w	r3, #1
    e40c:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
    e410:	f7ff bab5 	b.w	d97e <_svfprintf_r+0x246>
    e414:	990c      	ldr	r1, [sp, #48]	; 0x30
    e416:	980a      	ldr	r0, [sp, #40]	; 0x28
    e418:	aa28      	add	r2, sp, #160	; 0xa0
    e41a:	f006 f9cb 	bl	147b4 <__ssprint_r>
    e41e:	2800      	cmp	r0, #0
    e420:	f47f aaed 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e424:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
    e428:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e42c:	e613      	b.n	e056 <_svfprintf_r+0x91e>
    e42e:	990c      	ldr	r1, [sp, #48]	; 0x30
    e430:	980a      	ldr	r0, [sp, #40]	; 0x28
    e432:	aa28      	add	r2, sp, #160	; 0xa0
    e434:	f006 f9be 	bl	147b4 <__ssprint_r>
    e438:	2800      	cmp	r0, #0
    e43a:	f47f aae0 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e43e:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
    e442:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e446:	e613      	b.n	e070 <_svfprintf_r+0x938>
    e448:	07fd      	lsls	r5, r7, #31
    e44a:	f57f ab4f 	bpl.w	daec <_svfprintf_r+0x3b4>
    e44e:	e524      	b.n	de9a <_svfprintf_r+0x762>
    e450:	ad54      	add	r5, sp, #336	; 0x150
    e452:	f7ff ba6c 	b.w	d92e <_svfprintf_r+0x1f6>
    e456:	f41b 7900 	ands.w	r9, fp, #512	; 0x200
    e45a:	f040 838a 	bne.w	eb72 <_svfprintf_r+0x143a>
    e45e:	f852 4b04 	ldr.w	r4, [r2], #4
    e462:	2301      	movs	r3, #1
    e464:	920e      	str	r2, [sp, #56]	; 0x38
    e466:	f7ff ba87 	b.w	d978 <_svfprintf_r+0x240>
    e46a:	05b8      	lsls	r0, r7, #22
    e46c:	f100 839b 	bmi.w	eba6 <_svfprintf_r+0x146e>
    e470:	ea4f 79e4 	mov.w	r9, r4, asr #31
    e474:	464b      	mov	r3, r9
    e476:	f7ff ba40 	b.w	d8fa <_svfprintf_r+0x1c2>
    e47a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e47c:	9808      	ldr	r0, [sp, #32]
    e47e:	f853 1b04 	ldr.w	r1, [r3], #4
    e482:	17c2      	asrs	r2, r0, #31
    e484:	4655      	mov	r5, sl
    e486:	e9c1 0200 	strd	r0, r2, [r1]
    e48a:	930e      	str	r3, [sp, #56]	; 0x38
    e48c:	f7ff bb4c 	b.w	db28 <_svfprintf_r+0x3f0>
    e490:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e492:	f853 4b04 	ldr.w	r4, [r3], #4
    e496:	930e      	str	r3, [sp, #56]	; 0x38
    e498:	f7ff ba6b 	b.w	d972 <_svfprintf_r+0x23a>
    e49c:	0001a204 	.word	0x0001a204
    e4a0:	0001a214 	.word	0x0001a214
    e4a4:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
    e4a8:	4602      	mov	r2, r0
    e4aa:	460b      	mov	r3, r1
    e4ac:	f7fc f8e4 	bl	a678 <__aeabi_dcmpun>
    e4b0:	2800      	cmp	r0, #0
    e4b2:	f040 85e9 	bne.w	f088 <_svfprintf_r+0x1950>
    e4b6:	2e61      	cmp	r6, #97	; 0x61
    e4b8:	f000 857d 	beq.w	efb6 <_svfprintf_r+0x187e>
    e4bc:	2e41      	cmp	r6, #65	; 0x41
    e4be:	f000 848b 	beq.w	edd8 <_svfprintf_r+0x16a0>
    e4c2:	9b07      	ldr	r3, [sp, #28]
    e4c4:	3301      	adds	r3, #1
    e4c6:	f000 838f 	beq.w	ebe8 <_svfprintf_r+0x14b0>
    e4ca:	f026 0320 	bic.w	r3, r6, #32
    e4ce:	2b47      	cmp	r3, #71	; 0x47
    e4d0:	9306      	str	r3, [sp, #24]
    e4d2:	f000 858f 	beq.w	eff4 <_svfprintf_r+0x18bc>
    e4d6:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
    e4da:	f447 7380 	orr.w	r3, r7, #256	; 0x100
    e4de:	930f      	str	r3, [sp, #60]	; 0x3c
    e4e0:	4613      	mov	r3, r2
    e4e2:	2b00      	cmp	r3, #0
    e4e4:	f2c0 85b0 	blt.w	f048 <_svfprintf_r+0x1910>
    e4e8:	930b      	str	r3, [sp, #44]	; 0x2c
    e4ea:	2300      	movs	r3, #0
    e4ec:	468b      	mov	fp, r1
    e4ee:	931d      	str	r3, [sp, #116]	; 0x74
    e4f0:	930d      	str	r3, [sp, #52]	; 0x34
    e4f2:	9b06      	ldr	r3, [sp, #24]
    e4f4:	2b46      	cmp	r3, #70	; 0x46
    e4f6:	f000 83e9 	beq.w	eccc <_svfprintf_r+0x1594>
    e4fa:	2b45      	cmp	r3, #69	; 0x45
    e4fc:	f000 8546 	beq.w	ef8c <_svfprintf_r+0x1854>
    e500:	9907      	ldr	r1, [sp, #28]
    e502:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    e504:	9101      	str	r1, [sp, #4]
    e506:	2102      	movs	r1, #2
    e508:	9100      	str	r1, [sp, #0]
    e50a:	a926      	add	r1, sp, #152	; 0x98
    e50c:	9104      	str	r1, [sp, #16]
    e50e:	a923      	add	r1, sp, #140	; 0x8c
    e510:	9103      	str	r1, [sp, #12]
    e512:	a922      	add	r1, sp, #136	; 0x88
    e514:	465a      	mov	r2, fp
    e516:	980a      	ldr	r0, [sp, #40]	; 0x28
    e518:	9102      	str	r1, [sp, #8]
    e51a:	f003 fdb5 	bl	12088 <_dtoa_r>
    e51e:	9b06      	ldr	r3, [sp, #24]
    e520:	4605      	mov	r5, r0
    e522:	2b47      	cmp	r3, #71	; 0x47
    e524:	f040 863a 	bne.w	f19c <_svfprintf_r+0x1a64>
    e528:	f017 0f01 	tst.w	r7, #1
    e52c:	46b9      	mov	r9, r7
    e52e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    e530:	f040 84fe 	bne.w	ef30 <_svfprintf_r+0x17f8>
    e534:	9b26      	ldr	r3, [sp, #152]	; 0x98
    e536:	1b5b      	subs	r3, r3, r5
    e538:	9312      	str	r3, [sp, #72]	; 0x48
    e53a:	9b06      	ldr	r3, [sp, #24]
    e53c:	2b47      	cmp	r3, #71	; 0x47
    e53e:	f000 836e 	beq.w	ec1e <_svfprintf_r+0x14e6>
    e542:	9b06      	ldr	r3, [sp, #24]
    e544:	2b46      	cmp	r3, #70	; 0x46
    e546:	f000 83f0 	beq.w	ed2a <_svfprintf_r+0x15f2>
    e54a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    e54c:	9310      	str	r3, [sp, #64]	; 0x40
    e54e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    e550:	9a06      	ldr	r2, [sp, #24]
    e552:	3b01      	subs	r3, #1
    e554:	2a41      	cmp	r2, #65	; 0x41
    e556:	9322      	str	r3, [sp, #136]	; 0x88
    e558:	f000 85bb 	beq.w	f0d2 <_svfprintf_r+0x199a>
    e55c:	2100      	movs	r1, #0
    e55e:	b2f2      	uxtb	r2, r6
    e560:	2b00      	cmp	r3, #0
    e562:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
    e566:	bfb6      	itet	lt
    e568:	222d      	movlt	r2, #45	; 0x2d
    e56a:	222b      	movge	r2, #43	; 0x2b
    e56c:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
    e56e:	f88d 2091 	strb.w	r2, [sp, #145]	; 0x91
    e572:	bfb8      	it	lt
    e574:	f1c3 0301 	rsblt	r3, r3, #1
    e578:	2b09      	cmp	r3, #9
    e57a:	f340 859b 	ble.w	f0b4 <_svfprintf_r+0x197c>
    e57e:	f10d 0c9f 	add.w	ip, sp, #159	; 0x9f
    e582:	4662      	mov	r2, ip
    e584:	4fb6      	ldr	r7, [pc, #728]	; (e860 <_svfprintf_r+0x1128>)
    e586:	461c      	mov	r4, r3
    e588:	4610      	mov	r0, r2
    e58a:	fb87 1203 	smull	r1, r2, r7, r3
    e58e:	17d9      	asrs	r1, r3, #31
    e590:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
    e594:	eb01 0281 	add.w	r2, r1, r1, lsl #2
    e598:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
    e59c:	3230      	adds	r2, #48	; 0x30
    e59e:	2c63      	cmp	r4, #99	; 0x63
    e5a0:	f800 2c01 	strb.w	r2, [r0, #-1]
    e5a4:	460b      	mov	r3, r1
    e5a6:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
    e5aa:	dcec      	bgt.n	e586 <_svfprintf_r+0xe4e>
    e5ac:	3330      	adds	r3, #48	; 0x30
    e5ae:	1e81      	subs	r1, r0, #2
    e5b0:	b2db      	uxtb	r3, r3
    e5b2:	458c      	cmp	ip, r1
    e5b4:	f802 3c01 	strb.w	r3, [r2, #-1]
    e5b8:	f240 85f9 	bls.w	f1ae <_svfprintf_r+0x1a76>
    e5bc:	f10d 0192 	add.w	r1, sp, #146	; 0x92
    e5c0:	e001      	b.n	e5c6 <_svfprintf_r+0xe8e>
    e5c2:	f812 3b01 	ldrb.w	r3, [r2], #1
    e5c6:	4594      	cmp	ip, r2
    e5c8:	f801 3b01 	strb.w	r3, [r1], #1
    e5cc:	d1f9      	bne.n	e5c2 <_svfprintf_r+0xe8a>
    e5ce:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
    e5d2:	f10d 0292 	add.w	r2, sp, #146	; 0x92
    e5d6:	1a1b      	subs	r3, r3, r0
    e5d8:	4413      	add	r3, r2
    e5da:	aa24      	add	r2, sp, #144	; 0x90
    e5dc:	1a9b      	subs	r3, r3, r2
    e5de:	931a      	str	r3, [sp, #104]	; 0x68
    e5e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e5e2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    e5e4:	2b01      	cmp	r3, #1
    e5e6:	441a      	add	r2, r3
    e5e8:	920b      	str	r2, [sp, #44]	; 0x2c
    e5ea:	f340 8581 	ble.w	f0f0 <_svfprintf_r+0x19b8>
    e5ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    e5f0:	9a16      	ldr	r2, [sp, #88]	; 0x58
    e5f2:	4413      	add	r3, r2
    e5f4:	930b      	str	r3, [sp, #44]	; 0x2c
    e5f6:	2300      	movs	r3, #0
    e5f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    e5fa:	f429 6780 	bic.w	r7, r9, #1024	; 0x400
    e5fe:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
    e602:	f447 7780 	orr.w	r7, r7, #256	; 0x100
    e606:	930f      	str	r3, [sp, #60]	; 0x3c
    e608:	9206      	str	r2, [sp, #24]
    e60a:	9313      	str	r3, [sp, #76]	; 0x4c
    e60c:	9310      	str	r3, [sp, #64]	; 0x40
    e60e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    e610:	2b00      	cmp	r3, #0
    e612:	f040 832c 	bne.w	ec6e <_svfprintf_r+0x1536>
    e616:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    e61a:	9307      	str	r3, [sp, #28]
    e61c:	f7ff b994 	b.w	d948 <_svfprintf_r+0x210>
    e620:	46bb      	mov	fp, r7
    e622:	f7ff bb2f 	b.w	dc84 <_svfprintf_r+0x54c>
    e626:	4b8f      	ldr	r3, [pc, #572]	; (e864 <_svfprintf_r+0x112c>)
    e628:	9318      	str	r3, [sp, #96]	; 0x60
    e62a:	f017 0920 	ands.w	r9, r7, #32
    e62e:	f000 80f5 	beq.w	e81c <_svfprintf_r+0x10e4>
    e632:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e634:	3307      	adds	r3, #7
    e636:	f023 0307 	bic.w	r3, r3, #7
    e63a:	f8d3 9004 	ldr.w	r9, [r3, #4]
    e63e:	f853 4b08 	ldr.w	r4, [r3], #8
    e642:	930e      	str	r3, [sp, #56]	; 0x38
    e644:	07f8      	lsls	r0, r7, #31
    e646:	d509      	bpl.n	e65c <_svfprintf_r+0xf24>
    e648:	ea54 0309 	orrs.w	r3, r4, r9
    e64c:	d006      	beq.n	e65c <_svfprintf_r+0xf24>
    e64e:	2330      	movs	r3, #48	; 0x30
    e650:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
    e654:	f047 0702 	orr.w	r7, r7, #2
    e658:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
    e65c:	2302      	movs	r3, #2
    e65e:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
    e662:	f7ff b989 	b.w	d978 <_svfprintf_r+0x240>
    e666:	4b80      	ldr	r3, [pc, #512]	; (e868 <_svfprintf_r+0x1130>)
    e668:	9318      	str	r3, [sp, #96]	; 0x60
    e66a:	e7de      	b.n	e62a <_svfprintf_r+0xef2>
    e66c:	990c      	ldr	r1, [sp, #48]	; 0x30
    e66e:	980a      	ldr	r0, [sp, #40]	; 0x28
    e670:	aa28      	add	r2, sp, #160	; 0xa0
    e672:	f006 f89f 	bl	147b4 <__ssprint_r>
    e676:	2800      	cmp	r0, #0
    e678:	f47f a9c1 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e67c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e67e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e682:	e418      	b.n	deb6 <_svfprintf_r+0x77e>
    e684:	2140      	movs	r1, #64	; 0x40
    e686:	980a      	ldr	r0, [sp, #40]	; 0x28
    e688:	f7fd fdfc 	bl	c284 <_malloc_r>
    e68c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    e68e:	6018      	str	r0, [r3, #0]
    e690:	6118      	str	r0, [r3, #16]
    e692:	2800      	cmp	r0, #0
    e694:	f000 8597 	beq.w	f1c6 <_svfprintf_r+0x1a8e>
    e698:	2340      	movs	r3, #64	; 0x40
    e69a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    e69c:	6153      	str	r3, [r2, #20]
    e69e:	f7ff b862 	b.w	d766 <_svfprintf_r+0x2e>
    e6a2:	2e10      	cmp	r6, #16
    e6a4:	f340 8576 	ble.w	f194 <_svfprintf_r+0x1a5c>
    e6a8:	f8df 91c0 	ldr.w	r9, [pc, #448]	; e86c <_svfprintf_r+0x1134>
    e6ac:	4642      	mov	r2, r8
    e6ae:	4648      	mov	r0, r9
    e6b0:	4621      	mov	r1, r4
    e6b2:	46a8      	mov	r8, r5
    e6b4:	46b9      	mov	r9, r7
    e6b6:	f04f 0b10 	mov.w	fp, #16
    e6ba:	4607      	mov	r7, r0
    e6bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e6be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    e6c0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    e6c2:	e004      	b.n	e6ce <_svfprintf_r+0xf96>
    e6c4:	3208      	adds	r2, #8
    e6c6:	3e10      	subs	r6, #16
    e6c8:	2e10      	cmp	r6, #16
    e6ca:	f340 8213 	ble.w	eaf4 <_svfprintf_r+0x13bc>
    e6ce:	3301      	adds	r3, #1
    e6d0:	3110      	adds	r1, #16
    e6d2:	2b07      	cmp	r3, #7
    e6d4:	e9c2 7b00 	strd	r7, fp, [r2]
    e6d8:	e9cd 3129 	strd	r3, r1, [sp, #164]	; 0xa4
    e6dc:	ddf2      	ble.n	e6c4 <_svfprintf_r+0xf8c>
    e6de:	4629      	mov	r1, r5
    e6e0:	4620      	mov	r0, r4
    e6e2:	aa28      	add	r2, sp, #160	; 0xa0
    e6e4:	f006 f866 	bl	147b4 <__ssprint_r>
    e6e8:	2800      	cmp	r0, #0
    e6ea:	f47f a988 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e6ee:	e9dd 3129 	ldrd	r3, r1, [sp, #164]	; 0xa4
    e6f2:	aa2b      	add	r2, sp, #172	; 0xac
    e6f4:	e7e7      	b.n	e6c6 <_svfprintf_r+0xf8e>
    e6f6:	4628      	mov	r0, r5
    e6f8:	f8cd 901c 	str.w	r9, [sp, #28]
    e6fc:	940e      	str	r4, [sp, #56]	; 0x38
    e6fe:	f7fe ffaf 	bl	d660 <strlen>
    e702:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
    e706:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    e70a:	900b      	str	r0, [sp, #44]	; 0x2c
    e70c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
    e710:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
    e714:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
    e718:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
    e71c:	9306      	str	r3, [sp, #24]
    e71e:	f7ff b913 	b.w	d948 <_svfprintf_r+0x210>
    e722:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e724:	4642      	mov	r2, r8
    e726:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
    e72a:	18eb      	adds	r3, r5, r3
    e72c:	465e      	mov	r6, fp
    e72e:	9307      	str	r3, [sp, #28]
    e730:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
    e734:	9710      	str	r7, [sp, #64]	; 0x40
    e736:	4621      	mov	r1, r4
    e738:	9f19      	ldr	r7, [sp, #100]	; 0x64
    e73a:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
    e73e:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    e742:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
    e746:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    e748:	9513      	str	r5, [sp, #76]	; 0x4c
    e74a:	f1b8 0f00 	cmp.w	r8, #0
    e74e:	d02e      	beq.n	e7ae <_svfprintf_r+0x1076>
    e750:	bb83      	cbnz	r3, e7b4 <_svfprintf_r+0x107c>
    e752:	3f01      	subs	r7, #1
    e754:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    e758:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    e75a:	4449      	add	r1, r9
    e75c:	e9c2 3900 	strd	r3, r9, [r2]
    e760:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e762:	912a      	str	r1, [sp, #168]	; 0xa8
    e764:	3301      	adds	r3, #1
    e766:	2b07      	cmp	r3, #7
    e768:	9329      	str	r3, [sp, #164]	; 0xa4
    e76a:	dc60      	bgt.n	e82e <_svfprintf_r+0x10f6>
    e76c:	3208      	adds	r2, #8
    e76e:	9b07      	ldr	r3, [sp, #28]
    e770:	7838      	ldrb	r0, [r7, #0]
    e772:	1b9b      	subs	r3, r3, r6
    e774:	4283      	cmp	r3, r0
    e776:	bfa8      	it	ge
    e778:	4603      	movge	r3, r0
    e77a:	2b00      	cmp	r3, #0
    e77c:	461c      	mov	r4, r3
    e77e:	dd0b      	ble.n	e798 <_svfprintf_r+0x1060>
    e780:	9829      	ldr	r0, [sp, #164]	; 0xa4
    e782:	4419      	add	r1, r3
    e784:	3001      	adds	r0, #1
    e786:	2807      	cmp	r0, #7
    e788:	e9c2 6300 	strd	r6, r3, [r2]
    e78c:	912a      	str	r1, [sp, #168]	; 0xa8
    e78e:	9029      	str	r0, [sp, #164]	; 0xa4
    e790:	f300 8114 	bgt.w	e9bc <_svfprintf_r+0x1284>
    e794:	7838      	ldrb	r0, [r7, #0]
    e796:	3208      	adds	r2, #8
    e798:	2c00      	cmp	r4, #0
    e79a:	bfb4      	ite	lt
    e79c:	4605      	movlt	r5, r0
    e79e:	1b05      	subge	r5, r0, r4
    e7a0:	2d00      	cmp	r5, #0
    e7a2:	dc0b      	bgt.n	e7bc <_svfprintf_r+0x1084>
    e7a4:	4406      	add	r6, r0
    e7a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    e7a8:	f1b8 0f00 	cmp.w	r8, #0
    e7ac:	d1d0      	bne.n	e750 <_svfprintf_r+0x1018>
    e7ae:	2b00      	cmp	r3, #0
    e7b0:	f000 8226 	beq.w	ec00 <_svfprintf_r+0x14c8>
    e7b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    e7b6:	3b01      	subs	r3, #1
    e7b8:	930f      	str	r3, [sp, #60]	; 0x3c
    e7ba:	e7cd      	b.n	e758 <_svfprintf_r+0x1020>
    e7bc:	2d10      	cmp	r5, #16
    e7be:	f340 849d 	ble.w	f0fc <_svfprintf_r+0x19c4>
    e7c2:	2410      	movs	r4, #16
    e7c4:	9829      	ldr	r0, [sp, #164]	; 0xa4
    e7c6:	e004      	b.n	e7d2 <_svfprintf_r+0x109a>
    e7c8:	3d10      	subs	r5, #16
    e7ca:	2d10      	cmp	r5, #16
    e7cc:	f102 0208 	add.w	r2, r2, #8
    e7d0:	dd16      	ble.n	e800 <_svfprintf_r+0x10c8>
    e7d2:	3001      	adds	r0, #1
    e7d4:	4b25      	ldr	r3, [pc, #148]	; (e86c <_svfprintf_r+0x1134>)
    e7d6:	3110      	adds	r1, #16
    e7d8:	2807      	cmp	r0, #7
    e7da:	e9c2 3400 	strd	r3, r4, [r2]
    e7de:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
    e7e2:	ddf1      	ble.n	e7c8 <_svfprintf_r+0x1090>
    e7e4:	4659      	mov	r1, fp
    e7e6:	4650      	mov	r0, sl
    e7e8:	aa28      	add	r2, sp, #160	; 0xa0
    e7ea:	f005 ffe3 	bl	147b4 <__ssprint_r>
    e7ee:	2800      	cmp	r0, #0
    e7f0:	f47f a905 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e7f4:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
    e7f8:	3d10      	subs	r5, #16
    e7fa:	2d10      	cmp	r5, #16
    e7fc:	aa2b      	add	r2, sp, #172	; 0xac
    e7fe:	dce8      	bgt.n	e7d2 <_svfprintf_r+0x109a>
    e800:	3001      	adds	r0, #1
    e802:	4b1a      	ldr	r3, [pc, #104]	; (e86c <_svfprintf_r+0x1134>)
    e804:	4429      	add	r1, r5
    e806:	2807      	cmp	r0, #7
    e808:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
    e80c:	6055      	str	r5, [r2, #4]
    e80e:	6013      	str	r3, [r2, #0]
    e810:	f300 8241 	bgt.w	ec96 <_svfprintf_r+0x155e>
    e814:	7838      	ldrb	r0, [r7, #0]
    e816:	3208      	adds	r2, #8
    e818:	4406      	add	r6, r0
    e81a:	e7c4      	b.n	e7a6 <_svfprintf_r+0x106e>
    e81c:	f017 0310 	ands.w	r3, r7, #16
    e820:	f000 80a0 	beq.w	e964 <_svfprintf_r+0x122c>
    e824:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e826:	f853 4b04 	ldr.w	r4, [r3], #4
    e82a:	930e      	str	r3, [sp, #56]	; 0x38
    e82c:	e70a      	b.n	e644 <_svfprintf_r+0xf0c>
    e82e:	4659      	mov	r1, fp
    e830:	4650      	mov	r0, sl
    e832:	aa28      	add	r2, sp, #160	; 0xa0
    e834:	f005 ffbe 	bl	147b4 <__ssprint_r>
    e838:	2800      	cmp	r0, #0
    e83a:	f47f a8e0 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e83e:	992a      	ldr	r1, [sp, #168]	; 0xa8
    e840:	aa2b      	add	r2, sp, #172	; 0xac
    e842:	e794      	b.n	e76e <_svfprintf_r+0x1036>
    e844:	2300      	movs	r3, #0
    e846:	f40b 6280 	and.w	r2, fp, #1024	; 0x400
    e84a:	9606      	str	r6, [sp, #24]
    e84c:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
    e850:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
    e854:	4692      	mov	sl, r2
    e856:	461e      	mov	r6, r3
    e858:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
    e85c:	af54      	add	r7, sp, #336	; 0x150
    e85e:	e014      	b.n	e88a <_svfprintf_r+0x1152>
    e860:	66666667 	.word	0x66666667
    e864:	0001a1d0 	.word	0x0001a1d0
    e868:	0001a1e4 	.word	0x0001a1e4
    e86c:	0001a214 	.word	0x0001a214
    e870:	2300      	movs	r3, #0
    e872:	4620      	mov	r0, r4
    e874:	4649      	mov	r1, r9
    e876:	220a      	movs	r2, #10
    e878:	f007 fd1e 	bl	162b8 <__aeabi_uldivmod>
    e87c:	2c0a      	cmp	r4, #10
    e87e:	f179 0300 	sbcs.w	r3, r9, #0
    e882:	d31b      	bcc.n	e8bc <_svfprintf_r+0x1184>
    e884:	4604      	mov	r4, r0
    e886:	4689      	mov	r9, r1
    e888:	462f      	mov	r7, r5
    e88a:	4620      	mov	r0, r4
    e88c:	220a      	movs	r2, #10
    e88e:	2300      	movs	r3, #0
    e890:	4649      	mov	r1, r9
    e892:	f007 fd11 	bl	162b8 <__aeabi_uldivmod>
    e896:	3230      	adds	r2, #48	; 0x30
    e898:	1e7d      	subs	r5, r7, #1
    e89a:	3601      	adds	r6, #1
    e89c:	f807 2c01 	strb.w	r2, [r7, #-1]
    e8a0:	f1ba 0f00 	cmp.w	sl, #0
    e8a4:	d0e4      	beq.n	e870 <_svfprintf_r+0x1138>
    e8a6:	f898 3000 	ldrb.w	r3, [r8]
    e8aa:	429e      	cmp	r6, r3
    e8ac:	d1e0      	bne.n	e870 <_svfprintf_r+0x1138>
    e8ae:	2eff      	cmp	r6, #255	; 0xff
    e8b0:	d0de      	beq.n	e870 <_svfprintf_r+0x1138>
    e8b2:	2c0a      	cmp	r4, #10
    e8b4:	f179 0300 	sbcs.w	r3, r9, #0
    e8b8:	f080 8130 	bcs.w	eb1c <_svfprintf_r+0x13e4>
    e8bc:	ab54      	add	r3, sp, #336	; 0x150
    e8be:	1b5b      	subs	r3, r3, r5
    e8c0:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
    e8c4:	f8cd 8064 	str.w	r8, [sp, #100]	; 0x64
    e8c8:	9612      	str	r6, [sp, #72]	; 0x48
    e8ca:	465f      	mov	r7, fp
    e8cc:	9e06      	ldr	r6, [sp, #24]
    e8ce:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
    e8d2:	930b      	str	r3, [sp, #44]	; 0x2c
    e8d4:	f7ff b82b 	b.w	d92e <_svfprintf_r+0x1f6>
    e8d8:	990c      	ldr	r1, [sp, #48]	; 0x30
    e8da:	980a      	ldr	r0, [sp, #40]	; 0x28
    e8dc:	aa28      	add	r2, sp, #160	; 0xa0
    e8de:	931d      	str	r3, [sp, #116]	; 0x74
    e8e0:	f005 ff68 	bl	147b4 <__ssprint_r>
    e8e4:	2800      	cmp	r0, #0
    e8e6:	f47f a88a 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e8ea:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    e8ee:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e8f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    e8f2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e8f6:	f7ff b8b8 	b.w	da6a <_svfprintf_r+0x332>
    e8fa:	2301      	movs	r3, #1
    e8fc:	f8c8 3004 	str.w	r3, [r8, #4]
    e900:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e902:	4abc      	ldr	r2, [pc, #752]	; (ebf4 <_svfprintf_r+0x14bc>)
    e904:	3301      	adds	r3, #1
    e906:	3401      	adds	r4, #1
    e908:	2b07      	cmp	r3, #7
    e90a:	942a      	str	r4, [sp, #168]	; 0xa8
    e90c:	9329      	str	r3, [sp, #164]	; 0xa4
    e90e:	f8c8 2000 	str.w	r2, [r8]
    e912:	f300 8117 	bgt.w	eb44 <_svfprintf_r+0x140c>
    e916:	f108 0808 	add.w	r8, r8, #8
    e91a:	2900      	cmp	r1, #0
    e91c:	f040 8086 	bne.w	ea2c <_svfprintf_r+0x12f4>
    e920:	9a12      	ldr	r2, [sp, #72]	; 0x48
    e922:	f007 0301 	and.w	r3, r7, #1
    e926:	4313      	orrs	r3, r2
    e928:	f43f a8e0 	beq.w	daec <_svfprintf_r+0x3b4>
    e92c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    e92e:	9917      	ldr	r1, [sp, #92]	; 0x5c
    e930:	191a      	adds	r2, r3, r4
    e932:	e9c8 1300 	strd	r1, r3, [r8]
    e936:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e938:	922a      	str	r2, [sp, #168]	; 0xa8
    e93a:	3301      	adds	r3, #1
    e93c:	2b07      	cmp	r3, #7
    e93e:	9329      	str	r3, [sp, #164]	; 0xa4
    e940:	f300 8137 	bgt.w	ebb2 <_svfprintf_r+0x147a>
    e944:	f108 0808 	add.w	r8, r8, #8
    e948:	9912      	ldr	r1, [sp, #72]	; 0x48
    e94a:	3301      	adds	r3, #1
    e94c:	188c      	adds	r4, r1, r2
    e94e:	2b07      	cmp	r3, #7
    e950:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    e954:	f8c8 5000 	str.w	r5, [r8]
    e958:	f8c8 1004 	str.w	r1, [r8, #4]
    e95c:	f77f a8c4 	ble.w	dae8 <_svfprintf_r+0x3b0>
    e960:	f7ff bbac 	b.w	e0bc <_svfprintf_r+0x984>
    e964:	f017 0240 	ands.w	r2, r7, #64	; 0x40
    e968:	f000 80a5 	beq.w	eab6 <_svfprintf_r+0x137e>
    e96c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    e96e:	4699      	mov	r9, r3
    e970:	f852 4b04 	ldr.w	r4, [r2], #4
    e974:	920e      	str	r2, [sp, #56]	; 0x38
    e976:	b2a4      	uxth	r4, r4
    e978:	e664      	b.n	e644 <_svfprintf_r+0xf0c>
    e97a:	46bb      	mov	fp, r7
    e97c:	f7fe bfca 	b.w	d914 <_svfprintf_r+0x1dc>
    e980:	990c      	ldr	r1, [sp, #48]	; 0x30
    e982:	980a      	ldr	r0, [sp, #40]	; 0x28
    e984:	aa28      	add	r2, sp, #160	; 0xa0
    e986:	f005 ff15 	bl	147b4 <__ssprint_r>
    e98a:	2800      	cmp	r0, #0
    e98c:	f47f a837 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e990:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e992:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e996:	f7ff ba7b 	b.w	de90 <_svfprintf_r+0x758>
    e99a:	4614      	mov	r4, r2
    e99c:	463a      	mov	r2, r7
    e99e:	464f      	mov	r7, r9
    e9a0:	4691      	mov	r9, r2
    e9a2:	3301      	adds	r3, #1
    e9a4:	442c      	add	r4, r5
    e9a6:	2b07      	cmp	r3, #7
    e9a8:	f8c8 9000 	str.w	r9, [r8]
    e9ac:	f8c8 5004 	str.w	r5, [r8, #4]
    e9b0:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    e9b4:	f77f a898 	ble.w	dae8 <_svfprintf_r+0x3b0>
    e9b8:	f7ff bb80 	b.w	e0bc <_svfprintf_r+0x984>
    e9bc:	4659      	mov	r1, fp
    e9be:	4650      	mov	r0, sl
    e9c0:	aa28      	add	r2, sp, #160	; 0xa0
    e9c2:	f005 fef7 	bl	147b4 <__ssprint_r>
    e9c6:	2800      	cmp	r0, #0
    e9c8:	f47f a819 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e9cc:	7838      	ldrb	r0, [r7, #0]
    e9ce:	992a      	ldr	r1, [sp, #168]	; 0xa8
    e9d0:	aa2b      	add	r2, sp, #172	; 0xac
    e9d2:	e6e1      	b.n	e798 <_svfprintf_r+0x1060>
    e9d4:	990c      	ldr	r1, [sp, #48]	; 0x30
    e9d6:	980a      	ldr	r0, [sp, #40]	; 0x28
    e9d8:	aa28      	add	r2, sp, #160	; 0xa0
    e9da:	f005 feeb 	bl	147b4 <__ssprint_r>
    e9de:	2800      	cmp	r0, #0
    e9e0:	f47f a80d 	bne.w	d9fe <_svfprintf_r+0x2c6>
    e9e4:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e9e6:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e9ea:	f7ff b865 	b.w	dab8 <_svfprintf_r+0x380>
    e9ee:	2b01      	cmp	r3, #1
    e9f0:	46bb      	mov	fp, r7
    e9f2:	f47f a9f5 	bne.w	dde0 <_svfprintf_r+0x6a8>
    e9f6:	f7fe bf92 	b.w	d91e <_svfprintf_r+0x1e6>
    e9fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e9fc:	9908      	ldr	r1, [sp, #32]
    e9fe:	f853 2b04 	ldr.w	r2, [r3], #4
    ea02:	4655      	mov	r5, sl
    ea04:	6011      	str	r1, [r2, #0]
    ea06:	930e      	str	r3, [sp, #56]	; 0x38
    ea08:	f7ff b88e 	b.w	db28 <_svfprintf_r+0x3f0>
    ea0c:	2b06      	cmp	r3, #6
    ea0e:	4629      	mov	r1, r5
    ea10:	bf28      	it	cs
    ea12:	2306      	movcs	r3, #6
    ea14:	462a      	mov	r2, r5
    ea16:	9507      	str	r5, [sp, #28]
    ea18:	950d      	str	r5, [sp, #52]	; 0x34
    ea1a:	9306      	str	r3, [sp, #24]
    ea1c:	4d76      	ldr	r5, [pc, #472]	; (ebf8 <_svfprintf_r+0x14c0>)
    ea1e:	940e      	str	r4, [sp, #56]	; 0x38
    ea20:	930b      	str	r3, [sp, #44]	; 0x2c
    ea22:	910f      	str	r1, [sp, #60]	; 0x3c
    ea24:	9113      	str	r1, [sp, #76]	; 0x4c
    ea26:	9110      	str	r1, [sp, #64]	; 0x40
    ea28:	f7fe bf8e 	b.w	d948 <_svfprintf_r+0x210>
    ea2c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    ea2e:	9817      	ldr	r0, [sp, #92]	; 0x5c
    ea30:	191a      	adds	r2, r3, r4
    ea32:	e9c8 0300 	strd	r0, r3, [r8]
    ea36:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    ea38:	922a      	str	r2, [sp, #168]	; 0xa8
    ea3a:	3301      	adds	r3, #1
    ea3c:	2b07      	cmp	r3, #7
    ea3e:	9329      	str	r3, [sp, #164]	; 0xa4
    ea40:	f300 80b7 	bgt.w	ebb2 <_svfprintf_r+0x147a>
    ea44:	f108 0808 	add.w	r8, r8, #8
    ea48:	2900      	cmp	r1, #0
    ea4a:	f6bf af7d 	bge.w	e948 <_svfprintf_r+0x1210>
    ea4e:	424e      	negs	r6, r1
    ea50:	3110      	adds	r1, #16
    ea52:	f280 83a9 	bge.w	f1a8 <_svfprintf_r+0x1a70>
    ea56:	4641      	mov	r1, r8
    ea58:	2410      	movs	r4, #16
    ea5a:	46a8      	mov	r8, r5
    ea5c:	f8df 919c 	ldr.w	r9, [pc, #412]	; ebfc <_svfprintf_r+0x14c4>
    ea60:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
    ea64:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    ea66:	e004      	b.n	ea72 <_svfprintf_r+0x133a>
    ea68:	3108      	adds	r1, #8
    ea6a:	3e10      	subs	r6, #16
    ea6c:	2e10      	cmp	r6, #16
    ea6e:	f340 82a7 	ble.w	efc0 <_svfprintf_r+0x1888>
    ea72:	3301      	adds	r3, #1
    ea74:	3210      	adds	r2, #16
    ea76:	2b07      	cmp	r3, #7
    ea78:	e9c1 9400 	strd	r9, r4, [r1]
    ea7c:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
    ea80:	ddf2      	ble.n	ea68 <_svfprintf_r+0x1330>
    ea82:	4629      	mov	r1, r5
    ea84:	4658      	mov	r0, fp
    ea86:	aa28      	add	r2, sp, #160	; 0xa0
    ea88:	f005 fe94 	bl	147b4 <__ssprint_r>
    ea8c:	2800      	cmp	r0, #0
    ea8e:	f47e afb6 	bne.w	d9fe <_svfprintf_r+0x2c6>
    ea92:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    ea96:	a92b      	add	r1, sp, #172	; 0xac
    ea98:	e7e7      	b.n	ea6a <_svfprintf_r+0x1332>
    ea9a:	4614      	mov	r4, r2
    ea9c:	9f07      	ldr	r7, [sp, #28]
    ea9e:	3601      	adds	r6, #1
    eaa0:	442c      	add	r4, r5
    eaa2:	2e07      	cmp	r6, #7
    eaa4:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
    eaa8:	f8c8 9000 	str.w	r9, [r8]
    eaac:	f8c8 5004 	str.w	r5, [r8, #4]
    eab0:	f77f aaf5 	ble.w	e09e <_svfprintf_r+0x966>
    eab4:	e44e      	b.n	e354 <_svfprintf_r+0xc1c>
    eab6:	f417 7900 	ands.w	r9, r7, #512	; 0x200
    eaba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    eabc:	d066      	beq.n	eb8c <_svfprintf_r+0x1454>
    eabe:	f853 4b04 	ldr.w	r4, [r3], #4
    eac2:	4691      	mov	r9, r2
    eac4:	930e      	str	r3, [sp, #56]	; 0x38
    eac6:	b2e4      	uxtb	r4, r4
    eac8:	e5bc      	b.n	e644 <_svfprintf_r+0xf0c>
    eaca:	f417 7900 	ands.w	r9, r7, #512	; 0x200
    eace:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ead0:	d057      	beq.n	eb82 <_svfprintf_r+0x144a>
    ead2:	f853 4b04 	ldr.w	r4, [r3], #4
    ead6:	4691      	mov	r9, r2
    ead8:	930e      	str	r3, [sp, #56]	; 0x38
    eada:	b2e4      	uxtb	r4, r4
    eadc:	f7fe bf49 	b.w	d972 <_svfprintf_r+0x23a>
    eae0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    eae2:	f8df 9118 	ldr.w	r9, [pc, #280]	; ebfc <_svfprintf_r+0x14c4>
    eae6:	f7ff ba95 	b.w	e014 <_svfprintf_r+0x8dc>
    eaea:	222d      	movs	r2, #45	; 0x2d
    eaec:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    eaf0:	f7ff b857 	b.w	dba2 <_svfprintf_r+0x46a>
    eaf4:	4645      	mov	r5, r8
    eaf6:	4690      	mov	r8, r2
    eaf8:	463a      	mov	r2, r7
    eafa:	460c      	mov	r4, r1
    eafc:	464f      	mov	r7, r9
    eafe:	4691      	mov	r9, r2
    eb00:	3301      	adds	r3, #1
    eb02:	4434      	add	r4, r6
    eb04:	2b07      	cmp	r3, #7
    eb06:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    eb0a:	f8c8 9000 	str.w	r9, [r8]
    eb0e:	f8c8 6004 	str.w	r6, [r8, #4]
    eb12:	dc5c      	bgt.n	ebce <_svfprintf_r+0x1496>
    eb14:	f108 0808 	add.w	r8, r8, #8
    eb18:	f7ff bb9e 	b.w	e258 <_svfprintf_r+0xb20>
    eb1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    eb1e:	991b      	ldr	r1, [sp, #108]	; 0x6c
    eb20:	1aed      	subs	r5, r5, r3
    eb22:	461a      	mov	r2, r3
    eb24:	4628      	mov	r0, r5
    eb26:	f005 fe11 	bl	1474c <strncpy>
    eb2a:	f898 3001 	ldrb.w	r3, [r8, #1]
    eb2e:	b10b      	cbz	r3, eb34 <_svfprintf_r+0x13fc>
    eb30:	f108 0801 	add.w	r8, r8, #1
    eb34:	4620      	mov	r0, r4
    eb36:	4649      	mov	r1, r9
    eb38:	220a      	movs	r2, #10
    eb3a:	2300      	movs	r3, #0
    eb3c:	2600      	movs	r6, #0
    eb3e:	f007 fbbb 	bl	162b8 <__aeabi_uldivmod>
    eb42:	e69f      	b.n	e884 <_svfprintf_r+0x114c>
    eb44:	990c      	ldr	r1, [sp, #48]	; 0x30
    eb46:	980a      	ldr	r0, [sp, #40]	; 0x28
    eb48:	aa28      	add	r2, sp, #160	; 0xa0
    eb4a:	f005 fe33 	bl	147b4 <__ssprint_r>
    eb4e:	2800      	cmp	r0, #0
    eb50:	f47e af55 	bne.w	d9fe <_svfprintf_r+0x2c6>
    eb54:	9922      	ldr	r1, [sp, #136]	; 0x88
    eb56:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    eb58:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    eb5c:	e6dd      	b.n	e91a <_svfprintf_r+0x11e2>
    eb5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    eb60:	18ae      	adds	r6, r5, r2
    eb62:	eba6 060b 	sub.w	r6, r6, fp
    eb66:	1ad5      	subs	r5, r2, r3
    eb68:	42ae      	cmp	r6, r5
    eb6a:	bfa8      	it	ge
    eb6c:	462e      	movge	r6, r5
    eb6e:	f7ff bba6 	b.w	e2be <_svfprintf_r+0xb86>
    eb72:	f852 4b04 	ldr.w	r4, [r2], #4
    eb76:	4689      	mov	r9, r1
    eb78:	2301      	movs	r3, #1
    eb7a:	920e      	str	r2, [sp, #56]	; 0x38
    eb7c:	b2e4      	uxtb	r4, r4
    eb7e:	f7fe befb 	b.w	d978 <_svfprintf_r+0x240>
    eb82:	f853 4b04 	ldr.w	r4, [r3], #4
    eb86:	930e      	str	r3, [sp, #56]	; 0x38
    eb88:	f7fe bef3 	b.w	d972 <_svfprintf_r+0x23a>
    eb8c:	f853 4b04 	ldr.w	r4, [r3], #4
    eb90:	930e      	str	r3, [sp, #56]	; 0x38
    eb92:	e557      	b.n	e644 <_svfprintf_r+0xf0c>
    eb94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    eb96:	9908      	ldr	r1, [sp, #32]
    eb98:	f853 2b04 	ldr.w	r2, [r3], #4
    eb9c:	4655      	mov	r5, sl
    eb9e:	8011      	strh	r1, [r2, #0]
    eba0:	930e      	str	r3, [sp, #56]	; 0x38
    eba2:	f7fe bfc1 	b.w	db28 <_svfprintf_r+0x3f0>
    eba6:	f344 19c0 	sbfx	r9, r4, #7, #1
    ebaa:	464b      	mov	r3, r9
    ebac:	b264      	sxtb	r4, r4
    ebae:	f7fe bea4 	b.w	d8fa <_svfprintf_r+0x1c2>
    ebb2:	990c      	ldr	r1, [sp, #48]	; 0x30
    ebb4:	980a      	ldr	r0, [sp, #40]	; 0x28
    ebb6:	aa28      	add	r2, sp, #160	; 0xa0
    ebb8:	f005 fdfc 	bl	147b4 <__ssprint_r>
    ebbc:	2800      	cmp	r0, #0
    ebbe:	f47e af1e 	bne.w	d9fe <_svfprintf_r+0x2c6>
    ebc2:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    ebc6:	9922      	ldr	r1, [sp, #136]	; 0x88
    ebc8:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    ebcc:	e73c      	b.n	ea48 <_svfprintf_r+0x1310>
    ebce:	990c      	ldr	r1, [sp, #48]	; 0x30
    ebd0:	980a      	ldr	r0, [sp, #40]	; 0x28
    ebd2:	aa28      	add	r2, sp, #160	; 0xa0
    ebd4:	f005 fdee 	bl	147b4 <__ssprint_r>
    ebd8:	2800      	cmp	r0, #0
    ebda:	f47e af10 	bne.w	d9fe <_svfprintf_r+0x2c6>
    ebde:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    ebe0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    ebe4:	f7ff bb38 	b.w	e258 <_svfprintf_r+0xb20>
    ebe8:	2306      	movs	r3, #6
    ebea:	9307      	str	r3, [sp, #28]
    ebec:	f026 0320 	bic.w	r3, r6, #32
    ebf0:	9306      	str	r3, [sp, #24]
    ebf2:	e470      	b.n	e4d6 <_svfprintf_r+0xd9e>
    ebf4:	0001a200 	.word	0x0001a200
    ebf8:	0001a1f8 	.word	0x0001a1f8
    ebfc:	0001a214 	.word	0x0001a214
    ec00:	e9dd 3512 	ldrd	r3, r5, [sp, #72]	; 0x48
    ec04:	18eb      	adds	r3, r5, r3
    ec06:	429e      	cmp	r6, r3
    ec08:	46b3      	mov	fp, r6
    ec0a:	9719      	str	r7, [sp, #100]	; 0x64
    ec0c:	4690      	mov	r8, r2
    ec0e:	460c      	mov	r4, r1
    ec10:	bf28      	it	cs
    ec12:	469b      	movcs	fp, r3
    ec14:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
    ec18:	9f10      	ldr	r7, [sp, #64]	; 0x40
    ec1a:	f7ff bb23 	b.w	e264 <_svfprintf_r+0xb2c>
    ec1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    ec20:	1cda      	adds	r2, r3, #3
    ec22:	9310      	str	r3, [sp, #64]	; 0x40
    ec24:	db02      	blt.n	ec2c <_svfprintf_r+0x14f4>
    ec26:	9a07      	ldr	r2, [sp, #28]
    ec28:	4293      	cmp	r3, r2
    ec2a:	dd04      	ble.n	ec36 <_svfprintf_r+0x14fe>
    ec2c:	3e02      	subs	r6, #2
    ec2e:	f026 0320 	bic.w	r3, r6, #32
    ec32:	9306      	str	r3, [sp, #24]
    ec34:	e48b      	b.n	e54e <_svfprintf_r+0xe16>
    ec36:	9b10      	ldr	r3, [sp, #64]	; 0x40
    ec38:	9a12      	ldr	r2, [sp, #72]	; 0x48
    ec3a:	4293      	cmp	r3, r2
    ec3c:	f2c0 80c2 	blt.w	edc4 <_svfprintf_r+0x168c>
    ec40:	f019 0f01 	tst.w	r9, #1
    ec44:	f000 821d 	beq.w	f082 <_svfprintf_r+0x194a>
    ec48:	9a16      	ldr	r2, [sp, #88]	; 0x58
    ec4a:	4413      	add	r3, r2
    ec4c:	930b      	str	r3, [sp, #44]	; 0x2c
    ec4e:	f419 6f80 	tst.w	r9, #1024	; 0x400
    ec52:	f000 8214 	beq.w	f07e <_svfprintf_r+0x1946>
    ec56:	9b10      	ldr	r3, [sp, #64]	; 0x40
    ec58:	2667      	movs	r6, #103	; 0x67
    ec5a:	2b00      	cmp	r3, #0
    ec5c:	dc76      	bgt.n	ed4c <_svfprintf_r+0x1614>
    ec5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ec60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    ec64:	9306      	str	r3, [sp, #24]
    ec66:	2300      	movs	r3, #0
    ec68:	930f      	str	r3, [sp, #60]	; 0x3c
    ec6a:	9313      	str	r3, [sp, #76]	; 0x4c
    ec6c:	e4cf      	b.n	e60e <_svfprintf_r+0xed6>
    ec6e:	222d      	movs	r2, #45	; 0x2d
    ec70:	2300      	movs	r3, #0
    ec72:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    ec76:	9307      	str	r3, [sp, #28]
    ec78:	f7fe be68 	b.w	d94c <_svfprintf_r+0x214>
    ec7c:	990c      	ldr	r1, [sp, #48]	; 0x30
    ec7e:	980a      	ldr	r0, [sp, #40]	; 0x28
    ec80:	aa28      	add	r2, sp, #160	; 0xa0
    ec82:	f005 fd97 	bl	147b4 <__ssprint_r>
    ec86:	2800      	cmp	r0, #0
    ec88:	f47e aeb9 	bne.w	d9fe <_svfprintf_r+0x2c6>
    ec8c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    ec8e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    ec92:	f7ff bad8 	b.w	e246 <_svfprintf_r+0xb0e>
    ec96:	4659      	mov	r1, fp
    ec98:	4650      	mov	r0, sl
    ec9a:	aa28      	add	r2, sp, #160	; 0xa0
    ec9c:	f005 fd8a 	bl	147b4 <__ssprint_r>
    eca0:	2800      	cmp	r0, #0
    eca2:	f47e aeac 	bne.w	d9fe <_svfprintf_r+0x2c6>
    eca6:	7838      	ldrb	r0, [r7, #0]
    eca8:	992a      	ldr	r1, [sp, #168]	; 0xa8
    ecaa:	aa2b      	add	r2, sp, #172	; 0xac
    ecac:	4406      	add	r6, r0
    ecae:	e57a      	b.n	e7a6 <_svfprintf_r+0x106e>
    ecb0:	990c      	ldr	r1, [sp, #48]	; 0x30
    ecb2:	980a      	ldr	r0, [sp, #40]	; 0x28
    ecb4:	aa28      	add	r2, sp, #160	; 0xa0
    ecb6:	f005 fd7d 	bl	147b4 <__ssprint_r>
    ecba:	2800      	cmp	r0, #0
    ecbc:	f47e ae9f 	bne.w	d9fe <_svfprintf_r+0x2c6>
    ecc0:	9b22      	ldr	r3, [sp, #136]	; 0x88
    ecc2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    ecc4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    ecc8:	f7ff bae1 	b.w	e28e <_svfprintf_r+0xb56>
    eccc:	9907      	ldr	r1, [sp, #28]
    ecce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ecd0:	9101      	str	r1, [sp, #4]
    ecd2:	2103      	movs	r1, #3
    ecd4:	9100      	str	r1, [sp, #0]
    ecd6:	a926      	add	r1, sp, #152	; 0x98
    ecd8:	9104      	str	r1, [sp, #16]
    ecda:	a923      	add	r1, sp, #140	; 0x8c
    ecdc:	9103      	str	r1, [sp, #12]
    ecde:	a922      	add	r1, sp, #136	; 0x88
    ece0:	465a      	mov	r2, fp
    ece2:	980a      	ldr	r0, [sp, #40]	; 0x28
    ece4:	9102      	str	r1, [sp, #8]
    ece6:	f003 f9cf 	bl	12088 <_dtoa_r>
    ecea:	7803      	ldrb	r3, [r0, #0]
    ecec:	4605      	mov	r5, r0
    ecee:	2b30      	cmp	r3, #48	; 0x30
    ecf0:	f000 8216 	beq.w	f120 <_svfprintf_r+0x19e8>
    ecf4:	9b22      	ldr	r3, [sp, #136]	; 0x88
    ecf6:	9a07      	ldr	r2, [sp, #28]
    ecf8:	46b9      	mov	r9, r7
    ecfa:	4413      	add	r3, r2
    ecfc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    ecfe:	18ec      	adds	r4, r5, r3
    ed00:	4658      	mov	r0, fp
    ed02:	2200      	movs	r2, #0
    ed04:	2300      	movs	r3, #0
    ed06:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ed08:	f007 fa7c 	bl	16204 <__aeabi_dcmpeq>
    ed0c:	b108      	cbz	r0, ed12 <_svfprintf_r+0x15da>
    ed0e:	4623      	mov	r3, r4
    ed10:	e411      	b.n	e536 <_svfprintf_r+0xdfe>
    ed12:	9b26      	ldr	r3, [sp, #152]	; 0x98
    ed14:	42a3      	cmp	r3, r4
    ed16:	f4bf ac0e 	bcs.w	e536 <_svfprintf_r+0xdfe>
    ed1a:	2130      	movs	r1, #48	; 0x30
    ed1c:	1c5a      	adds	r2, r3, #1
    ed1e:	9226      	str	r2, [sp, #152]	; 0x98
    ed20:	7019      	strb	r1, [r3, #0]
    ed22:	9b26      	ldr	r3, [sp, #152]	; 0x98
    ed24:	429c      	cmp	r4, r3
    ed26:	d8f9      	bhi.n	ed1c <_svfprintf_r+0x15e4>
    ed28:	e405      	b.n	e536 <_svfprintf_r+0xdfe>
    ed2a:	9a22      	ldr	r2, [sp, #136]	; 0x88
    ed2c:	2a00      	cmp	r2, #0
    ed2e:	9210      	str	r2, [sp, #64]	; 0x40
    ed30:	f340 820e 	ble.w	f150 <_svfprintf_r+0x1a18>
    ed34:	9907      	ldr	r1, [sp, #28]
    ed36:	f009 0301 	and.w	r3, r9, #1
    ed3a:	430b      	orrs	r3, r1
    ed3c:	f040 817e 	bne.w	f03c <_svfprintf_r+0x1904>
    ed40:	2666      	movs	r6, #102	; 0x66
    ed42:	9b10      	ldr	r3, [sp, #64]	; 0x40
    ed44:	930b      	str	r3, [sp, #44]	; 0x2c
    ed46:	f419 6f80 	tst.w	r9, #1024	; 0x400
    ed4a:	d088      	beq.n	ec5e <_svfprintf_r+0x1526>
    ed4c:	9919      	ldr	r1, [sp, #100]	; 0x64
    ed4e:	780b      	ldrb	r3, [r1, #0]
    ed50:	2bff      	cmp	r3, #255	; 0xff
    ed52:	f000 8225 	beq.w	f1a0 <_svfprintf_r+0x1a68>
    ed56:	2400      	movs	r4, #0
    ed58:	9a10      	ldr	r2, [sp, #64]	; 0x40
    ed5a:	4620      	mov	r0, r4
    ed5c:	e004      	b.n	ed68 <_svfprintf_r+0x1630>
    ed5e:	3001      	adds	r0, #1
    ed60:	3101      	adds	r1, #1
    ed62:	2bff      	cmp	r3, #255	; 0xff
    ed64:	f000 8159 	beq.w	f01a <_svfprintf_r+0x18e2>
    ed68:	4293      	cmp	r3, r2
    ed6a:	f280 8156 	bge.w	f01a <_svfprintf_r+0x18e2>
    ed6e:	1ad2      	subs	r2, r2, r3
    ed70:	784b      	ldrb	r3, [r1, #1]
    ed72:	2b00      	cmp	r3, #0
    ed74:	d1f3      	bne.n	ed5e <_svfprintf_r+0x1626>
    ed76:	780b      	ldrb	r3, [r1, #0]
    ed78:	3401      	adds	r4, #1
    ed7a:	e7f2      	b.n	ed62 <_svfprintf_r+0x162a>
    ed7c:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
    ed80:	f7ff b9da 	b.w	e138 <_svfprintf_r+0xa00>
    ed84:	9b07      	ldr	r3, [sp, #28]
    ed86:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    ed8a:	940e      	str	r4, [sp, #56]	; 0x38
    ed8c:	9306      	str	r3, [sp, #24]
    ed8e:	930b      	str	r3, [sp, #44]	; 0x2c
    ed90:	9007      	str	r0, [sp, #28]
    ed92:	900f      	str	r0, [sp, #60]	; 0x3c
    ed94:	9013      	str	r0, [sp, #76]	; 0x4c
    ed96:	9010      	str	r0, [sp, #64]	; 0x40
    ed98:	f7fe bdd6 	b.w	d948 <_svfprintf_r+0x210>
    ed9c:	990c      	ldr	r1, [sp, #48]	; 0x30
    ed9e:	980a      	ldr	r0, [sp, #40]	; 0x28
    eda0:	aa28      	add	r2, sp, #160	; 0xa0
    eda2:	f005 fd07 	bl	147b4 <__ssprint_r>
    eda6:	2800      	cmp	r0, #0
    eda8:	f47e ae29 	bne.w	d9fe <_svfprintf_r+0x2c6>
    edac:	9d22      	ldr	r5, [sp, #136]	; 0x88
    edae:	9b12      	ldr	r3, [sp, #72]	; 0x48
    edb0:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    edb2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    edb6:	1b5d      	subs	r5, r3, r5
    edb8:	f7ff ba81 	b.w	e2be <_svfprintf_r+0xb86>
    edbc:	2300      	movs	r3, #0
    edbe:	9307      	str	r3, [sp, #28]
    edc0:	f7fe bd0b 	b.w	d7da <_svfprintf_r+0xa2>
    edc4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    edc6:	9a16      	ldr	r2, [sp, #88]	; 0x58
    edc8:	189a      	adds	r2, r3, r2
    edca:	9b10      	ldr	r3, [sp, #64]	; 0x40
    edcc:	920b      	str	r2, [sp, #44]	; 0x2c
    edce:	2b00      	cmp	r3, #0
    edd0:	f340 8185 	ble.w	f0de <_svfprintf_r+0x19a6>
    edd4:	2667      	movs	r6, #103	; 0x67
    edd6:	e7b6      	b.n	ed46 <_svfprintf_r+0x160e>
    edd8:	2330      	movs	r3, #48	; 0x30
    edda:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
    edde:	2358      	movs	r3, #88	; 0x58
    ede0:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
    ede4:	9b07      	ldr	r3, [sp, #28]
    ede6:	f047 0402 	orr.w	r4, r7, #2
    edea:	2b63      	cmp	r3, #99	; 0x63
    edec:	f300 80c4 	bgt.w	ef78 <_svfprintf_r+0x1840>
    edf0:	2300      	movs	r3, #0
    edf2:	ad3b      	add	r5, sp, #236	; 0xec
    edf4:	930d      	str	r3, [sp, #52]	; 0x34
    edf6:	f447 7381 	orr.w	r3, r7, #258	; 0x102
    edfa:	930f      	str	r3, [sp, #60]	; 0x3c
    edfc:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
    ee00:	4613      	mov	r3, r2
    ee02:	2b00      	cmp	r3, #0
    ee04:	4627      	mov	r7, r4
    ee06:	f2c0 8084 	blt.w	ef12 <_svfprintf_r+0x17da>
    ee0a:	930b      	str	r3, [sp, #44]	; 0x2c
    ee0c:	2300      	movs	r3, #0
    ee0e:	468b      	mov	fp, r1
    ee10:	931d      	str	r3, [sp, #116]	; 0x74
    ee12:	f026 0320 	bic.w	r3, r6, #32
    ee16:	9306      	str	r3, [sp, #24]
    ee18:	2e61      	cmp	r6, #97	; 0x61
    ee1a:	f000 8118 	beq.w	f04e <_svfprintf_r+0x1916>
    ee1e:	2e41      	cmp	r6, #65	; 0x41
    ee20:	f47f ab67 	bne.w	e4f2 <_svfprintf_r+0xdba>
    ee24:	aa22      	add	r2, sp, #136	; 0x88
    ee26:	4658      	mov	r0, fp
    ee28:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ee2a:	f005 fc0f 	bl	1464c <frexp>
    ee2e:	2200      	movs	r2, #0
    ee30:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
    ee34:	f006 ff7e 	bl	15d34 <__aeabi_dmul>
    ee38:	4602      	mov	r2, r0
    ee3a:	460b      	mov	r3, r1
    ee3c:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
    ee40:	2200      	movs	r2, #0
    ee42:	2300      	movs	r3, #0
    ee44:	f007 f9de 	bl	16204 <__aeabi_dcmpeq>
    ee48:	b108      	cbz	r0, ee4e <_svfprintf_r+0x1716>
    ee4a:	2301      	movs	r3, #1
    ee4c:	9322      	str	r3, [sp, #136]	; 0x88
    ee4e:	4bad      	ldr	r3, [pc, #692]	; (f104 <_svfprintf_r+0x19cc>)
    ee50:	930b      	str	r3, [sp, #44]	; 0x2c
    ee52:	9b07      	ldr	r3, [sp, #28]
    ee54:	e9cd a612 	strd	sl, r6, [sp, #72]	; 0x48
    ee58:	e9cd 781e 	strd	r7, r8, [sp, #120]	; 0x78
    ee5c:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
    ee60:	46ab      	mov	fp, r5
    ee62:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
    ee66:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
    ee6a:	9510      	str	r5, [sp, #64]	; 0x40
    ee6c:	e006      	b.n	ee7c <_svfprintf_r+0x1744>
    ee6e:	2200      	movs	r2, #0
    ee70:	2300      	movs	r3, #0
    ee72:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
    ee76:	f007 f9c5 	bl	16204 <__aeabi_dcmpeq>
    ee7a:	b9e8      	cbnz	r0, eeb8 <_svfprintf_r+0x1780>
    ee7c:	2200      	movs	r2, #0
    ee7e:	4ba2      	ldr	r3, [pc, #648]	; (f108 <_svfprintf_r+0x19d0>)
    ee80:	4630      	mov	r0, r6
    ee82:	4639      	mov	r1, r7
    ee84:	f006 ff56 	bl	15d34 <__aeabi_dmul>
    ee88:	460f      	mov	r7, r1
    ee8a:	4606      	mov	r6, r0
    ee8c:	f007 f9ec 	bl	16268 <__aeabi_d2iz>
    ee90:	4604      	mov	r4, r0
    ee92:	f006 fee5 	bl	15c60 <__aeabi_i2d>
    ee96:	460b      	mov	r3, r1
    ee98:	4602      	mov	r2, r0
    ee9a:	4639      	mov	r1, r7
    ee9c:	4630      	mov	r0, r6
    ee9e:	f006 fd91 	bl	159c4 <__aeabi_dsub>
    eea2:	f81a 3004 	ldrb.w	r3, [sl, r4]
    eea6:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
    eeaa:	46d8      	mov	r8, fp
    eeac:	464d      	mov	r5, r9
    eeae:	4606      	mov	r6, r0
    eeb0:	460f      	mov	r7, r1
    eeb2:	f80b 3b01 	strb.w	r3, [fp], #1
    eeb6:	d1da      	bne.n	ee6e <_svfprintf_r+0x1736>
    eeb8:	4630      	mov	r0, r6
    eeba:	4639      	mov	r1, r7
    eebc:	2200      	movs	r2, #0
    eebe:	4b93      	ldr	r3, [pc, #588]	; (f10c <_svfprintf_r+0x19d4>)
    eec0:	46a9      	mov	r9, r5
    eec2:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
    eec6:	9d10      	ldr	r5, [sp, #64]	; 0x40
    eec8:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
    eecc:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
    eed0:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
    eed4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
    eed6:	9f1e      	ldr	r7, [sp, #120]	; 0x78
    eed8:	f007 f9bc 	bl	16254 <__aeabi_dcmpgt>
    eedc:	bb80      	cbnz	r0, ef40 <_svfprintf_r+0x1808>
    eede:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    eee2:	2200      	movs	r2, #0
    eee4:	4b89      	ldr	r3, [pc, #548]	; (f10c <_svfprintf_r+0x19d4>)
    eee6:	f007 f98d 	bl	16204 <__aeabi_dcmpeq>
    eeea:	b108      	cbz	r0, eef0 <_svfprintf_r+0x17b8>
    eeec:	07e1      	lsls	r1, r4, #31
    eeee:	d427      	bmi.n	ef40 <_svfprintf_r+0x1808>
    eef0:	464b      	mov	r3, r9
    eef2:	2b00      	cmp	r3, #0
    eef4:	db06      	blt.n	ef04 <_svfprintf_r+0x17cc>
    eef6:	2230      	movs	r2, #48	; 0x30
    eef8:	3301      	adds	r3, #1
    eefa:	445b      	add	r3, fp
    eefc:	f80b 2b01 	strb.w	r2, [fp], #1
    ef00:	455b      	cmp	r3, fp
    ef02:	d1fb      	bne.n	eefc <_svfprintf_r+0x17c4>
    ef04:	ebab 0305 	sub.w	r3, fp, r5
    ef08:	46b9      	mov	r9, r7
    ef0a:	9312      	str	r3, [sp, #72]	; 0x48
    ef0c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    ef0e:	f7ff bb14 	b.w	e53a <_svfprintf_r+0xe02>
    ef12:	f026 0320 	bic.w	r3, r6, #32
    ef16:	9306      	str	r3, [sp, #24]
    ef18:	222d      	movs	r2, #45	; 0x2d
    ef1a:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
    ef1e:	469b      	mov	fp, r3
    ef20:	f104 4300 	add.w	r3, r4, #2147483648	; 0x80000000
    ef24:	921d      	str	r2, [sp, #116]	; 0x74
    ef26:	930b      	str	r3, [sp, #44]	; 0x2c
    ef28:	e776      	b.n	ee18 <_svfprintf_r+0x16e0>
    ef2a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    ef2c:	f7ff b95c 	b.w	e1e8 <_svfprintf_r+0xab0>
    ef30:	9b07      	ldr	r3, [sp, #28]
    ef32:	18ec      	adds	r4, r5, r3
    ef34:	e6e4      	b.n	ed00 <_svfprintf_r+0x15c8>
    ef36:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    ef38:	f8df 91d4 	ldr.w	r9, [pc, #468]	; f110 <_svfprintf_r+0x19d8>
    ef3c:	f7ff b827 	b.w	df8e <_svfprintf_r+0x856>
    ef40:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ef42:	9326      	str	r3, [sp, #152]	; 0x98
    ef44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ef46:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
    ef4a:	7bd9      	ldrb	r1, [r3, #15]
    ef4c:	465b      	mov	r3, fp
    ef4e:	428a      	cmp	r2, r1
    ef50:	d109      	bne.n	ef66 <_svfprintf_r+0x182e>
    ef52:	2030      	movs	r0, #48	; 0x30
    ef54:	f803 0c01 	strb.w	r0, [r3, #-1]
    ef58:	9b26      	ldr	r3, [sp, #152]	; 0x98
    ef5a:	1e5a      	subs	r2, r3, #1
    ef5c:	9226      	str	r2, [sp, #152]	; 0x98
    ef5e:	f813 2c01 	ldrb.w	r2, [r3, #-1]
    ef62:	4291      	cmp	r1, r2
    ef64:	d0f6      	beq.n	ef54 <_svfprintf_r+0x181c>
    ef66:	2a39      	cmp	r2, #57	; 0x39
    ef68:	bf0b      	itete	eq
    ef6a:	9a0b      	ldreq	r2, [sp, #44]	; 0x2c
    ef6c:	3201      	addne	r2, #1
    ef6e:	7a92      	ldrbeq	r2, [r2, #10]
    ef70:	b2d2      	uxtbne	r2, r2
    ef72:	f803 2c01 	strb.w	r2, [r3, #-1]
    ef76:	e7c5      	b.n	ef04 <_svfprintf_r+0x17cc>
    ef78:	980a      	ldr	r0, [sp, #40]	; 0x28
    ef7a:	1c59      	adds	r1, r3, #1
    ef7c:	f7fd f982 	bl	c284 <_malloc_r>
    ef80:	4605      	mov	r5, r0
    ef82:	2800      	cmp	r0, #0
    ef84:	f000 8117 	beq.w	f1b6 <_svfprintf_r+0x1a7e>
    ef88:	900d      	str	r0, [sp, #52]	; 0x34
    ef8a:	e734      	b.n	edf6 <_svfprintf_r+0x16be>
    ef8c:	2102      	movs	r1, #2
    ef8e:	9100      	str	r1, [sp, #0]
    ef90:	9907      	ldr	r1, [sp, #28]
    ef92:	465a      	mov	r2, fp
    ef94:	1c4c      	adds	r4, r1, #1
    ef96:	a926      	add	r1, sp, #152	; 0x98
    ef98:	9104      	str	r1, [sp, #16]
    ef9a:	a923      	add	r1, sp, #140	; 0x8c
    ef9c:	9103      	str	r1, [sp, #12]
    ef9e:	a922      	add	r1, sp, #136	; 0x88
    efa0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    efa2:	980a      	ldr	r0, [sp, #40]	; 0x28
    efa4:	9401      	str	r4, [sp, #4]
    efa6:	9102      	str	r1, [sp, #8]
    efa8:	f003 f86e 	bl	12088 <_dtoa_r>
    efac:	4605      	mov	r5, r0
    efae:	46b9      	mov	r9, r7
    efb0:	442c      	add	r4, r5
    efb2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    efb4:	e6a4      	b.n	ed00 <_svfprintf_r+0x15c8>
    efb6:	2330      	movs	r3, #48	; 0x30
    efb8:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
    efbc:	2378      	movs	r3, #120	; 0x78
    efbe:	e70f      	b.n	ede0 <_svfprintf_r+0x16a8>
    efc0:	4645      	mov	r5, r8
    efc2:	4688      	mov	r8, r1
    efc4:	3301      	adds	r3, #1
    efc6:	4432      	add	r2, r6
    efc8:	2b07      	cmp	r3, #7
    efca:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
    efce:	f8c8 9000 	str.w	r9, [r8]
    efd2:	f8c8 6004 	str.w	r6, [r8, #4]
    efd6:	f77f acb5 	ble.w	e944 <_svfprintf_r+0x120c>
    efda:	990c      	ldr	r1, [sp, #48]	; 0x30
    efdc:	980a      	ldr	r0, [sp, #40]	; 0x28
    efde:	aa28      	add	r2, sp, #160	; 0xa0
    efe0:	f005 fbe8 	bl	147b4 <__ssprint_r>
    efe4:	2800      	cmp	r0, #0
    efe6:	f47e ad0a 	bne.w	d9fe <_svfprintf_r+0x2c6>
    efea:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    efee:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    eff2:	e4a9      	b.n	e948 <_svfprintf_r+0x1210>
    eff4:	9b07      	ldr	r3, [sp, #28]
    eff6:	2b00      	cmp	r3, #0
    eff8:	bf08      	it	eq
    effa:	2301      	moveq	r3, #1
    effc:	9307      	str	r3, [sp, #28]
    effe:	f447 7380 	orr.w	r3, r7, #256	; 0x100
    f002:	930f      	str	r3, [sp, #60]	; 0x3c
    f004:	9b15      	ldr	r3, [sp, #84]	; 0x54
    f006:	2b00      	cmp	r3, #0
    f008:	f2c0 80b6 	blt.w	f178 <_svfprintf_r+0x1a40>
    f00c:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
    f010:	900d      	str	r0, [sp, #52]	; 0x34
    f012:	930b      	str	r3, [sp, #44]	; 0x2c
    f014:	901d      	str	r0, [sp, #116]	; 0x74
    f016:	f7ff ba73 	b.w	e500 <_svfprintf_r+0xdc8>
    f01a:	9119      	str	r1, [sp, #100]	; 0x64
    f01c:	9210      	str	r2, [sp, #64]	; 0x40
    f01e:	9013      	str	r0, [sp, #76]	; 0x4c
    f020:	940f      	str	r4, [sp, #60]	; 0x3c
    f022:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    f024:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    f026:	991c      	ldr	r1, [sp, #112]	; 0x70
    f028:	4413      	add	r3, r2
    f02a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    f02c:	fb01 2303 	mla	r3, r1, r3, r2
    f030:	930b      	str	r3, [sp, #44]	; 0x2c
    f032:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    f036:	9306      	str	r3, [sp, #24]
    f038:	f7ff bae9 	b.w	e60e <_svfprintf_r+0xed6>
    f03c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    f03e:	2666      	movs	r6, #102	; 0x66
    f040:	18d3      	adds	r3, r2, r3
    f042:	4419      	add	r1, r3
    f044:	910b      	str	r1, [sp, #44]	; 0x2c
    f046:	e67e      	b.n	ed46 <_svfprintf_r+0x160e>
    f048:	2300      	movs	r3, #0
    f04a:	930d      	str	r3, [sp, #52]	; 0x34
    f04c:	e764      	b.n	ef18 <_svfprintf_r+0x17e0>
    f04e:	aa22      	add	r2, sp, #136	; 0x88
    f050:	4658      	mov	r0, fp
    f052:	990b      	ldr	r1, [sp, #44]	; 0x2c
    f054:	f005 fafa 	bl	1464c <frexp>
    f058:	2200      	movs	r2, #0
    f05a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
    f05e:	f006 fe69 	bl	15d34 <__aeabi_dmul>
    f062:	4602      	mov	r2, r0
    f064:	460b      	mov	r3, r1
    f066:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
    f06a:	2200      	movs	r2, #0
    f06c:	2300      	movs	r3, #0
    f06e:	f007 f8c9 	bl	16204 <__aeabi_dcmpeq>
    f072:	b108      	cbz	r0, f078 <_svfprintf_r+0x1940>
    f074:	2301      	movs	r3, #1
    f076:	9322      	str	r3, [sp, #136]	; 0x88
    f078:	4b26      	ldr	r3, [pc, #152]	; (f114 <_svfprintf_r+0x19dc>)
    f07a:	930b      	str	r3, [sp, #44]	; 0x2c
    f07c:	e6e9      	b.n	ee52 <_svfprintf_r+0x171a>
    f07e:	2667      	movs	r6, #103	; 0x67
    f080:	e5ed      	b.n	ec5e <_svfprintf_r+0x1526>
    f082:	9b10      	ldr	r3, [sp, #64]	; 0x40
    f084:	930b      	str	r3, [sp, #44]	; 0x2c
    f086:	e5e2      	b.n	ec4e <_svfprintf_r+0x1516>
    f088:	9b15      	ldr	r3, [sp, #84]	; 0x54
    f08a:	2003      	movs	r0, #3
    f08c:	2b00      	cmp	r3, #0
    f08e:	bfb8      	it	lt
    f090:	222d      	movlt	r2, #45	; 0x2d
    f092:	f04f 0300 	mov.w	r3, #0
    f096:	bfa8      	it	ge
    f098:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
    f09c:	4619      	mov	r1, r3
    f09e:	930d      	str	r3, [sp, #52]	; 0x34
    f0a0:	4d1d      	ldr	r5, [pc, #116]	; (f118 <_svfprintf_r+0x19e0>)
    f0a2:	4b1e      	ldr	r3, [pc, #120]	; (f11c <_svfprintf_r+0x19e4>)
    f0a4:	bfb8      	it	lt
    f0a6:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
    f0aa:	f027 0780 	bic.w	r7, r7, #128	; 0x80
    f0ae:	9006      	str	r0, [sp, #24]
    f0b0:	f7fe bd7f 	b.w	dbb2 <_svfprintf_r+0x47a>
    f0b4:	2900      	cmp	r1, #0
    f0b6:	d144      	bne.n	f142 <_svfprintf_r+0x1a0a>
    f0b8:	2230      	movs	r2, #48	; 0x30
    f0ba:	f88d 2092 	strb.w	r2, [sp, #146]	; 0x92
    f0be:	f10d 0293 	add.w	r2, sp, #147	; 0x93
    f0c2:	3330      	adds	r3, #48	; 0x30
    f0c4:	f802 3b01 	strb.w	r3, [r2], #1
    f0c8:	ab24      	add	r3, sp, #144	; 0x90
    f0ca:	1ad3      	subs	r3, r2, r3
    f0cc:	931a      	str	r3, [sp, #104]	; 0x68
    f0ce:	f7ff ba87 	b.w	e5e0 <_svfprintf_r+0xea8>
    f0d2:	f106 020f 	add.w	r2, r6, #15
    f0d6:	2101      	movs	r1, #1
    f0d8:	b2d2      	uxtb	r2, r2
    f0da:	f7ff ba41 	b.w	e560 <_svfprintf_r+0xe28>
    f0de:	f1c3 0301 	rsb	r3, r3, #1
    f0e2:	441a      	add	r2, r3
    f0e4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
    f0e8:	2667      	movs	r6, #103	; 0x67
    f0ea:	920b      	str	r2, [sp, #44]	; 0x2c
    f0ec:	9306      	str	r3, [sp, #24]
    f0ee:	e5ba      	b.n	ec66 <_svfprintf_r+0x152e>
    f0f0:	f019 0f01 	tst.w	r9, #1
    f0f4:	f43f aa7f 	beq.w	e5f6 <_svfprintf_r+0xebe>
    f0f8:	f7ff ba79 	b.w	e5ee <_svfprintf_r+0xeb6>
    f0fc:	9829      	ldr	r0, [sp, #164]	; 0xa4
    f0fe:	f7ff bb7f 	b.w	e800 <_svfprintf_r+0x10c8>
    f102:	bf00      	nop
    f104:	0001a1e4 	.word	0x0001a1e4
    f108:	40300000 	.word	0x40300000
    f10c:	3fe00000 	.word	0x3fe00000
    f110:	0001a214 	.word	0x0001a214
    f114:	0001a1d0 	.word	0x0001a1d0
    f118:	0001a1c8 	.word	0x0001a1c8
    f11c:	0001a1cc 	.word	0x0001a1cc
    f120:	4658      	mov	r0, fp
    f122:	2200      	movs	r2, #0
    f124:	2300      	movs	r3, #0
    f126:	990b      	ldr	r1, [sp, #44]	; 0x2c
    f128:	f007 f86c 	bl	16204 <__aeabi_dcmpeq>
    f12c:	2800      	cmp	r0, #0
    f12e:	f47f ade1 	bne.w	ecf4 <_svfprintf_r+0x15bc>
    f132:	9b07      	ldr	r3, [sp, #28]
    f134:	f1c3 0301 	rsb	r3, r3, #1
    f138:	9322      	str	r3, [sp, #136]	; 0x88
    f13a:	e5dc      	b.n	ecf6 <_svfprintf_r+0x15be>
    f13c:	f8df 9098 	ldr.w	r9, [pc, #152]	; f1d8 <_svfprintf_r+0x1aa0>
    f140:	e4ad      	b.n	ea9e <_svfprintf_r+0x1366>
    f142:	f10d 0292 	add.w	r2, sp, #146	; 0x92
    f146:	e7bc      	b.n	f0c2 <_svfprintf_r+0x198a>
    f148:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    f14a:	f8df 908c 	ldr.w	r9, [pc, #140]	; f1d8 <_svfprintf_r+0x1aa0>
    f14e:	e428      	b.n	e9a2 <_svfprintf_r+0x126a>
    f150:	9a07      	ldr	r2, [sp, #28]
    f152:	f009 0901 	and.w	r9, r9, #1
    f156:	ea59 0302 	orrs.w	r3, r9, r2
    f15a:	d104      	bne.n	f166 <_svfprintf_r+0x1a2e>
    f15c:	2301      	movs	r3, #1
    f15e:	2666      	movs	r6, #102	; 0x66
    f160:	9306      	str	r3, [sp, #24]
    f162:	930b      	str	r3, [sp, #44]	; 0x2c
    f164:	e57f      	b.n	ec66 <_svfprintf_r+0x152e>
    f166:	9b16      	ldr	r3, [sp, #88]	; 0x58
    f168:	2666      	movs	r6, #102	; 0x66
    f16a:	3301      	adds	r3, #1
    f16c:	441a      	add	r2, r3
    f16e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
    f172:	920b      	str	r2, [sp, #44]	; 0x2c
    f174:	9306      	str	r3, [sp, #24]
    f176:	e576      	b.n	ec66 <_svfprintf_r+0x152e>
    f178:	900d      	str	r0, [sp, #52]	; 0x34
    f17a:	e6cd      	b.n	ef18 <_svfprintf_r+0x17e0>
    f17c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    f17e:	f89a 6001 	ldrb.w	r6, [sl, #1]
    f182:	4692      	mov	sl, r2
    f184:	f853 2b04 	ldr.w	r2, [r3], #4
    f188:	930e      	str	r3, [sp, #56]	; 0x38
    f18a:	ea42 73e2 	orr.w	r3, r2, r2, asr #31
    f18e:	9307      	str	r3, [sp, #28]
    f190:	f7fe bb21 	b.w	d7d6 <_svfprintf_r+0x9e>
    f194:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    f196:	f8df 9040 	ldr.w	r9, [pc, #64]	; f1d8 <_svfprintf_r+0x1aa0>
    f19a:	e4b1      	b.n	eb00 <_svfprintf_r+0x13c8>
    f19c:	9c07      	ldr	r4, [sp, #28]
    f19e:	e706      	b.n	efae <_svfprintf_r+0x1876>
    f1a0:	2300      	movs	r3, #0
    f1a2:	930f      	str	r3, [sp, #60]	; 0x3c
    f1a4:	9313      	str	r3, [sp, #76]	; 0x4c
    f1a6:	e73c      	b.n	f022 <_svfprintf_r+0x18ea>
    f1a8:	f8df 902c 	ldr.w	r9, [pc, #44]	; f1d8 <_svfprintf_r+0x1aa0>
    f1ac:	e70a      	b.n	efc4 <_svfprintf_r+0x188c>
    f1ae:	2302      	movs	r3, #2
    f1b0:	931a      	str	r3, [sp, #104]	; 0x68
    f1b2:	f7ff ba15 	b.w	e5e0 <_svfprintf_r+0xea8>
    f1b6:	990c      	ldr	r1, [sp, #48]	; 0x30
    f1b8:	898b      	ldrh	r3, [r1, #12]
    f1ba:	f043 0240 	orr.w	r2, r3, #64	; 0x40
    f1be:	4613      	mov	r3, r2
    f1c0:	818a      	strh	r2, [r1, #12]
    f1c2:	f7fe bc24 	b.w	da0e <_svfprintf_r+0x2d6>
    f1c6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    f1ca:	230c      	movs	r3, #12
    f1cc:	9208      	str	r2, [sp, #32]
    f1ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    f1d0:	6013      	str	r3, [r2, #0]
    f1d2:	f7fe bc23 	b.w	da1c <_svfprintf_r+0x2e4>
    f1d6:	bf00      	nop
    f1d8:	0001a214 	.word	0x0001a214

0000f1dc <write>:
    f1dc:	468c      	mov	ip, r1
    f1de:	b500      	push	{lr}
    f1e0:	4686      	mov	lr, r0
    f1e2:	4613      	mov	r3, r2
    f1e4:	4a03      	ldr	r2, [pc, #12]	; (f1f4 <write+0x18>)
    f1e6:	4671      	mov	r1, lr
    f1e8:	6810      	ldr	r0, [r2, #0]
    f1ea:	f85d eb04 	ldr.w	lr, [sp], #4
    f1ee:	4662      	mov	r2, ip
    f1f0:	f002 bdc2 	b.w	11d78 <_write_r>
    f1f4:	20000124 	.word	0x20000124

0000f1f8 <__sprint_r.part.0>:
    f1f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f1fc:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    f1fe:	4690      	mov	r8, r2
    f200:	049c      	lsls	r4, r3, #18
    f202:	d52d      	bpl.n	f260 <__sprint_r.part.0+0x68>
    f204:	6893      	ldr	r3, [r2, #8]
    f206:	6812      	ldr	r2, [r2, #0]
    f208:	b343      	cbz	r3, f25c <__sprint_r.part.0+0x64>
    f20a:	468b      	mov	fp, r1
    f20c:	4606      	mov	r6, r0
    f20e:	f102 0908 	add.w	r9, r2, #8
    f212:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
    f216:	ea5f 079a 	movs.w	r7, sl, lsr #2
    f21a:	d015      	beq.n	f248 <__sprint_r.part.0+0x50>
    f21c:	2400      	movs	r4, #0
    f21e:	3d04      	subs	r5, #4
    f220:	e001      	b.n	f226 <__sprint_r.part.0+0x2e>
    f222:	42a7      	cmp	r7, r4
    f224:	d00e      	beq.n	f244 <__sprint_r.part.0+0x4c>
    f226:	465a      	mov	r2, fp
    f228:	4630      	mov	r0, r6
    f22a:	f855 1f04 	ldr.w	r1, [r5, #4]!
    f22e:	f004 f95b 	bl	134e8 <_fputwc_r>
    f232:	1c43      	adds	r3, r0, #1
    f234:	f104 0401 	add.w	r4, r4, #1
    f238:	d1f3      	bne.n	f222 <__sprint_r.part.0+0x2a>
    f23a:	2300      	movs	r3, #0
    f23c:	e9c8 3301 	strd	r3, r3, [r8, #4]
    f240:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f244:	f8d8 3008 	ldr.w	r3, [r8, #8]
    f248:	f02a 0a03 	bic.w	sl, sl, #3
    f24c:	eba3 030a 	sub.w	r3, r3, sl
    f250:	f8c8 3008 	str.w	r3, [r8, #8]
    f254:	f109 0908 	add.w	r9, r9, #8
    f258:	2b00      	cmp	r3, #0
    f25a:	d1da      	bne.n	f212 <__sprint_r.part.0+0x1a>
    f25c:	2000      	movs	r0, #0
    f25e:	e7ec      	b.n	f23a <__sprint_r.part.0+0x42>
    f260:	f7fc fdc6 	bl	bdf0 <__sfvwrite_r>
    f264:	2300      	movs	r3, #0
    f266:	e9c8 3301 	strd	r3, r3, [r8, #4]
    f26a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f26e:	bf00      	nop

0000f270 <__sprint_r>:
    f270:	b410      	push	{r4}
    f272:	6894      	ldr	r4, [r2, #8]
    f274:	b114      	cbz	r4, f27c <__sprint_r+0xc>
    f276:	bc10      	pop	{r4}
    f278:	f7ff bfbe 	b.w	f1f8 <__sprint_r.part.0>
    f27c:	4620      	mov	r0, r4
    f27e:	6054      	str	r4, [r2, #4]
    f280:	bc10      	pop	{r4}
    f282:	4770      	bx	lr

0000f284 <_vfiprintf_r>:
    f284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f288:	b0bd      	sub	sp, #244	; 0xf4
    f28a:	461c      	mov	r4, r3
    f28c:	4617      	mov	r7, r2
    f28e:	e9cd 3005 	strd	r3, r0, [sp, #20]
    f292:	9102      	str	r1, [sp, #8]
    f294:	b118      	cbz	r0, f29e <_vfiprintf_r+0x1a>
    f296:	6b83      	ldr	r3, [r0, #56]	; 0x38
    f298:	2b00      	cmp	r3, #0
    f29a:	f000 8277 	beq.w	f78c <_vfiprintf_r+0x508>
    f29e:	9a02      	ldr	r2, [sp, #8]
    f2a0:	6e53      	ldr	r3, [r2, #100]	; 0x64
    f2a2:	07de      	lsls	r6, r3, #31
    f2a4:	f140 8184 	bpl.w	f5b0 <_vfiprintf_r+0x32c>
    f2a8:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
    f2ac:	b28a      	uxth	r2, r1
    f2ae:	0490      	lsls	r0, r2, #18
    f2b0:	d408      	bmi.n	f2c4 <_vfiprintf_r+0x40>
    f2b2:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
    f2b6:	9902      	ldr	r1, [sp, #8]
    f2b8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    f2ba:	818a      	strh	r2, [r1, #12]
    f2bc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    f2c0:	b292      	uxth	r2, r2
    f2c2:	664b      	str	r3, [r1, #100]	; 0x64
    f2c4:	0711      	lsls	r1, r2, #28
    f2c6:	f140 80ec 	bpl.w	f4a2 <_vfiprintf_r+0x21e>
    f2ca:	9b02      	ldr	r3, [sp, #8]
    f2cc:	691b      	ldr	r3, [r3, #16]
    f2ce:	2b00      	cmp	r3, #0
    f2d0:	f000 80e7 	beq.w	f4a2 <_vfiprintf_r+0x21e>
    f2d4:	f002 031a 	and.w	r3, r2, #26
    f2d8:	2b0a      	cmp	r3, #10
    f2da:	f000 80f0 	beq.w	f4be <_vfiprintf_r+0x23a>
    f2de:	ab13      	add	r3, sp, #76	; 0x4c
    f2e0:	9310      	str	r3, [sp, #64]	; 0x40
    f2e2:	2300      	movs	r3, #0
    f2e4:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
    f2e8:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
    f2ec:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
    f2f0:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f2f4:	9304      	str	r3, [sp, #16]
    f2f6:	783b      	ldrb	r3, [r7, #0]
    f2f8:	2b00      	cmp	r3, #0
    f2fa:	f000 8146 	beq.w	f58a <_vfiprintf_r+0x306>
    f2fe:	463c      	mov	r4, r7
    f300:	e004      	b.n	f30c <_vfiprintf_r+0x88>
    f302:	f814 3f01 	ldrb.w	r3, [r4, #1]!
    f306:	2b00      	cmp	r3, #0
    f308:	f000 8121 	beq.w	f54e <_vfiprintf_r+0x2ca>
    f30c:	2b25      	cmp	r3, #37	; 0x25
    f30e:	d1f8      	bne.n	f302 <_vfiprintf_r+0x7e>
    f310:	1be5      	subs	r5, r4, r7
    f312:	f040 811e 	bne.w	f552 <_vfiprintf_r+0x2ce>
    f316:	7823      	ldrb	r3, [r4, #0]
    f318:	2b00      	cmp	r3, #0
    f31a:	f000 8136 	beq.w	f58a <_vfiprintf_r+0x306>
    f31e:	f04f 0300 	mov.w	r3, #0
    f322:	2500      	movs	r5, #0
    f324:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
    f328:	f04f 082b 	mov.w	r8, #43	; 0x2b
    f32c:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f330:	7863      	ldrb	r3, [r4, #1]
    f332:	9503      	str	r5, [sp, #12]
    f334:	1c67      	adds	r7, r4, #1
    f336:	3701      	adds	r7, #1
    f338:	f1a3 0220 	sub.w	r2, r3, #32
    f33c:	2a5a      	cmp	r2, #90	; 0x5a
    f33e:	f200 8146 	bhi.w	f5ce <_vfiprintf_r+0x34a>
    f342:	e8df f012 	tbh	[pc, r2, lsl #1]
    f346:	02a1      	.short	0x02a1
    f348:	01440144 	.word	0x01440144
    f34c:	0144029d 	.word	0x0144029d
    f350:	01440144 	.word	0x01440144
    f354:	0144027c 	.word	0x0144027c
    f358:	006a0144 	.word	0x006a0144
    f35c:	01440253 	.word	0x01440253
    f360:	02af0229 	.word	0x02af0229
    f364:	02ab0144 	.word	0x02ab0144
    f368:	005b005b 	.word	0x005b005b
    f36c:	005b005b 	.word	0x005b005b
    f370:	005b005b 	.word	0x005b005b
    f374:	005b005b 	.word	0x005b005b
    f378:	0144005b 	.word	0x0144005b
    f37c:	01440144 	.word	0x01440144
    f380:	01440144 	.word	0x01440144
    f384:	01440144 	.word	0x01440144
    f388:	01440144 	.word	0x01440144
    f38c:	00780213 	.word	0x00780213
    f390:	01440144 	.word	0x01440144
    f394:	01440144 	.word	0x01440144
    f398:	01440144 	.word	0x01440144
    f39c:	01440144 	.word	0x01440144
    f3a0:	01440144 	.word	0x01440144
    f3a4:	014400d1 	.word	0x014400d1
    f3a8:	01440144 	.word	0x01440144
    f3ac:	014401f7 	.word	0x014401f7
    f3b0:	01440241 	.word	0x01440241
    f3b4:	05210144 	.word	0x05210144
    f3b8:	01440144 	.word	0x01440144
    f3bc:	01440144 	.word	0x01440144
    f3c0:	01440144 	.word	0x01440144
    f3c4:	01440144 	.word	0x01440144
    f3c8:	01440144 	.word	0x01440144
    f3cc:	007a0213 	.word	0x007a0213
    f3d0:	01440144 	.word	0x01440144
    f3d4:	02370144 	.word	0x02370144
    f3d8:	0074007a 	.word	0x0074007a
    f3dc:	022d0144 	.word	0x022d0144
    f3e0:	02690144 	.word	0x02690144
    f3e4:	025700d3 	.word	0x025700d3
    f3e8:	01440074 	.word	0x01440074
    f3ec:	007201f7 	.word	0x007201f7
    f3f0:	01440541 	.word	0x01440541
    f3f4:	05430144 	.word	0x05430144
    f3f8:	00720144 	.word	0x00720144
    f3fc:	2100      	movs	r1, #0
    f3fe:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    f402:	f817 3b01 	ldrb.w	r3, [r7], #1
    f406:	eb01 0181 	add.w	r1, r1, r1, lsl #2
    f40a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
    f40e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    f412:	2a09      	cmp	r2, #9
    f414:	d9f5      	bls.n	f402 <_vfiprintf_r+0x17e>
    f416:	9103      	str	r1, [sp, #12]
    f418:	e78e      	b.n	f338 <_vfiprintf_r+0xb4>
    f41a:	9b05      	ldr	r3, [sp, #20]
    f41c:	f853 2b04 	ldr.w	r2, [r3], #4
    f420:	2a00      	cmp	r2, #0
    f422:	9203      	str	r2, [sp, #12]
    f424:	9305      	str	r3, [sp, #20]
    f426:	f2c0 81b4 	blt.w	f792 <_vfiprintf_r+0x50e>
    f42a:	783b      	ldrb	r3, [r7, #0]
    f42c:	e783      	b.n	f336 <_vfiprintf_r+0xb2>
    f42e:	783b      	ldrb	r3, [r7, #0]
    f430:	f045 0520 	orr.w	r5, r5, #32
    f434:	e77f      	b.n	f336 <_vfiprintf_r+0xb2>
    f436:	f045 0510 	orr.w	r5, r5, #16
    f43a:	06ac      	lsls	r4, r5, #26
    f43c:	9e05      	ldr	r6, [sp, #20]
    f43e:	f140 816b 	bpl.w	f718 <_vfiprintf_r+0x494>
    f442:	3607      	adds	r6, #7
    f444:	f026 0607 	bic.w	r6, r6, #7
    f448:	4632      	mov	r2, r6
    f44a:	6873      	ldr	r3, [r6, #4]
    f44c:	f852 6b08 	ldr.w	r6, [r2], #8
    f450:	4698      	mov	r8, r3
    f452:	9205      	str	r2, [sp, #20]
    f454:	2b00      	cmp	r3, #0
    f456:	f2c0 8449 	blt.w	fcec <_vfiprintf_r+0xa68>
    f45a:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
    f45e:	f000 8531 	beq.w	fec4 <_vfiprintf_r+0xc40>
    f462:	ea56 0308 	orrs.w	r3, r6, r8
    f466:	f025 0a80 	bic.w	sl, r5, #128	; 0x80
    f46a:	f000 8425 	beq.w	fcb8 <_vfiprintf_r+0xa34>
    f46e:	2e0a      	cmp	r6, #10
    f470:	f178 0300 	sbcs.w	r3, r8, #0
    f474:	f080 84e1 	bcs.w	fe3a <_vfiprintf_r+0xbb6>
    f478:	2301      	movs	r3, #1
    f47a:	4655      	mov	r5, sl
    f47c:	3630      	adds	r6, #48	; 0x30
    f47e:	f88d 60ef 	strb.w	r6, [sp, #239]	; 0xef
    f482:	9301      	str	r3, [sp, #4]
    f484:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
    f488:	f8dd 8004 	ldr.w	r8, [sp, #4]
    f48c:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
    f490:	45d8      	cmp	r8, fp
    f492:	bfb8      	it	lt
    f494:	46d8      	movlt	r8, fp
    f496:	2b00      	cmp	r3, #0
    f498:	f000 80a8 	beq.w	f5ec <_vfiprintf_r+0x368>
    f49c:	f108 0801 	add.w	r8, r8, #1
    f4a0:	e0a4      	b.n	f5ec <_vfiprintf_r+0x368>
    f4a2:	9d02      	ldr	r5, [sp, #8]
    f4a4:	9806      	ldr	r0, [sp, #24]
    f4a6:	4629      	mov	r1, r5
    f4a8:	f002 fc7c 	bl	11da4 <__swsetup_r>
    f4ac:	2800      	cmp	r0, #0
    f4ae:	f040 8594 	bne.w	ffda <_vfiprintf_r+0xd56>
    f4b2:	89aa      	ldrh	r2, [r5, #12]
    f4b4:	f002 031a 	and.w	r3, r2, #26
    f4b8:	2b0a      	cmp	r3, #10
    f4ba:	f47f af10 	bne.w	f2de <_vfiprintf_r+0x5a>
    f4be:	9902      	ldr	r1, [sp, #8]
    f4c0:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
    f4c4:	2b00      	cmp	r3, #0
    f4c6:	f6ff af0a 	blt.w	f2de <_vfiprintf_r+0x5a>
    f4ca:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    f4cc:	07de      	lsls	r6, r3, #31
    f4ce:	d402      	bmi.n	f4d6 <_vfiprintf_r+0x252>
    f4d0:	0595      	lsls	r5, r2, #22
    f4d2:	f140 8562 	bpl.w	ff9a <_vfiprintf_r+0xd16>
    f4d6:	4623      	mov	r3, r4
    f4d8:	463a      	mov	r2, r7
    f4da:	9902      	ldr	r1, [sp, #8]
    f4dc:	9806      	ldr	r0, [sp, #24]
    f4de:	b03d      	add	sp, #244	; 0xf4
    f4e0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f4e4:	f000 bda8 	b.w	10038 <__sbprintf>
    f4e8:	f045 0510 	orr.w	r5, r5, #16
    f4ec:	f015 0820 	ands.w	r8, r5, #32
    f4f0:	f000 8103 	beq.w	f6fa <_vfiprintf_r+0x476>
    f4f4:	9e05      	ldr	r6, [sp, #20]
    f4f6:	3607      	adds	r6, #7
    f4f8:	f026 0607 	bic.w	r6, r6, #7
    f4fc:	4633      	mov	r3, r6
    f4fe:	f8d6 8004 	ldr.w	r8, [r6, #4]
    f502:	f853 6b08 	ldr.w	r6, [r3], #8
    f506:	9305      	str	r3, [sp, #20]
    f508:	2300      	movs	r3, #0
    f50a:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
    f50e:	f04f 0200 	mov.w	r2, #0
    f512:	f88d 203b 	strb.w	r2, [sp, #59]	; 0x3b
    f516:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
    f51a:	f000 81dd 	beq.w	f8d8 <_vfiprintf_r+0x654>
    f51e:	ea56 0208 	orrs.w	r2, r6, r8
    f522:	f02a 0580 	bic.w	r5, sl, #128	; 0x80
    f526:	f040 81d6 	bne.w	f8d6 <_vfiprintf_r+0x652>
    f52a:	f1bb 0f00 	cmp.w	fp, #0
    f52e:	f040 84cc 	bne.w	feca <_vfiprintf_r+0xc46>
    f532:	2b00      	cmp	r3, #0
    f534:	f040 83c5 	bne.w	fcc2 <_vfiprintf_r+0xa3e>
    f538:	f01a 0301 	ands.w	r3, sl, #1
    f53c:	9301      	str	r3, [sp, #4]
    f53e:	f000 83ec 	beq.w	fd1a <_vfiprintf_r+0xa96>
    f542:	2330      	movs	r3, #48	; 0x30
    f544:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
    f548:	f88d 30ef 	strb.w	r3, [sp, #239]	; 0xef
    f54c:	e79c      	b.n	f488 <_vfiprintf_r+0x204>
    f54e:	1be5      	subs	r5, r4, r7
    f550:	d01b      	beq.n	f58a <_vfiprintf_r+0x306>
    f552:	9b11      	ldr	r3, [sp, #68]	; 0x44
    f554:	9a12      	ldr	r2, [sp, #72]	; 0x48
    f556:	3301      	adds	r3, #1
    f558:	442a      	add	r2, r5
    f55a:	2b07      	cmp	r3, #7
    f55c:	e9c9 7500 	strd	r7, r5, [r9]
    f560:	9212      	str	r2, [sp, #72]	; 0x48
    f562:	9311      	str	r3, [sp, #68]	; 0x44
    f564:	dc05      	bgt.n	f572 <_vfiprintf_r+0x2ee>
    f566:	f109 0908 	add.w	r9, r9, #8
    f56a:	9b04      	ldr	r3, [sp, #16]
    f56c:	442b      	add	r3, r5
    f56e:	9304      	str	r3, [sp, #16]
    f570:	e6d1      	b.n	f316 <_vfiprintf_r+0x92>
    f572:	2a00      	cmp	r2, #0
    f574:	f000 839c 	beq.w	fcb0 <_vfiprintf_r+0xa2c>
    f578:	9902      	ldr	r1, [sp, #8]
    f57a:	9806      	ldr	r0, [sp, #24]
    f57c:	aa10      	add	r2, sp, #64	; 0x40
    f57e:	f7ff fe3b 	bl	f1f8 <__sprint_r.part.0>
    f582:	b940      	cbnz	r0, f596 <_vfiprintf_r+0x312>
    f584:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f588:	e7ef      	b.n	f56a <_vfiprintf_r+0x2e6>
    f58a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    f58c:	2b00      	cmp	r3, #0
    f58e:	f040 8515 	bne.w	ffbc <_vfiprintf_r+0xd38>
    f592:	2300      	movs	r3, #0
    f594:	9311      	str	r3, [sp, #68]	; 0x44
    f596:	9a02      	ldr	r2, [sp, #8]
    f598:	6e53      	ldr	r3, [r2, #100]	; 0x64
    f59a:	07d9      	lsls	r1, r3, #31
    f59c:	f140 80a2 	bpl.w	f6e4 <_vfiprintf_r+0x460>
    f5a0:	8993      	ldrh	r3, [r2, #12]
    f5a2:	065b      	lsls	r3, r3, #25
    f5a4:	f100 8525 	bmi.w	fff2 <_vfiprintf_r+0xd6e>
    f5a8:	9804      	ldr	r0, [sp, #16]
    f5aa:	b03d      	add	sp, #244	; 0xf4
    f5ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f5b0:	9b02      	ldr	r3, [sp, #8]
    f5b2:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
    f5b6:	058d      	lsls	r5, r1, #22
    f5b8:	b28a      	uxth	r2, r1
    f5ba:	f53f ae78 	bmi.w	f2ae <_vfiprintf_r+0x2a>
    f5be:	461d      	mov	r5, r3
    f5c0:	6d98      	ldr	r0, [r3, #88]	; 0x58
    f5c2:	f7fc fe45 	bl	c250 <__retarget_lock_acquire_recursive>
    f5c6:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
    f5ca:	b28a      	uxth	r2, r1
    f5cc:	e66f      	b.n	f2ae <_vfiprintf_r+0x2a>
    f5ce:	2b00      	cmp	r3, #0
    f5d0:	d0db      	beq.n	f58a <_vfiprintf_r+0x306>
    f5d2:	f04f 0801 	mov.w	r8, #1
    f5d6:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
    f5da:	f04f 0300 	mov.w	r3, #0
    f5de:	ac23      	add	r4, sp, #140	; 0x8c
    f5e0:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f5e4:	f8cd 8004 	str.w	r8, [sp, #4]
    f5e8:	f04f 0b00 	mov.w	fp, #0
    f5ec:	f015 0302 	ands.w	r3, r5, #2
    f5f0:	9307      	str	r3, [sp, #28]
    f5f2:	bf18      	it	ne
    f5f4:	f108 0802 	addne.w	r8, r8, #2
    f5f8:	f015 0384 	ands.w	r3, r5, #132	; 0x84
    f5fc:	9308      	str	r3, [sp, #32]
    f5fe:	d105      	bne.n	f60c <_vfiprintf_r+0x388>
    f600:	9b03      	ldr	r3, [sp, #12]
    f602:	eba3 0608 	sub.w	r6, r3, r8
    f606:	2e00      	cmp	r6, #0
    f608:	f300 828a 	bgt.w	fb20 <_vfiprintf_r+0x89c>
    f60c:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    f610:	1c48      	adds	r0, r1, #1
    f612:	f89d 603b 	ldrb.w	r6, [sp, #59]	; 0x3b
    f616:	b176      	cbz	r6, f636 <_vfiprintf_r+0x3b2>
    f618:	2101      	movs	r1, #1
    f61a:	3201      	adds	r2, #1
    f61c:	f10d 063b 	add.w	r6, sp, #59	; 0x3b
    f620:	2807      	cmp	r0, #7
    f622:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f626:	e9c9 6100 	strd	r6, r1, [r9]
    f62a:	f300 8258 	bgt.w	fade <_vfiprintf_r+0x85a>
    f62e:	4601      	mov	r1, r0
    f630:	f109 0908 	add.w	r9, r9, #8
    f634:	3001      	adds	r0, #1
    f636:	9b07      	ldr	r3, [sp, #28]
    f638:	b1d3      	cbz	r3, f670 <_vfiprintf_r+0x3ec>
    f63a:	2302      	movs	r3, #2
    f63c:	3202      	adds	r2, #2
    f63e:	f8c9 3004 	str.w	r3, [r9, #4]
    f642:	2807      	cmp	r0, #7
    f644:	ab0f      	add	r3, sp, #60	; 0x3c
    f646:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f64a:	f8c9 3000 	str.w	r3, [r9]
    f64e:	f340 8262 	ble.w	fb16 <_vfiprintf_r+0x892>
    f652:	2a00      	cmp	r2, #0
    f654:	f000 8327 	beq.w	fca6 <_vfiprintf_r+0xa22>
    f658:	9902      	ldr	r1, [sp, #8]
    f65a:	9806      	ldr	r0, [sp, #24]
    f65c:	aa10      	add	r2, sp, #64	; 0x40
    f65e:	f7ff fdcb 	bl	f1f8 <__sprint_r.part.0>
    f662:	2800      	cmp	r0, #0
    f664:	d197      	bne.n	f596 <_vfiprintf_r+0x312>
    f666:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    f66a:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f66e:	1c48      	adds	r0, r1, #1
    f670:	9b08      	ldr	r3, [sp, #32]
    f672:	2b80      	cmp	r3, #128	; 0x80
    f674:	f000 8171 	beq.w	f95a <_vfiprintf_r+0x6d6>
    f678:	9b01      	ldr	r3, [sp, #4]
    f67a:	ebab 0603 	sub.w	r6, fp, r3
    f67e:	2e00      	cmp	r6, #0
    f680:	f300 81cf 	bgt.w	fa22 <_vfiprintf_r+0x79e>
    f684:	9b01      	ldr	r3, [sp, #4]
    f686:	2807      	cmp	r0, #7
    f688:	441a      	add	r2, r3
    f68a:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f68e:	f8c9 4000 	str.w	r4, [r9]
    f692:	f8c9 3004 	str.w	r3, [r9, #4]
    f696:	f340 815d 	ble.w	f954 <_vfiprintf_r+0x6d0>
    f69a:	2a00      	cmp	r2, #0
    f69c:	f000 8293 	beq.w	fbc6 <_vfiprintf_r+0x942>
    f6a0:	9902      	ldr	r1, [sp, #8]
    f6a2:	9806      	ldr	r0, [sp, #24]
    f6a4:	aa10      	add	r2, sp, #64	; 0x40
    f6a6:	f7ff fda7 	bl	f1f8 <__sprint_r.part.0>
    f6aa:	2800      	cmp	r0, #0
    f6ac:	f47f af73 	bne.w	f596 <_vfiprintf_r+0x312>
    f6b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
    f6b2:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f6b6:	0768      	lsls	r0, r5, #29
    f6b8:	d505      	bpl.n	f6c6 <_vfiprintf_r+0x442>
    f6ba:	9b03      	ldr	r3, [sp, #12]
    f6bc:	eba3 0408 	sub.w	r4, r3, r8
    f6c0:	2c00      	cmp	r4, #0
    f6c2:	f300 828a 	bgt.w	fbda <_vfiprintf_r+0x956>
    f6c6:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
    f6ca:	4541      	cmp	r1, r8
    f6cc:	bfac      	ite	ge
    f6ce:	185b      	addge	r3, r3, r1
    f6d0:	4443      	addlt	r3, r8
    f6d2:	9304      	str	r3, [sp, #16]
    f6d4:	2a00      	cmp	r2, #0
    f6d6:	f040 81f3 	bne.w	fac0 <_vfiprintf_r+0x83c>
    f6da:	2300      	movs	r3, #0
    f6dc:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f6e0:	9311      	str	r3, [sp, #68]	; 0x44
    f6e2:	e608      	b.n	f2f6 <_vfiprintf_r+0x72>
    f6e4:	9b02      	ldr	r3, [sp, #8]
    f6e6:	899b      	ldrh	r3, [r3, #12]
    f6e8:	059a      	lsls	r2, r3, #22
    f6ea:	f53f af5a 	bmi.w	f5a2 <_vfiprintf_r+0x31e>
    f6ee:	9c02      	ldr	r4, [sp, #8]
    f6f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
    f6f2:	f7fc fdb5 	bl	c260 <__retarget_lock_release_recursive>
    f6f6:	89a3      	ldrh	r3, [r4, #12]
    f6f8:	e753      	b.n	f5a2 <_vfiprintf_r+0x31e>
    f6fa:	f015 0310 	ands.w	r3, r5, #16
    f6fe:	f040 8318 	bne.w	fd32 <_vfiprintf_r+0xaae>
    f702:	f015 0240 	ands.w	r2, r5, #64	; 0x40
    f706:	f000 8310 	beq.w	fd2a <_vfiprintf_r+0xaa6>
    f70a:	9e05      	ldr	r6, [sp, #20]
    f70c:	4698      	mov	r8, r3
    f70e:	f856 3b04 	ldr.w	r3, [r6], #4
    f712:	9605      	str	r6, [sp, #20]
    f714:	b29e      	uxth	r6, r3
    f716:	e6f7      	b.n	f508 <_vfiprintf_r+0x284>
    f718:	f856 3b04 	ldr.w	r3, [r6], #4
    f71c:	06e8      	lsls	r0, r5, #27
    f71e:	9605      	str	r6, [sp, #20]
    f720:	f100 8310 	bmi.w	fd44 <_vfiprintf_r+0xac0>
    f724:	0669      	lsls	r1, r5, #25
    f726:	f140 830a 	bpl.w	fd3e <_vfiprintf_r+0xaba>
    f72a:	f343 38c0 	sbfx	r8, r3, #15, #1
    f72e:	b21e      	sxth	r6, r3
    f730:	4643      	mov	r3, r8
    f732:	e68f      	b.n	f454 <_vfiprintf_r+0x1d0>
    f734:	f04f 0300 	mov.w	r3, #0
    f738:	9e05      	ldr	r6, [sp, #20]
    f73a:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f73e:	f856 4b04 	ldr.w	r4, [r6], #4
    f742:	2c00      	cmp	r4, #0
    f744:	f000 83cf 	beq.w	fee6 <_vfiprintf_r+0xc62>
    f748:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
    f74c:	f000 8341 	beq.w	fdd2 <_vfiprintf_r+0xb4e>
    f750:	465a      	mov	r2, fp
    f752:	2100      	movs	r1, #0
    f754:	4620      	mov	r0, r4
    f756:	f7fd f841 	bl	c7dc <memchr>
    f75a:	2800      	cmp	r0, #0
    f75c:	f000 8422 	beq.w	ffa4 <_vfiprintf_r+0xd20>
    f760:	1b03      	subs	r3, r0, r4
    f762:	f04f 0b00 	mov.w	fp, #0
    f766:	9605      	str	r6, [sp, #20]
    f768:	9301      	str	r3, [sp, #4]
    f76a:	e68d      	b.n	f488 <_vfiprintf_r+0x204>
    f76c:	f04f 0300 	mov.w	r3, #0
    f770:	f04f 0801 	mov.w	r8, #1
    f774:	9e05      	ldr	r6, [sp, #20]
    f776:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f77a:	f856 3b04 	ldr.w	r3, [r6], #4
    f77e:	ac23      	add	r4, sp, #140	; 0x8c
    f780:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
    f784:	9605      	str	r6, [sp, #20]
    f786:	f8cd 8004 	str.w	r8, [sp, #4]
    f78a:	e72d      	b.n	f5e8 <_vfiprintf_r+0x364>
    f78c:	f003 fd20 	bl	131d0 <__sinit>
    f790:	e585      	b.n	f29e <_vfiprintf_r+0x1a>
    f792:	9b03      	ldr	r3, [sp, #12]
    f794:	425b      	negs	r3, r3
    f796:	9303      	str	r3, [sp, #12]
    f798:	783b      	ldrb	r3, [r7, #0]
    f79a:	f045 0504 	orr.w	r5, r5, #4
    f79e:	e5ca      	b.n	f336 <_vfiprintf_r+0xb2>
    f7a0:	783b      	ldrb	r3, [r7, #0]
    f7a2:	2b6c      	cmp	r3, #108	; 0x6c
    f7a4:	bf03      	ittte	eq
    f7a6:	787b      	ldrbeq	r3, [r7, #1]
    f7a8:	f045 0520 	orreq.w	r5, r5, #32
    f7ac:	3701      	addeq	r7, #1
    f7ae:	f045 0510 	orrne.w	r5, r5, #16
    f7b2:	e5c0      	b.n	f336 <_vfiprintf_r+0xb2>
    f7b4:	783b      	ldrb	r3, [r7, #0]
    f7b6:	2b68      	cmp	r3, #104	; 0x68
    f7b8:	bf03      	ittte	eq
    f7ba:	787b      	ldrbeq	r3, [r7, #1]
    f7bc:	f445 7500 	orreq.w	r5, r5, #512	; 0x200
    f7c0:	3701      	addeq	r7, #1
    f7c2:	f045 0540 	orrne.w	r5, r5, #64	; 0x40
    f7c6:	e5b6      	b.n	f336 <_vfiprintf_r+0xb2>
    f7c8:	f045 0a10 	orr.w	sl, r5, #16
    f7cc:	f01a 0820 	ands.w	r8, sl, #32
    f7d0:	f000 827e 	beq.w	fcd0 <_vfiprintf_r+0xa4c>
    f7d4:	9e05      	ldr	r6, [sp, #20]
    f7d6:	2301      	movs	r3, #1
    f7d8:	3607      	adds	r6, #7
    f7da:	f026 0607 	bic.w	r6, r6, #7
    f7de:	4632      	mov	r2, r6
    f7e0:	f8d6 8004 	ldr.w	r8, [r6, #4]
    f7e4:	f852 6b08 	ldr.w	r6, [r2], #8
    f7e8:	9205      	str	r2, [sp, #20]
    f7ea:	e690      	b.n	f50e <_vfiprintf_r+0x28a>
    f7ec:	783b      	ldrb	r3, [r7, #0]
    f7ee:	f88d 803b 	strb.w	r8, [sp, #59]	; 0x3b
    f7f2:	e5a0      	b.n	f336 <_vfiprintf_r+0xb2>
    f7f4:	2230      	movs	r2, #48	; 0x30
    f7f6:	f88d 203c 	strb.w	r2, [sp, #60]	; 0x3c
    f7fa:	2278      	movs	r2, #120	; 0x78
    f7fc:	9b05      	ldr	r3, [sp, #20]
    f7fe:	f88d 203d 	strb.w	r2, [sp, #61]	; 0x3d
    f802:	f853 6b04 	ldr.w	r6, [r3], #4
    f806:	4abe      	ldr	r2, [pc, #760]	; (fb00 <_vfiprintf_r+0x87c>)
    f808:	9305      	str	r3, [sp, #20]
    f80a:	f04f 0800 	mov.w	r8, #0
    f80e:	2302      	movs	r3, #2
    f810:	f045 0a02 	orr.w	sl, r5, #2
    f814:	9209      	str	r2, [sp, #36]	; 0x24
    f816:	e67a      	b.n	f50e <_vfiprintf_r+0x28a>
    f818:	06ae      	lsls	r6, r5, #26
    f81a:	f100 82a4 	bmi.w	fd66 <_vfiprintf_r+0xae2>
    f81e:	06ec      	lsls	r4, r5, #27
    f820:	f100 8359 	bmi.w	fed6 <_vfiprintf_r+0xc52>
    f824:	0668      	lsls	r0, r5, #25
    f826:	f100 83b0 	bmi.w	ff8a <_vfiprintf_r+0xd06>
    f82a:	05a9      	lsls	r1, r5, #22
    f82c:	f140 8353 	bpl.w	fed6 <_vfiprintf_r+0xc52>
    f830:	9e05      	ldr	r6, [sp, #20]
    f832:	9a04      	ldr	r2, [sp, #16]
    f834:	f856 3b04 	ldr.w	r3, [r6], #4
    f838:	701a      	strb	r2, [r3, #0]
    f83a:	9605      	str	r6, [sp, #20]
    f83c:	e55b      	b.n	f2f6 <_vfiprintf_r+0x72>
    f83e:	9c06      	ldr	r4, [sp, #24]
    f840:	4620      	mov	r0, r4
    f842:	f004 f89b 	bl	1397c <_localeconv_r>
    f846:	6843      	ldr	r3, [r0, #4]
    f848:	4618      	mov	r0, r3
    f84a:	930b      	str	r3, [sp, #44]	; 0x2c
    f84c:	f7fd ff08 	bl	d660 <strlen>
    f850:	4603      	mov	r3, r0
    f852:	4620      	mov	r0, r4
    f854:	930c      	str	r3, [sp, #48]	; 0x30
    f856:	461c      	mov	r4, r3
    f858:	f004 f890 	bl	1397c <_localeconv_r>
    f85c:	6883      	ldr	r3, [r0, #8]
    f85e:	930a      	str	r3, [sp, #40]	; 0x28
    f860:	2c00      	cmp	r4, #0
    f862:	f43f ade2 	beq.w	f42a <_vfiprintf_r+0x1a6>
    f866:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    f868:	2b00      	cmp	r3, #0
    f86a:	f43f adde 	beq.w	f42a <_vfiprintf_r+0x1a6>
    f86e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    f870:	781b      	ldrb	r3, [r3, #0]
    f872:	2b00      	cmp	r3, #0
    f874:	f43f add9 	beq.w	f42a <_vfiprintf_r+0x1a6>
    f878:	783b      	ldrb	r3, [r7, #0]
    f87a:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
    f87e:	e55a      	b.n	f336 <_vfiprintf_r+0xb2>
    f880:	783b      	ldrb	r3, [r7, #0]
    f882:	f045 0501 	orr.w	r5, r5, #1
    f886:	e556      	b.n	f336 <_vfiprintf_r+0xb2>
    f888:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
    f88c:	2b00      	cmp	r3, #0
    f88e:	f47f adcc 	bne.w	f42a <_vfiprintf_r+0x1a6>
    f892:	2320      	movs	r3, #32
    f894:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f898:	783b      	ldrb	r3, [r7, #0]
    f89a:	e54c      	b.n	f336 <_vfiprintf_r+0xb2>
    f89c:	783b      	ldrb	r3, [r7, #0]
    f89e:	f045 0580 	orr.w	r5, r5, #128	; 0x80
    f8a2:	e548      	b.n	f336 <_vfiprintf_r+0xb2>
    f8a4:	4639      	mov	r1, r7
    f8a6:	f811 3b01 	ldrb.w	r3, [r1], #1
    f8aa:	2b2a      	cmp	r3, #42	; 0x2a
    f8ac:	f000 83a6 	beq.w	fffc <_vfiprintf_r+0xd78>
    f8b0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    f8b4:	2a09      	cmp	r2, #9
    f8b6:	460f      	mov	r7, r1
    f8b8:	f04f 0b00 	mov.w	fp, #0
    f8bc:	f63f ad3c 	bhi.w	f338 <_vfiprintf_r+0xb4>
    f8c0:	f817 3b01 	ldrb.w	r3, [r7], #1
    f8c4:	eb0b 0b8b 	add.w	fp, fp, fp, lsl #2
    f8c8:	eb02 0b4b 	add.w	fp, r2, fp, lsl #1
    f8cc:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    f8d0:	2a09      	cmp	r2, #9
    f8d2:	d9f5      	bls.n	f8c0 <_vfiprintf_r+0x63c>
    f8d4:	e530      	b.n	f338 <_vfiprintf_r+0xb4>
    f8d6:	46aa      	mov	sl, r5
    f8d8:	2b01      	cmp	r3, #1
    f8da:	f43f adc8 	beq.w	f46e <_vfiprintf_r+0x1ea>
    f8de:	2b02      	cmp	r3, #2
    f8e0:	ac3c      	add	r4, sp, #240	; 0xf0
    f8e2:	d112      	bne.n	f90a <_vfiprintf_r+0x686>
    f8e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
    f8e6:	f006 030f 	and.w	r3, r6, #15
    f8ea:	5cd3      	ldrb	r3, [r2, r3]
    f8ec:	0936      	lsrs	r6, r6, #4
    f8ee:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
    f8f2:	ea4f 1818 	mov.w	r8, r8, lsr #4
    f8f6:	f804 3d01 	strb.w	r3, [r4, #-1]!
    f8fa:	ea56 0308 	orrs.w	r3, r6, r8
    f8fe:	d1f2      	bne.n	f8e6 <_vfiprintf_r+0x662>
    f900:	ab3c      	add	r3, sp, #240	; 0xf0
    f902:	1b1b      	subs	r3, r3, r4
    f904:	4655      	mov	r5, sl
    f906:	9301      	str	r3, [sp, #4]
    f908:	e5be      	b.n	f488 <_vfiprintf_r+0x204>
    f90a:	f006 0307 	and.w	r3, r6, #7
    f90e:	08f6      	lsrs	r6, r6, #3
    f910:	ea46 7648 	orr.w	r6, r6, r8, lsl #29
    f914:	ea4f 08d8 	mov.w	r8, r8, lsr #3
    f918:	3330      	adds	r3, #48	; 0x30
    f91a:	ea56 0108 	orrs.w	r1, r6, r8
    f91e:	4622      	mov	r2, r4
    f920:	f804 3d01 	strb.w	r3, [r4, #-1]!
    f924:	d1f1      	bne.n	f90a <_vfiprintf_r+0x686>
    f926:	f01a 0f01 	tst.w	sl, #1
    f92a:	d0e9      	beq.n	f900 <_vfiprintf_r+0x67c>
    f92c:	2b30      	cmp	r3, #48	; 0x30
    f92e:	d0e7      	beq.n	f900 <_vfiprintf_r+0x67c>
    f930:	2330      	movs	r3, #48	; 0x30
    f932:	3a02      	subs	r2, #2
    f934:	f804 3c01 	strb.w	r3, [r4, #-1]
    f938:	ab3c      	add	r3, sp, #240	; 0xf0
    f93a:	1a9b      	subs	r3, r3, r2
    f93c:	4655      	mov	r5, sl
    f93e:	4614      	mov	r4, r2
    f940:	9301      	str	r3, [sp, #4]
    f942:	e5a1      	b.n	f488 <_vfiprintf_r+0x204>
    f944:	2301      	movs	r3, #1
    f946:	9a01      	ldr	r2, [sp, #4]
    f948:	9413      	str	r4, [sp, #76]	; 0x4c
    f94a:	9311      	str	r3, [sp, #68]	; 0x44
    f94c:	9214      	str	r2, [sp, #80]	; 0x50
    f94e:	9212      	str	r2, [sp, #72]	; 0x48
    f950:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f954:	f109 0908 	add.w	r9, r9, #8
    f958:	e6ad      	b.n	f6b6 <_vfiprintf_r+0x432>
    f95a:	9b03      	ldr	r3, [sp, #12]
    f95c:	eba3 0608 	sub.w	r6, r3, r8
    f960:	2e00      	cmp	r6, #0
    f962:	f77f ae89 	ble.w	f678 <_vfiprintf_r+0x3f4>
    f966:	2e10      	cmp	r6, #16
    f968:	f8df a198 	ldr.w	sl, [pc, #408]	; fb04 <_vfiprintf_r+0x880>
    f96c:	dd38      	ble.n	f9e0 <_vfiprintf_r+0x75c>
    f96e:	4653      	mov	r3, sl
    f970:	46cc      	mov	ip, r9
    f972:	46ba      	mov	sl, r7
    f974:	46c1      	mov	r9, r8
    f976:	9407      	str	r4, [sp, #28]
    f978:	46a8      	mov	r8, r5
    f97a:	461f      	mov	r7, r3
    f97c:	9c06      	ldr	r4, [sp, #24]
    f97e:	9d02      	ldr	r5, [sp, #8]
    f980:	e007      	b.n	f992 <_vfiprintf_r+0x70e>
    f982:	f101 0e02 	add.w	lr, r1, #2
    f986:	4601      	mov	r1, r0
    f988:	f10c 0c08 	add.w	ip, ip, #8
    f98c:	3e10      	subs	r6, #16
    f98e:	2e10      	cmp	r6, #16
    f990:	dd1e      	ble.n	f9d0 <_vfiprintf_r+0x74c>
    f992:	2310      	movs	r3, #16
    f994:	1c48      	adds	r0, r1, #1
    f996:	3210      	adds	r2, #16
    f998:	2807      	cmp	r0, #7
    f99a:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f99e:	f8cc 7000 	str.w	r7, [ip]
    f9a2:	f8cc 3004 	str.w	r3, [ip, #4]
    f9a6:	ddec      	ble.n	f982 <_vfiprintf_r+0x6fe>
    f9a8:	2a00      	cmp	r2, #0
    f9aa:	f000 8092 	beq.w	fad2 <_vfiprintf_r+0x84e>
    f9ae:	4629      	mov	r1, r5
    f9b0:	4620      	mov	r0, r4
    f9b2:	aa10      	add	r2, sp, #64	; 0x40
    f9b4:	f7ff fc20 	bl	f1f8 <__sprint_r.part.0>
    f9b8:	2800      	cmp	r0, #0
    f9ba:	f47f adec 	bne.w	f596 <_vfiprintf_r+0x312>
    f9be:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    f9c2:	3e10      	subs	r6, #16
    f9c4:	2e10      	cmp	r6, #16
    f9c6:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    f9ca:	f101 0e01 	add.w	lr, r1, #1
    f9ce:	dce0      	bgt.n	f992 <_vfiprintf_r+0x70e>
    f9d0:	463b      	mov	r3, r7
    f9d2:	4645      	mov	r5, r8
    f9d4:	4657      	mov	r7, sl
    f9d6:	46c8      	mov	r8, r9
    f9d8:	4670      	mov	r0, lr
    f9da:	46e1      	mov	r9, ip
    f9dc:	469a      	mov	sl, r3
    f9de:	9c07      	ldr	r4, [sp, #28]
    f9e0:	4432      	add	r2, r6
    f9e2:	2807      	cmp	r0, #7
    f9e4:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f9e8:	f8c9 a000 	str.w	sl, [r9]
    f9ec:	f8c9 6004 	str.w	r6, [r9, #4]
    f9f0:	f340 8196 	ble.w	fd20 <_vfiprintf_r+0xa9c>
    f9f4:	2a00      	cmp	r2, #0
    f9f6:	f000 829a 	beq.w	ff2e <_vfiprintf_r+0xcaa>
    f9fa:	9902      	ldr	r1, [sp, #8]
    f9fc:	9806      	ldr	r0, [sp, #24]
    f9fe:	aa10      	add	r2, sp, #64	; 0x40
    fa00:	f7ff fbfa 	bl	f1f8 <__sprint_r.part.0>
    fa04:	2800      	cmp	r0, #0
    fa06:	f47f adc6 	bne.w	f596 <_vfiprintf_r+0x312>
    fa0a:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    fa0e:	9b01      	ldr	r3, [sp, #4]
    fa10:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fa14:	ebab 0603 	sub.w	r6, fp, r3
    fa18:	2e00      	cmp	r6, #0
    fa1a:	f101 0001 	add.w	r0, r1, #1
    fa1e:	f77f ae31 	ble.w	f684 <_vfiprintf_r+0x400>
    fa22:	2e10      	cmp	r6, #16
    fa24:	f340 826b 	ble.w	fefe <_vfiprintf_r+0xc7a>
    fa28:	f8df a0d8 	ldr.w	sl, [pc, #216]	; fb04 <_vfiprintf_r+0x880>
    fa2c:	46cc      	mov	ip, r9
    fa2e:	4653      	mov	r3, sl
    fa30:	46c1      	mov	r9, r8
    fa32:	46ba      	mov	sl, r7
    fa34:	46a8      	mov	r8, r5
    fa36:	9407      	str	r4, [sp, #28]
    fa38:	f04f 0b10 	mov.w	fp, #16
    fa3c:	461f      	mov	r7, r3
    fa3e:	9c06      	ldr	r4, [sp, #24]
    fa40:	9d02      	ldr	r5, [sp, #8]
    fa42:	e007      	b.n	fa54 <_vfiprintf_r+0x7d0>
    fa44:	f101 0e02 	add.w	lr, r1, #2
    fa48:	4601      	mov	r1, r0
    fa4a:	f10c 0c08 	add.w	ip, ip, #8
    fa4e:	3e10      	subs	r6, #16
    fa50:	2e10      	cmp	r6, #16
    fa52:	dd19      	ble.n	fa88 <_vfiprintf_r+0x804>
    fa54:	1c48      	adds	r0, r1, #1
    fa56:	3210      	adds	r2, #16
    fa58:	2807      	cmp	r0, #7
    fa5a:	e9cc 7b00 	strd	r7, fp, [ip]
    fa5e:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    fa62:	ddef      	ble.n	fa44 <_vfiprintf_r+0x7c0>
    fa64:	b332      	cbz	r2, fab4 <_vfiprintf_r+0x830>
    fa66:	4629      	mov	r1, r5
    fa68:	4620      	mov	r0, r4
    fa6a:	aa10      	add	r2, sp, #64	; 0x40
    fa6c:	f7ff fbc4 	bl	f1f8 <__sprint_r.part.0>
    fa70:	2800      	cmp	r0, #0
    fa72:	f47f ad90 	bne.w	f596 <_vfiprintf_r+0x312>
    fa76:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    fa7a:	3e10      	subs	r6, #16
    fa7c:	2e10      	cmp	r6, #16
    fa7e:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    fa82:	f101 0e01 	add.w	lr, r1, #1
    fa86:	dce5      	bgt.n	fa54 <_vfiprintf_r+0x7d0>
    fa88:	463b      	mov	r3, r7
    fa8a:	4645      	mov	r5, r8
    fa8c:	4657      	mov	r7, sl
    fa8e:	46c8      	mov	r8, r9
    fa90:	4670      	mov	r0, lr
    fa92:	46e1      	mov	r9, ip
    fa94:	469a      	mov	sl, r3
    fa96:	9c07      	ldr	r4, [sp, #28]
    fa98:	4432      	add	r2, r6
    fa9a:	2807      	cmp	r0, #7
    fa9c:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    faa0:	f8c9 a000 	str.w	sl, [r9]
    faa4:	f8c9 6004 	str.w	r6, [r9, #4]
    faa8:	f300 80e9 	bgt.w	fc7e <_vfiprintf_r+0x9fa>
    faac:	f109 0908 	add.w	r9, r9, #8
    fab0:	3001      	adds	r0, #1
    fab2:	e5e7      	b.n	f684 <_vfiprintf_r+0x400>
    fab4:	f04f 0e01 	mov.w	lr, #1
    fab8:	4611      	mov	r1, r2
    faba:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    fabe:	e7c6      	b.n	fa4e <_vfiprintf_r+0x7ca>
    fac0:	9902      	ldr	r1, [sp, #8]
    fac2:	9806      	ldr	r0, [sp, #24]
    fac4:	aa10      	add	r2, sp, #64	; 0x40
    fac6:	f7ff fb97 	bl	f1f8 <__sprint_r.part.0>
    faca:	2800      	cmp	r0, #0
    facc:	f43f ae05 	beq.w	f6da <_vfiprintf_r+0x456>
    fad0:	e561      	b.n	f596 <_vfiprintf_r+0x312>
    fad2:	f04f 0e01 	mov.w	lr, #1
    fad6:	4611      	mov	r1, r2
    fad8:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    fadc:	e756      	b.n	f98c <_vfiprintf_r+0x708>
    fade:	2a00      	cmp	r2, #0
    fae0:	f000 80de 	beq.w	fca0 <_vfiprintf_r+0xa1c>
    fae4:	9902      	ldr	r1, [sp, #8]
    fae6:	9806      	ldr	r0, [sp, #24]
    fae8:	aa10      	add	r2, sp, #64	; 0x40
    faea:	f7ff fb85 	bl	f1f8 <__sprint_r.part.0>
    faee:	2800      	cmp	r0, #0
    faf0:	f47f ad51 	bne.w	f596 <_vfiprintf_r+0x312>
    faf4:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    faf8:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fafc:	1c48      	adds	r0, r1, #1
    fafe:	e59a      	b.n	f636 <_vfiprintf_r+0x3b2>
    fb00:	0001a1d0 	.word	0x0001a1d0
    fb04:	0001a234 	.word	0x0001a234
    fb08:	2202      	movs	r2, #2
    fb0a:	2001      	movs	r0, #1
    fb0c:	ab0f      	add	r3, sp, #60	; 0x3c
    fb0e:	9313      	str	r3, [sp, #76]	; 0x4c
    fb10:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fb14:	9214      	str	r2, [sp, #80]	; 0x50
    fb16:	4601      	mov	r1, r0
    fb18:	f109 0908 	add.w	r9, r9, #8
    fb1c:	1c48      	adds	r0, r1, #1
    fb1e:	e5a7      	b.n	f670 <_vfiprintf_r+0x3ec>
    fb20:	2e10      	cmp	r6, #16
    fb22:	f340 8245 	ble.w	ffb0 <_vfiprintf_r+0xd2c>
    fb26:	e9dd 3211 	ldrd	r3, r2, [sp, #68]	; 0x44
    fb2a:	f8df a2f0 	ldr.w	sl, [pc, #752]	; fe1c <_vfiprintf_r+0xb98>
    fb2e:	4619      	mov	r1, r3
    fb30:	4653      	mov	r3, sl
    fb32:	46cc      	mov	ip, r9
    fb34:	46ba      	mov	sl, r7
    fb36:	46c1      	mov	r9, r8
    fb38:	940d      	str	r4, [sp, #52]	; 0x34
    fb3a:	46a8      	mov	r8, r5
    fb3c:	461f      	mov	r7, r3
    fb3e:	9c06      	ldr	r4, [sp, #24]
    fb40:	9d02      	ldr	r5, [sp, #8]
    fb42:	e007      	b.n	fb54 <_vfiprintf_r+0x8d0>
    fb44:	f101 0e02 	add.w	lr, r1, #2
    fb48:	4601      	mov	r1, r0
    fb4a:	f10c 0c08 	add.w	ip, ip, #8
    fb4e:	3e10      	subs	r6, #16
    fb50:	2e10      	cmp	r6, #16
    fb52:	dd1c      	ble.n	fb8e <_vfiprintf_r+0x90a>
    fb54:	2310      	movs	r3, #16
    fb56:	1c48      	adds	r0, r1, #1
    fb58:	3210      	adds	r2, #16
    fb5a:	2807      	cmp	r0, #7
    fb5c:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    fb60:	f8cc 7000 	str.w	r7, [ip]
    fb64:	f8cc 3004 	str.w	r3, [ip, #4]
    fb68:	ddec      	ble.n	fb44 <_vfiprintf_r+0x8c0>
    fb6a:	b332      	cbz	r2, fbba <_vfiprintf_r+0x936>
    fb6c:	4629      	mov	r1, r5
    fb6e:	4620      	mov	r0, r4
    fb70:	aa10      	add	r2, sp, #64	; 0x40
    fb72:	f7ff fb41 	bl	f1f8 <__sprint_r.part.0>
    fb76:	2800      	cmp	r0, #0
    fb78:	f47f ad0d 	bne.w	f596 <_vfiprintf_r+0x312>
    fb7c:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    fb80:	3e10      	subs	r6, #16
    fb82:	2e10      	cmp	r6, #16
    fb84:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    fb88:	f101 0e01 	add.w	lr, r1, #1
    fb8c:	dce2      	bgt.n	fb54 <_vfiprintf_r+0x8d0>
    fb8e:	463b      	mov	r3, r7
    fb90:	4645      	mov	r5, r8
    fb92:	4657      	mov	r7, sl
    fb94:	46c8      	mov	r8, r9
    fb96:	4671      	mov	r1, lr
    fb98:	46e1      	mov	r9, ip
    fb9a:	469a      	mov	sl, r3
    fb9c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    fb9e:	4432      	add	r2, r6
    fba0:	2907      	cmp	r1, #7
    fba2:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
    fba6:	f8c9 a000 	str.w	sl, [r9]
    fbaa:	f8c9 6004 	str.w	r6, [r9, #4]
    fbae:	f300 80a7 	bgt.w	fd00 <_vfiprintf_r+0xa7c>
    fbb2:	f109 0908 	add.w	r9, r9, #8
    fbb6:	1c48      	adds	r0, r1, #1
    fbb8:	e52b      	b.n	f612 <_vfiprintf_r+0x38e>
    fbba:	4611      	mov	r1, r2
    fbbc:	f04f 0e01 	mov.w	lr, #1
    fbc0:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    fbc4:	e7c3      	b.n	fb4e <_vfiprintf_r+0x8ca>
    fbc6:	076c      	lsls	r4, r5, #29
    fbc8:	9211      	str	r2, [sp, #68]	; 0x44
    fbca:	d550      	bpl.n	fc6e <_vfiprintf_r+0x9ea>
    fbcc:	9b03      	ldr	r3, [sp, #12]
    fbce:	eba3 0408 	sub.w	r4, r3, r8
    fbd2:	2c00      	cmp	r4, #0
    fbd4:	dd4b      	ble.n	fc6e <_vfiprintf_r+0x9ea>
    fbd6:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fbda:	2c10      	cmp	r4, #16
    fbdc:	f340 81f8 	ble.w	ffd0 <_vfiprintf_r+0xd4c>
    fbe0:	f8df a238 	ldr.w	sl, [pc, #568]	; fe1c <_vfiprintf_r+0xb98>
    fbe4:	2510      	movs	r5, #16
    fbe6:	4653      	mov	r3, sl
    fbe8:	9911      	ldr	r1, [sp, #68]	; 0x44
    fbea:	46ba      	mov	sl, r7
    fbec:	9e06      	ldr	r6, [sp, #24]
    fbee:	461f      	mov	r7, r3
    fbf0:	f8dd b008 	ldr.w	fp, [sp, #8]
    fbf4:	e006      	b.n	fc04 <_vfiprintf_r+0x980>
    fbf6:	1c88      	adds	r0, r1, #2
    fbf8:	4619      	mov	r1, r3
    fbfa:	f109 0908 	add.w	r9, r9, #8
    fbfe:	3c10      	subs	r4, #16
    fc00:	2c10      	cmp	r4, #16
    fc02:	dd19      	ble.n	fc38 <_vfiprintf_r+0x9b4>
    fc04:	1c4b      	adds	r3, r1, #1
    fc06:	3210      	adds	r2, #16
    fc08:	2b07      	cmp	r3, #7
    fc0a:	e9c9 7500 	strd	r7, r5, [r9]
    fc0e:	e9cd 3211 	strd	r3, r2, [sp, #68]	; 0x44
    fc12:	ddf0      	ble.n	fbf6 <_vfiprintf_r+0x972>
    fc14:	b332      	cbz	r2, fc64 <_vfiprintf_r+0x9e0>
    fc16:	4659      	mov	r1, fp
    fc18:	4630      	mov	r0, r6
    fc1a:	aa10      	add	r2, sp, #64	; 0x40
    fc1c:	f7ff faec 	bl	f1f8 <__sprint_r.part.0>
    fc20:	2800      	cmp	r0, #0
    fc22:	f47f acb8 	bne.w	f596 <_vfiprintf_r+0x312>
    fc26:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    fc2a:	3c10      	subs	r4, #16
    fc2c:	2c10      	cmp	r4, #16
    fc2e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fc32:	f101 0001 	add.w	r0, r1, #1
    fc36:	dce5      	bgt.n	fc04 <_vfiprintf_r+0x980>
    fc38:	463b      	mov	r3, r7
    fc3a:	4657      	mov	r7, sl
    fc3c:	469a      	mov	sl, r3
    fc3e:	4422      	add	r2, r4
    fc40:	2807      	cmp	r0, #7
    fc42:	e9c9 a400 	strd	sl, r4, [r9]
    fc46:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    fc4a:	f77f ad3c 	ble.w	f6c6 <_vfiprintf_r+0x442>
    fc4e:	b172      	cbz	r2, fc6e <_vfiprintf_r+0x9ea>
    fc50:	9902      	ldr	r1, [sp, #8]
    fc52:	9806      	ldr	r0, [sp, #24]
    fc54:	aa10      	add	r2, sp, #64	; 0x40
    fc56:	f7ff facf 	bl	f1f8 <__sprint_r.part.0>
    fc5a:	2800      	cmp	r0, #0
    fc5c:	f47f ac9b 	bne.w	f596 <_vfiprintf_r+0x312>
    fc60:	9a12      	ldr	r2, [sp, #72]	; 0x48
    fc62:	e530      	b.n	f6c6 <_vfiprintf_r+0x442>
    fc64:	2001      	movs	r0, #1
    fc66:	4611      	mov	r1, r2
    fc68:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fc6c:	e7c7      	b.n	fbfe <_vfiprintf_r+0x97a>
    fc6e:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
    fc72:	4542      	cmp	r2, r8
    fc74:	bfac      	ite	ge
    fc76:	189b      	addge	r3, r3, r2
    fc78:	4443      	addlt	r3, r8
    fc7a:	9304      	str	r3, [sp, #16]
    fc7c:	e52d      	b.n	f6da <_vfiprintf_r+0x456>
    fc7e:	2a00      	cmp	r2, #0
    fc80:	f43f ae60 	beq.w	f944 <_vfiprintf_r+0x6c0>
    fc84:	9902      	ldr	r1, [sp, #8]
    fc86:	9806      	ldr	r0, [sp, #24]
    fc88:	aa10      	add	r2, sp, #64	; 0x40
    fc8a:	f7ff fab5 	bl	f1f8 <__sprint_r.part.0>
    fc8e:	2800      	cmp	r0, #0
    fc90:	f47f ac81 	bne.w	f596 <_vfiprintf_r+0x312>
    fc94:	9811      	ldr	r0, [sp, #68]	; 0x44
    fc96:	9a12      	ldr	r2, [sp, #72]	; 0x48
    fc98:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fc9c:	3001      	adds	r0, #1
    fc9e:	e4f1      	b.n	f684 <_vfiprintf_r+0x400>
    fca0:	9b07      	ldr	r3, [sp, #28]
    fca2:	2b00      	cmp	r3, #0
    fca4:	d169      	bne.n	fd7a <_vfiprintf_r+0xaf6>
    fca6:	2001      	movs	r0, #1
    fca8:	4611      	mov	r1, r2
    fcaa:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fcae:	e4df      	b.n	f670 <_vfiprintf_r+0x3ec>
    fcb0:	9211      	str	r2, [sp, #68]	; 0x44
    fcb2:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fcb6:	e458      	b.n	f56a <_vfiprintf_r+0x2e6>
    fcb8:	f1bb 0f00 	cmp.w	fp, #0
    fcbc:	f47f abdc 	bne.w	f478 <_vfiprintf_r+0x1f4>
    fcc0:	4655      	mov	r5, sl
    fcc2:	f04f 0b00 	mov.w	fp, #0
    fcc6:	ac3c      	add	r4, sp, #240	; 0xf0
    fcc8:	f8cd b004 	str.w	fp, [sp, #4]
    fccc:	f7ff bbdc 	b.w	f488 <_vfiprintf_r+0x204>
    fcd0:	f01a 0310 	ands.w	r3, sl, #16
    fcd4:	d140      	bne.n	fd58 <_vfiprintf_r+0xad4>
    fcd6:	f01a 0240 	ands.w	r2, sl, #64	; 0x40
    fcda:	d039      	beq.n	fd50 <_vfiprintf_r+0xacc>
    fcdc:	9e05      	ldr	r6, [sp, #20]
    fcde:	4698      	mov	r8, r3
    fce0:	f856 2b04 	ldr.w	r2, [r6], #4
    fce4:	2301      	movs	r3, #1
    fce6:	9605      	str	r6, [sp, #20]
    fce8:	b296      	uxth	r6, r2
    fcea:	e410      	b.n	f50e <_vfiprintf_r+0x28a>
    fcec:	232d      	movs	r3, #45	; 0x2d
    fcee:	4276      	negs	r6, r6
    fcf0:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    fcf4:	46aa      	mov	sl, r5
    fcf6:	f04f 0301 	mov.w	r3, #1
    fcfa:	eb68 0848 	sbc.w	r8, r8, r8, lsl #1
    fcfe:	e40a      	b.n	f516 <_vfiprintf_r+0x292>
    fd00:	2a00      	cmp	r2, #0
    fd02:	d06f      	beq.n	fde4 <_vfiprintf_r+0xb60>
    fd04:	9902      	ldr	r1, [sp, #8]
    fd06:	9806      	ldr	r0, [sp, #24]
    fd08:	aa10      	add	r2, sp, #64	; 0x40
    fd0a:	f7ff fa75 	bl	f1f8 <__sprint_r.part.0>
    fd0e:	2800      	cmp	r0, #0
    fd10:	f47f ac41 	bne.w	f596 <_vfiprintf_r+0x312>
    fd14:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fd18:	e478      	b.n	f60c <_vfiprintf_r+0x388>
    fd1a:	ac3c      	add	r4, sp, #240	; 0xf0
    fd1c:	f7ff bbb4 	b.w	f488 <_vfiprintf_r+0x204>
    fd20:	4601      	mov	r1, r0
    fd22:	f109 0908 	add.w	r9, r9, #8
    fd26:	3001      	adds	r0, #1
    fd28:	e4a6      	b.n	f678 <_vfiprintf_r+0x3f4>
    fd2a:	f415 7800 	ands.w	r8, r5, #512	; 0x200
    fd2e:	f040 811d 	bne.w	ff6c <_vfiprintf_r+0xce8>
    fd32:	9b05      	ldr	r3, [sp, #20]
    fd34:	f853 6b04 	ldr.w	r6, [r3], #4
    fd38:	9305      	str	r3, [sp, #20]
    fd3a:	f7ff bbe5 	b.w	f508 <_vfiprintf_r+0x284>
    fd3e:	05aa      	lsls	r2, r5, #22
    fd40:	f100 810e 	bmi.w	ff60 <_vfiprintf_r+0xcdc>
    fd44:	ea4f 78e3 	mov.w	r8, r3, asr #31
    fd48:	461e      	mov	r6, r3
    fd4a:	4643      	mov	r3, r8
    fd4c:	f7ff bb82 	b.w	f454 <_vfiprintf_r+0x1d0>
    fd50:	f41a 7800 	ands.w	r8, sl, #512	; 0x200
    fd54:	f040 80fb 	bne.w	ff4e <_vfiprintf_r+0xcca>
    fd58:	9a05      	ldr	r2, [sp, #20]
    fd5a:	2301      	movs	r3, #1
    fd5c:	f852 6b04 	ldr.w	r6, [r2], #4
    fd60:	9205      	str	r2, [sp, #20]
    fd62:	f7ff bbd4 	b.w	f50e <_vfiprintf_r+0x28a>
    fd66:	e9dd 1604 	ldrd	r1, r6, [sp, #16]
    fd6a:	f856 2b04 	ldr.w	r2, [r6], #4
    fd6e:	17cb      	asrs	r3, r1, #31
    fd70:	e9c2 1300 	strd	r1, r3, [r2]
    fd74:	9605      	str	r6, [sp, #20]
    fd76:	f7ff babe 	b.w	f2f6 <_vfiprintf_r+0x72>
    fd7a:	2202      	movs	r2, #2
    fd7c:	ab0f      	add	r3, sp, #60	; 0x3c
    fd7e:	9313      	str	r3, [sp, #76]	; 0x4c
    fd80:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fd84:	9214      	str	r2, [sp, #80]	; 0x50
    fd86:	e6c7      	b.n	fb18 <_vfiprintf_r+0x894>
    fd88:	4a25      	ldr	r2, [pc, #148]	; (fe20 <_vfiprintf_r+0xb9c>)
    fd8a:	9209      	str	r2, [sp, #36]	; 0x24
    fd8c:	f015 0820 	ands.w	r8, r5, #32
    fd90:	d036      	beq.n	fe00 <_vfiprintf_r+0xb7c>
    fd92:	9e05      	ldr	r6, [sp, #20]
    fd94:	3607      	adds	r6, #7
    fd96:	f026 0607 	bic.w	r6, r6, #7
    fd9a:	4632      	mov	r2, r6
    fd9c:	f8d6 8004 	ldr.w	r8, [r6, #4]
    fda0:	f852 6b08 	ldr.w	r6, [r2], #8
    fda4:	9205      	str	r2, [sp, #20]
    fda6:	07ea      	lsls	r2, r5, #31
    fda8:	d509      	bpl.n	fdbe <_vfiprintf_r+0xb3a>
    fdaa:	ea56 0208 	orrs.w	r2, r6, r8
    fdae:	d006      	beq.n	fdbe <_vfiprintf_r+0xb3a>
    fdb0:	f88d 303d 	strb.w	r3, [sp, #61]	; 0x3d
    fdb4:	2330      	movs	r3, #48	; 0x30
    fdb6:	f045 0502 	orr.w	r5, r5, #2
    fdba:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
    fdbe:	2302      	movs	r3, #2
    fdc0:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
    fdc4:	f7ff bba3 	b.w	f50e <_vfiprintf_r+0x28a>
    fdc8:	46aa      	mov	sl, r5
    fdca:	e4ff      	b.n	f7cc <_vfiprintf_r+0x548>
    fdcc:	4a15      	ldr	r2, [pc, #84]	; (fe24 <_vfiprintf_r+0xba0>)
    fdce:	9209      	str	r2, [sp, #36]	; 0x24
    fdd0:	e7dc      	b.n	fd8c <_vfiprintf_r+0xb08>
    fdd2:	4620      	mov	r0, r4
    fdd4:	9605      	str	r6, [sp, #20]
    fdd6:	f7fd fc43 	bl	d660 <strlen>
    fdda:	f04f 0b00 	mov.w	fp, #0
    fdde:	9001      	str	r0, [sp, #4]
    fde0:	f7ff bb52 	b.w	f488 <_vfiprintf_r+0x204>
    fde4:	f89d 103b 	ldrb.w	r1, [sp, #59]	; 0x3b
    fde8:	2900      	cmp	r1, #0
    fdea:	f000 80a6 	beq.w	ff3a <_vfiprintf_r+0xcb6>
    fdee:	2001      	movs	r0, #1
    fdf0:	f10d 023b 	add.w	r2, sp, #59	; 0x3b
    fdf4:	9213      	str	r2, [sp, #76]	; 0x4c
    fdf6:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fdfa:	4602      	mov	r2, r0
    fdfc:	9014      	str	r0, [sp, #80]	; 0x50
    fdfe:	e416      	b.n	f62e <_vfiprintf_r+0x3aa>
    fe00:	f015 0210 	ands.w	r2, r5, #16
    fe04:	d114      	bne.n	fe30 <_vfiprintf_r+0xbac>
    fe06:	f015 0140 	ands.w	r1, r5, #64	; 0x40
    fe0a:	d00d      	beq.n	fe28 <_vfiprintf_r+0xba4>
    fe0c:	9e05      	ldr	r6, [sp, #20]
    fe0e:	4690      	mov	r8, r2
    fe10:	f856 2b04 	ldr.w	r2, [r6], #4
    fe14:	9605      	str	r6, [sp, #20]
    fe16:	b296      	uxth	r6, r2
    fe18:	e7c5      	b.n	fda6 <_vfiprintf_r+0xb22>
    fe1a:	bf00      	nop
    fe1c:	0001a224 	.word	0x0001a224
    fe20:	0001a1e4 	.word	0x0001a1e4
    fe24:	0001a1d0 	.word	0x0001a1d0
    fe28:	f415 7800 	ands.w	r8, r5, #512	; 0x200
    fe2c:	f040 80a6 	bne.w	ff7c <_vfiprintf_r+0xcf8>
    fe30:	9a05      	ldr	r2, [sp, #20]
    fe32:	f852 6b04 	ldr.w	r6, [r2], #4
    fe36:	9205      	str	r2, [sp, #20]
    fe38:	e7b5      	b.n	fda6 <_vfiprintf_r+0xb22>
    fe3a:	2300      	movs	r3, #0
    fe3c:	f40a 6280 	and.w	r2, sl, #1024	; 0x400
    fe40:	f8cd b004 	str.w	fp, [sp, #4]
    fe44:	f8cd a01c 	str.w	sl, [sp, #28]
    fe48:	46bb      	mov	fp, r7
    fe4a:	f8cd 9020 	str.w	r9, [sp, #32]
    fe4e:	469a      	mov	sl, r3
    fe50:	4617      	mov	r7, r2
    fe52:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    fe56:	ad3c      	add	r5, sp, #240	; 0xf0
    fe58:	e00c      	b.n	fe74 <_vfiprintf_r+0xbf0>
    fe5a:	2300      	movs	r3, #0
    fe5c:	4630      	mov	r0, r6
    fe5e:	4641      	mov	r1, r8
    fe60:	220a      	movs	r2, #10
    fe62:	f006 fa29 	bl	162b8 <__aeabi_uldivmod>
    fe66:	2e0a      	cmp	r6, #10
    fe68:	f178 0300 	sbcs.w	r3, r8, #0
    fe6c:	d31b      	bcc.n	fea6 <_vfiprintf_r+0xc22>
    fe6e:	4606      	mov	r6, r0
    fe70:	4688      	mov	r8, r1
    fe72:	4625      	mov	r5, r4
    fe74:	4630      	mov	r0, r6
    fe76:	4641      	mov	r1, r8
    fe78:	220a      	movs	r2, #10
    fe7a:	2300      	movs	r3, #0
    fe7c:	f006 fa1c 	bl	162b8 <__aeabi_uldivmod>
    fe80:	3230      	adds	r2, #48	; 0x30
    fe82:	1e6c      	subs	r4, r5, #1
    fe84:	f10a 0a01 	add.w	sl, sl, #1
    fe88:	f805 2c01 	strb.w	r2, [r5, #-1]
    fe8c:	2f00      	cmp	r7, #0
    fe8e:	d0e4      	beq.n	fe5a <_vfiprintf_r+0xbd6>
    fe90:	f899 3000 	ldrb.w	r3, [r9]
    fe94:	4553      	cmp	r3, sl
    fe96:	d1e0      	bne.n	fe5a <_vfiprintf_r+0xbd6>
    fe98:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
    fe9c:	d0dd      	beq.n	fe5a <_vfiprintf_r+0xbd6>
    fe9e:	2e0a      	cmp	r6, #10
    fea0:	f178 0300 	sbcs.w	r3, r8, #0
    fea4:	d22e      	bcs.n	ff04 <_vfiprintf_r+0xc80>
    fea6:	f8dd a01c 	ldr.w	sl, [sp, #28]
    feaa:	ab3c      	add	r3, sp, #240	; 0xf0
    feac:	1b1b      	subs	r3, r3, r4
    feae:	465f      	mov	r7, fp
    feb0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    feb4:	f8dd b004 	ldr.w	fp, [sp, #4]
    feb8:	4655      	mov	r5, sl
    feba:	f8dd 9020 	ldr.w	r9, [sp, #32]
    febe:	9301      	str	r3, [sp, #4]
    fec0:	f7ff bae2 	b.w	f488 <_vfiprintf_r+0x204>
    fec4:	46aa      	mov	sl, r5
    fec6:	f7ff bad2 	b.w	f46e <_vfiprintf_r+0x1ea>
    feca:	2b01      	cmp	r3, #1
    fecc:	46aa      	mov	sl, r5
    fece:	f47f ad06 	bne.w	f8de <_vfiprintf_r+0x65a>
    fed2:	f7ff bad1 	b.w	f478 <_vfiprintf_r+0x1f4>
    fed6:	9e05      	ldr	r6, [sp, #20]
    fed8:	9a04      	ldr	r2, [sp, #16]
    feda:	f856 3b04 	ldr.w	r3, [r6], #4
    fede:	601a      	str	r2, [r3, #0]
    fee0:	9605      	str	r6, [sp, #20]
    fee2:	f7ff ba08 	b.w	f2f6 <_vfiprintf_r+0x72>
    fee6:	f1bb 0f06 	cmp.w	fp, #6
    feea:	46d8      	mov	r8, fp
    feec:	bf28      	it	cs
    feee:	f04f 0806 	movcs.w	r8, #6
    fef2:	4c47      	ldr	r4, [pc, #284]	; (10010 <_vfiprintf_r+0xd8c>)
    fef4:	f8cd 8004 	str.w	r8, [sp, #4]
    fef8:	9605      	str	r6, [sp, #20]
    fefa:	f7ff bb75 	b.w	f5e8 <_vfiprintf_r+0x364>
    fefe:	f8df a114 	ldr.w	sl, [pc, #276]	; 10014 <_vfiprintf_r+0xd90>
    ff02:	e5c9      	b.n	fa98 <_vfiprintf_r+0x814>
    ff04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ff06:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ff08:	1ae4      	subs	r4, r4, r3
    ff0a:	461a      	mov	r2, r3
    ff0c:	4620      	mov	r0, r4
    ff0e:	f004 fc1d 	bl	1474c <strncpy>
    ff12:	f899 3001 	ldrb.w	r3, [r9, #1]
    ff16:	b10b      	cbz	r3, ff1c <_vfiprintf_r+0xc98>
    ff18:	f109 0901 	add.w	r9, r9, #1
    ff1c:	4630      	mov	r0, r6
    ff1e:	4641      	mov	r1, r8
    ff20:	220a      	movs	r2, #10
    ff22:	2300      	movs	r3, #0
    ff24:	f04f 0a00 	mov.w	sl, #0
    ff28:	f006 f9c6 	bl	162b8 <__aeabi_uldivmod>
    ff2c:	e79f      	b.n	fe6e <_vfiprintf_r+0xbea>
    ff2e:	2001      	movs	r0, #1
    ff30:	4611      	mov	r1, r2
    ff32:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    ff36:	f7ff bb9f 	b.w	f678 <_vfiprintf_r+0x3f4>
    ff3a:	9b07      	ldr	r3, [sp, #28]
    ff3c:	2b00      	cmp	r3, #0
    ff3e:	f47f ade3 	bne.w	fb08 <_vfiprintf_r+0x884>
    ff42:	4611      	mov	r1, r2
    ff44:	2001      	movs	r0, #1
    ff46:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    ff4a:	f7ff bb95 	b.w	f678 <_vfiprintf_r+0x3f4>
    ff4e:	9e05      	ldr	r6, [sp, #20]
    ff50:	4690      	mov	r8, r2
    ff52:	f856 2b04 	ldr.w	r2, [r6], #4
    ff56:	2301      	movs	r3, #1
    ff58:	9605      	str	r6, [sp, #20]
    ff5a:	b2d6      	uxtb	r6, r2
    ff5c:	f7ff bad7 	b.w	f50e <_vfiprintf_r+0x28a>
    ff60:	f343 18c0 	sbfx	r8, r3, #7, #1
    ff64:	b25e      	sxtb	r6, r3
    ff66:	4643      	mov	r3, r8
    ff68:	f7ff ba74 	b.w	f454 <_vfiprintf_r+0x1d0>
    ff6c:	9e05      	ldr	r6, [sp, #20]
    ff6e:	4690      	mov	r8, r2
    ff70:	f856 3b04 	ldr.w	r3, [r6], #4
    ff74:	9605      	str	r6, [sp, #20]
    ff76:	b2de      	uxtb	r6, r3
    ff78:	f7ff bac6 	b.w	f508 <_vfiprintf_r+0x284>
    ff7c:	9e05      	ldr	r6, [sp, #20]
    ff7e:	4688      	mov	r8, r1
    ff80:	f856 2b04 	ldr.w	r2, [r6], #4
    ff84:	9605      	str	r6, [sp, #20]
    ff86:	b2d6      	uxtb	r6, r2
    ff88:	e70d      	b.n	fda6 <_vfiprintf_r+0xb22>
    ff8a:	9e05      	ldr	r6, [sp, #20]
    ff8c:	9a04      	ldr	r2, [sp, #16]
    ff8e:	f856 3b04 	ldr.w	r3, [r6], #4
    ff92:	801a      	strh	r2, [r3, #0]
    ff94:	9605      	str	r6, [sp, #20]
    ff96:	f7ff b9ae 	b.w	f2f6 <_vfiprintf_r+0x72>
    ff9a:	6d88      	ldr	r0, [r1, #88]	; 0x58
    ff9c:	f7fc f960 	bl	c260 <__retarget_lock_release_recursive>
    ffa0:	f7ff ba99 	b.w	f4d6 <_vfiprintf_r+0x252>
    ffa4:	f8cd b004 	str.w	fp, [sp, #4]
    ffa8:	9605      	str	r6, [sp, #20]
    ffaa:	4683      	mov	fp, r0
    ffac:	f7ff ba6c 	b.w	f488 <_vfiprintf_r+0x204>
    ffb0:	9911      	ldr	r1, [sp, #68]	; 0x44
    ffb2:	9a12      	ldr	r2, [sp, #72]	; 0x48
    ffb4:	f8df a060 	ldr.w	sl, [pc, #96]	; 10018 <_vfiprintf_r+0xd94>
    ffb8:	3101      	adds	r1, #1
    ffba:	e5f0      	b.n	fb9e <_vfiprintf_r+0x91a>
    ffbc:	9902      	ldr	r1, [sp, #8]
    ffbe:	9806      	ldr	r0, [sp, #24]
    ffc0:	aa10      	add	r2, sp, #64	; 0x40
    ffc2:	f7ff f919 	bl	f1f8 <__sprint_r.part.0>
    ffc6:	2800      	cmp	r0, #0
    ffc8:	f43f aae3 	beq.w	f592 <_vfiprintf_r+0x30e>
    ffcc:	f7ff bae3 	b.w	f596 <_vfiprintf_r+0x312>
    ffd0:	9811      	ldr	r0, [sp, #68]	; 0x44
    ffd2:	f8df a044 	ldr.w	sl, [pc, #68]	; 10018 <_vfiprintf_r+0xd94>
    ffd6:	3001      	adds	r0, #1
    ffd8:	e631      	b.n	fc3e <_vfiprintf_r+0x9ba>
    ffda:	9b02      	ldr	r3, [sp, #8]
    ffdc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    ffde:	07db      	lsls	r3, r3, #31
    ffe0:	d407      	bmi.n	fff2 <_vfiprintf_r+0xd6e>
    ffe2:	9b02      	ldr	r3, [sp, #8]
    ffe4:	899b      	ldrh	r3, [r3, #12]
    ffe6:	059f      	lsls	r7, r3, #22
    ffe8:	d403      	bmi.n	fff2 <_vfiprintf_r+0xd6e>
    ffea:	9b02      	ldr	r3, [sp, #8]
    ffec:	6d98      	ldr	r0, [r3, #88]	; 0x58
    ffee:	f7fc f937 	bl	c260 <__retarget_lock_release_recursive>
    fff2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    fff6:	9304      	str	r3, [sp, #16]
    fff8:	f7ff bad6 	b.w	f5a8 <_vfiprintf_r+0x324>
    fffc:	9a05      	ldr	r2, [sp, #20]
    fffe:	787b      	ldrb	r3, [r7, #1]
   10000:	460f      	mov	r7, r1
   10002:	f852 1b04 	ldr.w	r1, [r2], #4
   10006:	9205      	str	r2, [sp, #20]
   10008:	ea41 7be1 	orr.w	fp, r1, r1, asr #31
   1000c:	f7ff b993 	b.w	f336 <_vfiprintf_r+0xb2>
   10010:	0001a1f8 	.word	0x0001a1f8
   10014:	0001a234 	.word	0x0001a234
   10018:	0001a224 	.word	0x0001a224

0001001c <vfiprintf>:
   1001c:	468c      	mov	ip, r1
   1001e:	b500      	push	{lr}
   10020:	4686      	mov	lr, r0
   10022:	4613      	mov	r3, r2
   10024:	4a03      	ldr	r2, [pc, #12]	; (10034 <vfiprintf+0x18>)
   10026:	4671      	mov	r1, lr
   10028:	6810      	ldr	r0, [r2, #0]
   1002a:	f85d eb04 	ldr.w	lr, [sp], #4
   1002e:	4662      	mov	r2, ip
   10030:	f7ff b928 	b.w	f284 <_vfiprintf_r>
   10034:	20000124 	.word	0x20000124

00010038 <__sbprintf>:
   10038:	b5f0      	push	{r4, r5, r6, r7, lr}
   1003a:	f44f 6c80 	mov.w	ip, #1024	; 0x400
   1003e:	4615      	mov	r5, r2
   10040:	2400      	movs	r4, #0
   10042:	4606      	mov	r6, r0
   10044:	461f      	mov	r7, r3
   10046:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
   1004a:	ab1a      	add	r3, sp, #104	; 0x68
   1004c:	9300      	str	r3, [sp, #0]
   1004e:	9304      	str	r3, [sp, #16]
   10050:	898b      	ldrh	r3, [r1, #12]
   10052:	a816      	add	r0, sp, #88	; 0x58
   10054:	f023 0302 	bic.w	r3, r3, #2
   10058:	f8ad 300c 	strh.w	r3, [sp, #12]
   1005c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   1005e:	9406      	str	r4, [sp, #24]
   10060:	9319      	str	r3, [sp, #100]	; 0x64
   10062:	89cb      	ldrh	r3, [r1, #14]
   10064:	460c      	mov	r4, r1
   10066:	f8ad 300e 	strh.w	r3, [sp, #14]
   1006a:	69cb      	ldr	r3, [r1, #28]
   1006c:	f8cd c008 	str.w	ip, [sp, #8]
   10070:	9307      	str	r3, [sp, #28]
   10072:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   10074:	f8cd c014 	str.w	ip, [sp, #20]
   10078:	9309      	str	r3, [sp, #36]	; 0x24
   1007a:	f7fc f8e1 	bl	c240 <__retarget_lock_init_recursive>
   1007e:	462a      	mov	r2, r5
   10080:	463b      	mov	r3, r7
   10082:	4669      	mov	r1, sp
   10084:	4630      	mov	r0, r6
   10086:	f7ff f8fd 	bl	f284 <_vfiprintf_r>
   1008a:	1e05      	subs	r5, r0, #0
   1008c:	db07      	blt.n	1009e <__sbprintf+0x66>
   1008e:	4669      	mov	r1, sp
   10090:	4630      	mov	r0, r6
   10092:	f002 fff1 	bl	13078 <_fflush_r>
   10096:	2800      	cmp	r0, #0
   10098:	bf18      	it	ne
   1009a:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
   1009e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   100a2:	065b      	lsls	r3, r3, #25
   100a4:	d503      	bpl.n	100ae <__sbprintf+0x76>
   100a6:	89a3      	ldrh	r3, [r4, #12]
   100a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   100ac:	81a3      	strh	r3, [r4, #12]
   100ae:	9816      	ldr	r0, [sp, #88]	; 0x58
   100b0:	f7fc f8ca 	bl	c248 <__retarget_lock_close_recursive>
   100b4:	4628      	mov	r0, r5
   100b6:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
   100ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

000100bc <_vfprintf_r>:
   100bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   100c0:	b0d5      	sub	sp, #340	; 0x154
   100c2:	461c      	mov	r4, r3
   100c4:	4691      	mov	r9, r2
   100c6:	9107      	str	r1, [sp, #28]
   100c8:	4605      	mov	r5, r0
   100ca:	9009      	str	r0, [sp, #36]	; 0x24
   100cc:	f003 fc56 	bl	1397c <_localeconv_r>
   100d0:	6802      	ldr	r2, [r0, #0]
   100d2:	940e      	str	r4, [sp, #56]	; 0x38
   100d4:	4610      	mov	r0, r2
   100d6:	9217      	str	r2, [sp, #92]	; 0x5c
   100d8:	f7fd fac2 	bl	d660 <strlen>
   100dc:	9016      	str	r0, [sp, #88]	; 0x58
   100de:	b11d      	cbz	r5, 100e8 <_vfprintf_r+0x2c>
   100e0:	6bab      	ldr	r3, [r5, #56]	; 0x38
   100e2:	2b00      	cmp	r3, #0
   100e4:	f000 821d 	beq.w	10522 <_vfprintf_r+0x466>
   100e8:	9a07      	ldr	r2, [sp, #28]
   100ea:	6e53      	ldr	r3, [r2, #100]	; 0x64
   100ec:	07dd      	lsls	r5, r3, #31
   100ee:	f140 812d 	bpl.w	1034c <_vfprintf_r+0x290>
   100f2:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
   100f6:	b291      	uxth	r1, r2
   100f8:	048f      	lsls	r7, r1, #18
   100fa:	d409      	bmi.n	10110 <_vfprintf_r+0x54>
   100fc:	9b07      	ldr	r3, [sp, #28]
   100fe:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   10102:	819a      	strh	r2, [r3, #12]
   10104:	b291      	uxth	r1, r2
   10106:	461a      	mov	r2, r3
   10108:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   1010a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   1010e:	6653      	str	r3, [r2, #100]	; 0x64
   10110:	070e      	lsls	r6, r1, #28
   10112:	f140 80c0 	bpl.w	10296 <_vfprintf_r+0x1da>
   10116:	9b07      	ldr	r3, [sp, #28]
   10118:	691b      	ldr	r3, [r3, #16]
   1011a:	2b00      	cmp	r3, #0
   1011c:	f000 80bb 	beq.w	10296 <_vfprintf_r+0x1da>
   10120:	f001 031a 	and.w	r3, r1, #26
   10124:	2b0a      	cmp	r3, #10
   10126:	f000 80c4 	beq.w	102b2 <_vfprintf_r+0x1f6>
   1012a:	2400      	movs	r4, #0
   1012c:	ab2b      	add	r3, sp, #172	; 0xac
   1012e:	4622      	mov	r2, r4
   10130:	4698      	mov	r8, r3
   10132:	464d      	mov	r5, r9
   10134:	e9cd 4429 	strd	r4, r4, [sp, #164]	; 0xa4
   10138:	9328      	str	r3, [sp, #160]	; 0xa0
   1013a:	9412      	str	r4, [sp, #72]	; 0x48
   1013c:	2300      	movs	r3, #0
   1013e:	2400      	movs	r4, #0
   10140:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   10144:	782b      	ldrb	r3, [r5, #0]
   10146:	e9cd 2219 	strd	r2, r2, [sp, #100]	; 0x64
   1014a:	e9cd 221b 	strd	r2, r2, [sp, #108]	; 0x6c
   1014e:	9218      	str	r2, [sp, #96]	; 0x60
   10150:	920b      	str	r2, [sp, #44]	; 0x2c
   10152:	2b00      	cmp	r3, #0
   10154:	f000 818f 	beq.w	10476 <_vfprintf_r+0x3ba>
   10158:	46aa      	mov	sl, r5
   1015a:	e004      	b.n	10166 <_vfprintf_r+0xaa>
   1015c:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
   10160:	2b00      	cmp	r3, #0
   10162:	f000 80bb 	beq.w	102dc <_vfprintf_r+0x220>
   10166:	2b25      	cmp	r3, #37	; 0x25
   10168:	d1f8      	bne.n	1015c <_vfprintf_r+0xa0>
   1016a:	ebba 0605 	subs.w	r6, sl, r5
   1016e:	f040 80b9 	bne.w	102e4 <_vfprintf_r+0x228>
   10172:	f89a 3000 	ldrb.w	r3, [sl]
   10176:	2b00      	cmp	r3, #0
   10178:	f000 817d 	beq.w	10476 <_vfprintf_r+0x3ba>
   1017c:	2300      	movs	r3, #0
   1017e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   10182:	f04f 092b 	mov.w	r9, #43	; 0x2b
   10186:	2420      	movs	r4, #32
   10188:	461f      	mov	r7, r3
   1018a:	f89a 6001 	ldrb.w	r6, [sl, #1]
   1018e:	9208      	str	r2, [sp, #32]
   10190:	f10a 0a01 	add.w	sl, sl, #1
   10194:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   10198:	930a      	str	r3, [sp, #40]	; 0x28
   1019a:	f10a 0a01 	add.w	sl, sl, #1
   1019e:	f1a6 0320 	sub.w	r3, r6, #32
   101a2:	2b5a      	cmp	r3, #90	; 0x5a
   101a4:	f200 80e1 	bhi.w	1036a <_vfprintf_r+0x2ae>
   101a8:	e8df f013 	tbh	[pc, r3, lsl #1]
   101ac:	00df0305 	.word	0x00df0305
   101b0:	030000df 	.word	0x030000df
   101b4:	00df00df 	.word	0x00df00df
   101b8:	02de00df 	.word	0x02de00df
   101bc:	00df00df 	.word	0x00df00df
   101c0:	026e006a 	.word	0x026e006a
   101c4:	025500df 	.word	0x025500df
   101c8:	00df0278 	.word	0x00df0278
   101cc:	005b0273 	.word	0x005b0273
   101d0:	005b005b 	.word	0x005b005b
   101d4:	005b005b 	.word	0x005b005b
   101d8:	005b005b 	.word	0x005b005b
   101dc:	005b005b 	.word	0x005b005b
   101e0:	00df00df 	.word	0x00df00df
   101e4:	00df00df 	.word	0x00df00df
   101e8:	00df00df 	.word	0x00df00df
   101ec:	016c00df 	.word	0x016c00df
   101f0:	01ea00df 	.word	0x01ea00df
   101f4:	016c01c4 	.word	0x016c01c4
   101f8:	016c016c 	.word	0x016c016c
   101fc:	00df00df 	.word	0x00df00df
   10200:	00df00df 	.word	0x00df00df
   10204:	00df02d0 	.word	0x00df02d0
   10208:	022300df 	.word	0x022300df
   1020c:	00df00df 	.word	0x00df00df
   10210:	01f800df 	.word	0x01f800df
   10214:	029200df 	.word	0x029200df
   10218:	00df00df 	.word	0x00df00df
   1021c:	00df0787 	.word	0x00df0787
   10220:	00df00df 	.word	0x00df00df
   10224:	00df00df 	.word	0x00df00df
   10228:	00df00df 	.word	0x00df00df
   1022c:	016c00df 	.word	0x016c00df
   10230:	01ea00df 	.word	0x01ea00df
   10234:	016c01c6 	.word	0x016c01c6
   10238:	016c016c 	.word	0x016c016c
   1023c:	01c602b6 	.word	0x01c602b6
   10240:	00df01bf 	.word	0x00df01bf
   10244:	00df02c3 	.word	0x00df02c3
   10248:	0225025a 	.word	0x0225025a
   1024c:	01bf02a4 	.word	0x01bf02a4
   10250:	01f800df 	.word	0x01f800df
   10254:	07840072 	.word	0x07840072
   10258:	00df00df 	.word	0x00df00df
   1025c:	00df0765 	.word	0x00df0765
   10260:	0072      	.short	0x0072
   10262:	2200      	movs	r2, #0
   10264:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   10268:	f81a 6b01 	ldrb.w	r6, [sl], #1
   1026c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   10270:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   10274:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   10278:	2b09      	cmp	r3, #9
   1027a:	d9f5      	bls.n	10268 <_vfprintf_r+0x1ac>
   1027c:	920a      	str	r2, [sp, #40]	; 0x28
   1027e:	e78e      	b.n	1019e <_vfprintf_r+0xe2>
   10280:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10282:	f853 2b04 	ldr.w	r2, [r3], #4
   10286:	2a00      	cmp	r2, #0
   10288:	920a      	str	r2, [sp, #40]	; 0x28
   1028a:	930e      	str	r3, [sp, #56]	; 0x38
   1028c:	f2c0 81e0 	blt.w	10650 <_vfprintf_r+0x594>
   10290:	f89a 6000 	ldrb.w	r6, [sl]
   10294:	e781      	b.n	1019a <_vfprintf_r+0xde>
   10296:	9d07      	ldr	r5, [sp, #28]
   10298:	9809      	ldr	r0, [sp, #36]	; 0x24
   1029a:	4629      	mov	r1, r5
   1029c:	f001 fd82 	bl	11da4 <__swsetup_r>
   102a0:	2800      	cmp	r0, #0
   102a2:	f041 834d 	bne.w	11940 <_vfprintf_r+0x1884>
   102a6:	89a9      	ldrh	r1, [r5, #12]
   102a8:	f001 031a 	and.w	r3, r1, #26
   102ac:	2b0a      	cmp	r3, #10
   102ae:	f47f af3c 	bne.w	1012a <_vfprintf_r+0x6e>
   102b2:	9a07      	ldr	r2, [sp, #28]
   102b4:	f9b2 300e 	ldrsh.w	r3, [r2, #14]
   102b8:	2b00      	cmp	r3, #0
   102ba:	f6ff af36 	blt.w	1012a <_vfprintf_r+0x6e>
   102be:	6e53      	ldr	r3, [r2, #100]	; 0x64
   102c0:	07d8      	lsls	r0, r3, #31
   102c2:	d402      	bmi.n	102ca <_vfprintf_r+0x20e>
   102c4:	0589      	lsls	r1, r1, #22
   102c6:	f141 8148 	bpl.w	1155a <_vfprintf_r+0x149e>
   102ca:	4623      	mov	r3, r4
   102cc:	464a      	mov	r2, r9
   102ce:	9907      	ldr	r1, [sp, #28]
   102d0:	9809      	ldr	r0, [sp, #36]	; 0x24
   102d2:	b055      	add	sp, #340	; 0x154
   102d4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   102d8:	f001 bcaa 	b.w	11c30 <__sbprintf>
   102dc:	ebba 0605 	subs.w	r6, sl, r5
   102e0:	f000 80c9 	beq.w	10476 <_vfprintf_r+0x3ba>
   102e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   102e6:	e9c8 5600 	strd	r5, r6, [r8]
   102ea:	4433      	add	r3, r6
   102ec:	932a      	str	r3, [sp, #168]	; 0xa8
   102ee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   102f0:	3301      	adds	r3, #1
   102f2:	2b07      	cmp	r3, #7
   102f4:	9329      	str	r3, [sp, #164]	; 0xa4
   102f6:	dc05      	bgt.n	10304 <_vfprintf_r+0x248>
   102f8:	f108 0808 	add.w	r8, r8, #8
   102fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   102fe:	4433      	add	r3, r6
   10300:	930b      	str	r3, [sp, #44]	; 0x2c
   10302:	e736      	b.n	10172 <_vfprintf_r+0xb6>
   10304:	9907      	ldr	r1, [sp, #28]
   10306:	9809      	ldr	r0, [sp, #36]	; 0x24
   10308:	aa28      	add	r2, sp, #160	; 0xa0
   1030a:	f7fe ffb1 	bl	f270 <__sprint_r>
   1030e:	b980      	cbnz	r0, 10332 <_vfprintf_r+0x276>
   10310:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10314:	e7f2      	b.n	102fc <_vfprintf_r+0x240>
   10316:	9907      	ldr	r1, [sp, #28]
   10318:	9809      	ldr	r0, [sp, #36]	; 0x24
   1031a:	aa28      	add	r2, sp, #160	; 0xa0
   1031c:	f7fe ffa8 	bl	f270 <__sprint_r>
   10320:	2800      	cmp	r0, #0
   10322:	f000 8099 	beq.w	10458 <_vfprintf_r+0x39c>
   10326:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   10328:	b11b      	cbz	r3, 10332 <_vfprintf_r+0x276>
   1032a:	4619      	mov	r1, r3
   1032c:	9809      	ldr	r0, [sp, #36]	; 0x24
   1032e:	f003 f999 	bl	13664 <_free_r>
   10332:	9a07      	ldr	r2, [sp, #28]
   10334:	6e53      	ldr	r3, [r2, #100]	; 0x64
   10336:	07d9      	lsls	r1, r3, #31
   10338:	f140 80e8 	bpl.w	1050c <_vfprintf_r+0x450>
   1033c:	8993      	ldrh	r3, [r2, #12]
   1033e:	065b      	lsls	r3, r3, #25
   10340:	f101 830a 	bmi.w	11958 <_vfprintf_r+0x189c>
   10344:	980b      	ldr	r0, [sp, #44]	; 0x2c
   10346:	b055      	add	sp, #340	; 0x154
   10348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1034c:	9b07      	ldr	r3, [sp, #28]
   1034e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
   10352:	0590      	lsls	r0, r2, #22
   10354:	b291      	uxth	r1, r2
   10356:	f53f aecf 	bmi.w	100f8 <_vfprintf_r+0x3c>
   1035a:	461d      	mov	r5, r3
   1035c:	6d98      	ldr	r0, [r3, #88]	; 0x58
   1035e:	f7fb ff77 	bl	c250 <__retarget_lock_acquire_recursive>
   10362:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   10366:	b291      	uxth	r1, r2
   10368:	e6c6      	b.n	100f8 <_vfprintf_r+0x3c>
   1036a:	2e00      	cmp	r6, #0
   1036c:	f000 8083 	beq.w	10476 <_vfprintf_r+0x3ba>
   10370:	2301      	movs	r3, #1
   10372:	2200      	movs	r2, #0
   10374:	f88d 60ec 	strb.w	r6, [sp, #236]	; 0xec
   10378:	9306      	str	r3, [sp, #24]
   1037a:	ad3b      	add	r5, sp, #236	; 0xec
   1037c:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   10380:	930c      	str	r3, [sp, #48]	; 0x30
   10382:	920d      	str	r2, [sp, #52]	; 0x34
   10384:	9208      	str	r2, [sp, #32]
   10386:	920f      	str	r2, [sp, #60]	; 0x3c
   10388:	9213      	str	r2, [sp, #76]	; 0x4c
   1038a:	9210      	str	r2, [sp, #64]	; 0x40
   1038c:	f017 0302 	ands.w	r3, r7, #2
   10390:	d002      	beq.n	10398 <_vfprintf_r+0x2dc>
   10392:	9906      	ldr	r1, [sp, #24]
   10394:	3102      	adds	r1, #2
   10396:	9106      	str	r1, [sp, #24]
   10398:	f017 0b84 	ands.w	fp, r7, #132	; 0x84
   1039c:	d107      	bne.n	103ae <_vfprintf_r+0x2f2>
   1039e:	990a      	ldr	r1, [sp, #40]	; 0x28
   103a0:	9806      	ldr	r0, [sp, #24]
   103a2:	eba1 0900 	sub.w	r9, r1, r0
   103a6:	f1b9 0f00 	cmp.w	r9, #0
   103aa:	f300 8390 	bgt.w	10ace <_vfprintf_r+0xa12>
   103ae:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   103b0:	b182      	cbz	r2, 103d4 <_vfprintf_r+0x318>
   103b2:	2201      	movs	r2, #1
   103b4:	f8c8 2004 	str.w	r2, [r8, #4]
   103b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   103ba:	3401      	adds	r4, #1
   103bc:	3201      	adds	r2, #1
   103be:	f10d 0183 	add.w	r1, sp, #131	; 0x83
   103c2:	2a07      	cmp	r2, #7
   103c4:	942a      	str	r4, [sp, #168]	; 0xa8
   103c6:	9229      	str	r2, [sp, #164]	; 0xa4
   103c8:	f8c8 1000 	str.w	r1, [r8]
   103cc:	f300 83d8 	bgt.w	10b80 <_vfprintf_r+0xac4>
   103d0:	f108 0808 	add.w	r8, r8, #8
   103d4:	b17b      	cbz	r3, 103f6 <_vfprintf_r+0x33a>
   103d6:	2302      	movs	r3, #2
   103d8:	f8c8 3004 	str.w	r3, [r8, #4]
   103dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   103de:	3402      	adds	r4, #2
   103e0:	3301      	adds	r3, #1
   103e2:	aa21      	add	r2, sp, #132	; 0x84
   103e4:	2b07      	cmp	r3, #7
   103e6:	942a      	str	r4, [sp, #168]	; 0xa8
   103e8:	9329      	str	r3, [sp, #164]	; 0xa4
   103ea:	f8c8 2000 	str.w	r2, [r8]
   103ee:	f300 83d5 	bgt.w	10b9c <_vfprintf_r+0xae0>
   103f2:	f108 0808 	add.w	r8, r8, #8
   103f6:	f1bb 0f80 	cmp.w	fp, #128	; 0x80
   103fa:	f000 8288 	beq.w	1090e <_vfprintf_r+0x852>
   103fe:	9b08      	ldr	r3, [sp, #32]
   10400:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   10402:	eba3 0b02 	sub.w	fp, r3, r2
   10406:	f1bb 0f00 	cmp.w	fp, #0
   1040a:	f300 82cb 	bgt.w	109a4 <_vfprintf_r+0x8e8>
   1040e:	05fb      	lsls	r3, r7, #23
   10410:	f100 821f 	bmi.w	10852 <_vfprintf_r+0x796>
   10414:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   10416:	f8c8 5000 	str.w	r5, [r8]
   1041a:	441c      	add	r4, r3
   1041c:	f8c8 3004 	str.w	r3, [r8, #4]
   10420:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10422:	942a      	str	r4, [sp, #168]	; 0xa8
   10424:	3301      	adds	r3, #1
   10426:	2b07      	cmp	r3, #7
   10428:	9329      	str	r3, [sp, #164]	; 0xa4
   1042a:	f300 8344 	bgt.w	10ab6 <_vfprintf_r+0x9fa>
   1042e:	f108 0808 	add.w	r8, r8, #8
   10432:	0778      	lsls	r0, r7, #29
   10434:	d505      	bpl.n	10442 <_vfprintf_r+0x386>
   10436:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   10438:	9a06      	ldr	r2, [sp, #24]
   1043a:	1a9d      	subs	r5, r3, r2
   1043c:	2d00      	cmp	r5, #0
   1043e:	f300 83b9 	bgt.w	10bb4 <_vfprintf_r+0xaf8>
   10442:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   10446:	9906      	ldr	r1, [sp, #24]
   10448:	428a      	cmp	r2, r1
   1044a:	bfac      	ite	ge
   1044c:	189b      	addge	r3, r3, r2
   1044e:	185b      	addlt	r3, r3, r1
   10450:	930b      	str	r3, [sp, #44]	; 0x2c
   10452:	2c00      	cmp	r4, #0
   10454:	f47f af5f 	bne.w	10316 <_vfprintf_r+0x25a>
   10458:	2300      	movs	r3, #0
   1045a:	9329      	str	r3, [sp, #164]	; 0xa4
   1045c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1045e:	b11b      	cbz	r3, 10468 <_vfprintf_r+0x3ac>
   10460:	990d      	ldr	r1, [sp, #52]	; 0x34
   10462:	9809      	ldr	r0, [sp, #36]	; 0x24
   10464:	f003 f8fe 	bl	13664 <_free_r>
   10468:	4655      	mov	r5, sl
   1046a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   1046e:	782b      	ldrb	r3, [r5, #0]
   10470:	2b00      	cmp	r3, #0
   10472:	f47f ae71 	bne.w	10158 <_vfprintf_r+0x9c>
   10476:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   10478:	2b00      	cmp	r3, #0
   1047a:	f041 8210 	bne.w	1189e <_vfprintf_r+0x17e2>
   1047e:	2300      	movs	r3, #0
   10480:	9329      	str	r3, [sp, #164]	; 0xa4
   10482:	e756      	b.n	10332 <_vfprintf_r+0x276>
   10484:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10486:	3307      	adds	r3, #7
   10488:	f023 0207 	bic.w	r2, r3, #7
   1048c:	e8f2 3402 	ldrd	r3, r4, [r2], #8
   10490:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   10494:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   10498:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
   1049c:	4699      	mov	r9, r3
   1049e:	4618      	mov	r0, r3
   104a0:	920e      	str	r2, [sp, #56]	; 0x38
   104a2:	4621      	mov	r1, r4
   104a4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   104a8:	4bab      	ldr	r3, [pc, #684]	; (10758 <_vfprintf_r+0x69c>)
   104aa:	f7fa f8e5 	bl	a678 <__aeabi_dcmpun>
   104ae:	2800      	cmp	r0, #0
   104b0:	f040 8518 	bne.w	10ee4 <_vfprintf_r+0xe28>
   104b4:	4648      	mov	r0, r9
   104b6:	4621      	mov	r1, r4
   104b8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   104bc:	4ba6      	ldr	r3, [pc, #664]	; (10758 <_vfprintf_r+0x69c>)
   104be:	f005 feb5 	bl	1622c <__aeabi_dcmple>
   104c2:	2800      	cmp	r0, #0
   104c4:	f040 850e 	bne.w	10ee4 <_vfprintf_r+0xe28>
   104c8:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   104cc:	2200      	movs	r2, #0
   104ce:	2300      	movs	r3, #0
   104d0:	f005 fea2 	bl	16218 <__aeabi_dcmplt>
   104d4:	2800      	cmp	r0, #0
   104d6:	f040 8765 	bne.w	113a4 <_vfprintf_r+0x12e8>
   104da:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   104de:	2100      	movs	r1, #0
   104e0:	2003      	movs	r0, #3
   104e2:	4d9e      	ldr	r5, [pc, #632]	; (1075c <_vfprintf_r+0x6a0>)
   104e4:	4b9e      	ldr	r3, [pc, #632]	; (10760 <_vfprintf_r+0x6a4>)
   104e6:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   104ea:	910d      	str	r1, [sp, #52]	; 0x34
   104ec:	9006      	str	r0, [sp, #24]
   104ee:	2e47      	cmp	r6, #71	; 0x47
   104f0:	bfc8      	it	gt
   104f2:	461d      	movgt	r5, r3
   104f4:	9108      	str	r1, [sp, #32]
   104f6:	900c      	str	r0, [sp, #48]	; 0x30
   104f8:	910f      	str	r1, [sp, #60]	; 0x3c
   104fa:	9113      	str	r1, [sp, #76]	; 0x4c
   104fc:	9110      	str	r1, [sp, #64]	; 0x40
   104fe:	2a00      	cmp	r2, #0
   10500:	f43f af44 	beq.w	1038c <_vfprintf_r+0x2d0>
   10504:	9b06      	ldr	r3, [sp, #24]
   10506:	3301      	adds	r3, #1
   10508:	9306      	str	r3, [sp, #24]
   1050a:	e73f      	b.n	1038c <_vfprintf_r+0x2d0>
   1050c:	9b07      	ldr	r3, [sp, #28]
   1050e:	899b      	ldrh	r3, [r3, #12]
   10510:	059a      	lsls	r2, r3, #22
   10512:	f53f af14 	bmi.w	1033e <_vfprintf_r+0x282>
   10516:	9c07      	ldr	r4, [sp, #28]
   10518:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1051a:	f7fb fea1 	bl	c260 <__retarget_lock_release_recursive>
   1051e:	89a3      	ldrh	r3, [r4, #12]
   10520:	e70d      	b.n	1033e <_vfprintf_r+0x282>
   10522:	9809      	ldr	r0, [sp, #36]	; 0x24
   10524:	f002 fe54 	bl	131d0 <__sinit>
   10528:	e5de      	b.n	100e8 <_vfprintf_r+0x2c>
   1052a:	f89a 6000 	ldrb.w	r6, [sl]
   1052e:	f047 0720 	orr.w	r7, r7, #32
   10532:	e632      	b.n	1019a <_vfprintf_r+0xde>
   10534:	f047 0710 	orr.w	r7, r7, #16
   10538:	06ba      	lsls	r2, r7, #26
   1053a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1053c:	f140 846e 	bpl.w	10e1c <_vfprintf_r+0xd60>
   10540:	3307      	adds	r3, #7
   10542:	f023 0307 	bic.w	r3, r3, #7
   10546:	461a      	mov	r2, r3
   10548:	685b      	ldr	r3, [r3, #4]
   1054a:	f852 4b08 	ldr.w	r4, [r2], #8
   1054e:	4699      	mov	r9, r3
   10550:	920e      	str	r2, [sp, #56]	; 0x38
   10552:	2b00      	cmp	r3, #0
   10554:	f2c0 846f 	blt.w	10e36 <_vfprintf_r+0xd7a>
   10558:	9b08      	ldr	r3, [sp, #32]
   1055a:	3301      	adds	r3, #1
   1055c:	f000 82fb 	beq.w	10b56 <_vfprintf_r+0xa9a>
   10560:	ea54 0309 	orrs.w	r3, r4, r9
   10564:	f027 0b80 	bic.w	fp, r7, #128	; 0x80
   10568:	f040 82f6 	bne.w	10b58 <_vfprintf_r+0xa9c>
   1056c:	9b08      	ldr	r3, [sp, #32]
   1056e:	2b00      	cmp	r3, #0
   10570:	f040 82f7 	bne.w	10b62 <_vfprintf_r+0xaa6>
   10574:	465f      	mov	r7, fp
   10576:	2300      	movs	r3, #0
   10578:	ad54      	add	r5, sp, #336	; 0x150
   1057a:	9308      	str	r3, [sp, #32]
   1057c:	930c      	str	r3, [sp, #48]	; 0x30
   1057e:	e13d      	b.n	107fc <_vfprintf_r+0x740>
   10580:	2001      	movs	r0, #1
   10582:	2200      	movs	r2, #0
   10584:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10586:	9006      	str	r0, [sp, #24]
   10588:	f853 1b04 	ldr.w	r1, [r3], #4
   1058c:	ad3b      	add	r5, sp, #236	; 0xec
   1058e:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   10592:	f88d 10ec 	strb.w	r1, [sp, #236]	; 0xec
   10596:	930e      	str	r3, [sp, #56]	; 0x38
   10598:	900c      	str	r0, [sp, #48]	; 0x30
   1059a:	e6f2      	b.n	10382 <_vfprintf_r+0x2c6>
   1059c:	f04f 0900 	mov.w	r9, #0
   105a0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   105a2:	9b08      	ldr	r3, [sp, #32]
   105a4:	f854 5b04 	ldr.w	r5, [r4], #4
   105a8:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   105ac:	2d00      	cmp	r5, #0
   105ae:	f000 85a1 	beq.w	110f4 <_vfprintf_r+0x1038>
   105b2:	1c5a      	adds	r2, r3, #1
   105b4:	f000 86a5 	beq.w	11302 <_vfprintf_r+0x1246>
   105b8:	461a      	mov	r2, r3
   105ba:	4649      	mov	r1, r9
   105bc:	4628      	mov	r0, r5
   105be:	f7fc f90d 	bl	c7dc <memchr>
   105c2:	900d      	str	r0, [sp, #52]	; 0x34
   105c4:	2800      	cmp	r0, #0
   105c6:	f001 8150 	beq.w	1186a <_vfprintf_r+0x17ae>
   105ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   105cc:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   105d0:	1b5b      	subs	r3, r3, r5
   105d2:	930c      	str	r3, [sp, #48]	; 0x30
   105d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   105d8:	f8cd 9020 	str.w	r9, [sp, #32]
   105dc:	940e      	str	r4, [sp, #56]	; 0x38
   105de:	9306      	str	r3, [sp, #24]
   105e0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
   105e4:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   105e8:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   105ec:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   105f0:	e785      	b.n	104fe <_vfprintf_r+0x442>
   105f2:	f047 0710 	orr.w	r7, r7, #16
   105f6:	f017 0920 	ands.w	r9, r7, #32
   105fa:	f000 83f2 	beq.w	10de2 <_vfprintf_r+0xd26>
   105fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10600:	3307      	adds	r3, #7
   10602:	f023 0307 	bic.w	r3, r3, #7
   10606:	f8d3 9004 	ldr.w	r9, [r3, #4]
   1060a:	f853 4b08 	ldr.w	r4, [r3], #8
   1060e:	930e      	str	r3, [sp, #56]	; 0x38
   10610:	2300      	movs	r3, #0
   10612:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   10616:	2200      	movs	r2, #0
   10618:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   1061c:	9a08      	ldr	r2, [sp, #32]
   1061e:	1c51      	adds	r1, r2, #1
   10620:	f000 80d4 	beq.w	107cc <_vfprintf_r+0x710>
   10624:	ea54 0109 	orrs.w	r1, r4, r9
   10628:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
   1062c:	f040 80cd 	bne.w	107ca <_vfprintf_r+0x70e>
   10630:	2a00      	cmp	r2, #0
   10632:	f040 8604 	bne.w	1123e <_vfprintf_r+0x1182>
   10636:	2b00      	cmp	r3, #0
   10638:	d19d      	bne.n	10576 <_vfprintf_r+0x4ba>
   1063a:	f01b 0301 	ands.w	r3, fp, #1
   1063e:	930c      	str	r3, [sp, #48]	; 0x30
   10640:	f000 8430 	beq.w	10ea4 <_vfprintf_r+0xde8>
   10644:	2330      	movs	r3, #48	; 0x30
   10646:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   1064a:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
   1064e:	e0d5      	b.n	107fc <_vfprintf_r+0x740>
   10650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   10652:	425b      	negs	r3, r3
   10654:	930a      	str	r3, [sp, #40]	; 0x28
   10656:	f89a 6000 	ldrb.w	r6, [sl]
   1065a:	f047 0704 	orr.w	r7, r7, #4
   1065e:	e59c      	b.n	1019a <_vfprintf_r+0xde>
   10660:	06bd      	lsls	r5, r7, #26
   10662:	f100 84fd 	bmi.w	11060 <_vfprintf_r+0xfa4>
   10666:	06fc      	lsls	r4, r7, #27
   10668:	f100 85ee 	bmi.w	11248 <_vfprintf_r+0x118c>
   1066c:	0678      	lsls	r0, r7, #25
   1066e:	f100 86b2 	bmi.w	113d6 <_vfprintf_r+0x131a>
   10672:	05b9      	lsls	r1, r7, #22
   10674:	f140 85e8 	bpl.w	11248 <_vfprintf_r+0x118c>
   10678:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1067a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1067c:	f853 2b04 	ldr.w	r2, [r3], #4
   10680:	4655      	mov	r5, sl
   10682:	7011      	strb	r1, [r2, #0]
   10684:	930e      	str	r3, [sp, #56]	; 0x38
   10686:	e6f2      	b.n	1046e <_vfprintf_r+0x3b2>
   10688:	f89a 6000 	ldrb.w	r6, [sl]
   1068c:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   10690:	e583      	b.n	1019a <_vfprintf_r+0xde>
   10692:	f89a 6000 	ldrb.w	r6, [sl]
   10696:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   1069a:	e57e      	b.n	1019a <_vfprintf_r+0xde>
   1069c:	4652      	mov	r2, sl
   1069e:	f812 6b01 	ldrb.w	r6, [r2], #1
   106a2:	2e2a      	cmp	r6, #42	; 0x2a
   106a4:	f001 828d 	beq.w	11bc2 <_vfprintf_r+0x1b06>
   106a8:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   106ac:	2b09      	cmp	r3, #9
   106ae:	4692      	mov	sl, r2
   106b0:	bf98      	it	ls
   106b2:	2200      	movls	r2, #0
   106b4:	f201 80e5 	bhi.w	11882 <_vfprintf_r+0x17c6>
   106b8:	f81a 6b01 	ldrb.w	r6, [sl], #1
   106bc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   106c0:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   106c4:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   106c8:	2b09      	cmp	r3, #9
   106ca:	d9f5      	bls.n	106b8 <_vfprintf_r+0x5fc>
   106cc:	9208      	str	r2, [sp, #32]
   106ce:	e566      	b.n	1019e <_vfprintf_r+0xe2>
   106d0:	f047 0b10 	orr.w	fp, r7, #16
   106d4:	f01b 0920 	ands.w	r9, fp, #32
   106d8:	f000 8391 	beq.w	10dfe <_vfprintf_r+0xd42>
   106dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   106de:	3307      	adds	r3, #7
   106e0:	f023 0307 	bic.w	r3, r3, #7
   106e4:	461a      	mov	r2, r3
   106e6:	f852 4b08 	ldr.w	r4, [r2], #8
   106ea:	f8d3 9004 	ldr.w	r9, [r3, #4]
   106ee:	920e      	str	r2, [sp, #56]	; 0x38
   106f0:	2301      	movs	r3, #1
   106f2:	e790      	b.n	10616 <_vfprintf_r+0x55a>
   106f4:	2230      	movs	r2, #48	; 0x30
   106f6:	2678      	movs	r6, #120	; 0x78
   106f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   106fa:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   106fe:	f853 4b04 	ldr.w	r4, [r3], #4
   10702:	4a18      	ldr	r2, [pc, #96]	; (10764 <_vfprintf_r+0x6a8>)
   10704:	930e      	str	r3, [sp, #56]	; 0x38
   10706:	f04f 0900 	mov.w	r9, #0
   1070a:	2302      	movs	r3, #2
   1070c:	f047 0b02 	orr.w	fp, r7, #2
   10710:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   10714:	9218      	str	r2, [sp, #96]	; 0x60
   10716:	e77e      	b.n	10616 <_vfprintf_r+0x55a>
   10718:	f89a 6000 	ldrb.w	r6, [sl]
   1071c:	2e68      	cmp	r6, #104	; 0x68
   1071e:	bf03      	ittte	eq
   10720:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   10724:	f447 7700 	orreq.w	r7, r7, #512	; 0x200
   10728:	f10a 0a01 	addeq.w	sl, sl, #1
   1072c:	f047 0740 	orrne.w	r7, r7, #64	; 0x40
   10730:	e533      	b.n	1019a <_vfprintf_r+0xde>
   10732:	f89a 6000 	ldrb.w	r6, [sl]
   10736:	2e6c      	cmp	r6, #108	; 0x6c
   10738:	bf03      	ittte	eq
   1073a:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   1073e:	f047 0720 	orreq.w	r7, r7, #32
   10742:	f10a 0a01 	addeq.w	sl, sl, #1
   10746:	f047 0710 	orrne.w	r7, r7, #16
   1074a:	e526      	b.n	1019a <_vfprintf_r+0xde>
   1074c:	f89a 6000 	ldrb.w	r6, [sl]
   10750:	f047 0708 	orr.w	r7, r7, #8
   10754:	e521      	b.n	1019a <_vfprintf_r+0xde>
   10756:	bf00      	nop
   10758:	7fefffff 	.word	0x7fefffff
   1075c:	0001a1c0 	.word	0x0001a1c0
   10760:	0001a1c4 	.word	0x0001a1c4
   10764:	0001a1d0 	.word	0x0001a1d0
   10768:	9e09      	ldr	r6, [sp, #36]	; 0x24
   1076a:	4630      	mov	r0, r6
   1076c:	f003 f906 	bl	1397c <_localeconv_r>
   10770:	6843      	ldr	r3, [r0, #4]
   10772:	4618      	mov	r0, r3
   10774:	931b      	str	r3, [sp, #108]	; 0x6c
   10776:	f7fc ff73 	bl	d660 <strlen>
   1077a:	4603      	mov	r3, r0
   1077c:	4630      	mov	r0, r6
   1077e:	931c      	str	r3, [sp, #112]	; 0x70
   10780:	461e      	mov	r6, r3
   10782:	f003 f8fb 	bl	1397c <_localeconv_r>
   10786:	6883      	ldr	r3, [r0, #8]
   10788:	9319      	str	r3, [sp, #100]	; 0x64
   1078a:	2e00      	cmp	r6, #0
   1078c:	f43f ad80 	beq.w	10290 <_vfprintf_r+0x1d4>
   10790:	9b19      	ldr	r3, [sp, #100]	; 0x64
   10792:	2b00      	cmp	r3, #0
   10794:	f43f ad7c 	beq.w	10290 <_vfprintf_r+0x1d4>
   10798:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1079a:	781b      	ldrb	r3, [r3, #0]
   1079c:	2b00      	cmp	r3, #0
   1079e:	f43f ad77 	beq.w	10290 <_vfprintf_r+0x1d4>
   107a2:	f89a 6000 	ldrb.w	r6, [sl]
   107a6:	f447 6780 	orr.w	r7, r7, #1024	; 0x400
   107aa:	e4f6      	b.n	1019a <_vfprintf_r+0xde>
   107ac:	f89a 6000 	ldrb.w	r6, [sl]
   107b0:	f047 0701 	orr.w	r7, r7, #1
   107b4:	e4f1      	b.n	1019a <_vfprintf_r+0xde>
   107b6:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
   107ba:	2b00      	cmp	r3, #0
   107bc:	f47f ad68 	bne.w	10290 <_vfprintf_r+0x1d4>
   107c0:	f89a 6000 	ldrb.w	r6, [sl]
   107c4:	f88d 4083 	strb.w	r4, [sp, #131]	; 0x83
   107c8:	e4e7      	b.n	1019a <_vfprintf_r+0xde>
   107ca:	46bb      	mov	fp, r7
   107cc:	2b01      	cmp	r3, #1
   107ce:	f000 81c3 	beq.w	10b58 <_vfprintf_r+0xa9c>
   107d2:	2b02      	cmp	r3, #2
   107d4:	ad54      	add	r5, sp, #336	; 0x150
   107d6:	d11f      	bne.n	10818 <_vfprintf_r+0x75c>
   107d8:	9a18      	ldr	r2, [sp, #96]	; 0x60
   107da:	f004 030f 	and.w	r3, r4, #15
   107de:	5cd3      	ldrb	r3, [r2, r3]
   107e0:	0924      	lsrs	r4, r4, #4
   107e2:	ea44 7409 	orr.w	r4, r4, r9, lsl #28
   107e6:	ea4f 1919 	mov.w	r9, r9, lsr #4
   107ea:	f805 3d01 	strb.w	r3, [r5, #-1]!
   107ee:	ea54 0309 	orrs.w	r3, r4, r9
   107f2:	d1f2      	bne.n	107da <_vfprintf_r+0x71e>
   107f4:	465f      	mov	r7, fp
   107f6:	ab54      	add	r3, sp, #336	; 0x150
   107f8:	1b5b      	subs	r3, r3, r5
   107fa:	930c      	str	r3, [sp, #48]	; 0x30
   107fc:	9a08      	ldr	r2, [sp, #32]
   107fe:	990c      	ldr	r1, [sp, #48]	; 0x30
   10800:	2300      	movs	r3, #0
   10802:	428a      	cmp	r2, r1
   10804:	bfb8      	it	lt
   10806:	460a      	movlt	r2, r1
   10808:	930d      	str	r3, [sp, #52]	; 0x34
   1080a:	9206      	str	r2, [sp, #24]
   1080c:	930f      	str	r3, [sp, #60]	; 0x3c
   1080e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   10812:	9313      	str	r3, [sp, #76]	; 0x4c
   10814:	9310      	str	r3, [sp, #64]	; 0x40
   10816:	e672      	b.n	104fe <_vfprintf_r+0x442>
   10818:	f004 0307 	and.w	r3, r4, #7
   1081c:	08e4      	lsrs	r4, r4, #3
   1081e:	ea44 7449 	orr.w	r4, r4, r9, lsl #29
   10822:	ea4f 09d9 	mov.w	r9, r9, lsr #3
   10826:	3330      	adds	r3, #48	; 0x30
   10828:	ea54 0109 	orrs.w	r1, r4, r9
   1082c:	462a      	mov	r2, r5
   1082e:	f805 3d01 	strb.w	r3, [r5, #-1]!
   10832:	d1f1      	bne.n	10818 <_vfprintf_r+0x75c>
   10834:	f01b 0f01 	tst.w	fp, #1
   10838:	d0dc      	beq.n	107f4 <_vfprintf_r+0x738>
   1083a:	2b30      	cmp	r3, #48	; 0x30
   1083c:	d0da      	beq.n	107f4 <_vfprintf_r+0x738>
   1083e:	2330      	movs	r3, #48	; 0x30
   10840:	3a02      	subs	r2, #2
   10842:	f805 3c01 	strb.w	r3, [r5, #-1]
   10846:	ab54      	add	r3, sp, #336	; 0x150
   10848:	1a9b      	subs	r3, r3, r2
   1084a:	465f      	mov	r7, fp
   1084c:	4615      	mov	r5, r2
   1084e:	930c      	str	r3, [sp, #48]	; 0x30
   10850:	e7d4      	b.n	107fc <_vfprintf_r+0x740>
   10852:	2e65      	cmp	r6, #101	; 0x65
   10854:	f340 80e9 	ble.w	10a2a <_vfprintf_r+0x96e>
   10858:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   1085c:	2200      	movs	r2, #0
   1085e:	2300      	movs	r3, #0
   10860:	f005 fcd0 	bl	16204 <__aeabi_dcmpeq>
   10864:	2800      	cmp	r0, #0
   10866:	f000 81e1 	beq.w	10c2c <_vfprintf_r+0xb70>
   1086a:	2301      	movs	r3, #1
   1086c:	f8c8 3004 	str.w	r3, [r8, #4]
   10870:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10872:	4ac0      	ldr	r2, [pc, #768]	; (10b74 <_vfprintf_r+0xab8>)
   10874:	3301      	adds	r3, #1
   10876:	3401      	adds	r4, #1
   10878:	2b07      	cmp	r3, #7
   1087a:	942a      	str	r4, [sp, #168]	; 0xa8
   1087c:	9329      	str	r3, [sp, #164]	; 0xa4
   1087e:	f8c8 2000 	str.w	r2, [r8]
   10882:	f300 84bf 	bgt.w	11204 <_vfprintf_r+0x1148>
   10886:	f108 0808 	add.w	r8, r8, #8
   1088a:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1088c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   1088e:	4293      	cmp	r3, r2
   10890:	f280 82dc 	bge.w	10e4c <_vfprintf_r+0xd90>
   10894:	9b16      	ldr	r3, [sp, #88]	; 0x58
   10896:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   10898:	441c      	add	r4, r3
   1089a:	e9c8 2300 	strd	r2, r3, [r8]
   1089e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   108a0:	942a      	str	r4, [sp, #168]	; 0xa8
   108a2:	3301      	adds	r3, #1
   108a4:	2b07      	cmp	r3, #7
   108a6:	9329      	str	r3, [sp, #164]	; 0xa4
   108a8:	f300 8417 	bgt.w	110da <_vfprintf_r+0x101e>
   108ac:	f108 0808 	add.w	r8, r8, #8
   108b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   108b2:	1e5d      	subs	r5, r3, #1
   108b4:	2d00      	cmp	r5, #0
   108b6:	f77f adbc 	ble.w	10432 <_vfprintf_r+0x376>
   108ba:	2d10      	cmp	r5, #16
   108bc:	f341 815d 	ble.w	11b7a <_vfprintf_r+0x1abe>
   108c0:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 10b78 <_vfprintf_r+0xabc>
   108c4:	4622      	mov	r2, r4
   108c6:	4649      	mov	r1, r9
   108c8:	2610      	movs	r6, #16
   108ca:	46b9      	mov	r9, r7
   108cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   108ce:	460f      	mov	r7, r1
   108d0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   108d4:	9c07      	ldr	r4, [sp, #28]
   108d6:	e005      	b.n	108e4 <_vfprintf_r+0x828>
   108d8:	f108 0808 	add.w	r8, r8, #8
   108dc:	3d10      	subs	r5, #16
   108de:	2d10      	cmp	r5, #16
   108e0:	f340 849d 	ble.w	1121e <_vfprintf_r+0x1162>
   108e4:	3301      	adds	r3, #1
   108e6:	3210      	adds	r2, #16
   108e8:	2b07      	cmp	r3, #7
   108ea:	e9c8 7600 	strd	r7, r6, [r8]
   108ee:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   108f2:	ddf1      	ble.n	108d8 <_vfprintf_r+0x81c>
   108f4:	4621      	mov	r1, r4
   108f6:	4658      	mov	r0, fp
   108f8:	aa28      	add	r2, sp, #160	; 0xa0
   108fa:	f7fe fcb9 	bl	f270 <__sprint_r>
   108fe:	2800      	cmp	r0, #0
   10900:	f47f ad11 	bne.w	10326 <_vfprintf_r+0x26a>
   10904:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   10908:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   1090c:	e7e6      	b.n	108dc <_vfprintf_r+0x820>
   1090e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   10910:	9a06      	ldr	r2, [sp, #24]
   10912:	eba3 0b02 	sub.w	fp, r3, r2
   10916:	f1bb 0f00 	cmp.w	fp, #0
   1091a:	f77f ad70 	ble.w	103fe <_vfprintf_r+0x342>
   1091e:	f1bb 0f10 	cmp.w	fp, #16
   10922:	f341 8052 	ble.w	119ca <_vfprintf_r+0x190e>
   10926:	f8df 9250 	ldr.w	r9, [pc, #592]	; 10b78 <_vfprintf_r+0xabc>
   1092a:	4641      	mov	r1, r8
   1092c:	4620      	mov	r0, r4
   1092e:	46a8      	mov	r8, r5
   10930:	464c      	mov	r4, r9
   10932:	2310      	movs	r3, #16
   10934:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   10936:	9d07      	ldr	r5, [sp, #28]
   10938:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
   1093c:	e006      	b.n	1094c <_vfprintf_r+0x890>
   1093e:	f1ab 0b10 	sub.w	fp, fp, #16
   10942:	f1bb 0f10 	cmp.w	fp, #16
   10946:	f101 0108 	add.w	r1, r1, #8
   1094a:	dd19      	ble.n	10980 <_vfprintf_r+0x8c4>
   1094c:	3201      	adds	r2, #1
   1094e:	3010      	adds	r0, #16
   10950:	2a07      	cmp	r2, #7
   10952:	e9c1 4300 	strd	r4, r3, [r1]
   10956:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   1095a:	ddf0      	ble.n	1093e <_vfprintf_r+0x882>
   1095c:	4629      	mov	r1, r5
   1095e:	4648      	mov	r0, r9
   10960:	aa28      	add	r2, sp, #160	; 0xa0
   10962:	f7fe fc85 	bl	f270 <__sprint_r>
   10966:	2800      	cmp	r0, #0
   10968:	f47f acdd 	bne.w	10326 <_vfprintf_r+0x26a>
   1096c:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   10970:	f1ab 0b10 	sub.w	fp, fp, #16
   10974:	f1bb 0f10 	cmp.w	fp, #16
   10978:	f04f 0310 	mov.w	r3, #16
   1097c:	a92b      	add	r1, sp, #172	; 0xac
   1097e:	dce5      	bgt.n	1094c <_vfprintf_r+0x890>
   10980:	4645      	mov	r5, r8
   10982:	46a1      	mov	r9, r4
   10984:	4688      	mov	r8, r1
   10986:	4604      	mov	r4, r0
   10988:	3201      	adds	r2, #1
   1098a:	445c      	add	r4, fp
   1098c:	2a07      	cmp	r2, #7
   1098e:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   10992:	f8c8 9000 	str.w	r9, [r8]
   10996:	f8c8 b004 	str.w	fp, [r8, #4]
   1099a:	f300 8391 	bgt.w	110c0 <_vfprintf_r+0x1004>
   1099e:	f108 0808 	add.w	r8, r8, #8
   109a2:	e52c      	b.n	103fe <_vfprintf_r+0x342>
   109a4:	f1bb 0f10 	cmp.w	fp, #16
   109a8:	f340 84e3 	ble.w	11372 <_vfprintf_r+0x12b6>
   109ac:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 10b78 <_vfprintf_r+0xabc>
   109b0:	4641      	mov	r1, r8
   109b2:	4620      	mov	r0, r4
   109b4:	46a8      	mov	r8, r5
   109b6:	464c      	mov	r4, r9
   109b8:	2310      	movs	r3, #16
   109ba:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   109bc:	9d07      	ldr	r5, [sp, #28]
   109be:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
   109c2:	e006      	b.n	109d2 <_vfprintf_r+0x916>
   109c4:	f1ab 0b10 	sub.w	fp, fp, #16
   109c8:	f1bb 0f10 	cmp.w	fp, #16
   109cc:	f101 0108 	add.w	r1, r1, #8
   109d0:	dd19      	ble.n	10a06 <_vfprintf_r+0x94a>
   109d2:	3201      	adds	r2, #1
   109d4:	3010      	adds	r0, #16
   109d6:	2a07      	cmp	r2, #7
   109d8:	e9c1 4300 	strd	r4, r3, [r1]
   109dc:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   109e0:	ddf0      	ble.n	109c4 <_vfprintf_r+0x908>
   109e2:	4629      	mov	r1, r5
   109e4:	4648      	mov	r0, r9
   109e6:	aa28      	add	r2, sp, #160	; 0xa0
   109e8:	f7fe fc42 	bl	f270 <__sprint_r>
   109ec:	2800      	cmp	r0, #0
   109ee:	f47f ac9a 	bne.w	10326 <_vfprintf_r+0x26a>
   109f2:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   109f6:	f1ab 0b10 	sub.w	fp, fp, #16
   109fa:	f1bb 0f10 	cmp.w	fp, #16
   109fe:	f04f 0310 	mov.w	r3, #16
   10a02:	a92b      	add	r1, sp, #172	; 0xac
   10a04:	dce5      	bgt.n	109d2 <_vfprintf_r+0x916>
   10a06:	4645      	mov	r5, r8
   10a08:	46a1      	mov	r9, r4
   10a0a:	4688      	mov	r8, r1
   10a0c:	4604      	mov	r4, r0
   10a0e:	3201      	adds	r2, #1
   10a10:	445c      	add	r4, fp
   10a12:	2a07      	cmp	r2, #7
   10a14:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   10a18:	f8c8 9000 	str.w	r9, [r8]
   10a1c:	f8c8 b004 	str.w	fp, [r8, #4]
   10a20:	f300 81d2 	bgt.w	10dc8 <_vfprintf_r+0xd0c>
   10a24:	f108 0808 	add.w	r8, r8, #8
   10a28:	e4f1      	b.n	1040e <_vfprintf_r+0x352>
   10a2a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10a2c:	2b01      	cmp	r3, #1
   10a2e:	f340 8182 	ble.w	10d36 <_vfprintf_r+0xc7a>
   10a32:	2301      	movs	r3, #1
   10a34:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   10a36:	3401      	adds	r4, #1
   10a38:	441e      	add	r6, r3
   10a3a:	2e07      	cmp	r6, #7
   10a3c:	f8c8 5000 	str.w	r5, [r8]
   10a40:	942a      	str	r4, [sp, #168]	; 0xa8
   10a42:	f8c8 3004 	str.w	r3, [r8, #4]
   10a46:	9629      	str	r6, [sp, #164]	; 0xa4
   10a48:	f300 836c 	bgt.w	11124 <_vfprintf_r+0x1068>
   10a4c:	f108 0808 	add.w	r8, r8, #8
   10a50:	9b16      	ldr	r3, [sp, #88]	; 0x58
   10a52:	3601      	adds	r6, #1
   10a54:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   10a56:	441c      	add	r4, r3
   10a58:	2e07      	cmp	r6, #7
   10a5a:	e9c8 2300 	strd	r2, r3, [r8]
   10a5e:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   10a62:	f300 836c 	bgt.w	1113e <_vfprintf_r+0x1082>
   10a66:	f108 0808 	add.w	r8, r8, #8
   10a6a:	2200      	movs	r2, #0
   10a6c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   10a70:	2300      	movs	r3, #0
   10a72:	f005 fbc7 	bl	16204 <__aeabi_dcmpeq>
   10a76:	2800      	cmp	r0, #0
   10a78:	f040 817a 	bne.w	10d70 <_vfprintf_r+0xcb4>
   10a7c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10a7e:	3601      	adds	r6, #1
   10a80:	3b01      	subs	r3, #1
   10a82:	3501      	adds	r5, #1
   10a84:	441c      	add	r4, r3
   10a86:	2e07      	cmp	r6, #7
   10a88:	f8c8 5000 	str.w	r5, [r8]
   10a8c:	9629      	str	r6, [sp, #164]	; 0xa4
   10a8e:	f8c8 3004 	str.w	r3, [r8, #4]
   10a92:	942a      	str	r4, [sp, #168]	; 0xa8
   10a94:	f300 815f 	bgt.w	10d56 <_vfprintf_r+0xc9a>
   10a98:	f108 0808 	add.w	r8, r8, #8
   10a9c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   10a9e:	3601      	adds	r6, #1
   10aa0:	441c      	add	r4, r3
   10aa2:	f8c8 3004 	str.w	r3, [r8, #4]
   10aa6:	2e07      	cmp	r6, #7
   10aa8:	ab24      	add	r3, sp, #144	; 0x90
   10aaa:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   10aae:	f8c8 3000 	str.w	r3, [r8]
   10ab2:	f77f acbc 	ble.w	1042e <_vfprintf_r+0x372>
   10ab6:	9907      	ldr	r1, [sp, #28]
   10ab8:	9809      	ldr	r0, [sp, #36]	; 0x24
   10aba:	aa28      	add	r2, sp, #160	; 0xa0
   10abc:	f7fe fbd8 	bl	f270 <__sprint_r>
   10ac0:	2800      	cmp	r0, #0
   10ac2:	f47f ac30 	bne.w	10326 <_vfprintf_r+0x26a>
   10ac6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10ac8:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10acc:	e4b1      	b.n	10432 <_vfprintf_r+0x376>
   10ace:	f1b9 0f10 	cmp.w	r9, #16
   10ad2:	f340 86c6 	ble.w	11862 <_vfprintf_r+0x17a6>
   10ad6:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   10ada:	4640      	mov	r0, r8
   10adc:	e9cd 361d 	strd	r3, r6, [sp, #116]	; 0x74
   10ae0:	46b8      	mov	r8, r7
   10ae2:	2410      	movs	r4, #16
   10ae4:	464f      	mov	r7, r9
   10ae6:	9e07      	ldr	r6, [sp, #28]
   10ae8:	46a9      	mov	r9, r5
   10aea:	9d09      	ldr	r5, [sp, #36]	; 0x24
   10aec:	e004      	b.n	10af8 <_vfprintf_r+0xa3c>
   10aee:	3f10      	subs	r7, #16
   10af0:	2f10      	cmp	r7, #16
   10af2:	f100 0008 	add.w	r0, r0, #8
   10af6:	dd16      	ble.n	10b26 <_vfprintf_r+0xa6a>
   10af8:	3201      	adds	r2, #1
   10afa:	4b20      	ldr	r3, [pc, #128]	; (10b7c <_vfprintf_r+0xac0>)
   10afc:	3110      	adds	r1, #16
   10afe:	2a07      	cmp	r2, #7
   10b00:	e9c0 3400 	strd	r3, r4, [r0]
   10b04:	e9cd 2129 	strd	r2, r1, [sp, #164]	; 0xa4
   10b08:	ddf1      	ble.n	10aee <_vfprintf_r+0xa32>
   10b0a:	4631      	mov	r1, r6
   10b0c:	4628      	mov	r0, r5
   10b0e:	aa28      	add	r2, sp, #160	; 0xa0
   10b10:	f7fe fbae 	bl	f270 <__sprint_r>
   10b14:	2800      	cmp	r0, #0
   10b16:	f47f ac06 	bne.w	10326 <_vfprintf_r+0x26a>
   10b1a:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   10b1e:	3f10      	subs	r7, #16
   10b20:	2f10      	cmp	r7, #16
   10b22:	a82b      	add	r0, sp, #172	; 0xac
   10b24:	dce8      	bgt.n	10af8 <_vfprintf_r+0xa3c>
   10b26:	464d      	mov	r5, r9
   10b28:	e9dd 361d 	ldrd	r3, r6, [sp, #116]	; 0x74
   10b2c:	46b9      	mov	r9, r7
   10b2e:	4647      	mov	r7, r8
   10b30:	4680      	mov	r8, r0
   10b32:	eb09 0401 	add.w	r4, r9, r1
   10b36:	3201      	adds	r2, #1
   10b38:	4910      	ldr	r1, [pc, #64]	; (10b7c <_vfprintf_r+0xac0>)
   10b3a:	2a07      	cmp	r2, #7
   10b3c:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   10b40:	f8c8 9004 	str.w	r9, [r8, #4]
   10b44:	f8c8 1000 	str.w	r1, [r8]
   10b48:	f300 8340 	bgt.w	111cc <_vfprintf_r+0x1110>
   10b4c:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   10b50:	f108 0808 	add.w	r8, r8, #8
   10b54:	e42c      	b.n	103b0 <_vfprintf_r+0x2f4>
   10b56:	46bb      	mov	fp, r7
   10b58:	2c0a      	cmp	r4, #10
   10b5a:	f179 0300 	sbcs.w	r3, r9, #0
   10b5e:	f080 82fb 	bcs.w	11158 <_vfprintf_r+0x109c>
   10b62:	2301      	movs	r3, #1
   10b64:	3430      	adds	r4, #48	; 0x30
   10b66:	465f      	mov	r7, fp
   10b68:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
   10b6c:	930c      	str	r3, [sp, #48]	; 0x30
   10b6e:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   10b72:	e643      	b.n	107fc <_vfprintf_r+0x740>
   10b74:	0001a200 	.word	0x0001a200
   10b78:	0001a254 	.word	0x0001a254
   10b7c:	0001a244 	.word	0x0001a244
   10b80:	9907      	ldr	r1, [sp, #28]
   10b82:	9809      	ldr	r0, [sp, #36]	; 0x24
   10b84:	aa28      	add	r2, sp, #160	; 0xa0
   10b86:	931d      	str	r3, [sp, #116]	; 0x74
   10b88:	f7fe fb72 	bl	f270 <__sprint_r>
   10b8c:	2800      	cmp	r0, #0
   10b8e:	f47f abca 	bne.w	10326 <_vfprintf_r+0x26a>
   10b92:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10b94:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   10b96:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10b9a:	e41b      	b.n	103d4 <_vfprintf_r+0x318>
   10b9c:	9907      	ldr	r1, [sp, #28]
   10b9e:	9809      	ldr	r0, [sp, #36]	; 0x24
   10ba0:	aa28      	add	r2, sp, #160	; 0xa0
   10ba2:	f7fe fb65 	bl	f270 <__sprint_r>
   10ba6:	2800      	cmp	r0, #0
   10ba8:	f47f abbd 	bne.w	10326 <_vfprintf_r+0x26a>
   10bac:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10bae:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10bb2:	e420      	b.n	103f6 <_vfprintf_r+0x33a>
   10bb4:	2d10      	cmp	r5, #16
   10bb6:	f340 86be 	ble.w	11936 <_vfprintf_r+0x187a>
   10bba:	2610      	movs	r6, #16
   10bbc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10bbe:	9f09      	ldr	r7, [sp, #36]	; 0x24
   10bc0:	f8dd 901c 	ldr.w	r9, [sp, #28]
   10bc4:	e004      	b.n	10bd0 <_vfprintf_r+0xb14>
   10bc6:	3d10      	subs	r5, #16
   10bc8:	2d10      	cmp	r5, #16
   10bca:	f108 0808 	add.w	r8, r8, #8
   10bce:	dd17      	ble.n	10c00 <_vfprintf_r+0xb44>
   10bd0:	3301      	adds	r3, #1
   10bd2:	4aba      	ldr	r2, [pc, #744]	; (10ebc <_vfprintf_r+0xe00>)
   10bd4:	3410      	adds	r4, #16
   10bd6:	2b07      	cmp	r3, #7
   10bd8:	e9c8 2600 	strd	r2, r6, [r8]
   10bdc:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   10be0:	ddf1      	ble.n	10bc6 <_vfprintf_r+0xb0a>
   10be2:	4649      	mov	r1, r9
   10be4:	4638      	mov	r0, r7
   10be6:	aa28      	add	r2, sp, #160	; 0xa0
   10be8:	f7fe fb42 	bl	f270 <__sprint_r>
   10bec:	2800      	cmp	r0, #0
   10bee:	f47f ab9a 	bne.w	10326 <_vfprintf_r+0x26a>
   10bf2:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
   10bf6:	3d10      	subs	r5, #16
   10bf8:	2d10      	cmp	r5, #16
   10bfa:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10bfe:	dce7      	bgt.n	10bd0 <_vfprintf_r+0xb14>
   10c00:	3301      	adds	r3, #1
   10c02:	4aae      	ldr	r2, [pc, #696]	; (10ebc <_vfprintf_r+0xe00>)
   10c04:	442c      	add	r4, r5
   10c06:	2b07      	cmp	r3, #7
   10c08:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   10c0c:	f8c8 5004 	str.w	r5, [r8, #4]
   10c10:	f8c8 2000 	str.w	r2, [r8]
   10c14:	f77f ac15 	ble.w	10442 <_vfprintf_r+0x386>
   10c18:	9907      	ldr	r1, [sp, #28]
   10c1a:	9809      	ldr	r0, [sp, #36]	; 0x24
   10c1c:	aa28      	add	r2, sp, #160	; 0xa0
   10c1e:	f7fe fb27 	bl	f270 <__sprint_r>
   10c22:	2800      	cmp	r0, #0
   10c24:	f47f ab7f 	bne.w	10326 <_vfprintf_r+0x26a>
   10c28:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10c2a:	e40a      	b.n	10442 <_vfprintf_r+0x386>
   10c2c:	9922      	ldr	r1, [sp, #136]	; 0x88
   10c2e:	2900      	cmp	r1, #0
   10c30:	f340 8110 	ble.w	10e54 <_vfprintf_r+0xd98>
   10c34:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   10c38:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10c3a:	4599      	cmp	r9, r3
   10c3c:	bfa8      	it	ge
   10c3e:	4699      	movge	r9, r3
   10c40:	f1b9 0f00 	cmp.w	r9, #0
   10c44:	dd0b      	ble.n	10c5e <_vfprintf_r+0xba2>
   10c46:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10c48:	444c      	add	r4, r9
   10c4a:	3301      	adds	r3, #1
   10c4c:	2b07      	cmp	r3, #7
   10c4e:	e9c8 5900 	strd	r5, r9, [r8]
   10c52:	942a      	str	r4, [sp, #168]	; 0xa8
   10c54:	9329      	str	r3, [sp, #164]	; 0xa4
   10c56:	f300 8581 	bgt.w	1175c <_vfprintf_r+0x16a0>
   10c5a:	f108 0808 	add.w	r8, r8, #8
   10c5e:	9e10      	ldr	r6, [sp, #64]	; 0x40
   10c60:	f1b9 0f00 	cmp.w	r9, #0
   10c64:	bfa8      	it	ge
   10c66:	eba6 0609 	subge.w	r6, r6, r9
   10c6a:	2e00      	cmp	r6, #0
   10c6c:	f300 82f5 	bgt.w	1125a <_vfprintf_r+0x119e>
   10c70:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   10c74:	0579      	lsls	r1, r7, #21
   10c76:	44ab      	add	fp, r5
   10c78:	f100 84ac 	bmi.w	115d4 <_vfprintf_r+0x1518>
   10c7c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   10c7e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   10c80:	4293      	cmp	r3, r2
   10c82:	db02      	blt.n	10c8a <_vfprintf_r+0xbce>
   10c84:	07fa      	lsls	r2, r7, #31
   10c86:	f140 8392 	bpl.w	113ae <_vfprintf_r+0x12f2>
   10c8a:	9a16      	ldr	r2, [sp, #88]	; 0x58
   10c8c:	9917      	ldr	r1, [sp, #92]	; 0x5c
   10c8e:	4414      	add	r4, r2
   10c90:	e9c8 1200 	strd	r1, r2, [r8]
   10c94:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   10c96:	942a      	str	r4, [sp, #168]	; 0xa8
   10c98:	3201      	adds	r2, #1
   10c9a:	2a07      	cmp	r2, #7
   10c9c:	9229      	str	r2, [sp, #164]	; 0xa4
   10c9e:	f300 85a8 	bgt.w	117f2 <_vfprintf_r+0x1736>
   10ca2:	f108 0808 	add.w	r8, r8, #8
   10ca6:	9a12      	ldr	r2, [sp, #72]	; 0x48
   10ca8:	18ae      	adds	r6, r5, r2
   10caa:	eba6 060b 	sub.w	r6, r6, fp
   10cae:	1ad5      	subs	r5, r2, r3
   10cb0:	42ae      	cmp	r6, r5
   10cb2:	bfa8      	it	ge
   10cb4:	462e      	movge	r6, r5
   10cb6:	2e00      	cmp	r6, #0
   10cb8:	dd0d      	ble.n	10cd6 <_vfprintf_r+0xc1a>
   10cba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10cbc:	4434      	add	r4, r6
   10cbe:	3301      	adds	r3, #1
   10cc0:	2b07      	cmp	r3, #7
   10cc2:	f8c8 b000 	str.w	fp, [r8]
   10cc6:	f8c8 6004 	str.w	r6, [r8, #4]
   10cca:	942a      	str	r4, [sp, #168]	; 0xa8
   10ccc:	9329      	str	r3, [sp, #164]	; 0xa4
   10cce:	f300 85fc 	bgt.w	118ca <_vfprintf_r+0x180e>
   10cd2:	f108 0808 	add.w	r8, r8, #8
   10cd6:	2e00      	cmp	r6, #0
   10cd8:	bfa8      	it	ge
   10cda:	1bad      	subge	r5, r5, r6
   10cdc:	2d00      	cmp	r5, #0
   10cde:	f77f aba8 	ble.w	10432 <_vfprintf_r+0x376>
   10ce2:	2d10      	cmp	r5, #16
   10ce4:	f340 8749 	ble.w	11b7a <_vfprintf_r+0x1abe>
   10ce8:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 10ec0 <_vfprintf_r+0xe04>
   10cec:	4622      	mov	r2, r4
   10cee:	4649      	mov	r1, r9
   10cf0:	2610      	movs	r6, #16
   10cf2:	46b9      	mov	r9, r7
   10cf4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10cf6:	460f      	mov	r7, r1
   10cf8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   10cfc:	9c07      	ldr	r4, [sp, #28]
   10cfe:	e005      	b.n	10d0c <_vfprintf_r+0xc50>
   10d00:	f108 0808 	add.w	r8, r8, #8
   10d04:	3d10      	subs	r5, #16
   10d06:	2d10      	cmp	r5, #16
   10d08:	f340 8289 	ble.w	1121e <_vfprintf_r+0x1162>
   10d0c:	3301      	adds	r3, #1
   10d0e:	3210      	adds	r2, #16
   10d10:	2b07      	cmp	r3, #7
   10d12:	e9c8 7600 	strd	r7, r6, [r8]
   10d16:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   10d1a:	ddf1      	ble.n	10d00 <_vfprintf_r+0xc44>
   10d1c:	4621      	mov	r1, r4
   10d1e:	4658      	mov	r0, fp
   10d20:	aa28      	add	r2, sp, #160	; 0xa0
   10d22:	f7fe faa5 	bl	f270 <__sprint_r>
   10d26:	2800      	cmp	r0, #0
   10d28:	f47f aafd 	bne.w	10326 <_vfprintf_r+0x26a>
   10d2c:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   10d30:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10d34:	e7e6      	b.n	10d04 <_vfprintf_r+0xc48>
   10d36:	07fe      	lsls	r6, r7, #31
   10d38:	f53f ae7b 	bmi.w	10a32 <_vfprintf_r+0x976>
   10d3c:	2301      	movs	r3, #1
   10d3e:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   10d40:	3401      	adds	r4, #1
   10d42:	441e      	add	r6, r3
   10d44:	2e07      	cmp	r6, #7
   10d46:	f8c8 5000 	str.w	r5, [r8]
   10d4a:	942a      	str	r4, [sp, #168]	; 0xa8
   10d4c:	f8c8 3004 	str.w	r3, [r8, #4]
   10d50:	9629      	str	r6, [sp, #164]	; 0xa4
   10d52:	f77f aea1 	ble.w	10a98 <_vfprintf_r+0x9dc>
   10d56:	9907      	ldr	r1, [sp, #28]
   10d58:	9809      	ldr	r0, [sp, #36]	; 0x24
   10d5a:	aa28      	add	r2, sp, #160	; 0xa0
   10d5c:	f7fe fa88 	bl	f270 <__sprint_r>
   10d60:	2800      	cmp	r0, #0
   10d62:	f47f aae0 	bne.w	10326 <_vfprintf_r+0x26a>
   10d66:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   10d6a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10d6e:	e695      	b.n	10a9c <_vfprintf_r+0x9e0>
   10d70:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10d72:	1e5d      	subs	r5, r3, #1
   10d74:	2d00      	cmp	r5, #0
   10d76:	f77f ae91 	ble.w	10a9c <_vfprintf_r+0x9e0>
   10d7a:	2d10      	cmp	r5, #16
   10d7c:	f340 8719 	ble.w	11bb2 <_vfprintf_r+0x1af6>
   10d80:	4622      	mov	r2, r4
   10d82:	9708      	str	r7, [sp, #32]
   10d84:	f04f 0b10 	mov.w	fp, #16
   10d88:	f8df 9134 	ldr.w	r9, [pc, #308]	; 10ec0 <_vfprintf_r+0xe04>
   10d8c:	9c09      	ldr	r4, [sp, #36]	; 0x24
   10d8e:	9f07      	ldr	r7, [sp, #28]
   10d90:	e005      	b.n	10d9e <_vfprintf_r+0xce2>
   10d92:	f108 0808 	add.w	r8, r8, #8
   10d96:	3d10      	subs	r5, #16
   10d98:	2d10      	cmp	r5, #16
   10d9a:	f340 82c7 	ble.w	1132c <_vfprintf_r+0x1270>
   10d9e:	3601      	adds	r6, #1
   10da0:	3210      	adds	r2, #16
   10da2:	2e07      	cmp	r6, #7
   10da4:	e9c8 9b00 	strd	r9, fp, [r8]
   10da8:	e9cd 6229 	strd	r6, r2, [sp, #164]	; 0xa4
   10dac:	ddf1      	ble.n	10d92 <_vfprintf_r+0xcd6>
   10dae:	4639      	mov	r1, r7
   10db0:	4620      	mov	r0, r4
   10db2:	aa28      	add	r2, sp, #160	; 0xa0
   10db4:	f7fe fa5c 	bl	f270 <__sprint_r>
   10db8:	2800      	cmp	r0, #0
   10dba:	f47f aab4 	bne.w	10326 <_vfprintf_r+0x26a>
   10dbe:	e9dd 6229 	ldrd	r6, r2, [sp, #164]	; 0xa4
   10dc2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10dc6:	e7e6      	b.n	10d96 <_vfprintf_r+0xcda>
   10dc8:	9907      	ldr	r1, [sp, #28]
   10dca:	9809      	ldr	r0, [sp, #36]	; 0x24
   10dcc:	aa28      	add	r2, sp, #160	; 0xa0
   10dce:	f7fe fa4f 	bl	f270 <__sprint_r>
   10dd2:	2800      	cmp	r0, #0
   10dd4:	f47f aaa7 	bne.w	10326 <_vfprintf_r+0x26a>
   10dd8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10dda:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10dde:	f7ff bb16 	b.w	1040e <_vfprintf_r+0x352>
   10de2:	f017 0310 	ands.w	r3, r7, #16
   10de6:	d177      	bne.n	10ed8 <_vfprintf_r+0xe1c>
   10de8:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   10dec:	f000 82ac 	beq.w	11348 <_vfprintf_r+0x128c>
   10df0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   10df2:	4699      	mov	r9, r3
   10df4:	f852 4b04 	ldr.w	r4, [r2], #4
   10df8:	920e      	str	r2, [sp, #56]	; 0x38
   10dfa:	b2a4      	uxth	r4, r4
   10dfc:	e408      	b.n	10610 <_vfprintf_r+0x554>
   10dfe:	f01b 0310 	ands.w	r3, fp, #16
   10e02:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   10e04:	d154      	bne.n	10eb0 <_vfprintf_r+0xdf4>
   10e06:	f01b 0140 	ands.w	r1, fp, #64	; 0x40
   10e0a:	d04d      	beq.n	10ea8 <_vfprintf_r+0xdec>
   10e0c:	f852 4b04 	ldr.w	r4, [r2], #4
   10e10:	4699      	mov	r9, r3
   10e12:	920e      	str	r2, [sp, #56]	; 0x38
   10e14:	2301      	movs	r3, #1
   10e16:	b2a4      	uxth	r4, r4
   10e18:	f7ff bbfd 	b.w	10616 <_vfprintf_r+0x55a>
   10e1c:	f853 4b04 	ldr.w	r4, [r3], #4
   10e20:	930e      	str	r3, [sp, #56]	; 0x38
   10e22:	06fb      	lsls	r3, r7, #27
   10e24:	d453      	bmi.n	10ece <_vfprintf_r+0xe12>
   10e26:	067d      	lsls	r5, r7, #25
   10e28:	d54e      	bpl.n	10ec8 <_vfprintf_r+0xe0c>
   10e2a:	f344 39c0 	sbfx	r9, r4, #15, #1
   10e2e:	464b      	mov	r3, r9
   10e30:	b224      	sxth	r4, r4
   10e32:	f7ff bb8e 	b.w	10552 <_vfprintf_r+0x496>
   10e36:	232d      	movs	r3, #45	; 0x2d
   10e38:	4264      	negs	r4, r4
   10e3a:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   10e3e:	46bb      	mov	fp, r7
   10e40:	f04f 0301 	mov.w	r3, #1
   10e44:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
   10e48:	f7ff bbe8 	b.w	1061c <_vfprintf_r+0x560>
   10e4c:	07f8      	lsls	r0, r7, #31
   10e4e:	f57f aaf0 	bpl.w	10432 <_vfprintf_r+0x376>
   10e52:	e51f      	b.n	10894 <_vfprintf_r+0x7d8>
   10e54:	2301      	movs	r3, #1
   10e56:	f8c8 3004 	str.w	r3, [r8, #4]
   10e5a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10e5c:	4a19      	ldr	r2, [pc, #100]	; (10ec4 <_vfprintf_r+0xe08>)
   10e5e:	3301      	adds	r3, #1
   10e60:	3401      	adds	r4, #1
   10e62:	2b07      	cmp	r3, #7
   10e64:	942a      	str	r4, [sp, #168]	; 0xa8
   10e66:	9329      	str	r3, [sp, #164]	; 0xa4
   10e68:	f8c8 2000 	str.w	r2, [r8]
   10e6c:	f300 8468 	bgt.w	11740 <_vfprintf_r+0x1684>
   10e70:	f108 0808 	add.w	r8, r8, #8
   10e74:	2900      	cmp	r1, #0
   10e76:	f040 8225 	bne.w	112c4 <_vfprintf_r+0x1208>
   10e7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   10e7c:	f007 0301 	and.w	r3, r7, #1
   10e80:	4313      	orrs	r3, r2
   10e82:	f43f aad6 	beq.w	10432 <_vfprintf_r+0x376>
   10e86:	9b16      	ldr	r3, [sp, #88]	; 0x58
   10e88:	9917      	ldr	r1, [sp, #92]	; 0x5c
   10e8a:	18e2      	adds	r2, r4, r3
   10e8c:	e9c8 1300 	strd	r1, r3, [r8]
   10e90:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10e92:	922a      	str	r2, [sp, #168]	; 0xa8
   10e94:	3301      	adds	r3, #1
   10e96:	2b07      	cmp	r3, #7
   10e98:	9329      	str	r3, [sp, #164]	; 0xa4
   10e9a:	f300 8350 	bgt.w	1153e <_vfprintf_r+0x1482>
   10e9e:	f108 0808 	add.w	r8, r8, #8
   10ea2:	e220      	b.n	112e6 <_vfprintf_r+0x122a>
   10ea4:	ad54      	add	r5, sp, #336	; 0x150
   10ea6:	e4a9      	b.n	107fc <_vfprintf_r+0x740>
   10ea8:	f41b 7900 	ands.w	r9, fp, #512	; 0x200
   10eac:	f040 82a0 	bne.w	113f0 <_vfprintf_r+0x1334>
   10eb0:	f852 4b04 	ldr.w	r4, [r2], #4
   10eb4:	2301      	movs	r3, #1
   10eb6:	920e      	str	r2, [sp, #56]	; 0x38
   10eb8:	f7ff bbad 	b.w	10616 <_vfprintf_r+0x55a>
   10ebc:	0001a244 	.word	0x0001a244
   10ec0:	0001a254 	.word	0x0001a254
   10ec4:	0001a200 	.word	0x0001a200
   10ec8:	05b8      	lsls	r0, r7, #22
   10eca:	f100 8279 	bmi.w	113c0 <_vfprintf_r+0x1304>
   10ece:	ea4f 79e4 	mov.w	r9, r4, asr #31
   10ed2:	464b      	mov	r3, r9
   10ed4:	f7ff bb3d 	b.w	10552 <_vfprintf_r+0x496>
   10ed8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10eda:	f853 4b04 	ldr.w	r4, [r3], #4
   10ede:	930e      	str	r3, [sp, #56]	; 0x38
   10ee0:	f7ff bb96 	b.w	10610 <_vfprintf_r+0x554>
   10ee4:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   10ee8:	4602      	mov	r2, r0
   10eea:	460b      	mov	r3, r1
   10eec:	f7f9 fbc4 	bl	a678 <__aeabi_dcmpun>
   10ef0:	2800      	cmp	r0, #0
   10ef2:	f040 85f7 	bne.w	11ae4 <_vfprintf_r+0x1a28>
   10ef6:	2e61      	cmp	r6, #97	; 0x61
   10ef8:	f000 856c 	beq.w	119d4 <_vfprintf_r+0x1918>
   10efc:	2e41      	cmp	r6, #65	; 0x41
   10efe:	f000 827f 	beq.w	11400 <_vfprintf_r+0x1344>
   10f02:	9b08      	ldr	r3, [sp, #32]
   10f04:	3301      	adds	r3, #1
   10f06:	f000 8594 	beq.w	11a32 <_vfprintf_r+0x1976>
   10f0a:	f026 0320 	bic.w	r3, r6, #32
   10f0e:	2b47      	cmp	r3, #71	; 0x47
   10f10:	9306      	str	r3, [sp, #24]
   10f12:	f000 857b 	beq.w	11a0c <_vfprintf_r+0x1950>
   10f16:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   10f1a:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   10f1e:	930f      	str	r3, [sp, #60]	; 0x3c
   10f20:	4613      	mov	r3, r2
   10f22:	2b00      	cmp	r3, #0
   10f24:	f2c0 85f4 	blt.w	11b10 <_vfprintf_r+0x1a54>
   10f28:	930c      	str	r3, [sp, #48]	; 0x30
   10f2a:	2300      	movs	r3, #0
   10f2c:	468b      	mov	fp, r1
   10f2e:	931d      	str	r3, [sp, #116]	; 0x74
   10f30:	930d      	str	r3, [sp, #52]	; 0x34
   10f32:	9b06      	ldr	r3, [sp, #24]
   10f34:	2b46      	cmp	r3, #70	; 0x46
   10f36:	f000 842b 	beq.w	11790 <_vfprintf_r+0x16d4>
   10f3a:	2b45      	cmp	r3, #69	; 0x45
   10f3c:	f000 8514 	beq.w	11968 <_vfprintf_r+0x18ac>
   10f40:	9908      	ldr	r1, [sp, #32]
   10f42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   10f44:	9101      	str	r1, [sp, #4]
   10f46:	2102      	movs	r1, #2
   10f48:	9100      	str	r1, [sp, #0]
   10f4a:	a926      	add	r1, sp, #152	; 0x98
   10f4c:	9104      	str	r1, [sp, #16]
   10f4e:	a923      	add	r1, sp, #140	; 0x8c
   10f50:	9103      	str	r1, [sp, #12]
   10f52:	a922      	add	r1, sp, #136	; 0x88
   10f54:	465a      	mov	r2, fp
   10f56:	9809      	ldr	r0, [sp, #36]	; 0x24
   10f58:	9102      	str	r1, [sp, #8]
   10f5a:	f001 f895 	bl	12088 <_dtoa_r>
   10f5e:	9b06      	ldr	r3, [sp, #24]
   10f60:	4605      	mov	r5, r0
   10f62:	2b47      	cmp	r3, #71	; 0x47
   10f64:	f040 8644 	bne.w	11bf0 <_vfprintf_r+0x1b34>
   10f68:	f017 0f01 	tst.w	r7, #1
   10f6c:	46b9      	mov	r9, r7
   10f6e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   10f70:	f040 84f7 	bne.w	11962 <_vfprintf_r+0x18a6>
   10f74:	9b26      	ldr	r3, [sp, #152]	; 0x98
   10f76:	1b5b      	subs	r3, r3, r5
   10f78:	9312      	str	r3, [sp, #72]	; 0x48
   10f7a:	9b06      	ldr	r3, [sp, #24]
   10f7c:	2b47      	cmp	r3, #71	; 0x47
   10f7e:	f000 82f1 	beq.w	11564 <_vfprintf_r+0x14a8>
   10f82:	9b06      	ldr	r3, [sp, #24]
   10f84:	2b46      	cmp	r3, #70	; 0x46
   10f86:	f000 8442 	beq.w	1180e <_vfprintf_r+0x1752>
   10f8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
   10f8c:	9310      	str	r3, [sp, #64]	; 0x40
   10f8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   10f90:	9a06      	ldr	r2, [sp, #24]
   10f92:	3b01      	subs	r3, #1
   10f94:	2a41      	cmp	r2, #65	; 0x41
   10f96:	9322      	str	r3, [sp, #136]	; 0x88
   10f98:	f000 858a 	beq.w	11ab0 <_vfprintf_r+0x19f4>
   10f9c:	2100      	movs	r1, #0
   10f9e:	b2f2      	uxtb	r2, r6
   10fa0:	2b00      	cmp	r3, #0
   10fa2:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
   10fa6:	bfb6      	itet	lt
   10fa8:	222d      	movlt	r2, #45	; 0x2d
   10faa:	222b      	movge	r2, #43	; 0x2b
   10fac:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
   10fae:	f88d 2091 	strb.w	r2, [sp, #145]	; 0x91
   10fb2:	bfb8      	it	lt
   10fb4:	f1c3 0301 	rsblt	r3, r3, #1
   10fb8:	2b09      	cmp	r3, #9
   10fba:	f340 8581 	ble.w	11ac0 <_vfprintf_r+0x1a04>
   10fbe:	f10d 0c9f 	add.w	ip, sp, #159	; 0x9f
   10fc2:	4662      	mov	r2, ip
   10fc4:	4fba      	ldr	r7, [pc, #744]	; (112b0 <_vfprintf_r+0x11f4>)
   10fc6:	461c      	mov	r4, r3
   10fc8:	4610      	mov	r0, r2
   10fca:	fb87 1203 	smull	r1, r2, r7, r3
   10fce:	17d9      	asrs	r1, r3, #31
   10fd0:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
   10fd4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
   10fd8:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   10fdc:	3230      	adds	r2, #48	; 0x30
   10fde:	2c63      	cmp	r4, #99	; 0x63
   10fe0:	f800 2c01 	strb.w	r2, [r0, #-1]
   10fe4:	460b      	mov	r3, r1
   10fe6:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   10fea:	dcec      	bgt.n	10fc6 <_vfprintf_r+0xf0a>
   10fec:	3330      	adds	r3, #48	; 0x30
   10fee:	1e81      	subs	r1, r0, #2
   10ff0:	b2db      	uxtb	r3, r3
   10ff2:	458c      	cmp	ip, r1
   10ff4:	f802 3c01 	strb.w	r3, [r2, #-1]
   10ff8:	f240 85ff 	bls.w	11bfa <_vfprintf_r+0x1b3e>
   10ffc:	f10d 0192 	add.w	r1, sp, #146	; 0x92
   11000:	e001      	b.n	11006 <_vfprintf_r+0xf4a>
   11002:	f812 3b01 	ldrb.w	r3, [r2], #1
   11006:	4594      	cmp	ip, r2
   11008:	f801 3b01 	strb.w	r3, [r1], #1
   1100c:	d1f9      	bne.n	11002 <_vfprintf_r+0xf46>
   1100e:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
   11012:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   11016:	1a1b      	subs	r3, r3, r0
   11018:	4413      	add	r3, r2
   1101a:	aa24      	add	r2, sp, #144	; 0x90
   1101c:	1a9b      	subs	r3, r3, r2
   1101e:	931a      	str	r3, [sp, #104]	; 0x68
   11020:	9b12      	ldr	r3, [sp, #72]	; 0x48
   11022:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   11024:	2b01      	cmp	r3, #1
   11026:	441a      	add	r2, r3
   11028:	920c      	str	r2, [sp, #48]	; 0x30
   1102a:	f340 859e 	ble.w	11b6a <_vfprintf_r+0x1aae>
   1102e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   11030:	9a16      	ldr	r2, [sp, #88]	; 0x58
   11032:	4413      	add	r3, r2
   11034:	930c      	str	r3, [sp, #48]	; 0x30
   11036:	2300      	movs	r3, #0
   11038:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   1103a:	f429 6780 	bic.w	r7, r9, #1024	; 0x400
   1103e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
   11042:	f447 7780 	orr.w	r7, r7, #256	; 0x100
   11046:	930f      	str	r3, [sp, #60]	; 0x3c
   11048:	9206      	str	r2, [sp, #24]
   1104a:	9313      	str	r3, [sp, #76]	; 0x4c
   1104c:	9310      	str	r3, [sp, #64]	; 0x40
   1104e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   11050:	2b00      	cmp	r3, #0
   11052:	f040 82b0 	bne.w	115b6 <_vfprintf_r+0x14fa>
   11056:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   1105a:	9308      	str	r3, [sp, #32]
   1105c:	f7ff ba4f 	b.w	104fe <_vfprintf_r+0x442>
   11060:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   11062:	980b      	ldr	r0, [sp, #44]	; 0x2c
   11064:	f853 1b04 	ldr.w	r1, [r3], #4
   11068:	17c2      	asrs	r2, r0, #31
   1106a:	4655      	mov	r5, sl
   1106c:	e9c1 0200 	strd	r0, r2, [r1]
   11070:	930e      	str	r3, [sp, #56]	; 0x38
   11072:	f7ff b9fc 	b.w	1046e <_vfprintf_r+0x3b2>
   11076:	4b8f      	ldr	r3, [pc, #572]	; (112b4 <_vfprintf_r+0x11f8>)
   11078:	9318      	str	r3, [sp, #96]	; 0x60
   1107a:	f017 0920 	ands.w	r9, r7, #32
   1107e:	d049      	beq.n	11114 <_vfprintf_r+0x1058>
   11080:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   11082:	3307      	adds	r3, #7
   11084:	f023 0307 	bic.w	r3, r3, #7
   11088:	f8d3 9004 	ldr.w	r9, [r3, #4]
   1108c:	f853 4b08 	ldr.w	r4, [r3], #8
   11090:	930e      	str	r3, [sp, #56]	; 0x38
   11092:	07f8      	lsls	r0, r7, #31
   11094:	d509      	bpl.n	110aa <_vfprintf_r+0xfee>
   11096:	ea54 0309 	orrs.w	r3, r4, r9
   1109a:	d006      	beq.n	110aa <_vfprintf_r+0xfee>
   1109c:	2330      	movs	r3, #48	; 0x30
   1109e:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   110a2:	f047 0702 	orr.w	r7, r7, #2
   110a6:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   110aa:	2302      	movs	r3, #2
   110ac:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   110b0:	f7ff bab1 	b.w	10616 <_vfprintf_r+0x55a>
   110b4:	46bb      	mov	fp, r7
   110b6:	f7ff bb0d 	b.w	106d4 <_vfprintf_r+0x618>
   110ba:	4b7f      	ldr	r3, [pc, #508]	; (112b8 <_vfprintf_r+0x11fc>)
   110bc:	9318      	str	r3, [sp, #96]	; 0x60
   110be:	e7dc      	b.n	1107a <_vfprintf_r+0xfbe>
   110c0:	9907      	ldr	r1, [sp, #28]
   110c2:	9809      	ldr	r0, [sp, #36]	; 0x24
   110c4:	aa28      	add	r2, sp, #160	; 0xa0
   110c6:	f7fe f8d3 	bl	f270 <__sprint_r>
   110ca:	2800      	cmp	r0, #0
   110cc:	f47f a92b 	bne.w	10326 <_vfprintf_r+0x26a>
   110d0:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   110d2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   110d6:	f7ff b992 	b.w	103fe <_vfprintf_r+0x342>
   110da:	9907      	ldr	r1, [sp, #28]
   110dc:	9809      	ldr	r0, [sp, #36]	; 0x24
   110de:	aa28      	add	r2, sp, #160	; 0xa0
   110e0:	f7fe f8c6 	bl	f270 <__sprint_r>
   110e4:	2800      	cmp	r0, #0
   110e6:	f47f a91e 	bne.w	10326 <_vfprintf_r+0x26a>
   110ea:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   110ec:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   110f0:	f7ff bbde 	b.w	108b0 <_vfprintf_r+0x7f4>
   110f4:	2b06      	cmp	r3, #6
   110f6:	4629      	mov	r1, r5
   110f8:	bf28      	it	cs
   110fa:	2306      	movcs	r3, #6
   110fc:	462a      	mov	r2, r5
   110fe:	9508      	str	r5, [sp, #32]
   11100:	950d      	str	r5, [sp, #52]	; 0x34
   11102:	9306      	str	r3, [sp, #24]
   11104:	4d6d      	ldr	r5, [pc, #436]	; (112bc <_vfprintf_r+0x1200>)
   11106:	940e      	str	r4, [sp, #56]	; 0x38
   11108:	930c      	str	r3, [sp, #48]	; 0x30
   1110a:	910f      	str	r1, [sp, #60]	; 0x3c
   1110c:	9113      	str	r1, [sp, #76]	; 0x4c
   1110e:	9110      	str	r1, [sp, #64]	; 0x40
   11110:	f7ff b9f5 	b.w	104fe <_vfprintf_r+0x442>
   11114:	f017 0310 	ands.w	r3, r7, #16
   11118:	d069      	beq.n	111ee <_vfprintf_r+0x1132>
   1111a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1111c:	f853 4b04 	ldr.w	r4, [r3], #4
   11120:	930e      	str	r3, [sp, #56]	; 0x38
   11122:	e7b6      	b.n	11092 <_vfprintf_r+0xfd6>
   11124:	9907      	ldr	r1, [sp, #28]
   11126:	9809      	ldr	r0, [sp, #36]	; 0x24
   11128:	aa28      	add	r2, sp, #160	; 0xa0
   1112a:	f7fe f8a1 	bl	f270 <__sprint_r>
   1112e:	2800      	cmp	r0, #0
   11130:	f47f a8f9 	bne.w	10326 <_vfprintf_r+0x26a>
   11134:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   11138:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   1113c:	e488      	b.n	10a50 <_vfprintf_r+0x994>
   1113e:	9907      	ldr	r1, [sp, #28]
   11140:	9809      	ldr	r0, [sp, #36]	; 0x24
   11142:	aa28      	add	r2, sp, #160	; 0xa0
   11144:	f7fe f894 	bl	f270 <__sprint_r>
   11148:	2800      	cmp	r0, #0
   1114a:	f47f a8ec 	bne.w	10326 <_vfprintf_r+0x26a>
   1114e:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   11152:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   11156:	e488      	b.n	10a6a <_vfprintf_r+0x9ae>
   11158:	2300      	movs	r3, #0
   1115a:	f40b 6280 	and.w	r2, fp, #1024	; 0x400
   1115e:	e9cd a80c 	strd	sl, r8, [sp, #48]	; 0x30
   11162:	9606      	str	r6, [sp, #24]
   11164:	4692      	mov	sl, r2
   11166:	461e      	mov	r6, r3
   11168:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
   1116c:	af54      	add	r7, sp, #336	; 0x150
   1116e:	e00c      	b.n	1118a <_vfprintf_r+0x10ce>
   11170:	2300      	movs	r3, #0
   11172:	4620      	mov	r0, r4
   11174:	4649      	mov	r1, r9
   11176:	220a      	movs	r2, #10
   11178:	f005 f89e 	bl	162b8 <__aeabi_uldivmod>
   1117c:	2c0a      	cmp	r4, #10
   1117e:	f179 0300 	sbcs.w	r3, r9, #0
   11182:	d31b      	bcc.n	111bc <_vfprintf_r+0x1100>
   11184:	4604      	mov	r4, r0
   11186:	4689      	mov	r9, r1
   11188:	462f      	mov	r7, r5
   1118a:	4620      	mov	r0, r4
   1118c:	220a      	movs	r2, #10
   1118e:	2300      	movs	r3, #0
   11190:	4649      	mov	r1, r9
   11192:	f005 f891 	bl	162b8 <__aeabi_uldivmod>
   11196:	3230      	adds	r2, #48	; 0x30
   11198:	1e7d      	subs	r5, r7, #1
   1119a:	3601      	adds	r6, #1
   1119c:	f807 2c01 	strb.w	r2, [r7, #-1]
   111a0:	f1ba 0f00 	cmp.w	sl, #0
   111a4:	d0e4      	beq.n	11170 <_vfprintf_r+0x10b4>
   111a6:	f898 3000 	ldrb.w	r3, [r8]
   111aa:	429e      	cmp	r6, r3
   111ac:	d1e0      	bne.n	11170 <_vfprintf_r+0x10b4>
   111ae:	2eff      	cmp	r6, #255	; 0xff
   111b0:	d0de      	beq.n	11170 <_vfprintf_r+0x10b4>
   111b2:	2c0a      	cmp	r4, #10
   111b4:	f179 0300 	sbcs.w	r3, r9, #0
   111b8:	f080 80e0 	bcs.w	1137c <_vfprintf_r+0x12c0>
   111bc:	f8cd 8064 	str.w	r8, [sp, #100]	; 0x64
   111c0:	9612      	str	r6, [sp, #72]	; 0x48
   111c2:	e9dd a80c 	ldrd	sl, r8, [sp, #48]	; 0x30
   111c6:	9e06      	ldr	r6, [sp, #24]
   111c8:	f7ff bb14 	b.w	107f4 <_vfprintf_r+0x738>
   111cc:	9907      	ldr	r1, [sp, #28]
   111ce:	9809      	ldr	r0, [sp, #36]	; 0x24
   111d0:	aa28      	add	r2, sp, #160	; 0xa0
   111d2:	931d      	str	r3, [sp, #116]	; 0x74
   111d4:	f7fe f84c 	bl	f270 <__sprint_r>
   111d8:	2800      	cmp	r0, #0
   111da:	f47f a8a4 	bne.w	10326 <_vfprintf_r+0x26a>
   111de:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   111e2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   111e4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   111e6:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   111ea:	f7ff b8e1 	b.w	103b0 <_vfprintf_r+0x2f4>
   111ee:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   111f2:	f000 80b4 	beq.w	1135e <_vfprintf_r+0x12a2>
   111f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   111f8:	4699      	mov	r9, r3
   111fa:	f852 4b04 	ldr.w	r4, [r2], #4
   111fe:	920e      	str	r2, [sp, #56]	; 0x38
   11200:	b2a4      	uxth	r4, r4
   11202:	e746      	b.n	11092 <_vfprintf_r+0xfd6>
   11204:	9907      	ldr	r1, [sp, #28]
   11206:	9809      	ldr	r0, [sp, #36]	; 0x24
   11208:	aa28      	add	r2, sp, #160	; 0xa0
   1120a:	f7fe f831 	bl	f270 <__sprint_r>
   1120e:	2800      	cmp	r0, #0
   11210:	f47f a889 	bne.w	10326 <_vfprintf_r+0x26a>
   11214:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   11216:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   1121a:	f7ff bb36 	b.w	1088a <_vfprintf_r+0x7ce>
   1121e:	4614      	mov	r4, r2
   11220:	463a      	mov	r2, r7
   11222:	464f      	mov	r7, r9
   11224:	4691      	mov	r9, r2
   11226:	3301      	adds	r3, #1
   11228:	442c      	add	r4, r5
   1122a:	2b07      	cmp	r3, #7
   1122c:	f8c8 9000 	str.w	r9, [r8]
   11230:	f8c8 5004 	str.w	r5, [r8, #4]
   11234:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   11238:	f77f a8f9 	ble.w	1042e <_vfprintf_r+0x372>
   1123c:	e43b      	b.n	10ab6 <_vfprintf_r+0x9fa>
   1123e:	2b01      	cmp	r3, #1
   11240:	46bb      	mov	fp, r7
   11242:	f47f aac6 	bne.w	107d2 <_vfprintf_r+0x716>
   11246:	e48c      	b.n	10b62 <_vfprintf_r+0xaa6>
   11248:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1124a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1124c:	f853 2b04 	ldr.w	r2, [r3], #4
   11250:	4655      	mov	r5, sl
   11252:	6011      	str	r1, [r2, #0]
   11254:	930e      	str	r3, [sp, #56]	; 0x38
   11256:	f7ff b90a 	b.w	1046e <_vfprintf_r+0x3b2>
   1125a:	2e10      	cmp	r6, #16
   1125c:	f340 84ad 	ble.w	11bba <_vfprintf_r+0x1afe>
   11260:	f8df 905c 	ldr.w	r9, [pc, #92]	; 112c0 <_vfprintf_r+0x1204>
   11264:	4642      	mov	r2, r8
   11266:	4648      	mov	r0, r9
   11268:	4621      	mov	r1, r4
   1126a:	46a8      	mov	r8, r5
   1126c:	46b9      	mov	r9, r7
   1126e:	f04f 0b10 	mov.w	fp, #16
   11272:	4607      	mov	r7, r0
   11274:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   11276:	9c09      	ldr	r4, [sp, #36]	; 0x24
   11278:	9d07      	ldr	r5, [sp, #28]
   1127a:	e004      	b.n	11286 <_vfprintf_r+0x11ca>
   1127c:	3208      	adds	r2, #8
   1127e:	3e10      	subs	r6, #16
   11280:	2e10      	cmp	r6, #16
   11282:	f340 8248 	ble.w	11716 <_vfprintf_r+0x165a>
   11286:	3301      	adds	r3, #1
   11288:	3110      	adds	r1, #16
   1128a:	2b07      	cmp	r3, #7
   1128c:	e9c2 7b00 	strd	r7, fp, [r2]
   11290:	e9cd 3129 	strd	r3, r1, [sp, #164]	; 0xa4
   11294:	ddf2      	ble.n	1127c <_vfprintf_r+0x11c0>
   11296:	4629      	mov	r1, r5
   11298:	4620      	mov	r0, r4
   1129a:	aa28      	add	r2, sp, #160	; 0xa0
   1129c:	f7fd ffe8 	bl	f270 <__sprint_r>
   112a0:	2800      	cmp	r0, #0
   112a2:	f47f a840 	bne.w	10326 <_vfprintf_r+0x26a>
   112a6:	e9dd 3129 	ldrd	r3, r1, [sp, #164]	; 0xa4
   112aa:	aa2b      	add	r2, sp, #172	; 0xac
   112ac:	e7e7      	b.n	1127e <_vfprintf_r+0x11c2>
   112ae:	bf00      	nop
   112b0:	66666667 	.word	0x66666667
   112b4:	0001a1d0 	.word	0x0001a1d0
   112b8:	0001a1e4 	.word	0x0001a1e4
   112bc:	0001a1f8 	.word	0x0001a1f8
   112c0:	0001a254 	.word	0x0001a254
   112c4:	9b16      	ldr	r3, [sp, #88]	; 0x58
   112c6:	9817      	ldr	r0, [sp, #92]	; 0x5c
   112c8:	18e2      	adds	r2, r4, r3
   112ca:	e9c8 0300 	strd	r0, r3, [r8]
   112ce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   112d0:	922a      	str	r2, [sp, #168]	; 0xa8
   112d2:	3301      	adds	r3, #1
   112d4:	2b07      	cmp	r3, #7
   112d6:	9329      	str	r3, [sp, #164]	; 0xa4
   112d8:	f300 8131 	bgt.w	1153e <_vfprintf_r+0x1482>
   112dc:	f108 0808 	add.w	r8, r8, #8
   112e0:	2900      	cmp	r1, #0
   112e2:	f2c0 8302 	blt.w	118ea <_vfprintf_r+0x182e>
   112e6:	9912      	ldr	r1, [sp, #72]	; 0x48
   112e8:	3301      	adds	r3, #1
   112ea:	188c      	adds	r4, r1, r2
   112ec:	2b07      	cmp	r3, #7
   112ee:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   112f2:	f8c8 5000 	str.w	r5, [r8]
   112f6:	f8c8 1004 	str.w	r1, [r8, #4]
   112fa:	f77f a898 	ble.w	1042e <_vfprintf_r+0x372>
   112fe:	f7ff bbda 	b.w	10ab6 <_vfprintf_r+0x9fa>
   11302:	4628      	mov	r0, r5
   11304:	f8cd 9020 	str.w	r9, [sp, #32]
   11308:	940e      	str	r4, [sp, #56]	; 0x38
   1130a:	f7fc f9a9 	bl	d660 <strlen>
   1130e:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
   11312:	e9cd 090c 	strd	r0, r9, [sp, #48]	; 0x30
   11316:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   1131a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   1131e:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   11322:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   11326:	9306      	str	r3, [sp, #24]
   11328:	f7ff b8e9 	b.w	104fe <_vfprintf_r+0x442>
   1132c:	4614      	mov	r4, r2
   1132e:	9f08      	ldr	r7, [sp, #32]
   11330:	3601      	adds	r6, #1
   11332:	442c      	add	r4, r5
   11334:	2e07      	cmp	r6, #7
   11336:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   1133a:	f8c8 9000 	str.w	r9, [r8]
   1133e:	f8c8 5004 	str.w	r5, [r8, #4]
   11342:	f77f aba9 	ble.w	10a98 <_vfprintf_r+0x9dc>
   11346:	e506      	b.n	10d56 <_vfprintf_r+0xc9a>
   11348:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   1134c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1134e:	d03d      	beq.n	113cc <_vfprintf_r+0x1310>
   11350:	f853 4b04 	ldr.w	r4, [r3], #4
   11354:	4691      	mov	r9, r2
   11356:	930e      	str	r3, [sp, #56]	; 0x38
   11358:	b2e4      	uxtb	r4, r4
   1135a:	f7ff b959 	b.w	10610 <_vfprintf_r+0x554>
   1135e:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   11362:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   11364:	d040      	beq.n	113e8 <_vfprintf_r+0x132c>
   11366:	f853 4b04 	ldr.w	r4, [r3], #4
   1136a:	4691      	mov	r9, r2
   1136c:	930e      	str	r3, [sp, #56]	; 0x38
   1136e:	b2e4      	uxtb	r4, r4
   11370:	e68f      	b.n	11092 <_vfprintf_r+0xfd6>
   11372:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   11374:	f8df 924c 	ldr.w	r9, [pc, #588]	; 115c4 <_vfprintf_r+0x1508>
   11378:	f7ff bb49 	b.w	10a0e <_vfprintf_r+0x952>
   1137c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1137e:	991b      	ldr	r1, [sp, #108]	; 0x6c
   11380:	1aed      	subs	r5, r5, r3
   11382:	461a      	mov	r2, r3
   11384:	4628      	mov	r0, r5
   11386:	f003 f9e1 	bl	1474c <strncpy>
   1138a:	f898 3001 	ldrb.w	r3, [r8, #1]
   1138e:	b10b      	cbz	r3, 11394 <_vfprintf_r+0x12d8>
   11390:	f108 0801 	add.w	r8, r8, #1
   11394:	4620      	mov	r0, r4
   11396:	4649      	mov	r1, r9
   11398:	220a      	movs	r2, #10
   1139a:	2300      	movs	r3, #0
   1139c:	2600      	movs	r6, #0
   1139e:	f004 ff8b 	bl	162b8 <__aeabi_uldivmod>
   113a2:	e6ef      	b.n	11184 <_vfprintf_r+0x10c8>
   113a4:	222d      	movs	r2, #45	; 0x2d
   113a6:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   113aa:	f7ff b898 	b.w	104de <_vfprintf_r+0x422>
   113ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
   113b0:	18ae      	adds	r6, r5, r2
   113b2:	eba6 060b 	sub.w	r6, r6, fp
   113b6:	1ad5      	subs	r5, r2, r3
   113b8:	42ae      	cmp	r6, r5
   113ba:	bfa8      	it	ge
   113bc:	462e      	movge	r6, r5
   113be:	e48a      	b.n	10cd6 <_vfprintf_r+0xc1a>
   113c0:	f344 19c0 	sbfx	r9, r4, #7, #1
   113c4:	464b      	mov	r3, r9
   113c6:	b264      	sxtb	r4, r4
   113c8:	f7ff b8c3 	b.w	10552 <_vfprintf_r+0x496>
   113cc:	f853 4b04 	ldr.w	r4, [r3], #4
   113d0:	930e      	str	r3, [sp, #56]	; 0x38
   113d2:	f7ff b91d 	b.w	10610 <_vfprintf_r+0x554>
   113d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   113d8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   113da:	f853 2b04 	ldr.w	r2, [r3], #4
   113de:	4655      	mov	r5, sl
   113e0:	8011      	strh	r1, [r2, #0]
   113e2:	930e      	str	r3, [sp, #56]	; 0x38
   113e4:	f7ff b843 	b.w	1046e <_vfprintf_r+0x3b2>
   113e8:	f853 4b04 	ldr.w	r4, [r3], #4
   113ec:	930e      	str	r3, [sp, #56]	; 0x38
   113ee:	e650      	b.n	11092 <_vfprintf_r+0xfd6>
   113f0:	f852 4b04 	ldr.w	r4, [r2], #4
   113f4:	4689      	mov	r9, r1
   113f6:	2301      	movs	r3, #1
   113f8:	920e      	str	r2, [sp, #56]	; 0x38
   113fa:	b2e4      	uxtb	r4, r4
   113fc:	f7ff b90b 	b.w	10616 <_vfprintf_r+0x55a>
   11400:	2330      	movs	r3, #48	; 0x30
   11402:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   11406:	2358      	movs	r3, #88	; 0x58
   11408:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
   1140c:	9b08      	ldr	r3, [sp, #32]
   1140e:	f047 0402 	orr.w	r4, r7, #2
   11412:	2b63      	cmp	r3, #99	; 0x63
   11414:	f300 82e3 	bgt.w	119de <_vfprintf_r+0x1922>
   11418:	2300      	movs	r3, #0
   1141a:	ad3b      	add	r5, sp, #236	; 0xec
   1141c:	930d      	str	r3, [sp, #52]	; 0x34
   1141e:	f447 7381 	orr.w	r3, r7, #258	; 0x102
   11422:	930f      	str	r3, [sp, #60]	; 0x3c
   11424:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   11428:	4613      	mov	r3, r2
   1142a:	2b00      	cmp	r3, #0
   1142c:	4627      	mov	r7, r4
   1142e:	f2c0 8240 	blt.w	118b2 <_vfprintf_r+0x17f6>
   11432:	930c      	str	r3, [sp, #48]	; 0x30
   11434:	2300      	movs	r3, #0
   11436:	468b      	mov	fp, r1
   11438:	931d      	str	r3, [sp, #116]	; 0x74
   1143a:	f026 0320 	bic.w	r3, r6, #32
   1143e:	9306      	str	r3, [sp, #24]
   11440:	2e61      	cmp	r6, #97	; 0x61
   11442:	f000 8317 	beq.w	11a74 <_vfprintf_r+0x19b8>
   11446:	2e41      	cmp	r6, #65	; 0x41
   11448:	f47f ad73 	bne.w	10f32 <_vfprintf_r+0xe76>
   1144c:	aa22      	add	r2, sp, #136	; 0x88
   1144e:	4658      	mov	r0, fp
   11450:	990c      	ldr	r1, [sp, #48]	; 0x30
   11452:	f003 f8fb 	bl	1464c <frexp>
   11456:	2200      	movs	r2, #0
   11458:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   1145c:	f004 fc6a 	bl	15d34 <__aeabi_dmul>
   11460:	4602      	mov	r2, r0
   11462:	460b      	mov	r3, r1
   11464:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   11468:	2200      	movs	r2, #0
   1146a:	2300      	movs	r3, #0
   1146c:	f004 feca 	bl	16204 <__aeabi_dcmpeq>
   11470:	b108      	cbz	r0, 11476 <_vfprintf_r+0x13ba>
   11472:	2301      	movs	r3, #1
   11474:	9322      	str	r3, [sp, #136]	; 0x88
   11476:	4b54      	ldr	r3, [pc, #336]	; (115c8 <_vfprintf_r+0x150c>)
   11478:	930c      	str	r3, [sp, #48]	; 0x30
   1147a:	9b08      	ldr	r3, [sp, #32]
   1147c:	e9cd a612 	strd	sl, r6, [sp, #72]	; 0x48
   11480:	e9cd 781e 	strd	r7, r8, [sp, #120]	; 0x78
   11484:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   11488:	46ab      	mov	fp, r5
   1148a:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   1148e:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
   11492:	9510      	str	r5, [sp, #64]	; 0x40
   11494:	e006      	b.n	114a4 <_vfprintf_r+0x13e8>
   11496:	2200      	movs	r2, #0
   11498:	2300      	movs	r3, #0
   1149a:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   1149e:	f004 feb1 	bl	16204 <__aeabi_dcmpeq>
   114a2:	b9e8      	cbnz	r0, 114e0 <_vfprintf_r+0x1424>
   114a4:	2200      	movs	r2, #0
   114a6:	4b49      	ldr	r3, [pc, #292]	; (115cc <_vfprintf_r+0x1510>)
   114a8:	4630      	mov	r0, r6
   114aa:	4639      	mov	r1, r7
   114ac:	f004 fc42 	bl	15d34 <__aeabi_dmul>
   114b0:	460f      	mov	r7, r1
   114b2:	4606      	mov	r6, r0
   114b4:	f004 fed8 	bl	16268 <__aeabi_d2iz>
   114b8:	4604      	mov	r4, r0
   114ba:	f004 fbd1 	bl	15c60 <__aeabi_i2d>
   114be:	460b      	mov	r3, r1
   114c0:	4602      	mov	r2, r0
   114c2:	4639      	mov	r1, r7
   114c4:	4630      	mov	r0, r6
   114c6:	f004 fa7d 	bl	159c4 <__aeabi_dsub>
   114ca:	f81a 3004 	ldrb.w	r3, [sl, r4]
   114ce:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   114d2:	46d8      	mov	r8, fp
   114d4:	464d      	mov	r5, r9
   114d6:	4606      	mov	r6, r0
   114d8:	460f      	mov	r7, r1
   114da:	f80b 3b01 	strb.w	r3, [fp], #1
   114de:	d1da      	bne.n	11496 <_vfprintf_r+0x13da>
   114e0:	4630      	mov	r0, r6
   114e2:	4639      	mov	r1, r7
   114e4:	2200      	movs	r2, #0
   114e6:	4b3a      	ldr	r3, [pc, #232]	; (115d0 <_vfprintf_r+0x1514>)
   114e8:	46a9      	mov	r9, r5
   114ea:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
   114ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
   114f0:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
   114f4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   114f8:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
   114fc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   114fe:	9f1e      	ldr	r7, [sp, #120]	; 0x78
   11500:	f004 fea8 	bl	16254 <__aeabi_dcmpgt>
   11504:	2800      	cmp	r0, #0
   11506:	f040 8244 	bne.w	11992 <_vfprintf_r+0x18d6>
   1150a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   1150e:	2200      	movs	r2, #0
   11510:	4b2f      	ldr	r3, [pc, #188]	; (115d0 <_vfprintf_r+0x1514>)
   11512:	f004 fe77 	bl	16204 <__aeabi_dcmpeq>
   11516:	b110      	cbz	r0, 1151e <_vfprintf_r+0x1462>
   11518:	07e1      	lsls	r1, r4, #31
   1151a:	f100 823a 	bmi.w	11992 <_vfprintf_r+0x18d6>
   1151e:	464b      	mov	r3, r9
   11520:	2b00      	cmp	r3, #0
   11522:	db06      	blt.n	11532 <_vfprintf_r+0x1476>
   11524:	2230      	movs	r2, #48	; 0x30
   11526:	3301      	adds	r3, #1
   11528:	445b      	add	r3, fp
   1152a:	f80b 2b01 	strb.w	r2, [fp], #1
   1152e:	455b      	cmp	r3, fp
   11530:	d1fb      	bne.n	1152a <_vfprintf_r+0x146e>
   11532:	ebab 0305 	sub.w	r3, fp, r5
   11536:	46b9      	mov	r9, r7
   11538:	9312      	str	r3, [sp, #72]	; 0x48
   1153a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   1153c:	e51d      	b.n	10f7a <_vfprintf_r+0xebe>
   1153e:	9907      	ldr	r1, [sp, #28]
   11540:	9809      	ldr	r0, [sp, #36]	; 0x24
   11542:	aa28      	add	r2, sp, #160	; 0xa0
   11544:	f7fd fe94 	bl	f270 <__sprint_r>
   11548:	2800      	cmp	r0, #0
   1154a:	f47e aeec 	bne.w	10326 <_vfprintf_r+0x26a>
   1154e:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   11552:	9922      	ldr	r1, [sp, #136]	; 0x88
   11554:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   11558:	e6c2      	b.n	112e0 <_vfprintf_r+0x1224>
   1155a:	6d90      	ldr	r0, [r2, #88]	; 0x58
   1155c:	f7fa fe80 	bl	c260 <__retarget_lock_release_recursive>
   11560:	f7fe beb3 	b.w	102ca <_vfprintf_r+0x20e>
   11564:	9b22      	ldr	r3, [sp, #136]	; 0x88
   11566:	1cda      	adds	r2, r3, #3
   11568:	9310      	str	r3, [sp, #64]	; 0x40
   1156a:	db02      	blt.n	11572 <_vfprintf_r+0x14b6>
   1156c:	9a08      	ldr	r2, [sp, #32]
   1156e:	4293      	cmp	r3, r2
   11570:	dd04      	ble.n	1157c <_vfprintf_r+0x14c0>
   11572:	3e02      	subs	r6, #2
   11574:	f026 0320 	bic.w	r3, r6, #32
   11578:	9306      	str	r3, [sp, #24]
   1157a:	e508      	b.n	10f8e <_vfprintf_r+0xed2>
   1157c:	9b10      	ldr	r3, [sp, #64]	; 0x40
   1157e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   11580:	4293      	cmp	r3, r2
   11582:	f2c0 8182 	blt.w	1188a <_vfprintf_r+0x17ce>
   11586:	f019 0f01 	tst.w	r9, #1
   1158a:	f000 82a8 	beq.w	11ade <_vfprintf_r+0x1a22>
   1158e:	9a16      	ldr	r2, [sp, #88]	; 0x58
   11590:	4413      	add	r3, r2
   11592:	930c      	str	r3, [sp, #48]	; 0x30
   11594:	f419 6f80 	tst.w	r9, #1024	; 0x400
   11598:	f000 8290 	beq.w	11abc <_vfprintf_r+0x1a00>
   1159c:	9b10      	ldr	r3, [sp, #64]	; 0x40
   1159e:	2667      	movs	r6, #103	; 0x67
   115a0:	2b00      	cmp	r3, #0
   115a2:	f300 8146 	bgt.w	11832 <_vfprintf_r+0x1776>
   115a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   115a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   115ac:	9306      	str	r3, [sp, #24]
   115ae:	2300      	movs	r3, #0
   115b0:	930f      	str	r3, [sp, #60]	; 0x3c
   115b2:	9313      	str	r3, [sp, #76]	; 0x4c
   115b4:	e54b      	b.n	1104e <_vfprintf_r+0xf92>
   115b6:	222d      	movs	r2, #45	; 0x2d
   115b8:	2300      	movs	r3, #0
   115ba:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   115be:	9308      	str	r3, [sp, #32]
   115c0:	f7fe bfa0 	b.w	10504 <_vfprintf_r+0x448>
   115c4:	0001a254 	.word	0x0001a254
   115c8:	0001a1e4 	.word	0x0001a1e4
   115cc:	40300000 	.word	0x40300000
   115d0:	3fe00000 	.word	0x3fe00000
   115d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   115d6:	4642      	mov	r2, r8
   115d8:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
   115dc:	18eb      	adds	r3, r5, r3
   115de:	465e      	mov	r6, fp
   115e0:	9308      	str	r3, [sp, #32]
   115e2:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
   115e6:	9710      	str	r7, [sp, #64]	; 0x40
   115e8:	4621      	mov	r1, r4
   115ea:	9f19      	ldr	r7, [sp, #100]	; 0x64
   115ec:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
   115f0:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
   115f4:	f8dd b01c 	ldr.w	fp, [sp, #28]
   115f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   115fa:	9513      	str	r5, [sp, #76]	; 0x4c
   115fc:	f1b8 0f00 	cmp.w	r8, #0
   11600:	d02e      	beq.n	11660 <_vfprintf_r+0x15a4>
   11602:	2b00      	cmp	r3, #0
   11604:	d16c      	bne.n	116e0 <_vfprintf_r+0x1624>
   11606:	3f01      	subs	r7, #1
   11608:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   1160c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1160e:	4449      	add	r1, r9
   11610:	e9c2 3900 	strd	r3, r9, [r2]
   11614:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   11616:	912a      	str	r1, [sp, #168]	; 0xa8
   11618:	3301      	adds	r3, #1
   1161a:	2b07      	cmp	r3, #7
   1161c:	9329      	str	r3, [sp, #164]	; 0xa4
   1161e:	dc63      	bgt.n	116e8 <_vfprintf_r+0x162c>
   11620:	3208      	adds	r2, #8
   11622:	9b08      	ldr	r3, [sp, #32]
   11624:	7838      	ldrb	r0, [r7, #0]
   11626:	1b9b      	subs	r3, r3, r6
   11628:	4283      	cmp	r3, r0
   1162a:	bfa8      	it	ge
   1162c:	4603      	movge	r3, r0
   1162e:	2b00      	cmp	r3, #0
   11630:	461c      	mov	r4, r3
   11632:	dd0a      	ble.n	1164a <_vfprintf_r+0x158e>
   11634:	9829      	ldr	r0, [sp, #164]	; 0xa4
   11636:	4419      	add	r1, r3
   11638:	3001      	adds	r0, #1
   1163a:	2807      	cmp	r0, #7
   1163c:	e9c2 6300 	strd	r6, r3, [r2]
   11640:	912a      	str	r1, [sp, #168]	; 0xa8
   11642:	9029      	str	r0, [sp, #164]	; 0xa4
   11644:	dc5b      	bgt.n	116fe <_vfprintf_r+0x1642>
   11646:	7838      	ldrb	r0, [r7, #0]
   11648:	3208      	adds	r2, #8
   1164a:	2c00      	cmp	r4, #0
   1164c:	bfb4      	ite	lt
   1164e:	4605      	movlt	r5, r0
   11650:	1b05      	subge	r5, r0, r4
   11652:	2d00      	cmp	r5, #0
   11654:	dc15      	bgt.n	11682 <_vfprintf_r+0x15c6>
   11656:	4406      	add	r6, r0
   11658:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1165a:	f1b8 0f00 	cmp.w	r8, #0
   1165e:	d1d0      	bne.n	11602 <_vfprintf_r+0x1546>
   11660:	2b00      	cmp	r3, #0
   11662:	d13d      	bne.n	116e0 <_vfprintf_r+0x1624>
   11664:	e9dd 3512 	ldrd	r3, r5, [sp, #72]	; 0x48
   11668:	18eb      	adds	r3, r5, r3
   1166a:	429e      	cmp	r6, r3
   1166c:	46b3      	mov	fp, r6
   1166e:	9719      	str	r7, [sp, #100]	; 0x64
   11670:	4690      	mov	r8, r2
   11672:	460c      	mov	r4, r1
   11674:	bf28      	it	cs
   11676:	469b      	movcs	fp, r3
   11678:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   1167c:	9f10      	ldr	r7, [sp, #64]	; 0x40
   1167e:	f7ff bafd 	b.w	10c7c <_vfprintf_r+0xbc0>
   11682:	2d10      	cmp	r5, #16
   11684:	f340 826f 	ble.w	11b66 <_vfprintf_r+0x1aaa>
   11688:	2410      	movs	r4, #16
   1168a:	9829      	ldr	r0, [sp, #164]	; 0xa4
   1168c:	e004      	b.n	11698 <_vfprintf_r+0x15dc>
   1168e:	3d10      	subs	r5, #16
   11690:	2d10      	cmp	r5, #16
   11692:	f102 0208 	add.w	r2, r2, #8
   11696:	dd16      	ble.n	116c6 <_vfprintf_r+0x160a>
   11698:	3001      	adds	r0, #1
   1169a:	4ba8      	ldr	r3, [pc, #672]	; (1193c <_vfprintf_r+0x1880>)
   1169c:	3110      	adds	r1, #16
   1169e:	2807      	cmp	r0, #7
   116a0:	e9c2 3400 	strd	r3, r4, [r2]
   116a4:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   116a8:	ddf1      	ble.n	1168e <_vfprintf_r+0x15d2>
   116aa:	4659      	mov	r1, fp
   116ac:	4650      	mov	r0, sl
   116ae:	aa28      	add	r2, sp, #160	; 0xa0
   116b0:	f7fd fdde 	bl	f270 <__sprint_r>
   116b4:	2800      	cmp	r0, #0
   116b6:	f47e ae36 	bne.w	10326 <_vfprintf_r+0x26a>
   116ba:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
   116be:	3d10      	subs	r5, #16
   116c0:	2d10      	cmp	r5, #16
   116c2:	aa2b      	add	r2, sp, #172	; 0xac
   116c4:	dce8      	bgt.n	11698 <_vfprintf_r+0x15dc>
   116c6:	3001      	adds	r0, #1
   116c8:	4b9c      	ldr	r3, [pc, #624]	; (1193c <_vfprintf_r+0x1880>)
   116ca:	4429      	add	r1, r5
   116cc:	2807      	cmp	r0, #7
   116ce:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   116d2:	6055      	str	r5, [r2, #4]
   116d4:	6013      	str	r3, [r2, #0]
   116d6:	dc4e      	bgt.n	11776 <_vfprintf_r+0x16ba>
   116d8:	7838      	ldrb	r0, [r7, #0]
   116da:	3208      	adds	r2, #8
   116dc:	4406      	add	r6, r0
   116de:	e7bb      	b.n	11658 <_vfprintf_r+0x159c>
   116e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   116e2:	3b01      	subs	r3, #1
   116e4:	930f      	str	r3, [sp, #60]	; 0x3c
   116e6:	e791      	b.n	1160c <_vfprintf_r+0x1550>
   116e8:	4659      	mov	r1, fp
   116ea:	4650      	mov	r0, sl
   116ec:	aa28      	add	r2, sp, #160	; 0xa0
   116ee:	f7fd fdbf 	bl	f270 <__sprint_r>
   116f2:	2800      	cmp	r0, #0
   116f4:	f47e ae17 	bne.w	10326 <_vfprintf_r+0x26a>
   116f8:	992a      	ldr	r1, [sp, #168]	; 0xa8
   116fa:	aa2b      	add	r2, sp, #172	; 0xac
   116fc:	e791      	b.n	11622 <_vfprintf_r+0x1566>
   116fe:	4659      	mov	r1, fp
   11700:	4650      	mov	r0, sl
   11702:	aa28      	add	r2, sp, #160	; 0xa0
   11704:	f7fd fdb4 	bl	f270 <__sprint_r>
   11708:	2800      	cmp	r0, #0
   1170a:	f47e ae0c 	bne.w	10326 <_vfprintf_r+0x26a>
   1170e:	7838      	ldrb	r0, [r7, #0]
   11710:	992a      	ldr	r1, [sp, #168]	; 0xa8
   11712:	aa2b      	add	r2, sp, #172	; 0xac
   11714:	e799      	b.n	1164a <_vfprintf_r+0x158e>
   11716:	4645      	mov	r5, r8
   11718:	4690      	mov	r8, r2
   1171a:	463a      	mov	r2, r7
   1171c:	460c      	mov	r4, r1
   1171e:	464f      	mov	r7, r9
   11720:	4691      	mov	r9, r2
   11722:	3301      	adds	r3, #1
   11724:	4434      	add	r4, r6
   11726:	2b07      	cmp	r3, #7
   11728:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   1172c:	f8c8 9000 	str.w	r9, [r8]
   11730:	f8c8 6004 	str.w	r6, [r8, #4]
   11734:	f300 815d 	bgt.w	119f2 <_vfprintf_r+0x1936>
   11738:	f108 0808 	add.w	r8, r8, #8
   1173c:	f7ff ba98 	b.w	10c70 <_vfprintf_r+0xbb4>
   11740:	9907      	ldr	r1, [sp, #28]
   11742:	9809      	ldr	r0, [sp, #36]	; 0x24
   11744:	aa28      	add	r2, sp, #160	; 0xa0
   11746:	f7fd fd93 	bl	f270 <__sprint_r>
   1174a:	2800      	cmp	r0, #0
   1174c:	f47e adeb 	bne.w	10326 <_vfprintf_r+0x26a>
   11750:	9922      	ldr	r1, [sp, #136]	; 0x88
   11752:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   11754:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   11758:	f7ff bb8c 	b.w	10e74 <_vfprintf_r+0xdb8>
   1175c:	9907      	ldr	r1, [sp, #28]
   1175e:	9809      	ldr	r0, [sp, #36]	; 0x24
   11760:	aa28      	add	r2, sp, #160	; 0xa0
   11762:	f7fd fd85 	bl	f270 <__sprint_r>
   11766:	2800      	cmp	r0, #0
   11768:	f47e addd 	bne.w	10326 <_vfprintf_r+0x26a>
   1176c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   1176e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   11772:	f7ff ba74 	b.w	10c5e <_vfprintf_r+0xba2>
   11776:	4659      	mov	r1, fp
   11778:	4650      	mov	r0, sl
   1177a:	aa28      	add	r2, sp, #160	; 0xa0
   1177c:	f7fd fd78 	bl	f270 <__sprint_r>
   11780:	2800      	cmp	r0, #0
   11782:	f47e add0 	bne.w	10326 <_vfprintf_r+0x26a>
   11786:	7838      	ldrb	r0, [r7, #0]
   11788:	992a      	ldr	r1, [sp, #168]	; 0xa8
   1178a:	aa2b      	add	r2, sp, #172	; 0xac
   1178c:	4406      	add	r6, r0
   1178e:	e763      	b.n	11658 <_vfprintf_r+0x159c>
   11790:	9908      	ldr	r1, [sp, #32]
   11792:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   11794:	9101      	str	r1, [sp, #4]
   11796:	2103      	movs	r1, #3
   11798:	9100      	str	r1, [sp, #0]
   1179a:	a926      	add	r1, sp, #152	; 0x98
   1179c:	9104      	str	r1, [sp, #16]
   1179e:	a923      	add	r1, sp, #140	; 0x8c
   117a0:	9103      	str	r1, [sp, #12]
   117a2:	a922      	add	r1, sp, #136	; 0x88
   117a4:	465a      	mov	r2, fp
   117a6:	9809      	ldr	r0, [sp, #36]	; 0x24
   117a8:	9102      	str	r1, [sp, #8]
   117aa:	f000 fc6d 	bl	12088 <_dtoa_r>
   117ae:	7803      	ldrb	r3, [r0, #0]
   117b0:	4605      	mov	r5, r0
   117b2:	2b30      	cmp	r3, #48	; 0x30
   117b4:	f000 81c0 	beq.w	11b38 <_vfprintf_r+0x1a7c>
   117b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   117ba:	9a08      	ldr	r2, [sp, #32]
   117bc:	46b9      	mov	r9, r7
   117be:	4413      	add	r3, r2
   117c0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   117c2:	18ec      	adds	r4, r5, r3
   117c4:	4658      	mov	r0, fp
   117c6:	2200      	movs	r2, #0
   117c8:	2300      	movs	r3, #0
   117ca:	990c      	ldr	r1, [sp, #48]	; 0x30
   117cc:	f004 fd1a 	bl	16204 <__aeabi_dcmpeq>
   117d0:	b110      	cbz	r0, 117d8 <_vfprintf_r+0x171c>
   117d2:	4623      	mov	r3, r4
   117d4:	f7ff bbcf 	b.w	10f76 <_vfprintf_r+0xeba>
   117d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   117da:	42a3      	cmp	r3, r4
   117dc:	f4bf abcb 	bcs.w	10f76 <_vfprintf_r+0xeba>
   117e0:	2130      	movs	r1, #48	; 0x30
   117e2:	1c5a      	adds	r2, r3, #1
   117e4:	9226      	str	r2, [sp, #152]	; 0x98
   117e6:	7019      	strb	r1, [r3, #0]
   117e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   117ea:	429c      	cmp	r4, r3
   117ec:	d8f9      	bhi.n	117e2 <_vfprintf_r+0x1726>
   117ee:	f7ff bbc2 	b.w	10f76 <_vfprintf_r+0xeba>
   117f2:	9907      	ldr	r1, [sp, #28]
   117f4:	9809      	ldr	r0, [sp, #36]	; 0x24
   117f6:	aa28      	add	r2, sp, #160	; 0xa0
   117f8:	f7fd fd3a 	bl	f270 <__sprint_r>
   117fc:	2800      	cmp	r0, #0
   117fe:	f47e ad92 	bne.w	10326 <_vfprintf_r+0x26a>
   11802:	9b22      	ldr	r3, [sp, #136]	; 0x88
   11804:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   11806:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   1180a:	f7ff ba4c 	b.w	10ca6 <_vfprintf_r+0xbea>
   1180e:	9a22      	ldr	r2, [sp, #136]	; 0x88
   11810:	2a00      	cmp	r2, #0
   11812:	9210      	str	r2, [sp, #64]	; 0x40
   11814:	f340 81b9 	ble.w	11b8a <_vfprintf_r+0x1ace>
   11818:	9908      	ldr	r1, [sp, #32]
   1181a:	f009 0301 	and.w	r3, r9, #1
   1181e:	430b      	orrs	r3, r1
   11820:	f040 8140 	bne.w	11aa4 <_vfprintf_r+0x19e8>
   11824:	2666      	movs	r6, #102	; 0x66
   11826:	9b10      	ldr	r3, [sp, #64]	; 0x40
   11828:	930c      	str	r3, [sp, #48]	; 0x30
   1182a:	f419 6f80 	tst.w	r9, #1024	; 0x400
   1182e:	f43f aeba 	beq.w	115a6 <_vfprintf_r+0x14ea>
   11832:	9919      	ldr	r1, [sp, #100]	; 0x64
   11834:	780b      	ldrb	r3, [r1, #0]
   11836:	2bff      	cmp	r3, #255	; 0xff
   11838:	f000 81d6 	beq.w	11be8 <_vfprintf_r+0x1b2c>
   1183c:	2400      	movs	r4, #0
   1183e:	9a10      	ldr	r2, [sp, #64]	; 0x40
   11840:	4620      	mov	r0, r4
   11842:	e004      	b.n	1184e <_vfprintf_r+0x1792>
   11844:	3001      	adds	r0, #1
   11846:	3101      	adds	r1, #1
   11848:	2bff      	cmp	r3, #255	; 0xff
   1184a:	f000 8164 	beq.w	11b16 <_vfprintf_r+0x1a5a>
   1184e:	4293      	cmp	r3, r2
   11850:	f280 8161 	bge.w	11b16 <_vfprintf_r+0x1a5a>
   11854:	1ad2      	subs	r2, r2, r3
   11856:	784b      	ldrb	r3, [r1, #1]
   11858:	2b00      	cmp	r3, #0
   1185a:	d1f3      	bne.n	11844 <_vfprintf_r+0x1788>
   1185c:	780b      	ldrb	r3, [r1, #0]
   1185e:	3401      	adds	r4, #1
   11860:	e7f2      	b.n	11848 <_vfprintf_r+0x178c>
   11862:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   11866:	f7ff b964 	b.w	10b32 <_vfprintf_r+0xa76>
   1186a:	9b08      	ldr	r3, [sp, #32]
   1186c:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   11870:	940e      	str	r4, [sp, #56]	; 0x38
   11872:	9306      	str	r3, [sp, #24]
   11874:	930c      	str	r3, [sp, #48]	; 0x30
   11876:	9008      	str	r0, [sp, #32]
   11878:	900f      	str	r0, [sp, #60]	; 0x3c
   1187a:	9013      	str	r0, [sp, #76]	; 0x4c
   1187c:	9010      	str	r0, [sp, #64]	; 0x40
   1187e:	f7fe be3e 	b.w	104fe <_vfprintf_r+0x442>
   11882:	2300      	movs	r3, #0
   11884:	9308      	str	r3, [sp, #32]
   11886:	f7fe bc8a 	b.w	1019e <_vfprintf_r+0xe2>
   1188a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1188c:	9a16      	ldr	r2, [sp, #88]	; 0x58
   1188e:	189a      	adds	r2, r3, r2
   11890:	9b10      	ldr	r3, [sp, #64]	; 0x40
   11892:	920c      	str	r2, [sp, #48]	; 0x30
   11894:	2b00      	cmp	r3, #0
   11896:	f340 815d 	ble.w	11b54 <_vfprintf_r+0x1a98>
   1189a:	2667      	movs	r6, #103	; 0x67
   1189c:	e7c5      	b.n	1182a <_vfprintf_r+0x176e>
   1189e:	9907      	ldr	r1, [sp, #28]
   118a0:	9809      	ldr	r0, [sp, #36]	; 0x24
   118a2:	aa28      	add	r2, sp, #160	; 0xa0
   118a4:	f7fd fce4 	bl	f270 <__sprint_r>
   118a8:	2800      	cmp	r0, #0
   118aa:	f43e ade8 	beq.w	1047e <_vfprintf_r+0x3c2>
   118ae:	f7fe bd40 	b.w	10332 <_vfprintf_r+0x276>
   118b2:	f026 0320 	bic.w	r3, r6, #32
   118b6:	9306      	str	r3, [sp, #24]
   118b8:	222d      	movs	r2, #45	; 0x2d
   118ba:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   118be:	469b      	mov	fp, r3
   118c0:	f104 4300 	add.w	r3, r4, #2147483648	; 0x80000000
   118c4:	921d      	str	r2, [sp, #116]	; 0x74
   118c6:	930c      	str	r3, [sp, #48]	; 0x30
   118c8:	e5ba      	b.n	11440 <_vfprintf_r+0x1384>
   118ca:	9907      	ldr	r1, [sp, #28]
   118cc:	9809      	ldr	r0, [sp, #36]	; 0x24
   118ce:	aa28      	add	r2, sp, #160	; 0xa0
   118d0:	f7fd fcce 	bl	f270 <__sprint_r>
   118d4:	2800      	cmp	r0, #0
   118d6:	f47e ad26 	bne.w	10326 <_vfprintf_r+0x26a>
   118da:	9d22      	ldr	r5, [sp, #136]	; 0x88
   118dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   118de:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   118e0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   118e4:	1b5d      	subs	r5, r3, r5
   118e6:	f7ff b9f6 	b.w	10cd6 <_vfprintf_r+0xc1a>
   118ea:	424e      	negs	r6, r1
   118ec:	3110      	adds	r1, #16
   118ee:	f280 8181 	bge.w	11bf4 <_vfprintf_r+0x1b38>
   118f2:	4641      	mov	r1, r8
   118f4:	2410      	movs	r4, #16
   118f6:	46a8      	mov	r8, r5
   118f8:	f8df 9040 	ldr.w	r9, [pc, #64]	; 1193c <_vfprintf_r+0x1880>
   118fc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   11900:	9d07      	ldr	r5, [sp, #28]
   11902:	e004      	b.n	1190e <_vfprintf_r+0x1852>
   11904:	3108      	adds	r1, #8
   11906:	3e10      	subs	r6, #16
   11908:	2e10      	cmp	r6, #16
   1190a:	f340 8099 	ble.w	11a40 <_vfprintf_r+0x1984>
   1190e:	3301      	adds	r3, #1
   11910:	3210      	adds	r2, #16
   11912:	2b07      	cmp	r3, #7
   11914:	e9c1 9400 	strd	r9, r4, [r1]
   11918:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   1191c:	ddf2      	ble.n	11904 <_vfprintf_r+0x1848>
   1191e:	4629      	mov	r1, r5
   11920:	4658      	mov	r0, fp
   11922:	aa28      	add	r2, sp, #160	; 0xa0
   11924:	f7fd fca4 	bl	f270 <__sprint_r>
   11928:	2800      	cmp	r0, #0
   1192a:	f47e acfc 	bne.w	10326 <_vfprintf_r+0x26a>
   1192e:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   11932:	a92b      	add	r1, sp, #172	; 0xac
   11934:	e7e7      	b.n	11906 <_vfprintf_r+0x184a>
   11936:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   11938:	f7ff b962 	b.w	10c00 <_vfprintf_r+0xb44>
   1193c:	0001a254 	.word	0x0001a254
   11940:	9b07      	ldr	r3, [sp, #28]
   11942:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   11944:	07dd      	lsls	r5, r3, #31
   11946:	d407      	bmi.n	11958 <_vfprintf_r+0x189c>
   11948:	9b07      	ldr	r3, [sp, #28]
   1194a:	899b      	ldrh	r3, [r3, #12]
   1194c:	059c      	lsls	r4, r3, #22
   1194e:	d403      	bmi.n	11958 <_vfprintf_r+0x189c>
   11950:	9b07      	ldr	r3, [sp, #28]
   11952:	6d98      	ldr	r0, [r3, #88]	; 0x58
   11954:	f7fa fc84 	bl	c260 <__retarget_lock_release_recursive>
   11958:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1195c:	930b      	str	r3, [sp, #44]	; 0x2c
   1195e:	f7fe bcf1 	b.w	10344 <_vfprintf_r+0x288>
   11962:	9b08      	ldr	r3, [sp, #32]
   11964:	18ec      	adds	r4, r5, r3
   11966:	e72d      	b.n	117c4 <_vfprintf_r+0x1708>
   11968:	2102      	movs	r1, #2
   1196a:	9100      	str	r1, [sp, #0]
   1196c:	9908      	ldr	r1, [sp, #32]
   1196e:	465a      	mov	r2, fp
   11970:	1c4c      	adds	r4, r1, #1
   11972:	a926      	add	r1, sp, #152	; 0x98
   11974:	9104      	str	r1, [sp, #16]
   11976:	a923      	add	r1, sp, #140	; 0x8c
   11978:	9103      	str	r1, [sp, #12]
   1197a:	a922      	add	r1, sp, #136	; 0x88
   1197c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1197e:	9809      	ldr	r0, [sp, #36]	; 0x24
   11980:	9401      	str	r4, [sp, #4]
   11982:	9102      	str	r1, [sp, #8]
   11984:	f000 fb80 	bl	12088 <_dtoa_r>
   11988:	4605      	mov	r5, r0
   1198a:	46b9      	mov	r9, r7
   1198c:	442c      	add	r4, r5
   1198e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   11990:	e718      	b.n	117c4 <_vfprintf_r+0x1708>
   11992:	9b12      	ldr	r3, [sp, #72]	; 0x48
   11994:	9326      	str	r3, [sp, #152]	; 0x98
   11996:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   11998:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   1199c:	7bd9      	ldrb	r1, [r3, #15]
   1199e:	465b      	mov	r3, fp
   119a0:	428a      	cmp	r2, r1
   119a2:	d109      	bne.n	119b8 <_vfprintf_r+0x18fc>
   119a4:	2030      	movs	r0, #48	; 0x30
   119a6:	f803 0c01 	strb.w	r0, [r3, #-1]
   119aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   119ac:	1e5a      	subs	r2, r3, #1
   119ae:	9226      	str	r2, [sp, #152]	; 0x98
   119b0:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   119b4:	4291      	cmp	r1, r2
   119b6:	d0f6      	beq.n	119a6 <_vfprintf_r+0x18ea>
   119b8:	2a39      	cmp	r2, #57	; 0x39
   119ba:	bf0b      	itete	eq
   119bc:	9a0c      	ldreq	r2, [sp, #48]	; 0x30
   119be:	3201      	addne	r2, #1
   119c0:	7a92      	ldrbeq	r2, [r2, #10]
   119c2:	b2d2      	uxtbne	r2, r2
   119c4:	f803 2c01 	strb.w	r2, [r3, #-1]
   119c8:	e5b3      	b.n	11532 <_vfprintf_r+0x1476>
   119ca:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   119cc:	f8df 9234 	ldr.w	r9, [pc, #564]	; 11c04 <_vfprintf_r+0x1b48>
   119d0:	f7fe bfda 	b.w	10988 <_vfprintf_r+0x8cc>
   119d4:	2330      	movs	r3, #48	; 0x30
   119d6:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   119da:	2378      	movs	r3, #120	; 0x78
   119dc:	e514      	b.n	11408 <_vfprintf_r+0x134c>
   119de:	9809      	ldr	r0, [sp, #36]	; 0x24
   119e0:	1c59      	adds	r1, r3, #1
   119e2:	f7fa fc4f 	bl	c284 <_malloc_r>
   119e6:	4605      	mov	r5, r0
   119e8:	2800      	cmp	r0, #0
   119ea:	f000 80f6 	beq.w	11bda <_vfprintf_r+0x1b1e>
   119ee:	900d      	str	r0, [sp, #52]	; 0x34
   119f0:	e515      	b.n	1141e <_vfprintf_r+0x1362>
   119f2:	9907      	ldr	r1, [sp, #28]
   119f4:	9809      	ldr	r0, [sp, #36]	; 0x24
   119f6:	aa28      	add	r2, sp, #160	; 0xa0
   119f8:	f7fd fc3a 	bl	f270 <__sprint_r>
   119fc:	2800      	cmp	r0, #0
   119fe:	f47e ac92 	bne.w	10326 <_vfprintf_r+0x26a>
   11a02:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   11a04:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   11a08:	f7ff b932 	b.w	10c70 <_vfprintf_r+0xbb4>
   11a0c:	9b08      	ldr	r3, [sp, #32]
   11a0e:	2b00      	cmp	r3, #0
   11a10:	bf08      	it	eq
   11a12:	2301      	moveq	r3, #1
   11a14:	9308      	str	r3, [sp, #32]
   11a16:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   11a1a:	930f      	str	r3, [sp, #60]	; 0x3c
   11a1c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   11a1e:	2b00      	cmp	r3, #0
   11a20:	f2c0 80a9 	blt.w	11b76 <_vfprintf_r+0x1aba>
   11a24:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
   11a28:	901d      	str	r0, [sp, #116]	; 0x74
   11a2a:	930c      	str	r3, [sp, #48]	; 0x30
   11a2c:	900d      	str	r0, [sp, #52]	; 0x34
   11a2e:	f7ff ba87 	b.w	10f40 <_vfprintf_r+0xe84>
   11a32:	2306      	movs	r3, #6
   11a34:	9308      	str	r3, [sp, #32]
   11a36:	f026 0320 	bic.w	r3, r6, #32
   11a3a:	9306      	str	r3, [sp, #24]
   11a3c:	f7ff ba6b 	b.w	10f16 <_vfprintf_r+0xe5a>
   11a40:	4645      	mov	r5, r8
   11a42:	4688      	mov	r8, r1
   11a44:	3301      	adds	r3, #1
   11a46:	4432      	add	r2, r6
   11a48:	2b07      	cmp	r3, #7
   11a4a:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   11a4e:	f8c8 9000 	str.w	r9, [r8]
   11a52:	f8c8 6004 	str.w	r6, [r8, #4]
   11a56:	f77f aa22 	ble.w	10e9e <_vfprintf_r+0xde2>
   11a5a:	9907      	ldr	r1, [sp, #28]
   11a5c:	9809      	ldr	r0, [sp, #36]	; 0x24
   11a5e:	aa28      	add	r2, sp, #160	; 0xa0
   11a60:	f7fd fc06 	bl	f270 <__sprint_r>
   11a64:	2800      	cmp	r0, #0
   11a66:	f47e ac5e 	bne.w	10326 <_vfprintf_r+0x26a>
   11a6a:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   11a6e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   11a72:	e438      	b.n	112e6 <_vfprintf_r+0x122a>
   11a74:	aa22      	add	r2, sp, #136	; 0x88
   11a76:	4658      	mov	r0, fp
   11a78:	990c      	ldr	r1, [sp, #48]	; 0x30
   11a7a:	f002 fde7 	bl	1464c <frexp>
   11a7e:	2200      	movs	r2, #0
   11a80:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   11a84:	f004 f956 	bl	15d34 <__aeabi_dmul>
   11a88:	4602      	mov	r2, r0
   11a8a:	460b      	mov	r3, r1
   11a8c:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   11a90:	2200      	movs	r2, #0
   11a92:	2300      	movs	r3, #0
   11a94:	f004 fbb6 	bl	16204 <__aeabi_dcmpeq>
   11a98:	b108      	cbz	r0, 11a9e <_vfprintf_r+0x19e2>
   11a9a:	2301      	movs	r3, #1
   11a9c:	9322      	str	r3, [sp, #136]	; 0x88
   11a9e:	4b5a      	ldr	r3, [pc, #360]	; (11c08 <_vfprintf_r+0x1b4c>)
   11aa0:	930c      	str	r3, [sp, #48]	; 0x30
   11aa2:	e4ea      	b.n	1147a <_vfprintf_r+0x13be>
   11aa4:	9b16      	ldr	r3, [sp, #88]	; 0x58
   11aa6:	2666      	movs	r6, #102	; 0x66
   11aa8:	18d3      	adds	r3, r2, r3
   11aaa:	4419      	add	r1, r3
   11aac:	910c      	str	r1, [sp, #48]	; 0x30
   11aae:	e6bc      	b.n	1182a <_vfprintf_r+0x176e>
   11ab0:	f106 020f 	add.w	r2, r6, #15
   11ab4:	2101      	movs	r1, #1
   11ab6:	b2d2      	uxtb	r2, r2
   11ab8:	f7ff ba72 	b.w	10fa0 <_vfprintf_r+0xee4>
   11abc:	2667      	movs	r6, #103	; 0x67
   11abe:	e572      	b.n	115a6 <_vfprintf_r+0x14ea>
   11ac0:	2900      	cmp	r1, #0
   11ac2:	d15f      	bne.n	11b84 <_vfprintf_r+0x1ac8>
   11ac4:	2230      	movs	r2, #48	; 0x30
   11ac6:	f88d 2092 	strb.w	r2, [sp, #146]	; 0x92
   11aca:	f10d 0293 	add.w	r2, sp, #147	; 0x93
   11ace:	3330      	adds	r3, #48	; 0x30
   11ad0:	f802 3b01 	strb.w	r3, [r2], #1
   11ad4:	ab24      	add	r3, sp, #144	; 0x90
   11ad6:	1ad3      	subs	r3, r2, r3
   11ad8:	931a      	str	r3, [sp, #104]	; 0x68
   11ada:	f7ff baa1 	b.w	11020 <_vfprintf_r+0xf64>
   11ade:	9b10      	ldr	r3, [sp, #64]	; 0x40
   11ae0:	930c      	str	r3, [sp, #48]	; 0x30
   11ae2:	e557      	b.n	11594 <_vfprintf_r+0x14d8>
   11ae4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   11ae6:	2003      	movs	r0, #3
   11ae8:	2b00      	cmp	r3, #0
   11aea:	bfb8      	it	lt
   11aec:	222d      	movlt	r2, #45	; 0x2d
   11aee:	f04f 0300 	mov.w	r3, #0
   11af2:	bfa8      	it	ge
   11af4:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
   11af8:	4619      	mov	r1, r3
   11afa:	930d      	str	r3, [sp, #52]	; 0x34
   11afc:	4d43      	ldr	r5, [pc, #268]	; (11c0c <_vfprintf_r+0x1b50>)
   11afe:	4b44      	ldr	r3, [pc, #272]	; (11c10 <_vfprintf_r+0x1b54>)
   11b00:	bfb8      	it	lt
   11b02:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
   11b06:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   11b0a:	9006      	str	r0, [sp, #24]
   11b0c:	f7fe bcef 	b.w	104ee <_vfprintf_r+0x432>
   11b10:	2300      	movs	r3, #0
   11b12:	930d      	str	r3, [sp, #52]	; 0x34
   11b14:	e6d0      	b.n	118b8 <_vfprintf_r+0x17fc>
   11b16:	9119      	str	r1, [sp, #100]	; 0x64
   11b18:	9210      	str	r2, [sp, #64]	; 0x40
   11b1a:	9013      	str	r0, [sp, #76]	; 0x4c
   11b1c:	940f      	str	r4, [sp, #60]	; 0x3c
   11b1e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   11b20:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   11b22:	991c      	ldr	r1, [sp, #112]	; 0x70
   11b24:	4413      	add	r3, r2
   11b26:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   11b28:	fb01 2303 	mla	r3, r1, r3, r2
   11b2c:	930c      	str	r3, [sp, #48]	; 0x30
   11b2e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   11b32:	9306      	str	r3, [sp, #24]
   11b34:	f7ff ba8b 	b.w	1104e <_vfprintf_r+0xf92>
   11b38:	4658      	mov	r0, fp
   11b3a:	2200      	movs	r2, #0
   11b3c:	2300      	movs	r3, #0
   11b3e:	990c      	ldr	r1, [sp, #48]	; 0x30
   11b40:	f004 fb60 	bl	16204 <__aeabi_dcmpeq>
   11b44:	2800      	cmp	r0, #0
   11b46:	f47f ae37 	bne.w	117b8 <_vfprintf_r+0x16fc>
   11b4a:	9b08      	ldr	r3, [sp, #32]
   11b4c:	f1c3 0301 	rsb	r3, r3, #1
   11b50:	9322      	str	r3, [sp, #136]	; 0x88
   11b52:	e632      	b.n	117ba <_vfprintf_r+0x16fe>
   11b54:	f1c3 0301 	rsb	r3, r3, #1
   11b58:	441a      	add	r2, r3
   11b5a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   11b5e:	2667      	movs	r6, #103	; 0x67
   11b60:	920c      	str	r2, [sp, #48]	; 0x30
   11b62:	9306      	str	r3, [sp, #24]
   11b64:	e523      	b.n	115ae <_vfprintf_r+0x14f2>
   11b66:	9829      	ldr	r0, [sp, #164]	; 0xa4
   11b68:	e5ad      	b.n	116c6 <_vfprintf_r+0x160a>
   11b6a:	f019 0f01 	tst.w	r9, #1
   11b6e:	f43f aa62 	beq.w	11036 <_vfprintf_r+0xf7a>
   11b72:	f7ff ba5c 	b.w	1102e <_vfprintf_r+0xf72>
   11b76:	900d      	str	r0, [sp, #52]	; 0x34
   11b78:	e69e      	b.n	118b8 <_vfprintf_r+0x17fc>
   11b7a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   11b7c:	f8df 9084 	ldr.w	r9, [pc, #132]	; 11c04 <_vfprintf_r+0x1b48>
   11b80:	f7ff bb51 	b.w	11226 <_vfprintf_r+0x116a>
   11b84:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   11b88:	e7a1      	b.n	11ace <_vfprintf_r+0x1a12>
   11b8a:	9a08      	ldr	r2, [sp, #32]
   11b8c:	f009 0901 	and.w	r9, r9, #1
   11b90:	ea59 0302 	orrs.w	r3, r9, r2
   11b94:	d104      	bne.n	11ba0 <_vfprintf_r+0x1ae4>
   11b96:	2301      	movs	r3, #1
   11b98:	2666      	movs	r6, #102	; 0x66
   11b9a:	9306      	str	r3, [sp, #24]
   11b9c:	930c      	str	r3, [sp, #48]	; 0x30
   11b9e:	e506      	b.n	115ae <_vfprintf_r+0x14f2>
   11ba0:	9b16      	ldr	r3, [sp, #88]	; 0x58
   11ba2:	2666      	movs	r6, #102	; 0x66
   11ba4:	3301      	adds	r3, #1
   11ba6:	441a      	add	r2, r3
   11ba8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   11bac:	920c      	str	r2, [sp, #48]	; 0x30
   11bae:	9306      	str	r3, [sp, #24]
   11bb0:	e4fd      	b.n	115ae <_vfprintf_r+0x14f2>
   11bb2:	f8df 9050 	ldr.w	r9, [pc, #80]	; 11c04 <_vfprintf_r+0x1b48>
   11bb6:	f7ff bbbb 	b.w	11330 <_vfprintf_r+0x1274>
   11bba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   11bbc:	f8df 9044 	ldr.w	r9, [pc, #68]	; 11c04 <_vfprintf_r+0x1b48>
   11bc0:	e5af      	b.n	11722 <_vfprintf_r+0x1666>
   11bc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   11bc4:	f89a 6001 	ldrb.w	r6, [sl, #1]
   11bc8:	4692      	mov	sl, r2
   11bca:	f853 2b04 	ldr.w	r2, [r3], #4
   11bce:	930e      	str	r3, [sp, #56]	; 0x38
   11bd0:	ea42 73e2 	orr.w	r3, r2, r2, asr #31
   11bd4:	9308      	str	r3, [sp, #32]
   11bd6:	f7fe bae0 	b.w	1019a <_vfprintf_r+0xde>
   11bda:	9a07      	ldr	r2, [sp, #28]
   11bdc:	8993      	ldrh	r3, [r2, #12]
   11bde:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11be2:	8193      	strh	r3, [r2, #12]
   11be4:	f7fe bba5 	b.w	10332 <_vfprintf_r+0x276>
   11be8:	2300      	movs	r3, #0
   11bea:	930f      	str	r3, [sp, #60]	; 0x3c
   11bec:	9313      	str	r3, [sp, #76]	; 0x4c
   11bee:	e796      	b.n	11b1e <_vfprintf_r+0x1a62>
   11bf0:	9c08      	ldr	r4, [sp, #32]
   11bf2:	e6ca      	b.n	1198a <_vfprintf_r+0x18ce>
   11bf4:	f8df 900c 	ldr.w	r9, [pc, #12]	; 11c04 <_vfprintf_r+0x1b48>
   11bf8:	e724      	b.n	11a44 <_vfprintf_r+0x1988>
   11bfa:	2302      	movs	r3, #2
   11bfc:	931a      	str	r3, [sp, #104]	; 0x68
   11bfe:	f7ff ba0f 	b.w	11020 <_vfprintf_r+0xf64>
   11c02:	bf00      	nop
   11c04:	0001a254 	.word	0x0001a254
   11c08:	0001a1d0 	.word	0x0001a1d0
   11c0c:	0001a1c8 	.word	0x0001a1c8
   11c10:	0001a1cc 	.word	0x0001a1cc

00011c14 <vfprintf>:
   11c14:	468c      	mov	ip, r1
   11c16:	b500      	push	{lr}
   11c18:	4686      	mov	lr, r0
   11c1a:	4613      	mov	r3, r2
   11c1c:	4a03      	ldr	r2, [pc, #12]	; (11c2c <vfprintf+0x18>)
   11c1e:	4671      	mov	r1, lr
   11c20:	6810      	ldr	r0, [r2, #0]
   11c22:	f85d eb04 	ldr.w	lr, [sp], #4
   11c26:	4662      	mov	r2, ip
   11c28:	f7fe ba48 	b.w	100bc <_vfprintf_r>
   11c2c:	20000124 	.word	0x20000124

00011c30 <__sbprintf>:
   11c30:	b5f0      	push	{r4, r5, r6, r7, lr}
   11c32:	f44f 6c80 	mov.w	ip, #1024	; 0x400
   11c36:	4615      	mov	r5, r2
   11c38:	2400      	movs	r4, #0
   11c3a:	4606      	mov	r6, r0
   11c3c:	461f      	mov	r7, r3
   11c3e:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
   11c42:	ab1a      	add	r3, sp, #104	; 0x68
   11c44:	9300      	str	r3, [sp, #0]
   11c46:	9304      	str	r3, [sp, #16]
   11c48:	898b      	ldrh	r3, [r1, #12]
   11c4a:	a816      	add	r0, sp, #88	; 0x58
   11c4c:	f023 0302 	bic.w	r3, r3, #2
   11c50:	f8ad 300c 	strh.w	r3, [sp, #12]
   11c54:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   11c56:	9406      	str	r4, [sp, #24]
   11c58:	9319      	str	r3, [sp, #100]	; 0x64
   11c5a:	89cb      	ldrh	r3, [r1, #14]
   11c5c:	460c      	mov	r4, r1
   11c5e:	f8ad 300e 	strh.w	r3, [sp, #14]
   11c62:	69cb      	ldr	r3, [r1, #28]
   11c64:	f8cd c008 	str.w	ip, [sp, #8]
   11c68:	9307      	str	r3, [sp, #28]
   11c6a:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   11c6c:	f8cd c014 	str.w	ip, [sp, #20]
   11c70:	9309      	str	r3, [sp, #36]	; 0x24
   11c72:	f7fa fae5 	bl	c240 <__retarget_lock_init_recursive>
   11c76:	462a      	mov	r2, r5
   11c78:	463b      	mov	r3, r7
   11c7a:	4669      	mov	r1, sp
   11c7c:	4630      	mov	r0, r6
   11c7e:	f7fe fa1d 	bl	100bc <_vfprintf_r>
   11c82:	1e05      	subs	r5, r0, #0
   11c84:	db07      	blt.n	11c96 <__sbprintf+0x66>
   11c86:	4669      	mov	r1, sp
   11c88:	4630      	mov	r0, r6
   11c8a:	f001 f9f5 	bl	13078 <_fflush_r>
   11c8e:	2800      	cmp	r0, #0
   11c90:	bf18      	it	ne
   11c92:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
   11c96:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   11c9a:	065b      	lsls	r3, r3, #25
   11c9c:	d503      	bpl.n	11ca6 <__sbprintf+0x76>
   11c9e:	89a3      	ldrh	r3, [r4, #12]
   11ca0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11ca4:	81a3      	strh	r3, [r4, #12]
   11ca6:	9816      	ldr	r0, [sp, #88]	; 0x58
   11ca8:	f7fa face 	bl	c248 <__retarget_lock_close_recursive>
   11cac:	4628      	mov	r0, r5
   11cae:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
   11cb2:	bdf0      	pop	{r4, r5, r6, r7, pc}

00011cb4 <__swbuf_r>:
   11cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   11cb6:	4606      	mov	r6, r0
   11cb8:	460d      	mov	r5, r1
   11cba:	4614      	mov	r4, r2
   11cbc:	b110      	cbz	r0, 11cc4 <__swbuf_r+0x10>
   11cbe:	6b83      	ldr	r3, [r0, #56]	; 0x38
   11cc0:	2b00      	cmp	r3, #0
   11cc2:	d043      	beq.n	11d4c <__swbuf_r+0x98>
   11cc4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   11cc8:	69a3      	ldr	r3, [r4, #24]
   11cca:	0710      	lsls	r0, r2, #28
   11ccc:	60a3      	str	r3, [r4, #8]
   11cce:	b291      	uxth	r1, r2
   11cd0:	d51b      	bpl.n	11d0a <__swbuf_r+0x56>
   11cd2:	6923      	ldr	r3, [r4, #16]
   11cd4:	b1cb      	cbz	r3, 11d0a <__swbuf_r+0x56>
   11cd6:	b2ed      	uxtb	r5, r5
   11cd8:	0489      	lsls	r1, r1, #18
   11cda:	462f      	mov	r7, r5
   11cdc:	d522      	bpl.n	11d24 <__swbuf_r+0x70>
   11cde:	6822      	ldr	r2, [r4, #0]
   11ce0:	6961      	ldr	r1, [r4, #20]
   11ce2:	1ad3      	subs	r3, r2, r3
   11ce4:	4299      	cmp	r1, r3
   11ce6:	dd29      	ble.n	11d3c <__swbuf_r+0x88>
   11ce8:	3301      	adds	r3, #1
   11cea:	68a1      	ldr	r1, [r4, #8]
   11cec:	3901      	subs	r1, #1
   11cee:	60a1      	str	r1, [r4, #8]
   11cf0:	1c51      	adds	r1, r2, #1
   11cf2:	6021      	str	r1, [r4, #0]
   11cf4:	7015      	strb	r5, [r2, #0]
   11cf6:	6962      	ldr	r2, [r4, #20]
   11cf8:	429a      	cmp	r2, r3
   11cfa:	d02a      	beq.n	11d52 <__swbuf_r+0x9e>
   11cfc:	89a3      	ldrh	r3, [r4, #12]
   11cfe:	07db      	lsls	r3, r3, #31
   11d00:	d501      	bpl.n	11d06 <__swbuf_r+0x52>
   11d02:	2d0a      	cmp	r5, #10
   11d04:	d025      	beq.n	11d52 <__swbuf_r+0x9e>
   11d06:	4638      	mov	r0, r7
   11d08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   11d0a:	4621      	mov	r1, r4
   11d0c:	4630      	mov	r0, r6
   11d0e:	f000 f849 	bl	11da4 <__swsetup_r>
   11d12:	bb20      	cbnz	r0, 11d5e <__swbuf_r+0xaa>
   11d14:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   11d18:	b2ed      	uxtb	r5, r5
   11d1a:	b291      	uxth	r1, r2
   11d1c:	0489      	lsls	r1, r1, #18
   11d1e:	462f      	mov	r7, r5
   11d20:	6923      	ldr	r3, [r4, #16]
   11d22:	d4dc      	bmi.n	11cde <__swbuf_r+0x2a>
   11d24:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   11d28:	81a2      	strh	r2, [r4, #12]
   11d2a:	6e62      	ldr	r2, [r4, #100]	; 0x64
   11d2c:	6961      	ldr	r1, [r4, #20]
   11d2e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   11d32:	6662      	str	r2, [r4, #100]	; 0x64
   11d34:	6822      	ldr	r2, [r4, #0]
   11d36:	1ad3      	subs	r3, r2, r3
   11d38:	4299      	cmp	r1, r3
   11d3a:	dcd5      	bgt.n	11ce8 <__swbuf_r+0x34>
   11d3c:	4621      	mov	r1, r4
   11d3e:	4630      	mov	r0, r6
   11d40:	f001 f99a 	bl	13078 <_fflush_r>
   11d44:	b958      	cbnz	r0, 11d5e <__swbuf_r+0xaa>
   11d46:	2301      	movs	r3, #1
   11d48:	6822      	ldr	r2, [r4, #0]
   11d4a:	e7ce      	b.n	11cea <__swbuf_r+0x36>
   11d4c:	f001 fa40 	bl	131d0 <__sinit>
   11d50:	e7b8      	b.n	11cc4 <__swbuf_r+0x10>
   11d52:	4621      	mov	r1, r4
   11d54:	4630      	mov	r0, r6
   11d56:	f001 f98f 	bl	13078 <_fflush_r>
   11d5a:	2800      	cmp	r0, #0
   11d5c:	d0d3      	beq.n	11d06 <__swbuf_r+0x52>
   11d5e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   11d62:	e7d0      	b.n	11d06 <__swbuf_r+0x52>

00011d64 <__swbuf>:
   11d64:	4603      	mov	r3, r0
   11d66:	460a      	mov	r2, r1
   11d68:	4902      	ldr	r1, [pc, #8]	; (11d74 <__swbuf+0x10>)
   11d6a:	6808      	ldr	r0, [r1, #0]
   11d6c:	4619      	mov	r1, r3
   11d6e:	f7ff bfa1 	b.w	11cb4 <__swbuf_r>
   11d72:	bf00      	nop
   11d74:	20000124 	.word	0x20000124

00011d78 <_write_r>:
   11d78:	b538      	push	{r3, r4, r5, lr}
   11d7a:	460c      	mov	r4, r1
   11d7c:	4611      	mov	r1, r2
   11d7e:	2200      	movs	r2, #0
   11d80:	4684      	mov	ip, r0
   11d82:	4d07      	ldr	r5, [pc, #28]	; (11da0 <_write_r+0x28>)
   11d84:	4620      	mov	r0, r4
   11d86:	602a      	str	r2, [r5, #0]
   11d88:	461a      	mov	r2, r3
   11d8a:	4664      	mov	r4, ip
   11d8c:	f004 fd10 	bl	167b0 <_write>
   11d90:	1c43      	adds	r3, r0, #1
   11d92:	d000      	beq.n	11d96 <_write_r+0x1e>
   11d94:	bd38      	pop	{r3, r4, r5, pc}
   11d96:	682b      	ldr	r3, [r5, #0]
   11d98:	2b00      	cmp	r3, #0
   11d9a:	d0fb      	beq.n	11d94 <_write_r+0x1c>
   11d9c:	6023      	str	r3, [r4, #0]
   11d9e:	bd38      	pop	{r3, r4, r5, pc}
   11da0:	20001fa8 	.word	0x20001fa8

00011da4 <__swsetup_r>:
   11da4:	b538      	push	{r3, r4, r5, lr}
   11da6:	4b33      	ldr	r3, [pc, #204]	; (11e74 <__swsetup_r+0xd0>)
   11da8:	4605      	mov	r5, r0
   11daa:	681b      	ldr	r3, [r3, #0]
   11dac:	460c      	mov	r4, r1
   11dae:	b10b      	cbz	r3, 11db4 <__swsetup_r+0x10>
   11db0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   11db2:	b312      	cbz	r2, 11dfa <__swsetup_r+0x56>
   11db4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   11db8:	0718      	lsls	r0, r3, #28
   11dba:	b29a      	uxth	r2, r3
   11dbc:	d525      	bpl.n	11e0a <__swsetup_r+0x66>
   11dbe:	6921      	ldr	r1, [r4, #16]
   11dc0:	2900      	cmp	r1, #0
   11dc2:	d02d      	beq.n	11e20 <__swsetup_r+0x7c>
   11dc4:	f012 0001 	ands.w	r0, r2, #1
   11dc8:	d007      	beq.n	11dda <__swsetup_r+0x36>
   11dca:	2500      	movs	r5, #0
   11dcc:	6960      	ldr	r0, [r4, #20]
   11dce:	60a5      	str	r5, [r4, #8]
   11dd0:	4240      	negs	r0, r0
   11dd2:	61a0      	str	r0, [r4, #24]
   11dd4:	b139      	cbz	r1, 11de6 <__swsetup_r+0x42>
   11dd6:	2000      	movs	r0, #0
   11dd8:	bd38      	pop	{r3, r4, r5, pc}
   11dda:	0795      	lsls	r5, r2, #30
   11ddc:	bf58      	it	pl
   11dde:	6960      	ldrpl	r0, [r4, #20]
   11de0:	60a0      	str	r0, [r4, #8]
   11de2:	2900      	cmp	r1, #0
   11de4:	d1f7      	bne.n	11dd6 <__swsetup_r+0x32>
   11de6:	0612      	lsls	r2, r2, #24
   11de8:	bf58      	it	pl
   11dea:	4608      	movpl	r0, r1
   11dec:	d5f4      	bpl.n	11dd8 <__swsetup_r+0x34>
   11dee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11df2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   11df6:	81a3      	strh	r3, [r4, #12]
   11df8:	bd38      	pop	{r3, r4, r5, pc}
   11dfa:	4618      	mov	r0, r3
   11dfc:	f001 f9e8 	bl	131d0 <__sinit>
   11e00:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   11e04:	0718      	lsls	r0, r3, #28
   11e06:	b29a      	uxth	r2, r3
   11e08:	d4d9      	bmi.n	11dbe <__swsetup_r+0x1a>
   11e0a:	06d1      	lsls	r1, r2, #27
   11e0c:	d52a      	bpl.n	11e64 <__swsetup_r+0xc0>
   11e0e:	0752      	lsls	r2, r2, #29
   11e10:	d414      	bmi.n	11e3c <__swsetup_r+0x98>
   11e12:	6921      	ldr	r1, [r4, #16]
   11e14:	f043 0308 	orr.w	r3, r3, #8
   11e18:	81a3      	strh	r3, [r4, #12]
   11e1a:	b29a      	uxth	r2, r3
   11e1c:	2900      	cmp	r1, #0
   11e1e:	d1d1      	bne.n	11dc4 <__swsetup_r+0x20>
   11e20:	f402 7020 	and.w	r0, r2, #640	; 0x280
   11e24:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
   11e28:	d0cc      	beq.n	11dc4 <__swsetup_r+0x20>
   11e2a:	4621      	mov	r1, r4
   11e2c:	4628      	mov	r0, r5
   11e2e:	f001 fdad 	bl	1398c <__smakebuf_r>
   11e32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   11e36:	6921      	ldr	r1, [r4, #16]
   11e38:	b29a      	uxth	r2, r3
   11e3a:	e7c3      	b.n	11dc4 <__swsetup_r+0x20>
   11e3c:	6b21      	ldr	r1, [r4, #48]	; 0x30
   11e3e:	b151      	cbz	r1, 11e56 <__swsetup_r+0xb2>
   11e40:	f104 0240 	add.w	r2, r4, #64	; 0x40
   11e44:	4291      	cmp	r1, r2
   11e46:	d004      	beq.n	11e52 <__swsetup_r+0xae>
   11e48:	4628      	mov	r0, r5
   11e4a:	f001 fc0b 	bl	13664 <_free_r>
   11e4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   11e52:	2200      	movs	r2, #0
   11e54:	6322      	str	r2, [r4, #48]	; 0x30
   11e56:	2200      	movs	r2, #0
   11e58:	6921      	ldr	r1, [r4, #16]
   11e5a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   11e5e:	e9c4 1200 	strd	r1, r2, [r4]
   11e62:	e7d7      	b.n	11e14 <__swsetup_r+0x70>
   11e64:	2209      	movs	r2, #9
   11e66:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11e6a:	602a      	str	r2, [r5, #0]
   11e6c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   11e70:	81a3      	strh	r3, [r4, #12]
   11e72:	bd38      	pop	{r3, r4, r5, pc}
   11e74:	20000124 	.word	0x20000124

00011e78 <register_fini>:
   11e78:	4b02      	ldr	r3, [pc, #8]	; (11e84 <register_fini+0xc>)
   11e7a:	b113      	cbz	r3, 11e82 <register_fini+0xa>
   11e7c:	4802      	ldr	r0, [pc, #8]	; (11e88 <register_fini+0x10>)
   11e7e:	f000 b867 	b.w	11f50 <atexit>
   11e82:	4770      	bx	lr
   11e84:	00000000 	.word	0x00000000
   11e88:	0001341d 	.word	0x0001341d

00011e8c <__call_exitprocs>:
   11e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e90:	4683      	mov	fp, r0
   11e92:	4b2d      	ldr	r3, [pc, #180]	; (11f48 <__call_exitprocs+0xbc>)
   11e94:	b083      	sub	sp, #12
   11e96:	6818      	ldr	r0, [r3, #0]
   11e98:	460f      	mov	r7, r1
   11e9a:	f8cd b004 	str.w	fp, [sp, #4]
   11e9e:	f7fa f9d7 	bl	c250 <__retarget_lock_acquire_recursive>
   11ea2:	4b2a      	ldr	r3, [pc, #168]	; (11f4c <__call_exitprocs+0xc0>)
   11ea4:	f8d3 8000 	ldr.w	r8, [r3]
   11ea8:	f8d8 6148 	ldr.w	r6, [r8, #328]	; 0x148
   11eac:	b19e      	cbz	r6, 11ed6 <__call_exitprocs+0x4a>
   11eae:	f04f 0901 	mov.w	r9, #1
   11eb2:	f04f 0a00 	mov.w	sl, #0
   11eb6:	6874      	ldr	r4, [r6, #4]
   11eb8:	1e65      	subs	r5, r4, #1
   11eba:	d40c      	bmi.n	11ed6 <__call_exitprocs+0x4a>
   11ebc:	3401      	adds	r4, #1
   11ebe:	eb06 0484 	add.w	r4, r6, r4, lsl #2
   11ec2:	b17f      	cbz	r7, 11ee4 <__call_exitprocs+0x58>
   11ec4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
   11ec8:	42bb      	cmp	r3, r7
   11eca:	d00b      	beq.n	11ee4 <__call_exitprocs+0x58>
   11ecc:	3d01      	subs	r5, #1
   11ece:	1c6b      	adds	r3, r5, #1
   11ed0:	f1a4 0404 	sub.w	r4, r4, #4
   11ed4:	d1f5      	bne.n	11ec2 <__call_exitprocs+0x36>
   11ed6:	4b1c      	ldr	r3, [pc, #112]	; (11f48 <__call_exitprocs+0xbc>)
   11ed8:	6818      	ldr	r0, [r3, #0]
   11eda:	b003      	add	sp, #12
   11edc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ee0:	f7fa b9be 	b.w	c260 <__retarget_lock_release_recursive>
   11ee4:	6873      	ldr	r3, [r6, #4]
   11ee6:	6822      	ldr	r2, [r4, #0]
   11ee8:	3b01      	subs	r3, #1
   11eea:	42ab      	cmp	r3, r5
   11eec:	bf0c      	ite	eq
   11eee:	6075      	streq	r5, [r6, #4]
   11ef0:	f8c4 a000 	strne.w	sl, [r4]
   11ef4:	2a00      	cmp	r2, #0
   11ef6:	d0e9      	beq.n	11ecc <__call_exitprocs+0x40>
   11ef8:	f8d6 0188 	ldr.w	r0, [r6, #392]	; 0x188
   11efc:	fa09 f105 	lsl.w	r1, r9, r5
   11f00:	4201      	tst	r1, r0
   11f02:	f8d6 b004 	ldr.w	fp, [r6, #4]
   11f06:	d10b      	bne.n	11f20 <__call_exitprocs+0x94>
   11f08:	4790      	blx	r2
   11f0a:	6872      	ldr	r2, [r6, #4]
   11f0c:	455a      	cmp	r2, fp
   11f0e:	d112      	bne.n	11f36 <__call_exitprocs+0xaa>
   11f10:	f8d8 3148 	ldr.w	r3, [r8, #328]	; 0x148
   11f14:	42b3      	cmp	r3, r6
   11f16:	d0d9      	beq.n	11ecc <__call_exitprocs+0x40>
   11f18:	461e      	mov	r6, r3
   11f1a:	2e00      	cmp	r6, #0
   11f1c:	d1cb      	bne.n	11eb6 <__call_exitprocs+0x2a>
   11f1e:	e7da      	b.n	11ed6 <__call_exitprocs+0x4a>
   11f20:	f8d6 018c 	ldr.w	r0, [r6, #396]	; 0x18c
   11f24:	4201      	tst	r1, r0
   11f26:	d10b      	bne.n	11f40 <__call_exitprocs+0xb4>
   11f28:	9801      	ldr	r0, [sp, #4]
   11f2a:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
   11f2e:	4790      	blx	r2
   11f30:	6872      	ldr	r2, [r6, #4]
   11f32:	455a      	cmp	r2, fp
   11f34:	d0ec      	beq.n	11f10 <__call_exitprocs+0x84>
   11f36:	f8d8 6148 	ldr.w	r6, [r8, #328]	; 0x148
   11f3a:	2e00      	cmp	r6, #0
   11f3c:	d1bb      	bne.n	11eb6 <__call_exitprocs+0x2a>
   11f3e:	e7ca      	b.n	11ed6 <__call_exitprocs+0x4a>
   11f40:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
   11f44:	4790      	blx	r2
   11f46:	e7e0      	b.n	11f0a <__call_exitprocs+0x7e>
   11f48:	20000960 	.word	0x20000960
   11f4c:	0001a1bc 	.word	0x0001a1bc

00011f50 <atexit>:
   11f50:	2300      	movs	r3, #0
   11f52:	4601      	mov	r1, r0
   11f54:	461a      	mov	r2, r3
   11f56:	4618      	mov	r0, r3
   11f58:	f003 baac 	b.w	154b4 <__register_exitproc>

00011f5c <quorem>:
   11f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f60:	6903      	ldr	r3, [r0, #16]
   11f62:	690c      	ldr	r4, [r1, #16]
   11f64:	b085      	sub	sp, #20
   11f66:	42a3      	cmp	r3, r4
   11f68:	f2c0 8089 	blt.w	1207e <quorem+0x122>
   11f6c:	3c01      	subs	r4, #1
   11f6e:	f101 0514 	add.w	r5, r1, #20
   11f72:	00a3      	lsls	r3, r4, #2
   11f74:	f100 0814 	add.w	r8, r0, #20
   11f78:	9301      	str	r3, [sp, #4]
   11f7a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
   11f7e:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   11f82:	3301      	adds	r3, #1
   11f84:	468a      	mov	sl, r1
   11f86:	429a      	cmp	r2, r3
   11f88:	eb08 0184 	add.w	r1, r8, r4, lsl #2
   11f8c:	4681      	mov	r9, r0
   11f8e:	fbb2 f6f3 	udiv	r6, r2, r3
   11f92:	eb05 0784 	add.w	r7, r5, r4, lsl #2
   11f96:	9102      	str	r1, [sp, #8]
   11f98:	d33a      	bcc.n	12010 <quorem+0xb4>
   11f9a:	2100      	movs	r1, #0
   11f9c:	46ae      	mov	lr, r5
   11f9e:	4640      	mov	r0, r8
   11fa0:	460a      	mov	r2, r1
   11fa2:	46a3      	mov	fp, r4
   11fa4:	9503      	str	r5, [sp, #12]
   11fa6:	f85e 5b04 	ldr.w	r5, [lr], #4
   11faa:	6804      	ldr	r4, [r0, #0]
   11fac:	b2ab      	uxth	r3, r5
   11fae:	fb06 1303 	mla	r3, r6, r3, r1
   11fb2:	0c2d      	lsrs	r5, r5, #16
   11fb4:	0c19      	lsrs	r1, r3, #16
   11fb6:	fb06 1105 	mla	r1, r6, r5, r1
   11fba:	b29b      	uxth	r3, r3
   11fbc:	1ad2      	subs	r2, r2, r3
   11fbe:	fa1f fc84 	uxth.w	ip, r4
   11fc2:	4494      	add	ip, r2
   11fc4:	b28a      	uxth	r2, r1
   11fc6:	ebc2 4214 	rsb	r2, r2, r4, lsr #16
   11fca:	eb02 422c 	add.w	r2, r2, ip, asr #16
   11fce:	fa1f fc8c 	uxth.w	ip, ip
   11fd2:	ea4c 4302 	orr.w	r3, ip, r2, lsl #16
   11fd6:	4577      	cmp	r7, lr
   11fd8:	f840 3b04 	str.w	r3, [r0], #4
   11fdc:	ea4f 4111 	mov.w	r1, r1, lsr #16
   11fe0:	ea4f 4222 	mov.w	r2, r2, asr #16
   11fe4:	d2df      	bcs.n	11fa6 <quorem+0x4a>
   11fe6:	9b01      	ldr	r3, [sp, #4]
   11fe8:	465c      	mov	r4, fp
   11fea:	f858 3003 	ldr.w	r3, [r8, r3]
   11fee:	9d03      	ldr	r5, [sp, #12]
   11ff0:	b973      	cbnz	r3, 12010 <quorem+0xb4>
   11ff2:	9b02      	ldr	r3, [sp, #8]
   11ff4:	3b04      	subs	r3, #4
   11ff6:	4598      	cmp	r8, r3
   11ff8:	d304      	bcc.n	12004 <quorem+0xa8>
   11ffa:	e007      	b.n	1200c <quorem+0xb0>
   11ffc:	4598      	cmp	r8, r3
   11ffe:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   12002:	d203      	bcs.n	1200c <quorem+0xb0>
   12004:	f853 2904 	ldr.w	r2, [r3], #-4
   12008:	2a00      	cmp	r2, #0
   1200a:	d0f7      	beq.n	11ffc <quorem+0xa0>
   1200c:	f8c9 4010 	str.w	r4, [r9, #16]
   12010:	4651      	mov	r1, sl
   12012:	4648      	mov	r0, r9
   12014:	f002 f850 	bl	140b8 <__mcmp>
   12018:	2800      	cmp	r0, #0
   1201a:	db2c      	blt.n	12076 <quorem+0x11a>
   1201c:	4640      	mov	r0, r8
   1201e:	2300      	movs	r3, #0
   12020:	3601      	adds	r6, #1
   12022:	f855 1b04 	ldr.w	r1, [r5], #4
   12026:	f8d0 c000 	ldr.w	ip, [r0]
   1202a:	b28a      	uxth	r2, r1
   1202c:	1a9a      	subs	r2, r3, r2
   1202e:	fa1f fe8c 	uxth.w	lr, ip
   12032:	0c0b      	lsrs	r3, r1, #16
   12034:	4472      	add	r2, lr
   12036:	ebc3 431c 	rsb	r3, r3, ip, lsr #16
   1203a:	eb03 4322 	add.w	r3, r3, r2, asr #16
   1203e:	b292      	uxth	r2, r2
   12040:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   12044:	42af      	cmp	r7, r5
   12046:	f840 2b04 	str.w	r2, [r0], #4
   1204a:	ea4f 4323 	mov.w	r3, r3, asr #16
   1204e:	d2e8      	bcs.n	12022 <quorem+0xc6>
   12050:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   12054:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   12058:	b96a      	cbnz	r2, 12076 <quorem+0x11a>
   1205a:	3b04      	subs	r3, #4
   1205c:	4598      	cmp	r8, r3
   1205e:	d304      	bcc.n	1206a <quorem+0x10e>
   12060:	e007      	b.n	12072 <quorem+0x116>
   12062:	4598      	cmp	r8, r3
   12064:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   12068:	d203      	bcs.n	12072 <quorem+0x116>
   1206a:	f853 2904 	ldr.w	r2, [r3], #-4
   1206e:	2a00      	cmp	r2, #0
   12070:	d0f7      	beq.n	12062 <quorem+0x106>
   12072:	f8c9 4010 	str.w	r4, [r9, #16]
   12076:	4630      	mov	r0, r6
   12078:	b005      	add	sp, #20
   1207a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1207e:	2000      	movs	r0, #0
   12080:	b005      	add	sp, #20
   12082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12086:	bf00      	nop

00012088 <_dtoa_r>:
   12088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1208c:	4690      	mov	r8, r2
   1208e:	4699      	mov	r9, r3
   12090:	6c01      	ldr	r1, [r0, #64]	; 0x40
   12092:	b099      	sub	sp, #100	; 0x64
   12094:	4604      	mov	r4, r0
   12096:	e9cd 8904 	strd	r8, r9, [sp, #16]
   1209a:	9d25      	ldr	r5, [sp, #148]	; 0x94
   1209c:	b141      	cbz	r1, 120b0 <_dtoa_r+0x28>
   1209e:	2301      	movs	r3, #1
   120a0:	6c42      	ldr	r2, [r0, #68]	; 0x44
   120a2:	4093      	lsls	r3, r2
   120a4:	608b      	str	r3, [r1, #8]
   120a6:	604a      	str	r2, [r1, #4]
   120a8:	f001 fd56 	bl	13b58 <_Bfree>
   120ac:	2300      	movs	r3, #0
   120ae:	6423      	str	r3, [r4, #64]	; 0x40
   120b0:	f1b9 0a00 	subs.w	sl, r9, #0
   120b4:	bfb4      	ite	lt
   120b6:	2301      	movlt	r3, #1
   120b8:	2300      	movge	r3, #0
   120ba:	602b      	str	r3, [r5, #0]
   120bc:	4b76      	ldr	r3, [pc, #472]	; (12298 <_dtoa_r+0x210>)
   120be:	bfbc      	itt	lt
   120c0:	f02a 4a00 	biclt.w	sl, sl, #2147483648	; 0x80000000
   120c4:	f8cd a014 	strlt.w	sl, [sp, #20]
   120c8:	ea33 030a 	bics.w	r3, r3, sl
   120cc:	f000 80aa 	beq.w	12224 <_dtoa_r+0x19c>
   120d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   120d4:	4610      	mov	r0, r2
   120d6:	4619      	mov	r1, r3
   120d8:	2200      	movs	r2, #0
   120da:	2300      	movs	r3, #0
   120dc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   120e0:	f004 f890 	bl	16204 <__aeabi_dcmpeq>
   120e4:	4607      	mov	r7, r0
   120e6:	b170      	cbz	r0, 12106 <_dtoa_r+0x7e>
   120e8:	2301      	movs	r3, #1
   120ea:	9a24      	ldr	r2, [sp, #144]	; 0x90
   120ec:	6013      	str	r3, [r2, #0]
   120ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
   120f0:	2b00      	cmp	r3, #0
   120f2:	f000 82e6 	beq.w	126c2 <_dtoa_r+0x63a>
   120f6:	4869      	ldr	r0, [pc, #420]	; (1229c <_dtoa_r+0x214>)
   120f8:	6018      	str	r0, [r3, #0]
   120fa:	1e43      	subs	r3, r0, #1
   120fc:	9303      	str	r3, [sp, #12]
   120fe:	9803      	ldr	r0, [sp, #12]
   12100:	b019      	add	sp, #100	; 0x64
   12102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12106:	ab16      	add	r3, sp, #88	; 0x58
   12108:	9301      	str	r3, [sp, #4]
   1210a:	ab17      	add	r3, sp, #92	; 0x5c
   1210c:	9300      	str	r3, [sp, #0]
   1210e:	4620      	mov	r0, r4
   12110:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   12114:	f002 f920 	bl	14358 <__d2b>
   12118:	ea5f 561a 	movs.w	r6, sl, lsr #20
   1211c:	4605      	mov	r5, r0
   1211e:	f040 8097 	bne.w	12250 <_dtoa_r+0x1c8>
   12122:	e9dd 7616 	ldrd	r7, r6, [sp, #88]	; 0x58
   12126:	443e      	add	r6, r7
   12128:	f206 4032 	addw	r0, r6, #1074	; 0x432
   1212c:	2820      	cmp	r0, #32
   1212e:	f340 83b7 	ble.w	128a0 <_dtoa_r+0x818>
   12132:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
   12136:	fa0a fa00 	lsl.w	sl, sl, r0
   1213a:	f206 4012 	addw	r0, r6, #1042	; 0x412
   1213e:	fa28 f000 	lsr.w	r0, r8, r0
   12142:	ea4a 0000 	orr.w	r0, sl, r0
   12146:	f003 fd7b 	bl	15c40 <__aeabi_ui2d>
   1214a:	2301      	movs	r3, #1
   1214c:	3e01      	subs	r6, #1
   1214e:	930f      	str	r3, [sp, #60]	; 0x3c
   12150:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   12154:	2200      	movs	r2, #0
   12156:	4b52      	ldr	r3, [pc, #328]	; (122a0 <_dtoa_r+0x218>)
   12158:	f003 fc34 	bl	159c4 <__aeabi_dsub>
   1215c:	a348      	add	r3, pc, #288	; (adr r3, 12280 <_dtoa_r+0x1f8>)
   1215e:	e9d3 2300 	ldrd	r2, r3, [r3]
   12162:	f003 fde7 	bl	15d34 <__aeabi_dmul>
   12166:	a348      	add	r3, pc, #288	; (adr r3, 12288 <_dtoa_r+0x200>)
   12168:	e9d3 2300 	ldrd	r2, r3, [r3]
   1216c:	f003 fc2c 	bl	159c8 <__adddf3>
   12170:	4680      	mov	r8, r0
   12172:	4630      	mov	r0, r6
   12174:	4689      	mov	r9, r1
   12176:	f003 fd73 	bl	15c60 <__aeabi_i2d>
   1217a:	a345      	add	r3, pc, #276	; (adr r3, 12290 <_dtoa_r+0x208>)
   1217c:	e9d3 2300 	ldrd	r2, r3, [r3]
   12180:	f003 fdd8 	bl	15d34 <__aeabi_dmul>
   12184:	4602      	mov	r2, r0
   12186:	460b      	mov	r3, r1
   12188:	4640      	mov	r0, r8
   1218a:	4649      	mov	r1, r9
   1218c:	f003 fc1c 	bl	159c8 <__adddf3>
   12190:	4680      	mov	r8, r0
   12192:	4689      	mov	r9, r1
   12194:	f004 f868 	bl	16268 <__aeabi_d2iz>
   12198:	2200      	movs	r2, #0
   1219a:	4683      	mov	fp, r0
   1219c:	2300      	movs	r3, #0
   1219e:	4640      	mov	r0, r8
   121a0:	4649      	mov	r1, r9
   121a2:	f004 f839 	bl	16218 <__aeabi_dcmplt>
   121a6:	2800      	cmp	r0, #0
   121a8:	f040 827e 	bne.w	126a8 <_dtoa_r+0x620>
   121ac:	f1bb 0f16 	cmp.w	fp, #22
   121b0:	f200 826d 	bhi.w	1268e <_dtoa_r+0x606>
   121b4:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   121b8:	4b3a      	ldr	r3, [pc, #232]	; (122a4 <_dtoa_r+0x21c>)
   121ba:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   121be:	e9d3 2300 	ldrd	r2, r3, [r3]
   121c2:	f004 f829 	bl	16218 <__aeabi_dcmplt>
   121c6:	2800      	cmp	r0, #0
   121c8:	d072      	beq.n	122b0 <_dtoa_r+0x228>
   121ca:	2300      	movs	r3, #0
   121cc:	1bbe      	subs	r6, r7, r6
   121ce:	930e      	str	r3, [sp, #56]	; 0x38
   121d0:	1e73      	subs	r3, r6, #1
   121d2:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   121d6:	9306      	str	r3, [sp, #24]
   121d8:	f100 8260 	bmi.w	1269c <_dtoa_r+0x614>
   121dc:	2300      	movs	r3, #0
   121de:	9309      	str	r3, [sp, #36]	; 0x24
   121e0:	f1bb 0f00 	cmp.w	fp, #0
   121e4:	da6b      	bge.n	122be <_dtoa_r+0x236>
   121e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   121e8:	f8cd b01c 	str.w	fp, [sp, #28]
   121ec:	eba3 030b 	sub.w	r3, r3, fp
   121f0:	9309      	str	r3, [sp, #36]	; 0x24
   121f2:	f1cb 0300 	rsb	r3, fp, #0
   121f6:	930d      	str	r3, [sp, #52]	; 0x34
   121f8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   121fa:	f04f 0b00 	mov.w	fp, #0
   121fe:	2b09      	cmp	r3, #9
   12200:	d866      	bhi.n	122d0 <_dtoa_r+0x248>
   12202:	2b05      	cmp	r3, #5
   12204:	f340 834a 	ble.w	1289c <_dtoa_r+0x814>
   12208:	2600      	movs	r6, #0
   1220a:	3b04      	subs	r3, #4
   1220c:	9322      	str	r3, [sp, #136]	; 0x88
   1220e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   12210:	3b02      	subs	r3, #2
   12212:	2b03      	cmp	r3, #3
   12214:	f200 866c 	bhi.w	12ef0 <_dtoa_r+0xe68>
   12218:	e8df f013 	tbh	[pc, r3, lsl #1]
   1221c:	045e0461 	.word	0x045e0461
   12220:	04380455 	.word	0x04380455
   12224:	f242 730f 	movw	r3, #9999	; 0x270f
   12228:	9a24      	ldr	r2, [sp, #144]	; 0x90
   1222a:	f3ca 0a13 	ubfx	sl, sl, #0, #20
   1222e:	6013      	str	r3, [r2, #0]
   12230:	ea5a 0308 	orrs.w	r3, sl, r8
   12234:	d11a      	bne.n	1226c <_dtoa_r+0x1e4>
   12236:	9b26      	ldr	r3, [sp, #152]	; 0x98
   12238:	2b00      	cmp	r3, #0
   1223a:	f000 8668 	beq.w	12f0e <_dtoa_r+0xe86>
   1223e:	4b1a      	ldr	r3, [pc, #104]	; (122a8 <_dtoa_r+0x220>)
   12240:	9303      	str	r3, [sp, #12]
   12242:	3308      	adds	r3, #8
   12244:	9a26      	ldr	r2, [sp, #152]	; 0x98
   12246:	9803      	ldr	r0, [sp, #12]
   12248:	6013      	str	r3, [r2, #0]
   1224a:	b019      	add	sp, #100	; 0x64
   1224c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12250:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	; 0x28
   12254:	f3c2 0313 	ubfx	r3, r2, #0, #20
   12258:	4608      	mov	r0, r1
   1225a:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   1225e:	970f      	str	r7, [sp, #60]	; 0x3c
   12260:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   12264:	9f16      	ldr	r7, [sp, #88]	; 0x58
   12266:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   1226a:	e773      	b.n	12154 <_dtoa_r+0xcc>
   1226c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   1226e:	2b00      	cmp	r3, #0
   12270:	f040 83ef 	bne.w	12a52 <_dtoa_r+0x9ca>
   12274:	4b0d      	ldr	r3, [pc, #52]	; (122ac <_dtoa_r+0x224>)
   12276:	9303      	str	r3, [sp, #12]
   12278:	e741      	b.n	120fe <_dtoa_r+0x76>
   1227a:	bf00      	nop
   1227c:	f3af 8000 	nop.w
   12280:	636f4361 	.word	0x636f4361
   12284:	3fd287a7 	.word	0x3fd287a7
   12288:	8b60c8b3 	.word	0x8b60c8b3
   1228c:	3fc68a28 	.word	0x3fc68a28
   12290:	509f79fb 	.word	0x509f79fb
   12294:	3fd34413 	.word	0x3fd34413
   12298:	7ff00000 	.word	0x7ff00000
   1229c:	0001a201 	.word	0x0001a201
   122a0:	3ff80000 	.word	0x3ff80000
   122a4:	0001a378 	.word	0x0001a378
   122a8:	0001a268 	.word	0x0001a268
   122ac:	0001a264 	.word	0x0001a264
   122b0:	1bbe      	subs	r6, r7, r6
   122b2:	1e73      	subs	r3, r6, #1
   122b4:	9306      	str	r3, [sp, #24]
   122b6:	f100 848a 	bmi.w	12bce <_dtoa_r+0xb46>
   122ba:	900e      	str	r0, [sp, #56]	; 0x38
   122bc:	9009      	str	r0, [sp, #36]	; 0x24
   122be:	9b06      	ldr	r3, [sp, #24]
   122c0:	445b      	add	r3, fp
   122c2:	e9cd 3b06 	strd	r3, fp, [sp, #24]
   122c6:	2300      	movs	r3, #0
   122c8:	930d      	str	r3, [sp, #52]	; 0x34
   122ca:	9b22      	ldr	r3, [sp, #136]	; 0x88
   122cc:	2b09      	cmp	r3, #9
   122ce:	d998      	bls.n	12202 <_dtoa_r+0x17a>
   122d0:	2300      	movs	r3, #0
   122d2:	9322      	str	r3, [sp, #136]	; 0x88
   122d4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   122d8:	2601      	movs	r6, #1
   122da:	9308      	str	r3, [sp, #32]
   122dc:	2300      	movs	r3, #0
   122de:	960c      	str	r6, [sp, #48]	; 0x30
   122e0:	9323      	str	r3, [sp, #140]	; 0x8c
   122e2:	2100      	movs	r1, #0
   122e4:	9b08      	ldr	r3, [sp, #32]
   122e6:	6461      	str	r1, [r4, #68]	; 0x44
   122e8:	9312      	str	r3, [sp, #72]	; 0x48
   122ea:	4620      	mov	r0, r4
   122ec:	f001 fc0e 	bl	13b0c <_Balloc>
   122f0:	9003      	str	r0, [sp, #12]
   122f2:	2800      	cmp	r0, #0
   122f4:	f000 8604 	beq.w	12f00 <_dtoa_r+0xe78>
   122f8:	9b03      	ldr	r3, [sp, #12]
   122fa:	6423      	str	r3, [r4, #64]	; 0x40
   122fc:	9b08      	ldr	r3, [sp, #32]
   122fe:	2b0e      	cmp	r3, #14
   12300:	f200 8114 	bhi.w	1252c <_dtoa_r+0x4a4>
   12304:	2e00      	cmp	r6, #0
   12306:	f000 8111 	beq.w	1252c <_dtoa_r+0x4a4>
   1230a:	9907      	ldr	r1, [sp, #28]
   1230c:	2900      	cmp	r1, #0
   1230e:	f340 8460 	ble.w	12bd2 <_dtoa_r+0xb4a>
   12312:	4baf      	ldr	r3, [pc, #700]	; (125d0 <_dtoa_r+0x548>)
   12314:	f001 020f 	and.w	r2, r1, #15
   12318:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1231c:	460a      	mov	r2, r1
   1231e:	e9d3 6700 	ldrd	r6, r7, [r3]
   12322:	ea4f 1821 	mov.w	r8, r1, asr #4
   12326:	05d1      	lsls	r1, r2, #23
   12328:	f140 8417 	bpl.w	12b5a <_dtoa_r+0xad2>
   1232c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   12330:	4ba8      	ldr	r3, [pc, #672]	; (125d4 <_dtoa_r+0x54c>)
   12332:	f04f 0a03 	mov.w	sl, #3
   12336:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   1233a:	f003 fe25 	bl	15f88 <__aeabi_ddiv>
   1233e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   12342:	f008 080f 	and.w	r8, r8, #15
   12346:	f1b8 0f00 	cmp.w	r8, #0
   1234a:	d013      	beq.n	12374 <_dtoa_r+0x2ec>
   1234c:	f8df 9284 	ldr.w	r9, [pc, #644]	; 125d4 <_dtoa_r+0x54c>
   12350:	f018 0f01 	tst.w	r8, #1
   12354:	d009      	beq.n	1236a <_dtoa_r+0x2e2>
   12356:	e9d9 2300 	ldrd	r2, r3, [r9]
   1235a:	4630      	mov	r0, r6
   1235c:	4639      	mov	r1, r7
   1235e:	f003 fce9 	bl	15d34 <__aeabi_dmul>
   12362:	4606      	mov	r6, r0
   12364:	460f      	mov	r7, r1
   12366:	f10a 0a01 	add.w	sl, sl, #1
   1236a:	ea5f 0868 	movs.w	r8, r8, asr #1
   1236e:	f109 0908 	add.w	r9, r9, #8
   12372:	d1ed      	bne.n	12350 <_dtoa_r+0x2c8>
   12374:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   12378:	4632      	mov	r2, r6
   1237a:	463b      	mov	r3, r7
   1237c:	f003 fe04 	bl	15f88 <__aeabi_ddiv>
   12380:	4680      	mov	r8, r0
   12382:	4689      	mov	r9, r1
   12384:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   12386:	b143      	cbz	r3, 1239a <_dtoa_r+0x312>
   12388:	2200      	movs	r2, #0
   1238a:	4640      	mov	r0, r8
   1238c:	4649      	mov	r1, r9
   1238e:	4b92      	ldr	r3, [pc, #584]	; (125d8 <_dtoa_r+0x550>)
   12390:	f003 ff42 	bl	16218 <__aeabi_dcmplt>
   12394:	2800      	cmp	r0, #0
   12396:	f040 8535 	bne.w	12e04 <_dtoa_r+0xd7c>
   1239a:	4650      	mov	r0, sl
   1239c:	f003 fc60 	bl	15c60 <__aeabi_i2d>
   123a0:	4642      	mov	r2, r8
   123a2:	464b      	mov	r3, r9
   123a4:	f003 fcc6 	bl	15d34 <__aeabi_dmul>
   123a8:	4b8c      	ldr	r3, [pc, #560]	; (125dc <_dtoa_r+0x554>)
   123aa:	2200      	movs	r2, #0
   123ac:	f003 fb0c 	bl	159c8 <__adddf3>
   123b0:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   123b4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   123b8:	9311      	str	r3, [sp, #68]	; 0x44
   123ba:	9b08      	ldr	r3, [sp, #32]
   123bc:	2b00      	cmp	r3, #0
   123be:	f000 8097 	beq.w	124f0 <_dtoa_r+0x468>
   123c2:	9b07      	ldr	r3, [sp, #28]
   123c4:	9314      	str	r3, [sp, #80]	; 0x50
   123c6:	9b08      	ldr	r3, [sp, #32]
   123c8:	9313      	str	r3, [sp, #76]	; 0x4c
   123ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   123cc:	2b00      	cmp	r3, #0
   123ce:	f000 84a9 	beq.w	12d24 <_dtoa_r+0xc9c>
   123d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   123d4:	4b7e      	ldr	r3, [pc, #504]	; (125d0 <_dtoa_r+0x548>)
   123d6:	2000      	movs	r0, #0
   123d8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   123dc:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   123e0:	497f      	ldr	r1, [pc, #508]	; (125e0 <_dtoa_r+0x558>)
   123e2:	f003 fdd1 	bl	15f88 <__aeabi_ddiv>
   123e6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   123ea:	f003 faeb 	bl	159c4 <__aeabi_dsub>
   123ee:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   123f2:	4649      	mov	r1, r9
   123f4:	4640      	mov	r0, r8
   123f6:	f003 ff37 	bl	16268 <__aeabi_d2iz>
   123fa:	4607      	mov	r7, r0
   123fc:	f003 fc30 	bl	15c60 <__aeabi_i2d>
   12400:	4602      	mov	r2, r0
   12402:	460b      	mov	r3, r1
   12404:	4640      	mov	r0, r8
   12406:	4649      	mov	r1, r9
   12408:	f003 fadc 	bl	159c4 <__aeabi_dsub>
   1240c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   12410:	9e03      	ldr	r6, [sp, #12]
   12412:	3730      	adds	r7, #48	; 0x30
   12414:	f806 7b01 	strb.w	r7, [r6], #1
   12418:	4680      	mov	r8, r0
   1241a:	4689      	mov	r9, r1
   1241c:	f003 fefc 	bl	16218 <__aeabi_dcmplt>
   12420:	2800      	cmp	r0, #0
   12422:	f040 852e 	bne.w	12e82 <_dtoa_r+0xdfa>
   12426:	f8cd b054 	str.w	fp, [sp, #84]	; 0x54
   1242a:	2700      	movs	r7, #0
   1242c:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   12430:	9510      	str	r5, [sp, #64]	; 0x40
   12432:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   12434:	9413      	str	r4, [sp, #76]	; 0x4c
   12436:	e02a      	b.n	1248e <_dtoa_r+0x406>
   12438:	3701      	adds	r7, #1
   1243a:	42af      	cmp	r7, r5
   1243c:	f280 852e 	bge.w	12e9c <_dtoa_r+0xe14>
   12440:	4650      	mov	r0, sl
   12442:	4659      	mov	r1, fp
   12444:	2200      	movs	r2, #0
   12446:	4b67      	ldr	r3, [pc, #412]	; (125e4 <_dtoa_r+0x55c>)
   12448:	f003 fc74 	bl	15d34 <__aeabi_dmul>
   1244c:	2200      	movs	r2, #0
   1244e:	4b65      	ldr	r3, [pc, #404]	; (125e4 <_dtoa_r+0x55c>)
   12450:	4682      	mov	sl, r0
   12452:	468b      	mov	fp, r1
   12454:	4640      	mov	r0, r8
   12456:	4649      	mov	r1, r9
   12458:	f003 fc6c 	bl	15d34 <__aeabi_dmul>
   1245c:	4689      	mov	r9, r1
   1245e:	4680      	mov	r8, r0
   12460:	f003 ff02 	bl	16268 <__aeabi_d2iz>
   12464:	4604      	mov	r4, r0
   12466:	f003 fbfb 	bl	15c60 <__aeabi_i2d>
   1246a:	4602      	mov	r2, r0
   1246c:	460b      	mov	r3, r1
   1246e:	4640      	mov	r0, r8
   12470:	4649      	mov	r1, r9
   12472:	f003 faa7 	bl	159c4 <__aeabi_dsub>
   12476:	3430      	adds	r4, #48	; 0x30
   12478:	4652      	mov	r2, sl
   1247a:	465b      	mov	r3, fp
   1247c:	f806 4b01 	strb.w	r4, [r6], #1
   12480:	4680      	mov	r8, r0
   12482:	4689      	mov	r9, r1
   12484:	f003 fec8 	bl	16218 <__aeabi_dcmplt>
   12488:	2800      	cmp	r0, #0
   1248a:	f040 84f8 	bne.w	12e7e <_dtoa_r+0xdf6>
   1248e:	4642      	mov	r2, r8
   12490:	464b      	mov	r3, r9
   12492:	2000      	movs	r0, #0
   12494:	4950      	ldr	r1, [pc, #320]	; (125d8 <_dtoa_r+0x550>)
   12496:	f003 fa95 	bl	159c4 <__aeabi_dsub>
   1249a:	4652      	mov	r2, sl
   1249c:	465b      	mov	r3, fp
   1249e:	f003 febb 	bl	16218 <__aeabi_dcmplt>
   124a2:	2800      	cmp	r0, #0
   124a4:	d0c8      	beq.n	12438 <_dtoa_r+0x3b0>
   124a6:	e9dd 4313 	ldrd	r4, r3, [sp, #76]	; 0x4c
   124aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
   124ac:	9a03      	ldr	r2, [sp, #12]
   124ae:	9307      	str	r3, [sp, #28]
   124b0:	e002      	b.n	124b8 <_dtoa_r+0x430>
   124b2:	4296      	cmp	r6, r2
   124b4:	f000 84cd 	beq.w	12e52 <_dtoa_r+0xdca>
   124b8:	46b2      	mov	sl, r6
   124ba:	f816 3d01 	ldrb.w	r3, [r6, #-1]!
   124be:	2b39      	cmp	r3, #57	; 0x39
   124c0:	d0f7      	beq.n	124b2 <_dtoa_r+0x42a>
   124c2:	3301      	adds	r3, #1
   124c4:	b2db      	uxtb	r3, r3
   124c6:	7033      	strb	r3, [r6, #0]
   124c8:	9b07      	ldr	r3, [sp, #28]
   124ca:	3301      	adds	r3, #1
   124cc:	9307      	str	r3, [sp, #28]
   124ce:	e1c8      	b.n	12862 <_dtoa_r+0x7da>
   124d0:	4650      	mov	r0, sl
   124d2:	f003 fbc5 	bl	15c60 <__aeabi_i2d>
   124d6:	4642      	mov	r2, r8
   124d8:	464b      	mov	r3, r9
   124da:	f003 fc2b 	bl	15d34 <__aeabi_dmul>
   124de:	4b3f      	ldr	r3, [pc, #252]	; (125dc <_dtoa_r+0x554>)
   124e0:	2200      	movs	r2, #0
   124e2:	f003 fa71 	bl	159c8 <__adddf3>
   124e6:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   124ea:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   124ee:	9311      	str	r3, [sp, #68]	; 0x44
   124f0:	4640      	mov	r0, r8
   124f2:	4649      	mov	r1, r9
   124f4:	2200      	movs	r2, #0
   124f6:	4b3c      	ldr	r3, [pc, #240]	; (125e8 <_dtoa_r+0x560>)
   124f8:	f003 fa64 	bl	159c4 <__aeabi_dsub>
   124fc:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
   12500:	464b      	mov	r3, r9
   12502:	4642      	mov	r2, r8
   12504:	4606      	mov	r6, r0
   12506:	460f      	mov	r7, r1
   12508:	f003 fea4 	bl	16254 <__aeabi_dcmpgt>
   1250c:	4681      	mov	r9, r0
   1250e:	2800      	cmp	r0, #0
   12510:	f040 84af 	bne.w	12e72 <_dtoa_r+0xdea>
   12514:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   12518:	4602      	mov	r2, r0
   1251a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1251e:	4630      	mov	r0, r6
   12520:	4639      	mov	r1, r7
   12522:	f003 fe79 	bl	16218 <__aeabi_dcmplt>
   12526:	2800      	cmp	r0, #0
   12528:	f040 8348 	bne.w	12bbc <_dtoa_r+0xb34>
   1252c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1252e:	2b00      	cmp	r3, #0
   12530:	f2c0 808c 	blt.w	1264c <_dtoa_r+0x5c4>
   12534:	9a07      	ldr	r2, [sp, #28]
   12536:	2a0e      	cmp	r2, #14
   12538:	f300 8088 	bgt.w	1264c <_dtoa_r+0x5c4>
   1253c:	4b24      	ldr	r3, [pc, #144]	; (125d0 <_dtoa_r+0x548>)
   1253e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   12542:	e9d3 ab00 	ldrd	sl, fp, [r3]
   12546:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   12548:	2b00      	cmp	r3, #0
   1254a:	da1b      	bge.n	12584 <_dtoa_r+0x4fc>
   1254c:	9b08      	ldr	r3, [sp, #32]
   1254e:	2b00      	cmp	r3, #0
   12550:	dc18      	bgt.n	12584 <_dtoa_r+0x4fc>
   12552:	f040 8331 	bne.w	12bb8 <_dtoa_r+0xb30>
   12556:	2200      	movs	r2, #0
   12558:	4b23      	ldr	r3, [pc, #140]	; (125e8 <_dtoa_r+0x560>)
   1255a:	4650      	mov	r0, sl
   1255c:	4659      	mov	r1, fp
   1255e:	f003 fbe9 	bl	15d34 <__aeabi_dmul>
   12562:	4602      	mov	r2, r0
   12564:	460b      	mov	r3, r1
   12566:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1256a:	f003 fe5f 	bl	1622c <__aeabi_dcmple>
   1256e:	f8dd 9020 	ldr.w	r9, [sp, #32]
   12572:	464e      	mov	r6, r9
   12574:	2800      	cmp	r0, #0
   12576:	f000 82ca 	beq.w	12b0e <_dtoa_r+0xa86>
   1257a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   1257c:	f8dd 800c 	ldr.w	r8, [sp, #12]
   12580:	43df      	mvns	r7, r3
   12582:	e2cc      	b.n	12b1e <_dtoa_r+0xa96>
   12584:	4652      	mov	r2, sl
   12586:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
   1258a:	465b      	mov	r3, fp
   1258c:	4638      	mov	r0, r7
   1258e:	4641      	mov	r1, r8
   12590:	f003 fcfa 	bl	15f88 <__aeabi_ddiv>
   12594:	f003 fe68 	bl	16268 <__aeabi_d2iz>
   12598:	4681      	mov	r9, r0
   1259a:	9009      	str	r0, [sp, #36]	; 0x24
   1259c:	f003 fb60 	bl	15c60 <__aeabi_i2d>
   125a0:	4652      	mov	r2, sl
   125a2:	465b      	mov	r3, fp
   125a4:	f003 fbc6 	bl	15d34 <__aeabi_dmul>
   125a8:	9e03      	ldr	r6, [sp, #12]
   125aa:	460b      	mov	r3, r1
   125ac:	4602      	mov	r2, r0
   125ae:	4641      	mov	r1, r8
   125b0:	4638      	mov	r0, r7
   125b2:	f003 fa07 	bl	159c4 <__aeabi_dsub>
   125b6:	f109 0330 	add.w	r3, r9, #48	; 0x30
   125ba:	f806 3b01 	strb.w	r3, [r6], #1
   125be:	9b08      	ldr	r3, [sp, #32]
   125c0:	2b01      	cmp	r3, #1
   125c2:	f000 835f 	beq.w	12c84 <_dtoa_r+0xbfc>
   125c6:	9406      	str	r4, [sp, #24]
   125c8:	2701      	movs	r7, #1
   125ca:	461c      	mov	r4, r3
   125cc:	9504      	str	r5, [sp, #16]
   125ce:	e02a      	b.n	12626 <_dtoa_r+0x59e>
   125d0:	0001a378 	.word	0x0001a378
   125d4:	0001a350 	.word	0x0001a350
   125d8:	3ff00000 	.word	0x3ff00000
   125dc:	401c0000 	.word	0x401c0000
   125e0:	3fe00000 	.word	0x3fe00000
   125e4:	40240000 	.word	0x40240000
   125e8:	40140000 	.word	0x40140000
   125ec:	4652      	mov	r2, sl
   125ee:	465b      	mov	r3, fp
   125f0:	4640      	mov	r0, r8
   125f2:	4649      	mov	r1, r9
   125f4:	f003 fcc8 	bl	15f88 <__aeabi_ddiv>
   125f8:	f003 fe36 	bl	16268 <__aeabi_d2iz>
   125fc:	4605      	mov	r5, r0
   125fe:	f003 fb2f 	bl	15c60 <__aeabi_i2d>
   12602:	4652      	mov	r2, sl
   12604:	465b      	mov	r3, fp
   12606:	f003 fb95 	bl	15d34 <__aeabi_dmul>
   1260a:	3701      	adds	r7, #1
   1260c:	460b      	mov	r3, r1
   1260e:	4602      	mov	r2, r0
   12610:	4649      	mov	r1, r9
   12612:	4640      	mov	r0, r8
   12614:	f003 f9d6 	bl	159c4 <__aeabi_dsub>
   12618:	f105 0330 	add.w	r3, r5, #48	; 0x30
   1261c:	42a7      	cmp	r7, r4
   1261e:	f806 3b01 	strb.w	r3, [r6], #1
   12622:	f000 832c 	beq.w	12c7e <_dtoa_r+0xbf6>
   12626:	2200      	movs	r2, #0
   12628:	4bab      	ldr	r3, [pc, #684]	; (128d8 <_dtoa_r+0x850>)
   1262a:	f003 fb83 	bl	15d34 <__aeabi_dmul>
   1262e:	2200      	movs	r2, #0
   12630:	2300      	movs	r3, #0
   12632:	4680      	mov	r8, r0
   12634:	4689      	mov	r9, r1
   12636:	f003 fde5 	bl	16204 <__aeabi_dcmpeq>
   1263a:	2800      	cmp	r0, #0
   1263c:	d0d6      	beq.n	125ec <_dtoa_r+0x564>
   1263e:	9d04      	ldr	r5, [sp, #16]
   12640:	9c06      	ldr	r4, [sp, #24]
   12642:	9b07      	ldr	r3, [sp, #28]
   12644:	46b2      	mov	sl, r6
   12646:	3301      	adds	r3, #1
   12648:	9307      	str	r3, [sp, #28]
   1264a:	e10a      	b.n	12862 <_dtoa_r+0x7da>
   1264c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   1264e:	2a00      	cmp	r2, #0
   12650:	d03d      	beq.n	126ce <_dtoa_r+0x646>
   12652:	9a22      	ldr	r2, [sp, #136]	; 0x88
   12654:	2a01      	cmp	r2, #1
   12656:	f340 829f 	ble.w	12b98 <_dtoa_r+0xb10>
   1265a:	9b08      	ldr	r3, [sp, #32]
   1265c:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   12660:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   12662:	4543      	cmp	r3, r8
   12664:	f2c0 8270 	blt.w	12b48 <_dtoa_r+0xac0>
   12668:	eba3 0808 	sub.w	r8, r3, r8
   1266c:	9b08      	ldr	r3, [sp, #32]
   1266e:	2b00      	cmp	r3, #0
   12670:	f2c0 8340 	blt.w	12cf4 <_dtoa_r+0xc6c>
   12674:	9a06      	ldr	r2, [sp, #24]
   12676:	441a      	add	r2, r3
   12678:	9206      	str	r2, [sp, #24]
   1267a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1267c:	4617      	mov	r7, r2
   1267e:	441a      	add	r2, r3
   12680:	9209      	str	r2, [sp, #36]	; 0x24
   12682:	2101      	movs	r1, #1
   12684:	4620      	mov	r0, r4
   12686:	f001 fb69 	bl	13d5c <__i2b>
   1268a:	4606      	mov	r6, r0
   1268c:	e023      	b.n	126d6 <_dtoa_r+0x64e>
   1268e:	2301      	movs	r3, #1
   12690:	1bbe      	subs	r6, r7, r6
   12692:	930e      	str	r3, [sp, #56]	; 0x38
   12694:	1e73      	subs	r3, r6, #1
   12696:	9306      	str	r3, [sp, #24]
   12698:	f57f ada0 	bpl.w	121dc <_dtoa_r+0x154>
   1269c:	f1c6 0301 	rsb	r3, r6, #1
   126a0:	9309      	str	r3, [sp, #36]	; 0x24
   126a2:	2300      	movs	r3, #0
   126a4:	9306      	str	r3, [sp, #24]
   126a6:	e59b      	b.n	121e0 <_dtoa_r+0x158>
   126a8:	4658      	mov	r0, fp
   126aa:	f003 fad9 	bl	15c60 <__aeabi_i2d>
   126ae:	4642      	mov	r2, r8
   126b0:	464b      	mov	r3, r9
   126b2:	f003 fda7 	bl	16204 <__aeabi_dcmpeq>
   126b6:	2800      	cmp	r0, #0
   126b8:	f47f ad78 	bne.w	121ac <_dtoa_r+0x124>
   126bc:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   126c0:	e574      	b.n	121ac <_dtoa_r+0x124>
   126c2:	4b86      	ldr	r3, [pc, #536]	; (128dc <_dtoa_r+0x854>)
   126c4:	9303      	str	r3, [sp, #12]
   126c6:	9803      	ldr	r0, [sp, #12]
   126c8:	b019      	add	sp, #100	; 0x64
   126ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126ce:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   126d2:	9f09      	ldr	r7, [sp, #36]	; 0x24
   126d4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   126d6:	2f00      	cmp	r7, #0
   126d8:	dd0c      	ble.n	126f4 <_dtoa_r+0x66c>
   126da:	9906      	ldr	r1, [sp, #24]
   126dc:	2900      	cmp	r1, #0
   126de:	460b      	mov	r3, r1
   126e0:	dd08      	ble.n	126f4 <_dtoa_r+0x66c>
   126e2:	42b9      	cmp	r1, r7
   126e4:	bfa8      	it	ge
   126e6:	463b      	movge	r3, r7
   126e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
   126ea:	1aff      	subs	r7, r7, r3
   126ec:	1ad2      	subs	r2, r2, r3
   126ee:	1acb      	subs	r3, r1, r3
   126f0:	9209      	str	r2, [sp, #36]	; 0x24
   126f2:	9306      	str	r3, [sp, #24]
   126f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   126f6:	b1e3      	cbz	r3, 12732 <_dtoa_r+0x6aa>
   126f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   126fa:	2b00      	cmp	r3, #0
   126fc:	f000 8260 	beq.w	12bc0 <_dtoa_r+0xb38>
   12700:	f1b8 0f00 	cmp.w	r8, #0
   12704:	dd10      	ble.n	12728 <_dtoa_r+0x6a0>
   12706:	4631      	mov	r1, r6
   12708:	4642      	mov	r2, r8
   1270a:	4620      	mov	r0, r4
   1270c:	f001 fc02 	bl	13f14 <__pow5mult>
   12710:	4606      	mov	r6, r0
   12712:	462a      	mov	r2, r5
   12714:	4631      	mov	r1, r6
   12716:	4620      	mov	r0, r4
   12718:	f001 fb4e 	bl	13db8 <__multiply>
   1271c:	4603      	mov	r3, r0
   1271e:	4629      	mov	r1, r5
   12720:	4620      	mov	r0, r4
   12722:	461d      	mov	r5, r3
   12724:	f001 fa18 	bl	13b58 <_Bfree>
   12728:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1272a:	ebb3 0208 	subs.w	r2, r3, r8
   1272e:	f040 82db 	bne.w	12ce8 <_dtoa_r+0xc60>
   12732:	2101      	movs	r1, #1
   12734:	4620      	mov	r0, r4
   12736:	f001 fb11 	bl	13d5c <__i2b>
   1273a:	f1bb 0f00 	cmp.w	fp, #0
   1273e:	4681      	mov	r9, r0
   12740:	f300 80b3 	bgt.w	128aa <_dtoa_r+0x822>
   12744:	9b22      	ldr	r3, [sp, #136]	; 0x88
   12746:	2b01      	cmp	r3, #1
   12748:	f340 8188 	ble.w	12a5c <_dtoa_r+0x9d4>
   1274c:	f04f 0a00 	mov.w	sl, #0
   12750:	2001      	movs	r0, #1
   12752:	f1bb 0f00 	cmp.w	fp, #0
   12756:	f040 80b4 	bne.w	128c2 <_dtoa_r+0x83a>
   1275a:	9a06      	ldr	r2, [sp, #24]
   1275c:	4410      	add	r0, r2
   1275e:	f010 001f 	ands.w	r0, r0, #31
   12762:	f000 8092 	beq.w	1288a <_dtoa_r+0x802>
   12766:	f1c0 0320 	rsb	r3, r0, #32
   1276a:	2b04      	cmp	r3, #4
   1276c:	f340 83d3 	ble.w	12f16 <_dtoa_r+0xe8e>
   12770:	9b09      	ldr	r3, [sp, #36]	; 0x24
   12772:	f1c0 001c 	rsb	r0, r0, #28
   12776:	4403      	add	r3, r0
   12778:	4402      	add	r2, r0
   1277a:	9309      	str	r3, [sp, #36]	; 0x24
   1277c:	4407      	add	r7, r0
   1277e:	9206      	str	r2, [sp, #24]
   12780:	9b09      	ldr	r3, [sp, #36]	; 0x24
   12782:	2b00      	cmp	r3, #0
   12784:	dd05      	ble.n	12792 <_dtoa_r+0x70a>
   12786:	4629      	mov	r1, r5
   12788:	461a      	mov	r2, r3
   1278a:	4620      	mov	r0, r4
   1278c:	f001 fc1e 	bl	13fcc <__lshift>
   12790:	4605      	mov	r5, r0
   12792:	9b06      	ldr	r3, [sp, #24]
   12794:	2b00      	cmp	r3, #0
   12796:	dd05      	ble.n	127a4 <_dtoa_r+0x71c>
   12798:	4649      	mov	r1, r9
   1279a:	461a      	mov	r2, r3
   1279c:	4620      	mov	r0, r4
   1279e:	f001 fc15 	bl	13fcc <__lshift>
   127a2:	4681      	mov	r9, r0
   127a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   127a6:	2b00      	cmp	r3, #0
   127a8:	f040 8138 	bne.w	12a1c <_dtoa_r+0x994>
   127ac:	9b08      	ldr	r3, [sp, #32]
   127ae:	2b00      	cmp	r3, #0
   127b0:	f340 811e 	ble.w	129f0 <_dtoa_r+0x968>
   127b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   127b6:	2b00      	cmp	r3, #0
   127b8:	f040 809f 	bne.w	128fa <_dtoa_r+0x872>
   127bc:	9b07      	ldr	r3, [sp, #28]
   127be:	3301      	adds	r3, #1
   127c0:	9307      	str	r3, [sp, #28]
   127c2:	2701      	movs	r7, #1
   127c4:	f8dd 800c 	ldr.w	r8, [sp, #12]
   127c8:	f8dd a020 	ldr.w	sl, [sp, #32]
   127cc:	e007      	b.n	127de <_dtoa_r+0x756>
   127ce:	4629      	mov	r1, r5
   127d0:	2300      	movs	r3, #0
   127d2:	220a      	movs	r2, #10
   127d4:	4620      	mov	r0, r4
   127d6:	f001 f9c9 	bl	13b6c <__multadd>
   127da:	4605      	mov	r5, r0
   127dc:	3701      	adds	r7, #1
   127de:	4649      	mov	r1, r9
   127e0:	4628      	mov	r0, r5
   127e2:	f7ff fbbb 	bl	11f5c <quorem>
   127e6:	4557      	cmp	r7, sl
   127e8:	f100 0330 	add.w	r3, r0, #48	; 0x30
   127ec:	f808 3b01 	strb.w	r3, [r8], #1
   127f0:	dbed      	blt.n	127ce <_dtoa_r+0x746>
   127f2:	9a08      	ldr	r2, [sp, #32]
   127f4:	2700      	movs	r7, #0
   127f6:	2a00      	cmp	r2, #0
   127f8:	bfcc      	ite	gt
   127fa:	4693      	movgt	fp, r2
   127fc:	f04f 0b01 	movle.w	fp, #1
   12800:	9a03      	ldr	r2, [sp, #12]
   12802:	4493      	add	fp, r2
   12804:	4629      	mov	r1, r5
   12806:	2201      	movs	r2, #1
   12808:	4620      	mov	r0, r4
   1280a:	9304      	str	r3, [sp, #16]
   1280c:	f001 fbde 	bl	13fcc <__lshift>
   12810:	4649      	mov	r1, r9
   12812:	4605      	mov	r5, r0
   12814:	f001 fc50 	bl	140b8 <__mcmp>
   12818:	2800      	cmp	r0, #0
   1281a:	f340 81ab 	ble.w	12b74 <_dtoa_r+0xaec>
   1281e:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
   12822:	9a03      	ldr	r2, [sp, #12]
   12824:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   12828:	e004      	b.n	12834 <_dtoa_r+0x7ac>
   1282a:	455a      	cmp	r2, fp
   1282c:	f000 81ad 	beq.w	12b8a <_dtoa_r+0xb02>
   12830:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   12834:	2b39      	cmp	r3, #57	; 0x39
   12836:	f10b 0a01 	add.w	sl, fp, #1
   1283a:	d0f6      	beq.n	1282a <_dtoa_r+0x7a2>
   1283c:	3301      	adds	r3, #1
   1283e:	f88b 3000 	strb.w	r3, [fp]
   12842:	4649      	mov	r1, r9
   12844:	4620      	mov	r0, r4
   12846:	f001 f987 	bl	13b58 <_Bfree>
   1284a:	b156      	cbz	r6, 12862 <_dtoa_r+0x7da>
   1284c:	b12f      	cbz	r7, 1285a <_dtoa_r+0x7d2>
   1284e:	42b7      	cmp	r7, r6
   12850:	d003      	beq.n	1285a <_dtoa_r+0x7d2>
   12852:	4639      	mov	r1, r7
   12854:	4620      	mov	r0, r4
   12856:	f001 f97f 	bl	13b58 <_Bfree>
   1285a:	4631      	mov	r1, r6
   1285c:	4620      	mov	r0, r4
   1285e:	f001 f97b 	bl	13b58 <_Bfree>
   12862:	4629      	mov	r1, r5
   12864:	4620      	mov	r0, r4
   12866:	f001 f977 	bl	13b58 <_Bfree>
   1286a:	2300      	movs	r3, #0
   1286c:	9a07      	ldr	r2, [sp, #28]
   1286e:	f88a 3000 	strb.w	r3, [sl]
   12872:	9b24      	ldr	r3, [sp, #144]	; 0x90
   12874:	601a      	str	r2, [r3, #0]
   12876:	9b26      	ldr	r3, [sp, #152]	; 0x98
   12878:	2b00      	cmp	r3, #0
   1287a:	f43f ac40 	beq.w	120fe <_dtoa_r+0x76>
   1287e:	9803      	ldr	r0, [sp, #12]
   12880:	f8c3 a000 	str.w	sl, [r3]
   12884:	b019      	add	sp, #100	; 0x64
   12886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1288a:	201c      	movs	r0, #28
   1288c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1288e:	4407      	add	r7, r0
   12890:	4403      	add	r3, r0
   12892:	9309      	str	r3, [sp, #36]	; 0x24
   12894:	9b06      	ldr	r3, [sp, #24]
   12896:	4403      	add	r3, r0
   12898:	9306      	str	r3, [sp, #24]
   1289a:	e771      	b.n	12780 <_dtoa_r+0x6f8>
   1289c:	2601      	movs	r6, #1
   1289e:	e4b6      	b.n	1220e <_dtoa_r+0x186>
   128a0:	f1c0 0020 	rsb	r0, r0, #32
   128a4:	fa08 f000 	lsl.w	r0, r8, r0
   128a8:	e44d      	b.n	12146 <_dtoa_r+0xbe>
   128aa:	4601      	mov	r1, r0
   128ac:	465a      	mov	r2, fp
   128ae:	4620      	mov	r0, r4
   128b0:	f001 fb30 	bl	13f14 <__pow5mult>
   128b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
   128b6:	4681      	mov	r9, r0
   128b8:	2b01      	cmp	r3, #1
   128ba:	f340 81b6 	ble.w	12c2a <_dtoa_r+0xba2>
   128be:	f04f 0a00 	mov.w	sl, #0
   128c2:	f8d9 3010 	ldr.w	r3, [r9, #16]
   128c6:	eb09 0383 	add.w	r3, r9, r3, lsl #2
   128ca:	6918      	ldr	r0, [r3, #16]
   128cc:	f001 f9fa 	bl	13cc4 <__hi0bits>
   128d0:	f1c0 0020 	rsb	r0, r0, #32
   128d4:	e741      	b.n	1275a <_dtoa_r+0x6d2>
   128d6:	bf00      	nop
   128d8:	40240000 	.word	0x40240000
   128dc:	0001a200 	.word	0x0001a200
   128e0:	4631      	mov	r1, r6
   128e2:	2300      	movs	r3, #0
   128e4:	220a      	movs	r2, #10
   128e6:	4620      	mov	r0, r4
   128e8:	f001 f940 	bl	13b6c <__multadd>
   128ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
   128ee:	4606      	mov	r6, r0
   128f0:	2b00      	cmp	r3, #0
   128f2:	f340 82e9 	ble.w	12ec8 <_dtoa_r+0xe40>
   128f6:	e9cd 8307 	strd	r8, r3, [sp, #28]
   128fa:	2f00      	cmp	r7, #0
   128fc:	f300 811d 	bgt.w	12b3a <_dtoa_r+0xab2>
   12900:	f1ba 0f00 	cmp.w	sl, #0
   12904:	f040 81d9 	bne.w	12cba <_dtoa_r+0xc32>
   12908:	46b0      	mov	r8, r6
   1290a:	9b04      	ldr	r3, [sp, #16]
   1290c:	9908      	ldr	r1, [sp, #32]
   1290e:	f003 0201 	and.w	r2, r3, #1
   12912:	9b03      	ldr	r3, [sp, #12]
   12914:	920a      	str	r2, [sp, #40]	; 0x28
   12916:	461f      	mov	r7, r3
   12918:	3b01      	subs	r3, #1
   1291a:	4419      	add	r1, r3
   1291c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1291e:	9108      	str	r1, [sp, #32]
   12920:	4313      	orrs	r3, r2
   12922:	9309      	str	r3, [sp, #36]	; 0x24
   12924:	4649      	mov	r1, r9
   12926:	4628      	mov	r0, r5
   12928:	f7ff fb18 	bl	11f5c <quorem>
   1292c:	4631      	mov	r1, r6
   1292e:	4683      	mov	fp, r0
   12930:	4628      	mov	r0, r5
   12932:	f001 fbc1 	bl	140b8 <__mcmp>
   12936:	4642      	mov	r2, r8
   12938:	4649      	mov	r1, r9
   1293a:	4682      	mov	sl, r0
   1293c:	4620      	mov	r0, r4
   1293e:	f001 fbdb 	bl	140f8 <__mdiff>
   12942:	68c2      	ldr	r2, [r0, #12]
   12944:	4601      	mov	r1, r0
   12946:	f10b 0330 	add.w	r3, fp, #48	; 0x30
   1294a:	2a00      	cmp	r2, #0
   1294c:	d143      	bne.n	129d6 <_dtoa_r+0x94e>
   1294e:	9004      	str	r0, [sp, #16]
   12950:	4628      	mov	r0, r5
   12952:	9306      	str	r3, [sp, #24]
   12954:	f001 fbb0 	bl	140b8 <__mcmp>
   12958:	4602      	mov	r2, r0
   1295a:	9904      	ldr	r1, [sp, #16]
   1295c:	4620      	mov	r0, r4
   1295e:	9204      	str	r2, [sp, #16]
   12960:	f001 f8fa 	bl	13b58 <_Bfree>
   12964:	9a04      	ldr	r2, [sp, #16]
   12966:	9b06      	ldr	r3, [sp, #24]
   12968:	b91a      	cbnz	r2, 12972 <_dtoa_r+0x8ea>
   1296a:	9909      	ldr	r1, [sp, #36]	; 0x24
   1296c:	2900      	cmp	r1, #0
   1296e:	f000 829b 	beq.w	12ea8 <_dtoa_r+0xe20>
   12972:	f1ba 0f00 	cmp.w	sl, #0
   12976:	f2c0 8164 	blt.w	12c42 <_dtoa_r+0xbba>
   1297a:	9922      	ldr	r1, [sp, #136]	; 0x88
   1297c:	ea4a 0a01 	orr.w	sl, sl, r1
   12980:	990a      	ldr	r1, [sp, #40]	; 0x28
   12982:	ea51 010a 	orrs.w	r1, r1, sl
   12986:	f000 815c 	beq.w	12c42 <_dtoa_r+0xbba>
   1298a:	2a00      	cmp	r2, #0
   1298c:	f300 81b6 	bgt.w	12cfc <_dtoa_r+0xc74>
   12990:	9a08      	ldr	r2, [sp, #32]
   12992:	f107 0a01 	add.w	sl, r7, #1
   12996:	4297      	cmp	r7, r2
   12998:	46d3      	mov	fp, sl
   1299a:	703b      	strb	r3, [r7, #0]
   1299c:	f000 81b4 	beq.w	12d08 <_dtoa_r+0xc80>
   129a0:	4629      	mov	r1, r5
   129a2:	2300      	movs	r3, #0
   129a4:	220a      	movs	r2, #10
   129a6:	4620      	mov	r0, r4
   129a8:	f001 f8e0 	bl	13b6c <__multadd>
   129ac:	4546      	cmp	r6, r8
   129ae:	4605      	mov	r5, r0
   129b0:	4631      	mov	r1, r6
   129b2:	f04f 0300 	mov.w	r3, #0
   129b6:	f04f 020a 	mov.w	r2, #10
   129ba:	4620      	mov	r0, r4
   129bc:	d012      	beq.n	129e4 <_dtoa_r+0x95c>
   129be:	f001 f8d5 	bl	13b6c <__multadd>
   129c2:	4641      	mov	r1, r8
   129c4:	4606      	mov	r6, r0
   129c6:	2300      	movs	r3, #0
   129c8:	220a      	movs	r2, #10
   129ca:	4620      	mov	r0, r4
   129cc:	f001 f8ce 	bl	13b6c <__multadd>
   129d0:	4657      	mov	r7, sl
   129d2:	4680      	mov	r8, r0
   129d4:	e7a6      	b.n	12924 <_dtoa_r+0x89c>
   129d6:	4620      	mov	r0, r4
   129d8:	9304      	str	r3, [sp, #16]
   129da:	f001 f8bd 	bl	13b58 <_Bfree>
   129de:	2201      	movs	r2, #1
   129e0:	9b04      	ldr	r3, [sp, #16]
   129e2:	e7c6      	b.n	12972 <_dtoa_r+0x8ea>
   129e4:	f001 f8c2 	bl	13b6c <__multadd>
   129e8:	4657      	mov	r7, sl
   129ea:	4606      	mov	r6, r0
   129ec:	4680      	mov	r8, r0
   129ee:	e799      	b.n	12924 <_dtoa_r+0x89c>
   129f0:	9b22      	ldr	r3, [sp, #136]	; 0x88
   129f2:	2b02      	cmp	r3, #2
   129f4:	dc7a      	bgt.n	12aec <_dtoa_r+0xa64>
   129f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   129f8:	2b00      	cmp	r3, #0
   129fa:	f47f af7e 	bne.w	128fa <_dtoa_r+0x872>
   129fe:	9b07      	ldr	r3, [sp, #28]
   12a00:	4649      	mov	r1, r9
   12a02:	3301      	adds	r3, #1
   12a04:	4628      	mov	r0, r5
   12a06:	9307      	str	r3, [sp, #28]
   12a08:	f7ff faa8 	bl	11f5c <quorem>
   12a0c:	f8dd b00c 	ldr.w	fp, [sp, #12]
   12a10:	f100 0330 	add.w	r3, r0, #48	; 0x30
   12a14:	2700      	movs	r7, #0
   12a16:	f80b 3b01 	strb.w	r3, [fp], #1
   12a1a:	e6f3      	b.n	12804 <_dtoa_r+0x77c>
   12a1c:	4649      	mov	r1, r9
   12a1e:	4628      	mov	r0, r5
   12a20:	f001 fb4a 	bl	140b8 <__mcmp>
   12a24:	2800      	cmp	r0, #0
   12a26:	f6bf aec1 	bge.w	127ac <_dtoa_r+0x724>
   12a2a:	4629      	mov	r1, r5
   12a2c:	2300      	movs	r3, #0
   12a2e:	220a      	movs	r2, #10
   12a30:	4620      	mov	r0, r4
   12a32:	f001 f89b 	bl	13b6c <__multadd>
   12a36:	9b07      	ldr	r3, [sp, #28]
   12a38:	4605      	mov	r5, r0
   12a3a:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   12a3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   12a40:	2b00      	cmp	r3, #0
   12a42:	f47f af4d 	bne.w	128e0 <_dtoa_r+0x858>
   12a46:	9b12      	ldr	r3, [sp, #72]	; 0x48
   12a48:	2b00      	cmp	r3, #0
   12a4a:	f340 8234 	ble.w	12eb6 <_dtoa_r+0xe2e>
   12a4e:	9308      	str	r3, [sp, #32]
   12a50:	e6b7      	b.n	127c2 <_dtoa_r+0x73a>
   12a52:	4bb0      	ldr	r3, [pc, #704]	; (12d14 <_dtoa_r+0xc8c>)
   12a54:	9303      	str	r3, [sp, #12]
   12a56:	3303      	adds	r3, #3
   12a58:	f7ff bbf4 	b.w	12244 <_dtoa_r+0x1bc>
   12a5c:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   12a60:	2900      	cmp	r1, #0
   12a62:	f47f ae73 	bne.w	1274c <_dtoa_r+0x6c4>
   12a66:	f3c2 0313 	ubfx	r3, r2, #0, #20
   12a6a:	2b00      	cmp	r3, #0
   12a6c:	f47f ae6e 	bne.w	1274c <_dtoa_r+0x6c4>
   12a70:	4ba9      	ldr	r3, [pc, #676]	; (12d18 <_dtoa_r+0xc90>)
   12a72:	4013      	ands	r3, r2
   12a74:	2b00      	cmp	r3, #0
   12a76:	f000 8200 	beq.w	12e7a <_dtoa_r+0xdf2>
   12a7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   12a7c:	f04f 0a01 	mov.w	sl, #1
   12a80:	3301      	adds	r3, #1
   12a82:	9309      	str	r3, [sp, #36]	; 0x24
   12a84:	9b06      	ldr	r3, [sp, #24]
   12a86:	3301      	adds	r3, #1
   12a88:	9306      	str	r3, [sp, #24]
   12a8a:	e661      	b.n	12750 <_dtoa_r+0x6c8>
   12a8c:	2301      	movs	r3, #1
   12a8e:	930c      	str	r3, [sp, #48]	; 0x30
   12a90:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   12a92:	9a07      	ldr	r2, [sp, #28]
   12a94:	4413      	add	r3, r2
   12a96:	9312      	str	r3, [sp, #72]	; 0x48
   12a98:	3301      	adds	r3, #1
   12a9a:	2b01      	cmp	r3, #1
   12a9c:	461f      	mov	r7, r3
   12a9e:	bfb8      	it	lt
   12aa0:	2701      	movlt	r7, #1
   12aa2:	9308      	str	r3, [sp, #32]
   12aa4:	2100      	movs	r1, #0
   12aa6:	2f17      	cmp	r7, #23
   12aa8:	6461      	str	r1, [r4, #68]	; 0x44
   12aaa:	f77f ac1e 	ble.w	122ea <_dtoa_r+0x262>
   12aae:	2201      	movs	r2, #1
   12ab0:	2304      	movs	r3, #4
   12ab2:	005b      	lsls	r3, r3, #1
   12ab4:	f103 0014 	add.w	r0, r3, #20
   12ab8:	42b8      	cmp	r0, r7
   12aba:	4611      	mov	r1, r2
   12abc:	f102 0201 	add.w	r2, r2, #1
   12ac0:	d9f7      	bls.n	12ab2 <_dtoa_r+0xa2a>
   12ac2:	6461      	str	r1, [r4, #68]	; 0x44
   12ac4:	e411      	b.n	122ea <_dtoa_r+0x262>
   12ac6:	2301      	movs	r3, #1
   12ac8:	930c      	str	r3, [sp, #48]	; 0x30
   12aca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   12acc:	2b00      	cmp	r3, #0
   12ace:	dd4c      	ble.n	12b6a <_dtoa_r+0xae2>
   12ad0:	461f      	mov	r7, r3
   12ad2:	9312      	str	r3, [sp, #72]	; 0x48
   12ad4:	9308      	str	r3, [sp, #32]
   12ad6:	e7e5      	b.n	12aa4 <_dtoa_r+0xa1c>
   12ad8:	2300      	movs	r3, #0
   12ada:	930c      	str	r3, [sp, #48]	; 0x30
   12adc:	e7d8      	b.n	12a90 <_dtoa_r+0xa08>
   12ade:	2300      	movs	r3, #0
   12ae0:	930c      	str	r3, [sp, #48]	; 0x30
   12ae2:	e7f2      	b.n	12aca <_dtoa_r+0xa42>
   12ae4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   12ae6:	f8cd 801c 	str.w	r8, [sp, #28]
   12aea:	9308      	str	r3, [sp, #32]
   12aec:	9b08      	ldr	r3, [sp, #32]
   12aee:	2b00      	cmp	r3, #0
   12af0:	f47f ad43 	bne.w	1257a <_dtoa_r+0x4f2>
   12af4:	4649      	mov	r1, r9
   12af6:	2205      	movs	r2, #5
   12af8:	4620      	mov	r0, r4
   12afa:	f001 f837 	bl	13b6c <__multadd>
   12afe:	4681      	mov	r9, r0
   12b00:	4628      	mov	r0, r5
   12b02:	4649      	mov	r1, r9
   12b04:	f001 fad8 	bl	140b8 <__mcmp>
   12b08:	2800      	cmp	r0, #0
   12b0a:	f77f ad36 	ble.w	1257a <_dtoa_r+0x4f2>
   12b0e:	2331      	movs	r3, #49	; 0x31
   12b10:	9803      	ldr	r0, [sp, #12]
   12b12:	9f07      	ldr	r7, [sp, #28]
   12b14:	4680      	mov	r8, r0
   12b16:	f800 3b01 	strb.w	r3, [r0], #1
   12b1a:	3701      	adds	r7, #1
   12b1c:	9003      	str	r0, [sp, #12]
   12b1e:	4649      	mov	r1, r9
   12b20:	4620      	mov	r0, r4
   12b22:	f001 f819 	bl	13b58 <_Bfree>
   12b26:	1c7b      	adds	r3, r7, #1
   12b28:	f8dd a00c 	ldr.w	sl, [sp, #12]
   12b2c:	9307      	str	r3, [sp, #28]
   12b2e:	f8cd 800c 	str.w	r8, [sp, #12]
   12b32:	2e00      	cmp	r6, #0
   12b34:	f47f ae91 	bne.w	1285a <_dtoa_r+0x7d2>
   12b38:	e693      	b.n	12862 <_dtoa_r+0x7da>
   12b3a:	4631      	mov	r1, r6
   12b3c:	463a      	mov	r2, r7
   12b3e:	4620      	mov	r0, r4
   12b40:	f001 fa44 	bl	13fcc <__lshift>
   12b44:	4606      	mov	r6, r0
   12b46:	e6db      	b.n	12900 <_dtoa_r+0x878>
   12b48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   12b4a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
   12b4e:	eba8 0303 	sub.w	r3, r8, r3
   12b52:	449b      	add	fp, r3
   12b54:	f04f 0800 	mov.w	r8, #0
   12b58:	e588      	b.n	1266c <_dtoa_r+0x5e4>
   12b5a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   12b5e:	f04f 0a02 	mov.w	sl, #2
   12b62:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   12b66:	f7ff bbee 	b.w	12346 <_dtoa_r+0x2be>
   12b6a:	2301      	movs	r3, #1
   12b6c:	9323      	str	r3, [sp, #140]	; 0x8c
   12b6e:	9308      	str	r3, [sp, #32]
   12b70:	f7ff bbb7 	b.w	122e2 <_dtoa_r+0x25a>
   12b74:	d103      	bne.n	12b7e <_dtoa_r+0xaf6>
   12b76:	9b04      	ldr	r3, [sp, #16]
   12b78:	07d8      	lsls	r0, r3, #31
   12b7a:	f53f ae50 	bmi.w	1281e <_dtoa_r+0x796>
   12b7e:	46da      	mov	sl, fp
   12b80:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   12b84:	2b30      	cmp	r3, #48	; 0x30
   12b86:	d0fa      	beq.n	12b7e <_dtoa_r+0xaf6>
   12b88:	e65b      	b.n	12842 <_dtoa_r+0x7ba>
   12b8a:	9b07      	ldr	r3, [sp, #28]
   12b8c:	9a03      	ldr	r2, [sp, #12]
   12b8e:	3301      	adds	r3, #1
   12b90:	9307      	str	r3, [sp, #28]
   12b92:	2331      	movs	r3, #49	; 0x31
   12b94:	7013      	strb	r3, [r2, #0]
   12b96:	e654      	b.n	12842 <_dtoa_r+0x7ba>
   12b98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   12b9a:	2a00      	cmp	r2, #0
   12b9c:	f000 8128 	beq.w	12df0 <_dtoa_r+0xd68>
   12ba0:	f203 4333 	addw	r3, r3, #1075	; 0x433
   12ba4:	9a06      	ldr	r2, [sp, #24]
   12ba6:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   12baa:	441a      	add	r2, r3
   12bac:	9206      	str	r2, [sp, #24]
   12bae:	9a09      	ldr	r2, [sp, #36]	; 0x24
   12bb0:	4617      	mov	r7, r2
   12bb2:	441a      	add	r2, r3
   12bb4:	9209      	str	r2, [sp, #36]	; 0x24
   12bb6:	e564      	b.n	12682 <_dtoa_r+0x5fa>
   12bb8:	f04f 0900 	mov.w	r9, #0
   12bbc:	464e      	mov	r6, r9
   12bbe:	e4dc      	b.n	1257a <_dtoa_r+0x4f2>
   12bc0:	4629      	mov	r1, r5
   12bc2:	4620      	mov	r0, r4
   12bc4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   12bc6:	f001 f9a5 	bl	13f14 <__pow5mult>
   12bca:	4605      	mov	r5, r0
   12bcc:	e5b1      	b.n	12732 <_dtoa_r+0x6aa>
   12bce:	900e      	str	r0, [sp, #56]	; 0x38
   12bd0:	e564      	b.n	1269c <_dtoa_r+0x614>
   12bd2:	f000 8111 	beq.w	12df8 <_dtoa_r+0xd70>
   12bd6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   12bda:	9a07      	ldr	r2, [sp, #28]
   12bdc:	4b4f      	ldr	r3, [pc, #316]	; (12d1c <_dtoa_r+0xc94>)
   12bde:	4256      	negs	r6, r2
   12be0:	f006 020f 	and.w	r2, r6, #15
   12be4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   12be8:	e9d3 2300 	ldrd	r2, r3, [r3]
   12bec:	f003 f8a2 	bl	15d34 <__aeabi_dmul>
   12bf0:	1136      	asrs	r6, r6, #4
   12bf2:	4680      	mov	r8, r0
   12bf4:	4689      	mov	r9, r1
   12bf6:	f000 8170 	beq.w	12eda <_dtoa_r+0xe52>
   12bfa:	2300      	movs	r3, #0
   12bfc:	f04f 0a02 	mov.w	sl, #2
   12c00:	4f47      	ldr	r7, [pc, #284]	; (12d20 <_dtoa_r+0xc98>)
   12c02:	07f2      	lsls	r2, r6, #31
   12c04:	d506      	bpl.n	12c14 <_dtoa_r+0xb8c>
   12c06:	e9d7 2300 	ldrd	r2, r3, [r7]
   12c0a:	f003 f893 	bl	15d34 <__aeabi_dmul>
   12c0e:	2301      	movs	r3, #1
   12c10:	f10a 0a01 	add.w	sl, sl, #1
   12c14:	1076      	asrs	r6, r6, #1
   12c16:	f107 0708 	add.w	r7, r7, #8
   12c1a:	d1f2      	bne.n	12c02 <_dtoa_r+0xb7a>
   12c1c:	2b00      	cmp	r3, #0
   12c1e:	f43f abb1 	beq.w	12384 <_dtoa_r+0x2fc>
   12c22:	4680      	mov	r8, r0
   12c24:	4689      	mov	r9, r1
   12c26:	f7ff bbad 	b.w	12384 <_dtoa_r+0x2fc>
   12c2a:	9b04      	ldr	r3, [sp, #16]
   12c2c:	2b00      	cmp	r3, #0
   12c2e:	f47f ae46 	bne.w	128be <_dtoa_r+0x836>
   12c32:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   12c36:	f3c2 0313 	ubfx	r3, r2, #0, #20
   12c3a:	2b00      	cmp	r3, #0
   12c3c:	f43f af18 	beq.w	12a70 <_dtoa_r+0x9e8>
   12c40:	e63d      	b.n	128be <_dtoa_r+0x836>
   12c42:	2a00      	cmp	r2, #0
   12c44:	dd12      	ble.n	12c6c <_dtoa_r+0xbe4>
   12c46:	4629      	mov	r1, r5
   12c48:	2201      	movs	r2, #1
   12c4a:	4620      	mov	r0, r4
   12c4c:	9304      	str	r3, [sp, #16]
   12c4e:	f001 f9bd 	bl	13fcc <__lshift>
   12c52:	4649      	mov	r1, r9
   12c54:	4605      	mov	r5, r0
   12c56:	f001 fa2f 	bl	140b8 <__mcmp>
   12c5a:	2800      	cmp	r0, #0
   12c5c:	9b04      	ldr	r3, [sp, #16]
   12c5e:	f340 8117 	ble.w	12e90 <_dtoa_r+0xe08>
   12c62:	2b39      	cmp	r3, #57	; 0x39
   12c64:	f000 80fb 	beq.w	12e5e <_dtoa_r+0xdd6>
   12c68:	f10b 0331 	add.w	r3, fp, #49	; 0x31
   12c6c:	46ba      	mov	sl, r7
   12c6e:	9a07      	ldr	r2, [sp, #28]
   12c70:	4637      	mov	r7, r6
   12c72:	3201      	adds	r2, #1
   12c74:	4646      	mov	r6, r8
   12c76:	9207      	str	r2, [sp, #28]
   12c78:	f80a 3b01 	strb.w	r3, [sl], #1
   12c7c:	e5e1      	b.n	12842 <_dtoa_r+0x7ba>
   12c7e:	9509      	str	r5, [sp, #36]	; 0x24
   12c80:	9c06      	ldr	r4, [sp, #24]
   12c82:	9d04      	ldr	r5, [sp, #16]
   12c84:	4602      	mov	r2, r0
   12c86:	460b      	mov	r3, r1
   12c88:	f002 fe9e 	bl	159c8 <__adddf3>
   12c8c:	4652      	mov	r2, sl
   12c8e:	465b      	mov	r3, fp
   12c90:	4680      	mov	r8, r0
   12c92:	4689      	mov	r9, r1
   12c94:	f003 fade 	bl	16254 <__aeabi_dcmpgt>
   12c98:	b960      	cbnz	r0, 12cb4 <_dtoa_r+0xc2c>
   12c9a:	4652      	mov	r2, sl
   12c9c:	465b      	mov	r3, fp
   12c9e:	4640      	mov	r0, r8
   12ca0:	4649      	mov	r1, r9
   12ca2:	f003 faaf 	bl	16204 <__aeabi_dcmpeq>
   12ca6:	2800      	cmp	r0, #0
   12ca8:	f43f accb 	beq.w	12642 <_dtoa_r+0x5ba>
   12cac:	9b09      	ldr	r3, [sp, #36]	; 0x24
   12cae:	07d9      	lsls	r1, r3, #31
   12cb0:	f57f acc7 	bpl.w	12642 <_dtoa_r+0x5ba>
   12cb4:	9a03      	ldr	r2, [sp, #12]
   12cb6:	f7ff bbff 	b.w	124b8 <_dtoa_r+0x430>
   12cba:	4620      	mov	r0, r4
   12cbc:	6871      	ldr	r1, [r6, #4]
   12cbe:	f000 ff25 	bl	13b0c <_Balloc>
   12cc2:	4607      	mov	r7, r0
   12cc4:	2800      	cmp	r0, #0
   12cc6:	f000 810c 	beq.w	12ee2 <_dtoa_r+0xe5a>
   12cca:	6933      	ldr	r3, [r6, #16]
   12ccc:	f106 010c 	add.w	r1, r6, #12
   12cd0:	3302      	adds	r3, #2
   12cd2:	009a      	lsls	r2, r3, #2
   12cd4:	300c      	adds	r0, #12
   12cd6:	f7f9 fdfd 	bl	c8d4 <memcpy>
   12cda:	4639      	mov	r1, r7
   12cdc:	2201      	movs	r2, #1
   12cde:	4620      	mov	r0, r4
   12ce0:	f001 f974 	bl	13fcc <__lshift>
   12ce4:	4680      	mov	r8, r0
   12ce6:	e610      	b.n	1290a <_dtoa_r+0x882>
   12ce8:	4629      	mov	r1, r5
   12cea:	4620      	mov	r0, r4
   12cec:	f001 f912 	bl	13f14 <__pow5mult>
   12cf0:	4605      	mov	r5, r0
   12cf2:	e51e      	b.n	12732 <_dtoa_r+0x6aa>
   12cf4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   12cf8:	1a9f      	subs	r7, r3, r2
   12cfa:	e4c2      	b.n	12682 <_dtoa_r+0x5fa>
   12cfc:	2b39      	cmp	r3, #57	; 0x39
   12cfe:	f000 80ae 	beq.w	12e5e <_dtoa_r+0xdd6>
   12d02:	46ba      	mov	sl, r7
   12d04:	3301      	adds	r3, #1
   12d06:	e7b2      	b.n	12c6e <_dtoa_r+0xbe6>
   12d08:	9a07      	ldr	r2, [sp, #28]
   12d0a:	4637      	mov	r7, r6
   12d0c:	3201      	adds	r2, #1
   12d0e:	4646      	mov	r6, r8
   12d10:	9207      	str	r2, [sp, #28]
   12d12:	e577      	b.n	12804 <_dtoa_r+0x77c>
   12d14:	0001a264 	.word	0x0001a264
   12d18:	7ff00000 	.word	0x7ff00000
   12d1c:	0001a378 	.word	0x0001a378
   12d20:	0001a350 	.word	0x0001a350
   12d24:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   12d28:	4983      	ldr	r1, [pc, #524]	; (12f38 <_dtoa_r+0xeb0>)
   12d2a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   12d2e:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
   12d32:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   12d36:	f002 fffd 	bl	15d34 <__aeabi_dmul>
   12d3a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   12d3e:	4649      	mov	r1, r9
   12d40:	4640      	mov	r0, r8
   12d42:	f003 fa91 	bl	16268 <__aeabi_d2iz>
   12d46:	4606      	mov	r6, r0
   12d48:	f002 ff8a 	bl	15c60 <__aeabi_i2d>
   12d4c:	460b      	mov	r3, r1
   12d4e:	4602      	mov	r2, r0
   12d50:	4649      	mov	r1, r9
   12d52:	4640      	mov	r0, r8
   12d54:	f002 fe36 	bl	159c4 <__aeabi_dsub>
   12d58:	4653      	mov	r3, sl
   12d5a:	9f03      	ldr	r7, [sp, #12]
   12d5c:	3630      	adds	r6, #48	; 0x30
   12d5e:	2b01      	cmp	r3, #1
   12d60:	4680      	mov	r8, r0
   12d62:	4689      	mov	r9, r1
   12d64:	f807 6b01 	strb.w	r6, [r7], #1
   12d68:	f000 80ac 	beq.w	12ec4 <_dtoa_r+0xe3c>
   12d6c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   12d6e:	9b03      	ldr	r3, [sp, #12]
   12d70:	441e      	add	r6, r3
   12d72:	2200      	movs	r2, #0
   12d74:	4b71      	ldr	r3, [pc, #452]	; (12f3c <_dtoa_r+0xeb4>)
   12d76:	4640      	mov	r0, r8
   12d78:	4649      	mov	r1, r9
   12d7a:	f002 ffdb 	bl	15d34 <__aeabi_dmul>
   12d7e:	4689      	mov	r9, r1
   12d80:	4680      	mov	r8, r0
   12d82:	f003 fa71 	bl	16268 <__aeabi_d2iz>
   12d86:	4682      	mov	sl, r0
   12d88:	f002 ff6a 	bl	15c60 <__aeabi_i2d>
   12d8c:	4602      	mov	r2, r0
   12d8e:	460b      	mov	r3, r1
   12d90:	4640      	mov	r0, r8
   12d92:	4649      	mov	r1, r9
   12d94:	f002 fe16 	bl	159c4 <__aeabi_dsub>
   12d98:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
   12d9c:	f807 ab01 	strb.w	sl, [r7], #1
   12da0:	42b7      	cmp	r7, r6
   12da2:	4680      	mov	r8, r0
   12da4:	4689      	mov	r9, r1
   12da6:	d1e4      	bne.n	12d72 <_dtoa_r+0xcea>
   12da8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   12dac:	2200      	movs	r2, #0
   12dae:	4b64      	ldr	r3, [pc, #400]	; (12f40 <_dtoa_r+0xeb8>)
   12db0:	f002 fe0a 	bl	159c8 <__adddf3>
   12db4:	4642      	mov	r2, r8
   12db6:	464b      	mov	r3, r9
   12db8:	f003 fa2e 	bl	16218 <__aeabi_dcmplt>
   12dbc:	2800      	cmp	r0, #0
   12dbe:	d162      	bne.n	12e86 <_dtoa_r+0xdfe>
   12dc0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   12dc4:	2000      	movs	r0, #0
   12dc6:	495e      	ldr	r1, [pc, #376]	; (12f40 <_dtoa_r+0xeb8>)
   12dc8:	f002 fdfc 	bl	159c4 <__aeabi_dsub>
   12dcc:	4642      	mov	r2, r8
   12dce:	464b      	mov	r3, r9
   12dd0:	f003 fa40 	bl	16254 <__aeabi_dcmpgt>
   12dd4:	2800      	cmp	r0, #0
   12dd6:	f43f aba9 	beq.w	1252c <_dtoa_r+0x4a4>
   12dda:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   12dde:	46b2      	mov	sl, r6
   12de0:	2b30      	cmp	r3, #48	; 0x30
   12de2:	f106 36ff 	add.w	r6, r6, #4294967295	; 0xffffffff
   12de6:	d0f8      	beq.n	12dda <_dtoa_r+0xd52>
   12de8:	9b14      	ldr	r3, [sp, #80]	; 0x50
   12dea:	3301      	adds	r3, #1
   12dec:	9307      	str	r3, [sp, #28]
   12dee:	e538      	b.n	12862 <_dtoa_r+0x7da>
   12df0:	9b16      	ldr	r3, [sp, #88]	; 0x58
   12df2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   12df6:	e6d5      	b.n	12ba4 <_dtoa_r+0xb1c>
   12df8:	f04f 0a02 	mov.w	sl, #2
   12dfc:	e9dd 890a 	ldrd	r8, r9, [sp, #40]	; 0x28
   12e00:	f7ff bac0 	b.w	12384 <_dtoa_r+0x2fc>
   12e04:	9b08      	ldr	r3, [sp, #32]
   12e06:	2b00      	cmp	r3, #0
   12e08:	f43f ab62 	beq.w	124d0 <_dtoa_r+0x448>
   12e0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   12e0e:	2b00      	cmp	r3, #0
   12e10:	f77f ab8c 	ble.w	1252c <_dtoa_r+0x4a4>
   12e14:	9313      	str	r3, [sp, #76]	; 0x4c
   12e16:	9b07      	ldr	r3, [sp, #28]
   12e18:	2200      	movs	r2, #0
   12e1a:	3b01      	subs	r3, #1
   12e1c:	4640      	mov	r0, r8
   12e1e:	4649      	mov	r1, r9
   12e20:	9314      	str	r3, [sp, #80]	; 0x50
   12e22:	4b46      	ldr	r3, [pc, #280]	; (12f3c <_dtoa_r+0xeb4>)
   12e24:	f002 ff86 	bl	15d34 <__aeabi_dmul>
   12e28:	4680      	mov	r8, r0
   12e2a:	4689      	mov	r9, r1
   12e2c:	f10a 0001 	add.w	r0, sl, #1
   12e30:	f002 ff16 	bl	15c60 <__aeabi_i2d>
   12e34:	4642      	mov	r2, r8
   12e36:	464b      	mov	r3, r9
   12e38:	f002 ff7c 	bl	15d34 <__aeabi_dmul>
   12e3c:	4b41      	ldr	r3, [pc, #260]	; (12f44 <_dtoa_r+0xebc>)
   12e3e:	2200      	movs	r2, #0
   12e40:	f002 fdc2 	bl	159c8 <__adddf3>
   12e44:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   12e48:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   12e4c:	9311      	str	r3, [sp, #68]	; 0x44
   12e4e:	f7ff babc 	b.w	123ca <_dtoa_r+0x342>
   12e52:	9b07      	ldr	r3, [sp, #28]
   12e54:	3301      	adds	r3, #1
   12e56:	9307      	str	r3, [sp, #28]
   12e58:	2331      	movs	r3, #49	; 0x31
   12e5a:	f7ff bb34 	b.w	124c6 <_dtoa_r+0x43e>
   12e5e:	9b07      	ldr	r3, [sp, #28]
   12e60:	46bb      	mov	fp, r7
   12e62:	3301      	adds	r3, #1
   12e64:	9307      	str	r3, [sp, #28]
   12e66:	2339      	movs	r3, #57	; 0x39
   12e68:	4637      	mov	r7, r6
   12e6a:	f80b 3b01 	strb.w	r3, [fp], #1
   12e6e:	4646      	mov	r6, r8
   12e70:	e4d7      	b.n	12822 <_dtoa_r+0x79a>
   12e72:	f04f 0900 	mov.w	r9, #0
   12e76:	464e      	mov	r6, r9
   12e78:	e649      	b.n	12b0e <_dtoa_r+0xa86>
   12e7a:	469a      	mov	sl, r3
   12e7c:	e468      	b.n	12750 <_dtoa_r+0x6c8>
   12e7e:	9d10      	ldr	r5, [sp, #64]	; 0x40
   12e80:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   12e82:	46b2      	mov	sl, r6
   12e84:	e7b0      	b.n	12de8 <_dtoa_r+0xd60>
   12e86:	9b14      	ldr	r3, [sp, #80]	; 0x50
   12e88:	9a03      	ldr	r2, [sp, #12]
   12e8a:	9307      	str	r3, [sp, #28]
   12e8c:	f7ff bb14 	b.w	124b8 <_dtoa_r+0x430>
   12e90:	f47f aeec 	bne.w	12c6c <_dtoa_r+0xbe4>
   12e94:	07da      	lsls	r2, r3, #31
   12e96:	f57f aee9 	bpl.w	12c6c <_dtoa_r+0xbe4>
   12e9a:	e6e2      	b.n	12c62 <_dtoa_r+0xbda>
   12e9c:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
   12ea0:	9d10      	ldr	r5, [sp, #64]	; 0x40
   12ea2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   12ea4:	f7ff bb42 	b.w	1252c <_dtoa_r+0x4a4>
   12ea8:	2b39      	cmp	r3, #57	; 0x39
   12eaa:	d0d8      	beq.n	12e5e <_dtoa_r+0xdd6>
   12eac:	f1ba 0f00 	cmp.w	sl, #0
   12eb0:	f73f aeda 	bgt.w	12c68 <_dtoa_r+0xbe0>
   12eb4:	e6da      	b.n	12c6c <_dtoa_r+0xbe4>
   12eb6:	9b22      	ldr	r3, [sp, #136]	; 0x88
   12eb8:	2b02      	cmp	r3, #2
   12eba:	f73f ae13 	bgt.w	12ae4 <_dtoa_r+0xa5c>
   12ebe:	f8cd 801c 	str.w	r8, [sp, #28]
   12ec2:	e59c      	b.n	129fe <_dtoa_r+0x976>
   12ec4:	463e      	mov	r6, r7
   12ec6:	e76f      	b.n	12da8 <_dtoa_r+0xd20>
   12ec8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   12eca:	2b02      	cmp	r3, #2
   12ecc:	f73f ae0a 	bgt.w	12ae4 <_dtoa_r+0xa5c>
   12ed0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   12ed2:	f8cd 801c 	str.w	r8, [sp, #28]
   12ed6:	9308      	str	r3, [sp, #32]
   12ed8:	e50f      	b.n	128fa <_dtoa_r+0x872>
   12eda:	f04f 0a02 	mov.w	sl, #2
   12ede:	f7ff ba51 	b.w	12384 <_dtoa_r+0x2fc>
   12ee2:	4602      	mov	r2, r0
   12ee4:	f240 21ea 	movw	r1, #746	; 0x2ea
   12ee8:	4b17      	ldr	r3, [pc, #92]	; (12f48 <_dtoa_r+0xec0>)
   12eea:	4818      	ldr	r0, [pc, #96]	; (12f4c <_dtoa_r+0xec4>)
   12eec:	f7f8 fe86 	bl	bbfc <__assert_func>
   12ef0:	2600      	movs	r6, #0
   12ef2:	4620      	mov	r0, r4
   12ef4:	4631      	mov	r1, r6
   12ef6:	6466      	str	r6, [r4, #68]	; 0x44
   12ef8:	f000 fe08 	bl	13b0c <_Balloc>
   12efc:	9003      	str	r0, [sp, #12]
   12efe:	b978      	cbnz	r0, 12f20 <_dtoa_r+0xe98>
   12f00:	2200      	movs	r2, #0
   12f02:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
   12f06:	4b10      	ldr	r3, [pc, #64]	; (12f48 <_dtoa_r+0xec0>)
   12f08:	4810      	ldr	r0, [pc, #64]	; (12f4c <_dtoa_r+0xec4>)
   12f0a:	f7f8 fe77 	bl	bbfc <__assert_func>
   12f0e:	4b10      	ldr	r3, [pc, #64]	; (12f50 <_dtoa_r+0xec8>)
   12f10:	9303      	str	r3, [sp, #12]
   12f12:	f7ff b8f4 	b.w	120fe <_dtoa_r+0x76>
   12f16:	f43f ac33 	beq.w	12780 <_dtoa_r+0x6f8>
   12f1a:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   12f1e:	e4b5      	b.n	1288c <_dtoa_r+0x804>
   12f20:	9b03      	ldr	r3, [sp, #12]
   12f22:	2201      	movs	r2, #1
   12f24:	6423      	str	r3, [r4, #64]	; 0x40
   12f26:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   12f2a:	9623      	str	r6, [sp, #140]	; 0x8c
   12f2c:	9312      	str	r3, [sp, #72]	; 0x48
   12f2e:	920c      	str	r2, [sp, #48]	; 0x30
   12f30:	9308      	str	r3, [sp, #32]
   12f32:	f7ff bafb 	b.w	1252c <_dtoa_r+0x4a4>
   12f36:	bf00      	nop
   12f38:	0001a378 	.word	0x0001a378
   12f3c:	40240000 	.word	0x40240000
   12f40:	3fe00000 	.word	0x3fe00000
   12f44:	401c0000 	.word	0x401c0000
   12f48:	0001a274 	.word	0x0001a274
   12f4c:	0001a288 	.word	0x0001a288
   12f50:	0001a268 	.word	0x0001a268

00012f54 <__sflush_r>:
   12f54:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
   12f58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12f5a:	460c      	mov	r4, r1
   12f5c:	0711      	lsls	r1, r2, #28
   12f5e:	4607      	mov	r7, r0
   12f60:	d443      	bmi.n	12fea <__sflush_r+0x96>
   12f62:	6863      	ldr	r3, [r4, #4]
   12f64:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   12f68:	2b00      	cmp	r3, #0
   12f6a:	81a2      	strh	r2, [r4, #12]
   12f6c:	dd5b      	ble.n	13026 <__sflush_r+0xd2>
   12f6e:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   12f70:	2d00      	cmp	r5, #0
   12f72:	d056      	beq.n	13022 <__sflush_r+0xce>
   12f74:	2300      	movs	r3, #0
   12f76:	683e      	ldr	r6, [r7, #0]
   12f78:	603b      	str	r3, [r7, #0]
   12f7a:	b293      	uxth	r3, r2
   12f7c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   12f80:	d155      	bne.n	1302e <__sflush_r+0xda>
   12f82:	2301      	movs	r3, #1
   12f84:	4638      	mov	r0, r7
   12f86:	69e1      	ldr	r1, [r4, #28]
   12f88:	47a8      	blx	r5
   12f8a:	1c42      	adds	r2, r0, #1
   12f8c:	d065      	beq.n	1305a <__sflush_r+0x106>
   12f8e:	89a3      	ldrh	r3, [r4, #12]
   12f90:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   12f92:	075b      	lsls	r3, r3, #29
   12f94:	d505      	bpl.n	12fa2 <__sflush_r+0x4e>
   12f96:	6863      	ldr	r3, [r4, #4]
   12f98:	1ac0      	subs	r0, r0, r3
   12f9a:	6b23      	ldr	r3, [r4, #48]	; 0x30
   12f9c:	b10b      	cbz	r3, 12fa2 <__sflush_r+0x4e>
   12f9e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   12fa0:	1ac0      	subs	r0, r0, r3
   12fa2:	4602      	mov	r2, r0
   12fa4:	69e1      	ldr	r1, [r4, #28]
   12fa6:	2300      	movs	r3, #0
   12fa8:	4638      	mov	r0, r7
   12faa:	47a8      	blx	r5
   12fac:	1c41      	adds	r1, r0, #1
   12fae:	d140      	bne.n	13032 <__sflush_r+0xde>
   12fb0:	683b      	ldr	r3, [r7, #0]
   12fb2:	2b00      	cmp	r3, #0
   12fb4:	d03d      	beq.n	13032 <__sflush_r+0xde>
   12fb6:	2b1d      	cmp	r3, #29
   12fb8:	d001      	beq.n	12fbe <__sflush_r+0x6a>
   12fba:	2b16      	cmp	r3, #22
   12fbc:	d154      	bne.n	13068 <__sflush_r+0x114>
   12fbe:	2200      	movs	r2, #0
   12fc0:	89a3      	ldrh	r3, [r4, #12]
   12fc2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   12fc6:	81a3      	strh	r3, [r4, #12]
   12fc8:	6923      	ldr	r3, [r4, #16]
   12fca:	e9c4 3200 	strd	r3, r2, [r4]
   12fce:	6b21      	ldr	r1, [r4, #48]	; 0x30
   12fd0:	603e      	str	r6, [r7, #0]
   12fd2:	b331      	cbz	r1, 13022 <__sflush_r+0xce>
   12fd4:	f104 0340 	add.w	r3, r4, #64	; 0x40
   12fd8:	4299      	cmp	r1, r3
   12fda:	d002      	beq.n	12fe2 <__sflush_r+0x8e>
   12fdc:	4638      	mov	r0, r7
   12fde:	f000 fb41 	bl	13664 <_free_r>
   12fe2:	2300      	movs	r3, #0
   12fe4:	4618      	mov	r0, r3
   12fe6:	6323      	str	r3, [r4, #48]	; 0x30
   12fe8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12fea:	6926      	ldr	r6, [r4, #16]
   12fec:	b1ce      	cbz	r6, 13022 <__sflush_r+0xce>
   12fee:	b293      	uxth	r3, r2
   12ff0:	079a      	lsls	r2, r3, #30
   12ff2:	bf18      	it	ne
   12ff4:	2300      	movne	r3, #0
   12ff6:	6825      	ldr	r5, [r4, #0]
   12ff8:	bf08      	it	eq
   12ffa:	6963      	ldreq	r3, [r4, #20]
   12ffc:	6026      	str	r6, [r4, #0]
   12ffe:	1bad      	subs	r5, r5, r6
   13000:	60a3      	str	r3, [r4, #8]
   13002:	e00c      	b.n	1301e <__sflush_r+0xca>
   13004:	462b      	mov	r3, r5
   13006:	4632      	mov	r2, r6
   13008:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   1300c:	4638      	mov	r0, r7
   1300e:	69e1      	ldr	r1, [r4, #28]
   13010:	47e0      	blx	ip
   13012:	f1b0 0c00 	subs.w	ip, r0, #0
   13016:	eba5 050c 	sub.w	r5, r5, ip
   1301a:	4466      	add	r6, ip
   1301c:	dd16      	ble.n	1304c <__sflush_r+0xf8>
   1301e:	2d00      	cmp	r5, #0
   13020:	dcf0      	bgt.n	13004 <__sflush_r+0xb0>
   13022:	2000      	movs	r0, #0
   13024:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13026:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   13028:	2b00      	cmp	r3, #0
   1302a:	dca0      	bgt.n	12f6e <__sflush_r+0x1a>
   1302c:	e7f9      	b.n	13022 <__sflush_r+0xce>
   1302e:	6d20      	ldr	r0, [r4, #80]	; 0x50
   13030:	e7af      	b.n	12f92 <__sflush_r+0x3e>
   13032:	2200      	movs	r2, #0
   13034:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   13038:	6062      	str	r2, [r4, #4]
   1303a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   1303e:	6922      	ldr	r2, [r4, #16]
   13040:	81a3      	strh	r3, [r4, #12]
   13042:	04db      	lsls	r3, r3, #19
   13044:	6022      	str	r2, [r4, #0]
   13046:	d5c2      	bpl.n	12fce <__sflush_r+0x7a>
   13048:	6520      	str	r0, [r4, #80]	; 0x50
   1304a:	e7c0      	b.n	12fce <__sflush_r+0x7a>
   1304c:	89a3      	ldrh	r3, [r4, #12]
   1304e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   13052:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   13056:	81a3      	strh	r3, [r4, #12]
   13058:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1305a:	683b      	ldr	r3, [r7, #0]
   1305c:	2b00      	cmp	r3, #0
   1305e:	d096      	beq.n	12f8e <__sflush_r+0x3a>
   13060:	2b1d      	cmp	r3, #29
   13062:	d006      	beq.n	13072 <__sflush_r+0x11e>
   13064:	2b16      	cmp	r3, #22
   13066:	d004      	beq.n	13072 <__sflush_r+0x11e>
   13068:	89a3      	ldrh	r3, [r4, #12]
   1306a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1306e:	81a3      	strh	r3, [r4, #12]
   13070:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13072:	2000      	movs	r0, #0
   13074:	603e      	str	r6, [r7, #0]
   13076:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00013078 <_fflush_r>:
   13078:	b538      	push	{r3, r4, r5, lr}
   1307a:	4605      	mov	r5, r0
   1307c:	460c      	mov	r4, r1
   1307e:	b108      	cbz	r0, 13084 <_fflush_r+0xc>
   13080:	6b83      	ldr	r3, [r0, #56]	; 0x38
   13082:	b1a3      	cbz	r3, 130ae <_fflush_r+0x36>
   13084:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   13088:	b1b8      	cbz	r0, 130ba <_fflush_r+0x42>
   1308a:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1308c:	07db      	lsls	r3, r3, #31
   1308e:	d401      	bmi.n	13094 <_fflush_r+0x1c>
   13090:	0581      	lsls	r1, r0, #22
   13092:	d515      	bpl.n	130c0 <_fflush_r+0x48>
   13094:	4628      	mov	r0, r5
   13096:	4621      	mov	r1, r4
   13098:	f7ff ff5c 	bl	12f54 <__sflush_r>
   1309c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1309e:	4605      	mov	r5, r0
   130a0:	07da      	lsls	r2, r3, #31
   130a2:	d402      	bmi.n	130aa <_fflush_r+0x32>
   130a4:	89a3      	ldrh	r3, [r4, #12]
   130a6:	059b      	lsls	r3, r3, #22
   130a8:	d50e      	bpl.n	130c8 <_fflush_r+0x50>
   130aa:	4628      	mov	r0, r5
   130ac:	bd38      	pop	{r3, r4, r5, pc}
   130ae:	f000 f88f 	bl	131d0 <__sinit>
   130b2:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   130b6:	2800      	cmp	r0, #0
   130b8:	d1e7      	bne.n	1308a <_fflush_r+0x12>
   130ba:	4605      	mov	r5, r0
   130bc:	4628      	mov	r0, r5
   130be:	bd38      	pop	{r3, r4, r5, pc}
   130c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   130c2:	f7f9 f8c5 	bl	c250 <__retarget_lock_acquire_recursive>
   130c6:	e7e5      	b.n	13094 <_fflush_r+0x1c>
   130c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   130ca:	f7f9 f8c9 	bl	c260 <__retarget_lock_release_recursive>
   130ce:	4628      	mov	r0, r5
   130d0:	bd38      	pop	{r3, r4, r5, pc}
   130d2:	bf00      	nop

000130d4 <fflush>:
   130d4:	b538      	push	{r3, r4, r5, lr}
   130d6:	b348      	cbz	r0, 1312c <fflush+0x58>
   130d8:	4b18      	ldr	r3, [pc, #96]	; (1313c <fflush+0x68>)
   130da:	4604      	mov	r4, r0
   130dc:	681d      	ldr	r5, [r3, #0]
   130de:	b10d      	cbz	r5, 130e4 <fflush+0x10>
   130e0:	6bab      	ldr	r3, [r5, #56]	; 0x38
   130e2:	b1bb      	cbz	r3, 13114 <fflush+0x40>
   130e4:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   130e8:	b188      	cbz	r0, 1310e <fflush+0x3a>
   130ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
   130ec:	07db      	lsls	r3, r3, #31
   130ee:	d401      	bmi.n	130f4 <fflush+0x20>
   130f0:	0581      	lsls	r1, r0, #22
   130f2:	d513      	bpl.n	1311c <fflush+0x48>
   130f4:	4628      	mov	r0, r5
   130f6:	4621      	mov	r1, r4
   130f8:	f7ff ff2c 	bl	12f54 <__sflush_r>
   130fc:	6e63      	ldr	r3, [r4, #100]	; 0x64
   130fe:	4605      	mov	r5, r0
   13100:	07da      	lsls	r2, r3, #31
   13102:	d402      	bmi.n	1310a <fflush+0x36>
   13104:	89a3      	ldrh	r3, [r4, #12]
   13106:	059b      	lsls	r3, r3, #22
   13108:	d50c      	bpl.n	13124 <fflush+0x50>
   1310a:	4628      	mov	r0, r5
   1310c:	bd38      	pop	{r3, r4, r5, pc}
   1310e:	4605      	mov	r5, r0
   13110:	4628      	mov	r0, r5
   13112:	bd38      	pop	{r3, r4, r5, pc}
   13114:	4628      	mov	r0, r5
   13116:	f000 f85b 	bl	131d0 <__sinit>
   1311a:	e7e3      	b.n	130e4 <fflush+0x10>
   1311c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1311e:	f7f9 f897 	bl	c250 <__retarget_lock_acquire_recursive>
   13122:	e7e7      	b.n	130f4 <fflush+0x20>
   13124:	6da0      	ldr	r0, [r4, #88]	; 0x58
   13126:	f7f9 f89b 	bl	c260 <__retarget_lock_release_recursive>
   1312a:	e7ee      	b.n	1310a <fflush+0x36>
   1312c:	4b04      	ldr	r3, [pc, #16]	; (13140 <fflush+0x6c>)
   1312e:	4905      	ldr	r1, [pc, #20]	; (13144 <fflush+0x70>)
   13130:	6818      	ldr	r0, [r3, #0]
   13132:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   13136:	f000 bbb5 	b.w	138a4 <_fwalk_reent>
   1313a:	bf00      	nop
   1313c:	20000124 	.word	0x20000124
   13140:	0001a1bc 	.word	0x0001a1bc
   13144:	00013079 	.word	0x00013079

00013148 <_cleanup_r>:
   13148:	4901      	ldr	r1, [pc, #4]	; (13150 <_cleanup_r+0x8>)
   1314a:	f000 bbab 	b.w	138a4 <_fwalk_reent>
   1314e:	bf00      	nop
   13150:	000155e9 	.word	0x000155e9

00013154 <__fp_lock>:
   13154:	b508      	push	{r3, lr}
   13156:	6e43      	ldr	r3, [r0, #100]	; 0x64
   13158:	07da      	lsls	r2, r3, #31
   1315a:	d402      	bmi.n	13162 <__fp_lock+0xe>
   1315c:	8983      	ldrh	r3, [r0, #12]
   1315e:	059b      	lsls	r3, r3, #22
   13160:	d501      	bpl.n	13166 <__fp_lock+0x12>
   13162:	2000      	movs	r0, #0
   13164:	bd08      	pop	{r3, pc}
   13166:	6d80      	ldr	r0, [r0, #88]	; 0x58
   13168:	f7f9 f872 	bl	c250 <__retarget_lock_acquire_recursive>
   1316c:	2000      	movs	r0, #0
   1316e:	bd08      	pop	{r3, pc}

00013170 <__fp_unlock>:
   13170:	b508      	push	{r3, lr}
   13172:	6e43      	ldr	r3, [r0, #100]	; 0x64
   13174:	07da      	lsls	r2, r3, #31
   13176:	d402      	bmi.n	1317e <__fp_unlock+0xe>
   13178:	8983      	ldrh	r3, [r0, #12]
   1317a:	059b      	lsls	r3, r3, #22
   1317c:	d501      	bpl.n	13182 <__fp_unlock+0x12>
   1317e:	2000      	movs	r0, #0
   13180:	bd08      	pop	{r3, pc}
   13182:	6d80      	ldr	r0, [r0, #88]	; 0x58
   13184:	f7f9 f86c 	bl	c260 <__retarget_lock_release_recursive>
   13188:	2000      	movs	r0, #0
   1318a:	bd08      	pop	{r3, pc}

0001318c <__sfmoreglue>:
   1318c:	2268      	movs	r2, #104	; 0x68
   1318e:	b570      	push	{r4, r5, r6, lr}
   13190:	1e4d      	subs	r5, r1, #1
   13192:	fb02 f505 	mul.w	r5, r2, r5
   13196:	460e      	mov	r6, r1
   13198:	f105 0174 	add.w	r1, r5, #116	; 0x74
   1319c:	f7f9 f872 	bl	c284 <_malloc_r>
   131a0:	4604      	mov	r4, r0
   131a2:	b140      	cbz	r0, 131b6 <__sfmoreglue+0x2a>
   131a4:	2100      	movs	r1, #0
   131a6:	300c      	adds	r0, #12
   131a8:	e9c4 6001 	strd	r6, r0, [r4, #4]
   131ac:	f105 0268 	add.w	r2, r5, #104	; 0x68
   131b0:	6021      	str	r1, [r4, #0]
   131b2:	f7f9 fc81 	bl	cab8 <memset>
   131b6:	4620      	mov	r0, r4
   131b8:	bd70      	pop	{r4, r5, r6, pc}
   131ba:	bf00      	nop

000131bc <_cleanup>:
   131bc:	4b02      	ldr	r3, [pc, #8]	; (131c8 <_cleanup+0xc>)
   131be:	4903      	ldr	r1, [pc, #12]	; (131cc <_cleanup+0x10>)
   131c0:	6818      	ldr	r0, [r3, #0]
   131c2:	f000 bb6f 	b.w	138a4 <_fwalk_reent>
   131c6:	bf00      	nop
   131c8:	0001a1bc 	.word	0x0001a1bc
   131cc:	000155e9 	.word	0x000155e9

000131d0 <__sinit>:
   131d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   131d4:	4682      	mov	sl, r0
   131d6:	4839      	ldr	r0, [pc, #228]	; (132bc <__sinit+0xec>)
   131d8:	f7f9 f83a 	bl	c250 <__retarget_lock_acquire_recursive>
   131dc:	f8da 4038 	ldr.w	r4, [sl, #56]	; 0x38
   131e0:	2c00      	cmp	r4, #0
   131e2:	d166      	bne.n	132b2 <__sinit+0xe2>
   131e4:	2304      	movs	r3, #4
   131e6:	2203      	movs	r2, #3
   131e8:	4935      	ldr	r1, [pc, #212]	; (132c0 <__sinit+0xf0>)
   131ea:	f8da 5004 	ldr.w	r5, [sl, #4]
   131ee:	f8ca 103c 	str.w	r1, [sl, #60]	; 0x3c
   131f2:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 132c4 <__sinit+0xf4>
   131f6:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 132c8 <__sinit+0xf8>
   131fa:	4f34      	ldr	r7, [pc, #208]	; (132cc <__sinit+0xfc>)
   131fc:	4e34      	ldr	r6, [pc, #208]	; (132d0 <__sinit+0x100>)
   131fe:	f50a 713b 	add.w	r1, sl, #748	; 0x2ec
   13202:	e9ca 21b9 	strd	r2, r1, [sl, #740]	; 0x2e4
   13206:	f8ca 42e0 	str.w	r4, [sl, #736]	; 0x2e0
   1320a:	4621      	mov	r1, r4
   1320c:	60eb      	str	r3, [r5, #12]
   1320e:	2208      	movs	r2, #8
   13210:	e9c5 4400 	strd	r4, r4, [r5]
   13214:	e9c5 4404 	strd	r4, r4, [r5, #16]
   13218:	666c      	str	r4, [r5, #100]	; 0x64
   1321a:	60ac      	str	r4, [r5, #8]
   1321c:	61ac      	str	r4, [r5, #24]
   1321e:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   13222:	f7f9 fc49 	bl	cab8 <memset>
   13226:	e9c5 5907 	strd	r5, r9, [r5, #28]
   1322a:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   1322e:	62ee      	str	r6, [r5, #44]	; 0x2c
   13230:	f105 0058 	add.w	r0, r5, #88	; 0x58
   13234:	f7f9 f804 	bl	c240 <__retarget_lock_init_recursive>
   13238:	f8da 5008 	ldr.w	r5, [sl, #8]
   1323c:	4b25      	ldr	r3, [pc, #148]	; (132d4 <__sinit+0x104>)
   1323e:	4621      	mov	r1, r4
   13240:	60eb      	str	r3, [r5, #12]
   13242:	2208      	movs	r2, #8
   13244:	e9c5 4400 	strd	r4, r4, [r5]
   13248:	e9c5 4404 	strd	r4, r4, [r5, #16]
   1324c:	666c      	str	r4, [r5, #100]	; 0x64
   1324e:	60ac      	str	r4, [r5, #8]
   13250:	61ac      	str	r4, [r5, #24]
   13252:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   13256:	f7f9 fc2f 	bl	cab8 <memset>
   1325a:	e9c5 5907 	strd	r5, r9, [r5, #28]
   1325e:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   13262:	62ee      	str	r6, [r5, #44]	; 0x2c
   13264:	f105 0058 	add.w	r0, r5, #88	; 0x58
   13268:	f7f8 ffea 	bl	c240 <__retarget_lock_init_recursive>
   1326c:	f8da 500c 	ldr.w	r5, [sl, #12]
   13270:	4b19      	ldr	r3, [pc, #100]	; (132d8 <__sinit+0x108>)
   13272:	4621      	mov	r1, r4
   13274:	60eb      	str	r3, [r5, #12]
   13276:	2208      	movs	r2, #8
   13278:	e9c5 4400 	strd	r4, r4, [r5]
   1327c:	e9c5 4404 	strd	r4, r4, [r5, #16]
   13280:	666c      	str	r4, [r5, #100]	; 0x64
   13282:	60ac      	str	r4, [r5, #8]
   13284:	61ac      	str	r4, [r5, #24]
   13286:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   1328a:	f7f9 fc15 	bl	cab8 <memset>
   1328e:	f105 0058 	add.w	r0, r5, #88	; 0x58
   13292:	e9c5 5907 	strd	r5, r9, [r5, #28]
   13296:	e9c5 760a 	strd	r7, r6, [r5, #40]	; 0x28
   1329a:	f8c5 8024 	str.w	r8, [r5, #36]	; 0x24
   1329e:	f7f8 ffcf 	bl	c240 <__retarget_lock_init_recursive>
   132a2:	2301      	movs	r3, #1
   132a4:	4805      	ldr	r0, [pc, #20]	; (132bc <__sinit+0xec>)
   132a6:	f8ca 3038 	str.w	r3, [sl, #56]	; 0x38
   132aa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   132ae:	f7f8 bfd7 	b.w	c260 <__retarget_lock_release_recursive>
   132b2:	4802      	ldr	r0, [pc, #8]	; (132bc <__sinit+0xec>)
   132b4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   132b8:	f7f8 bfd2 	b.w	c260 <__retarget_lock_release_recursive>
   132bc:	20001f68 	.word	0x20001f68
   132c0:	00013149 	.word	0x00013149
   132c4:	000146bd 	.word	0x000146bd
   132c8:	000146e5 	.word	0x000146e5
   132cc:	00014725 	.word	0x00014725
   132d0:	00014745 	.word	0x00014745
   132d4:	00010009 	.word	0x00010009
   132d8:	00020012 	.word	0x00020012

000132dc <__sfp>:
   132dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   132e0:	4607      	mov	r7, r0
   132e2:	482d      	ldr	r0, [pc, #180]	; (13398 <__sfp+0xbc>)
   132e4:	f7f8 ffb4 	bl	c250 <__retarget_lock_acquire_recursive>
   132e8:	4b2c      	ldr	r3, [pc, #176]	; (1339c <__sfp+0xc0>)
   132ea:	681e      	ldr	r6, [r3, #0]
   132ec:	6bb3      	ldr	r3, [r6, #56]	; 0x38
   132ee:	b393      	cbz	r3, 13356 <__sfp+0x7a>
   132f0:	f04f 0804 	mov.w	r8, #4
   132f4:	f506 7638 	add.w	r6, r6, #736	; 0x2e0
   132f8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
   132fc:	3b01      	subs	r3, #1
   132fe:	d504      	bpl.n	1330a <__sfp+0x2e>
   13300:	e025      	b.n	1334e <__sfp+0x72>
   13302:	1c5a      	adds	r2, r3, #1
   13304:	f104 0468 	add.w	r4, r4, #104	; 0x68
   13308:	d021      	beq.n	1334e <__sfp+0x72>
   1330a:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   1330e:	3b01      	subs	r3, #1
   13310:	2d00      	cmp	r5, #0
   13312:	d1f6      	bne.n	13302 <__sfp+0x26>
   13314:	4b22      	ldr	r3, [pc, #136]	; (133a0 <__sfp+0xc4>)
   13316:	f104 0058 	add.w	r0, r4, #88	; 0x58
   1331a:	60e3      	str	r3, [r4, #12]
   1331c:	6665      	str	r5, [r4, #100]	; 0x64
   1331e:	f7f8 ff8f 	bl	c240 <__retarget_lock_init_recursive>
   13322:	481d      	ldr	r0, [pc, #116]	; (13398 <__sfp+0xbc>)
   13324:	f7f8 ff9c 	bl	c260 <__retarget_lock_release_recursive>
   13328:	2208      	movs	r2, #8
   1332a:	4629      	mov	r1, r5
   1332c:	e9c4 5501 	strd	r5, r5, [r4, #4]
   13330:	e9c4 5504 	strd	r5, r5, [r4, #16]
   13334:	6025      	str	r5, [r4, #0]
   13336:	61a5      	str	r5, [r4, #24]
   13338:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1333c:	f7f9 fbbc 	bl	cab8 <memset>
   13340:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
   13344:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
   13348:	4620      	mov	r0, r4
   1334a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1334e:	6835      	ldr	r5, [r6, #0]
   13350:	b12d      	cbz	r5, 1335e <__sfp+0x82>
   13352:	462e      	mov	r6, r5
   13354:	e7d0      	b.n	132f8 <__sfp+0x1c>
   13356:	4630      	mov	r0, r6
   13358:	f7ff ff3a 	bl	131d0 <__sinit>
   1335c:	e7c8      	b.n	132f0 <__sfp+0x14>
   1335e:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
   13362:	4638      	mov	r0, r7
   13364:	f7f8 ff8e 	bl	c284 <_malloc_r>
   13368:	4604      	mov	r4, r0
   1336a:	b168      	cbz	r0, 13388 <__sfp+0xac>
   1336c:	6005      	str	r5, [r0, #0]
   1336e:	4629      	mov	r1, r5
   13370:	4605      	mov	r5, r0
   13372:	f8c0 8004 	str.w	r8, [r0, #4]
   13376:	300c      	adds	r0, #12
   13378:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
   1337c:	60a0      	str	r0, [r4, #8]
   1337e:	f7f9 fb9b 	bl	cab8 <memset>
   13382:	6034      	str	r4, [r6, #0]
   13384:	462e      	mov	r6, r5
   13386:	e7b7      	b.n	132f8 <__sfp+0x1c>
   13388:	4803      	ldr	r0, [pc, #12]	; (13398 <__sfp+0xbc>)
   1338a:	6034      	str	r4, [r6, #0]
   1338c:	f7f8 ff68 	bl	c260 <__retarget_lock_release_recursive>
   13390:	230c      	movs	r3, #12
   13392:	603b      	str	r3, [r7, #0]
   13394:	e7d8      	b.n	13348 <__sfp+0x6c>
   13396:	bf00      	nop
   13398:	20001f64 	.word	0x20001f64
   1339c:	0001a1bc 	.word	0x0001a1bc
   133a0:	ffff0001 	.word	0xffff0001

000133a4 <__sfp_lock_acquire>:
   133a4:	4801      	ldr	r0, [pc, #4]	; (133ac <__sfp_lock_acquire+0x8>)
   133a6:	f7f8 bf53 	b.w	c250 <__retarget_lock_acquire_recursive>
   133aa:	bf00      	nop
   133ac:	20001f64 	.word	0x20001f64

000133b0 <__sfp_lock_release>:
   133b0:	4801      	ldr	r0, [pc, #4]	; (133b8 <__sfp_lock_release+0x8>)
   133b2:	f7f8 bf55 	b.w	c260 <__retarget_lock_release_recursive>
   133b6:	bf00      	nop
   133b8:	20001f64 	.word	0x20001f64

000133bc <__sinit_lock_acquire>:
   133bc:	4801      	ldr	r0, [pc, #4]	; (133c4 <__sinit_lock_acquire+0x8>)
   133be:	f7f8 bf47 	b.w	c250 <__retarget_lock_acquire_recursive>
   133c2:	bf00      	nop
   133c4:	20001f68 	.word	0x20001f68

000133c8 <__sinit_lock_release>:
   133c8:	4801      	ldr	r0, [pc, #4]	; (133d0 <__sinit_lock_release+0x8>)
   133ca:	f7f8 bf49 	b.w	c260 <__retarget_lock_release_recursive>
   133ce:	bf00      	nop
   133d0:	20001f68 	.word	0x20001f68

000133d4 <__fp_lock_all>:
   133d4:	b508      	push	{r3, lr}
   133d6:	4805      	ldr	r0, [pc, #20]	; (133ec <__fp_lock_all+0x18>)
   133d8:	f7f8 ff3a 	bl	c250 <__retarget_lock_acquire_recursive>
   133dc:	4b04      	ldr	r3, [pc, #16]	; (133f0 <__fp_lock_all+0x1c>)
   133de:	4905      	ldr	r1, [pc, #20]	; (133f4 <__fp_lock_all+0x20>)
   133e0:	6818      	ldr	r0, [r3, #0]
   133e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   133e6:	f000 ba3d 	b.w	13864 <_fwalk>
   133ea:	bf00      	nop
   133ec:	20001f64 	.word	0x20001f64
   133f0:	20000124 	.word	0x20000124
   133f4:	00013155 	.word	0x00013155

000133f8 <__fp_unlock_all>:
   133f8:	b508      	push	{r3, lr}
   133fa:	4b05      	ldr	r3, [pc, #20]	; (13410 <__fp_unlock_all+0x18>)
   133fc:	4905      	ldr	r1, [pc, #20]	; (13414 <__fp_unlock_all+0x1c>)
   133fe:	6818      	ldr	r0, [r3, #0]
   13400:	f000 fa30 	bl	13864 <_fwalk>
   13404:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   13408:	4803      	ldr	r0, [pc, #12]	; (13418 <__fp_unlock_all+0x20>)
   1340a:	f7f8 bf29 	b.w	c260 <__retarget_lock_release_recursive>
   1340e:	bf00      	nop
   13410:	20000124 	.word	0x20000124
   13414:	00013171 	.word	0x00013171
   13418:	20001f64 	.word	0x20001f64

0001341c <__libc_fini_array>:
   1341c:	b538      	push	{r3, r4, r5, lr}
   1341e:	4b08      	ldr	r3, [pc, #32]	; (13440 <__libc_fini_array+0x24>)
   13420:	4d08      	ldr	r5, [pc, #32]	; (13444 <__libc_fini_array+0x28>)
   13422:	1b5b      	subs	r3, r3, r5
   13424:	109c      	asrs	r4, r3, #2
   13426:	d007      	beq.n	13438 <__libc_fini_array+0x1c>
   13428:	3b04      	subs	r3, #4
   1342a:	441d      	add	r5, r3
   1342c:	3c01      	subs	r4, #1
   1342e:	f855 3904 	ldr.w	r3, [r5], #-4
   13432:	4798      	blx	r3
   13434:	2c00      	cmp	r4, #0
   13436:	d1f9      	bne.n	1342c <__libc_fini_array+0x10>
   13438:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1343c:	f003 be18 	b.w	17070 <_fini>
   13440:	20000aec 	.word	0x20000aec
   13444:	20000ae8 	.word	0x20000ae8

00013448 <__fputwc>:
   13448:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1344c:	b083      	sub	sp, #12
   1344e:	4607      	mov	r7, r0
   13450:	4688      	mov	r8, r1
   13452:	4614      	mov	r4, r2
   13454:	f000 fa6a 	bl	1392c <__locale_mb_cur_max>
   13458:	2801      	cmp	r0, #1
   1345a:	d103      	bne.n	13464 <__fputwc+0x1c>
   1345c:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   13460:	2bfe      	cmp	r3, #254	; 0xfe
   13462:	d933      	bls.n	134cc <__fputwc+0x84>
   13464:	4642      	mov	r2, r8
   13466:	4638      	mov	r0, r7
   13468:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   1346c:	a901      	add	r1, sp, #4
   1346e:	f001 ffc5 	bl	153fc <_wcrtomb_r>
   13472:	1c42      	adds	r2, r0, #1
   13474:	4606      	mov	r6, r0
   13476:	d02f      	beq.n	134d8 <__fputwc+0x90>
   13478:	b318      	cbz	r0, 134c2 <__fputwc+0x7a>
   1347a:	f89d 1004 	ldrb.w	r1, [sp, #4]
   1347e:	2500      	movs	r5, #0
   13480:	f10d 0905 	add.w	r9, sp, #5
   13484:	e008      	b.n	13498 <__fputwc+0x50>
   13486:	6823      	ldr	r3, [r4, #0]
   13488:	1c5a      	adds	r2, r3, #1
   1348a:	6022      	str	r2, [r4, #0]
   1348c:	7019      	strb	r1, [r3, #0]
   1348e:	3501      	adds	r5, #1
   13490:	42b5      	cmp	r5, r6
   13492:	d216      	bcs.n	134c2 <__fputwc+0x7a>
   13494:	f819 1b01 	ldrb.w	r1, [r9], #1
   13498:	68a3      	ldr	r3, [r4, #8]
   1349a:	3b01      	subs	r3, #1
   1349c:	2b00      	cmp	r3, #0
   1349e:	60a3      	str	r3, [r4, #8]
   134a0:	daf1      	bge.n	13486 <__fputwc+0x3e>
   134a2:	69a2      	ldr	r2, [r4, #24]
   134a4:	4293      	cmp	r3, r2
   134a6:	db01      	blt.n	134ac <__fputwc+0x64>
   134a8:	290a      	cmp	r1, #10
   134aa:	d1ec      	bne.n	13486 <__fputwc+0x3e>
   134ac:	4622      	mov	r2, r4
   134ae:	4638      	mov	r0, r7
   134b0:	f7fe fc00 	bl	11cb4 <__swbuf_r>
   134b4:	1c43      	adds	r3, r0, #1
   134b6:	d1ea      	bne.n	1348e <__fputwc+0x46>
   134b8:	4606      	mov	r6, r0
   134ba:	4630      	mov	r0, r6
   134bc:	b003      	add	sp, #12
   134be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   134c2:	4646      	mov	r6, r8
   134c4:	4630      	mov	r0, r6
   134c6:	b003      	add	sp, #12
   134c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   134cc:	fa5f f188 	uxtb.w	r1, r8
   134d0:	4606      	mov	r6, r0
   134d2:	f88d 1004 	strb.w	r1, [sp, #4]
   134d6:	e7d2      	b.n	1347e <__fputwc+0x36>
   134d8:	4630      	mov	r0, r6
   134da:	89a3      	ldrh	r3, [r4, #12]
   134dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   134e0:	81a3      	strh	r3, [r4, #12]
   134e2:	b003      	add	sp, #12
   134e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

000134e8 <_fputwc_r>:
   134e8:	b530      	push	{r4, r5, lr}
   134ea:	6e53      	ldr	r3, [r2, #100]	; 0x64
   134ec:	4614      	mov	r4, r2
   134ee:	f013 0f01 	tst.w	r3, #1
   134f2:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   134f6:	4605      	mov	r5, r0
   134f8:	b083      	sub	sp, #12
   134fa:	b29a      	uxth	r2, r3
   134fc:	d101      	bne.n	13502 <_fputwc_r+0x1a>
   134fe:	0598      	lsls	r0, r3, #22
   13500:	d51c      	bpl.n	1353c <_fputwc_r+0x54>
   13502:	0490      	lsls	r0, r2, #18
   13504:	d406      	bmi.n	13514 <_fputwc_r+0x2c>
   13506:	6e62      	ldr	r2, [r4, #100]	; 0x64
   13508:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   1350c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   13510:	81a3      	strh	r3, [r4, #12]
   13512:	6662      	str	r2, [r4, #100]	; 0x64
   13514:	4622      	mov	r2, r4
   13516:	4628      	mov	r0, r5
   13518:	f7ff ff96 	bl	13448 <__fputwc>
   1351c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1351e:	4605      	mov	r5, r0
   13520:	07da      	lsls	r2, r3, #31
   13522:	d402      	bmi.n	1352a <_fputwc_r+0x42>
   13524:	89a3      	ldrh	r3, [r4, #12]
   13526:	059b      	lsls	r3, r3, #22
   13528:	d502      	bpl.n	13530 <_fputwc_r+0x48>
   1352a:	4628      	mov	r0, r5
   1352c:	b003      	add	sp, #12
   1352e:	bd30      	pop	{r4, r5, pc}
   13530:	6da0      	ldr	r0, [r4, #88]	; 0x58
   13532:	f7f8 fe95 	bl	c260 <__retarget_lock_release_recursive>
   13536:	4628      	mov	r0, r5
   13538:	b003      	add	sp, #12
   1353a:	bd30      	pop	{r4, r5, pc}
   1353c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1353e:	9101      	str	r1, [sp, #4]
   13540:	f7f8 fe86 	bl	c250 <__retarget_lock_acquire_recursive>
   13544:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   13548:	9901      	ldr	r1, [sp, #4]
   1354a:	b29a      	uxth	r2, r3
   1354c:	e7d9      	b.n	13502 <_fputwc_r+0x1a>
   1354e:	bf00      	nop

00013550 <fputwc>:
   13550:	4b1b      	ldr	r3, [pc, #108]	; (135c0 <fputwc+0x70>)
   13552:	b570      	push	{r4, r5, r6, lr}
   13554:	681e      	ldr	r6, [r3, #0]
   13556:	4605      	mov	r5, r0
   13558:	460c      	mov	r4, r1
   1355a:	b10e      	cbz	r6, 13560 <fputwc+0x10>
   1355c:	6bb3      	ldr	r3, [r6, #56]	; 0x38
   1355e:	b1fb      	cbz	r3, 135a0 <fputwc+0x50>
   13560:	6e63      	ldr	r3, [r4, #100]	; 0x64
   13562:	f013 0f01 	tst.w	r3, #1
   13566:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1356a:	b29a      	uxth	r2, r3
   1356c:	d101      	bne.n	13572 <fputwc+0x22>
   1356e:	0598      	lsls	r0, r3, #22
   13570:	d51f      	bpl.n	135b2 <fputwc+0x62>
   13572:	0491      	lsls	r1, r2, #18
   13574:	d406      	bmi.n	13584 <fputwc+0x34>
   13576:	6e62      	ldr	r2, [r4, #100]	; 0x64
   13578:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   1357c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   13580:	81a3      	strh	r3, [r4, #12]
   13582:	6662      	str	r2, [r4, #100]	; 0x64
   13584:	4622      	mov	r2, r4
   13586:	4629      	mov	r1, r5
   13588:	4630      	mov	r0, r6
   1358a:	f7ff ff5d 	bl	13448 <__fputwc>
   1358e:	6e63      	ldr	r3, [r4, #100]	; 0x64
   13590:	4605      	mov	r5, r0
   13592:	07da      	lsls	r2, r3, #31
   13594:	d402      	bmi.n	1359c <fputwc+0x4c>
   13596:	89a3      	ldrh	r3, [r4, #12]
   13598:	059b      	lsls	r3, r3, #22
   1359a:	d505      	bpl.n	135a8 <fputwc+0x58>
   1359c:	4628      	mov	r0, r5
   1359e:	bd70      	pop	{r4, r5, r6, pc}
   135a0:	4630      	mov	r0, r6
   135a2:	f7ff fe15 	bl	131d0 <__sinit>
   135a6:	e7db      	b.n	13560 <fputwc+0x10>
   135a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   135aa:	f7f8 fe59 	bl	c260 <__retarget_lock_release_recursive>
   135ae:	4628      	mov	r0, r5
   135b0:	bd70      	pop	{r4, r5, r6, pc}
   135b2:	6da0      	ldr	r0, [r4, #88]	; 0x58
   135b4:	f7f8 fe4c 	bl	c250 <__retarget_lock_acquire_recursive>
   135b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   135bc:	b29a      	uxth	r2, r3
   135be:	e7d8      	b.n	13572 <fputwc+0x22>
   135c0:	20000124 	.word	0x20000124

000135c4 <_malloc_trim_r>:
   135c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   135c6:	460c      	mov	r4, r1
   135c8:	4f23      	ldr	r7, [pc, #140]	; (13658 <_malloc_trim_r+0x94>)
   135ca:	4606      	mov	r6, r0
   135cc:	f7f9 fac6 	bl	cb5c <__malloc_lock>
   135d0:	68bb      	ldr	r3, [r7, #8]
   135d2:	685d      	ldr	r5, [r3, #4]
   135d4:	f5c4 637e 	rsb	r3, r4, #4064	; 0xfe0
   135d8:	f025 0503 	bic.w	r5, r5, #3
   135dc:	330f      	adds	r3, #15
   135de:	442b      	add	r3, r5
   135e0:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
   135e4:	f023 030f 	bic.w	r3, r3, #15
   135e8:	f5a3 5480 	sub.w	r4, r3, #4096	; 0x1000
   135ec:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   135f0:	db07      	blt.n	13602 <_malloc_trim_r+0x3e>
   135f2:	2100      	movs	r1, #0
   135f4:	4630      	mov	r0, r6
   135f6:	f7f9 fda7 	bl	d148 <_sbrk_r>
   135fa:	68bb      	ldr	r3, [r7, #8]
   135fc:	442b      	add	r3, r5
   135fe:	4298      	cmp	r0, r3
   13600:	d004      	beq.n	1360c <_malloc_trim_r+0x48>
   13602:	4630      	mov	r0, r6
   13604:	f7f9 fab0 	bl	cb68 <__malloc_unlock>
   13608:	2000      	movs	r0, #0
   1360a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1360c:	4630      	mov	r0, r6
   1360e:	4261      	negs	r1, r4
   13610:	f7f9 fd9a 	bl	d148 <_sbrk_r>
   13614:	3001      	adds	r0, #1
   13616:	d00d      	beq.n	13634 <_malloc_trim_r+0x70>
   13618:	4a10      	ldr	r2, [pc, #64]	; (1365c <_malloc_trim_r+0x98>)
   1361a:	68bb      	ldr	r3, [r7, #8]
   1361c:	1b2d      	subs	r5, r5, r4
   1361e:	f045 0501 	orr.w	r5, r5, #1
   13622:	605d      	str	r5, [r3, #4]
   13624:	6813      	ldr	r3, [r2, #0]
   13626:	4630      	mov	r0, r6
   13628:	1b1b      	subs	r3, r3, r4
   1362a:	6013      	str	r3, [r2, #0]
   1362c:	f7f9 fa9c 	bl	cb68 <__malloc_unlock>
   13630:	2001      	movs	r0, #1
   13632:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13634:	2100      	movs	r1, #0
   13636:	4630      	mov	r0, r6
   13638:	f7f9 fd86 	bl	d148 <_sbrk_r>
   1363c:	68ba      	ldr	r2, [r7, #8]
   1363e:	1a83      	subs	r3, r0, r2
   13640:	2b0f      	cmp	r3, #15
   13642:	ddde      	ble.n	13602 <_malloc_trim_r+0x3e>
   13644:	f043 0301 	orr.w	r3, r3, #1
   13648:	6053      	str	r3, [r2, #4]
   1364a:	4b05      	ldr	r3, [pc, #20]	; (13660 <_malloc_trim_r+0x9c>)
   1364c:	4903      	ldr	r1, [pc, #12]	; (1365c <_malloc_trim_r+0x98>)
   1364e:	681b      	ldr	r3, [r3, #0]
   13650:	1ac0      	subs	r0, r0, r3
   13652:	6008      	str	r0, [r1, #0]
   13654:	e7d5      	b.n	13602 <_malloc_trim_r+0x3e>
   13656:	bf00      	nop
   13658:	20000550 	.word	0x20000550
   1365c:	20001f70 	.word	0x20001f70
   13660:	20000958 	.word	0x20000958

00013664 <_free_r>:
   13664:	2900      	cmp	r1, #0
   13666:	d05e      	beq.n	13726 <_free_r+0xc2>
   13668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1366a:	460c      	mov	r4, r1
   1366c:	4606      	mov	r6, r0
   1366e:	f7f9 fa75 	bl	cb5c <__malloc_lock>
   13672:	f854 2c04 	ldr.w	r2, [r4, #-4]
   13676:	4f78      	ldr	r7, [pc, #480]	; (13858 <_free_r+0x1f4>)
   13678:	f1a4 0508 	sub.w	r5, r4, #8
   1367c:	f022 0101 	bic.w	r1, r2, #1
   13680:	1868      	adds	r0, r5, r1
   13682:	f8d7 c008 	ldr.w	ip, [r7, #8]
   13686:	6843      	ldr	r3, [r0, #4]
   13688:	4584      	cmp	ip, r0
   1368a:	f023 0303 	bic.w	r3, r3, #3
   1368e:	f000 8087 	beq.w	137a0 <_free_r+0x13c>
   13692:	07d2      	lsls	r2, r2, #31
   13694:	6043      	str	r3, [r0, #4]
   13696:	d434      	bmi.n	13702 <_free_r+0x9e>
   13698:	f854 2c08 	ldr.w	r2, [r4, #-8]
   1369c:	f107 0408 	add.w	r4, r7, #8
   136a0:	1aad      	subs	r5, r5, r2
   136a2:	4411      	add	r1, r2
   136a4:	68aa      	ldr	r2, [r5, #8]
   136a6:	42a2      	cmp	r2, r4
   136a8:	d068      	beq.n	1377c <_free_r+0x118>
   136aa:	eb00 0c03 	add.w	ip, r0, r3
   136ae:	f8dc e004 	ldr.w	lr, [ip, #4]
   136b2:	f8d5 c00c 	ldr.w	ip, [r5, #12]
   136b6:	f01e 0f01 	tst.w	lr, #1
   136ba:	f8c2 c00c 	str.w	ip, [r2, #12]
   136be:	f8cc 2008 	str.w	r2, [ip, #8]
   136c2:	f000 8091 	beq.w	137e8 <_free_r+0x184>
   136c6:	f041 0301 	orr.w	r3, r1, #1
   136ca:	606b      	str	r3, [r5, #4]
   136cc:	6001      	str	r1, [r0, #0]
   136ce:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   136d2:	d231      	bcs.n	13738 <_free_r+0xd4>
   136d4:	094a      	lsrs	r2, r1, #5
   136d6:	08cb      	lsrs	r3, r1, #3
   136d8:	2101      	movs	r1, #1
   136da:	4091      	lsls	r1, r2
   136dc:	687a      	ldr	r2, [r7, #4]
   136de:	3301      	adds	r3, #1
   136e0:	4311      	orrs	r1, r2
   136e2:	6079      	str	r1, [r7, #4]
   136e4:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
   136e8:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
   136ec:	3a08      	subs	r2, #8
   136ee:	e9c5 1202 	strd	r1, r2, [r5, #8]
   136f2:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
   136f6:	60cd      	str	r5, [r1, #12]
   136f8:	4630      	mov	r0, r6
   136fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   136fe:	f7f9 ba33 	b.w	cb68 <__malloc_unlock>
   13702:	18c2      	adds	r2, r0, r3
   13704:	6852      	ldr	r2, [r2, #4]
   13706:	07d2      	lsls	r2, r2, #31
   13708:	d40e      	bmi.n	13728 <_free_r+0xc4>
   1370a:	4419      	add	r1, r3
   1370c:	f107 0408 	add.w	r4, r7, #8
   13710:	6883      	ldr	r3, [r0, #8]
   13712:	42a3      	cmp	r3, r4
   13714:	d070      	beq.n	137f8 <_free_r+0x194>
   13716:	68c2      	ldr	r2, [r0, #12]
   13718:	60da      	str	r2, [r3, #12]
   1371a:	6093      	str	r3, [r2, #8]
   1371c:	f041 0301 	orr.w	r3, r1, #1
   13720:	606b      	str	r3, [r5, #4]
   13722:	5069      	str	r1, [r5, r1]
   13724:	e7d3      	b.n	136ce <_free_r+0x6a>
   13726:	4770      	bx	lr
   13728:	f041 0301 	orr.w	r3, r1, #1
   1372c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   13730:	f844 3c04 	str.w	r3, [r4, #-4]
   13734:	6001      	str	r1, [r0, #0]
   13736:	d3cd      	bcc.n	136d4 <_free_r+0x70>
   13738:	f5b1 6f20 	cmp.w	r1, #2560	; 0xa00
   1373c:	ea4f 2351 	mov.w	r3, r1, lsr #9
   13740:	d247      	bcs.n	137d2 <_free_r+0x16e>
   13742:	098b      	lsrs	r3, r1, #6
   13744:	f103 0039 	add.w	r0, r3, #57	; 0x39
   13748:	f103 0238 	add.w	r2, r3, #56	; 0x38
   1374c:	00c3      	lsls	r3, r0, #3
   1374e:	18f8      	adds	r0, r7, r3
   13750:	58fb      	ldr	r3, [r7, r3]
   13752:	3808      	subs	r0, #8
   13754:	4298      	cmp	r0, r3
   13756:	d058      	beq.n	1380a <_free_r+0x1a6>
   13758:	685a      	ldr	r2, [r3, #4]
   1375a:	f022 0203 	bic.w	r2, r2, #3
   1375e:	428a      	cmp	r2, r1
   13760:	d902      	bls.n	13768 <_free_r+0x104>
   13762:	689b      	ldr	r3, [r3, #8]
   13764:	4298      	cmp	r0, r3
   13766:	d1f7      	bne.n	13758 <_free_r+0xf4>
   13768:	68d8      	ldr	r0, [r3, #12]
   1376a:	e9c5 3002 	strd	r3, r0, [r5, #8]
   1376e:	6085      	str	r5, [r0, #8]
   13770:	4630      	mov	r0, r6
   13772:	60dd      	str	r5, [r3, #12]
   13774:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   13778:	f7f9 b9f6 	b.w	cb68 <__malloc_unlock>
   1377c:	18c2      	adds	r2, r0, r3
   1377e:	6852      	ldr	r2, [r2, #4]
   13780:	07d2      	lsls	r2, r2, #31
   13782:	d463      	bmi.n	1384c <_free_r+0x1e8>
   13784:	440b      	add	r3, r1
   13786:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
   1378a:	60ca      	str	r2, [r1, #12]
   1378c:	6091      	str	r1, [r2, #8]
   1378e:	f043 0201 	orr.w	r2, r3, #1
   13792:	606a      	str	r2, [r5, #4]
   13794:	4630      	mov	r0, r6
   13796:	50eb      	str	r3, [r5, r3]
   13798:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1379c:	f7f9 b9e4 	b.w	cb68 <__malloc_unlock>
   137a0:	440b      	add	r3, r1
   137a2:	07d1      	lsls	r1, r2, #31
   137a4:	d407      	bmi.n	137b6 <_free_r+0x152>
   137a6:	f854 2c08 	ldr.w	r2, [r4, #-8]
   137aa:	1aad      	subs	r5, r5, r2
   137ac:	4413      	add	r3, r2
   137ae:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
   137b2:	60ca      	str	r2, [r1, #12]
   137b4:	6091      	str	r1, [r2, #8]
   137b6:	f043 0201 	orr.w	r2, r3, #1
   137ba:	606a      	str	r2, [r5, #4]
   137bc:	4a27      	ldr	r2, [pc, #156]	; (1385c <_free_r+0x1f8>)
   137be:	60bd      	str	r5, [r7, #8]
   137c0:	6812      	ldr	r2, [r2, #0]
   137c2:	429a      	cmp	r2, r3
   137c4:	d898      	bhi.n	136f8 <_free_r+0x94>
   137c6:	4b26      	ldr	r3, [pc, #152]	; (13860 <_free_r+0x1fc>)
   137c8:	4630      	mov	r0, r6
   137ca:	6819      	ldr	r1, [r3, #0]
   137cc:	f7ff fefa 	bl	135c4 <_malloc_trim_r>
   137d0:	e792      	b.n	136f8 <_free_r+0x94>
   137d2:	2b14      	cmp	r3, #20
   137d4:	d90a      	bls.n	137ec <_free_r+0x188>
   137d6:	2b54      	cmp	r3, #84	; 0x54
   137d8:	d81f      	bhi.n	1381a <_free_r+0x1b6>
   137da:	0b0b      	lsrs	r3, r1, #12
   137dc:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   137e0:	f103 026e 	add.w	r2, r3, #110	; 0x6e
   137e4:	00c3      	lsls	r3, r0, #3
   137e6:	e7b2      	b.n	1374e <_free_r+0xea>
   137e8:	4419      	add	r1, r3
   137ea:	e791      	b.n	13710 <_free_r+0xac>
   137ec:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   137f0:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   137f4:	00c3      	lsls	r3, r0, #3
   137f6:	e7aa      	b.n	1374e <_free_r+0xea>
   137f8:	f041 0301 	orr.w	r3, r1, #1
   137fc:	e9c7 5504 	strd	r5, r5, [r7, #16]
   13800:	e9c5 4402 	strd	r4, r4, [r5, #8]
   13804:	606b      	str	r3, [r5, #4]
   13806:	5069      	str	r1, [r5, r1]
   13808:	e776      	b.n	136f8 <_free_r+0x94>
   1380a:	2101      	movs	r1, #1
   1380c:	1092      	asrs	r2, r2, #2
   1380e:	fa01 f202 	lsl.w	r2, r1, r2
   13812:	6879      	ldr	r1, [r7, #4]
   13814:	430a      	orrs	r2, r1
   13816:	607a      	str	r2, [r7, #4]
   13818:	e7a7      	b.n	1376a <_free_r+0x106>
   1381a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   1381e:	d806      	bhi.n	1382e <_free_r+0x1ca>
   13820:	0bcb      	lsrs	r3, r1, #15
   13822:	f103 0078 	add.w	r0, r3, #120	; 0x78
   13826:	f103 0277 	add.w	r2, r3, #119	; 0x77
   1382a:	00c3      	lsls	r3, r0, #3
   1382c:	e78f      	b.n	1374e <_free_r+0xea>
   1382e:	f240 5254 	movw	r2, #1364	; 0x554
   13832:	4293      	cmp	r3, r2
   13834:	d806      	bhi.n	13844 <_free_r+0x1e0>
   13836:	0c8b      	lsrs	r3, r1, #18
   13838:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   1383c:	f103 027c 	add.w	r2, r3, #124	; 0x7c
   13840:	00c3      	lsls	r3, r0, #3
   13842:	e784      	b.n	1374e <_free_r+0xea>
   13844:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
   13848:	227e      	movs	r2, #126	; 0x7e
   1384a:	e780      	b.n	1374e <_free_r+0xea>
   1384c:	f041 0301 	orr.w	r3, r1, #1
   13850:	606b      	str	r3, [r5, #4]
   13852:	6001      	str	r1, [r0, #0]
   13854:	e750      	b.n	136f8 <_free_r+0x94>
   13856:	bf00      	nop
   13858:	20000550 	.word	0x20000550
   1385c:	2000095c 	.word	0x2000095c
   13860:	20001fa0 	.word	0x20001fa0

00013864 <_fwalk>:
   13864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13868:	2600      	movs	r6, #0
   1386a:	4688      	mov	r8, r1
   1386c:	f500 7738 	add.w	r7, r0, #736	; 0x2e0
   13870:	e9d7 5401 	ldrd	r5, r4, [r7, #4]
   13874:	3d01      	subs	r5, #1
   13876:	d40e      	bmi.n	13896 <_fwalk+0x32>
   13878:	89a3      	ldrh	r3, [r4, #12]
   1387a:	3d01      	subs	r5, #1
   1387c:	2b01      	cmp	r3, #1
   1387e:	d906      	bls.n	1388e <_fwalk+0x2a>
   13880:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   13884:	3301      	adds	r3, #1
   13886:	d002      	beq.n	1388e <_fwalk+0x2a>
   13888:	4620      	mov	r0, r4
   1388a:	47c0      	blx	r8
   1388c:	4306      	orrs	r6, r0
   1388e:	1c6b      	adds	r3, r5, #1
   13890:	f104 0468 	add.w	r4, r4, #104	; 0x68
   13894:	d1f0      	bne.n	13878 <_fwalk+0x14>
   13896:	683f      	ldr	r7, [r7, #0]
   13898:	2f00      	cmp	r7, #0
   1389a:	d1e9      	bne.n	13870 <_fwalk+0xc>
   1389c:	4630      	mov	r0, r6
   1389e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   138a2:	bf00      	nop

000138a4 <_fwalk_reent>:
   138a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   138a8:	f04f 0900 	mov.w	r9, #0
   138ac:	4607      	mov	r7, r0
   138ae:	4688      	mov	r8, r1
   138b0:	f500 7638 	add.w	r6, r0, #736	; 0x2e0
   138b4:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
   138b8:	3d01      	subs	r5, #1
   138ba:	d410      	bmi.n	138de <_fwalk_reent+0x3a>
   138bc:	89a3      	ldrh	r3, [r4, #12]
   138be:	3d01      	subs	r5, #1
   138c0:	2b01      	cmp	r3, #1
   138c2:	d908      	bls.n	138d6 <_fwalk_reent+0x32>
   138c4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   138c8:	3301      	adds	r3, #1
   138ca:	d004      	beq.n	138d6 <_fwalk_reent+0x32>
   138cc:	4621      	mov	r1, r4
   138ce:	4638      	mov	r0, r7
   138d0:	47c0      	blx	r8
   138d2:	ea49 0900 	orr.w	r9, r9, r0
   138d6:	1c6b      	adds	r3, r5, #1
   138d8:	f104 0468 	add.w	r4, r4, #104	; 0x68
   138dc:	d1ee      	bne.n	138bc <_fwalk_reent+0x18>
   138de:	6836      	ldr	r6, [r6, #0]
   138e0:	2e00      	cmp	r6, #0
   138e2:	d1e7      	bne.n	138b4 <_fwalk_reent+0x10>
   138e4:	4648      	mov	r0, r9
   138e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   138ea:	bf00      	nop

000138ec <_setlocale_r>:
   138ec:	b142      	cbz	r2, 13900 <_setlocale_r+0x14>
   138ee:	b510      	push	{r4, lr}
   138f0:	4610      	mov	r0, r2
   138f2:	490b      	ldr	r1, [pc, #44]	; (13920 <_setlocale_r+0x34>)
   138f4:	4614      	mov	r4, r2
   138f6:	f7f9 fdd5 	bl	d4a4 <strcmp>
   138fa:	b918      	cbnz	r0, 13904 <_setlocale_r+0x18>
   138fc:	4809      	ldr	r0, [pc, #36]	; (13924 <_setlocale_r+0x38>)
   138fe:	bd10      	pop	{r4, pc}
   13900:	4808      	ldr	r0, [pc, #32]	; (13924 <_setlocale_r+0x38>)
   13902:	4770      	bx	lr
   13904:	4620      	mov	r0, r4
   13906:	4907      	ldr	r1, [pc, #28]	; (13924 <_setlocale_r+0x38>)
   13908:	f7f9 fdcc 	bl	d4a4 <strcmp>
   1390c:	2800      	cmp	r0, #0
   1390e:	d0f5      	beq.n	138fc <_setlocale_r+0x10>
   13910:	4620      	mov	r0, r4
   13912:	4905      	ldr	r1, [pc, #20]	; (13928 <_setlocale_r+0x3c>)
   13914:	f7f9 fdc6 	bl	d4a4 <strcmp>
   13918:	2800      	cmp	r0, #0
   1391a:	d0ef      	beq.n	138fc <_setlocale_r+0x10>
   1391c:	2000      	movs	r0, #0
   1391e:	bd10      	pop	{r4, pc}
   13920:	0001a2e8 	.word	0x0001a2e8
   13924:	0001a2e4 	.word	0x0001a2e4
   13928:	0001a188 	.word	0x0001a188

0001392c <__locale_mb_cur_max>:
   1392c:	4b01      	ldr	r3, [pc, #4]	; (13934 <__locale_mb_cur_max+0x8>)
   1392e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   13932:	4770      	bx	lr
   13934:	20000964 	.word	0x20000964

00013938 <setlocale>:
   13938:	b141      	cbz	r1, 1394c <setlocale+0x14>
   1393a:	b510      	push	{r4, lr}
   1393c:	4608      	mov	r0, r1
   1393e:	460c      	mov	r4, r1
   13940:	490a      	ldr	r1, [pc, #40]	; (1396c <setlocale+0x34>)
   13942:	f7f9 fdaf 	bl	d4a4 <strcmp>
   13946:	b918      	cbnz	r0, 13950 <setlocale+0x18>
   13948:	4809      	ldr	r0, [pc, #36]	; (13970 <setlocale+0x38>)
   1394a:	bd10      	pop	{r4, pc}
   1394c:	4808      	ldr	r0, [pc, #32]	; (13970 <setlocale+0x38>)
   1394e:	4770      	bx	lr
   13950:	4620      	mov	r0, r4
   13952:	4907      	ldr	r1, [pc, #28]	; (13970 <setlocale+0x38>)
   13954:	f7f9 fda6 	bl	d4a4 <strcmp>
   13958:	2800      	cmp	r0, #0
   1395a:	d0f5      	beq.n	13948 <setlocale+0x10>
   1395c:	4620      	mov	r0, r4
   1395e:	4905      	ldr	r1, [pc, #20]	; (13974 <setlocale+0x3c>)
   13960:	f7f9 fda0 	bl	d4a4 <strcmp>
   13964:	2800      	cmp	r0, #0
   13966:	d0ef      	beq.n	13948 <setlocale+0x10>
   13968:	2000      	movs	r0, #0
   1396a:	bd10      	pop	{r4, pc}
   1396c:	0001a2e8 	.word	0x0001a2e8
   13970:	0001a2e4 	.word	0x0001a2e4
   13974:	0001a188 	.word	0x0001a188

00013978 <__localeconv_l>:
   13978:	30f0      	adds	r0, #240	; 0xf0
   1397a:	4770      	bx	lr

0001397c <_localeconv_r>:
   1397c:	4800      	ldr	r0, [pc, #0]	; (13980 <_localeconv_r+0x4>)
   1397e:	4770      	bx	lr
   13980:	20000a54 	.word	0x20000a54

00013984 <localeconv>:
   13984:	4800      	ldr	r0, [pc, #0]	; (13988 <localeconv+0x4>)
   13986:	4770      	bx	lr
   13988:	20000a54 	.word	0x20000a54

0001398c <__smakebuf_r>:
   1398c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13990:	898b      	ldrh	r3, [r1, #12]
   13992:	460c      	mov	r4, r1
   13994:	0799      	lsls	r1, r3, #30
   13996:	b096      	sub	sp, #88	; 0x58
   13998:	d508      	bpl.n	139ac <__smakebuf_r+0x20>
   1399a:	2201      	movs	r2, #1
   1399c:	f104 0343 	add.w	r3, r4, #67	; 0x43
   139a0:	e9c4 3204 	strd	r3, r2, [r4, #16]
   139a4:	6023      	str	r3, [r4, #0]
   139a6:	b016      	add	sp, #88	; 0x58
   139a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   139ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   139b0:	4606      	mov	r6, r0
   139b2:	2900      	cmp	r1, #0
   139b4:	db27      	blt.n	13a06 <__smakebuf_r+0x7a>
   139b6:	466a      	mov	r2, sp
   139b8:	f001 fe84 	bl	156c4 <_fstat_r>
   139bc:	2800      	cmp	r0, #0
   139be:	db21      	blt.n	13a04 <__smakebuf_r+0x78>
   139c0:	9d01      	ldr	r5, [sp, #4]
   139c2:	f44f 6880 	mov.w	r8, #1024	; 0x400
   139c6:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
   139ca:	f5a5 5500 	sub.w	r5, r5, #8192	; 0x2000
   139ce:	fab5 f585 	clz	r5, r5
   139d2:	f44f 6700 	mov.w	r7, #2048	; 0x800
   139d6:	096d      	lsrs	r5, r5, #5
   139d8:	4641      	mov	r1, r8
   139da:	4630      	mov	r0, r6
   139dc:	f7f8 fc52 	bl	c284 <_malloc_r>
   139e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   139e4:	b1f0      	cbz	r0, 13a24 <__smakebuf_r+0x98>
   139e6:	4a20      	ldr	r2, [pc, #128]	; (13a68 <__smakebuf_r+0xdc>)
   139e8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   139ec:	63f2      	str	r2, [r6, #60]	; 0x3c
   139ee:	f8c4 8014 	str.w	r8, [r4, #20]
   139f2:	81a3      	strh	r3, [r4, #12]
   139f4:	6020      	str	r0, [r4, #0]
   139f6:	6120      	str	r0, [r4, #16]
   139f8:	bb35      	cbnz	r5, 13a48 <__smakebuf_r+0xbc>
   139fa:	433b      	orrs	r3, r7
   139fc:	81a3      	strh	r3, [r4, #12]
   139fe:	b016      	add	sp, #88	; 0x58
   13a00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13a04:	89a3      	ldrh	r3, [r4, #12]
   13a06:	f013 0580 	ands.w	r5, r3, #128	; 0x80
   13a0a:	d019      	beq.n	13a40 <__smakebuf_r+0xb4>
   13a0c:	f04f 0840 	mov.w	r8, #64	; 0x40
   13a10:	4630      	mov	r0, r6
   13a12:	4641      	mov	r1, r8
   13a14:	2500      	movs	r5, #0
   13a16:	f7f8 fc35 	bl	c284 <_malloc_r>
   13a1a:	462f      	mov	r7, r5
   13a1c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   13a20:	2800      	cmp	r0, #0
   13a22:	d1e0      	bne.n	139e6 <__smakebuf_r+0x5a>
   13a24:	059a      	lsls	r2, r3, #22
   13a26:	d4be      	bmi.n	139a6 <__smakebuf_r+0x1a>
   13a28:	2101      	movs	r1, #1
   13a2a:	f023 0303 	bic.w	r3, r3, #3
   13a2e:	f104 0243 	add.w	r2, r4, #67	; 0x43
   13a32:	f043 0302 	orr.w	r3, r3, #2
   13a36:	e9c4 2104 	strd	r2, r1, [r4, #16]
   13a3a:	81a3      	strh	r3, [r4, #12]
   13a3c:	6022      	str	r2, [r4, #0]
   13a3e:	e7b2      	b.n	139a6 <__smakebuf_r+0x1a>
   13a40:	f44f 6880 	mov.w	r8, #1024	; 0x400
   13a44:	462f      	mov	r7, r5
   13a46:	e7c7      	b.n	139d8 <__smakebuf_r+0x4c>
   13a48:	4630      	mov	r0, r6
   13a4a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   13a4e:	f001 fe4d 	bl	156ec <_isatty_r>
   13a52:	b910      	cbnz	r0, 13a5a <__smakebuf_r+0xce>
   13a54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   13a58:	e7cf      	b.n	139fa <__smakebuf_r+0x6e>
   13a5a:	89a3      	ldrh	r3, [r4, #12]
   13a5c:	f023 0303 	bic.w	r3, r3, #3
   13a60:	f043 0301 	orr.w	r3, r3, #1
   13a64:	b21b      	sxth	r3, r3
   13a66:	e7c8      	b.n	139fa <__smakebuf_r+0x6e>
   13a68:	00013149 	.word	0x00013149

00013a6c <__swhatbuf_r>:
   13a6c:	b570      	push	{r4, r5, r6, lr}
   13a6e:	460c      	mov	r4, r1
   13a70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   13a74:	4615      	mov	r5, r2
   13a76:	2900      	cmp	r1, #0
   13a78:	461e      	mov	r6, r3
   13a7a:	b096      	sub	sp, #88	; 0x58
   13a7c:	db14      	blt.n	13aa8 <__swhatbuf_r+0x3c>
   13a7e:	466a      	mov	r2, sp
   13a80:	f001 fe20 	bl	156c4 <_fstat_r>
   13a84:	2800      	cmp	r0, #0
   13a86:	db0f      	blt.n	13aa8 <__swhatbuf_r+0x3c>
   13a88:	9a01      	ldr	r2, [sp, #4]
   13a8a:	f44f 6380 	mov.w	r3, #1024	; 0x400
   13a8e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   13a92:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   13a96:	fab2 f282 	clz	r2, r2
   13a9a:	f44f 6000 	mov.w	r0, #2048	; 0x800
   13a9e:	0952      	lsrs	r2, r2, #5
   13aa0:	6032      	str	r2, [r6, #0]
   13aa2:	602b      	str	r3, [r5, #0]
   13aa4:	b016      	add	sp, #88	; 0x58
   13aa6:	bd70      	pop	{r4, r5, r6, pc}
   13aa8:	2300      	movs	r3, #0
   13aaa:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   13aae:	6033      	str	r3, [r6, #0]
   13ab0:	f011 0080 	ands.w	r0, r1, #128	; 0x80
   13ab4:	d004      	beq.n	13ac0 <__swhatbuf_r+0x54>
   13ab6:	2240      	movs	r2, #64	; 0x40
   13ab8:	4618      	mov	r0, r3
   13aba:	602a      	str	r2, [r5, #0]
   13abc:	b016      	add	sp, #88	; 0x58
   13abe:	bd70      	pop	{r4, r5, r6, pc}
   13ac0:	f44f 6380 	mov.w	r3, #1024	; 0x400
   13ac4:	602b      	str	r3, [r5, #0]
   13ac6:	b016      	add	sp, #88	; 0x58
   13ac8:	bd70      	pop	{r4, r5, r6, pc}
   13aca:	bf00      	nop

00013acc <_mbtowc_r>:
   13acc:	b410      	push	{r4}
   13ace:	4c03      	ldr	r4, [pc, #12]	; (13adc <_mbtowc_r+0x10>)
   13ad0:	f8d4 40e4 	ldr.w	r4, [r4, #228]	; 0xe4
   13ad4:	46a4      	mov	ip, r4
   13ad6:	bc10      	pop	{r4}
   13ad8:	4760      	bx	ip
   13ada:	bf00      	nop
   13adc:	20000964 	.word	0x20000964

00013ae0 <__ascii_mbtowc>:
   13ae0:	b082      	sub	sp, #8
   13ae2:	b149      	cbz	r1, 13af8 <__ascii_mbtowc+0x18>
   13ae4:	b15a      	cbz	r2, 13afe <__ascii_mbtowc+0x1e>
   13ae6:	b16b      	cbz	r3, 13b04 <__ascii_mbtowc+0x24>
   13ae8:	7813      	ldrb	r3, [r2, #0]
   13aea:	600b      	str	r3, [r1, #0]
   13aec:	7812      	ldrb	r2, [r2, #0]
   13aee:	1e10      	subs	r0, r2, #0
   13af0:	bf18      	it	ne
   13af2:	2001      	movne	r0, #1
   13af4:	b002      	add	sp, #8
   13af6:	4770      	bx	lr
   13af8:	a901      	add	r1, sp, #4
   13afa:	2a00      	cmp	r2, #0
   13afc:	d1f3      	bne.n	13ae6 <__ascii_mbtowc+0x6>
   13afe:	4610      	mov	r0, r2
   13b00:	b002      	add	sp, #8
   13b02:	4770      	bx	lr
   13b04:	f06f 0001 	mvn.w	r0, #1
   13b08:	e7f4      	b.n	13af4 <__ascii_mbtowc+0x14>
   13b0a:	bf00      	nop

00013b0c <_Balloc>:
   13b0c:	b538      	push	{r3, r4, r5, lr}
   13b0e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   13b10:	4605      	mov	r5, r0
   13b12:	460c      	mov	r4, r1
   13b14:	b14b      	cbz	r3, 13b2a <_Balloc+0x1e>
   13b16:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   13b1a:	b180      	cbz	r0, 13b3e <_Balloc+0x32>
   13b1c:	6802      	ldr	r2, [r0, #0]
   13b1e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   13b22:	2300      	movs	r3, #0
   13b24:	e9c0 3303 	strd	r3, r3, [r0, #12]
   13b28:	bd38      	pop	{r3, r4, r5, pc}
   13b2a:	2221      	movs	r2, #33	; 0x21
   13b2c:	2104      	movs	r1, #4
   13b2e:	f001 fd07 	bl	15540 <_calloc_r>
   13b32:	4603      	mov	r3, r0
   13b34:	64e8      	str	r0, [r5, #76]	; 0x4c
   13b36:	2800      	cmp	r0, #0
   13b38:	d1ed      	bne.n	13b16 <_Balloc+0xa>
   13b3a:	2000      	movs	r0, #0
   13b3c:	bd38      	pop	{r3, r4, r5, pc}
   13b3e:	2101      	movs	r1, #1
   13b40:	4628      	mov	r0, r5
   13b42:	fa01 f504 	lsl.w	r5, r1, r4
   13b46:	1d6a      	adds	r2, r5, #5
   13b48:	0092      	lsls	r2, r2, #2
   13b4a:	f001 fcf9 	bl	15540 <_calloc_r>
   13b4e:	2800      	cmp	r0, #0
   13b50:	d0f3      	beq.n	13b3a <_Balloc+0x2e>
   13b52:	e9c0 4501 	strd	r4, r5, [r0, #4]
   13b56:	e7e4      	b.n	13b22 <_Balloc+0x16>

00013b58 <_Bfree>:
   13b58:	b131      	cbz	r1, 13b68 <_Bfree+0x10>
   13b5a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   13b5c:	684a      	ldr	r2, [r1, #4]
   13b5e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   13b62:	6008      	str	r0, [r1, #0]
   13b64:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   13b68:	4770      	bx	lr
   13b6a:	bf00      	nop

00013b6c <__multadd>:
   13b6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13b70:	f04f 0e00 	mov.w	lr, #0
   13b74:	460e      	mov	r6, r1
   13b76:	461c      	mov	r4, r3
   13b78:	690d      	ldr	r5, [r1, #16]
   13b7a:	4607      	mov	r7, r0
   13b7c:	f101 0014 	add.w	r0, r1, #20
   13b80:	6801      	ldr	r1, [r0, #0]
   13b82:	f10e 0e01 	add.w	lr, lr, #1
   13b86:	b28b      	uxth	r3, r1
   13b88:	fb02 4303 	mla	r3, r2, r3, r4
   13b8c:	0c09      	lsrs	r1, r1, #16
   13b8e:	ea4f 4c13 	mov.w	ip, r3, lsr #16
   13b92:	fb02 cc01 	mla	ip, r2, r1, ip
   13b96:	b29b      	uxth	r3, r3
   13b98:	eb03 430c 	add.w	r3, r3, ip, lsl #16
   13b9c:	4575      	cmp	r5, lr
   13b9e:	f840 3b04 	str.w	r3, [r0], #4
   13ba2:	ea4f 441c 	mov.w	r4, ip, lsr #16
   13ba6:	dceb      	bgt.n	13b80 <__multadd+0x14>
   13ba8:	b13c      	cbz	r4, 13bba <__multadd+0x4e>
   13baa:	68b3      	ldr	r3, [r6, #8]
   13bac:	42ab      	cmp	r3, r5
   13bae:	dd07      	ble.n	13bc0 <__multadd+0x54>
   13bb0:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   13bb4:	3501      	adds	r5, #1
   13bb6:	615c      	str	r4, [r3, #20]
   13bb8:	6135      	str	r5, [r6, #16]
   13bba:	4630      	mov	r0, r6
   13bbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13bc0:	6871      	ldr	r1, [r6, #4]
   13bc2:	4638      	mov	r0, r7
   13bc4:	3101      	adds	r1, #1
   13bc6:	f7ff ffa1 	bl	13b0c <_Balloc>
   13bca:	4680      	mov	r8, r0
   13bcc:	b1a8      	cbz	r0, 13bfa <__multadd+0x8e>
   13bce:	6932      	ldr	r2, [r6, #16]
   13bd0:	f106 010c 	add.w	r1, r6, #12
   13bd4:	3202      	adds	r2, #2
   13bd6:	0092      	lsls	r2, r2, #2
   13bd8:	300c      	adds	r0, #12
   13bda:	f7f8 fe7b 	bl	c8d4 <memcpy>
   13bde:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   13be0:	6872      	ldr	r2, [r6, #4]
   13be2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   13be6:	6031      	str	r1, [r6, #0]
   13be8:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   13bec:	4646      	mov	r6, r8
   13bee:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   13bf2:	3501      	adds	r5, #1
   13bf4:	615c      	str	r4, [r3, #20]
   13bf6:	6135      	str	r5, [r6, #16]
   13bf8:	e7df      	b.n	13bba <__multadd+0x4e>
   13bfa:	4602      	mov	r2, r0
   13bfc:	21b5      	movs	r1, #181	; 0xb5
   13bfe:	4b02      	ldr	r3, [pc, #8]	; (13c08 <__multadd+0x9c>)
   13c00:	4802      	ldr	r0, [pc, #8]	; (13c0c <__multadd+0xa0>)
   13c02:	f7f7 fffb 	bl	bbfc <__assert_func>
   13c06:	bf00      	nop
   13c08:	0001a274 	.word	0x0001a274
   13c0c:	0001a2f0 	.word	0x0001a2f0

00013c10 <__s2b>:
   13c10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   13c14:	461e      	mov	r6, r3
   13c16:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 13cb8 <__s2b+0xa8>
   13c1a:	4617      	mov	r7, r2
   13c1c:	f103 0208 	add.w	r2, r3, #8
   13c20:	fb8c 3c02 	smull	r3, ip, ip, r2
   13c24:	2e09      	cmp	r6, #9
   13c26:	ea4f 73e2 	mov.w	r3, r2, asr #31
   13c2a:	4605      	mov	r5, r0
   13c2c:	460c      	mov	r4, r1
   13c2e:	ebc3 036c 	rsb	r3, r3, ip, asr #1
   13c32:	dd39      	ble.n	13ca8 <__s2b+0x98>
   13c34:	f04f 0c01 	mov.w	ip, #1
   13c38:	2100      	movs	r1, #0
   13c3a:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
   13c3e:	4563      	cmp	r3, ip
   13c40:	f101 0101 	add.w	r1, r1, #1
   13c44:	dcf9      	bgt.n	13c3a <__s2b+0x2a>
   13c46:	4628      	mov	r0, r5
   13c48:	f7ff ff60 	bl	13b0c <_Balloc>
   13c4c:	4601      	mov	r1, r0
   13c4e:	b368      	cbz	r0, 13cac <__s2b+0x9c>
   13c50:	9b08      	ldr	r3, [sp, #32]
   13c52:	2f09      	cmp	r7, #9
   13c54:	6143      	str	r3, [r0, #20]
   13c56:	f04f 0301 	mov.w	r3, #1
   13c5a:	6103      	str	r3, [r0, #16]
   13c5c:	dc12      	bgt.n	13c84 <__s2b+0x74>
   13c5e:	2709      	movs	r7, #9
   13c60:	340a      	adds	r4, #10
   13c62:	42be      	cmp	r6, r7
   13c64:	dd0b      	ble.n	13c7e <__s2b+0x6e>
   13c66:	1bf6      	subs	r6, r6, r7
   13c68:	4426      	add	r6, r4
   13c6a:	f814 3b01 	ldrb.w	r3, [r4], #1
   13c6e:	220a      	movs	r2, #10
   13c70:	4628      	mov	r0, r5
   13c72:	3b30      	subs	r3, #48	; 0x30
   13c74:	f7ff ff7a 	bl	13b6c <__multadd>
   13c78:	42a6      	cmp	r6, r4
   13c7a:	4601      	mov	r1, r0
   13c7c:	d1f5      	bne.n	13c6a <__s2b+0x5a>
   13c7e:	4608      	mov	r0, r1
   13c80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   13c84:	f104 0909 	add.w	r9, r4, #9
   13c88:	46c8      	mov	r8, r9
   13c8a:	443c      	add	r4, r7
   13c8c:	f818 3b01 	ldrb.w	r3, [r8], #1
   13c90:	220a      	movs	r2, #10
   13c92:	4628      	mov	r0, r5
   13c94:	3b30      	subs	r3, #48	; 0x30
   13c96:	f7ff ff69 	bl	13b6c <__multadd>
   13c9a:	45a0      	cmp	r8, r4
   13c9c:	4601      	mov	r1, r0
   13c9e:	d1f5      	bne.n	13c8c <__s2b+0x7c>
   13ca0:	f1a7 0408 	sub.w	r4, r7, #8
   13ca4:	444c      	add	r4, r9
   13ca6:	e7dc      	b.n	13c62 <__s2b+0x52>
   13ca8:	2100      	movs	r1, #0
   13caa:	e7cc      	b.n	13c46 <__s2b+0x36>
   13cac:	4602      	mov	r2, r0
   13cae:	21ce      	movs	r1, #206	; 0xce
   13cb0:	4b02      	ldr	r3, [pc, #8]	; (13cbc <__s2b+0xac>)
   13cb2:	4803      	ldr	r0, [pc, #12]	; (13cc0 <__s2b+0xb0>)
   13cb4:	f7f7 ffa2 	bl	bbfc <__assert_func>
   13cb8:	38e38e39 	.word	0x38e38e39
   13cbc:	0001a274 	.word	0x0001a274
   13cc0:	0001a2f0 	.word	0x0001a2f0

00013cc4 <__hi0bits>:
   13cc4:	0c02      	lsrs	r2, r0, #16
   13cc6:	0412      	lsls	r2, r2, #16
   13cc8:	4603      	mov	r3, r0
   13cca:	b9ca      	cbnz	r2, 13d00 <__hi0bits+0x3c>
   13ccc:	2010      	movs	r0, #16
   13cce:	4083      	lsls	r3, r0
   13cd0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   13cd4:	bf04      	itt	eq
   13cd6:	021b      	lsleq	r3, r3, #8
   13cd8:	3008      	addeq	r0, #8
   13cda:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   13cde:	bf04      	itt	eq
   13ce0:	011b      	lsleq	r3, r3, #4
   13ce2:	3004      	addeq	r0, #4
   13ce4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   13ce8:	bf04      	itt	eq
   13cea:	009b      	lsleq	r3, r3, #2
   13cec:	3002      	addeq	r0, #2
   13cee:	2b00      	cmp	r3, #0
   13cf0:	db05      	blt.n	13cfe <__hi0bits+0x3a>
   13cf2:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
   13cf6:	f100 0001 	add.w	r0, r0, #1
   13cfa:	bf08      	it	eq
   13cfc:	2020      	moveq	r0, #32
   13cfe:	4770      	bx	lr
   13d00:	2000      	movs	r0, #0
   13d02:	e7e5      	b.n	13cd0 <__hi0bits+0xc>

00013d04 <__lo0bits>:
   13d04:	6803      	ldr	r3, [r0, #0]
   13d06:	4602      	mov	r2, r0
   13d08:	f013 0007 	ands.w	r0, r3, #7
   13d0c:	d009      	beq.n	13d22 <__lo0bits+0x1e>
   13d0e:	07d9      	lsls	r1, r3, #31
   13d10:	d41f      	bmi.n	13d52 <__lo0bits+0x4e>
   13d12:	0798      	lsls	r0, r3, #30
   13d14:	bf4b      	itete	mi
   13d16:	085b      	lsrmi	r3, r3, #1
   13d18:	089b      	lsrpl	r3, r3, #2
   13d1a:	2001      	movmi	r0, #1
   13d1c:	2002      	movpl	r0, #2
   13d1e:	6013      	str	r3, [r2, #0]
   13d20:	4770      	bx	lr
   13d22:	b299      	uxth	r1, r3
   13d24:	b909      	cbnz	r1, 13d2a <__lo0bits+0x26>
   13d26:	2010      	movs	r0, #16
   13d28:	40c3      	lsrs	r3, r0
   13d2a:	b2d9      	uxtb	r1, r3
   13d2c:	b909      	cbnz	r1, 13d32 <__lo0bits+0x2e>
   13d2e:	3008      	adds	r0, #8
   13d30:	0a1b      	lsrs	r3, r3, #8
   13d32:	0719      	lsls	r1, r3, #28
   13d34:	bf04      	itt	eq
   13d36:	091b      	lsreq	r3, r3, #4
   13d38:	3004      	addeq	r0, #4
   13d3a:	0799      	lsls	r1, r3, #30
   13d3c:	bf04      	itt	eq
   13d3e:	089b      	lsreq	r3, r3, #2
   13d40:	3002      	addeq	r0, #2
   13d42:	07d9      	lsls	r1, r3, #31
   13d44:	d403      	bmi.n	13d4e <__lo0bits+0x4a>
   13d46:	085b      	lsrs	r3, r3, #1
   13d48:	f100 0001 	add.w	r0, r0, #1
   13d4c:	d003      	beq.n	13d56 <__lo0bits+0x52>
   13d4e:	6013      	str	r3, [r2, #0]
   13d50:	4770      	bx	lr
   13d52:	2000      	movs	r0, #0
   13d54:	4770      	bx	lr
   13d56:	2020      	movs	r0, #32
   13d58:	4770      	bx	lr
   13d5a:	bf00      	nop

00013d5c <__i2b>:
   13d5c:	b538      	push	{r3, r4, r5, lr}
   13d5e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   13d60:	4604      	mov	r4, r0
   13d62:	460d      	mov	r5, r1
   13d64:	b14b      	cbz	r3, 13d7a <__i2b+0x1e>
   13d66:	6858      	ldr	r0, [r3, #4]
   13d68:	b1b0      	cbz	r0, 13d98 <__i2b+0x3c>
   13d6a:	6802      	ldr	r2, [r0, #0]
   13d6c:	605a      	str	r2, [r3, #4]
   13d6e:	2200      	movs	r2, #0
   13d70:	2301      	movs	r3, #1
   13d72:	6145      	str	r5, [r0, #20]
   13d74:	e9c0 2303 	strd	r2, r3, [r0, #12]
   13d78:	bd38      	pop	{r3, r4, r5, pc}
   13d7a:	2221      	movs	r2, #33	; 0x21
   13d7c:	2104      	movs	r1, #4
   13d7e:	f001 fbdf 	bl	15540 <_calloc_r>
   13d82:	4603      	mov	r3, r0
   13d84:	64e0      	str	r0, [r4, #76]	; 0x4c
   13d86:	2800      	cmp	r0, #0
   13d88:	d1ed      	bne.n	13d66 <__i2b+0xa>
   13d8a:	2200      	movs	r2, #0
   13d8c:	f44f 71a0 	mov.w	r1, #320	; 0x140
   13d90:	4b07      	ldr	r3, [pc, #28]	; (13db0 <__i2b+0x54>)
   13d92:	4808      	ldr	r0, [pc, #32]	; (13db4 <__i2b+0x58>)
   13d94:	f7f7 ff32 	bl	bbfc <__assert_func>
   13d98:	221c      	movs	r2, #28
   13d9a:	2101      	movs	r1, #1
   13d9c:	4620      	mov	r0, r4
   13d9e:	f001 fbcf 	bl	15540 <_calloc_r>
   13da2:	2800      	cmp	r0, #0
   13da4:	d0f1      	beq.n	13d8a <__i2b+0x2e>
   13da6:	2201      	movs	r2, #1
   13da8:	2302      	movs	r3, #2
   13daa:	e9c0 2301 	strd	r2, r3, [r0, #4]
   13dae:	e7de      	b.n	13d6e <__i2b+0x12>
   13db0:	0001a274 	.word	0x0001a274
   13db4:	0001a2f0 	.word	0x0001a2f0

00013db8 <__multiply>:
   13db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dbc:	690e      	ldr	r6, [r1, #16]
   13dbe:	6915      	ldr	r5, [r2, #16]
   13dc0:	4688      	mov	r8, r1
   13dc2:	42ae      	cmp	r6, r5
   13dc4:	4614      	mov	r4, r2
   13dc6:	b085      	sub	sp, #20
   13dc8:	db05      	blt.n	13dd6 <__multiply+0x1e>
   13dca:	462a      	mov	r2, r5
   13dcc:	4623      	mov	r3, r4
   13dce:	4635      	mov	r5, r6
   13dd0:	460c      	mov	r4, r1
   13dd2:	4616      	mov	r6, r2
   13dd4:	4698      	mov	r8, r3
   13dd6:	68a3      	ldr	r3, [r4, #8]
   13dd8:	6861      	ldr	r1, [r4, #4]
   13dda:	19af      	adds	r7, r5, r6
   13ddc:	42bb      	cmp	r3, r7
   13dde:	bfb8      	it	lt
   13de0:	3101      	addlt	r1, #1
   13de2:	f7ff fe93 	bl	13b0c <_Balloc>
   13de6:	9001      	str	r0, [sp, #4]
   13de8:	2800      	cmp	r0, #0
   13dea:	f000 8087 	beq.w	13efc <__multiply+0x144>
   13dee:	9b01      	ldr	r3, [sp, #4]
   13df0:	f103 0914 	add.w	r9, r3, #20
   13df4:	eb09 0a87 	add.w	sl, r9, r7, lsl #2
   13df8:	45d1      	cmp	r9, sl
   13dfa:	d205      	bcs.n	13e08 <__multiply+0x50>
   13dfc:	464b      	mov	r3, r9
   13dfe:	2200      	movs	r2, #0
   13e00:	f843 2b04 	str.w	r2, [r3], #4
   13e04:	459a      	cmp	sl, r3
   13e06:	d8fb      	bhi.n	13e00 <__multiply+0x48>
   13e08:	f108 0814 	add.w	r8, r8, #20
   13e0c:	eb08 0b86 	add.w	fp, r8, r6, lsl #2
   13e10:	f104 0314 	add.w	r3, r4, #20
   13e14:	45d8      	cmp	r8, fp
   13e16:	461a      	mov	r2, r3
   13e18:	eb03 0585 	add.w	r5, r3, r5, lsl #2
   13e1c:	d25f      	bcs.n	13ede <__multiply+0x126>
   13e1e:	1b2b      	subs	r3, r5, r4
   13e20:	3b15      	subs	r3, #21
   13e22:	f023 0303 	bic.w	r3, r3, #3
   13e26:	3304      	adds	r3, #4
   13e28:	3415      	adds	r4, #21
   13e2a:	42a5      	cmp	r5, r4
   13e2c:	bf38      	it	cc
   13e2e:	2304      	movcc	r3, #4
   13e30:	e9cd a702 	strd	sl, r7, [sp, #8]
   13e34:	46ac      	mov	ip, r5
   13e36:	461f      	mov	r7, r3
   13e38:	4692      	mov	sl, r2
   13e3a:	e005      	b.n	13e48 <__multiply+0x90>
   13e3c:	0c00      	lsrs	r0, r0, #16
   13e3e:	d129      	bne.n	13e94 <__multiply+0xdc>
   13e40:	45c3      	cmp	fp, r8
   13e42:	f109 0904 	add.w	r9, r9, #4
   13e46:	d948      	bls.n	13eda <__multiply+0x122>
   13e48:	f858 0b04 	ldr.w	r0, [r8], #4
   13e4c:	b285      	uxth	r5, r0
   13e4e:	2d00      	cmp	r5, #0
   13e50:	d0f4      	beq.n	13e3c <__multiply+0x84>
   13e52:	4656      	mov	r6, sl
   13e54:	464c      	mov	r4, r9
   13e56:	2300      	movs	r3, #0
   13e58:	f856 0b04 	ldr.w	r0, [r6], #4
   13e5c:	6821      	ldr	r1, [r4, #0]
   13e5e:	b282      	uxth	r2, r0
   13e60:	fa1f fe81 	uxth.w	lr, r1
   13e64:	fb05 ee02 	mla	lr, r5, r2, lr
   13e68:	0c00      	lsrs	r0, r0, #16
   13e6a:	0c0a      	lsrs	r2, r1, #16
   13e6c:	fb05 2200 	mla	r2, r5, r0, r2
   13e70:	4473      	add	r3, lr
   13e72:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   13e76:	b29b      	uxth	r3, r3
   13e78:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   13e7c:	45b4      	cmp	ip, r6
   13e7e:	f844 3b04 	str.w	r3, [r4], #4
   13e82:	ea4f 4312 	mov.w	r3, r2, lsr #16
   13e86:	d8e7      	bhi.n	13e58 <__multiply+0xa0>
   13e88:	f849 3007 	str.w	r3, [r9, r7]
   13e8c:	f858 0c04 	ldr.w	r0, [r8, #-4]
   13e90:	0c00      	lsrs	r0, r0, #16
   13e92:	d0d5      	beq.n	13e40 <__multiply+0x88>
   13e94:	f8d9 3000 	ldr.w	r3, [r9]
   13e98:	4654      	mov	r4, sl
   13e9a:	4619      	mov	r1, r3
   13e9c:	464d      	mov	r5, r9
   13e9e:	2200      	movs	r2, #0
   13ea0:	8826      	ldrh	r6, [r4, #0]
   13ea2:	0c09      	lsrs	r1, r1, #16
   13ea4:	fb00 1106 	mla	r1, r0, r6, r1
   13ea8:	b29b      	uxth	r3, r3
   13eaa:	440a      	add	r2, r1
   13eac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   13eb0:	f845 3b04 	str.w	r3, [r5], #4
   13eb4:	f854 6b04 	ldr.w	r6, [r4], #4
   13eb8:	6829      	ldr	r1, [r5, #0]
   13eba:	0c36      	lsrs	r6, r6, #16
   13ebc:	b28b      	uxth	r3, r1
   13ebe:	fb00 3306 	mla	r3, r0, r6, r3
   13ec2:	45a4      	cmp	ip, r4
   13ec4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   13ec8:	ea4f 4213 	mov.w	r2, r3, lsr #16
   13ecc:	d8e8      	bhi.n	13ea0 <__multiply+0xe8>
   13ece:	45c3      	cmp	fp, r8
   13ed0:	f849 3007 	str.w	r3, [r9, r7]
   13ed4:	f109 0904 	add.w	r9, r9, #4
   13ed8:	d8b6      	bhi.n	13e48 <__multiply+0x90>
   13eda:	e9dd a702 	ldrd	sl, r7, [sp, #8]
   13ede:	2f00      	cmp	r7, #0
   13ee0:	dc02      	bgt.n	13ee8 <__multiply+0x130>
   13ee2:	e005      	b.n	13ef0 <__multiply+0x138>
   13ee4:	3f01      	subs	r7, #1
   13ee6:	d003      	beq.n	13ef0 <__multiply+0x138>
   13ee8:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   13eec:	2b00      	cmp	r3, #0
   13eee:	d0f9      	beq.n	13ee4 <__multiply+0x12c>
   13ef0:	9b01      	ldr	r3, [sp, #4]
   13ef2:	4618      	mov	r0, r3
   13ef4:	611f      	str	r7, [r3, #16]
   13ef6:	b005      	add	sp, #20
   13ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13efc:	4602      	mov	r2, r0
   13efe:	f240 115d 	movw	r1, #349	; 0x15d
   13f02:	4b02      	ldr	r3, [pc, #8]	; (13f0c <__multiply+0x154>)
   13f04:	4802      	ldr	r0, [pc, #8]	; (13f10 <__multiply+0x158>)
   13f06:	f7f7 fe79 	bl	bbfc <__assert_func>
   13f0a:	bf00      	nop
   13f0c:	0001a274 	.word	0x0001a274
   13f10:	0001a2f0 	.word	0x0001a2f0

00013f14 <__pow5mult>:
   13f14:	f012 0303 	ands.w	r3, r2, #3
   13f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13f1c:	4614      	mov	r4, r2
   13f1e:	4607      	mov	r7, r0
   13f20:	d12e      	bne.n	13f80 <__pow5mult+0x6c>
   13f22:	460e      	mov	r6, r1
   13f24:	10a4      	asrs	r4, r4, #2
   13f26:	d01c      	beq.n	13f62 <__pow5mult+0x4e>
   13f28:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   13f2a:	b395      	cbz	r5, 13f92 <__pow5mult+0x7e>
   13f2c:	07e3      	lsls	r3, r4, #31
   13f2e:	f04f 0800 	mov.w	r8, #0
   13f32:	d406      	bmi.n	13f42 <__pow5mult+0x2e>
   13f34:	1064      	asrs	r4, r4, #1
   13f36:	d014      	beq.n	13f62 <__pow5mult+0x4e>
   13f38:	6828      	ldr	r0, [r5, #0]
   13f3a:	b1a8      	cbz	r0, 13f68 <__pow5mult+0x54>
   13f3c:	4605      	mov	r5, r0
   13f3e:	07e3      	lsls	r3, r4, #31
   13f40:	d5f8      	bpl.n	13f34 <__pow5mult+0x20>
   13f42:	462a      	mov	r2, r5
   13f44:	4631      	mov	r1, r6
   13f46:	4638      	mov	r0, r7
   13f48:	f7ff ff36 	bl	13db8 <__multiply>
   13f4c:	b1b6      	cbz	r6, 13f7c <__pow5mult+0x68>
   13f4e:	6871      	ldr	r1, [r6, #4]
   13f50:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   13f52:	1064      	asrs	r4, r4, #1
   13f54:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
   13f58:	6032      	str	r2, [r6, #0]
   13f5a:	f843 6021 	str.w	r6, [r3, r1, lsl #2]
   13f5e:	4606      	mov	r6, r0
   13f60:	d1ea      	bne.n	13f38 <__pow5mult+0x24>
   13f62:	4630      	mov	r0, r6
   13f64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13f68:	462a      	mov	r2, r5
   13f6a:	4629      	mov	r1, r5
   13f6c:	4638      	mov	r0, r7
   13f6e:	f7ff ff23 	bl	13db8 <__multiply>
   13f72:	6028      	str	r0, [r5, #0]
   13f74:	4605      	mov	r5, r0
   13f76:	f8c0 8000 	str.w	r8, [r0]
   13f7a:	e7e0      	b.n	13f3e <__pow5mult+0x2a>
   13f7c:	4606      	mov	r6, r0
   13f7e:	e7d9      	b.n	13f34 <__pow5mult+0x20>
   13f80:	4a0f      	ldr	r2, [pc, #60]	; (13fc0 <__pow5mult+0xac>)
   13f82:	3b01      	subs	r3, #1
   13f84:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   13f88:	2300      	movs	r3, #0
   13f8a:	f7ff fdef 	bl	13b6c <__multadd>
   13f8e:	4606      	mov	r6, r0
   13f90:	e7c8      	b.n	13f24 <__pow5mult+0x10>
   13f92:	2101      	movs	r1, #1
   13f94:	4638      	mov	r0, r7
   13f96:	f7ff fdb9 	bl	13b0c <_Balloc>
   13f9a:	4605      	mov	r5, r0
   13f9c:	b140      	cbz	r0, 13fb0 <__pow5mult+0x9c>
   13f9e:	f240 2371 	movw	r3, #625	; 0x271
   13fa2:	2201      	movs	r2, #1
   13fa4:	e9c0 2304 	strd	r2, r3, [r0, #16]
   13fa8:	2300      	movs	r3, #0
   13faa:	64b8      	str	r0, [r7, #72]	; 0x48
   13fac:	6003      	str	r3, [r0, #0]
   13fae:	e7bd      	b.n	13f2c <__pow5mult+0x18>
   13fb0:	4602      	mov	r2, r0
   13fb2:	f44f 71a0 	mov.w	r1, #320	; 0x140
   13fb6:	4b03      	ldr	r3, [pc, #12]	; (13fc4 <__pow5mult+0xb0>)
   13fb8:	4803      	ldr	r0, [pc, #12]	; (13fc8 <__pow5mult+0xb4>)
   13fba:	f7f7 fe1f 	bl	bbfc <__assert_func>
   13fbe:	bf00      	nop
   13fc0:	0001a468 	.word	0x0001a468
   13fc4:	0001a274 	.word	0x0001a274
   13fc8:	0001a2f0 	.word	0x0001a2f0

00013fcc <__lshift>:
   13fcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13fd0:	460c      	mov	r4, r1
   13fd2:	6926      	ldr	r6, [r4, #16]
   13fd4:	68a3      	ldr	r3, [r4, #8]
   13fd6:	eb06 1662 	add.w	r6, r6, r2, asr #5
   13fda:	1c75      	adds	r5, r6, #1
   13fdc:	429d      	cmp	r5, r3
   13fde:	4690      	mov	r8, r2
   13fe0:	4607      	mov	r7, r0
   13fe2:	6849      	ldr	r1, [r1, #4]
   13fe4:	ea4f 1962 	mov.w	r9, r2, asr #5
   13fe8:	dd04      	ble.n	13ff4 <__lshift+0x28>
   13fea:	005b      	lsls	r3, r3, #1
   13fec:	429d      	cmp	r5, r3
   13fee:	f101 0101 	add.w	r1, r1, #1
   13ff2:	dcfa      	bgt.n	13fea <__lshift+0x1e>
   13ff4:	4638      	mov	r0, r7
   13ff6:	f7ff fd89 	bl	13b0c <_Balloc>
   13ffa:	2800      	cmp	r0, #0
   13ffc:	d051      	beq.n	140a2 <__lshift+0xd6>
   13ffe:	f1b9 0f00 	cmp.w	r9, #0
   14002:	f100 0114 	add.w	r1, r0, #20
   14006:	dd0f      	ble.n	14028 <__lshift+0x5c>
   14008:	460b      	mov	r3, r1
   1400a:	f04f 0c00 	mov.w	ip, #0
   1400e:	f109 0205 	add.w	r2, r9, #5
   14012:	ea4f 0e82 	mov.w	lr, r2, lsl #2
   14016:	eb00 0282 	add.w	r2, r0, r2, lsl #2
   1401a:	f843 cb04 	str.w	ip, [r3], #4
   1401e:	4293      	cmp	r3, r2
   14020:	d1fb      	bne.n	1401a <__lshift+0x4e>
   14022:	f1ae 0314 	sub.w	r3, lr, #20
   14026:	4419      	add	r1, r3
   14028:	6922      	ldr	r2, [r4, #16]
   1402a:	f104 0314 	add.w	r3, r4, #20
   1402e:	f018 081f 	ands.w	r8, r8, #31
   14032:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   14036:	d02c      	beq.n	14092 <__lshift+0xc6>
   14038:	468e      	mov	lr, r1
   1403a:	f04f 0a00 	mov.w	sl, #0
   1403e:	f1c8 0920 	rsb	r9, r8, #32
   14042:	681a      	ldr	r2, [r3, #0]
   14044:	fa02 f208 	lsl.w	r2, r2, r8
   14048:	ea42 020a 	orr.w	r2, r2, sl
   1404c:	f84e 2b04 	str.w	r2, [lr], #4
   14050:	f853 2b04 	ldr.w	r2, [r3], #4
   14054:	459c      	cmp	ip, r3
   14056:	fa22 fa09 	lsr.w	sl, r2, r9
   1405a:	d8f2      	bhi.n	14042 <__lshift+0x76>
   1405c:	ebac 0304 	sub.w	r3, ip, r4
   14060:	3b15      	subs	r3, #21
   14062:	f023 0303 	bic.w	r3, r3, #3
   14066:	3304      	adds	r3, #4
   14068:	f104 0215 	add.w	r2, r4, #21
   1406c:	4594      	cmp	ip, r2
   1406e:	bf38      	it	cc
   14070:	2304      	movcc	r3, #4
   14072:	f1ba 0f00 	cmp.w	sl, #0
   14076:	bf18      	it	ne
   14078:	462e      	movne	r6, r5
   1407a:	f841 a003 	str.w	sl, [r1, r3]
   1407e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   14080:	6862      	ldr	r2, [r4, #4]
   14082:	6106      	str	r6, [r0, #16]
   14084:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   14088:	6021      	str	r1, [r4, #0]
   1408a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
   1408e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   14092:	3904      	subs	r1, #4
   14094:	f853 2b04 	ldr.w	r2, [r3], #4
   14098:	459c      	cmp	ip, r3
   1409a:	f841 2f04 	str.w	r2, [r1, #4]!
   1409e:	d8f9      	bhi.n	14094 <__lshift+0xc8>
   140a0:	e7ed      	b.n	1407e <__lshift+0xb2>
   140a2:	4602      	mov	r2, r0
   140a4:	f240 11d9 	movw	r1, #473	; 0x1d9
   140a8:	4b01      	ldr	r3, [pc, #4]	; (140b0 <__lshift+0xe4>)
   140aa:	4802      	ldr	r0, [pc, #8]	; (140b4 <__lshift+0xe8>)
   140ac:	f7f7 fda6 	bl	bbfc <__assert_func>
   140b0:	0001a274 	.word	0x0001a274
   140b4:	0001a2f0 	.word	0x0001a2f0

000140b8 <__mcmp>:
   140b8:	4684      	mov	ip, r0
   140ba:	690b      	ldr	r3, [r1, #16]
   140bc:	6900      	ldr	r0, [r0, #16]
   140be:	1ac0      	subs	r0, r0, r3
   140c0:	d115      	bne.n	140ee <__mcmp+0x36>
   140c2:	f10c 0c14 	add.w	ip, ip, #20
   140c6:	3114      	adds	r1, #20
   140c8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
   140cc:	b410      	push	{r4}
   140ce:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   140d2:	e001      	b.n	140d8 <__mcmp+0x20>
   140d4:	4594      	cmp	ip, r2
   140d6:	d208      	bcs.n	140ea <__mcmp+0x32>
   140d8:	f852 4d04 	ldr.w	r4, [r2, #-4]!
   140dc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   140e0:	428c      	cmp	r4, r1
   140e2:	d0f7      	beq.n	140d4 <__mcmp+0x1c>
   140e4:	d204      	bcs.n	140f0 <__mcmp+0x38>
   140e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   140ea:	bc10      	pop	{r4}
   140ec:	4770      	bx	lr
   140ee:	4770      	bx	lr
   140f0:	2001      	movs	r0, #1
   140f2:	bc10      	pop	{r4}
   140f4:	4770      	bx	lr
   140f6:	bf00      	nop

000140f8 <__mdiff>:
   140f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140fc:	690c      	ldr	r4, [r1, #16]
   140fe:	6913      	ldr	r3, [r2, #16]
   14100:	4689      	mov	r9, r1
   14102:	1ae4      	subs	r4, r4, r3
   14104:	2c00      	cmp	r4, #0
   14106:	4617      	mov	r7, r2
   14108:	d17d      	bne.n	14206 <__mdiff+0x10e>
   1410a:	f101 0614 	add.w	r6, r1, #20
   1410e:	3214      	adds	r2, #20
   14110:	eb02 0283 	add.w	r2, r2, r3, lsl #2
   14114:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   14118:	e001      	b.n	1411e <__mdiff+0x26>
   1411a:	429e      	cmp	r6, r3
   1411c:	d276      	bcs.n	1420c <__mdiff+0x114>
   1411e:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   14122:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   14126:	428d      	cmp	r5, r1
   14128:	d0f7      	beq.n	1411a <__mdiff+0x22>
   1412a:	d367      	bcc.n	141fc <__mdiff+0x104>
   1412c:	f8d9 1004 	ldr.w	r1, [r9, #4]
   14130:	f7ff fcec 	bl	13b0c <_Balloc>
   14134:	2800      	cmp	r0, #0
   14136:	d073      	beq.n	14220 <__mdiff+0x128>
   14138:	f8d9 5010 	ldr.w	r5, [r9, #16]
   1413c:	60c4      	str	r4, [r0, #12]
   1413e:	f100 0414 	add.w	r4, r0, #20
   14142:	4626      	mov	r6, r4
   14144:	f04f 0a00 	mov.w	sl, #0
   14148:	693b      	ldr	r3, [r7, #16]
   1414a:	f109 0814 	add.w	r8, r9, #20
   1414e:	f107 0e14 	add.w	lr, r7, #20
   14152:	f109 0c10 	add.w	ip, r9, #16
   14156:	eb08 0285 	add.w	r2, r8, r5, lsl #2
   1415a:	eb0e 0983 	add.w	r9, lr, r3, lsl #2
   1415e:	f85c bf04 	ldr.w	fp, [ip, #4]!
   14162:	f85e 1b04 	ldr.w	r1, [lr], #4
   14166:	fa1f f38b 	uxth.w	r3, fp
   1416a:	4453      	add	r3, sl
   1416c:	fa1f fa81 	uxth.w	sl, r1
   14170:	0c09      	lsrs	r1, r1, #16
   14172:	eba3 030a 	sub.w	r3, r3, sl
   14176:	ebc1 411b 	rsb	r1, r1, fp, lsr #16
   1417a:	eb01 4123 	add.w	r1, r1, r3, asr #16
   1417e:	b29b      	uxth	r3, r3
   14180:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   14184:	45f1      	cmp	r9, lr
   14186:	f846 3b04 	str.w	r3, [r6], #4
   1418a:	ea4f 4a21 	mov.w	sl, r1, asr #16
   1418e:	d8e6      	bhi.n	1415e <__mdiff+0x66>
   14190:	eba9 0107 	sub.w	r1, r9, r7
   14194:	3915      	subs	r1, #21
   14196:	3715      	adds	r7, #21
   14198:	45b9      	cmp	r9, r7
   1419a:	f021 0603 	bic.w	r6, r1, #3
   1419e:	f106 0604 	add.w	r6, r6, #4
   141a2:	bf38      	it	cc
   141a4:	2604      	movcc	r6, #4
   141a6:	f021 0103 	bic.w	r1, r1, #3
   141aa:	bf38      	it	cc
   141ac:	2100      	movcc	r1, #0
   141ae:	44b0      	add	r8, r6
   141b0:	4542      	cmp	r2, r8
   141b2:	4426      	add	r6, r4
   141b4:	440c      	add	r4, r1
   141b6:	d918      	bls.n	141ea <__mdiff+0xf2>
   141b8:	4637      	mov	r7, r6
   141ba:	4644      	mov	r4, r8
   141bc:	f854 1b04 	ldr.w	r1, [r4], #4
   141c0:	b28b      	uxth	r3, r1
   141c2:	4453      	add	r3, sl
   141c4:	ea4f 4a23 	mov.w	sl, r3, asr #16
   141c8:	eb0a 4111 	add.w	r1, sl, r1, lsr #16
   141cc:	b29b      	uxth	r3, r3
   141ce:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   141d2:	42a2      	cmp	r2, r4
   141d4:	f847 3b04 	str.w	r3, [r7], #4
   141d8:	ea4f 4a21 	mov.w	sl, r1, asr #16
   141dc:	d8ee      	bhi.n	141bc <__mdiff+0xc4>
   141de:	1e54      	subs	r4, r2, #1
   141e0:	eba4 0408 	sub.w	r4, r4, r8
   141e4:	f024 0403 	bic.w	r4, r4, #3
   141e8:	4434      	add	r4, r6
   141ea:	b923      	cbnz	r3, 141f6 <__mdiff+0xfe>
   141ec:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   141f0:	3d01      	subs	r5, #1
   141f2:	2b00      	cmp	r3, #0
   141f4:	d0fa      	beq.n	141ec <__mdiff+0xf4>
   141f6:	6105      	str	r5, [r0, #16]
   141f8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141fc:	464b      	mov	r3, r9
   141fe:	2401      	movs	r4, #1
   14200:	46b9      	mov	r9, r7
   14202:	461f      	mov	r7, r3
   14204:	e792      	b.n	1412c <__mdiff+0x34>
   14206:	dbf9      	blt.n	141fc <__mdiff+0x104>
   14208:	2400      	movs	r4, #0
   1420a:	e78f      	b.n	1412c <__mdiff+0x34>
   1420c:	2100      	movs	r1, #0
   1420e:	f7ff fc7d 	bl	13b0c <_Balloc>
   14212:	b160      	cbz	r0, 1422e <__mdiff+0x136>
   14214:	2201      	movs	r2, #1
   14216:	2300      	movs	r3, #0
   14218:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1421c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14220:	4602      	mov	r2, r0
   14222:	f44f 7110 	mov.w	r1, #576	; 0x240
   14226:	4b05      	ldr	r3, [pc, #20]	; (1423c <__mdiff+0x144>)
   14228:	4805      	ldr	r0, [pc, #20]	; (14240 <__mdiff+0x148>)
   1422a:	f7f7 fce7 	bl	bbfc <__assert_func>
   1422e:	4602      	mov	r2, r0
   14230:	f240 2132 	movw	r1, #562	; 0x232
   14234:	4b01      	ldr	r3, [pc, #4]	; (1423c <__mdiff+0x144>)
   14236:	4802      	ldr	r0, [pc, #8]	; (14240 <__mdiff+0x148>)
   14238:	f7f7 fce0 	bl	bbfc <__assert_func>
   1423c:	0001a274 	.word	0x0001a274
   14240:	0001a2f0 	.word	0x0001a2f0

00014244 <__ulp>:
   14244:	4b0f      	ldr	r3, [pc, #60]	; (14284 <__ulp+0x40>)
   14246:	400b      	ands	r3, r1
   14248:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   1424c:	2b00      	cmp	r3, #0
   1424e:	dd02      	ble.n	14256 <__ulp+0x12>
   14250:	2000      	movs	r0, #0
   14252:	4619      	mov	r1, r3
   14254:	4770      	bx	lr
   14256:	425b      	negs	r3, r3
   14258:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
   1425c:	ea4f 5223 	mov.w	r2, r3, asr #20
   14260:	da05      	bge.n	1426e <__ulp+0x2a>
   14262:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   14266:	2000      	movs	r0, #0
   14268:	fa43 f102 	asr.w	r1, r3, r2
   1426c:	4770      	bx	lr
   1426e:	3a14      	subs	r2, #20
   14270:	2a1e      	cmp	r2, #30
   14272:	bfd6      	itet	le
   14274:	f04f 4300 	movle.w	r3, #2147483648	; 0x80000000
   14278:	2201      	movgt	r2, #1
   1427a:	fa23 f202 	lsrle.w	r2, r3, r2
   1427e:	2100      	movs	r1, #0
   14280:	4610      	mov	r0, r2
   14282:	4770      	bx	lr
   14284:	7ff00000 	.word	0x7ff00000

00014288 <__b2d>:
   14288:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1428c:	6907      	ldr	r7, [r0, #16]
   1428e:	f100 0614 	add.w	r6, r0, #20
   14292:	eb06 0787 	add.w	r7, r6, r7, lsl #2
   14296:	460c      	mov	r4, r1
   14298:	f857 1c04 	ldr.w	r1, [r7, #-4]
   1429c:	f1a7 0804 	sub.w	r8, r7, #4
   142a0:	4608      	mov	r0, r1
   142a2:	f7ff fd0f 	bl	13cc4 <__hi0bits>
   142a6:	f1c0 0320 	rsb	r3, r0, #32
   142aa:	280a      	cmp	r0, #10
   142ac:	6023      	str	r3, [r4, #0]
   142ae:	dd36      	ble.n	1431e <__b2d+0x96>
   142b0:	4546      	cmp	r6, r8
   142b2:	d21e      	bcs.n	142f2 <__b2d+0x6a>
   142b4:	f1b0 030b 	subs.w	r3, r0, #11
   142b8:	f857 2c08 	ldr.w	r2, [r7, #-8]
   142bc:	d026      	beq.n	1430c <__b2d+0x84>
   142be:	f1c3 0c20 	rsb	ip, r3, #32
   142c2:	4099      	lsls	r1, r3
   142c4:	fa22 f00c 	lsr.w	r0, r2, ip
   142c8:	4308      	orrs	r0, r1
   142ca:	f1a7 0108 	sub.w	r1, r7, #8
   142ce:	f040 557f 	orr.w	r5, r0, #1069547520	; 0x3fc00000
   142d2:	428e      	cmp	r6, r1
   142d4:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   142d8:	d23a      	bcs.n	14350 <__b2d+0xc8>
   142da:	fa02 f003 	lsl.w	r0, r2, r3
   142de:	f857 3c0c 	ldr.w	r3, [r7, #-12]
   142e2:	fa23 f30c 	lsr.w	r3, r3, ip
   142e6:	4303      	orrs	r3, r0
   142e8:	461c      	mov	r4, r3
   142ea:	4620      	mov	r0, r4
   142ec:	4629      	mov	r1, r5
   142ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   142f2:	f1b0 030b 	subs.w	r3, r0, #11
   142f6:	d008      	beq.n	1430a <__b2d+0x82>
   142f8:	fa01 f003 	lsl.w	r0, r1, r3
   142fc:	2300      	movs	r3, #0
   142fe:	f040 557f 	orr.w	r5, r0, #1069547520	; 0x3fc00000
   14302:	461c      	mov	r4, r3
   14304:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   14308:	e7ef      	b.n	142ea <__b2d+0x62>
   1430a:	461a      	mov	r2, r3
   1430c:	4614      	mov	r4, r2
   1430e:	f041 557f 	orr.w	r5, r1, #1069547520	; 0x3fc00000
   14312:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   14316:	4620      	mov	r0, r4
   14318:	4629      	mov	r1, r5
   1431a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1431e:	f1c0 030b 	rsb	r3, r0, #11
   14322:	fa21 f203 	lsr.w	r2, r1, r3
   14326:	4546      	cmp	r6, r8
   14328:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
   1432c:	bf2c      	ite	cs
   1432e:	2200      	movcs	r2, #0
   14330:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   14334:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   14338:	bf38      	it	cc
   1433a:	40da      	lsrcc	r2, r3
   1433c:	f100 0315 	add.w	r3, r0, #21
   14340:	fa01 f303 	lsl.w	r3, r1, r3
   14344:	ea43 0402 	orr.w	r4, r3, r2
   14348:	4620      	mov	r0, r4
   1434a:	4629      	mov	r1, r5
   1434c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14350:	fa02 f303 	lsl.w	r3, r2, r3
   14354:	461c      	mov	r4, r3
   14356:	e7c8      	b.n	142ea <__b2d+0x62>

00014358 <__d2b>:
   14358:	b570      	push	{r4, r5, r6, lr}
   1435a:	2101      	movs	r1, #1
   1435c:	b082      	sub	sp, #8
   1435e:	4616      	mov	r6, r2
   14360:	461d      	mov	r5, r3
   14362:	f7ff fbd3 	bl	13b0c <_Balloc>
   14366:	4604      	mov	r4, r0
   14368:	2800      	cmp	r0, #0
   1436a:	d04c      	beq.n	14406 <__d2b+0xae>
   1436c:	462b      	mov	r3, r5
   1436e:	f3c5 550a 	ubfx	r5, r5, #20, #11
   14372:	f3c3 0313 	ubfx	r3, r3, #0, #20
   14376:	b10d      	cbz	r5, 1437c <__d2b+0x24>
   14378:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   1437c:	2e00      	cmp	r6, #0
   1437e:	9301      	str	r3, [sp, #4]
   14380:	d022      	beq.n	143c8 <__d2b+0x70>
   14382:	4668      	mov	r0, sp
   14384:	9600      	str	r6, [sp, #0]
   14386:	f7ff fcbd 	bl	13d04 <__lo0bits>
   1438a:	2800      	cmp	r0, #0
   1438c:	d037      	beq.n	143fe <__d2b+0xa6>
   1438e:	9b01      	ldr	r3, [sp, #4]
   14390:	9900      	ldr	r1, [sp, #0]
   14392:	f1c0 0220 	rsb	r2, r0, #32
   14396:	fa03 f202 	lsl.w	r2, r3, r2
   1439a:	430a      	orrs	r2, r1
   1439c:	40c3      	lsrs	r3, r0
   1439e:	9301      	str	r3, [sp, #4]
   143a0:	6162      	str	r2, [r4, #20]
   143a2:	2b00      	cmp	r3, #0
   143a4:	bf14      	ite	ne
   143a6:	2102      	movne	r1, #2
   143a8:	2101      	moveq	r1, #1
   143aa:	61a3      	str	r3, [r4, #24]
   143ac:	6121      	str	r1, [r4, #16]
   143ae:	b1b5      	cbz	r5, 143de <__d2b+0x86>
   143b0:	9b06      	ldr	r3, [sp, #24]
   143b2:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
   143b6:	4405      	add	r5, r0
   143b8:	601d      	str	r5, [r3, #0]
   143ba:	9b07      	ldr	r3, [sp, #28]
   143bc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   143c0:	6018      	str	r0, [r3, #0]
   143c2:	4620      	mov	r0, r4
   143c4:	b002      	add	sp, #8
   143c6:	bd70      	pop	{r4, r5, r6, pc}
   143c8:	a801      	add	r0, sp, #4
   143ca:	f7ff fc9b 	bl	13d04 <__lo0bits>
   143ce:	2301      	movs	r3, #1
   143d0:	9a01      	ldr	r2, [sp, #4]
   143d2:	4619      	mov	r1, r3
   143d4:	6162      	str	r2, [r4, #20]
   143d6:	3020      	adds	r0, #32
   143d8:	6123      	str	r3, [r4, #16]
   143da:	2d00      	cmp	r5, #0
   143dc:	d1e8      	bne.n	143b0 <__d2b+0x58>
   143de:	eb04 0281 	add.w	r2, r4, r1, lsl #2
   143e2:	f2a0 4332 	subw	r3, r0, #1074	; 0x432
   143e6:	6910      	ldr	r0, [r2, #16]
   143e8:	9a06      	ldr	r2, [sp, #24]
   143ea:	6013      	str	r3, [r2, #0]
   143ec:	f7ff fc6a 	bl	13cc4 <__hi0bits>
   143f0:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
   143f4:	4620      	mov	r0, r4
   143f6:	9b07      	ldr	r3, [sp, #28]
   143f8:	6019      	str	r1, [r3, #0]
   143fa:	b002      	add	sp, #8
   143fc:	bd70      	pop	{r4, r5, r6, pc}
   143fe:	e9dd 2300 	ldrd	r2, r3, [sp]
   14402:	6162      	str	r2, [r4, #20]
   14404:	e7cd      	b.n	143a2 <__d2b+0x4a>
   14406:	4602      	mov	r2, r0
   14408:	f240 310a 	movw	r1, #778	; 0x30a
   1440c:	4b01      	ldr	r3, [pc, #4]	; (14414 <__d2b+0xbc>)
   1440e:	4802      	ldr	r0, [pc, #8]	; (14418 <__d2b+0xc0>)
   14410:	f7f7 fbf4 	bl	bbfc <__assert_func>
   14414:	0001a274 	.word	0x0001a274
   14418:	0001a2f0 	.word	0x0001a2f0

0001441c <__ratio>:
   1441c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   14420:	b083      	sub	sp, #12
   14422:	4688      	mov	r8, r1
   14424:	4669      	mov	r1, sp
   14426:	4681      	mov	r9, r0
   14428:	f7ff ff2e 	bl	14288 <__b2d>
   1442c:	4604      	mov	r4, r0
   1442e:	460d      	mov	r5, r1
   14430:	4640      	mov	r0, r8
   14432:	a901      	add	r1, sp, #4
   14434:	f7ff ff28 	bl	14288 <__b2d>
   14438:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1443c:	f8d8 2010 	ldr.w	r2, [r8, #16]
   14440:	460f      	mov	r7, r1
   14442:	1a9a      	subs	r2, r3, r2
   14444:	e9dd 6300 	ldrd	r6, r3, [sp]
   14448:	1af3      	subs	r3, r6, r3
   1444a:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   1444e:	2b00      	cmp	r3, #0
   14450:	dd0c      	ble.n	1446c <__ratio+0x50>
   14452:	eb05 5903 	add.w	r9, r5, r3, lsl #20
   14456:	4606      	mov	r6, r0
   14458:	464d      	mov	r5, r9
   1445a:	4632      	mov	r2, r6
   1445c:	463b      	mov	r3, r7
   1445e:	4620      	mov	r0, r4
   14460:	4629      	mov	r1, r5
   14462:	f001 fd91 	bl	15f88 <__aeabi_ddiv>
   14466:	b003      	add	sp, #12
   14468:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1446c:	ebc3 3303 	rsb	r3, r3, r3, lsl #12
   14470:	eb01 5103 	add.w	r1, r1, r3, lsl #20
   14474:	4606      	mov	r6, r0
   14476:	460f      	mov	r7, r1
   14478:	e7ef      	b.n	1445a <__ratio+0x3e>
   1447a:	bf00      	nop

0001447c <_mprec_log10>:
   1447c:	2817      	cmp	r0, #23
   1447e:	b570      	push	{r4, r5, r6, lr}
   14480:	4606      	mov	r6, r0
   14482:	dd0a      	ble.n	1449a <_mprec_log10+0x1e>
   14484:	2000      	movs	r0, #0
   14486:	2400      	movs	r4, #0
   14488:	4907      	ldr	r1, [pc, #28]	; (144a8 <_mprec_log10+0x2c>)
   1448a:	4d08      	ldr	r5, [pc, #32]	; (144ac <_mprec_log10+0x30>)
   1448c:	4622      	mov	r2, r4
   1448e:	462b      	mov	r3, r5
   14490:	f001 fc50 	bl	15d34 <__aeabi_dmul>
   14494:	3e01      	subs	r6, #1
   14496:	d1f9      	bne.n	1448c <_mprec_log10+0x10>
   14498:	bd70      	pop	{r4, r5, r6, pc}
   1449a:	4b05      	ldr	r3, [pc, #20]	; (144b0 <_mprec_log10+0x34>)
   1449c:	eb03 06c0 	add.w	r6, r3, r0, lsl #3
   144a0:	e9d6 0100 	ldrd	r0, r1, [r6]
   144a4:	bd70      	pop	{r4, r5, r6, pc}
   144a6:	bf00      	nop
   144a8:	3ff00000 	.word	0x3ff00000
   144ac:	40240000 	.word	0x40240000
   144b0:	0001a378 	.word	0x0001a378

000144b4 <__copybits>:
   144b4:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
   144b8:	6911      	ldr	r1, [r2, #16]
   144ba:	f102 0314 	add.w	r3, r2, #20
   144be:	ea4f 1c6c 	mov.w	ip, ip, asr #5
   144c2:	eb03 0181 	add.w	r1, r3, r1, lsl #2
   144c6:	f10c 0c01 	add.w	ip, ip, #1
   144ca:	428b      	cmp	r3, r1
   144cc:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
   144d0:	d216      	bcs.n	14500 <__copybits+0x4c>
   144d2:	b510      	push	{r4, lr}
   144d4:	f1a0 0e04 	sub.w	lr, r0, #4
   144d8:	f853 4b04 	ldr.w	r4, [r3], #4
   144dc:	4299      	cmp	r1, r3
   144de:	f84e 4f04 	str.w	r4, [lr, #4]!
   144e2:	d8f9      	bhi.n	144d8 <__copybits+0x24>
   144e4:	1a8b      	subs	r3, r1, r2
   144e6:	3b15      	subs	r3, #21
   144e8:	f023 0303 	bic.w	r3, r3, #3
   144ec:	3304      	adds	r3, #4
   144ee:	4418      	add	r0, r3
   144f0:	4584      	cmp	ip, r0
   144f2:	d904      	bls.n	144fe <__copybits+0x4a>
   144f4:	2300      	movs	r3, #0
   144f6:	f840 3b04 	str.w	r3, [r0], #4
   144fa:	4584      	cmp	ip, r0
   144fc:	d8fb      	bhi.n	144f6 <__copybits+0x42>
   144fe:	bd10      	pop	{r4, pc}
   14500:	4584      	cmp	ip, r0
   14502:	d905      	bls.n	14510 <__copybits+0x5c>
   14504:	2300      	movs	r3, #0
   14506:	f840 3b04 	str.w	r3, [r0], #4
   1450a:	4584      	cmp	ip, r0
   1450c:	d8fb      	bhi.n	14506 <__copybits+0x52>
   1450e:	4770      	bx	lr
   14510:	4770      	bx	lr
   14512:	bf00      	nop

00014514 <__any_on>:
   14514:	6903      	ldr	r3, [r0, #16]
   14516:	114a      	asrs	r2, r1, #5
   14518:	4293      	cmp	r3, r2
   1451a:	f100 0014 	add.w	r0, r0, #20
   1451e:	da09      	bge.n	14534 <__any_on+0x20>
   14520:	eb00 0383 	add.w	r3, r0, r3, lsl #2
   14524:	e002      	b.n	1452c <__any_on+0x18>
   14526:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   1452a:	b9c2      	cbnz	r2, 1455e <__any_on+0x4a>
   1452c:	4283      	cmp	r3, r0
   1452e:	d8fa      	bhi.n	14526 <__any_on+0x12>
   14530:	2000      	movs	r0, #0
   14532:	4770      	bx	lr
   14534:	dd10      	ble.n	14558 <__any_on+0x44>
   14536:	f011 011f 	ands.w	r1, r1, #31
   1453a:	d00d      	beq.n	14558 <__any_on+0x44>
   1453c:	b410      	push	{r4}
   1453e:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
   14542:	eb00 0382 	add.w	r3, r0, r2, lsl #2
   14546:	fa24 f201 	lsr.w	r2, r4, r1
   1454a:	fa02 f101 	lsl.w	r1, r2, r1
   1454e:	428c      	cmp	r4, r1
   14550:	d00b      	beq.n	1456a <__any_on+0x56>
   14552:	2001      	movs	r0, #1
   14554:	bc10      	pop	{r4}
   14556:	4770      	bx	lr
   14558:	eb00 0382 	add.w	r3, r0, r2, lsl #2
   1455c:	e7e6      	b.n	1452c <__any_on+0x18>
   1455e:	2001      	movs	r0, #1
   14560:	4770      	bx	lr
   14562:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   14566:	2a00      	cmp	r2, #0
   14568:	d1f3      	bne.n	14552 <__any_on+0x3e>
   1456a:	4283      	cmp	r3, r0
   1456c:	d8f9      	bhi.n	14562 <__any_on+0x4e>
   1456e:	2000      	movs	r0, #0
   14570:	bc10      	pop	{r4}
   14572:	4770      	bx	lr

00014574 <cleanup_glue>:
   14574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14578:	680e      	ldr	r6, [r1, #0]
   1457a:	460c      	mov	r4, r1
   1457c:	4605      	mov	r5, r0
   1457e:	b1be      	cbz	r6, 145b0 <cleanup_glue+0x3c>
   14580:	6837      	ldr	r7, [r6, #0]
   14582:	b18f      	cbz	r7, 145a8 <cleanup_glue+0x34>
   14584:	f8d7 8000 	ldr.w	r8, [r7]
   14588:	f1b8 0f00 	cmp.w	r8, #0
   1458c:	d008      	beq.n	145a0 <cleanup_glue+0x2c>
   1458e:	f8d8 1000 	ldr.w	r1, [r8]
   14592:	b109      	cbz	r1, 14598 <cleanup_glue+0x24>
   14594:	f7ff ffee 	bl	14574 <cleanup_glue>
   14598:	4641      	mov	r1, r8
   1459a:	4628      	mov	r0, r5
   1459c:	f7ff f862 	bl	13664 <_free_r>
   145a0:	4639      	mov	r1, r7
   145a2:	4628      	mov	r0, r5
   145a4:	f7ff f85e 	bl	13664 <_free_r>
   145a8:	4631      	mov	r1, r6
   145aa:	4628      	mov	r0, r5
   145ac:	f7ff f85a 	bl	13664 <_free_r>
   145b0:	4621      	mov	r1, r4
   145b2:	4628      	mov	r0, r5
   145b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   145b8:	f7ff b854 	b.w	13664 <_free_r>

000145bc <_reclaim_reent>:
   145bc:	4b22      	ldr	r3, [pc, #136]	; (14648 <_reclaim_reent+0x8c>)
   145be:	681b      	ldr	r3, [r3, #0]
   145c0:	4283      	cmp	r3, r0
   145c2:	d040      	beq.n	14646 <_reclaim_reent+0x8a>
   145c4:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
   145c6:	b570      	push	{r4, r5, r6, lr}
   145c8:	4605      	mov	r5, r0
   145ca:	b181      	cbz	r1, 145ee <_reclaim_reent+0x32>
   145cc:	2600      	movs	r6, #0
   145ce:	598c      	ldr	r4, [r1, r6]
   145d0:	b13c      	cbz	r4, 145e2 <_reclaim_reent+0x26>
   145d2:	4621      	mov	r1, r4
   145d4:	6824      	ldr	r4, [r4, #0]
   145d6:	4628      	mov	r0, r5
   145d8:	f7ff f844 	bl	13664 <_free_r>
   145dc:	2c00      	cmp	r4, #0
   145de:	d1f8      	bne.n	145d2 <_reclaim_reent+0x16>
   145e0:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
   145e2:	3604      	adds	r6, #4
   145e4:	2e80      	cmp	r6, #128	; 0x80
   145e6:	d1f2      	bne.n	145ce <_reclaim_reent+0x12>
   145e8:	4628      	mov	r0, r5
   145ea:	f7ff f83b 	bl	13664 <_free_r>
   145ee:	6c29      	ldr	r1, [r5, #64]	; 0x40
   145f0:	b111      	cbz	r1, 145f8 <_reclaim_reent+0x3c>
   145f2:	4628      	mov	r0, r5
   145f4:	f7ff f836 	bl	13664 <_free_r>
   145f8:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
   145fc:	b154      	cbz	r4, 14614 <_reclaim_reent+0x58>
   145fe:	f505 76a6 	add.w	r6, r5, #332	; 0x14c
   14602:	42b4      	cmp	r4, r6
   14604:	d006      	beq.n	14614 <_reclaim_reent+0x58>
   14606:	4621      	mov	r1, r4
   14608:	6824      	ldr	r4, [r4, #0]
   1460a:	4628      	mov	r0, r5
   1460c:	f7ff f82a 	bl	13664 <_free_r>
   14610:	42a6      	cmp	r6, r4
   14612:	d1f8      	bne.n	14606 <_reclaim_reent+0x4a>
   14614:	6d69      	ldr	r1, [r5, #84]	; 0x54
   14616:	b111      	cbz	r1, 1461e <_reclaim_reent+0x62>
   14618:	4628      	mov	r0, r5
   1461a:	f7ff f823 	bl	13664 <_free_r>
   1461e:	6bab      	ldr	r3, [r5, #56]	; 0x38
   14620:	b183      	cbz	r3, 14644 <_reclaim_reent+0x88>
   14622:	4628      	mov	r0, r5
   14624:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   14626:	4798      	blx	r3
   14628:	f8d5 42e0 	ldr.w	r4, [r5, #736]	; 0x2e0
   1462c:	b154      	cbz	r4, 14644 <_reclaim_reent+0x88>
   1462e:	6821      	ldr	r1, [r4, #0]
   14630:	b111      	cbz	r1, 14638 <_reclaim_reent+0x7c>
   14632:	4628      	mov	r0, r5
   14634:	f7ff ff9e 	bl	14574 <cleanup_glue>
   14638:	4621      	mov	r1, r4
   1463a:	4628      	mov	r0, r5
   1463c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   14640:	f7ff b810 	b.w	13664 <_free_r>
   14644:	bd70      	pop	{r4, r5, r6, pc}
   14646:	4770      	bx	lr
   14648:	20000124 	.word	0x20000124

0001464c <frexp>:
   1464c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1464e:	2700      	movs	r7, #0
   14650:	f8df c05c 	ldr.w	ip, [pc, #92]	; 146b0 <frexp+0x64>
   14654:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   14658:	4563      	cmp	r3, ip
   1465a:	4604      	mov	r4, r0
   1465c:	460d      	mov	r5, r1
   1465e:	6017      	str	r7, [r2, #0]
   14660:	dc23      	bgt.n	146aa <frexp+0x5e>
   14662:	4684      	mov	ip, r0
   14664:	ea53 0c0c 	orrs.w	ip, r3, ip
   14668:	d01f      	beq.n	146aa <frexp+0x5e>
   1466a:	f8df c048 	ldr.w	ip, [pc, #72]	; 146b4 <frexp+0x68>
   1466e:	4616      	mov	r6, r2
   14670:	ea01 0c0c 	and.w	ip, r1, ip
   14674:	460a      	mov	r2, r1
   14676:	f1bc 0f00 	cmp.w	ip, #0
   1467a:	d109      	bne.n	14690 <frexp+0x44>
   1467c:	2200      	movs	r2, #0
   1467e:	4b0e      	ldr	r3, [pc, #56]	; (146b8 <frexp+0x6c>)
   14680:	f001 fb58 	bl	15d34 <__aeabi_dmul>
   14684:	f06f 0735 	mvn.w	r7, #53	; 0x35
   14688:	4604      	mov	r4, r0
   1468a:	460a      	mov	r2, r1
   1468c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   14690:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
   14694:	151b      	asrs	r3, r3, #20
   14696:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
   1469a:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
   1469e:	443b      	add	r3, r7
   146a0:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
   146a4:	6033      	str	r3, [r6, #0]
   146a6:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
   146aa:	4620      	mov	r0, r4
   146ac:	4629      	mov	r1, r5
   146ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   146b0:	7fefffff 	.word	0x7fefffff
   146b4:	7ff00000 	.word	0x7ff00000
   146b8:	43500000 	.word	0x43500000

000146bc <__sread>:
   146bc:	b510      	push	{r4, lr}
   146be:	460c      	mov	r4, r1
   146c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   146c4:	f001 f83a 	bl	1573c <_read_r>
   146c8:	2800      	cmp	r0, #0
   146ca:	db03      	blt.n	146d4 <__sread+0x18>
   146cc:	6d23      	ldr	r3, [r4, #80]	; 0x50
   146ce:	4403      	add	r3, r0
   146d0:	6523      	str	r3, [r4, #80]	; 0x50
   146d2:	bd10      	pop	{r4, pc}
   146d4:	89a3      	ldrh	r3, [r4, #12]
   146d6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   146da:	81a3      	strh	r3, [r4, #12]
   146dc:	bd10      	pop	{r4, pc}
   146de:	bf00      	nop

000146e0 <__seofread>:
   146e0:	2000      	movs	r0, #0
   146e2:	4770      	bx	lr

000146e4 <__swrite>:
   146e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   146e8:	460c      	mov	r4, r1
   146ea:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   146ee:	461f      	mov	r7, r3
   146f0:	05cb      	lsls	r3, r1, #23
   146f2:	4605      	mov	r5, r0
   146f4:	4616      	mov	r6, r2
   146f6:	d40b      	bmi.n	14710 <__swrite+0x2c>
   146f8:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   146fc:	81a1      	strh	r1, [r4, #12]
   146fe:	463b      	mov	r3, r7
   14700:	4632      	mov	r2, r6
   14702:	4628      	mov	r0, r5
   14704:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   14708:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1470c:	f7fd bb34 	b.w	11d78 <_write_r>
   14710:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   14714:	2302      	movs	r3, #2
   14716:	2200      	movs	r2, #0
   14718:	f000 fffa 	bl	15710 <_lseek_r>
   1471c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   14720:	e7ea      	b.n	146f8 <__swrite+0x14>
   14722:	bf00      	nop

00014724 <__sseek>:
   14724:	b510      	push	{r4, lr}
   14726:	460c      	mov	r4, r1
   14728:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1472c:	f000 fff0 	bl	15710 <_lseek_r>
   14730:	89a3      	ldrh	r3, [r4, #12]
   14732:	1c42      	adds	r2, r0, #1
   14734:	bf0e      	itee	eq
   14736:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   1473a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   1473e:	6520      	strne	r0, [r4, #80]	; 0x50
   14740:	81a3      	strh	r3, [r4, #12]
   14742:	bd10      	pop	{r4, pc}

00014744 <__sclose>:
   14744:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   14748:	f000 bf36 	b.w	155b8 <_close_r>

0001474c <strncpy>:
   1474c:	b530      	push	{r4, r5, lr}
   1474e:	ea40 0401 	orr.w	r4, r0, r1
   14752:	07a3      	lsls	r3, r4, #30
   14754:	d122      	bne.n	1479c <strncpy+0x50>
   14756:	2a03      	cmp	r2, #3
   14758:	d920      	bls.n	1479c <strncpy+0x50>
   1475a:	460b      	mov	r3, r1
   1475c:	4684      	mov	ip, r0
   1475e:	4619      	mov	r1, r3
   14760:	f853 5b04 	ldr.w	r5, [r3], #4
   14764:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
   14768:	ea24 0405 	bic.w	r4, r4, r5
   1476c:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
   14770:	d115      	bne.n	1479e <strncpy+0x52>
   14772:	3a04      	subs	r2, #4
   14774:	2a03      	cmp	r2, #3
   14776:	4619      	mov	r1, r3
   14778:	f84c 5b04 	str.w	r5, [ip], #4
   1477c:	d8ef      	bhi.n	1475e <strncpy+0x12>
   1477e:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   14782:	b152      	cbz	r2, 1479a <strncpy+0x4e>
   14784:	4663      	mov	r3, ip
   14786:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
   1478a:	1e54      	subs	r4, r2, #1
   1478c:	f803 1b01 	strb.w	r1, [r3], #1
   14790:	b141      	cbz	r1, 147a4 <strncpy+0x58>
   14792:	4622      	mov	r2, r4
   14794:	469c      	mov	ip, r3
   14796:	2a00      	cmp	r2, #0
   14798:	d1f4      	bne.n	14784 <strncpy+0x38>
   1479a:	bd30      	pop	{r4, r5, pc}
   1479c:	4684      	mov	ip, r0
   1479e:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   147a2:	e7ee      	b.n	14782 <strncpy+0x36>
   147a4:	4462      	add	r2, ip
   147a6:	2c00      	cmp	r4, #0
   147a8:	d0f7      	beq.n	1479a <strncpy+0x4e>
   147aa:	f803 1b01 	strb.w	r1, [r3], #1
   147ae:	4293      	cmp	r3, r2
   147b0:	d1fb      	bne.n	147aa <strncpy+0x5e>
   147b2:	bd30      	pop	{r4, r5, pc}

000147b4 <__ssprint_r>:
   147b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147b8:	6893      	ldr	r3, [r2, #8]
   147ba:	4691      	mov	r9, r2
   147bc:	b083      	sub	sp, #12
   147be:	2b00      	cmp	r3, #0
   147c0:	d06e      	beq.n	148a0 <__ssprint_r+0xec>
   147c2:	6817      	ldr	r7, [r2, #0]
   147c4:	4680      	mov	r8, r0
   147c6:	460c      	mov	r4, r1
   147c8:	6808      	ldr	r0, [r1, #0]
   147ca:	688d      	ldr	r5, [r1, #8]
   147cc:	3708      	adds	r7, #8
   147ce:	e044      	b.n	1485a <__ssprint_r+0xa6>
   147d0:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
   147d4:	f41c 6f90 	tst.w	ip, #1152	; 0x480
   147d8:	d02e      	beq.n	14838 <__ssprint_r+0x84>
   147da:	e9d4 1304 	ldrd	r1, r3, [r4, #16]
   147de:	1a45      	subs	r5, r0, r1
   147e0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   147e4:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
   147e8:	19aa      	adds	r2, r5, r6
   147ea:	ea4f 0a63 	mov.w	sl, r3, asr #1
   147ee:	1c53      	adds	r3, r2, #1
   147f0:	4553      	cmp	r3, sl
   147f2:	4652      	mov	r2, sl
   147f4:	bf84      	itt	hi
   147f6:	469a      	movhi	sl, r3
   147f8:	4652      	movhi	r2, sl
   147fa:	f41c 6f80 	tst.w	ip, #1024	; 0x400
   147fe:	d036      	beq.n	1486e <__ssprint_r+0xba>
   14800:	4611      	mov	r1, r2
   14802:	4640      	mov	r0, r8
   14804:	f7f7 fd3e 	bl	c284 <_malloc_r>
   14808:	2800      	cmp	r0, #0
   1480a:	d03a      	beq.n	14882 <__ssprint_r+0xce>
   1480c:	462a      	mov	r2, r5
   1480e:	6921      	ldr	r1, [r4, #16]
   14810:	9001      	str	r0, [sp, #4]
   14812:	f7f8 f85f 	bl	c8d4 <memcpy>
   14816:	89a2      	ldrh	r2, [r4, #12]
   14818:	9b01      	ldr	r3, [sp, #4]
   1481a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   1481e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   14822:	81a2      	strh	r2, [r4, #12]
   14824:	1958      	adds	r0, r3, r5
   14826:	ebaa 0505 	sub.w	r5, sl, r5
   1482a:	60a5      	str	r5, [r4, #8]
   1482c:	f8c4 a014 	str.w	sl, [r4, #20]
   14830:	4635      	mov	r5, r6
   14832:	46b2      	mov	sl, r6
   14834:	6123      	str	r3, [r4, #16]
   14836:	6020      	str	r0, [r4, #0]
   14838:	4659      	mov	r1, fp
   1483a:	4652      	mov	r2, sl
   1483c:	f7f8 f8c0 	bl	c9c0 <memmove>
   14840:	f8d9 3008 	ldr.w	r3, [r9, #8]
   14844:	68a1      	ldr	r1, [r4, #8]
   14846:	6820      	ldr	r0, [r4, #0]
   14848:	1b4d      	subs	r5, r1, r5
   1484a:	4450      	add	r0, sl
   1484c:	1b9e      	subs	r6, r3, r6
   1484e:	60a5      	str	r5, [r4, #8]
   14850:	6020      	str	r0, [r4, #0]
   14852:	f8c9 6008 	str.w	r6, [r9, #8]
   14856:	b31e      	cbz	r6, 148a0 <__ssprint_r+0xec>
   14858:	3708      	adds	r7, #8
   1485a:	e957 b602 	ldrd	fp, r6, [r7, #-8]
   1485e:	2e00      	cmp	r6, #0
   14860:	d0fa      	beq.n	14858 <__ssprint_r+0xa4>
   14862:	42b5      	cmp	r5, r6
   14864:	46aa      	mov	sl, r5
   14866:	d9b3      	bls.n	147d0 <__ssprint_r+0x1c>
   14868:	4635      	mov	r5, r6
   1486a:	46b2      	mov	sl, r6
   1486c:	e7e4      	b.n	14838 <__ssprint_r+0x84>
   1486e:	4640      	mov	r0, r8
   14870:	f7f8 fa7c 	bl	cd6c <_realloc_r>
   14874:	4603      	mov	r3, r0
   14876:	2800      	cmp	r0, #0
   14878:	d1d4      	bne.n	14824 <__ssprint_r+0x70>
   1487a:	4640      	mov	r0, r8
   1487c:	6921      	ldr	r1, [r4, #16]
   1487e:	f7fe fef1 	bl	13664 <_free_r>
   14882:	230c      	movs	r3, #12
   14884:	2200      	movs	r2, #0
   14886:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1488a:	f8c8 3000 	str.w	r3, [r8]
   1488e:	89a3      	ldrh	r3, [r4, #12]
   14890:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   14894:	81a3      	strh	r3, [r4, #12]
   14896:	e9c9 2201 	strd	r2, r2, [r9, #4]
   1489a:	b003      	add	sp, #12
   1489c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148a0:	2300      	movs	r3, #0
   148a2:	4618      	mov	r0, r3
   148a4:	f8c9 3004 	str.w	r3, [r9, #4]
   148a8:	b003      	add	sp, #12
   148aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148ae:	bf00      	nop

000148b0 <_svfiprintf_r>:
   148b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148b4:	b0bd      	sub	sp, #244	; 0xf4
   148b6:	9304      	str	r3, [sp, #16]
   148b8:	898b      	ldrh	r3, [r1, #12]
   148ba:	4691      	mov	r9, r2
   148bc:	061c      	lsls	r4, r3, #24
   148be:	e9cd 1005 	strd	r1, r0, [sp, #20]
   148c2:	d503      	bpl.n	148cc <_svfiprintf_r+0x1c>
   148c4:	690b      	ldr	r3, [r1, #16]
   148c6:	2b00      	cmp	r3, #0
   148c8:	f000 84d7 	beq.w	1527a <_svfiprintf_r+0x9ca>
   148cc:	ab13      	add	r3, sp, #76	; 0x4c
   148ce:	9310      	str	r3, [sp, #64]	; 0x40
   148d0:	2300      	movs	r3, #0
   148d2:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
   148d6:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
   148da:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
   148de:	af13      	add	r7, sp, #76	; 0x4c
   148e0:	9302      	str	r3, [sp, #8]
   148e2:	f899 3000 	ldrb.w	r3, [r9]
   148e6:	2b00      	cmp	r3, #0
   148e8:	f000 8129 	beq.w	14b3e <_svfiprintf_r+0x28e>
   148ec:	464c      	mov	r4, r9
   148ee:	e004      	b.n	148fa <_svfiprintf_r+0x4a>
   148f0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   148f4:	2b00      	cmp	r3, #0
   148f6:	f000 8108 	beq.w	14b0a <_svfiprintf_r+0x25a>
   148fa:	2b25      	cmp	r3, #37	; 0x25
   148fc:	d1f8      	bne.n	148f0 <_svfiprintf_r+0x40>
   148fe:	ebb4 0509 	subs.w	r5, r4, r9
   14902:	f040 8105 	bne.w	14b10 <_svfiprintf_r+0x260>
   14906:	7823      	ldrb	r3, [r4, #0]
   14908:	2b00      	cmp	r3, #0
   1490a:	f000 8118 	beq.w	14b3e <_svfiprintf_r+0x28e>
   1490e:	f04f 0300 	mov.w	r3, #0
   14912:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14916:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1491a:	f04f 0b00 	mov.w	fp, #0
   1491e:	262b      	movs	r6, #43	; 0x2b
   14920:	9301      	str	r3, [sp, #4]
   14922:	7863      	ldrb	r3, [r4, #1]
   14924:	f8cd b00c 	str.w	fp, [sp, #12]
   14928:	f104 0901 	add.w	r9, r4, #1
   1492c:	f109 0901 	add.w	r9, r9, #1
   14930:	f1a3 0220 	sub.w	r2, r3, #32
   14934:	2a5a      	cmp	r2, #90	; 0x5a
   14936:	f200 8113 	bhi.w	14b60 <_svfiprintf_r+0x2b0>
   1493a:	e8df f012 	tbh	[pc, r2, lsl #1]
   1493e:	0296      	.short	0x0296
   14940:	01110111 	.word	0x01110111
   14944:	01110291 	.word	0x01110291
   14948:	01110111 	.word	0x01110111
   1494c:	0111026f 	.word	0x0111026f
   14950:	006a0111 	.word	0x006a0111
   14954:	01110212 	.word	0x01110212
   14958:	01f800e1 	.word	0x01f800e1
   1495c:	02170111 	.word	0x02170111
   14960:	005b005b 	.word	0x005b005b
   14964:	005b005b 	.word	0x005b005b
   14968:	005b005b 	.word	0x005b005b
   1496c:	005b005b 	.word	0x005b005b
   14970:	0111005b 	.word	0x0111005b
   14974:	01110111 	.word	0x01110111
   14978:	01110111 	.word	0x01110111
   1497c:	01110111 	.word	0x01110111
   14980:	01110111 	.word	0x01110111
   14984:	007901b1 	.word	0x007901b1
   14988:	01110111 	.word	0x01110111
   1498c:	01110111 	.word	0x01110111
   14990:	01110111 	.word	0x01110111
   14994:	01110111 	.word	0x01110111
   14998:	01110111 	.word	0x01110111
   1499c:	011100a3 	.word	0x011100a3
   149a0:	01110111 	.word	0x01110111
   149a4:	01110196 	.word	0x01110196
   149a8:	0111022d 	.word	0x0111022d
   149ac:	04650111 	.word	0x04650111
   149b0:	01110111 	.word	0x01110111
   149b4:	01110111 	.word	0x01110111
   149b8:	01110111 	.word	0x01110111
   149bc:	01110111 	.word	0x01110111
   149c0:	01110111 	.word	0x01110111
   149c4:	007b01b1 	.word	0x007b01b1
   149c8:	01110111 	.word	0x01110111
   149cc:	02620111 	.word	0x02620111
   149d0:	0074007b 	.word	0x0074007b
   149d4:	02550111 	.word	0x02550111
   149d8:	023e0111 	.word	0x023e0111
   149dc:	021c00a5 	.word	0x021c00a5
   149e0:	01110074 	.word	0x01110074
   149e4:	00710196 	.word	0x00710196
   149e8:	01110463 	.word	0x01110463
   149ec:	04840111 	.word	0x04840111
   149f0:	00710111 	.word	0x00710111
   149f4:	2100      	movs	r1, #0
   149f6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   149fa:	f819 3b01 	ldrb.w	r3, [r9], #1
   149fe:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   14a02:	eb02 0141 	add.w	r1, r2, r1, lsl #1
   14a06:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   14a0a:	2a09      	cmp	r2, #9
   14a0c:	d9f5      	bls.n	149fa <_svfiprintf_r+0x14a>
   14a0e:	9103      	str	r1, [sp, #12]
   14a10:	e78e      	b.n	14930 <_svfiprintf_r+0x80>
   14a12:	9b04      	ldr	r3, [sp, #16]
   14a14:	f853 2b04 	ldr.w	r2, [r3], #4
   14a18:	2a00      	cmp	r2, #0
   14a1a:	e9cd 2303 	strd	r2, r3, [sp, #12]
   14a1e:	db6c      	blt.n	14afa <_svfiprintf_r+0x24a>
   14a20:	f899 3000 	ldrb.w	r3, [r9]
   14a24:	e782      	b.n	1492c <_svfiprintf_r+0x7c>
   14a26:	f899 3000 	ldrb.w	r3, [r9]
   14a2a:	f04b 0b20 	orr.w	fp, fp, #32
   14a2e:	e77d      	b.n	1492c <_svfiprintf_r+0x7c>
   14a30:	f04b 0b10 	orr.w	fp, fp, #16
   14a34:	f01b 0f20 	tst.w	fp, #32
   14a38:	9d04      	ldr	r5, [sp, #16]
   14a3a:	f000 8108 	beq.w	14c4e <_svfiprintf_r+0x39e>
   14a3e:	3507      	adds	r5, #7
   14a40:	f025 0507 	bic.w	r5, r5, #7
   14a44:	462a      	mov	r2, r5
   14a46:	686b      	ldr	r3, [r5, #4]
   14a48:	f852 5b08 	ldr.w	r5, [r2], #8
   14a4c:	461e      	mov	r6, r3
   14a4e:	9204      	str	r2, [sp, #16]
   14a50:	2b00      	cmp	r3, #0
   14a52:	f2c0 8147 	blt.w	14ce4 <_svfiprintf_r+0x434>
   14a56:	9b01      	ldr	r3, [sp, #4]
   14a58:	3301      	adds	r3, #1
   14a5a:	f000 8443 	beq.w	152e4 <_svfiprintf_r+0xa34>
   14a5e:	ea55 0306 	orrs.w	r3, r5, r6
   14a62:	f02b 0880 	bic.w	r8, fp, #128	; 0x80
   14a66:	f000 8357 	beq.w	15118 <_svfiprintf_r+0x868>
   14a6a:	2d0a      	cmp	r5, #10
   14a6c:	f176 0300 	sbcs.w	r3, r6, #0
   14a70:	f080 8380 	bcs.w	15174 <_svfiprintf_r+0x8c4>
   14a74:	3530      	adds	r5, #48	; 0x30
   14a76:	46c3      	mov	fp, r8
   14a78:	2601      	movs	r6, #1
   14a7a:	f88d 50ef 	strb.w	r5, [sp, #239]	; 0xef
   14a7e:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   14a82:	e02e      	b.n	14ae2 <_svfiprintf_r+0x232>
   14a84:	f04b 0b10 	orr.w	fp, fp, #16
   14a88:	f01b 0620 	ands.w	r6, fp, #32
   14a8c:	f000 80d2 	beq.w	14c34 <_svfiprintf_r+0x384>
   14a90:	9d04      	ldr	r5, [sp, #16]
   14a92:	3507      	adds	r5, #7
   14a94:	f025 0507 	bic.w	r5, r5, #7
   14a98:	462b      	mov	r3, r5
   14a9a:	686e      	ldr	r6, [r5, #4]
   14a9c:	f853 5b08 	ldr.w	r5, [r3], #8
   14aa0:	9304      	str	r3, [sp, #16]
   14aa2:	2300      	movs	r3, #0
   14aa4:	f42b 6880 	bic.w	r8, fp, #1024	; 0x400
   14aa8:	f04f 0200 	mov.w	r2, #0
   14aac:	f88d 203b 	strb.w	r2, [sp, #59]	; 0x3b
   14ab0:	9a01      	ldr	r2, [sp, #4]
   14ab2:	1c51      	adds	r1, r2, #1
   14ab4:	f000 8123 	beq.w	14cfe <_svfiprintf_r+0x44e>
   14ab8:	ea55 0106 	orrs.w	r1, r5, r6
   14abc:	f028 0b80 	bic.w	fp, r8, #128	; 0x80
   14ac0:	f040 8294 	bne.w	14fec <_svfiprintf_r+0x73c>
   14ac4:	2a00      	cmp	r2, #0
   14ac6:	f040 8410 	bne.w	152ea <_svfiprintf_r+0xa3a>
   14aca:	2b00      	cmp	r3, #0
   14acc:	f040 8329 	bne.w	15122 <_svfiprintf_r+0x872>
   14ad0:	f018 0601 	ands.w	r6, r8, #1
   14ad4:	f000 838a 	beq.w	151ec <_svfiprintf_r+0x93c>
   14ad8:	2330      	movs	r3, #48	; 0x30
   14ada:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   14ade:	f88d 30ef 	strb.w	r3, [sp, #239]	; 0xef
   14ae2:	f8dd 8004 	ldr.w	r8, [sp, #4]
   14ae6:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   14aea:	45b0      	cmp	r8, r6
   14aec:	bfb8      	it	lt
   14aee:	46b0      	movlt	r8, r6
   14af0:	2b00      	cmp	r3, #0
   14af2:	d043      	beq.n	14b7c <_svfiprintf_r+0x2cc>
   14af4:	f108 0801 	add.w	r8, r8, #1
   14af8:	e040      	b.n	14b7c <_svfiprintf_r+0x2cc>
   14afa:	9b03      	ldr	r3, [sp, #12]
   14afc:	425b      	negs	r3, r3
   14afe:	9303      	str	r3, [sp, #12]
   14b00:	f899 3000 	ldrb.w	r3, [r9]
   14b04:	f04b 0b04 	orr.w	fp, fp, #4
   14b08:	e710      	b.n	1492c <_svfiprintf_r+0x7c>
   14b0a:	ebb4 0509 	subs.w	r5, r4, r9
   14b0e:	d016      	beq.n	14b3e <_svfiprintf_r+0x28e>
   14b10:	9b12      	ldr	r3, [sp, #72]	; 0x48
   14b12:	e9c7 9500 	strd	r9, r5, [r7]
   14b16:	442b      	add	r3, r5
   14b18:	9312      	str	r3, [sp, #72]	; 0x48
   14b1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   14b1c:	3301      	adds	r3, #1
   14b1e:	2b07      	cmp	r3, #7
   14b20:	9311      	str	r3, [sp, #68]	; 0x44
   14b22:	dc04      	bgt.n	14b2e <_svfiprintf_r+0x27e>
   14b24:	3708      	adds	r7, #8
   14b26:	9b02      	ldr	r3, [sp, #8]
   14b28:	442b      	add	r3, r5
   14b2a:	9302      	str	r3, [sp, #8]
   14b2c:	e6eb      	b.n	14906 <_svfiprintf_r+0x56>
   14b2e:	aa10      	add	r2, sp, #64	; 0x40
   14b30:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   14b34:	f7ff fe3e 	bl	147b4 <__ssprint_r>
   14b38:	b928      	cbnz	r0, 14b46 <_svfiprintf_r+0x296>
   14b3a:	af13      	add	r7, sp, #76	; 0x4c
   14b3c:	e7f3      	b.n	14b26 <_svfiprintf_r+0x276>
   14b3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   14b40:	2b00      	cmp	r3, #0
   14b42:	f040 841c 	bne.w	1537e <_svfiprintf_r+0xace>
   14b46:	9b05      	ldr	r3, [sp, #20]
   14b48:	899b      	ldrh	r3, [r3, #12]
   14b4a:	f013 0f40 	tst.w	r3, #64	; 0x40
   14b4e:	9b02      	ldr	r3, [sp, #8]
   14b50:	bf18      	it	ne
   14b52:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
   14b56:	9302      	str	r3, [sp, #8]
   14b58:	9802      	ldr	r0, [sp, #8]
   14b5a:	b03d      	add	sp, #244	; 0xf4
   14b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b60:	2b00      	cmp	r3, #0
   14b62:	d0ec      	beq.n	14b3e <_svfiprintf_r+0x28e>
   14b64:	f04f 0801 	mov.w	r8, #1
   14b68:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   14b6c:	f04f 0300 	mov.w	r3, #0
   14b70:	4646      	mov	r6, r8
   14b72:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14b76:	ac23      	add	r4, sp, #140	; 0x8c
   14b78:	2300      	movs	r3, #0
   14b7a:	9301      	str	r3, [sp, #4]
   14b7c:	f01b 0302 	ands.w	r3, fp, #2
   14b80:	9307      	str	r3, [sp, #28]
   14b82:	bf18      	it	ne
   14b84:	f108 0802 	addne.w	r8, r8, #2
   14b88:	f01b 0384 	ands.w	r3, fp, #132	; 0x84
   14b8c:	9308      	str	r3, [sp, #32]
   14b8e:	d105      	bne.n	14b9c <_svfiprintf_r+0x2ec>
   14b90:	9b03      	ldr	r3, [sp, #12]
   14b92:	eba3 0508 	sub.w	r5, r3, r8
   14b96:	2d00      	cmp	r5, #0
   14b98:	f300 822a 	bgt.w	14ff0 <_svfiprintf_r+0x740>
   14b9c:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14ba0:	f89d 003b 	ldrb.w	r0, [sp, #59]	; 0x3b
   14ba4:	b160      	cbz	r0, 14bc0 <_svfiprintf_r+0x310>
   14ba6:	2001      	movs	r0, #1
   14ba8:	3201      	adds	r2, #1
   14baa:	3101      	adds	r1, #1
   14bac:	6078      	str	r0, [r7, #4]
   14bae:	2a07      	cmp	r2, #7
   14bb0:	f10d 003b 	add.w	r0, sp, #59	; 0x3b
   14bb4:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14bb8:	6038      	str	r0, [r7, #0]
   14bba:	f300 8256 	bgt.w	1506a <_svfiprintf_r+0x7ba>
   14bbe:	3708      	adds	r7, #8
   14bc0:	9b07      	ldr	r3, [sp, #28]
   14bc2:	b15b      	cbz	r3, 14bdc <_svfiprintf_r+0x32c>
   14bc4:	2302      	movs	r3, #2
   14bc6:	3201      	adds	r2, #1
   14bc8:	3102      	adds	r1, #2
   14bca:	607b      	str	r3, [r7, #4]
   14bcc:	2a07      	cmp	r2, #7
   14bce:	ab0f      	add	r3, sp, #60	; 0x3c
   14bd0:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14bd4:	603b      	str	r3, [r7, #0]
   14bd6:	f300 825b 	bgt.w	15090 <_svfiprintf_r+0x7e0>
   14bda:	3708      	adds	r7, #8
   14bdc:	9b08      	ldr	r3, [sp, #32]
   14bde:	2b80      	cmp	r3, #128	; 0x80
   14be0:	f000 816b 	beq.w	14eba <_svfiprintf_r+0x60a>
   14be4:	9b01      	ldr	r3, [sp, #4]
   14be6:	eba3 0a06 	sub.w	sl, r3, r6
   14bea:	f1ba 0f00 	cmp.w	sl, #0
   14bee:	f300 81ad 	bgt.w	14f4c <_svfiprintf_r+0x69c>
   14bf2:	3201      	adds	r2, #1
   14bf4:	4431      	add	r1, r6
   14bf6:	2a07      	cmp	r2, #7
   14bf8:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14bfc:	603c      	str	r4, [r7, #0]
   14bfe:	607e      	str	r6, [r7, #4]
   14c00:	f300 81e0 	bgt.w	14fc4 <_svfiprintf_r+0x714>
   14c04:	3708      	adds	r7, #8
   14c06:	f01b 0f04 	tst.w	fp, #4
   14c0a:	d005      	beq.n	14c18 <_svfiprintf_r+0x368>
   14c0c:	9b03      	ldr	r3, [sp, #12]
   14c0e:	eba3 0408 	sub.w	r4, r3, r8
   14c12:	2c00      	cmp	r4, #0
   14c14:	f300 8248 	bgt.w	150a8 <_svfiprintf_r+0x7f8>
   14c18:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
   14c1c:	4542      	cmp	r2, r8
   14c1e:	bfac      	ite	ge
   14c20:	189b      	addge	r3, r3, r2
   14c22:	4443      	addlt	r3, r8
   14c24:	9302      	str	r3, [sp, #8]
   14c26:	2900      	cmp	r1, #0
   14c28:	f040 81d7 	bne.w	14fda <_svfiprintf_r+0x72a>
   14c2c:	2300      	movs	r3, #0
   14c2e:	af13      	add	r7, sp, #76	; 0x4c
   14c30:	9311      	str	r3, [sp, #68]	; 0x44
   14c32:	e656      	b.n	148e2 <_svfiprintf_r+0x32>
   14c34:	f01b 0310 	ands.w	r3, fp, #16
   14c38:	d145      	bne.n	14cc6 <_svfiprintf_r+0x416>
   14c3a:	f01b 0240 	ands.w	r2, fp, #64	; 0x40
   14c3e:	d03e      	beq.n	14cbe <_svfiprintf_r+0x40e>
   14c40:	9d04      	ldr	r5, [sp, #16]
   14c42:	461e      	mov	r6, r3
   14c44:	f855 3b04 	ldr.w	r3, [r5], #4
   14c48:	9504      	str	r5, [sp, #16]
   14c4a:	b29d      	uxth	r5, r3
   14c4c:	e729      	b.n	14aa2 <_svfiprintf_r+0x1f2>
   14c4e:	f855 3b04 	ldr.w	r3, [r5], #4
   14c52:	f01b 0f10 	tst.w	fp, #16
   14c56:	9504      	str	r5, [sp, #16]
   14c58:	d13e      	bne.n	14cd8 <_svfiprintf_r+0x428>
   14c5a:	f01b 0f40 	tst.w	fp, #64	; 0x40
   14c5e:	d037      	beq.n	14cd0 <_svfiprintf_r+0x420>
   14c60:	f343 36c0 	sbfx	r6, r3, #15, #1
   14c64:	b21d      	sxth	r5, r3
   14c66:	4633      	mov	r3, r6
   14c68:	e6f2      	b.n	14a50 <_svfiprintf_r+0x1a0>
   14c6a:	f04f 0300 	mov.w	r3, #0
   14c6e:	9d04      	ldr	r5, [sp, #16]
   14c70:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14c74:	f855 4b04 	ldr.w	r4, [r5], #4
   14c78:	2c00      	cmp	r4, #0
   14c7a:	f000 8350 	beq.w	1531e <_svfiprintf_r+0xa6e>
   14c7e:	9b01      	ldr	r3, [sp, #4]
   14c80:	1c58      	adds	r0, r3, #1
   14c82:	f000 82f2 	beq.w	1526a <_svfiprintf_r+0x9ba>
   14c86:	461a      	mov	r2, r3
   14c88:	2100      	movs	r1, #0
   14c8a:	4620      	mov	r0, r4
   14c8c:	f7f7 fda6 	bl	c7dc <memchr>
   14c90:	2800      	cmp	r0, #0
   14c92:	f000 837b 	beq.w	1538c <_svfiprintf_r+0xadc>
   14c96:	2300      	movs	r3, #0
   14c98:	9504      	str	r5, [sp, #16]
   14c9a:	1b06      	subs	r6, r0, r4
   14c9c:	9301      	str	r3, [sp, #4]
   14c9e:	e720      	b.n	14ae2 <_svfiprintf_r+0x232>
   14ca0:	f04f 0300 	mov.w	r3, #0
   14ca4:	f04f 0801 	mov.w	r8, #1
   14ca8:	9d04      	ldr	r5, [sp, #16]
   14caa:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14cae:	f855 3b04 	ldr.w	r3, [r5], #4
   14cb2:	4646      	mov	r6, r8
   14cb4:	ac23      	add	r4, sp, #140	; 0x8c
   14cb6:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   14cba:	9504      	str	r5, [sp, #16]
   14cbc:	e75c      	b.n	14b78 <_svfiprintf_r+0x2c8>
   14cbe:	f41b 7600 	ands.w	r6, fp, #512	; 0x200
   14cc2:	f040 8345 	bne.w	15350 <_svfiprintf_r+0xaa0>
   14cc6:	9b04      	ldr	r3, [sp, #16]
   14cc8:	f853 5b04 	ldr.w	r5, [r3], #4
   14ccc:	9304      	str	r3, [sp, #16]
   14cce:	e6e8      	b.n	14aa2 <_svfiprintf_r+0x1f2>
   14cd0:	f41b 7f00 	tst.w	fp, #512	; 0x200
   14cd4:	f040 8336 	bne.w	15344 <_svfiprintf_r+0xa94>
   14cd8:	17de      	asrs	r6, r3, #31
   14cda:	461d      	mov	r5, r3
   14cdc:	4633      	mov	r3, r6
   14cde:	2b00      	cmp	r3, #0
   14ce0:	f6bf aeb9 	bge.w	14a56 <_svfiprintf_r+0x1a6>
   14ce4:	232d      	movs	r3, #45	; 0x2d
   14ce6:	9a01      	ldr	r2, [sp, #4]
   14ce8:	426d      	negs	r5, r5
   14cea:	eb66 0646 	sbc.w	r6, r6, r6, lsl #1
   14cee:	1c51      	adds	r1, r2, #1
   14cf0:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14cf4:	46d8      	mov	r8, fp
   14cf6:	f04f 0301 	mov.w	r3, #1
   14cfa:	f47f aedd 	bne.w	14ab8 <_svfiprintf_r+0x208>
   14cfe:	2b01      	cmp	r3, #1
   14d00:	f43f aeb3 	beq.w	14a6a <_svfiprintf_r+0x1ba>
   14d04:	2b02      	cmp	r3, #2
   14d06:	ac3c      	add	r4, sp, #240	; 0xf0
   14d08:	f040 80ba 	bne.w	14e80 <_svfiprintf_r+0x5d0>
   14d0c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   14d0e:	f005 030f 	and.w	r3, r5, #15
   14d12:	5cd3      	ldrb	r3, [r2, r3]
   14d14:	092d      	lsrs	r5, r5, #4
   14d16:	ea45 7506 	orr.w	r5, r5, r6, lsl #28
   14d1a:	0936      	lsrs	r6, r6, #4
   14d1c:	f804 3d01 	strb.w	r3, [r4, #-1]!
   14d20:	ea55 0306 	orrs.w	r3, r5, r6
   14d24:	d1f3      	bne.n	14d0e <_svfiprintf_r+0x45e>
   14d26:	ab3c      	add	r3, sp, #240	; 0xf0
   14d28:	46c3      	mov	fp, r8
   14d2a:	1b1e      	subs	r6, r3, r4
   14d2c:	e6d9      	b.n	14ae2 <_svfiprintf_r+0x232>
   14d2e:	4649      	mov	r1, r9
   14d30:	f811 3b01 	ldrb.w	r3, [r1], #1
   14d34:	2b2a      	cmp	r3, #42	; 0x2a
   14d36:	f000 8348 	beq.w	153ca <_svfiprintf_r+0xb1a>
   14d3a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   14d3e:	2a09      	cmp	r2, #9
   14d40:	4689      	mov	r9, r1
   14d42:	bf98      	it	ls
   14d44:	2100      	movls	r1, #0
   14d46:	f200 8331 	bhi.w	153ac <_svfiprintf_r+0xafc>
   14d4a:	f819 3b01 	ldrb.w	r3, [r9], #1
   14d4e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   14d52:	eb02 0141 	add.w	r1, r2, r1, lsl #1
   14d56:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   14d5a:	2a09      	cmp	r2, #9
   14d5c:	d9f5      	bls.n	14d4a <_svfiprintf_r+0x49a>
   14d5e:	9101      	str	r1, [sp, #4]
   14d60:	e5e6      	b.n	14930 <_svfiprintf_r+0x80>
   14d62:	f899 3000 	ldrb.w	r3, [r9]
   14d66:	f88d 603b 	strb.w	r6, [sp, #59]	; 0x3b
   14d6a:	e5df      	b.n	1492c <_svfiprintf_r+0x7c>
   14d6c:	f899 3000 	ldrb.w	r3, [r9]
   14d70:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   14d74:	e5da      	b.n	1492c <_svfiprintf_r+0x7c>
   14d76:	2230      	movs	r2, #48	; 0x30
   14d78:	f88d 203c 	strb.w	r2, [sp, #60]	; 0x3c
   14d7c:	2278      	movs	r2, #120	; 0x78
   14d7e:	9b04      	ldr	r3, [sp, #16]
   14d80:	f88d 203d 	strb.w	r2, [sp, #61]	; 0x3d
   14d84:	f853 5b04 	ldr.w	r5, [r3], #4
   14d88:	4abe      	ldr	r2, [pc, #760]	; (15084 <_svfiprintf_r+0x7d4>)
   14d8a:	9304      	str	r3, [sp, #16]
   14d8c:	2600      	movs	r6, #0
   14d8e:	2302      	movs	r3, #2
   14d90:	f04b 0802 	orr.w	r8, fp, #2
   14d94:	9209      	str	r2, [sp, #36]	; 0x24
   14d96:	e687      	b.n	14aa8 <_svfiprintf_r+0x1f8>
   14d98:	f04b 0810 	orr.w	r8, fp, #16
   14d9c:	f018 0620 	ands.w	r6, r8, #32
   14da0:	f000 81c4 	beq.w	1512c <_svfiprintf_r+0x87c>
   14da4:	9d04      	ldr	r5, [sp, #16]
   14da6:	2301      	movs	r3, #1
   14da8:	3507      	adds	r5, #7
   14daa:	f025 0507 	bic.w	r5, r5, #7
   14dae:	462a      	mov	r2, r5
   14db0:	686e      	ldr	r6, [r5, #4]
   14db2:	f852 5b08 	ldr.w	r5, [r2], #8
   14db6:	9204      	str	r2, [sp, #16]
   14db8:	e676      	b.n	14aa8 <_svfiprintf_r+0x1f8>
   14dba:	f01b 0f20 	tst.w	fp, #32
   14dbe:	f040 8217 	bne.w	151f0 <_svfiprintf_r+0x940>
   14dc2:	f01b 0f10 	tst.w	fp, #16
   14dc6:	f040 82a2 	bne.w	1530e <_svfiprintf_r+0xa5e>
   14dca:	f01b 0f40 	tst.w	fp, #64	; 0x40
   14dce:	f040 82ce 	bne.w	1536e <_svfiprintf_r+0xabe>
   14dd2:	f41b 7f00 	tst.w	fp, #512	; 0x200
   14dd6:	f000 829a 	beq.w	1530e <_svfiprintf_r+0xa5e>
   14dda:	9d04      	ldr	r5, [sp, #16]
   14ddc:	9a02      	ldr	r2, [sp, #8]
   14dde:	f855 3b04 	ldr.w	r3, [r5], #4
   14de2:	701a      	strb	r2, [r3, #0]
   14de4:	9504      	str	r5, [sp, #16]
   14de6:	e57c      	b.n	148e2 <_svfiprintf_r+0x32>
   14de8:	f899 3000 	ldrb.w	r3, [r9]
   14dec:	2b6c      	cmp	r3, #108	; 0x6c
   14dee:	bf03      	ittte	eq
   14df0:	f899 3001 	ldrbeq.w	r3, [r9, #1]
   14df4:	f04b 0b20 	orreq.w	fp, fp, #32
   14df8:	f109 0901 	addeq.w	r9, r9, #1
   14dfc:	f04b 0b10 	orrne.w	fp, fp, #16
   14e00:	e594      	b.n	1492c <_svfiprintf_r+0x7c>
   14e02:	f899 3000 	ldrb.w	r3, [r9]
   14e06:	2b68      	cmp	r3, #104	; 0x68
   14e08:	bf03      	ittte	eq
   14e0a:	f899 3001 	ldrbeq.w	r3, [r9, #1]
   14e0e:	f44b 7b00 	orreq.w	fp, fp, #512	; 0x200
   14e12:	f109 0901 	addeq.w	r9, r9, #1
   14e16:	f04b 0b40 	orrne.w	fp, fp, #64	; 0x40
   14e1a:	e587      	b.n	1492c <_svfiprintf_r+0x7c>
   14e1c:	9c06      	ldr	r4, [sp, #24]
   14e1e:	4620      	mov	r0, r4
   14e20:	f7fe fdac 	bl	1397c <_localeconv_r>
   14e24:	6843      	ldr	r3, [r0, #4]
   14e26:	4618      	mov	r0, r3
   14e28:	930b      	str	r3, [sp, #44]	; 0x2c
   14e2a:	f7f8 fc19 	bl	d660 <strlen>
   14e2e:	4603      	mov	r3, r0
   14e30:	4620      	mov	r0, r4
   14e32:	930c      	str	r3, [sp, #48]	; 0x30
   14e34:	461c      	mov	r4, r3
   14e36:	f7fe fda1 	bl	1397c <_localeconv_r>
   14e3a:	6883      	ldr	r3, [r0, #8]
   14e3c:	930a      	str	r3, [sp, #40]	; 0x28
   14e3e:	2c00      	cmp	r4, #0
   14e40:	f43f adee 	beq.w	14a20 <_svfiprintf_r+0x170>
   14e44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   14e46:	2b00      	cmp	r3, #0
   14e48:	f43f adea 	beq.w	14a20 <_svfiprintf_r+0x170>
   14e4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   14e4e:	781b      	ldrb	r3, [r3, #0]
   14e50:	2b00      	cmp	r3, #0
   14e52:	f43f ade5 	beq.w	14a20 <_svfiprintf_r+0x170>
   14e56:	f899 3000 	ldrb.w	r3, [r9]
   14e5a:	f44b 6b80 	orr.w	fp, fp, #1024	; 0x400
   14e5e:	e565      	b.n	1492c <_svfiprintf_r+0x7c>
   14e60:	f899 3000 	ldrb.w	r3, [r9]
   14e64:	f04b 0b01 	orr.w	fp, fp, #1
   14e68:	e560      	b.n	1492c <_svfiprintf_r+0x7c>
   14e6a:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   14e6e:	2b00      	cmp	r3, #0
   14e70:	f47f add6 	bne.w	14a20 <_svfiprintf_r+0x170>
   14e74:	2320      	movs	r3, #32
   14e76:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14e7a:	f899 3000 	ldrb.w	r3, [r9]
   14e7e:	e555      	b.n	1492c <_svfiprintf_r+0x7c>
   14e80:	f005 0307 	and.w	r3, r5, #7
   14e84:	08ed      	lsrs	r5, r5, #3
   14e86:	ea45 7546 	orr.w	r5, r5, r6, lsl #29
   14e8a:	08f6      	lsrs	r6, r6, #3
   14e8c:	3330      	adds	r3, #48	; 0x30
   14e8e:	ea55 0106 	orrs.w	r1, r5, r6
   14e92:	4622      	mov	r2, r4
   14e94:	f804 3d01 	strb.w	r3, [r4, #-1]!
   14e98:	d1f2      	bne.n	14e80 <_svfiprintf_r+0x5d0>
   14e9a:	f018 0f01 	tst.w	r8, #1
   14e9e:	f43f af42 	beq.w	14d26 <_svfiprintf_r+0x476>
   14ea2:	2b30      	cmp	r3, #48	; 0x30
   14ea4:	f43f af3f 	beq.w	14d26 <_svfiprintf_r+0x476>
   14ea8:	2330      	movs	r3, #48	; 0x30
   14eaa:	3a02      	subs	r2, #2
   14eac:	f804 3c01 	strb.w	r3, [r4, #-1]
   14eb0:	ab3c      	add	r3, sp, #240	; 0xf0
   14eb2:	46c3      	mov	fp, r8
   14eb4:	4614      	mov	r4, r2
   14eb6:	1a9e      	subs	r6, r3, r2
   14eb8:	e613      	b.n	14ae2 <_svfiprintf_r+0x232>
   14eba:	9b03      	ldr	r3, [sp, #12]
   14ebc:	eba3 0a08 	sub.w	sl, r3, r8
   14ec0:	f1ba 0f00 	cmp.w	sl, #0
   14ec4:	f77f ae8e 	ble.w	14be4 <_svfiprintf_r+0x334>
   14ec8:	f1ba 0f10 	cmp.w	sl, #16
   14ecc:	f340 827b 	ble.w	153c6 <_svfiprintf_r+0xb16>
   14ed0:	4638      	mov	r0, r7
   14ed2:	9407      	str	r4, [sp, #28]
   14ed4:	4637      	mov	r7, r6
   14ed6:	e9dd 6405 	ldrd	r6, r4, [sp, #20]
   14eda:	2310      	movs	r3, #16
   14edc:	4d6a      	ldr	r5, [pc, #424]	; (15088 <_svfiprintf_r+0x7d8>)
   14ede:	e006      	b.n	14eee <_svfiprintf_r+0x63e>
   14ee0:	f1aa 0a10 	sub.w	sl, sl, #16
   14ee4:	f1ba 0f10 	cmp.w	sl, #16
   14ee8:	f100 0008 	add.w	r0, r0, #8
   14eec:	dd19      	ble.n	14f22 <_svfiprintf_r+0x672>
   14eee:	3201      	adds	r2, #1
   14ef0:	3110      	adds	r1, #16
   14ef2:	2a07      	cmp	r2, #7
   14ef4:	e9c0 5300 	strd	r5, r3, [r0]
   14ef8:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14efc:	ddf0      	ble.n	14ee0 <_svfiprintf_r+0x630>
   14efe:	4631      	mov	r1, r6
   14f00:	4620      	mov	r0, r4
   14f02:	aa10      	add	r2, sp, #64	; 0x40
   14f04:	f7ff fc56 	bl	147b4 <__ssprint_r>
   14f08:	2800      	cmp	r0, #0
   14f0a:	f47f ae1c 	bne.w	14b46 <_svfiprintf_r+0x296>
   14f0e:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14f12:	f1aa 0a10 	sub.w	sl, sl, #16
   14f16:	f1ba 0f10 	cmp.w	sl, #16
   14f1a:	f04f 0310 	mov.w	r3, #16
   14f1e:	a813      	add	r0, sp, #76	; 0x4c
   14f20:	dce5      	bgt.n	14eee <_svfiprintf_r+0x63e>
   14f22:	463e      	mov	r6, r7
   14f24:	4607      	mov	r7, r0
   14f26:	9c07      	ldr	r4, [sp, #28]
   14f28:	3201      	adds	r2, #1
   14f2a:	4451      	add	r1, sl
   14f2c:	2a07      	cmp	r2, #7
   14f2e:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14f32:	603d      	str	r5, [r7, #0]
   14f34:	f8c7 a004 	str.w	sl, [r7, #4]
   14f38:	f300 81dd 	bgt.w	152f6 <_svfiprintf_r+0xa46>
   14f3c:	9b01      	ldr	r3, [sp, #4]
   14f3e:	3708      	adds	r7, #8
   14f40:	eba3 0a06 	sub.w	sl, r3, r6
   14f44:	f1ba 0f00 	cmp.w	sl, #0
   14f48:	f77f ae53 	ble.w	14bf2 <_svfiprintf_r+0x342>
   14f4c:	f1ba 0f10 	cmp.w	sl, #16
   14f50:	f340 81ed 	ble.w	1532e <_svfiprintf_r+0xa7e>
   14f54:	4638      	mov	r0, r7
   14f56:	9401      	str	r4, [sp, #4]
   14f58:	4637      	mov	r7, r6
   14f5a:	e9dd 6405 	ldrd	r6, r4, [sp, #20]
   14f5e:	2310      	movs	r3, #16
   14f60:	4d49      	ldr	r5, [pc, #292]	; (15088 <_svfiprintf_r+0x7d8>)
   14f62:	e006      	b.n	14f72 <_svfiprintf_r+0x6c2>
   14f64:	f1aa 0a10 	sub.w	sl, sl, #16
   14f68:	f1ba 0f10 	cmp.w	sl, #16
   14f6c:	f100 0008 	add.w	r0, r0, #8
   14f70:	dd19      	ble.n	14fa6 <_svfiprintf_r+0x6f6>
   14f72:	3201      	adds	r2, #1
   14f74:	3110      	adds	r1, #16
   14f76:	2a07      	cmp	r2, #7
   14f78:	e9c0 5300 	strd	r5, r3, [r0]
   14f7c:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14f80:	ddf0      	ble.n	14f64 <_svfiprintf_r+0x6b4>
   14f82:	4631      	mov	r1, r6
   14f84:	4620      	mov	r0, r4
   14f86:	aa10      	add	r2, sp, #64	; 0x40
   14f88:	f7ff fc14 	bl	147b4 <__ssprint_r>
   14f8c:	2800      	cmp	r0, #0
   14f8e:	f47f adda 	bne.w	14b46 <_svfiprintf_r+0x296>
   14f92:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14f96:	f1aa 0a10 	sub.w	sl, sl, #16
   14f9a:	f1ba 0f10 	cmp.w	sl, #16
   14f9e:	f04f 0310 	mov.w	r3, #16
   14fa2:	a813      	add	r0, sp, #76	; 0x4c
   14fa4:	dce5      	bgt.n	14f72 <_svfiprintf_r+0x6c2>
   14fa6:	463e      	mov	r6, r7
   14fa8:	4607      	mov	r7, r0
   14faa:	9c01      	ldr	r4, [sp, #4]
   14fac:	3201      	adds	r2, #1
   14fae:	4451      	add	r1, sl
   14fb0:	2a07      	cmp	r2, #7
   14fb2:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14fb6:	603d      	str	r5, [r7, #0]
   14fb8:	f8c7 a004 	str.w	sl, [r7, #4]
   14fbc:	f300 80ce 	bgt.w	1515c <_svfiprintf_r+0x8ac>
   14fc0:	3708      	adds	r7, #8
   14fc2:	e616      	b.n	14bf2 <_svfiprintf_r+0x342>
   14fc4:	aa10      	add	r2, sp, #64	; 0x40
   14fc6:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   14fca:	f7ff fbf3 	bl	147b4 <__ssprint_r>
   14fce:	2800      	cmp	r0, #0
   14fd0:	f47f adb9 	bne.w	14b46 <_svfiprintf_r+0x296>
   14fd4:	9912      	ldr	r1, [sp, #72]	; 0x48
   14fd6:	af13      	add	r7, sp, #76	; 0x4c
   14fd8:	e615      	b.n	14c06 <_svfiprintf_r+0x356>
   14fda:	aa10      	add	r2, sp, #64	; 0x40
   14fdc:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   14fe0:	f7ff fbe8 	bl	147b4 <__ssprint_r>
   14fe4:	2800      	cmp	r0, #0
   14fe6:	f43f ae21 	beq.w	14c2c <_svfiprintf_r+0x37c>
   14fea:	e5ac      	b.n	14b46 <_svfiprintf_r+0x296>
   14fec:	46d8      	mov	r8, fp
   14fee:	e686      	b.n	14cfe <_svfiprintf_r+0x44e>
   14ff0:	2d10      	cmp	r5, #16
   14ff2:	f340 81df 	ble.w	153b4 <_svfiprintf_r+0xb04>
   14ff6:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14ffa:	f8df a090 	ldr.w	sl, [pc, #144]	; 1508c <_svfiprintf_r+0x7dc>
   14ffe:	4638      	mov	r0, r7
   15000:	940d      	str	r4, [sp, #52]	; 0x34
   15002:	4637      	mov	r7, r6
   15004:	4654      	mov	r4, sl
   15006:	2310      	movs	r3, #16
   15008:	9e05      	ldr	r6, [sp, #20]
   1500a:	f8dd a018 	ldr.w	sl, [sp, #24]
   1500e:	e004      	b.n	1501a <_svfiprintf_r+0x76a>
   15010:	3d10      	subs	r5, #16
   15012:	2d10      	cmp	r5, #16
   15014:	f100 0008 	add.w	r0, r0, #8
   15018:	dd17      	ble.n	1504a <_svfiprintf_r+0x79a>
   1501a:	3201      	adds	r2, #1
   1501c:	3110      	adds	r1, #16
   1501e:	2a07      	cmp	r2, #7
   15020:	e9c0 4300 	strd	r4, r3, [r0]
   15024:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   15028:	ddf2      	ble.n	15010 <_svfiprintf_r+0x760>
   1502a:	4631      	mov	r1, r6
   1502c:	4650      	mov	r0, sl
   1502e:	aa10      	add	r2, sp, #64	; 0x40
   15030:	f7ff fbc0 	bl	147b4 <__ssprint_r>
   15034:	2800      	cmp	r0, #0
   15036:	f47f ad86 	bne.w	14b46 <_svfiprintf_r+0x296>
   1503a:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   1503e:	3d10      	subs	r5, #16
   15040:	2d10      	cmp	r5, #16
   15042:	f04f 0310 	mov.w	r3, #16
   15046:	a813      	add	r0, sp, #76	; 0x4c
   15048:	dce7      	bgt.n	1501a <_svfiprintf_r+0x76a>
   1504a:	463e      	mov	r6, r7
   1504c:	4607      	mov	r7, r0
   1504e:	46a2      	mov	sl, r4
   15050:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   15052:	3201      	adds	r2, #1
   15054:	4429      	add	r1, r5
   15056:	2a07      	cmp	r2, #7
   15058:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   1505c:	f8c7 a000 	str.w	sl, [r7]
   15060:	607d      	str	r5, [r7, #4]
   15062:	f300 8135 	bgt.w	152d0 <_svfiprintf_r+0xa20>
   15066:	3708      	adds	r7, #8
   15068:	e59a      	b.n	14ba0 <_svfiprintf_r+0x2f0>
   1506a:	aa10      	add	r2, sp, #64	; 0x40
   1506c:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   15070:	f7ff fba0 	bl	147b4 <__ssprint_r>
   15074:	2800      	cmp	r0, #0
   15076:	f47f ad66 	bne.w	14b46 <_svfiprintf_r+0x296>
   1507a:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   1507e:	af13      	add	r7, sp, #76	; 0x4c
   15080:	e59e      	b.n	14bc0 <_svfiprintf_r+0x310>
   15082:	bf00      	nop
   15084:	0001a1d0 	.word	0x0001a1d0
   15088:	0001a484 	.word	0x0001a484
   1508c:	0001a474 	.word	0x0001a474
   15090:	aa10      	add	r2, sp, #64	; 0x40
   15092:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   15096:	f7ff fb8d 	bl	147b4 <__ssprint_r>
   1509a:	2800      	cmp	r0, #0
   1509c:	f47f ad53 	bne.w	14b46 <_svfiprintf_r+0x296>
   150a0:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   150a4:	af13      	add	r7, sp, #76	; 0x4c
   150a6:	e599      	b.n	14bdc <_svfiprintf_r+0x32c>
   150a8:	2c10      	cmp	r4, #16
   150aa:	f340 8188 	ble.w	153be <_svfiprintf_r+0xb0e>
   150ae:	e9dd b605 	ldrd	fp, r6, [sp, #20]
   150b2:	2510      	movs	r5, #16
   150b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   150b6:	f8df a2e0 	ldr.w	sl, [pc, #736]	; 15398 <_svfiprintf_r+0xae8>
   150ba:	e004      	b.n	150c6 <_svfiprintf_r+0x816>
   150bc:	3c10      	subs	r4, #16
   150be:	2c10      	cmp	r4, #16
   150c0:	f107 0708 	add.w	r7, r7, #8
   150c4:	dd15      	ble.n	150f2 <_svfiprintf_r+0x842>
   150c6:	3301      	adds	r3, #1
   150c8:	3110      	adds	r1, #16
   150ca:	2b07      	cmp	r3, #7
   150cc:	e9c7 a500 	strd	sl, r5, [r7]
   150d0:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
   150d4:	ddf2      	ble.n	150bc <_svfiprintf_r+0x80c>
   150d6:	4659      	mov	r1, fp
   150d8:	4630      	mov	r0, r6
   150da:	aa10      	add	r2, sp, #64	; 0x40
   150dc:	f7ff fb6a 	bl	147b4 <__ssprint_r>
   150e0:	2800      	cmp	r0, #0
   150e2:	f47f ad30 	bne.w	14b46 <_svfiprintf_r+0x296>
   150e6:	e9dd 3111 	ldrd	r3, r1, [sp, #68]	; 0x44
   150ea:	3c10      	subs	r4, #16
   150ec:	2c10      	cmp	r4, #16
   150ee:	af13      	add	r7, sp, #76	; 0x4c
   150f0:	dce9      	bgt.n	150c6 <_svfiprintf_r+0x816>
   150f2:	3301      	adds	r3, #1
   150f4:	4421      	add	r1, r4
   150f6:	2b07      	cmp	r3, #7
   150f8:	e9c7 a400 	strd	sl, r4, [r7]
   150fc:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
   15100:	f77f ad8a 	ble.w	14c18 <_svfiprintf_r+0x368>
   15104:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   15108:	aa10      	add	r2, sp, #64	; 0x40
   1510a:	f7ff fb53 	bl	147b4 <__ssprint_r>
   1510e:	2800      	cmp	r0, #0
   15110:	f47f ad19 	bne.w	14b46 <_svfiprintf_r+0x296>
   15114:	9912      	ldr	r1, [sp, #72]	; 0x48
   15116:	e57f      	b.n	14c18 <_svfiprintf_r+0x368>
   15118:	9b01      	ldr	r3, [sp, #4]
   1511a:	2b00      	cmp	r3, #0
   1511c:	f47f acaa 	bne.w	14a74 <_svfiprintf_r+0x1c4>
   15120:	46c3      	mov	fp, r8
   15122:	2300      	movs	r3, #0
   15124:	ac3c      	add	r4, sp, #240	; 0xf0
   15126:	461e      	mov	r6, r3
   15128:	9301      	str	r3, [sp, #4]
   1512a:	e4da      	b.n	14ae2 <_svfiprintf_r+0x232>
   1512c:	f018 0310 	ands.w	r3, r8, #16
   15130:	d10e      	bne.n	15150 <_svfiprintf_r+0x8a0>
   15132:	f018 0240 	ands.w	r2, r8, #64	; 0x40
   15136:	d007      	beq.n	15148 <_svfiprintf_r+0x898>
   15138:	9d04      	ldr	r5, [sp, #16]
   1513a:	461e      	mov	r6, r3
   1513c:	f855 2b04 	ldr.w	r2, [r5], #4
   15140:	2301      	movs	r3, #1
   15142:	9504      	str	r5, [sp, #16]
   15144:	b295      	uxth	r5, r2
   15146:	e4af      	b.n	14aa8 <_svfiprintf_r+0x1f8>
   15148:	f418 7600 	ands.w	r6, r8, #512	; 0x200
   1514c:	f040 80f1 	bne.w	15332 <_svfiprintf_r+0xa82>
   15150:	9a04      	ldr	r2, [sp, #16]
   15152:	2301      	movs	r3, #1
   15154:	f852 5b04 	ldr.w	r5, [r2], #4
   15158:	9204      	str	r2, [sp, #16]
   1515a:	e4a5      	b.n	14aa8 <_svfiprintf_r+0x1f8>
   1515c:	aa10      	add	r2, sp, #64	; 0x40
   1515e:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   15162:	f7ff fb27 	bl	147b4 <__ssprint_r>
   15166:	2800      	cmp	r0, #0
   15168:	f47f aced 	bne.w	14b46 <_svfiprintf_r+0x296>
   1516c:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   15170:	af13      	add	r7, sp, #76	; 0x4c
   15172:	e53e      	b.n	14bf2 <_svfiprintf_r+0x342>
   15174:	f408 6380 	and.w	r3, r8, #1024	; 0x400
   15178:	f8cd 801c 	str.w	r8, [sp, #28]
   1517c:	9708      	str	r7, [sp, #32]
   1517e:	f04f 0b00 	mov.w	fp, #0
   15182:	461f      	mov	r7, r3
   15184:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   15188:	f10d 0af0 	add.w	sl, sp, #240	; 0xf0
   1518c:	e00c      	b.n	151a8 <_svfiprintf_r+0x8f8>
   1518e:	2300      	movs	r3, #0
   15190:	220a      	movs	r2, #10
   15192:	4628      	mov	r0, r5
   15194:	4631      	mov	r1, r6
   15196:	f001 f88f 	bl	162b8 <__aeabi_uldivmod>
   1519a:	2d0a      	cmp	r5, #10
   1519c:	f176 0300 	sbcs.w	r3, r6, #0
   151a0:	d31c      	bcc.n	151dc <_svfiprintf_r+0x92c>
   151a2:	4605      	mov	r5, r0
   151a4:	460e      	mov	r6, r1
   151a6:	46a2      	mov	sl, r4
   151a8:	4628      	mov	r0, r5
   151aa:	4631      	mov	r1, r6
   151ac:	220a      	movs	r2, #10
   151ae:	2300      	movs	r3, #0
   151b0:	f001 f882 	bl	162b8 <__aeabi_uldivmod>
   151b4:	3230      	adds	r2, #48	; 0x30
   151b6:	f10a 34ff 	add.w	r4, sl, #4294967295	; 0xffffffff
   151ba:	f10b 0b01 	add.w	fp, fp, #1
   151be:	f80a 2c01 	strb.w	r2, [sl, #-1]
   151c2:	2f00      	cmp	r7, #0
   151c4:	d0e3      	beq.n	1518e <_svfiprintf_r+0x8de>
   151c6:	f898 3000 	ldrb.w	r3, [r8]
   151ca:	455b      	cmp	r3, fp
   151cc:	d1df      	bne.n	1518e <_svfiprintf_r+0x8de>
   151ce:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
   151d2:	d0dc      	beq.n	1518e <_svfiprintf_r+0x8de>
   151d4:	2d0a      	cmp	r5, #10
   151d6:	f176 0300 	sbcs.w	r3, r6, #0
   151da:	d25c      	bcs.n	15296 <_svfiprintf_r+0x9e6>
   151dc:	ab3c      	add	r3, sp, #240	; 0xf0
   151de:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
   151e2:	1b1e      	subs	r6, r3, r4
   151e4:	e9dd 8707 	ldrd	r8, r7, [sp, #28]
   151e8:	46c3      	mov	fp, r8
   151ea:	e47a      	b.n	14ae2 <_svfiprintf_r+0x232>
   151ec:	ac3c      	add	r4, sp, #240	; 0xf0
   151ee:	e478      	b.n	14ae2 <_svfiprintf_r+0x232>
   151f0:	9d04      	ldr	r5, [sp, #16]
   151f2:	9902      	ldr	r1, [sp, #8]
   151f4:	f855 2b04 	ldr.w	r2, [r5], #4
   151f8:	17cb      	asrs	r3, r1, #31
   151fa:	e9c2 1300 	strd	r1, r3, [r2]
   151fe:	9504      	str	r5, [sp, #16]
   15200:	f7ff bb6f 	b.w	148e2 <_svfiprintf_r+0x32>
   15204:	46d8      	mov	r8, fp
   15206:	e5c9      	b.n	14d9c <_svfiprintf_r+0x4ec>
   15208:	4a64      	ldr	r2, [pc, #400]	; (1539c <_svfiprintf_r+0xaec>)
   1520a:	f01b 0620 	ands.w	r6, fp, #32
   1520e:	9209      	str	r2, [sp, #36]	; 0x24
   15210:	d01e      	beq.n	15250 <_svfiprintf_r+0x9a0>
   15212:	9d04      	ldr	r5, [sp, #16]
   15214:	3507      	adds	r5, #7
   15216:	f025 0507 	bic.w	r5, r5, #7
   1521a:	462a      	mov	r2, r5
   1521c:	686e      	ldr	r6, [r5, #4]
   1521e:	f852 5b08 	ldr.w	r5, [r2], #8
   15222:	9204      	str	r2, [sp, #16]
   15224:	f01b 0f01 	tst.w	fp, #1
   15228:	d009      	beq.n	1523e <_svfiprintf_r+0x98e>
   1522a:	ea55 0206 	orrs.w	r2, r5, r6
   1522e:	d006      	beq.n	1523e <_svfiprintf_r+0x98e>
   15230:	f88d 303d 	strb.w	r3, [sp, #61]	; 0x3d
   15234:	2330      	movs	r3, #48	; 0x30
   15236:	f04b 0b02 	orr.w	fp, fp, #2
   1523a:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
   1523e:	2302      	movs	r3, #2
   15240:	f42b 6880 	bic.w	r8, fp, #1024	; 0x400
   15244:	e430      	b.n	14aa8 <_svfiprintf_r+0x1f8>
   15246:	4a56      	ldr	r2, [pc, #344]	; (153a0 <_svfiprintf_r+0xaf0>)
   15248:	f01b 0620 	ands.w	r6, fp, #32
   1524c:	9209      	str	r2, [sp, #36]	; 0x24
   1524e:	d1e0      	bne.n	15212 <_svfiprintf_r+0x962>
   15250:	f01b 0210 	ands.w	r2, fp, #16
   15254:	d137      	bne.n	152c6 <_svfiprintf_r+0xa16>
   15256:	f01b 0140 	ands.w	r1, fp, #64	; 0x40
   1525a:	d031      	beq.n	152c0 <_svfiprintf_r+0xa10>
   1525c:	9d04      	ldr	r5, [sp, #16]
   1525e:	4616      	mov	r6, r2
   15260:	f855 2b04 	ldr.w	r2, [r5], #4
   15264:	9504      	str	r5, [sp, #16]
   15266:	b295      	uxth	r5, r2
   15268:	e7dc      	b.n	15224 <_svfiprintf_r+0x974>
   1526a:	4620      	mov	r0, r4
   1526c:	9504      	str	r5, [sp, #16]
   1526e:	f7f8 f9f7 	bl	d660 <strlen>
   15272:	2300      	movs	r3, #0
   15274:	4606      	mov	r6, r0
   15276:	9301      	str	r3, [sp, #4]
   15278:	e433      	b.n	14ae2 <_svfiprintf_r+0x232>
   1527a:	2140      	movs	r1, #64	; 0x40
   1527c:	f7f7 f802 	bl	c284 <_malloc_r>
   15280:	9b05      	ldr	r3, [sp, #20]
   15282:	6018      	str	r0, [r3, #0]
   15284:	6118      	str	r0, [r3, #16]
   15286:	2800      	cmp	r0, #0
   15288:	f000 80ab 	beq.w	153e2 <_svfiprintf_r+0xb32>
   1528c:	2340      	movs	r3, #64	; 0x40
   1528e:	9a05      	ldr	r2, [sp, #20]
   15290:	6153      	str	r3, [r2, #20]
   15292:	f7ff bb1b 	b.w	148cc <_svfiprintf_r+0x1c>
   15296:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   15298:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1529a:	1ae4      	subs	r4, r4, r3
   1529c:	461a      	mov	r2, r3
   1529e:	4620      	mov	r0, r4
   152a0:	f7ff fa54 	bl	1474c <strncpy>
   152a4:	f898 3001 	ldrb.w	r3, [r8, #1]
   152a8:	b10b      	cbz	r3, 152ae <_svfiprintf_r+0x9fe>
   152aa:	f108 0801 	add.w	r8, r8, #1
   152ae:	4628      	mov	r0, r5
   152b0:	4631      	mov	r1, r6
   152b2:	220a      	movs	r2, #10
   152b4:	2300      	movs	r3, #0
   152b6:	f04f 0b00 	mov.w	fp, #0
   152ba:	f000 fffd 	bl	162b8 <__aeabi_uldivmod>
   152be:	e770      	b.n	151a2 <_svfiprintf_r+0x8f2>
   152c0:	f41b 7600 	ands.w	r6, fp, #512	; 0x200
   152c4:	d14c      	bne.n	15360 <_svfiprintf_r+0xab0>
   152c6:	9a04      	ldr	r2, [sp, #16]
   152c8:	f852 5b04 	ldr.w	r5, [r2], #4
   152cc:	9204      	str	r2, [sp, #16]
   152ce:	e7a9      	b.n	15224 <_svfiprintf_r+0x974>
   152d0:	aa10      	add	r2, sp, #64	; 0x40
   152d2:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   152d6:	f7ff fa6d 	bl	147b4 <__ssprint_r>
   152da:	2800      	cmp	r0, #0
   152dc:	f47f ac33 	bne.w	14b46 <_svfiprintf_r+0x296>
   152e0:	af13      	add	r7, sp, #76	; 0x4c
   152e2:	e45b      	b.n	14b9c <_svfiprintf_r+0x2ec>
   152e4:	46d8      	mov	r8, fp
   152e6:	f7ff bbc0 	b.w	14a6a <_svfiprintf_r+0x1ba>
   152ea:	2b01      	cmp	r3, #1
   152ec:	46d8      	mov	r8, fp
   152ee:	f47f ad09 	bne.w	14d04 <_svfiprintf_r+0x454>
   152f2:	f7ff bbbf 	b.w	14a74 <_svfiprintf_r+0x1c4>
   152f6:	aa10      	add	r2, sp, #64	; 0x40
   152f8:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   152fc:	f7ff fa5a 	bl	147b4 <__ssprint_r>
   15300:	2800      	cmp	r0, #0
   15302:	f47f ac20 	bne.w	14b46 <_svfiprintf_r+0x296>
   15306:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   1530a:	af13      	add	r7, sp, #76	; 0x4c
   1530c:	e46a      	b.n	14be4 <_svfiprintf_r+0x334>
   1530e:	9d04      	ldr	r5, [sp, #16]
   15310:	9a02      	ldr	r2, [sp, #8]
   15312:	f855 3b04 	ldr.w	r3, [r5], #4
   15316:	601a      	str	r2, [r3, #0]
   15318:	9504      	str	r5, [sp, #16]
   1531a:	f7ff bae2 	b.w	148e2 <_svfiprintf_r+0x32>
   1531e:	9e01      	ldr	r6, [sp, #4]
   15320:	4c20      	ldr	r4, [pc, #128]	; (153a4 <_svfiprintf_r+0xaf4>)
   15322:	2e06      	cmp	r6, #6
   15324:	bf28      	it	cs
   15326:	2606      	movcs	r6, #6
   15328:	9504      	str	r5, [sp, #16]
   1532a:	46b0      	mov	r8, r6
   1532c:	e424      	b.n	14b78 <_svfiprintf_r+0x2c8>
   1532e:	4d1e      	ldr	r5, [pc, #120]	; (153a8 <_svfiprintf_r+0xaf8>)
   15330:	e63c      	b.n	14fac <_svfiprintf_r+0x6fc>
   15332:	9d04      	ldr	r5, [sp, #16]
   15334:	4616      	mov	r6, r2
   15336:	f855 2b04 	ldr.w	r2, [r5], #4
   1533a:	2301      	movs	r3, #1
   1533c:	9504      	str	r5, [sp, #16]
   1533e:	b2d5      	uxtb	r5, r2
   15340:	f7ff bbb2 	b.w	14aa8 <_svfiprintf_r+0x1f8>
   15344:	f343 16c0 	sbfx	r6, r3, #7, #1
   15348:	b25d      	sxtb	r5, r3
   1534a:	4633      	mov	r3, r6
   1534c:	f7ff bb80 	b.w	14a50 <_svfiprintf_r+0x1a0>
   15350:	9d04      	ldr	r5, [sp, #16]
   15352:	4616      	mov	r6, r2
   15354:	f855 3b04 	ldr.w	r3, [r5], #4
   15358:	9504      	str	r5, [sp, #16]
   1535a:	b2dd      	uxtb	r5, r3
   1535c:	f7ff bba1 	b.w	14aa2 <_svfiprintf_r+0x1f2>
   15360:	9d04      	ldr	r5, [sp, #16]
   15362:	460e      	mov	r6, r1
   15364:	f855 2b04 	ldr.w	r2, [r5], #4
   15368:	9504      	str	r5, [sp, #16]
   1536a:	b2d5      	uxtb	r5, r2
   1536c:	e75a      	b.n	15224 <_svfiprintf_r+0x974>
   1536e:	9d04      	ldr	r5, [sp, #16]
   15370:	9a02      	ldr	r2, [sp, #8]
   15372:	f855 3b04 	ldr.w	r3, [r5], #4
   15376:	801a      	strh	r2, [r3, #0]
   15378:	9504      	str	r5, [sp, #16]
   1537a:	f7ff bab2 	b.w	148e2 <_svfiprintf_r+0x32>
   1537e:	aa10      	add	r2, sp, #64	; 0x40
   15380:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   15384:	f7ff fa16 	bl	147b4 <__ssprint_r>
   15388:	f7ff bbdd 	b.w	14b46 <_svfiprintf_r+0x296>
   1538c:	9e01      	ldr	r6, [sp, #4]
   1538e:	9504      	str	r5, [sp, #16]
   15390:	9001      	str	r0, [sp, #4]
   15392:	f7ff bba6 	b.w	14ae2 <_svfiprintf_r+0x232>
   15396:	bf00      	nop
   15398:	0001a474 	.word	0x0001a474
   1539c:	0001a1e4 	.word	0x0001a1e4
   153a0:	0001a1d0 	.word	0x0001a1d0
   153a4:	0001a1f8 	.word	0x0001a1f8
   153a8:	0001a484 	.word	0x0001a484
   153ac:	2200      	movs	r2, #0
   153ae:	9201      	str	r2, [sp, #4]
   153b0:	f7ff babe 	b.w	14930 <_svfiprintf_r+0x80>
   153b4:	f8df a03c 	ldr.w	sl, [pc, #60]	; 153f4 <_svfiprintf_r+0xb44>
   153b8:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   153bc:	e649      	b.n	15052 <_svfiprintf_r+0x7a2>
   153be:	9b11      	ldr	r3, [sp, #68]	; 0x44
   153c0:	f8df a030 	ldr.w	sl, [pc, #48]	; 153f4 <_svfiprintf_r+0xb44>
   153c4:	e695      	b.n	150f2 <_svfiprintf_r+0x842>
   153c6:	4d0c      	ldr	r5, [pc, #48]	; (153f8 <_svfiprintf_r+0xb48>)
   153c8:	e5ae      	b.n	14f28 <_svfiprintf_r+0x678>
   153ca:	9a04      	ldr	r2, [sp, #16]
   153cc:	f899 3001 	ldrb.w	r3, [r9, #1]
   153d0:	4689      	mov	r9, r1
   153d2:	f852 1b04 	ldr.w	r1, [r2], #4
   153d6:	9204      	str	r2, [sp, #16]
   153d8:	ea41 72e1 	orr.w	r2, r1, r1, asr #31
   153dc:	9201      	str	r2, [sp, #4]
   153de:	f7ff baa5 	b.w	1492c <_svfiprintf_r+0x7c>
   153e2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   153e6:	230c      	movs	r3, #12
   153e8:	9202      	str	r2, [sp, #8]
   153ea:	9a06      	ldr	r2, [sp, #24]
   153ec:	6013      	str	r3, [r2, #0]
   153ee:	f7ff bbb3 	b.w	14b58 <_svfiprintf_r+0x2a8>
   153f2:	bf00      	nop
   153f4:	0001a474 	.word	0x0001a474
   153f8:	0001a484 	.word	0x0001a484

000153fc <_wcrtomb_r>:
   153fc:	b570      	push	{r4, r5, r6, lr}
   153fe:	4605      	mov	r5, r0
   15400:	461c      	mov	r4, r3
   15402:	b084      	sub	sp, #16
   15404:	b139      	cbz	r1, 15416 <_wcrtomb_r+0x1a>
   15406:	4e0b      	ldr	r6, [pc, #44]	; (15434 <_wcrtomb_r+0x38>)
   15408:	f8d6 60e0 	ldr.w	r6, [r6, #224]	; 0xe0
   1540c:	47b0      	blx	r6
   1540e:	1c43      	adds	r3, r0, #1
   15410:	d009      	beq.n	15426 <_wcrtomb_r+0x2a>
   15412:	b004      	add	sp, #16
   15414:	bd70      	pop	{r4, r5, r6, pc}
   15416:	460a      	mov	r2, r1
   15418:	4906      	ldr	r1, [pc, #24]	; (15434 <_wcrtomb_r+0x38>)
   1541a:	f8d1 60e0 	ldr.w	r6, [r1, #224]	; 0xe0
   1541e:	a901      	add	r1, sp, #4
   15420:	47b0      	blx	r6
   15422:	1c43      	adds	r3, r0, #1
   15424:	d1f5      	bne.n	15412 <_wcrtomb_r+0x16>
   15426:	2200      	movs	r2, #0
   15428:	238a      	movs	r3, #138	; 0x8a
   1542a:	6022      	str	r2, [r4, #0]
   1542c:	602b      	str	r3, [r5, #0]
   1542e:	b004      	add	sp, #16
   15430:	bd70      	pop	{r4, r5, r6, pc}
   15432:	bf00      	nop
   15434:	20000964 	.word	0x20000964

00015438 <wcrtomb>:
   15438:	b570      	push	{r4, r5, r6, lr}
   1543a:	4b10      	ldr	r3, [pc, #64]	; (1547c <wcrtomb+0x44>)
   1543c:	4614      	mov	r4, r2
   1543e:	681d      	ldr	r5, [r3, #0]
   15440:	b084      	sub	sp, #16
   15442:	b158      	cbz	r0, 1545c <wcrtomb+0x24>
   15444:	4b0e      	ldr	r3, [pc, #56]	; (15480 <wcrtomb+0x48>)
   15446:	460a      	mov	r2, r1
   15448:	f8d3 60e0 	ldr.w	r6, [r3, #224]	; 0xe0
   1544c:	4601      	mov	r1, r0
   1544e:	4623      	mov	r3, r4
   15450:	4628      	mov	r0, r5
   15452:	47b0      	blx	r6
   15454:	1c43      	adds	r3, r0, #1
   15456:	d00b      	beq.n	15470 <wcrtomb+0x38>
   15458:	b004      	add	sp, #16
   1545a:	bd70      	pop	{r4, r5, r6, pc}
   1545c:	4908      	ldr	r1, [pc, #32]	; (15480 <wcrtomb+0x48>)
   1545e:	4613      	mov	r3, r2
   15460:	f8d1 60e0 	ldr.w	r6, [r1, #224]	; 0xe0
   15464:	4602      	mov	r2, r0
   15466:	a901      	add	r1, sp, #4
   15468:	4628      	mov	r0, r5
   1546a:	47b0      	blx	r6
   1546c:	1c43      	adds	r3, r0, #1
   1546e:	d1f3      	bne.n	15458 <wcrtomb+0x20>
   15470:	2200      	movs	r2, #0
   15472:	238a      	movs	r3, #138	; 0x8a
   15474:	6022      	str	r2, [r4, #0]
   15476:	602b      	str	r3, [r5, #0]
   15478:	b004      	add	sp, #16
   1547a:	bd70      	pop	{r4, r5, r6, pc}
   1547c:	20000124 	.word	0x20000124
   15480:	20000964 	.word	0x20000964

00015484 <_wctomb_r>:
   15484:	b410      	push	{r4}
   15486:	4c03      	ldr	r4, [pc, #12]	; (15494 <_wctomb_r+0x10>)
   15488:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   1548c:	46a4      	mov	ip, r4
   1548e:	bc10      	pop	{r4}
   15490:	4760      	bx	ip
   15492:	bf00      	nop
   15494:	20000964 	.word	0x20000964

00015498 <__ascii_wctomb>:
   15498:	4603      	mov	r3, r0
   1549a:	b149      	cbz	r1, 154b0 <__ascii_wctomb+0x18>
   1549c:	2aff      	cmp	r2, #255	; 0xff
   1549e:	d802      	bhi.n	154a6 <__ascii_wctomb+0xe>
   154a0:	2001      	movs	r0, #1
   154a2:	700a      	strb	r2, [r1, #0]
   154a4:	4770      	bx	lr
   154a6:	228a      	movs	r2, #138	; 0x8a
   154a8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   154ac:	601a      	str	r2, [r3, #0]
   154ae:	4770      	bx	lr
   154b0:	4608      	mov	r0, r1
   154b2:	4770      	bx	lr

000154b4 <__register_exitproc>:
   154b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   154b8:	f8df a07c 	ldr.w	sl, [pc, #124]	; 15538 <__register_exitproc+0x84>
   154bc:	4606      	mov	r6, r0
   154be:	f8da 0000 	ldr.w	r0, [sl]
   154c2:	4698      	mov	r8, r3
   154c4:	460f      	mov	r7, r1
   154c6:	4691      	mov	r9, r2
   154c8:	f7f6 fec2 	bl	c250 <__retarget_lock_acquire_recursive>
   154cc:	4b1b      	ldr	r3, [pc, #108]	; (1553c <__register_exitproc+0x88>)
   154ce:	681b      	ldr	r3, [r3, #0]
   154d0:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
   154d4:	b324      	cbz	r4, 15520 <__register_exitproc+0x6c>
   154d6:	6865      	ldr	r5, [r4, #4]
   154d8:	2d1f      	cmp	r5, #31
   154da:	dc26      	bgt.n	1552a <__register_exitproc+0x76>
   154dc:	b95e      	cbnz	r6, 154f6 <__register_exitproc+0x42>
   154de:	1c6b      	adds	r3, r5, #1
   154e0:	3502      	adds	r5, #2
   154e2:	f8da 0000 	ldr.w	r0, [sl]
   154e6:	6063      	str	r3, [r4, #4]
   154e8:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
   154ec:	f7f6 feb8 	bl	c260 <__retarget_lock_release_recursive>
   154f0:	2000      	movs	r0, #0
   154f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   154f6:	2301      	movs	r3, #1
   154f8:	eb04 0185 	add.w	r1, r4, r5, lsl #2
   154fc:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
   15500:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   15504:	40ab      	lsls	r3, r5
   15506:	431a      	orrs	r2, r3
   15508:	2e02      	cmp	r6, #2
   1550a:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   1550e:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
   15512:	d1e4      	bne.n	154de <__register_exitproc+0x2a>
   15514:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
   15518:	4313      	orrs	r3, r2
   1551a:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
   1551e:	e7de      	b.n	154de <__register_exitproc+0x2a>
   15520:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
   15524:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
   15528:	e7d5      	b.n	154d6 <__register_exitproc+0x22>
   1552a:	f8da 0000 	ldr.w	r0, [sl]
   1552e:	f7f6 fe97 	bl	c260 <__retarget_lock_release_recursive>
   15532:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   15536:	e7dc      	b.n	154f2 <__register_exitproc+0x3e>
   15538:	20000960 	.word	0x20000960
   1553c:	0001a1bc 	.word	0x0001a1bc

00015540 <_calloc_r>:
   15540:	b538      	push	{r3, r4, r5, lr}
   15542:	fba1 1402 	umull	r1, r4, r1, r2
   15546:	bb84      	cbnz	r4, 155aa <_calloc_r+0x6a>
   15548:	f7f6 fe9c 	bl	c284 <_malloc_r>
   1554c:	4605      	mov	r5, r0
   1554e:	b1d8      	cbz	r0, 15588 <_calloc_r+0x48>
   15550:	f850 2c04 	ldr.w	r2, [r0, #-4]
   15554:	f022 0203 	bic.w	r2, r2, #3
   15558:	3a04      	subs	r2, #4
   1555a:	2a24      	cmp	r2, #36	; 0x24
   1555c:	d816      	bhi.n	1558c <_calloc_r+0x4c>
   1555e:	2a13      	cmp	r2, #19
   15560:	d919      	bls.n	15596 <_calloc_r+0x56>
   15562:	2a1b      	cmp	r2, #27
   15564:	e9c0 4400 	strd	r4, r4, [r0]
   15568:	d91c      	bls.n	155a4 <_calloc_r+0x64>
   1556a:	2300      	movs	r3, #0
   1556c:	2a24      	cmp	r2, #36	; 0x24
   1556e:	bf14      	ite	ne
   15570:	f100 0210 	addne.w	r2, r0, #16
   15574:	f100 0218 	addeq.w	r2, r0, #24
   15578:	e9c0 4402 	strd	r4, r4, [r0, #8]
   1557c:	bf04      	itt	eq
   1557e:	6104      	streq	r4, [r0, #16]
   15580:	6144      	streq	r4, [r0, #20]
   15582:	e9c2 3300 	strd	r3, r3, [r2]
   15586:	6093      	str	r3, [r2, #8]
   15588:	4628      	mov	r0, r5
   1558a:	bd38      	pop	{r3, r4, r5, pc}
   1558c:	4621      	mov	r1, r4
   1558e:	f7f7 fa93 	bl	cab8 <memset>
   15592:	4628      	mov	r0, r5
   15594:	bd38      	pop	{r3, r4, r5, pc}
   15596:	4602      	mov	r2, r0
   15598:	2300      	movs	r3, #0
   1559a:	4628      	mov	r0, r5
   1559c:	e9c2 3300 	strd	r3, r3, [r2]
   155a0:	6093      	str	r3, [r2, #8]
   155a2:	bd38      	pop	{r3, r4, r5, pc}
   155a4:	f100 0208 	add.w	r2, r0, #8
   155a8:	e7f6      	b.n	15598 <_calloc_r+0x58>
   155aa:	f000 f817 	bl	155dc <__errno>
   155ae:	230c      	movs	r3, #12
   155b0:	2500      	movs	r5, #0
   155b2:	6003      	str	r3, [r0, #0]
   155b4:	e7e8      	b.n	15588 <_calloc_r+0x48>
   155b6:	bf00      	nop

000155b8 <_close_r>:
   155b8:	2200      	movs	r2, #0
   155ba:	b538      	push	{r3, r4, r5, lr}
   155bc:	4d06      	ldr	r5, [pc, #24]	; (155d8 <_close_r+0x20>)
   155be:	4604      	mov	r4, r0
   155c0:	4608      	mov	r0, r1
   155c2:	602a      	str	r2, [r5, #0]
   155c4:	f001 f96e 	bl	168a4 <_close>
   155c8:	1c43      	adds	r3, r0, #1
   155ca:	d000      	beq.n	155ce <_close_r+0x16>
   155cc:	bd38      	pop	{r3, r4, r5, pc}
   155ce:	682b      	ldr	r3, [r5, #0]
   155d0:	2b00      	cmp	r3, #0
   155d2:	d0fb      	beq.n	155cc <_close_r+0x14>
   155d4:	6023      	str	r3, [r4, #0]
   155d6:	bd38      	pop	{r3, r4, r5, pc}
   155d8:	20001fa8 	.word	0x20001fa8

000155dc <__errno>:
   155dc:	4b01      	ldr	r3, [pc, #4]	; (155e4 <__errno+0x8>)
   155de:	6818      	ldr	r0, [r3, #0]
   155e0:	4770      	bx	lr
   155e2:	bf00      	nop
   155e4:	20000124 	.word	0x20000124

000155e8 <_fclose_r>:
   155e8:	b570      	push	{r4, r5, r6, lr}
   155ea:	2900      	cmp	r1, #0
   155ec:	d04b      	beq.n	15686 <_fclose_r+0x9e>
   155ee:	4606      	mov	r6, r0
   155f0:	460c      	mov	r4, r1
   155f2:	b110      	cbz	r0, 155fa <_fclose_r+0x12>
   155f4:	6b83      	ldr	r3, [r0, #56]	; 0x38
   155f6:	2b00      	cmp	r3, #0
   155f8:	d048      	beq.n	1568c <_fclose_r+0xa4>
   155fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
   155fc:	07d8      	lsls	r0, r3, #31
   155fe:	d534      	bpl.n	1566a <_fclose_r+0x82>
   15600:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   15604:	2b00      	cmp	r3, #0
   15606:	d03e      	beq.n	15686 <_fclose_r+0x9e>
   15608:	4621      	mov	r1, r4
   1560a:	4630      	mov	r0, r6
   1560c:	f7fd fca2 	bl	12f54 <__sflush_r>
   15610:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   15612:	4605      	mov	r5, r0
   15614:	b133      	cbz	r3, 15624 <_fclose_r+0x3c>
   15616:	4630      	mov	r0, r6
   15618:	69e1      	ldr	r1, [r4, #28]
   1561a:	4798      	blx	r3
   1561c:	2800      	cmp	r0, #0
   1561e:	bfb8      	it	lt
   15620:	f04f 35ff 	movlt.w	r5, #4294967295	; 0xffffffff
   15624:	89a3      	ldrh	r3, [r4, #12]
   15626:	061a      	lsls	r2, r3, #24
   15628:	d43b      	bmi.n	156a2 <_fclose_r+0xba>
   1562a:	6b21      	ldr	r1, [r4, #48]	; 0x30
   1562c:	b141      	cbz	r1, 15640 <_fclose_r+0x58>
   1562e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   15632:	4299      	cmp	r1, r3
   15634:	d002      	beq.n	1563c <_fclose_r+0x54>
   15636:	4630      	mov	r0, r6
   15638:	f7fe f814 	bl	13664 <_free_r>
   1563c:	2300      	movs	r3, #0
   1563e:	6323      	str	r3, [r4, #48]	; 0x30
   15640:	6c61      	ldr	r1, [r4, #68]	; 0x44
   15642:	b121      	cbz	r1, 1564e <_fclose_r+0x66>
   15644:	4630      	mov	r0, r6
   15646:	f7fe f80d 	bl	13664 <_free_r>
   1564a:	2300      	movs	r3, #0
   1564c:	6463      	str	r3, [r4, #68]	; 0x44
   1564e:	f7fd fea9 	bl	133a4 <__sfp_lock_acquire>
   15652:	2200      	movs	r2, #0
   15654:	6e63      	ldr	r3, [r4, #100]	; 0x64
   15656:	81a2      	strh	r2, [r4, #12]
   15658:	07db      	lsls	r3, r3, #31
   1565a:	d527      	bpl.n	156ac <_fclose_r+0xc4>
   1565c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1565e:	f7f6 fdf3 	bl	c248 <__retarget_lock_close_recursive>
   15662:	f7fd fea5 	bl	133b0 <__sfp_lock_release>
   15666:	4628      	mov	r0, r5
   15668:	bd70      	pop	{r4, r5, r6, pc}
   1566a:	89a3      	ldrh	r3, [r4, #12]
   1566c:	0599      	lsls	r1, r3, #22
   1566e:	d4cb      	bmi.n	15608 <_fclose_r+0x20>
   15670:	6da0      	ldr	r0, [r4, #88]	; 0x58
   15672:	f7f6 fded 	bl	c250 <__retarget_lock_acquire_recursive>
   15676:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1567a:	2b00      	cmp	r3, #0
   1567c:	d1c4      	bne.n	15608 <_fclose_r+0x20>
   1567e:	6e65      	ldr	r5, [r4, #100]	; 0x64
   15680:	f015 0501 	ands.w	r5, r5, #1
   15684:	d008      	beq.n	15698 <_fclose_r+0xb0>
   15686:	2500      	movs	r5, #0
   15688:	4628      	mov	r0, r5
   1568a:	bd70      	pop	{r4, r5, r6, pc}
   1568c:	f7fd fda0 	bl	131d0 <__sinit>
   15690:	6e63      	ldr	r3, [r4, #100]	; 0x64
   15692:	07d8      	lsls	r0, r3, #31
   15694:	d4b4      	bmi.n	15600 <_fclose_r+0x18>
   15696:	e7e8      	b.n	1566a <_fclose_r+0x82>
   15698:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1569a:	f7f6 fde1 	bl	c260 <__retarget_lock_release_recursive>
   1569e:	4628      	mov	r0, r5
   156a0:	bd70      	pop	{r4, r5, r6, pc}
   156a2:	4630      	mov	r0, r6
   156a4:	6921      	ldr	r1, [r4, #16]
   156a6:	f7fd ffdd 	bl	13664 <_free_r>
   156aa:	e7be      	b.n	1562a <_fclose_r+0x42>
   156ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
   156ae:	f7f6 fdd7 	bl	c260 <__retarget_lock_release_recursive>
   156b2:	e7d3      	b.n	1565c <_fclose_r+0x74>

000156b4 <fclose>:
   156b4:	4b02      	ldr	r3, [pc, #8]	; (156c0 <fclose+0xc>)
   156b6:	4601      	mov	r1, r0
   156b8:	6818      	ldr	r0, [r3, #0]
   156ba:	f7ff bf95 	b.w	155e8 <_fclose_r>
   156be:	bf00      	nop
   156c0:	20000124 	.word	0x20000124

000156c4 <_fstat_r>:
   156c4:	b570      	push	{r4, r5, r6, lr}
   156c6:	2600      	movs	r6, #0
   156c8:	4d07      	ldr	r5, [pc, #28]	; (156e8 <_fstat_r+0x24>)
   156ca:	4604      	mov	r4, r0
   156cc:	4608      	mov	r0, r1
   156ce:	4611      	mov	r1, r2
   156d0:	602e      	str	r6, [r5, #0]
   156d2:	f001 f99b 	bl	16a0c <_fstat>
   156d6:	1c43      	adds	r3, r0, #1
   156d8:	d000      	beq.n	156dc <_fstat_r+0x18>
   156da:	bd70      	pop	{r4, r5, r6, pc}
   156dc:	682b      	ldr	r3, [r5, #0]
   156de:	2b00      	cmp	r3, #0
   156e0:	d0fb      	beq.n	156da <_fstat_r+0x16>
   156e2:	6023      	str	r3, [r4, #0]
   156e4:	bd70      	pop	{r4, r5, r6, pc}
   156e6:	bf00      	nop
   156e8:	20001fa8 	.word	0x20001fa8

000156ec <_isatty_r>:
   156ec:	2200      	movs	r2, #0
   156ee:	b538      	push	{r3, r4, r5, lr}
   156f0:	4d06      	ldr	r5, [pc, #24]	; (1570c <_isatty_r+0x20>)
   156f2:	4604      	mov	r4, r0
   156f4:	4608      	mov	r0, r1
   156f6:	602a      	str	r2, [r5, #0]
   156f8:	f001 fbf8 	bl	16eec <_isatty>
   156fc:	1c43      	adds	r3, r0, #1
   156fe:	d000      	beq.n	15702 <_isatty_r+0x16>
   15700:	bd38      	pop	{r3, r4, r5, pc}
   15702:	682b      	ldr	r3, [r5, #0]
   15704:	2b00      	cmp	r3, #0
   15706:	d0fb      	beq.n	15700 <_isatty_r+0x14>
   15708:	6023      	str	r3, [r4, #0]
   1570a:	bd38      	pop	{r3, r4, r5, pc}
   1570c:	20001fa8 	.word	0x20001fa8

00015710 <_lseek_r>:
   15710:	b538      	push	{r3, r4, r5, lr}
   15712:	460c      	mov	r4, r1
   15714:	4611      	mov	r1, r2
   15716:	2200      	movs	r2, #0
   15718:	4684      	mov	ip, r0
   1571a:	4d07      	ldr	r5, [pc, #28]	; (15738 <_lseek_r+0x28>)
   1571c:	4620      	mov	r0, r4
   1571e:	602a      	str	r2, [r5, #0]
   15720:	461a      	mov	r2, r3
   15722:	4664      	mov	r4, ip
   15724:	f001 f824 	bl	16770 <_lseek>
   15728:	1c43      	adds	r3, r0, #1
   1572a:	d000      	beq.n	1572e <_lseek_r+0x1e>
   1572c:	bd38      	pop	{r3, r4, r5, pc}
   1572e:	682b      	ldr	r3, [r5, #0]
   15730:	2b00      	cmp	r3, #0
   15732:	d0fb      	beq.n	1572c <_lseek_r+0x1c>
   15734:	6023      	str	r3, [r4, #0]
   15736:	bd38      	pop	{r3, r4, r5, pc}
   15738:	20001fa8 	.word	0x20001fa8

0001573c <_read_r>:
   1573c:	b538      	push	{r3, r4, r5, lr}
   1573e:	460c      	mov	r4, r1
   15740:	4611      	mov	r1, r2
   15742:	2200      	movs	r2, #0
   15744:	4684      	mov	ip, r0
   15746:	4d07      	ldr	r5, [pc, #28]	; (15764 <_read_r+0x28>)
   15748:	4620      	mov	r0, r4
   1574a:	602a      	str	r2, [r5, #0]
   1574c:	461a      	mov	r2, r3
   1574e:	4664      	mov	r4, ip
   15750:	f000 ff54 	bl	165fc <_read>
   15754:	1c43      	adds	r3, r0, #1
   15756:	d000      	beq.n	1575a <_read_r+0x1e>
   15758:	bd38      	pop	{r3, r4, r5, pc}
   1575a:	682b      	ldr	r3, [r5, #0]
   1575c:	2b00      	cmp	r3, #0
   1575e:	d0fb      	beq.n	15758 <_read_r+0x1c>
   15760:	6023      	str	r3, [r4, #0]
   15762:	bd38      	pop	{r3, r4, r5, pc}
   15764:	20001fa8 	.word	0x20001fa8
   15768:	b570      	push	{r4, r5, r6, lr}
   1576a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1576e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   15772:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   15776:	bf1d      	ittte	ne
   15778:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1577c:	ea94 0f0c 	teqne	r4, ip
   15780:	ea95 0f0c 	teqne	r5, ip
   15784:	f000 f8de 	bleq	15944 <_read_r+0x208>
   15788:	442c      	add	r4, r5
   1578a:	ea81 0603 	eor.w	r6, r1, r3
   1578e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   15792:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   15796:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   1579a:	bf18      	it	ne
   1579c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   157a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   157a4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   157a8:	d038      	beq.n	1581c <_read_r+0xe0>
   157aa:	fba0 ce02 	umull	ip, lr, r0, r2
   157ae:	f04f 0500 	mov.w	r5, #0
   157b2:	fbe1 e502 	umlal	lr, r5, r1, r2
   157b6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   157ba:	fbe0 e503 	umlal	lr, r5, r0, r3
   157be:	f04f 0600 	mov.w	r6, #0
   157c2:	fbe1 5603 	umlal	r5, r6, r1, r3
   157c6:	f09c 0f00 	teq	ip, #0
   157ca:	bf18      	it	ne
   157cc:	f04e 0e01 	orrne.w	lr, lr, #1
   157d0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   157d4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   157d8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   157dc:	d204      	bcs.n	157e8 <_read_r+0xac>
   157de:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   157e2:	416d      	adcs	r5, r5
   157e4:	eb46 0606 	adc.w	r6, r6, r6
   157e8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   157ec:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   157f0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   157f4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   157f8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   157fc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   15800:	bf88      	it	hi
   15802:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   15806:	d81e      	bhi.n	15846 <_read_r+0x10a>
   15808:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   1580c:	bf08      	it	eq
   1580e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   15812:	f150 0000 	adcs.w	r0, r0, #0
   15816:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1581a:	bd70      	pop	{r4, r5, r6, pc}
   1581c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   15820:	ea46 0101 	orr.w	r1, r6, r1
   15824:	ea40 0002 	orr.w	r0, r0, r2
   15828:	ea81 0103 	eor.w	r1, r1, r3
   1582c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   15830:	bfc2      	ittt	gt
   15832:	ebd4 050c 	rsbsgt	r5, r4, ip
   15836:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1583a:	bd70      	popgt	{r4, r5, r6, pc}
   1583c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   15840:	f04f 0e00 	mov.w	lr, #0
   15844:	3c01      	subs	r4, #1
   15846:	f300 80ab 	bgt.w	159a0 <_read_r+0x264>
   1584a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   1584e:	bfde      	ittt	le
   15850:	2000      	movle	r0, #0
   15852:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   15856:	bd70      	pople	{r4, r5, r6, pc}
   15858:	f1c4 0400 	rsb	r4, r4, #0
   1585c:	3c20      	subs	r4, #32
   1585e:	da35      	bge.n	158cc <_read_r+0x190>
   15860:	340c      	adds	r4, #12
   15862:	dc1b      	bgt.n	1589c <_read_r+0x160>
   15864:	f104 0414 	add.w	r4, r4, #20
   15868:	f1c4 0520 	rsb	r5, r4, #32
   1586c:	fa00 f305 	lsl.w	r3, r0, r5
   15870:	fa20 f004 	lsr.w	r0, r0, r4
   15874:	fa01 f205 	lsl.w	r2, r1, r5
   15878:	ea40 0002 	orr.w	r0, r0, r2
   1587c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   15880:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   15884:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   15888:	fa21 f604 	lsr.w	r6, r1, r4
   1588c:	eb42 0106 	adc.w	r1, r2, r6
   15890:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   15894:	bf08      	it	eq
   15896:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1589a:	bd70      	pop	{r4, r5, r6, pc}
   1589c:	f1c4 040c 	rsb	r4, r4, #12
   158a0:	f1c4 0520 	rsb	r5, r4, #32
   158a4:	fa00 f304 	lsl.w	r3, r0, r4
   158a8:	fa20 f005 	lsr.w	r0, r0, r5
   158ac:	fa01 f204 	lsl.w	r2, r1, r4
   158b0:	ea40 0002 	orr.w	r0, r0, r2
   158b4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   158b8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   158bc:	f141 0100 	adc.w	r1, r1, #0
   158c0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   158c4:	bf08      	it	eq
   158c6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   158ca:	bd70      	pop	{r4, r5, r6, pc}
   158cc:	f1c4 0520 	rsb	r5, r4, #32
   158d0:	fa00 f205 	lsl.w	r2, r0, r5
   158d4:	ea4e 0e02 	orr.w	lr, lr, r2
   158d8:	fa20 f304 	lsr.w	r3, r0, r4
   158dc:	fa01 f205 	lsl.w	r2, r1, r5
   158e0:	ea43 0302 	orr.w	r3, r3, r2
   158e4:	fa21 f004 	lsr.w	r0, r1, r4
   158e8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   158ec:	fa21 f204 	lsr.w	r2, r1, r4
   158f0:	ea20 0002 	bic.w	r0, r0, r2
   158f4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   158f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   158fc:	bf08      	it	eq
   158fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   15902:	bd70      	pop	{r4, r5, r6, pc}
   15904:	f094 0f00 	teq	r4, #0
   15908:	d10f      	bne.n	1592a <_read_r+0x1ee>
   1590a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   1590e:	0040      	lsls	r0, r0, #1
   15910:	eb41 0101 	adc.w	r1, r1, r1
   15914:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   15918:	bf08      	it	eq
   1591a:	3c01      	subeq	r4, #1
   1591c:	d0f7      	beq.n	1590e <_read_r+0x1d2>
   1591e:	ea41 0106 	orr.w	r1, r1, r6
   15922:	f095 0f00 	teq	r5, #0
   15926:	bf18      	it	ne
   15928:	4770      	bxne	lr
   1592a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   1592e:	0052      	lsls	r2, r2, #1
   15930:	eb43 0303 	adc.w	r3, r3, r3
   15934:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   15938:	bf08      	it	eq
   1593a:	3d01      	subeq	r5, #1
   1593c:	d0f7      	beq.n	1592e <_read_r+0x1f2>
   1593e:	ea43 0306 	orr.w	r3, r3, r6
   15942:	4770      	bx	lr
   15944:	ea94 0f0c 	teq	r4, ip
   15948:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1594c:	bf18      	it	ne
   1594e:	ea95 0f0c 	teqne	r5, ip
   15952:	d00c      	beq.n	1596e <_read_r+0x232>
   15954:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   15958:	bf18      	it	ne
   1595a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1595e:	d1d1      	bne.n	15904 <_read_r+0x1c8>
   15960:	ea81 0103 	eor.w	r1, r1, r3
   15964:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15968:	f04f 0000 	mov.w	r0, #0
   1596c:	bd70      	pop	{r4, r5, r6, pc}
   1596e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   15972:	bf06      	itte	eq
   15974:	4610      	moveq	r0, r2
   15976:	4619      	moveq	r1, r3
   15978:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1597c:	d019      	beq.n	159b2 <_read_r+0x276>
   1597e:	ea94 0f0c 	teq	r4, ip
   15982:	d102      	bne.n	1598a <_read_r+0x24e>
   15984:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   15988:	d113      	bne.n	159b2 <_read_r+0x276>
   1598a:	ea95 0f0c 	teq	r5, ip
   1598e:	d105      	bne.n	1599c <_read_r+0x260>
   15990:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   15994:	bf1c      	itt	ne
   15996:	4610      	movne	r0, r2
   15998:	4619      	movne	r1, r3
   1599a:	d10a      	bne.n	159b2 <_read_r+0x276>
   1599c:	ea81 0103 	eor.w	r1, r1, r3
   159a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   159a4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   159a8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   159ac:	f04f 0000 	mov.w	r0, #0
   159b0:	bd70      	pop	{r4, r5, r6, pc}
   159b2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   159b6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   159ba:	bd70      	pop	{r4, r5, r6, pc}

000159bc <__aeabi_drsub>:
   159bc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   159c0:	e002      	b.n	159c8 <__adddf3>
   159c2:	bf00      	nop

000159c4 <__aeabi_dsub>:
   159c4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000159c8 <__adddf3>:
   159c8:	b530      	push	{r4, r5, lr}
   159ca:	ea4f 0441 	mov.w	r4, r1, lsl #1
   159ce:	ea4f 0543 	mov.w	r5, r3, lsl #1
   159d2:	ea94 0f05 	teq	r4, r5
   159d6:	bf08      	it	eq
   159d8:	ea90 0f02 	teqeq	r0, r2
   159dc:	bf1f      	itttt	ne
   159de:	ea54 0c00 	orrsne.w	ip, r4, r0
   159e2:	ea55 0c02 	orrsne.w	ip, r5, r2
   159e6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   159ea:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   159ee:	f000 80e2 	beq.w	15bb6 <__adddf3+0x1ee>
   159f2:	ea4f 5454 	mov.w	r4, r4, lsr #21
   159f6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   159fa:	bfb8      	it	lt
   159fc:	426d      	neglt	r5, r5
   159fe:	dd0c      	ble.n	15a1a <__adddf3+0x52>
   15a00:	442c      	add	r4, r5
   15a02:	ea80 0202 	eor.w	r2, r0, r2
   15a06:	ea81 0303 	eor.w	r3, r1, r3
   15a0a:	ea82 0000 	eor.w	r0, r2, r0
   15a0e:	ea83 0101 	eor.w	r1, r3, r1
   15a12:	ea80 0202 	eor.w	r2, r0, r2
   15a16:	ea81 0303 	eor.w	r3, r1, r3
   15a1a:	2d36      	cmp	r5, #54	; 0x36
   15a1c:	bf88      	it	hi
   15a1e:	bd30      	pophi	{r4, r5, pc}
   15a20:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   15a24:	ea4f 3101 	mov.w	r1, r1, lsl #12
   15a28:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   15a2c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   15a30:	d002      	beq.n	15a38 <__adddf3+0x70>
   15a32:	4240      	negs	r0, r0
   15a34:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   15a38:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   15a3c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   15a40:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   15a44:	d002      	beq.n	15a4c <__adddf3+0x84>
   15a46:	4252      	negs	r2, r2
   15a48:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   15a4c:	ea94 0f05 	teq	r4, r5
   15a50:	f000 80a7 	beq.w	15ba2 <__adddf3+0x1da>
   15a54:	f1a4 0401 	sub.w	r4, r4, #1
   15a58:	f1d5 0e20 	rsbs	lr, r5, #32
   15a5c:	db0d      	blt.n	15a7a <__adddf3+0xb2>
   15a5e:	fa02 fc0e 	lsl.w	ip, r2, lr
   15a62:	fa22 f205 	lsr.w	r2, r2, r5
   15a66:	1880      	adds	r0, r0, r2
   15a68:	f141 0100 	adc.w	r1, r1, #0
   15a6c:	fa03 f20e 	lsl.w	r2, r3, lr
   15a70:	1880      	adds	r0, r0, r2
   15a72:	fa43 f305 	asr.w	r3, r3, r5
   15a76:	4159      	adcs	r1, r3
   15a78:	e00e      	b.n	15a98 <__adddf3+0xd0>
   15a7a:	f1a5 0520 	sub.w	r5, r5, #32
   15a7e:	f10e 0e20 	add.w	lr, lr, #32
   15a82:	2a01      	cmp	r2, #1
   15a84:	fa03 fc0e 	lsl.w	ip, r3, lr
   15a88:	bf28      	it	cs
   15a8a:	f04c 0c02 	orrcs.w	ip, ip, #2
   15a8e:	fa43 f305 	asr.w	r3, r3, r5
   15a92:	18c0      	adds	r0, r0, r3
   15a94:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   15a98:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   15a9c:	d507      	bpl.n	15aae <__adddf3+0xe6>
   15a9e:	f04f 0e00 	mov.w	lr, #0
   15aa2:	f1dc 0c00 	rsbs	ip, ip, #0
   15aa6:	eb7e 0000 	sbcs.w	r0, lr, r0
   15aaa:	eb6e 0101 	sbc.w	r1, lr, r1
   15aae:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   15ab2:	d31b      	bcc.n	15aec <__adddf3+0x124>
   15ab4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   15ab8:	d30c      	bcc.n	15ad4 <__adddf3+0x10c>
   15aba:	0849      	lsrs	r1, r1, #1
   15abc:	ea5f 0030 	movs.w	r0, r0, rrx
   15ac0:	ea4f 0c3c 	mov.w	ip, ip, rrx
   15ac4:	f104 0401 	add.w	r4, r4, #1
   15ac8:	ea4f 5244 	mov.w	r2, r4, lsl #21
   15acc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   15ad0:	f080 809a 	bcs.w	15c08 <__adddf3+0x240>
   15ad4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   15ad8:	bf08      	it	eq
   15ada:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   15ade:	f150 0000 	adcs.w	r0, r0, #0
   15ae2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   15ae6:	ea41 0105 	orr.w	r1, r1, r5
   15aea:	bd30      	pop	{r4, r5, pc}
   15aec:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   15af0:	4140      	adcs	r0, r0
   15af2:	eb41 0101 	adc.w	r1, r1, r1
   15af6:	3c01      	subs	r4, #1
   15af8:	bf28      	it	cs
   15afa:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
   15afe:	d2e9      	bcs.n	15ad4 <__adddf3+0x10c>
   15b00:	f091 0f00 	teq	r1, #0
   15b04:	bf04      	itt	eq
   15b06:	4601      	moveq	r1, r0
   15b08:	2000      	moveq	r0, #0
   15b0a:	fab1 f381 	clz	r3, r1
   15b0e:	bf08      	it	eq
   15b10:	3320      	addeq	r3, #32
   15b12:	f1a3 030b 	sub.w	r3, r3, #11
   15b16:	f1b3 0220 	subs.w	r2, r3, #32
   15b1a:	da0c      	bge.n	15b36 <__adddf3+0x16e>
   15b1c:	320c      	adds	r2, #12
   15b1e:	dd08      	ble.n	15b32 <__adddf3+0x16a>
   15b20:	f102 0c14 	add.w	ip, r2, #20
   15b24:	f1c2 020c 	rsb	r2, r2, #12
   15b28:	fa01 f00c 	lsl.w	r0, r1, ip
   15b2c:	fa21 f102 	lsr.w	r1, r1, r2
   15b30:	e00c      	b.n	15b4c <__adddf3+0x184>
   15b32:	f102 0214 	add.w	r2, r2, #20
   15b36:	bfd8      	it	le
   15b38:	f1c2 0c20 	rsble	ip, r2, #32
   15b3c:	fa01 f102 	lsl.w	r1, r1, r2
   15b40:	fa20 fc0c 	lsr.w	ip, r0, ip
   15b44:	bfdc      	itt	le
   15b46:	ea41 010c 	orrle.w	r1, r1, ip
   15b4a:	4090      	lslle	r0, r2
   15b4c:	1ae4      	subs	r4, r4, r3
   15b4e:	bfa2      	ittt	ge
   15b50:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   15b54:	4329      	orrge	r1, r5
   15b56:	bd30      	popge	{r4, r5, pc}
   15b58:	ea6f 0404 	mvn.w	r4, r4
   15b5c:	3c1f      	subs	r4, #31
   15b5e:	da1c      	bge.n	15b9a <__adddf3+0x1d2>
   15b60:	340c      	adds	r4, #12
   15b62:	dc0e      	bgt.n	15b82 <__adddf3+0x1ba>
   15b64:	f104 0414 	add.w	r4, r4, #20
   15b68:	f1c4 0220 	rsb	r2, r4, #32
   15b6c:	fa20 f004 	lsr.w	r0, r0, r4
   15b70:	fa01 f302 	lsl.w	r3, r1, r2
   15b74:	ea40 0003 	orr.w	r0, r0, r3
   15b78:	fa21 f304 	lsr.w	r3, r1, r4
   15b7c:	ea45 0103 	orr.w	r1, r5, r3
   15b80:	bd30      	pop	{r4, r5, pc}
   15b82:	f1c4 040c 	rsb	r4, r4, #12
   15b86:	f1c4 0220 	rsb	r2, r4, #32
   15b8a:	fa20 f002 	lsr.w	r0, r0, r2
   15b8e:	fa01 f304 	lsl.w	r3, r1, r4
   15b92:	ea40 0003 	orr.w	r0, r0, r3
   15b96:	4629      	mov	r1, r5
   15b98:	bd30      	pop	{r4, r5, pc}
   15b9a:	fa21 f004 	lsr.w	r0, r1, r4
   15b9e:	4629      	mov	r1, r5
   15ba0:	bd30      	pop	{r4, r5, pc}
   15ba2:	f094 0f00 	teq	r4, #0
   15ba6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   15baa:	bf06      	itte	eq
   15bac:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   15bb0:	3401      	addeq	r4, #1
   15bb2:	3d01      	subne	r5, #1
   15bb4:	e74e      	b.n	15a54 <__adddf3+0x8c>
   15bb6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   15bba:	bf18      	it	ne
   15bbc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   15bc0:	d029      	beq.n	15c16 <__adddf3+0x24e>
   15bc2:	ea94 0f05 	teq	r4, r5
   15bc6:	bf08      	it	eq
   15bc8:	ea90 0f02 	teqeq	r0, r2
   15bcc:	d005      	beq.n	15bda <__adddf3+0x212>
   15bce:	ea54 0c00 	orrs.w	ip, r4, r0
   15bd2:	bf04      	itt	eq
   15bd4:	4619      	moveq	r1, r3
   15bd6:	4610      	moveq	r0, r2
   15bd8:	bd30      	pop	{r4, r5, pc}
   15bda:	ea91 0f03 	teq	r1, r3
   15bde:	bf1e      	ittt	ne
   15be0:	2100      	movne	r1, #0
   15be2:	2000      	movne	r0, #0
   15be4:	bd30      	popne	{r4, r5, pc}
   15be6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   15bea:	d105      	bne.n	15bf8 <__adddf3+0x230>
   15bec:	0040      	lsls	r0, r0, #1
   15bee:	4149      	adcs	r1, r1
   15bf0:	bf28      	it	cs
   15bf2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   15bf6:	bd30      	pop	{r4, r5, pc}
   15bf8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   15bfc:	bf3c      	itt	cc
   15bfe:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   15c02:	bd30      	popcc	{r4, r5, pc}
   15c04:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   15c08:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   15c0c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   15c10:	f04f 0000 	mov.w	r0, #0
   15c14:	bd30      	pop	{r4, r5, pc}
   15c16:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   15c1a:	bf1a      	itte	ne
   15c1c:	4619      	movne	r1, r3
   15c1e:	4610      	movne	r0, r2
   15c20:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   15c24:	bf1c      	itt	ne
   15c26:	460b      	movne	r3, r1
   15c28:	4602      	movne	r2, r0
   15c2a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   15c2e:	bf06      	itte	eq
   15c30:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   15c34:	ea91 0f03 	teqeq	r1, r3
   15c38:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   15c3c:	bd30      	pop	{r4, r5, pc}
   15c3e:	bf00      	nop

00015c40 <__aeabi_ui2d>:
   15c40:	f090 0f00 	teq	r0, #0
   15c44:	bf04      	itt	eq
   15c46:	2100      	moveq	r1, #0
   15c48:	4770      	bxeq	lr
   15c4a:	b530      	push	{r4, r5, lr}
   15c4c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   15c50:	f104 0432 	add.w	r4, r4, #50	; 0x32
   15c54:	f04f 0500 	mov.w	r5, #0
   15c58:	f04f 0100 	mov.w	r1, #0
   15c5c:	e750      	b.n	15b00 <__adddf3+0x138>
   15c5e:	bf00      	nop

00015c60 <__aeabi_i2d>:
   15c60:	f090 0f00 	teq	r0, #0
   15c64:	bf04      	itt	eq
   15c66:	2100      	moveq	r1, #0
   15c68:	4770      	bxeq	lr
   15c6a:	b530      	push	{r4, r5, lr}
   15c6c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   15c70:	f104 0432 	add.w	r4, r4, #50	; 0x32
   15c74:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   15c78:	bf48      	it	mi
   15c7a:	4240      	negmi	r0, r0
   15c7c:	f04f 0100 	mov.w	r1, #0
   15c80:	e73e      	b.n	15b00 <__adddf3+0x138>
   15c82:	bf00      	nop

00015c84 <__aeabi_f2d>:
   15c84:	0042      	lsls	r2, r0, #1
   15c86:	ea4f 01e2 	mov.w	r1, r2, asr #3
   15c8a:	ea4f 0131 	mov.w	r1, r1, rrx
   15c8e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   15c92:	bf1f      	itttt	ne
   15c94:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   15c98:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   15c9c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   15ca0:	4770      	bxne	lr
   15ca2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
   15ca6:	bf08      	it	eq
   15ca8:	4770      	bxeq	lr
   15caa:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
   15cae:	bf04      	itt	eq
   15cb0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
   15cb4:	4770      	bxeq	lr
   15cb6:	b530      	push	{r4, r5, lr}
   15cb8:	f44f 7460 	mov.w	r4, #896	; 0x380
   15cbc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   15cc0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   15cc4:	e71c      	b.n	15b00 <__adddf3+0x138>
   15cc6:	bf00      	nop

00015cc8 <__aeabi_ul2d>:
   15cc8:	ea50 0201 	orrs.w	r2, r0, r1
   15ccc:	bf08      	it	eq
   15cce:	4770      	bxeq	lr
   15cd0:	b530      	push	{r4, r5, lr}
   15cd2:	f04f 0500 	mov.w	r5, #0
   15cd6:	e00a      	b.n	15cee <__aeabi_l2d+0x16>

00015cd8 <__aeabi_l2d>:
   15cd8:	ea50 0201 	orrs.w	r2, r0, r1
   15cdc:	bf08      	it	eq
   15cde:	4770      	bxeq	lr
   15ce0:	b530      	push	{r4, r5, lr}
   15ce2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   15ce6:	d502      	bpl.n	15cee <__aeabi_l2d+0x16>
   15ce8:	4240      	negs	r0, r0
   15cea:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   15cee:	f44f 6480 	mov.w	r4, #1024	; 0x400
   15cf2:	f104 0432 	add.w	r4, r4, #50	; 0x32
   15cf6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   15cfa:	f43f aed8 	beq.w	15aae <__adddf3+0xe6>
   15cfe:	f04f 0203 	mov.w	r2, #3
   15d02:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   15d06:	bf18      	it	ne
   15d08:	3203      	addne	r2, #3
   15d0a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   15d0e:	bf18      	it	ne
   15d10:	3203      	addne	r2, #3
   15d12:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   15d16:	f1c2 0320 	rsb	r3, r2, #32
   15d1a:	fa00 fc03 	lsl.w	ip, r0, r3
   15d1e:	fa20 f002 	lsr.w	r0, r0, r2
   15d22:	fa01 fe03 	lsl.w	lr, r1, r3
   15d26:	ea40 000e 	orr.w	r0, r0, lr
   15d2a:	fa21 f102 	lsr.w	r1, r1, r2
   15d2e:	4414      	add	r4, r2
   15d30:	e6bd      	b.n	15aae <__adddf3+0xe6>
   15d32:	bf00      	nop

00015d34 <__aeabi_dmul>:
   15d34:	b570      	push	{r4, r5, r6, lr}
   15d36:	f04f 0cff 	mov.w	ip, #255	; 0xff
   15d3a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   15d3e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   15d42:	bf1d      	ittte	ne
   15d44:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   15d48:	ea94 0f0c 	teqne	r4, ip
   15d4c:	ea95 0f0c 	teqne	r5, ip
   15d50:	f000 f8de 	bleq	15f10 <__aeabi_dmul+0x1dc>
   15d54:	442c      	add	r4, r5
   15d56:	ea81 0603 	eor.w	r6, r1, r3
   15d5a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   15d5e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   15d62:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   15d66:	bf18      	it	ne
   15d68:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   15d6c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   15d70:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   15d74:	d038      	beq.n	15de8 <__aeabi_dmul+0xb4>
   15d76:	fba0 ce02 	umull	ip, lr, r0, r2
   15d7a:	f04f 0500 	mov.w	r5, #0
   15d7e:	fbe1 e502 	umlal	lr, r5, r1, r2
   15d82:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   15d86:	fbe0 e503 	umlal	lr, r5, r0, r3
   15d8a:	f04f 0600 	mov.w	r6, #0
   15d8e:	fbe1 5603 	umlal	r5, r6, r1, r3
   15d92:	f09c 0f00 	teq	ip, #0
   15d96:	bf18      	it	ne
   15d98:	f04e 0e01 	orrne.w	lr, lr, #1
   15d9c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   15da0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   15da4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   15da8:	d204      	bcs.n	15db4 <__aeabi_dmul+0x80>
   15daa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   15dae:	416d      	adcs	r5, r5
   15db0:	eb46 0606 	adc.w	r6, r6, r6
   15db4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   15db8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   15dbc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   15dc0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   15dc4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   15dc8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   15dcc:	bf88      	it	hi
   15dce:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   15dd2:	d81e      	bhi.n	15e12 <__aeabi_dmul+0xde>
   15dd4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   15dd8:	bf08      	it	eq
   15dda:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   15dde:	f150 0000 	adcs.w	r0, r0, #0
   15de2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   15de6:	bd70      	pop	{r4, r5, r6, pc}
   15de8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   15dec:	ea46 0101 	orr.w	r1, r6, r1
   15df0:	ea40 0002 	orr.w	r0, r0, r2
   15df4:	ea81 0103 	eor.w	r1, r1, r3
   15df8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   15dfc:	bfc2      	ittt	gt
   15dfe:	ebd4 050c 	rsbsgt	r5, r4, ip
   15e02:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   15e06:	bd70      	popgt	{r4, r5, r6, pc}
   15e08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   15e0c:	f04f 0e00 	mov.w	lr, #0
   15e10:	3c01      	subs	r4, #1
   15e12:	f300 80ab 	bgt.w	15f6c <__aeabi_dmul+0x238>
   15e16:	f114 0f36 	cmn.w	r4, #54	; 0x36
   15e1a:	bfde      	ittt	le
   15e1c:	2000      	movle	r0, #0
   15e1e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   15e22:	bd70      	pople	{r4, r5, r6, pc}
   15e24:	f1c4 0400 	rsb	r4, r4, #0
   15e28:	3c20      	subs	r4, #32
   15e2a:	da35      	bge.n	15e98 <__aeabi_dmul+0x164>
   15e2c:	340c      	adds	r4, #12
   15e2e:	dc1b      	bgt.n	15e68 <__aeabi_dmul+0x134>
   15e30:	f104 0414 	add.w	r4, r4, #20
   15e34:	f1c4 0520 	rsb	r5, r4, #32
   15e38:	fa00 f305 	lsl.w	r3, r0, r5
   15e3c:	fa20 f004 	lsr.w	r0, r0, r4
   15e40:	fa01 f205 	lsl.w	r2, r1, r5
   15e44:	ea40 0002 	orr.w	r0, r0, r2
   15e48:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   15e4c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   15e50:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   15e54:	fa21 f604 	lsr.w	r6, r1, r4
   15e58:	eb42 0106 	adc.w	r1, r2, r6
   15e5c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   15e60:	bf08      	it	eq
   15e62:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   15e66:	bd70      	pop	{r4, r5, r6, pc}
   15e68:	f1c4 040c 	rsb	r4, r4, #12
   15e6c:	f1c4 0520 	rsb	r5, r4, #32
   15e70:	fa00 f304 	lsl.w	r3, r0, r4
   15e74:	fa20 f005 	lsr.w	r0, r0, r5
   15e78:	fa01 f204 	lsl.w	r2, r1, r4
   15e7c:	ea40 0002 	orr.w	r0, r0, r2
   15e80:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15e84:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   15e88:	f141 0100 	adc.w	r1, r1, #0
   15e8c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   15e90:	bf08      	it	eq
   15e92:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   15e96:	bd70      	pop	{r4, r5, r6, pc}
   15e98:	f1c4 0520 	rsb	r5, r4, #32
   15e9c:	fa00 f205 	lsl.w	r2, r0, r5
   15ea0:	ea4e 0e02 	orr.w	lr, lr, r2
   15ea4:	fa20 f304 	lsr.w	r3, r0, r4
   15ea8:	fa01 f205 	lsl.w	r2, r1, r5
   15eac:	ea43 0302 	orr.w	r3, r3, r2
   15eb0:	fa21 f004 	lsr.w	r0, r1, r4
   15eb4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15eb8:	fa21 f204 	lsr.w	r2, r1, r4
   15ebc:	ea20 0002 	bic.w	r0, r0, r2
   15ec0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   15ec4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   15ec8:	bf08      	it	eq
   15eca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   15ece:	bd70      	pop	{r4, r5, r6, pc}
   15ed0:	f094 0f00 	teq	r4, #0
   15ed4:	d10f      	bne.n	15ef6 <__aeabi_dmul+0x1c2>
   15ed6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   15eda:	0040      	lsls	r0, r0, #1
   15edc:	eb41 0101 	adc.w	r1, r1, r1
   15ee0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   15ee4:	bf08      	it	eq
   15ee6:	3c01      	subeq	r4, #1
   15ee8:	d0f7      	beq.n	15eda <__aeabi_dmul+0x1a6>
   15eea:	ea41 0106 	orr.w	r1, r1, r6
   15eee:	f095 0f00 	teq	r5, #0
   15ef2:	bf18      	it	ne
   15ef4:	4770      	bxne	lr
   15ef6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   15efa:	0052      	lsls	r2, r2, #1
   15efc:	eb43 0303 	adc.w	r3, r3, r3
   15f00:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   15f04:	bf08      	it	eq
   15f06:	3d01      	subeq	r5, #1
   15f08:	d0f7      	beq.n	15efa <__aeabi_dmul+0x1c6>
   15f0a:	ea43 0306 	orr.w	r3, r3, r6
   15f0e:	4770      	bx	lr
   15f10:	ea94 0f0c 	teq	r4, ip
   15f14:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   15f18:	bf18      	it	ne
   15f1a:	ea95 0f0c 	teqne	r5, ip
   15f1e:	d00c      	beq.n	15f3a <__aeabi_dmul+0x206>
   15f20:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   15f24:	bf18      	it	ne
   15f26:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   15f2a:	d1d1      	bne.n	15ed0 <__aeabi_dmul+0x19c>
   15f2c:	ea81 0103 	eor.w	r1, r1, r3
   15f30:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15f34:	f04f 0000 	mov.w	r0, #0
   15f38:	bd70      	pop	{r4, r5, r6, pc}
   15f3a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   15f3e:	bf06      	itte	eq
   15f40:	4610      	moveq	r0, r2
   15f42:	4619      	moveq	r1, r3
   15f44:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   15f48:	d019      	beq.n	15f7e <__aeabi_dmul+0x24a>
   15f4a:	ea94 0f0c 	teq	r4, ip
   15f4e:	d102      	bne.n	15f56 <__aeabi_dmul+0x222>
   15f50:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   15f54:	d113      	bne.n	15f7e <__aeabi_dmul+0x24a>
   15f56:	ea95 0f0c 	teq	r5, ip
   15f5a:	d105      	bne.n	15f68 <__aeabi_dmul+0x234>
   15f5c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   15f60:	bf1c      	itt	ne
   15f62:	4610      	movne	r0, r2
   15f64:	4619      	movne	r1, r3
   15f66:	d10a      	bne.n	15f7e <__aeabi_dmul+0x24a>
   15f68:	ea81 0103 	eor.w	r1, r1, r3
   15f6c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15f70:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   15f74:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   15f78:	f04f 0000 	mov.w	r0, #0
   15f7c:	bd70      	pop	{r4, r5, r6, pc}
   15f7e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   15f82:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   15f86:	bd70      	pop	{r4, r5, r6, pc}

00015f88 <__aeabi_ddiv>:
   15f88:	b570      	push	{r4, r5, r6, lr}
   15f8a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   15f8e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   15f92:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   15f96:	bf1d      	ittte	ne
   15f98:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   15f9c:	ea94 0f0c 	teqne	r4, ip
   15fa0:	ea95 0f0c 	teqne	r5, ip
   15fa4:	f000 f8a7 	bleq	160f6 <__aeabi_ddiv+0x16e>
   15fa8:	eba4 0405 	sub.w	r4, r4, r5
   15fac:	ea81 0e03 	eor.w	lr, r1, r3
   15fb0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   15fb4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   15fb8:	f000 8088 	beq.w	160cc <__aeabi_ddiv+0x144>
   15fbc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   15fc0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   15fc4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   15fc8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   15fcc:	ea4f 2202 	mov.w	r2, r2, lsl #8
   15fd0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   15fd4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   15fd8:	ea4f 2600 	mov.w	r6, r0, lsl #8
   15fdc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   15fe0:	429d      	cmp	r5, r3
   15fe2:	bf08      	it	eq
   15fe4:	4296      	cmpeq	r6, r2
   15fe6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   15fea:	f504 7440 	add.w	r4, r4, #768	; 0x300
   15fee:	d202      	bcs.n	15ff6 <__aeabi_ddiv+0x6e>
   15ff0:	085b      	lsrs	r3, r3, #1
   15ff2:	ea4f 0232 	mov.w	r2, r2, rrx
   15ff6:	1ab6      	subs	r6, r6, r2
   15ff8:	eb65 0503 	sbc.w	r5, r5, r3
   15ffc:	085b      	lsrs	r3, r3, #1
   15ffe:	ea4f 0232 	mov.w	r2, r2, rrx
   16002:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   16006:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   1600a:	ebb6 0e02 	subs.w	lr, r6, r2
   1600e:	eb75 0e03 	sbcs.w	lr, r5, r3
   16012:	bf22      	ittt	cs
   16014:	1ab6      	subcs	r6, r6, r2
   16016:	4675      	movcs	r5, lr
   16018:	ea40 000c 	orrcs.w	r0, r0, ip
   1601c:	085b      	lsrs	r3, r3, #1
   1601e:	ea4f 0232 	mov.w	r2, r2, rrx
   16022:	ebb6 0e02 	subs.w	lr, r6, r2
   16026:	eb75 0e03 	sbcs.w	lr, r5, r3
   1602a:	bf22      	ittt	cs
   1602c:	1ab6      	subcs	r6, r6, r2
   1602e:	4675      	movcs	r5, lr
   16030:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   16034:	085b      	lsrs	r3, r3, #1
   16036:	ea4f 0232 	mov.w	r2, r2, rrx
   1603a:	ebb6 0e02 	subs.w	lr, r6, r2
   1603e:	eb75 0e03 	sbcs.w	lr, r5, r3
   16042:	bf22      	ittt	cs
   16044:	1ab6      	subcs	r6, r6, r2
   16046:	4675      	movcs	r5, lr
   16048:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1604c:	085b      	lsrs	r3, r3, #1
   1604e:	ea4f 0232 	mov.w	r2, r2, rrx
   16052:	ebb6 0e02 	subs.w	lr, r6, r2
   16056:	eb75 0e03 	sbcs.w	lr, r5, r3
   1605a:	bf22      	ittt	cs
   1605c:	1ab6      	subcs	r6, r6, r2
   1605e:	4675      	movcs	r5, lr
   16060:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   16064:	ea55 0e06 	orrs.w	lr, r5, r6
   16068:	d018      	beq.n	1609c <__aeabi_ddiv+0x114>
   1606a:	ea4f 1505 	mov.w	r5, r5, lsl #4
   1606e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   16072:	ea4f 1606 	mov.w	r6, r6, lsl #4
   16076:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   1607a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   1607e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   16082:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   16086:	d1c0      	bne.n	1600a <__aeabi_ddiv+0x82>
   16088:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1608c:	d10b      	bne.n	160a6 <__aeabi_ddiv+0x11e>
   1608e:	ea41 0100 	orr.w	r1, r1, r0
   16092:	f04f 0000 	mov.w	r0, #0
   16096:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   1609a:	e7b6      	b.n	1600a <__aeabi_ddiv+0x82>
   1609c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   160a0:	bf04      	itt	eq
   160a2:	4301      	orreq	r1, r0
   160a4:	2000      	moveq	r0, #0
   160a6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   160aa:	bf88      	it	hi
   160ac:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   160b0:	f63f aeaf 	bhi.w	15e12 <__aeabi_dmul+0xde>
   160b4:	ebb5 0c03 	subs.w	ip, r5, r3
   160b8:	bf04      	itt	eq
   160ba:	ebb6 0c02 	subseq.w	ip, r6, r2
   160be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   160c2:	f150 0000 	adcs.w	r0, r0, #0
   160c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   160ca:	bd70      	pop	{r4, r5, r6, pc}
   160cc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   160d0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   160d4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   160d8:	bfc2      	ittt	gt
   160da:	ebd4 050c 	rsbsgt	r5, r4, ip
   160de:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   160e2:	bd70      	popgt	{r4, r5, r6, pc}
   160e4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   160e8:	f04f 0e00 	mov.w	lr, #0
   160ec:	3c01      	subs	r4, #1
   160ee:	e690      	b.n	15e12 <__aeabi_dmul+0xde>
   160f0:	ea45 0e06 	orr.w	lr, r5, r6
   160f4:	e68d      	b.n	15e12 <__aeabi_dmul+0xde>
   160f6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   160fa:	ea94 0f0c 	teq	r4, ip
   160fe:	bf08      	it	eq
   16100:	ea95 0f0c 	teqeq	r5, ip
   16104:	f43f af3b 	beq.w	15f7e <__aeabi_dmul+0x24a>
   16108:	ea94 0f0c 	teq	r4, ip
   1610c:	d10a      	bne.n	16124 <__aeabi_ddiv+0x19c>
   1610e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   16112:	f47f af34 	bne.w	15f7e <__aeabi_dmul+0x24a>
   16116:	ea95 0f0c 	teq	r5, ip
   1611a:	f47f af25 	bne.w	15f68 <__aeabi_dmul+0x234>
   1611e:	4610      	mov	r0, r2
   16120:	4619      	mov	r1, r3
   16122:	e72c      	b.n	15f7e <__aeabi_dmul+0x24a>
   16124:	ea95 0f0c 	teq	r5, ip
   16128:	d106      	bne.n	16138 <__aeabi_ddiv+0x1b0>
   1612a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1612e:	f43f aefd 	beq.w	15f2c <__aeabi_dmul+0x1f8>
   16132:	4610      	mov	r0, r2
   16134:	4619      	mov	r1, r3
   16136:	e722      	b.n	15f7e <__aeabi_dmul+0x24a>
   16138:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1613c:	bf18      	it	ne
   1613e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   16142:	f47f aec5 	bne.w	15ed0 <__aeabi_dmul+0x19c>
   16146:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   1614a:	f47f af0d 	bne.w	15f68 <__aeabi_dmul+0x234>
   1614e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   16152:	f47f aeeb 	bne.w	15f2c <__aeabi_dmul+0x1f8>
   16156:	e712      	b.n	15f7e <__aeabi_dmul+0x24a>

00016158 <__gedf2>:
   16158:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   1615c:	e006      	b.n	1616c <__cmpdf2+0x4>
   1615e:	bf00      	nop

00016160 <__ledf2>:
   16160:	f04f 0c01 	mov.w	ip, #1
   16164:	e002      	b.n	1616c <__cmpdf2+0x4>
   16166:	bf00      	nop

00016168 <__cmpdf2>:
   16168:	f04f 0c01 	mov.w	ip, #1
   1616c:	f84d cd04 	str.w	ip, [sp, #-4]!
   16170:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   16174:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   16178:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1617c:	bf18      	it	ne
   1617e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   16182:	d01b      	beq.n	161bc <__cmpdf2+0x54>
   16184:	b001      	add	sp, #4
   16186:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   1618a:	bf0c      	ite	eq
   1618c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   16190:	ea91 0f03 	teqne	r1, r3
   16194:	bf02      	ittt	eq
   16196:	ea90 0f02 	teqeq	r0, r2
   1619a:	2000      	moveq	r0, #0
   1619c:	4770      	bxeq	lr
   1619e:	f110 0f00 	cmn.w	r0, #0
   161a2:	ea91 0f03 	teq	r1, r3
   161a6:	bf58      	it	pl
   161a8:	4299      	cmppl	r1, r3
   161aa:	bf08      	it	eq
   161ac:	4290      	cmpeq	r0, r2
   161ae:	bf2c      	ite	cs
   161b0:	17d8      	asrcs	r0, r3, #31
   161b2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   161b6:	f040 0001 	orr.w	r0, r0, #1
   161ba:	4770      	bx	lr
   161bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   161c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   161c4:	d102      	bne.n	161cc <__cmpdf2+0x64>
   161c6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   161ca:	d107      	bne.n	161dc <__cmpdf2+0x74>
   161cc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   161d0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   161d4:	d1d6      	bne.n	16184 <__cmpdf2+0x1c>
   161d6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   161da:	d0d3      	beq.n	16184 <__cmpdf2+0x1c>
   161dc:	f85d 0b04 	ldr.w	r0, [sp], #4
   161e0:	4770      	bx	lr
   161e2:	bf00      	nop

000161e4 <__aeabi_cdrcmple>:
   161e4:	4684      	mov	ip, r0
   161e6:	4610      	mov	r0, r2
   161e8:	4662      	mov	r2, ip
   161ea:	468c      	mov	ip, r1
   161ec:	4619      	mov	r1, r3
   161ee:	4663      	mov	r3, ip
   161f0:	e000      	b.n	161f4 <__aeabi_cdcmpeq>
   161f2:	bf00      	nop

000161f4 <__aeabi_cdcmpeq>:
   161f4:	b501      	push	{r0, lr}
   161f6:	f7ff ffb7 	bl	16168 <__cmpdf2>
   161fa:	2800      	cmp	r0, #0
   161fc:	bf48      	it	mi
   161fe:	f110 0f00 	cmnmi.w	r0, #0
   16202:	bd01      	pop	{r0, pc}

00016204 <__aeabi_dcmpeq>:
   16204:	f84d ed08 	str.w	lr, [sp, #-8]!
   16208:	f7ff fff4 	bl	161f4 <__aeabi_cdcmpeq>
   1620c:	bf0c      	ite	eq
   1620e:	2001      	moveq	r0, #1
   16210:	2000      	movne	r0, #0
   16212:	f85d fb08 	ldr.w	pc, [sp], #8
   16216:	bf00      	nop

00016218 <__aeabi_dcmplt>:
   16218:	f84d ed08 	str.w	lr, [sp, #-8]!
   1621c:	f7ff ffea 	bl	161f4 <__aeabi_cdcmpeq>
   16220:	bf34      	ite	cc
   16222:	2001      	movcc	r0, #1
   16224:	2000      	movcs	r0, #0
   16226:	f85d fb08 	ldr.w	pc, [sp], #8
   1622a:	bf00      	nop

0001622c <__aeabi_dcmple>:
   1622c:	f84d ed08 	str.w	lr, [sp, #-8]!
   16230:	f7ff ffe0 	bl	161f4 <__aeabi_cdcmpeq>
   16234:	bf94      	ite	ls
   16236:	2001      	movls	r0, #1
   16238:	2000      	movhi	r0, #0
   1623a:	f85d fb08 	ldr.w	pc, [sp], #8
   1623e:	bf00      	nop

00016240 <__aeabi_dcmpge>:
   16240:	f84d ed08 	str.w	lr, [sp, #-8]!
   16244:	f7ff ffce 	bl	161e4 <__aeabi_cdrcmple>
   16248:	bf94      	ite	ls
   1624a:	2001      	movls	r0, #1
   1624c:	2000      	movhi	r0, #0
   1624e:	f85d fb08 	ldr.w	pc, [sp], #8
   16252:	bf00      	nop

00016254 <__aeabi_dcmpgt>:
   16254:	f84d ed08 	str.w	lr, [sp, #-8]!
   16258:	f7ff ffc4 	bl	161e4 <__aeabi_cdrcmple>
   1625c:	bf34      	ite	cc
   1625e:	2001      	movcc	r0, #1
   16260:	2000      	movcs	r0, #0
   16262:	f85d fb08 	ldr.w	pc, [sp], #8
   16266:	bf00      	nop

00016268 <__aeabi_d2iz>:
   16268:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1626c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   16270:	d215      	bcs.n	1629e <__aeabi_d2iz+0x36>
   16272:	d511      	bpl.n	16298 <__aeabi_d2iz+0x30>
   16274:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   16278:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1627c:	d912      	bls.n	162a4 <__aeabi_d2iz+0x3c>
   1627e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   16282:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   16286:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1628a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1628e:	fa23 f002 	lsr.w	r0, r3, r2
   16292:	bf18      	it	ne
   16294:	4240      	negne	r0, r0
   16296:	4770      	bx	lr
   16298:	f04f 0000 	mov.w	r0, #0
   1629c:	4770      	bx	lr
   1629e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   162a2:	d105      	bne.n	162b0 <__aeabi_d2iz+0x48>
   162a4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   162a8:	bf08      	it	eq
   162aa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   162ae:	4770      	bx	lr
   162b0:	f04f 0000 	mov.w	r0, #0
   162b4:	4770      	bx	lr
   162b6:	bf00      	nop

000162b8 <__aeabi_uldivmod>:
   162b8:	b953      	cbnz	r3, 162d0 <__aeabi_uldivmod+0x18>
   162ba:	b94a      	cbnz	r2, 162d0 <__aeabi_uldivmod+0x18>
   162bc:	2900      	cmp	r1, #0
   162be:	bf08      	it	eq
   162c0:	2800      	cmpeq	r0, #0
   162c2:	bf1c      	itt	ne
   162c4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   162c8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   162cc:	f000 b976 	b.w	165bc <__aeabi_idiv0>
   162d0:	f1ad 0c08 	sub.w	ip, sp, #8
   162d4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   162d8:	f000 f806 	bl	162e8 <__udivmoddi4>
   162dc:	f8dd e004 	ldr.w	lr, [sp, #4]
   162e0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   162e4:	b004      	add	sp, #16
   162e6:	4770      	bx	lr

000162e8 <__udivmoddi4>:
   162e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   162ec:	9e08      	ldr	r6, [sp, #32]
   162ee:	460d      	mov	r5, r1
   162f0:	4604      	mov	r4, r0
   162f2:	4688      	mov	r8, r1
   162f4:	2b00      	cmp	r3, #0
   162f6:	d14d      	bne.n	16394 <__udivmoddi4+0xac>
   162f8:	428a      	cmp	r2, r1
   162fa:	4694      	mov	ip, r2
   162fc:	d968      	bls.n	163d0 <__udivmoddi4+0xe8>
   162fe:	fab2 f282 	clz	r2, r2
   16302:	b152      	cbz	r2, 1631a <__udivmoddi4+0x32>
   16304:	fa01 f302 	lsl.w	r3, r1, r2
   16308:	f1c2 0120 	rsb	r1, r2, #32
   1630c:	fa20 f101 	lsr.w	r1, r0, r1
   16310:	fa0c fc02 	lsl.w	ip, ip, r2
   16314:	ea41 0803 	orr.w	r8, r1, r3
   16318:	4094      	lsls	r4, r2
   1631a:	ea4f 411c 	mov.w	r1, ip, lsr #16
   1631e:	fbb8 f7f1 	udiv	r7, r8, r1
   16322:	fa1f fe8c 	uxth.w	lr, ip
   16326:	fb01 8817 	mls	r8, r1, r7, r8
   1632a:	fb07 f00e 	mul.w	r0, r7, lr
   1632e:	0c23      	lsrs	r3, r4, #16
   16330:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   16334:	4298      	cmp	r0, r3
   16336:	d90a      	bls.n	1634e <__udivmoddi4+0x66>
   16338:	eb1c 0303 	adds.w	r3, ip, r3
   1633c:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
   16340:	f080 811e 	bcs.w	16580 <__udivmoddi4+0x298>
   16344:	4298      	cmp	r0, r3
   16346:	f240 811b 	bls.w	16580 <__udivmoddi4+0x298>
   1634a:	3f02      	subs	r7, #2
   1634c:	4463      	add	r3, ip
   1634e:	1a1b      	subs	r3, r3, r0
   16350:	fbb3 f0f1 	udiv	r0, r3, r1
   16354:	fb01 3310 	mls	r3, r1, r0, r3
   16358:	fb00 fe0e 	mul.w	lr, r0, lr
   1635c:	b2a4      	uxth	r4, r4
   1635e:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   16362:	45a6      	cmp	lr, r4
   16364:	d90a      	bls.n	1637c <__udivmoddi4+0x94>
   16366:	eb1c 0404 	adds.w	r4, ip, r4
   1636a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1636e:	f080 8109 	bcs.w	16584 <__udivmoddi4+0x29c>
   16372:	45a6      	cmp	lr, r4
   16374:	f240 8106 	bls.w	16584 <__udivmoddi4+0x29c>
   16378:	4464      	add	r4, ip
   1637a:	3802      	subs	r0, #2
   1637c:	2100      	movs	r1, #0
   1637e:	eba4 040e 	sub.w	r4, r4, lr
   16382:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
   16386:	b11e      	cbz	r6, 16390 <__udivmoddi4+0xa8>
   16388:	2300      	movs	r3, #0
   1638a:	40d4      	lsrs	r4, r2
   1638c:	e9c6 4300 	strd	r4, r3, [r6]
   16390:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16394:	428b      	cmp	r3, r1
   16396:	d908      	bls.n	163aa <__udivmoddi4+0xc2>
   16398:	2e00      	cmp	r6, #0
   1639a:	f000 80ee 	beq.w	1657a <__udivmoddi4+0x292>
   1639e:	2100      	movs	r1, #0
   163a0:	e9c6 0500 	strd	r0, r5, [r6]
   163a4:	4608      	mov	r0, r1
   163a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   163aa:	fab3 f183 	clz	r1, r3
   163ae:	2900      	cmp	r1, #0
   163b0:	d14a      	bne.n	16448 <__udivmoddi4+0x160>
   163b2:	42ab      	cmp	r3, r5
   163b4:	d302      	bcc.n	163bc <__udivmoddi4+0xd4>
   163b6:	4282      	cmp	r2, r0
   163b8:	f200 80fc 	bhi.w	165b4 <__udivmoddi4+0x2cc>
   163bc:	1a84      	subs	r4, r0, r2
   163be:	eb65 0303 	sbc.w	r3, r5, r3
   163c2:	2001      	movs	r0, #1
   163c4:	4698      	mov	r8, r3
   163c6:	2e00      	cmp	r6, #0
   163c8:	d0e2      	beq.n	16390 <__udivmoddi4+0xa8>
   163ca:	e9c6 4800 	strd	r4, r8, [r6]
   163ce:	e7df      	b.n	16390 <__udivmoddi4+0xa8>
   163d0:	b902      	cbnz	r2, 163d4 <__udivmoddi4+0xec>
   163d2:	deff      	udf	#255	; 0xff
   163d4:	fab2 f282 	clz	r2, r2
   163d8:	2a00      	cmp	r2, #0
   163da:	f040 8091 	bne.w	16500 <__udivmoddi4+0x218>
   163de:	eba1 000c 	sub.w	r0, r1, ip
   163e2:	2101      	movs	r1, #1
   163e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
   163e8:	fa1f fe8c 	uxth.w	lr, ip
   163ec:	fbb0 f3f7 	udiv	r3, r0, r7
   163f0:	fb07 0013 	mls	r0, r7, r3, r0
   163f4:	0c25      	lsrs	r5, r4, #16
   163f6:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   163fa:	fb0e f003 	mul.w	r0, lr, r3
   163fe:	42a8      	cmp	r0, r5
   16400:	d908      	bls.n	16414 <__udivmoddi4+0x12c>
   16402:	eb1c 0505 	adds.w	r5, ip, r5
   16406:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   1640a:	d202      	bcs.n	16412 <__udivmoddi4+0x12a>
   1640c:	42a8      	cmp	r0, r5
   1640e:	f200 80ce 	bhi.w	165ae <__udivmoddi4+0x2c6>
   16412:	4643      	mov	r3, r8
   16414:	1a2d      	subs	r5, r5, r0
   16416:	fbb5 f0f7 	udiv	r0, r5, r7
   1641a:	fb07 5510 	mls	r5, r7, r0, r5
   1641e:	fb0e fe00 	mul.w	lr, lr, r0
   16422:	b2a4      	uxth	r4, r4
   16424:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   16428:	45a6      	cmp	lr, r4
   1642a:	d908      	bls.n	1643e <__udivmoddi4+0x156>
   1642c:	eb1c 0404 	adds.w	r4, ip, r4
   16430:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
   16434:	d202      	bcs.n	1643c <__udivmoddi4+0x154>
   16436:	45a6      	cmp	lr, r4
   16438:	f200 80b6 	bhi.w	165a8 <__udivmoddi4+0x2c0>
   1643c:	4628      	mov	r0, r5
   1643e:	eba4 040e 	sub.w	r4, r4, lr
   16442:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   16446:	e79e      	b.n	16386 <__udivmoddi4+0x9e>
   16448:	f1c1 0720 	rsb	r7, r1, #32
   1644c:	408b      	lsls	r3, r1
   1644e:	fa22 fc07 	lsr.w	ip, r2, r7
   16452:	ea4c 0c03 	orr.w	ip, ip, r3
   16456:	fa25 fa07 	lsr.w	sl, r5, r7
   1645a:	ea4f 491c 	mov.w	r9, ip, lsr #16
   1645e:	fbba f8f9 	udiv	r8, sl, r9
   16462:	fa20 f307 	lsr.w	r3, r0, r7
   16466:	fb09 aa18 	mls	sl, r9, r8, sl
   1646a:	408d      	lsls	r5, r1
   1646c:	fa1f fe8c 	uxth.w	lr, ip
   16470:	431d      	orrs	r5, r3
   16472:	fa00 f301 	lsl.w	r3, r0, r1
   16476:	fb08 f00e 	mul.w	r0, r8, lr
   1647a:	0c2c      	lsrs	r4, r5, #16
   1647c:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
   16480:	42a0      	cmp	r0, r4
   16482:	fa02 f201 	lsl.w	r2, r2, r1
   16486:	d90b      	bls.n	164a0 <__udivmoddi4+0x1b8>
   16488:	eb1c 0404 	adds.w	r4, ip, r4
   1648c:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
   16490:	f080 8088 	bcs.w	165a4 <__udivmoddi4+0x2bc>
   16494:	42a0      	cmp	r0, r4
   16496:	f240 8085 	bls.w	165a4 <__udivmoddi4+0x2bc>
   1649a:	f1a8 0802 	sub.w	r8, r8, #2
   1649e:	4464      	add	r4, ip
   164a0:	1a24      	subs	r4, r4, r0
   164a2:	fbb4 f0f9 	udiv	r0, r4, r9
   164a6:	fb09 4410 	mls	r4, r9, r0, r4
   164aa:	fb00 fe0e 	mul.w	lr, r0, lr
   164ae:	b2ad      	uxth	r5, r5
   164b0:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
   164b4:	45a6      	cmp	lr, r4
   164b6:	d908      	bls.n	164ca <__udivmoddi4+0x1e2>
   164b8:	eb1c 0404 	adds.w	r4, ip, r4
   164bc:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
   164c0:	d26c      	bcs.n	1659c <__udivmoddi4+0x2b4>
   164c2:	45a6      	cmp	lr, r4
   164c4:	d96a      	bls.n	1659c <__udivmoddi4+0x2b4>
   164c6:	3802      	subs	r0, #2
   164c8:	4464      	add	r4, ip
   164ca:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
   164ce:	fba0 9502 	umull	r9, r5, r0, r2
   164d2:	eba4 040e 	sub.w	r4, r4, lr
   164d6:	42ac      	cmp	r4, r5
   164d8:	46c8      	mov	r8, r9
   164da:	46ae      	mov	lr, r5
   164dc:	d356      	bcc.n	1658c <__udivmoddi4+0x2a4>
   164de:	d053      	beq.n	16588 <__udivmoddi4+0x2a0>
   164e0:	2e00      	cmp	r6, #0
   164e2:	d069      	beq.n	165b8 <__udivmoddi4+0x2d0>
   164e4:	ebb3 0208 	subs.w	r2, r3, r8
   164e8:	eb64 040e 	sbc.w	r4, r4, lr
   164ec:	fa22 f301 	lsr.w	r3, r2, r1
   164f0:	fa04 f707 	lsl.w	r7, r4, r7
   164f4:	431f      	orrs	r7, r3
   164f6:	40cc      	lsrs	r4, r1
   164f8:	e9c6 7400 	strd	r7, r4, [r6]
   164fc:	2100      	movs	r1, #0
   164fe:	e747      	b.n	16390 <__udivmoddi4+0xa8>
   16500:	fa0c fc02 	lsl.w	ip, ip, r2
   16504:	f1c2 0120 	rsb	r1, r2, #32
   16508:	fa25 f301 	lsr.w	r3, r5, r1
   1650c:	ea4f 471c 	mov.w	r7, ip, lsr #16
   16510:	fa20 f101 	lsr.w	r1, r0, r1
   16514:	4095      	lsls	r5, r2
   16516:	430d      	orrs	r5, r1
   16518:	fbb3 f1f7 	udiv	r1, r3, r7
   1651c:	fb07 3311 	mls	r3, r7, r1, r3
   16520:	fa1f fe8c 	uxth.w	lr, ip
   16524:	0c28      	lsrs	r0, r5, #16
   16526:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   1652a:	fb01 f30e 	mul.w	r3, r1, lr
   1652e:	4283      	cmp	r3, r0
   16530:	fa04 f402 	lsl.w	r4, r4, r2
   16534:	d908      	bls.n	16548 <__udivmoddi4+0x260>
   16536:	eb1c 0000 	adds.w	r0, ip, r0
   1653a:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
   1653e:	d22f      	bcs.n	165a0 <__udivmoddi4+0x2b8>
   16540:	4283      	cmp	r3, r0
   16542:	d92d      	bls.n	165a0 <__udivmoddi4+0x2b8>
   16544:	3902      	subs	r1, #2
   16546:	4460      	add	r0, ip
   16548:	1ac0      	subs	r0, r0, r3
   1654a:	fbb0 f3f7 	udiv	r3, r0, r7
   1654e:	fb07 0013 	mls	r0, r7, r3, r0
   16552:	b2ad      	uxth	r5, r5
   16554:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   16558:	fb03 f00e 	mul.w	r0, r3, lr
   1655c:	42a8      	cmp	r0, r5
   1655e:	d908      	bls.n	16572 <__udivmoddi4+0x28a>
   16560:	eb1c 0505 	adds.w	r5, ip, r5
   16564:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   16568:	d216      	bcs.n	16598 <__udivmoddi4+0x2b0>
   1656a:	42a8      	cmp	r0, r5
   1656c:	d914      	bls.n	16598 <__udivmoddi4+0x2b0>
   1656e:	3b02      	subs	r3, #2
   16570:	4465      	add	r5, ip
   16572:	1a28      	subs	r0, r5, r0
   16574:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   16578:	e738      	b.n	163ec <__udivmoddi4+0x104>
   1657a:	4631      	mov	r1, r6
   1657c:	4630      	mov	r0, r6
   1657e:	e707      	b.n	16390 <__udivmoddi4+0xa8>
   16580:	462f      	mov	r7, r5
   16582:	e6e4      	b.n	1634e <__udivmoddi4+0x66>
   16584:	4618      	mov	r0, r3
   16586:	e6f9      	b.n	1637c <__udivmoddi4+0x94>
   16588:	454b      	cmp	r3, r9
   1658a:	d2a9      	bcs.n	164e0 <__udivmoddi4+0x1f8>
   1658c:	ebb9 0802 	subs.w	r8, r9, r2
   16590:	eb65 0e0c 	sbc.w	lr, r5, ip
   16594:	3801      	subs	r0, #1
   16596:	e7a3      	b.n	164e0 <__udivmoddi4+0x1f8>
   16598:	4643      	mov	r3, r8
   1659a:	e7ea      	b.n	16572 <__udivmoddi4+0x28a>
   1659c:	4628      	mov	r0, r5
   1659e:	e794      	b.n	164ca <__udivmoddi4+0x1e2>
   165a0:	4641      	mov	r1, r8
   165a2:	e7d1      	b.n	16548 <__udivmoddi4+0x260>
   165a4:	46d0      	mov	r8, sl
   165a6:	e77b      	b.n	164a0 <__udivmoddi4+0x1b8>
   165a8:	4464      	add	r4, ip
   165aa:	3802      	subs	r0, #2
   165ac:	e747      	b.n	1643e <__udivmoddi4+0x156>
   165ae:	3b02      	subs	r3, #2
   165b0:	4465      	add	r5, ip
   165b2:	e72f      	b.n	16414 <__udivmoddi4+0x12c>
   165b4:	4608      	mov	r0, r1
   165b6:	e706      	b.n	163c6 <__udivmoddi4+0xde>
   165b8:	4631      	mov	r1, r6
   165ba:	e6e9      	b.n	16390 <__udivmoddi4+0xa8>

000165bc <__aeabi_idiv0>:
   165bc:	4770      	bx	lr
   165be:	bf00      	nop

000165c0 <_swiread>:
   165c0:	b5f0      	push	{r4, r5, r6, r7, lr}
   165c2:	b085      	sub	sp, #20
   165c4:	2406      	movs	r4, #6
   165c6:	e9cd 0101 	strd	r0, r1, [sp, #4]
   165ca:	ad01      	add	r5, sp, #4
   165cc:	9203      	str	r2, [sp, #12]
   165ce:	4620      	mov	r0, r4
   165d0:	4629      	mov	r1, r5
   165d2:	beab      	bkpt	0x00ab
   165d4:	4604      	mov	r4, r0
   165d6:	1c63      	adds	r3, r4, #1
   165d8:	d002      	beq.n	165e0 <_swiread+0x20>
   165da:	4620      	mov	r0, r4
   165dc:	b005      	add	sp, #20
   165de:	bdf0      	pop	{r4, r5, r6, r7, pc}
   165e0:	f7fe fffc 	bl	155dc <__errno>
   165e4:	2613      	movs	r6, #19
   165e6:	2700      	movs	r7, #0
   165e8:	4605      	mov	r5, r0
   165ea:	4630      	mov	r0, r6
   165ec:	4639      	mov	r1, r7
   165ee:	beab      	bkpt	0x00ab
   165f0:	4606      	mov	r6, r0
   165f2:	4620      	mov	r0, r4
   165f4:	602e      	str	r6, [r5, #0]
   165f6:	b005      	add	sp, #20
   165f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   165fa:	bf00      	nop

000165fc <_read>:
   165fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16600:	4b20      	ldr	r3, [pc, #128]	; (16684 <_read+0x88>)
   16602:	4607      	mov	r7, r0
   16604:	681b      	ldr	r3, [r3, #0]
   16606:	460d      	mov	r5, r1
   16608:	4616      	mov	r6, r2
   1660a:	b084      	sub	sp, #16
   1660c:	b10b      	cbz	r3, 16612 <_read+0x16>
   1660e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   16610:	b1ea      	cbz	r2, 1664e <_read+0x52>
   16612:	2f13      	cmp	r7, #19
   16614:	d820      	bhi.n	16658 <_read+0x5c>
   16616:	f8df 8070 	ldr.w	r8, [pc, #112]	; 16688 <_read+0x8c>
   1661a:	f858 3037 	ldr.w	r3, [r8, r7, lsl #3]
   1661e:	1c5a      	adds	r2, r3, #1
   16620:	d01a      	beq.n	16658 <_read+0x5c>
   16622:	e9cd 5602 	strd	r5, r6, [sp, #8]
   16626:	2406      	movs	r4, #6
   16628:	9301      	str	r3, [sp, #4]
   1662a:	ad01      	add	r5, sp, #4
   1662c:	4620      	mov	r0, r4
   1662e:	4629      	mov	r1, r5
   16630:	beab      	bkpt	0x00ab
   16632:	4604      	mov	r4, r0
   16634:	1c63      	adds	r3, r4, #1
   16636:	d016      	beq.n	16666 <_read+0x6a>
   16638:	eb08 00c7 	add.w	r0, r8, r7, lsl #3
   1663c:	6843      	ldr	r3, [r0, #4]
   1663e:	1b32      	subs	r2, r6, r4
   16640:	4614      	mov	r4, r2
   16642:	441a      	add	r2, r3
   16644:	6042      	str	r2, [r0, #4]
   16646:	4620      	mov	r0, r4
   16648:	b004      	add	sp, #16
   1664a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1664e:	4618      	mov	r0, r3
   16650:	f7fc fdbe 	bl	131d0 <__sinit>
   16654:	2f13      	cmp	r7, #19
   16656:	d9de      	bls.n	16616 <_read+0x1a>
   16658:	f7fe ffc0 	bl	155dc <__errno>
   1665c:	2309      	movs	r3, #9
   1665e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16662:	6003      	str	r3, [r0, #0]
   16664:	e7ef      	b.n	16646 <_read+0x4a>
   16666:	f7fe ffb9 	bl	155dc <__errno>
   1666a:	2613      	movs	r6, #19
   1666c:	2700      	movs	r7, #0
   1666e:	4605      	mov	r5, r0
   16670:	4630      	mov	r0, r6
   16672:	4639      	mov	r1, r7
   16674:	beab      	bkpt	0x00ab
   16676:	4606      	mov	r6, r0
   16678:	4620      	mov	r0, r4
   1667a:	602e      	str	r6, [r5, #0]
   1667c:	b004      	add	sp, #16
   1667e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16682:	bf00      	nop
   16684:	20000124 	.word	0x20000124
   16688:	20001fbc 	.word	0x20001fbc

0001668c <_swilseek>:
   1668c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16690:	4b35      	ldr	r3, [pc, #212]	; (16768 <_swilseek+0xdc>)
   16692:	4605      	mov	r5, r0
   16694:	681b      	ldr	r3, [r3, #0]
   16696:	4688      	mov	r8, r1
   16698:	4614      	mov	r4, r2
   1669a:	b083      	sub	sp, #12
   1669c:	b10b      	cbz	r3, 166a2 <_swilseek+0x16>
   1669e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   166a0:	b312      	cbz	r2, 166e8 <_swilseek+0x5c>
   166a2:	2d13      	cmp	r5, #19
   166a4:	d825      	bhi.n	166f2 <_swilseek+0x66>
   166a6:	4e31      	ldr	r6, [pc, #196]	; (1676c <_swilseek+0xe0>)
   166a8:	f856 3035 	ldr.w	r3, [r6, r5, lsl #3]
   166ac:	1c59      	adds	r1, r3, #1
   166ae:	d020      	beq.n	166f2 <_swilseek+0x66>
   166b0:	2c02      	cmp	r4, #2
   166b2:	d838      	bhi.n	16726 <_swilseek+0x9a>
   166b4:	2c01      	cmp	r4, #1
   166b6:	d030      	beq.n	1671a <_swilseek+0x8e>
   166b8:	2c02      	cmp	r4, #2
   166ba:	d021      	beq.n	16700 <_swilseek+0x74>
   166bc:	4644      	mov	r4, r8
   166be:	46e9      	mov	r9, sp
   166c0:	270a      	movs	r7, #10
   166c2:	9300      	str	r3, [sp, #0]
   166c4:	9401      	str	r4, [sp, #4]
   166c6:	4638      	mov	r0, r7
   166c8:	4649      	mov	r1, r9
   166ca:	beab      	bkpt	0x00ab
   166cc:	4607      	mov	r7, r0
   166ce:	1c7b      	adds	r3, r7, #1
   166d0:	d030      	beq.n	16734 <_swilseek+0xa8>
   166d2:	2f00      	cmp	r7, #0
   166d4:	bfb2      	itee	lt
   166d6:	f04f 34ff 	movlt.w	r4, #4294967295	; 0xffffffff
   166da:	eb06 05c5 	addge.w	r5, r6, r5, lsl #3
   166de:	606c      	strge	r4, [r5, #4]
   166e0:	4620      	mov	r0, r4
   166e2:	b003      	add	sp, #12
   166e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   166e8:	4618      	mov	r0, r3
   166ea:	f7fc fd71 	bl	131d0 <__sinit>
   166ee:	2d13      	cmp	r5, #19
   166f0:	d9d9      	bls.n	166a6 <_swilseek+0x1a>
   166f2:	f7fe ff73 	bl	155dc <__errno>
   166f6:	2309      	movs	r3, #9
   166f8:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   166fc:	6003      	str	r3, [r0, #0]
   166fe:	e7ef      	b.n	166e0 <_swilseek+0x54>
   16700:	240c      	movs	r4, #12
   16702:	46e9      	mov	r9, sp
   16704:	9300      	str	r3, [sp, #0]
   16706:	4620      	mov	r0, r4
   16708:	4649      	mov	r1, r9
   1670a:	beab      	bkpt	0x00ab
   1670c:	4604      	mov	r4, r0
   1670e:	1c62      	adds	r2, r4, #1
   16710:	d01f      	beq.n	16752 <_swilseek+0xc6>
   16712:	f856 3035 	ldr.w	r3, [r6, r5, lsl #3]
   16716:	4444      	add	r4, r8
   16718:	e7d2      	b.n	166c0 <_swilseek+0x34>
   1671a:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
   1671e:	6854      	ldr	r4, [r2, #4]
   16720:	eb18 0404 	adds.w	r4, r8, r4
   16724:	d5cb      	bpl.n	166be <_swilseek+0x32>
   16726:	f7fe ff59 	bl	155dc <__errno>
   1672a:	2316      	movs	r3, #22
   1672c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16730:	6003      	str	r3, [r0, #0]
   16732:	e7d5      	b.n	166e0 <_swilseek+0x54>
   16734:	f7fe ff52 	bl	155dc <__errno>
   16738:	2413      	movs	r4, #19
   1673a:	2600      	movs	r6, #0
   1673c:	4605      	mov	r5, r0
   1673e:	4620      	mov	r0, r4
   16740:	4631      	mov	r1, r6
   16742:	beab      	bkpt	0x00ab
   16744:	4606      	mov	r6, r0
   16746:	463c      	mov	r4, r7
   16748:	4620      	mov	r0, r4
   1674a:	602e      	str	r6, [r5, #0]
   1674c:	b003      	add	sp, #12
   1674e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   16752:	f7fe ff43 	bl	155dc <__errno>
   16756:	2613      	movs	r6, #19
   16758:	2700      	movs	r7, #0
   1675a:	4605      	mov	r5, r0
   1675c:	4630      	mov	r0, r6
   1675e:	4639      	mov	r1, r7
   16760:	beab      	bkpt	0x00ab
   16762:	4606      	mov	r6, r0
   16764:	602e      	str	r6, [r5, #0]
   16766:	e7bb      	b.n	166e0 <_swilseek+0x54>
   16768:	20000124 	.word	0x20000124
   1676c:	20001fbc 	.word	0x20001fbc

00016770 <_lseek>:
   16770:	f7ff bf8c 	b.w	1668c <_swilseek>

00016774 <_swiwrite>:
   16774:	b5f0      	push	{r4, r5, r6, r7, lr}
   16776:	b085      	sub	sp, #20
   16778:	2405      	movs	r4, #5
   1677a:	e9cd 0101 	strd	r0, r1, [sp, #4]
   1677e:	ad01      	add	r5, sp, #4
   16780:	9203      	str	r2, [sp, #12]
   16782:	4620      	mov	r0, r4
   16784:	4629      	mov	r1, r5
   16786:	beab      	bkpt	0x00ab
   16788:	4604      	mov	r4, r0
   1678a:	1c63      	adds	r3, r4, #1
   1678c:	d002      	beq.n	16794 <_swiwrite+0x20>
   1678e:	4620      	mov	r0, r4
   16790:	b005      	add	sp, #20
   16792:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16794:	f7fe ff22 	bl	155dc <__errno>
   16798:	2613      	movs	r6, #19
   1679a:	2700      	movs	r7, #0
   1679c:	4605      	mov	r5, r0
   1679e:	4630      	mov	r0, r6
   167a0:	4639      	mov	r1, r7
   167a2:	beab      	bkpt	0x00ab
   167a4:	4606      	mov	r6, r0
   167a6:	4620      	mov	r0, r4
   167a8:	602e      	str	r6, [r5, #0]
   167aa:	b005      	add	sp, #20
   167ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
   167ae:	bf00      	nop

000167b0 <_write>:
   167b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   167b4:	4b2b      	ldr	r3, [pc, #172]	; (16864 <_write+0xb4>)
   167b6:	4607      	mov	r7, r0
   167b8:	681b      	ldr	r3, [r3, #0]
   167ba:	460d      	mov	r5, r1
   167bc:	4616      	mov	r6, r2
   167be:	b084      	sub	sp, #16
   167c0:	b10b      	cbz	r3, 167c6 <_write+0x16>
   167c2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   167c4:	b312      	cbz	r2, 1680c <_write+0x5c>
   167c6:	2f13      	cmp	r7, #19
   167c8:	d825      	bhi.n	16816 <_write+0x66>
   167ca:	f8df 809c 	ldr.w	r8, [pc, #156]	; 16868 <_write+0xb8>
   167ce:	f858 3037 	ldr.w	r3, [r8, r7, lsl #3]
   167d2:	1c5a      	adds	r2, r3, #1
   167d4:	d01f      	beq.n	16816 <_write+0x66>
   167d6:	e9cd 5602 	strd	r5, r6, [sp, #8]
   167da:	2405      	movs	r4, #5
   167dc:	9301      	str	r3, [sp, #4]
   167de:	ad01      	add	r5, sp, #4
   167e0:	4620      	mov	r0, r4
   167e2:	4629      	mov	r1, r5
   167e4:	beab      	bkpt	0x00ab
   167e6:	4604      	mov	r4, r0
   167e8:	1c63      	adds	r3, r4, #1
   167ea:	d01b      	beq.n	16824 <_write+0x74>
   167ec:	2c00      	cmp	r4, #0
   167ee:	db35      	blt.n	1685c <_write+0xac>
   167f0:	eb08 00c7 	add.w	r0, r8, r7, lsl #3
   167f4:	6843      	ldr	r3, [r0, #4]
   167f6:	1b32      	subs	r2, r6, r4
   167f8:	4413      	add	r3, r2
   167fa:	42b4      	cmp	r4, r6
   167fc:	bf18      	it	ne
   167fe:	4614      	movne	r4, r2
   16800:	6043      	str	r3, [r0, #4]
   16802:	d01d      	beq.n	16840 <_write+0x90>
   16804:	4620      	mov	r0, r4
   16806:	b004      	add	sp, #16
   16808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1680c:	4618      	mov	r0, r3
   1680e:	f7fc fcdf 	bl	131d0 <__sinit>
   16812:	2f13      	cmp	r7, #19
   16814:	d9d9      	bls.n	167ca <_write+0x1a>
   16816:	f7fe fee1 	bl	155dc <__errno>
   1681a:	2309      	movs	r3, #9
   1681c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16820:	6003      	str	r3, [r0, #0]
   16822:	e7ef      	b.n	16804 <_write+0x54>
   16824:	f7fe feda 	bl	155dc <__errno>
   16828:	2613      	movs	r6, #19
   1682a:	2700      	movs	r7, #0
   1682c:	4605      	mov	r5, r0
   1682e:	4630      	mov	r0, r6
   16830:	4639      	mov	r1, r7
   16832:	beab      	bkpt	0x00ab
   16834:	4606      	mov	r6, r0
   16836:	4620      	mov	r0, r4
   16838:	602e      	str	r6, [r5, #0]
   1683a:	b004      	add	sp, #16
   1683c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16840:	f7fe fecc 	bl	155dc <__errno>
   16844:	2613      	movs	r6, #19
   16846:	2400      	movs	r4, #0
   16848:	4605      	mov	r5, r0
   1684a:	4630      	mov	r0, r6
   1684c:	4621      	mov	r1, r4
   1684e:	beab      	bkpt	0x00ab
   16850:	4606      	mov	r6, r0
   16852:	4620      	mov	r0, r4
   16854:	602e      	str	r6, [r5, #0]
   16856:	b004      	add	sp, #16
   16858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1685c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16860:	e7d0      	b.n	16804 <_write+0x54>
   16862:	bf00      	nop
   16864:	20000124 	.word	0x20000124
   16868:	20001fbc 	.word	0x20001fbc

0001686c <_swiclose>:
   1686c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1686e:	b083      	sub	sp, #12
   16870:	2402      	movs	r4, #2
   16872:	9001      	str	r0, [sp, #4]
   16874:	ad01      	add	r5, sp, #4
   16876:	4620      	mov	r0, r4
   16878:	4629      	mov	r1, r5
   1687a:	beab      	bkpt	0x00ab
   1687c:	4604      	mov	r4, r0
   1687e:	1c63      	adds	r3, r4, #1
   16880:	d002      	beq.n	16888 <_swiclose+0x1c>
   16882:	4620      	mov	r0, r4
   16884:	b003      	add	sp, #12
   16886:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16888:	f7fe fea8 	bl	155dc <__errno>
   1688c:	2613      	movs	r6, #19
   1688e:	2700      	movs	r7, #0
   16890:	4605      	mov	r5, r0
   16892:	4630      	mov	r0, r6
   16894:	4639      	mov	r1, r7
   16896:	beab      	bkpt	0x00ab
   16898:	4606      	mov	r6, r0
   1689a:	4620      	mov	r0, r4
   1689c:	602e      	str	r6, [r5, #0]
   1689e:	b003      	add	sp, #12
   168a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   168a2:	bf00      	nop

000168a4 <_close>:
   168a4:	b5f0      	push	{r4, r5, r6, r7, lr}
   168a6:	4b23      	ldr	r3, [pc, #140]	; (16934 <_close+0x90>)
   168a8:	4605      	mov	r5, r0
   168aa:	681b      	ldr	r3, [r3, #0]
   168ac:	b083      	sub	sp, #12
   168ae:	b10b      	cbz	r3, 168b4 <_close+0x10>
   168b0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   168b2:	b1f2      	cbz	r2, 168f2 <_close+0x4e>
   168b4:	2d13      	cmp	r5, #19
   168b6:	d821      	bhi.n	168fc <_close+0x58>
   168b8:	4e1f      	ldr	r6, [pc, #124]	; (16938 <_close+0x94>)
   168ba:	f856 3035 	ldr.w	r3, [r6, r5, lsl #3]
   168be:	1c5a      	adds	r2, r3, #1
   168c0:	d01c      	beq.n	168fc <_close+0x58>
   168c2:	1e6a      	subs	r2, r5, #1
   168c4:	2a01      	cmp	r2, #1
   168c6:	d803      	bhi.n	168d0 <_close+0x2c>
   168c8:	68b1      	ldr	r1, [r6, #8]
   168ca:	6932      	ldr	r2, [r6, #16]
   168cc:	4291      	cmp	r1, r2
   168ce:	d01c      	beq.n	1690a <_close+0x66>
   168d0:	2402      	movs	r4, #2
   168d2:	9301      	str	r3, [sp, #4]
   168d4:	af01      	add	r7, sp, #4
   168d6:	4620      	mov	r0, r4
   168d8:	4639      	mov	r1, r7
   168da:	beab      	bkpt	0x00ab
   168dc:	4604      	mov	r4, r0
   168de:	1c63      	adds	r3, r4, #1
   168e0:	d01b      	beq.n	1691a <_close+0x76>
   168e2:	b91c      	cbnz	r4, 168ec <_close+0x48>
   168e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   168e8:	f846 3035 	str.w	r3, [r6, r5, lsl #3]
   168ec:	4620      	mov	r0, r4
   168ee:	b003      	add	sp, #12
   168f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   168f2:	4618      	mov	r0, r3
   168f4:	f7fc fc6c 	bl	131d0 <__sinit>
   168f8:	2d13      	cmp	r5, #19
   168fa:	d9dd      	bls.n	168b8 <_close+0x14>
   168fc:	f7fe fe6e 	bl	155dc <__errno>
   16900:	2309      	movs	r3, #9
   16902:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16906:	6003      	str	r3, [r0, #0]
   16908:	e7f0      	b.n	168ec <_close+0x48>
   1690a:	2400      	movs	r4, #0
   1690c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   16910:	4620      	mov	r0, r4
   16912:	f846 3035 	str.w	r3, [r6, r5, lsl #3]
   16916:	b003      	add	sp, #12
   16918:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1691a:	f7fe fe5f 	bl	155dc <__errno>
   1691e:	2613      	movs	r6, #19
   16920:	2700      	movs	r7, #0
   16922:	4605      	mov	r5, r0
   16924:	4630      	mov	r0, r6
   16926:	4639      	mov	r1, r7
   16928:	beab      	bkpt	0x00ab
   1692a:	4606      	mov	r6, r0
   1692c:	4620      	mov	r0, r4
   1692e:	602e      	str	r6, [r5, #0]
   16930:	b003      	add	sp, #12
   16932:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16934:	20000124 	.word	0x20000124
   16938:	20001fbc 	.word	0x20001fbc

0001693c <_getpid>:
   1693c:	2001      	movs	r0, #1
   1693e:	4770      	bx	lr

00016940 <_sbrk>:
   16940:	4a0e      	ldr	r2, [pc, #56]	; (1697c <_sbrk+0x3c>)
   16942:	4603      	mov	r3, r0
   16944:	6810      	ldr	r0, [r2, #0]
   16946:	b510      	push	{r4, lr}
   16948:	b1a0      	cbz	r0, 16974 <_sbrk+0x34>
   1694a:	4669      	mov	r1, sp
   1694c:	4403      	add	r3, r0
   1694e:	428b      	cmp	r3, r1
   16950:	d808      	bhi.n	16964 <_sbrk+0x24>
   16952:	490b      	ldr	r1, [pc, #44]	; (16980 <_sbrk+0x40>)
   16954:	4c0b      	ldr	r4, [pc, #44]	; (16984 <_sbrk+0x44>)
   16956:	6809      	ldr	r1, [r1, #0]
   16958:	42a1      	cmp	r1, r4
   1695a:	d001      	beq.n	16960 <_sbrk+0x20>
   1695c:	428b      	cmp	r3, r1
   1695e:	d801      	bhi.n	16964 <_sbrk+0x24>
   16960:	6013      	str	r3, [r2, #0]
   16962:	bd10      	pop	{r4, pc}
   16964:	f7fe fe3a 	bl	155dc <__errno>
   16968:	220c      	movs	r2, #12
   1696a:	4603      	mov	r3, r0
   1696c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16970:	601a      	str	r2, [r3, #0]
   16972:	bd10      	pop	{r4, pc}
   16974:	4904      	ldr	r1, [pc, #16]	; (16988 <_sbrk+0x48>)
   16976:	4608      	mov	r0, r1
   16978:	6011      	str	r1, [r2, #0]
   1697a:	e7e6      	b.n	1694a <_sbrk+0xa>
   1697c:	20001fac 	.word	0x20001fac
   16980:	20000ad0 	.word	0x20000ad0
   16984:	cafedead 	.word	0xcafedead
   16988:	20002060 	.word	0x20002060

0001698c <_swistat>:
   1698c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1698e:	4b1d      	ldr	r3, [pc, #116]	; (16a04 <_swistat+0x78>)
   16990:	4604      	mov	r4, r0
   16992:	681b      	ldr	r3, [r3, #0]
   16994:	460e      	mov	r6, r1
   16996:	b10b      	cbz	r3, 1699c <_swistat+0x10>
   16998:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   1699a:	b1d2      	cbz	r2, 169d2 <_swistat+0x46>
   1699c:	2c13      	cmp	r4, #19
   1699e:	d81d      	bhi.n	169dc <_swistat+0x50>
   169a0:	4819      	ldr	r0, [pc, #100]	; (16a08 <_swistat+0x7c>)
   169a2:	f850 3034 	ldr.w	r3, [r0, r4, lsl #3]
   169a6:	3301      	adds	r3, #1
   169a8:	d018      	beq.n	169dc <_swistat+0x50>
   169aa:	f44f 6280 	mov.w	r2, #1024	; 0x400
   169ae:	6873      	ldr	r3, [r6, #4]
   169b0:	250c      	movs	r5, #12
   169b2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   169b6:	eb00 04c4 	add.w	r4, r0, r4, lsl #3
   169ba:	6073      	str	r3, [r6, #4]
   169bc:	64b2      	str	r2, [r6, #72]	; 0x48
   169be:	4628      	mov	r0, r5
   169c0:	4621      	mov	r1, r4
   169c2:	beab      	bkpt	0x00ab
   169c4:	4604      	mov	r4, r0
   169c6:	1c63      	adds	r3, r4, #1
   169c8:	d00f      	beq.n	169ea <_swistat+0x5e>
   169ca:	6134      	str	r4, [r6, #16]
   169cc:	2400      	movs	r4, #0
   169ce:	4620      	mov	r0, r4
   169d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   169d2:	4618      	mov	r0, r3
   169d4:	f7fc fbfc 	bl	131d0 <__sinit>
   169d8:	2c13      	cmp	r4, #19
   169da:	d9e1      	bls.n	169a0 <_swistat+0x14>
   169dc:	f7fe fdfe 	bl	155dc <__errno>
   169e0:	2309      	movs	r3, #9
   169e2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   169e6:	6003      	str	r3, [r0, #0]
   169e8:	e7f1      	b.n	169ce <_swistat+0x42>
   169ea:	f7fe fdf7 	bl	155dc <__errno>
   169ee:	2613      	movs	r6, #19
   169f0:	2700      	movs	r7, #0
   169f2:	4605      	mov	r5, r0
   169f4:	4630      	mov	r0, r6
   169f6:	4639      	mov	r1, r7
   169f8:	beab      	bkpt	0x00ab
   169fa:	4606      	mov	r6, r0
   169fc:	4620      	mov	r0, r4
   169fe:	602e      	str	r6, [r5, #0]
   16a00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16a02:	bf00      	nop
   16a04:	20000124 	.word	0x20000124
   16a08:	20001fbc 	.word	0x20001fbc

00016a0c <_fstat>:
   16a0c:	460b      	mov	r3, r1
   16a0e:	b510      	push	{r4, lr}
   16a10:	2100      	movs	r1, #0
   16a12:	4604      	mov	r4, r0
   16a14:	2258      	movs	r2, #88	; 0x58
   16a16:	4618      	mov	r0, r3
   16a18:	f7f6 f84e 	bl	cab8 <memset>
   16a1c:	4601      	mov	r1, r0
   16a1e:	4620      	mov	r0, r4
   16a20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   16a24:	f7ff bfb2 	b.w	1698c <_swistat>

00016a28 <_stat>:
   16a28:	b538      	push	{r3, r4, r5, lr}
   16a2a:	460c      	mov	r4, r1
   16a2c:	4605      	mov	r5, r0
   16a2e:	2258      	movs	r2, #88	; 0x58
   16a30:	2100      	movs	r1, #0
   16a32:	4620      	mov	r0, r4
   16a34:	f7f6 f840 	bl	cab8 <memset>
   16a38:	4628      	mov	r0, r5
   16a3a:	2100      	movs	r1, #0
   16a3c:	f000 f812 	bl	16a64 <_swiopen>
   16a40:	1c43      	adds	r3, r0, #1
   16a42:	4605      	mov	r5, r0
   16a44:	d00b      	beq.n	16a5e <_stat+0x36>
   16a46:	6863      	ldr	r3, [r4, #4]
   16a48:	4621      	mov	r1, r4
   16a4a:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
   16a4e:	6063      	str	r3, [r4, #4]
   16a50:	f7ff ff9c 	bl	1698c <_swistat>
   16a54:	4603      	mov	r3, r0
   16a56:	4628      	mov	r0, r5
   16a58:	461d      	mov	r5, r3
   16a5a:	f7ff ff23 	bl	168a4 <_close>
   16a5e:	4628      	mov	r0, r5
   16a60:	bd38      	pop	{r3, r4, r5, pc}
   16a62:	bf00      	nop

00016a64 <_swiopen>:
   16a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16a68:	4603      	mov	r3, r0
   16a6a:	2400      	movs	r4, #0
   16a6c:	460f      	mov	r7, r1
   16a6e:	4e2f      	ldr	r6, [pc, #188]	; (16b2c <_swiopen+0xc8>)
   16a70:	b098      	sub	sp, #96	; 0x60
   16a72:	e002      	b.n	16a7a <_swiopen+0x16>
   16a74:	3401      	adds	r4, #1
   16a76:	2c14      	cmp	r4, #20
   16a78:	d051      	beq.n	16b1e <_swiopen+0xba>
   16a7a:	f856 5034 	ldr.w	r5, [r6, r4, lsl #3]
   16a7e:	1c68      	adds	r0, r5, #1
   16a80:	d1f8      	bne.n	16a74 <_swiopen+0x10>
   16a82:	f407 6220 	and.w	r2, r7, #2560	; 0xa00
   16a86:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
   16a8a:	f10d 0808 	add.w	r8, sp, #8
   16a8e:	d038      	beq.n	16b02 <_swiopen+0x9e>
   16a90:	f240 6201 	movw	r2, #1537	; 0x601
   16a94:	f3c7 4500 	ubfx	r5, r7, #16, #1
   16a98:	07b9      	lsls	r1, r7, #30
   16a9a:	bf48      	it	mi
   16a9c:	f045 0502 	orrmi.w	r5, r5, #2
   16aa0:	4217      	tst	r7, r2
   16aa2:	bf18      	it	ne
   16aa4:	f045 0504 	orrne.w	r5, r5, #4
   16aa8:	073a      	lsls	r2, r7, #28
   16aaa:	bf48      	it	mi
   16aac:	f025 0504 	bicmi.w	r5, r5, #4
   16ab0:	4618      	mov	r0, r3
   16ab2:	bf48      	it	mi
   16ab4:	f045 0508 	orrmi.w	r5, r5, #8
   16ab8:	9302      	str	r3, [sp, #8]
   16aba:	f7f6 fdd1 	bl	d660 <strlen>
   16abe:	9503      	str	r5, [sp, #12]
   16ac0:	9004      	str	r0, [sp, #16]
   16ac2:	2501      	movs	r5, #1
   16ac4:	4628      	mov	r0, r5
   16ac6:	4641      	mov	r1, r8
   16ac8:	beab      	bkpt	0x00ab
   16aca:	4605      	mov	r5, r0
   16acc:	2d00      	cmp	r5, #0
   16ace:	db09      	blt.n	16ae4 <_swiopen+0x80>
   16ad0:	2200      	movs	r2, #0
   16ad2:	eb06 03c4 	add.w	r3, r6, r4, lsl #3
   16ad6:	f846 5034 	str.w	r5, [r6, r4, lsl #3]
   16ada:	605a      	str	r2, [r3, #4]
   16adc:	4620      	mov	r0, r4
   16ade:	b018      	add	sp, #96	; 0x60
   16ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16ae4:	f7fe fd7a 	bl	155dc <__errno>
   16ae8:	2413      	movs	r4, #19
   16aea:	2700      	movs	r7, #0
   16aec:	4606      	mov	r6, r0
   16aee:	4620      	mov	r0, r4
   16af0:	4639      	mov	r1, r7
   16af2:	beab      	bkpt	0x00ab
   16af4:	4607      	mov	r7, r0
   16af6:	462c      	mov	r4, r5
   16af8:	4620      	mov	r0, r4
   16afa:	6037      	str	r7, [r6, #0]
   16afc:	b018      	add	sp, #96	; 0x60
   16afe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16b02:	4618      	mov	r0, r3
   16b04:	4641      	mov	r1, r8
   16b06:	9301      	str	r3, [sp, #4]
   16b08:	f7ff ff8e 	bl	16a28 <_stat>
   16b0c:	3001      	adds	r0, #1
   16b0e:	9b01      	ldr	r3, [sp, #4]
   16b10:	d0be      	beq.n	16a90 <_swiopen+0x2c>
   16b12:	f7fe fd63 	bl	155dc <__errno>
   16b16:	2311      	movs	r3, #17
   16b18:	462c      	mov	r4, r5
   16b1a:	6003      	str	r3, [r0, #0]
   16b1c:	e7de      	b.n	16adc <_swiopen+0x78>
   16b1e:	f7fe fd5d 	bl	155dc <__errno>
   16b22:	2318      	movs	r3, #24
   16b24:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16b28:	6003      	str	r3, [r0, #0]
   16b2a:	e7d7      	b.n	16adc <_swiopen+0x78>
   16b2c:	20001fbc 	.word	0x20001fbc

00016b30 <_open>:
   16b30:	b40e      	push	{r1, r2, r3}
   16b32:	b500      	push	{lr}
   16b34:	9901      	ldr	r1, [sp, #4]
   16b36:	f7ff ff95 	bl	16a64 <_swiopen>
   16b3a:	f85d eb04 	ldr.w	lr, [sp], #4
   16b3e:	b003      	add	sp, #12
   16b40:	4770      	bx	lr
   16b42:	bf00      	nop

00016b44 <_get_semihosting_exts>:
   16b44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16b48:	4607      	mov	r7, r0
   16b4a:	4688      	mov	r8, r1
   16b4c:	483e      	ldr	r0, [pc, #248]	; (16c48 <_get_semihosting_exts+0x104>)
   16b4e:	2100      	movs	r1, #0
   16b50:	b083      	sub	sp, #12
   16b52:	4616      	mov	r6, r2
   16b54:	f7ff ff86 	bl	16a64 <_swiopen>
   16b58:	4604      	mov	r4, r0
   16b5a:	2100      	movs	r1, #0
   16b5c:	4632      	mov	r2, r6
   16b5e:	4638      	mov	r0, r7
   16b60:	f7f5 ffaa 	bl	cab8 <memset>
   16b64:	1c61      	adds	r1, r4, #1
   16b66:	d045      	beq.n	16bf4 <_get_semihosting_exts+0xb0>
   16b68:	4b38      	ldr	r3, [pc, #224]	; (16c4c <_get_semihosting_exts+0x108>)
   16b6a:	6818      	ldr	r0, [r3, #0]
   16b6c:	b110      	cbz	r0, 16b74 <_get_semihosting_exts+0x30>
   16b6e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   16b70:	2b00      	cmp	r3, #0
   16b72:	d043      	beq.n	16bfc <_get_semihosting_exts+0xb8>
   16b74:	2c13      	cmp	r4, #19
   16b76:	d845      	bhi.n	16c04 <_get_semihosting_exts+0xc0>
   16b78:	4d35      	ldr	r5, [pc, #212]	; (16c50 <_get_semihosting_exts+0x10c>)
   16b7a:	f855 3034 	ldr.w	r3, [r5, r4, lsl #3]
   16b7e:	3301      	adds	r3, #1
   16b80:	d040      	beq.n	16c04 <_get_semihosting_exts+0xc0>
   16b82:	eb05 09c4 	add.w	r9, r5, r4, lsl #3
   16b86:	250c      	movs	r5, #12
   16b88:	4628      	mov	r0, r5
   16b8a:	4649      	mov	r1, r9
   16b8c:	beab      	bkpt	0x00ab
   16b8e:	4605      	mov	r5, r0
   16b90:	1c6a      	adds	r2, r5, #1
   16b92:	d03a      	beq.n	16c0a <_get_semihosting_exts+0xc6>
   16b94:	2d03      	cmp	r5, #3
   16b96:	dd42      	ble.n	16c1e <_get_semihosting_exts+0xda>
   16b98:	3d03      	subs	r5, #3
   16b9a:	42b5      	cmp	r5, r6
   16b9c:	dd3f      	ble.n	16c1e <_get_semihosting_exts+0xda>
   16b9e:	2204      	movs	r2, #4
   16ba0:	4620      	mov	r0, r4
   16ba2:	eb0d 0102 	add.w	r1, sp, r2
   16ba6:	f7ff fd29 	bl	165fc <_read>
   16baa:	2803      	cmp	r0, #3
   16bac:	dd37      	ble.n	16c1e <_get_semihosting_exts+0xda>
   16bae:	f89d 3004 	ldrb.w	r3, [sp, #4]
   16bb2:	2b53      	cmp	r3, #83	; 0x53
   16bb4:	d133      	bne.n	16c1e <_get_semihosting_exts+0xda>
   16bb6:	f89d 3005 	ldrb.w	r3, [sp, #5]
   16bba:	2b48      	cmp	r3, #72	; 0x48
   16bbc:	d12f      	bne.n	16c1e <_get_semihosting_exts+0xda>
   16bbe:	f89d 3006 	ldrb.w	r3, [sp, #6]
   16bc2:	2b46      	cmp	r3, #70	; 0x46
   16bc4:	d12b      	bne.n	16c1e <_get_semihosting_exts+0xda>
   16bc6:	f89d 3007 	ldrb.w	r3, [sp, #7]
   16bca:	2b42      	cmp	r3, #66	; 0x42
   16bcc:	d127      	bne.n	16c1e <_get_semihosting_exts+0xda>
   16bce:	2201      	movs	r2, #1
   16bd0:	4641      	mov	r1, r8
   16bd2:	4620      	mov	r0, r4
   16bd4:	f7ff fd5a 	bl	1668c <_swilseek>
   16bd8:	2800      	cmp	r0, #0
   16bda:	db20      	blt.n	16c1e <_get_semihosting_exts+0xda>
   16bdc:	4632      	mov	r2, r6
   16bde:	4639      	mov	r1, r7
   16be0:	4620      	mov	r0, r4
   16be2:	f7ff fd0b 	bl	165fc <_read>
   16be6:	4603      	mov	r3, r0
   16be8:	4620      	mov	r0, r4
   16bea:	461c      	mov	r4, r3
   16bec:	f7ff fe5a 	bl	168a4 <_close>
   16bf0:	1c63      	adds	r3, r4, #1
   16bf2:	d01d      	beq.n	16c30 <_get_semihosting_exts+0xec>
   16bf4:	4620      	mov	r0, r4
   16bf6:	b003      	add	sp, #12
   16bf8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   16bfc:	f7fc fae8 	bl	131d0 <__sinit>
   16c00:	2c13      	cmp	r4, #19
   16c02:	d9b9      	bls.n	16b78 <_get_semihosting_exts+0x34>
   16c04:	f04f 0900 	mov.w	r9, #0
   16c08:	e7bd      	b.n	16b86 <_get_semihosting_exts+0x42>
   16c0a:	f7fe fce7 	bl	155dc <__errno>
   16c0e:	2613      	movs	r6, #19
   16c10:	2700      	movs	r7, #0
   16c12:	4605      	mov	r5, r0
   16c14:	4630      	mov	r0, r6
   16c16:	4639      	mov	r1, r7
   16c18:	beab      	bkpt	0x00ab
   16c1a:	4606      	mov	r6, r0
   16c1c:	602e      	str	r6, [r5, #0]
   16c1e:	4620      	mov	r0, r4
   16c20:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16c24:	f7ff fe3e 	bl	168a4 <_close>
   16c28:	4620      	mov	r0, r4
   16c2a:	b003      	add	sp, #12
   16c2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   16c30:	f7fe fcd4 	bl	155dc <__errno>
   16c34:	2613      	movs	r6, #19
   16c36:	2700      	movs	r7, #0
   16c38:	4605      	mov	r5, r0
   16c3a:	4630      	mov	r0, r6
   16c3c:	4639      	mov	r1, r7
   16c3e:	beab      	bkpt	0x00ab
   16c40:	4606      	mov	r6, r0
   16c42:	602e      	str	r6, [r5, #0]
   16c44:	e7d6      	b.n	16bf4 <_get_semihosting_exts+0xb0>
   16c46:	bf00      	nop
   16c48:	0001a598 	.word	0x0001a598
   16c4c:	20000124 	.word	0x20000124
   16c50:	20001fbc 	.word	0x20001fbc

00016c54 <_has_ext_exit_extended>:
   16c54:	b530      	push	{r4, r5, lr}
   16c56:	4c0f      	ldr	r4, [pc, #60]	; (16c94 <_has_ext_exit_extended+0x40>)
   16c58:	b083      	sub	sp, #12
   16c5a:	6820      	ldr	r0, [r4, #0]
   16c5c:	2800      	cmp	r0, #0
   16c5e:	db01      	blt.n	16c64 <_has_ext_exit_extended+0x10>
   16c60:	b003      	add	sp, #12
   16c62:	bd30      	pop	{r4, r5, pc}
   16c64:	2100      	movs	r1, #0
   16c66:	2201      	movs	r2, #1
   16c68:	4d0b      	ldr	r5, [pc, #44]	; (16c98 <_has_ext_exit_extended+0x44>)
   16c6a:	a801      	add	r0, sp, #4
   16c6c:	6021      	str	r1, [r4, #0]
   16c6e:	602a      	str	r2, [r5, #0]
   16c70:	f7ff ff68 	bl	16b44 <_get_semihosting_exts>
   16c74:	2800      	cmp	r0, #0
   16c76:	dd09      	ble.n	16c8c <_has_ext_exit_extended+0x38>
   16c78:	f89d 3004 	ldrb.w	r3, [sp, #4]
   16c7c:	f003 0001 	and.w	r0, r3, #1
   16c80:	f003 0302 	and.w	r3, r3, #2
   16c84:	6020      	str	r0, [r4, #0]
   16c86:	602b      	str	r3, [r5, #0]
   16c88:	b003      	add	sp, #12
   16c8a:	bd30      	pop	{r4, r5, pc}
   16c8c:	6820      	ldr	r0, [r4, #0]
   16c8e:	b003      	add	sp, #12
   16c90:	bd30      	pop	{r4, r5, pc}
   16c92:	bf00      	nop
   16c94:	20000ad4 	.word	0x20000ad4
   16c98:	20000ad8 	.word	0x20000ad8

00016c9c <_has_ext_stdout_stderr>:
   16c9c:	b530      	push	{r4, r5, lr}
   16c9e:	4c0f      	ldr	r4, [pc, #60]	; (16cdc <_has_ext_stdout_stderr+0x40>)
   16ca0:	b083      	sub	sp, #12
   16ca2:	6820      	ldr	r0, [r4, #0]
   16ca4:	2800      	cmp	r0, #0
   16ca6:	db01      	blt.n	16cac <_has_ext_stdout_stderr+0x10>
   16ca8:	b003      	add	sp, #12
   16caa:	bd30      	pop	{r4, r5, pc}
   16cac:	2100      	movs	r1, #0
   16cae:	2201      	movs	r2, #1
   16cb0:	4d0b      	ldr	r5, [pc, #44]	; (16ce0 <_has_ext_stdout_stderr+0x44>)
   16cb2:	a801      	add	r0, sp, #4
   16cb4:	6029      	str	r1, [r5, #0]
   16cb6:	6022      	str	r2, [r4, #0]
   16cb8:	f7ff ff44 	bl	16b44 <_get_semihosting_exts>
   16cbc:	2800      	cmp	r0, #0
   16cbe:	dd09      	ble.n	16cd4 <_has_ext_stdout_stderr+0x38>
   16cc0:	f89d 0004 	ldrb.w	r0, [sp, #4]
   16cc4:	f000 0301 	and.w	r3, r0, #1
   16cc8:	f000 0002 	and.w	r0, r0, #2
   16ccc:	602b      	str	r3, [r5, #0]
   16cce:	6020      	str	r0, [r4, #0]
   16cd0:	b003      	add	sp, #12
   16cd2:	bd30      	pop	{r4, r5, pc}
   16cd4:	6820      	ldr	r0, [r4, #0]
   16cd6:	b003      	add	sp, #12
   16cd8:	bd30      	pop	{r4, r5, pc}
   16cda:	bf00      	nop
   16cdc:	20000ad8 	.word	0x20000ad8
   16ce0:	20000ad4 	.word	0x20000ad4

00016ce4 <initialise_monitor_handles>:
   16ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ce8:	2303      	movs	r3, #3
   16cea:	2400      	movs	r4, #0
   16cec:	4e4c      	ldr	r6, [pc, #304]	; (16e20 <initialise_monitor_handles+0x13c>)
   16cee:	b085      	sub	sp, #20
   16cf0:	9601      	str	r6, [sp, #4]
   16cf2:	f04f 0801 	mov.w	r8, #1
   16cf6:	9303      	str	r3, [sp, #12]
   16cf8:	ad01      	add	r5, sp, #4
   16cfa:	9402      	str	r4, [sp, #8]
   16cfc:	4640      	mov	r0, r8
   16cfe:	4629      	mov	r1, r5
   16d00:	beab      	bkpt	0x00ab
   16d02:	4680      	mov	r8, r0
   16d04:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16d08:	4f46      	ldr	r7, [pc, #280]	; (16e24 <initialise_monitor_handles+0x140>)
   16d0a:	4623      	mov	r3, r4
   16d0c:	4c46      	ldr	r4, [pc, #280]	; (16e28 <initialise_monitor_handles+0x144>)
   16d0e:	f8c7 8000 	str.w	r8, [r7]
   16d12:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
   16d16:	3301      	adds	r3, #1
   16d18:	2b14      	cmp	r3, #20
   16d1a:	d1fa      	bne.n	16d12 <initialise_monitor_handles+0x2e>
   16d1c:	f8df 810c 	ldr.w	r8, [pc, #268]	; 16e2c <initialise_monitor_handles+0x148>
   16d20:	f8d8 3000 	ldr.w	r3, [r8]
   16d24:	2b00      	cmp	r3, #0
   16d26:	db54      	blt.n	16dd2 <initialise_monitor_handles+0xee>
   16d28:	b94b      	cbnz	r3, 16d3e <initialise_monitor_handles+0x5a>
   16d2a:	4a41      	ldr	r2, [pc, #260]	; (16e30 <initialise_monitor_handles+0x14c>)
   16d2c:	6811      	ldr	r1, [r2, #0]
   16d2e:	3101      	adds	r1, #1
   16d30:	d067      	beq.n	16e02 <initialise_monitor_handles+0x11e>
   16d32:	683a      	ldr	r2, [r7, #0]
   16d34:	e9c4 2300 	strd	r2, r3, [r4]
   16d38:	b005      	add	sp, #20
   16d3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d3e:	f04f 0b03 	mov.w	fp, #3
   16d42:	2304      	movs	r3, #4
   16d44:	9601      	str	r6, [sp, #4]
   16d46:	f04f 0901 	mov.w	r9, #1
   16d4a:	f8cd b00c 	str.w	fp, [sp, #12]
   16d4e:	9302      	str	r3, [sp, #8]
   16d50:	4648      	mov	r0, r9
   16d52:	4629      	mov	r1, r5
   16d54:	beab      	bkpt	0x00ab
   16d56:	4682      	mov	sl, r0
   16d58:	2308      	movs	r3, #8
   16d5a:	9601      	str	r6, [sp, #4]
   16d5c:	4e35      	ldr	r6, [pc, #212]	; (16e34 <initialise_monitor_handles+0x150>)
   16d5e:	f8cd b00c 	str.w	fp, [sp, #12]
   16d62:	f8c6 a000 	str.w	sl, [r6]
   16d66:	9302      	str	r3, [sp, #8]
   16d68:	4648      	mov	r0, r9
   16d6a:	4629      	mov	r1, r5
   16d6c:	beab      	bkpt	0x00ab
   16d6e:	4605      	mov	r5, r0
   16d70:	2100      	movs	r1, #0
   16d72:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 16e30 <initialise_monitor_handles+0x14c>
   16d76:	f8d8 3000 	ldr.w	r3, [r8]
   16d7a:	f8c9 5000 	str.w	r5, [r9]
   16d7e:	3501      	adds	r5, #1
   16d80:	bf08      	it	eq
   16d82:	6832      	ldreq	r2, [r6, #0]
   16d84:	6061      	str	r1, [r4, #4]
   16d86:	bf08      	it	eq
   16d88:	f8c9 2000 	streq.w	r2, [r9]
   16d8c:	683a      	ldr	r2, [r7, #0]
   16d8e:	428b      	cmp	r3, r1
   16d90:	6022      	str	r2, [r4, #0]
   16d92:	da12      	bge.n	16dba <initialise_monitor_handles+0xd6>
   16d94:	2201      	movs	r2, #1
   16d96:	4d28      	ldr	r5, [pc, #160]	; (16e38 <initialise_monitor_handles+0x154>)
   16d98:	4668      	mov	r0, sp
   16d9a:	6029      	str	r1, [r5, #0]
   16d9c:	f8c8 2000 	str.w	r2, [r8]
   16da0:	f7ff fed0 	bl	16b44 <_get_semihosting_exts>
   16da4:	2800      	cmp	r0, #0
   16da6:	dd38      	ble.n	16e1a <initialise_monitor_handles+0x136>
   16da8:	f89d 3000 	ldrb.w	r3, [sp]
   16dac:	f003 0201 	and.w	r2, r3, #1
   16db0:	f003 0302 	and.w	r3, r3, #2
   16db4:	602a      	str	r2, [r5, #0]
   16db6:	f8c8 3000 	str.w	r3, [r8]
   16dba:	b13b      	cbz	r3, 16dcc <initialise_monitor_handles+0xe8>
   16dbc:	2300      	movs	r3, #0
   16dbe:	f8d9 2000 	ldr.w	r2, [r9]
   16dc2:	6831      	ldr	r1, [r6, #0]
   16dc4:	e9c4 3203 	strd	r3, r2, [r4, #12]
   16dc8:	60a1      	str	r1, [r4, #8]
   16dca:	6163      	str	r3, [r4, #20]
   16dcc:	b005      	add	sp, #20
   16dce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16dd2:	2100      	movs	r1, #0
   16dd4:	2201      	movs	r2, #1
   16dd6:	f8df 9060 	ldr.w	r9, [pc, #96]	; 16e38 <initialise_monitor_handles+0x154>
   16dda:	4668      	mov	r0, sp
   16ddc:	f8c9 1000 	str.w	r1, [r9]
   16de0:	f8c8 2000 	str.w	r2, [r8]
   16de4:	f7ff feae 	bl	16b44 <_get_semihosting_exts>
   16de8:	2800      	cmp	r0, #0
   16dea:	dd13      	ble.n	16e14 <initialise_monitor_handles+0x130>
   16dec:	f89d 3000 	ldrb.w	r3, [sp]
   16df0:	f003 0201 	and.w	r2, r3, #1
   16df4:	f003 0302 	and.w	r3, r3, #2
   16df8:	f8c9 2000 	str.w	r2, [r9]
   16dfc:	f8c8 3000 	str.w	r3, [r8]
   16e00:	e792      	b.n	16d28 <initialise_monitor_handles+0x44>
   16e02:	490c      	ldr	r1, [pc, #48]	; (16e34 <initialise_monitor_handles+0x150>)
   16e04:	6838      	ldr	r0, [r7, #0]
   16e06:	6809      	ldr	r1, [r1, #0]
   16e08:	6020      	str	r0, [r4, #0]
   16e0a:	6011      	str	r1, [r2, #0]
   16e0c:	6063      	str	r3, [r4, #4]
   16e0e:	b005      	add	sp, #20
   16e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e14:	f8d8 3000 	ldr.w	r3, [r8]
   16e18:	e786      	b.n	16d28 <initialise_monitor_handles+0x44>
   16e1a:	f8d8 3000 	ldr.w	r3, [r8]
   16e1e:	e7cc      	b.n	16dba <initialise_monitor_handles+0xd6>
   16e20:	0001a5b0 	.word	0x0001a5b0
   16e24:	20001fb4 	.word	0x20001fb4
   16e28:	20001fbc 	.word	0x20001fbc
   16e2c:	20000ad8 	.word	0x20000ad8
   16e30:	20001fb0 	.word	0x20001fb0
   16e34:	20001fb8 	.word	0x20001fb8
   16e38:	20000ad4 	.word	0x20000ad4

00016e3c <_link>:
   16e3c:	b508      	push	{r3, lr}
   16e3e:	f7fe fbcd 	bl	155dc <__errno>
   16e42:	2258      	movs	r2, #88	; 0x58
   16e44:	4603      	mov	r3, r0
   16e46:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16e4a:	601a      	str	r2, [r3, #0]
   16e4c:	bd08      	pop	{r3, pc}
   16e4e:	bf00      	nop

00016e50 <_unlink>:
   16e50:	b5f0      	push	{r4, r5, r6, r7, lr}
   16e52:	b083      	sub	sp, #12
   16e54:	9000      	str	r0, [sp, #0]
   16e56:	f7f6 fc03 	bl	d660 <strlen>
   16e5a:	240e      	movs	r4, #14
   16e5c:	466d      	mov	r5, sp
   16e5e:	9001      	str	r0, [sp, #4]
   16e60:	4620      	mov	r0, r4
   16e62:	4629      	mov	r1, r5
   16e64:	beab      	bkpt	0x00ab
   16e66:	4604      	mov	r4, r0
   16e68:	1c63      	adds	r3, r4, #1
   16e6a:	bf18      	it	ne
   16e6c:	2400      	movne	r4, #0
   16e6e:	d002      	beq.n	16e76 <_unlink+0x26>
   16e70:	4620      	mov	r0, r4
   16e72:	b003      	add	sp, #12
   16e74:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16e76:	f7fe fbb1 	bl	155dc <__errno>
   16e7a:	2613      	movs	r6, #19
   16e7c:	2700      	movs	r7, #0
   16e7e:	4605      	mov	r5, r0
   16e80:	4630      	mov	r0, r6
   16e82:	4639      	mov	r1, r7
   16e84:	beab      	bkpt	0x00ab
   16e86:	4606      	mov	r6, r0
   16e88:	4620      	mov	r0, r4
   16e8a:	602e      	str	r6, [r5, #0]
   16e8c:	b003      	add	sp, #12
   16e8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

00016e90 <_gettimeofday>:
   16e90:	b5f0      	push	{r4, r5, r6, r7, lr}
   16e92:	460d      	mov	r5, r1
   16e94:	b150      	cbz	r0, 16eac <_gettimeofday+0x1c>
   16e96:	4604      	mov	r4, r0
   16e98:	2611      	movs	r6, #17
   16e9a:	2700      	movs	r7, #0
   16e9c:	4630      	mov	r0, r6
   16e9e:	4639      	mov	r1, r7
   16ea0:	beab      	bkpt	0x00ab
   16ea2:	4606      	mov	r6, r0
   16ea4:	17f3      	asrs	r3, r6, #31
   16ea6:	e9c4 6300 	strd	r6, r3, [r4]
   16eaa:	60a7      	str	r7, [r4, #8]
   16eac:	b115      	cbz	r5, 16eb4 <_gettimeofday+0x24>
   16eae:	2300      	movs	r3, #0
   16eb0:	e9c5 3300 	strd	r3, r3, [r5]
   16eb4:	2000      	movs	r0, #0
   16eb6:	bdf0      	pop	{r4, r5, r6, r7, pc}

00016eb8 <_clock>:
   16eb8:	b530      	push	{r4, r5, lr}
   16eba:	2410      	movs	r4, #16
   16ebc:	2500      	movs	r5, #0
   16ebe:	4620      	mov	r0, r4
   16ec0:	4629      	mov	r1, r5
   16ec2:	beab      	bkpt	0x00ab
   16ec4:	4604      	mov	r4, r0
   16ec6:	4620      	mov	r0, r4
   16ec8:	bd30      	pop	{r4, r5, pc}
   16eca:	bf00      	nop

00016ecc <_times>:
   16ecc:	b570      	push	{r4, r5, r6, lr}
   16ece:	2510      	movs	r5, #16
   16ed0:	2600      	movs	r6, #0
   16ed2:	4604      	mov	r4, r0
   16ed4:	4628      	mov	r0, r5
   16ed6:	4631      	mov	r1, r6
   16ed8:	beab      	bkpt	0x00ab
   16eda:	4605      	mov	r5, r0
   16edc:	b11c      	cbz	r4, 16ee6 <_times+0x1a>
   16ede:	e9c4 5600 	strd	r5, r6, [r4]
   16ee2:	e9c4 6602 	strd	r6, r6, [r4, #8]
   16ee6:	4628      	mov	r0, r5
   16ee8:	bd70      	pop	{r4, r5, r6, pc}
   16eea:	bf00      	nop

00016eec <_isatty>:
   16eec:	4b17      	ldr	r3, [pc, #92]	; (16f4c <_isatty+0x60>)
   16eee:	b570      	push	{r4, r5, r6, lr}
   16ef0:	681b      	ldr	r3, [r3, #0]
   16ef2:	4605      	mov	r5, r0
   16ef4:	b10b      	cbz	r3, 16efa <_isatty+0xe>
   16ef6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   16ef8:	b1e2      	cbz	r2, 16f34 <_isatty+0x48>
   16efa:	2d13      	cmp	r5, #19
   16efc:	d81f      	bhi.n	16f3e <_isatty+0x52>
   16efe:	4814      	ldr	r0, [pc, #80]	; (16f50 <_isatty+0x64>)
   16f00:	f850 3035 	ldr.w	r3, [r0, r5, lsl #3]
   16f04:	3301      	adds	r3, #1
   16f06:	d01a      	beq.n	16f3e <_isatty+0x52>
   16f08:	2409      	movs	r4, #9
   16f0a:	eb00 05c5 	add.w	r5, r0, r5, lsl #3
   16f0e:	4620      	mov	r0, r4
   16f10:	4629      	mov	r1, r5
   16f12:	beab      	bkpt	0x00ab
   16f14:	4604      	mov	r4, r0
   16f16:	2c01      	cmp	r4, #1
   16f18:	4620      	mov	r0, r4
   16f1a:	d00a      	beq.n	16f32 <_isatty+0x46>
   16f1c:	f7fe fb5e 	bl	155dc <__errno>
   16f20:	2613      	movs	r6, #19
   16f22:	2400      	movs	r4, #0
   16f24:	4605      	mov	r5, r0
   16f26:	4630      	mov	r0, r6
   16f28:	4621      	mov	r1, r4
   16f2a:	beab      	bkpt	0x00ab
   16f2c:	4606      	mov	r6, r0
   16f2e:	4620      	mov	r0, r4
   16f30:	602e      	str	r6, [r5, #0]
   16f32:	bd70      	pop	{r4, r5, r6, pc}
   16f34:	4618      	mov	r0, r3
   16f36:	f7fc f94b 	bl	131d0 <__sinit>
   16f3a:	2d13      	cmp	r5, #19
   16f3c:	d9df      	bls.n	16efe <_isatty+0x12>
   16f3e:	f7fe fb4d 	bl	155dc <__errno>
   16f42:	2209      	movs	r2, #9
   16f44:	4603      	mov	r3, r0
   16f46:	2000      	movs	r0, #0
   16f48:	601a      	str	r2, [r3, #0]
   16f4a:	bd70      	pop	{r4, r5, r6, pc}
   16f4c:	20000124 	.word	0x20000124
   16f50:	20001fbc 	.word	0x20001fbc

00016f54 <_system>:
   16f54:	b5f0      	push	{r4, r5, r6, r7, lr}
   16f56:	b083      	sub	sp, #12
   16f58:	b1d0      	cbz	r0, 16f90 <_system+0x3c>
   16f5a:	9000      	str	r0, [sp, #0]
   16f5c:	f7f6 fb80 	bl	d660 <strlen>
   16f60:	2412      	movs	r4, #18
   16f62:	466d      	mov	r5, sp
   16f64:	9001      	str	r0, [sp, #4]
   16f66:	4620      	mov	r0, r4
   16f68:	4629      	mov	r1, r5
   16f6a:	beab      	bkpt	0x00ab
   16f6c:	4604      	mov	r4, r0
   16f6e:	1c63      	adds	r3, r4, #1
   16f70:	4625      	mov	r5, r4
   16f72:	d011      	beq.n	16f98 <_system+0x44>
   16f74:	2cff      	cmp	r4, #255	; 0xff
   16f76:	d805      	bhi.n	16f84 <_system+0x30>
   16f78:	b124      	cbz	r4, 16f84 <_system+0x30>
   16f7a:	0065      	lsls	r5, r4, #1
   16f7c:	f3c5 2307 	ubfx	r3, r5, #8, #8
   16f80:	42a3      	cmp	r3, r4
   16f82:	d102      	bne.n	16f8a <_system+0x36>
   16f84:	4628      	mov	r0, r5
   16f86:	b003      	add	sp, #12
   16f88:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16f8a:	006d      	lsls	r5, r5, #1
   16f8c:	d1f6      	bne.n	16f7c <_system+0x28>
   16f8e:	e7f9      	b.n	16f84 <_system+0x30>
   16f90:	2501      	movs	r5, #1
   16f92:	4628      	mov	r0, r5
   16f94:	b003      	add	sp, #12
   16f96:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16f98:	f7fe fb20 	bl	155dc <__errno>
   16f9c:	2613      	movs	r6, #19
   16f9e:	2700      	movs	r7, #0
   16fa0:	4604      	mov	r4, r0
   16fa2:	4630      	mov	r0, r6
   16fa4:	4639      	mov	r1, r7
   16fa6:	beab      	bkpt	0x00ab
   16fa8:	4606      	mov	r6, r0
   16faa:	6026      	str	r6, [r4, #0]
   16fac:	e7ea      	b.n	16f84 <_system+0x30>
   16fae:	bf00      	nop

00016fb0 <_rename>:
   16fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
   16fb2:	b085      	sub	sp, #20
   16fb4:	460c      	mov	r4, r1
   16fb6:	9000      	str	r0, [sp, #0]
   16fb8:	f7f6 fb52 	bl	d660 <strlen>
   16fbc:	4603      	mov	r3, r0
   16fbe:	4620      	mov	r0, r4
   16fc0:	e9cd 3401 	strd	r3, r4, [sp, #4]
   16fc4:	f7f6 fb4c 	bl	d660 <strlen>
   16fc8:	240f      	movs	r4, #15
   16fca:	466d      	mov	r5, sp
   16fcc:	9003      	str	r0, [sp, #12]
   16fce:	4620      	mov	r0, r4
   16fd0:	4629      	mov	r1, r5
   16fd2:	beab      	bkpt	0x00ab
   16fd4:	4604      	mov	r4, r0
   16fd6:	1c63      	adds	r3, r4, #1
   16fd8:	d006      	beq.n	16fe8 <_rename+0x38>
   16fda:	3c00      	subs	r4, #0
   16fdc:	bf18      	it	ne
   16fde:	2401      	movne	r4, #1
   16fe0:	4264      	negs	r4, r4
   16fe2:	4620      	mov	r0, r4
   16fe4:	b005      	add	sp, #20
   16fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16fe8:	f7fe faf8 	bl	155dc <__errno>
   16fec:	2613      	movs	r6, #19
   16fee:	2700      	movs	r7, #0
   16ff0:	4605      	mov	r5, r0
   16ff2:	4630      	mov	r0, r6
   16ff4:	4639      	mov	r1, r7
   16ff6:	beab      	bkpt	0x00ab
   16ff8:	4606      	mov	r6, r0
   16ffa:	4620      	mov	r0, r4
   16ffc:	602e      	str	r6, [r5, #0]
   16ffe:	b005      	add	sp, #20
   17000:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17002:	bf00      	nop

00017004 <_exit>:
   17004:	4601      	mov	r1, r0
   17006:	b508      	push	{r3, lr}
   17008:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1700c:	4a01      	ldr	r2, [pc, #4]	; (17014 <_exit+0x10>)
   1700e:	f000 f803 	bl	17018 <_kill_shared>
   17012:	bf00      	nop
   17014:	00020026 	.word	0x00020026

00017018 <_kill_shared>:
   17018:	b500      	push	{lr}
   1701a:	b083      	sub	sp, #12
   1701c:	e9cd 2100 	strd	r2, r1, [sp]
   17020:	f7ff fe18 	bl	16c54 <_has_ext_exit_extended>
   17024:	2800      	cmp	r0, #0
   17026:	bf14      	ite	ne
   17028:	2420      	movne	r4, #32
   1702a:	2418      	moveq	r4, #24
   1702c:	f7ff fe12 	bl	16c54 <_has_ext_exit_extended>
   17030:	b120      	cbz	r0, 1703c <_kill_shared+0x24>
   17032:	466d      	mov	r5, sp
   17034:	4620      	mov	r0, r4
   17036:	4629      	mov	r1, r5
   17038:	beab      	bkpt	0x00ab
   1703a:	4604      	mov	r4, r0
   1703c:	9d00      	ldr	r5, [sp, #0]
   1703e:	4620      	mov	r0, r4
   17040:	4629      	mov	r1, r5
   17042:	beab      	bkpt	0x00ab
   17044:	4604      	mov	r4, r0
   17046:	bf00      	nop

00017048 <_kill>:
   17048:	2906      	cmp	r1, #6
   1704a:	b508      	push	{r3, lr}
   1704c:	d002      	beq.n	17054 <_kill+0xc>
   1704e:	4a03      	ldr	r2, [pc, #12]	; (1705c <_kill+0x14>)
   17050:	f7ff ffe2 	bl	17018 <_kill_shared>
   17054:	4a02      	ldr	r2, [pc, #8]	; (17060 <_kill+0x18>)
   17056:	f7ff ffdf 	bl	17018 <_kill_shared>
   1705a:	bf00      	nop
   1705c:	00020026 	.word	0x00020026
   17060:	00020023 	.word	0x00020023

00017064 <_init>:
   17064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   17066:	bf00      	nop
   17068:	bcf8      	pop	{r3, r4, r5, r6, r7}
   1706a:	bc08      	pop	{r3}
   1706c:	469e      	mov	lr, r3
   1706e:	4770      	bx	lr

00017070 <_fini>:
   17070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   17072:	bf00      	nop
   17074:	bcf8      	pop	{r3, r4, r5, r6, r7}
   17076:	bc08      	pop	{r3}
   17078:	469e      	mov	lr, r3
   1707a:	4770      	bx	lr

0001707c <all_implied_fbits>:
   1707c:	2702 2705 2707 272f 2731 270d 272b 2711     .'.'.'/'1'.'+'.'
   1708c:	2710 271a 2738 2714 273b 2723 271f 273a     .'.'8'.';'#'.':'
   1709c:	2726 0000                                   &'..

000170a0 <kCfsrBfarValidFlag>:
   170a0:	8000 0000                                   ....

000170a4 <kCfsrLspErrFlag>:
   170a4:	2000 0000                                   . ..

000170a8 <kCfsrStkErrFlag>:
   170a8:	1000 0000                                   ....

000170ac <kCfsrUnstkErrFlag>:
   170ac:	0800 0000                                   ....

000170b0 <kCfsrImpreciseErrFlag>:
   170b0:	0400 0000                                   ....

000170b4 <kCfsrPreciseErrFlag>:
   170b4:	0200 0000                                   ....

000170b8 <kCfsrIBusErrFlag>:
   170b8:	0100 0000                                   ....

000170bc <kCfsrMmarValidFlag>:
   170bc:	0080 0000                                   ....

000170c0 <kCfsrMLspErrFlag>:
   170c0:	0020 0000                                    ...

000170c4 <kCfsrMStkErrFlag>:
   170c4:	0010 0000                                   ....

000170c8 <kCfsrMUnstkErrFlag>:
   170c8:	0008 0000                                   ....

000170cc <kCfsrDAccViolFlag>:
   170cc:	0002 0000                                   ....

000170d0 <kCfsrIAccViolFlag>:
   170d0:	0001 0000                                   ....

000170d4 <kCfsrDivByZeroFlag>:
   170d4:	0000 0200                                   ....

000170d8 <kCfsrUnalignedFlag>:
   170d8:	0000 0100                                   ....

000170dc <kCfsrNoCpFlag>:
   170dc:	0000 0008                                   ....

000170e0 <kCfsrInvPcFlag>:
   170e0:	0000 0004                                   ....

000170e4 <kCfsrInvStateFlag>:
   170e4:	0000 0002                                   ....

000170e8 <kCfsrUndefInstrFlag>:
   170e8:	0000 0001                                   ....

000170ec <kCcrNonBaseThreadEnableFlag>:
   170ec:	0001 0000                                   ....

000170f0 <kCcrUserSettablePendSvFlag>:
   170f0:	0002 0000                                   ....

000170f4 <kCcrUnalignTrapEnableFlag>:
   170f4:	0008 0000                                   ....

000170f8 <kCcrDivByZeroTrapEnableFlag>:
   170f8:	0010 0000                                   ....

000170fc <kCcrMainStackAlignFlag>:
   170fc:	0200 0000                                   ....

00017100 <kCcrIgnoreLsbOnDataFlag>:
   17100:	0400 0000                                   ....

00017104 <kCcrStkAlignFlag>:
   17104:	0200 0000                                   ....

00017108 <kCcrBranchPredictionEnableFlag>:
   17108:	0000 0004                                   ....

0001710c <kCcrL1CacheEnableFlag>:
   1710c:	0000 0008                                   ....

00017110 <kSystickCsrCountFlag>:
   17110:	0010 0000                                   ....

00017114 <kSystickCsrClkSource>:
   17114:	0002 0000                                   ....

00017118 <kSystickCsrClkSourceExternal>:
   17118:	0000 0000                                   ....

0001711c <kSystickCsrClkSourceCore>:
   1711c:	0002 0000                                   ....

00017120 <kSystickCsrTickInt>:
   17120:	0001 0000                                   ....

00017124 <kSystickCsrTickIntPend>:
   17124:	0001 0000                                   ....

00017128 <kSystickCsrTickIntNoPend>:
   17128:	0000 0000                                   ....

0001712c <kSystickCsrEnable>:
   1712c:	0000 0000                                   ....

00017130 <kSystickCsrEnableMultishot>:
   17130:	0000 0000                                   ....

00017134 <kSystickCsrEnableDisabled>:
   17134:	0000 0000                                   ....

00017138 <kSystickCvrNoRef>:
   17138:	001f 0000                                   ....

0001713c <kSystickCvrSkew>:
   1713c:	001e 0000                                   ....

00017140 <kSystickCvrTenms>:
   17140:	ffff 00ff 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ....------------
   17150:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
   17160:	2d2d 002d 6d45 6c75 7461 726f 7420 7365     ---.Emulator tes
   17170:	2074 6562 636e 0068                         t bench.

00017178 <kSystickCsrCountFlag>:
   17178:	0010 0000                                   ....

0001717c <kSystickCsrClkSource>:
   1717c:	0002 0000                                   ....

00017180 <kSystickCsrClkSourceExternal>:
   17180:	0000 0000                                   ....

00017184 <kSystickCsrClkSourceCore>:
   17184:	0002 0000                                   ....

00017188 <kSystickCsrTickInt>:
   17188:	0001 0000                                   ....

0001718c <kSystickCsrTickIntPend>:
   1718c:	0001 0000                                   ....

00017190 <kSystickCsrTickIntNoPend>:
   17190:	0000 0000                                   ....

00017194 <kSystickCsrEnable>:
   17194:	0000 0000                                   ....

00017198 <kSystickCsrEnableMultishot>:
   17198:	0000 0000                                   ....

0001719c <kSystickCsrEnableDisabled>:
   1719c:	0000 0000                                   ....

000171a0 <kSystickCvrNoRef>:
   171a0:	001f 0000                                   ....

000171a4 <kSystickCvrSkew>:
   171a4:	001e 0000                                   ....

000171a8 <kSystickCvrTenms>:
   171a8:	ffff 00ff                                   ....

000171ac <kEps>:
   171ac:	b717 38d1 2023 6554 7473 203a 6953 706d     ...8# Test: Simp
   171bc:	656c 6320 6c61 7563 616c 6974 6e6f 2073     le calculations 
   171cc:	6977 6874 6620 6f6c 7461 0073 2066 3d3d     with floats.f ==
   171dc:	3120 3332 352e 0066 6f76 6469 5420 7365      123.5f.void Tes
   171ec:	4674 6f6c 7461 2928 0000 0000 552f 6573     tFloat()..../Use
   171fc:	7372 632f 6767 6c2f 6269 696d 7263 656f     rs/cgg/libmicroe
   1720c:	756d 742f 7365 7374 732f 7379 6574 5f6d     mu/tests/system_
   1721c:	6574 7473 2f73 6574 7473 6562 636e 2f68     tests/testbench/
   1722c:	7273 2f63 6574 7473 665f 6f6c 7461 632e     src/test_float.c
   1723c:	7070 0000 5f66 2069 3d3d 3120 3332 0000     pp..f_i == 123..
   1724c:	6628 6172 2063 3d3e 2820 2e30 6635 2d20     (frac >= (0.5f -
   1725c:	6b20 7045 2973 2029 2626 2820 7266 6361      kEps)) && (frac
   1726c:	3c20 203d 3028 352e 2066 202b 456b 7370      <= (0.5f + kEps
   1727c:	2929 0000 6964 6967 2074 3d3e 3020 2620     ))..digit >= 0 &
   1728c:	2026 6964 6967 2074 3d3c 3920 0000 0000     & digit <= 9....
   1729c:	2069 3d21 3020 7c20 207c 6964 6967 2074     i != 0 || digit 
   172ac:	3d3d 3520 0000 0000 2069 3d21 3120 7c20     == 5....i != 1 |
   172bc:	207c 6964 6967 2074 3d3d 3020 0000 0000     | digit == 0....
   172cc:	2069 3d21 3220 7c20 207c 6964 6967 2074     i != 2 || digit 
   172dc:	3d3d 3020 0000 0000 7349 6c46 616f 4574     == 0....IsFloatE
   172ec:	7571 6c61 6128 202c 2e39 6630 0029 0000     qual(a, 9.0f)...
   172fc:	7349 6c46 616f 4574 7571 6c61 6128 635f     IsFloatEqual(a_c
   1730c:	6965 2c6c 3220 302e 2966 0000 7349 6c46     eil, 2.0f)..IsFl
   1731c:	616f 4574 7571 6c61 6128 665f 6f6c 726f     oatEqual(a_floor
   1732c:	202c 2e31 6630 0029 7349 6c46 616f 4574     , 1.0f).IsFloatE
   1733c:	7571 6c61 6128 725f 756f 646e 202c 2e31     qual(a_round, 1.
   1734c:	6630 0029 7473 3a64 693a 6e73 6e61 4e28     0f).std::isnan(N
   1735c:	4e41 2029 3d3d 7420 7572 0065 7473 3a64     AN) == true.std:
   1736c:	693a 6e73 6e61 4928 464e 4e49 5449 2959     :isnan(INFINITY)
   1737c:	3d20 203d 6166 736c 0065 0000 7473 3a64      == false...std:
   1738c:	693a 6e73 6e61 3028 302e 2029 3d3d 6620     :isnan(0.0) == f
   1739c:	6c61 6573 0000 0000 7473 3a64 693a 6973     alse....std::isi
   173ac:	666e 4928 464e 4e49 5449 2959 3d20 203d     nf(INFINITY) == 
   173bc:	7274 6575 0000 0000 2023 6554 7473 203a     true....# Test: 
   173cc:	7053 6972 746e 0066 4241 0043 7325 202c     Sprintf.ABC.%s, 
   173dc:	6925 202c 7525 0000 4241 2c43 2d20 3231     %i, %u..ABC, -12
   173ec:	2c33 3320 3534 0000 7473 6372 706d 6228     3, 345..strcmp(b
   173fc:	6675 202c 4122 4342 202c 312d 3332 202c     uf, "ABC, -123, 
   1740c:	3433 2235 2029 3d3d 3020 0000 6f76 6469     345") == 0..void
   1741c:	5420 7365 5374 7270 6e69 6674 2928 0000      TestSprintf()..
   1742c:	552f 6573 7372 632f 6767 6c2f 6269 696d     /Users/cgg/libmi
   1743c:	7263 656f 756d 742f 7365 7374 732f 7379     croemu/tests/sys
   1744c:	6574 5f6d 6574 7473 2f73 6574 7473 6562     tem_tests/testbe
   1745c:	636e 2f68 7273 2f63 6574 7473 735f 7270     nch/src/test_spr
   1746c:	6e69 6674 632e 7070 0000 0000 2020 3231     intf.cpp....  12
   1747c:	3433 3d20 203d 7525 000a 0000 2020 3231     34 == %u....  12
   1748c:	3433 3d20 203d 3231 3433 000a 7473 6372     34 == 1234..strc
   1749c:	706d 6228 6675 202c 2022 3120 3332 2034     mp(buf, "  1234 
   174ac:	3d3d 3120 3332 5c34 226e 2029 3d3d 3020     == 1234\n") == 0
   174bc:	0000 0000 2020 7830 4143 4546 4142 4542     ....  0xCAFEBABE
   174cc:	3d20 203d 7830 5825 000a 0000 2020 7830      == 0x%X....  0x
   174dc:	4143 4546 4142 4542 3d20 203d 7830 4143     CAFEBABE == 0xCA
   174ec:	4546 4142 4542 000a 7473 6372 706d 6228     FEBABE..strcmp(b
   174fc:	6675 202c 2022 3020 4378 4641 4245 4241     uf, "  0xCAFEBAB
   1750c:	2045 3d3d 3020 4378 4641 4245 4241 5c45     E == 0xCAFEBABE\
   1751c:	226e 2029 3d3d 3020 0000 0000 2020 6c46     n") == 0....  Fl
   1752c:	616f 3a74 2520 0a66 0000 0000 2020 6c46     oat: %f.....  Fl
   1753c:	616f 3a74 3120 3332 342e 3635 3737 0a39     oat: 123.456779.
   1754c:	0000 0000 7473 6372 706d 6228 6675 202c     ....strcmp(buf, 
   1755c:	2022 4620 6f6c 7461 203a 3231 2e33 3534     "  Float: 123.45
   1756c:	3736 3937 6e5c 2922 3d20 203d 0030 0000     6779\n") == 0...
   1757c:	6e69 6573 7472 6465 7320 7274 0000 0000     inserted str....
   1758c:	2020 2d2d 203e 7325 0a20 0000 2020 2d2d       --> %s ...  --
   1759c:	203e 6e69 6573 7472 6465 7320 7274 0a20     > inserted str .
   175ac:	0000 0000 7473 6372 706d 6228 6675 202c     ....strcmp(buf, 
   175bc:	2022 2d20 3e2d 6920 736e 7265 6574 2064     "  --> inserted 
   175cc:	7473 2072 6e5c 2922 3d20 203d 0030 0000     str \n") == 0...
   175dc:	2023 6554 7473 203a 7453 6e61 6164 6472     # Test: Standard
   175ec:	6f20 7475 7570 0074 2020 6548 6c6c 206f      output.  Hello 
   175fc:	6f57 6c72 0064 0000 2020 3130 3332 3534     World...  012345
   1760c:	3736 3938 3130 3332 3534 3736 3938 3130     6789012345678901
   1761c:	3332 3534 3736 3938 3130 3332 3534 3736     2345678901234567
   1762c:	3938 0000 2020 7066 6972 746e 2066 756f     89..  fprintf ou
   1763c:	7074 7475 000a 0000 2020 7069 6972 746e     tput....  iprint
   1764c:	2066 756f 7074 7475 000a 0000               f output....

00017658 <kStackAlign>:
   17658:	0008 0000 6552 6461 534d 2850 2029 2025     ....ReadMSP() % 
   17668:	536b 6174 6b63 6c41 6769 206e 3d3d 3020     kStackAlign == 0
   17678:	0000 0000 6975 746e 3233 745f 5320 6174     ....uint32_t Sta
   17688:	6b63 6c41 6769 6d6e 6e65 5474 7365 2874     ckAlignmentTest(
   17698:	0029 0000 552f 6573 7372 632f 6767 6c2f     ).../Users/cgg/l
   176a8:	6269 696d 7263 656f 756d 742f 7365 7374     ibmicroemu/tests
   176b8:	732f 7379 6574 5f6d 6574 7473 2f73 6574     /system_tests/te
   176c8:	7473 6562 636e 2f68 7273 2f63 6574 7473     stbench/src/test
   176d8:	735f 6174 6b63 615f 696c 6e67 656d 746e     _stack_alignment
   176e8:	632e 7070 0000 0000 6975 746e 3233 745f     .cpp....uint32_t
   176f8:	4320 6c61 466c 7463 2833 6975 746e 3233      CallFct3(uint32
   17708:	745f 0029 6975 746e 3631 745f 4320 6c61     _t).uint16_t Cal
   17718:	466c 7463 2832 6975 746e 3631 745f 0029     lFct2(uint16_t).
   17728:	6975 746e 5f38 2074 6143 6c6c 6346 3174     uint8_t CallFct1
   17738:	7528 6e69 3874 745f 0029 0000 2023 6554     (uint8_t)...# Te
   17748:	7473 203a 7453 6361 206b 6c61 6769 6d6e     st: Stack alignm
   17758:	6e65 0074 7453 6361 416b 696c 6e67 656d     ent.StackAlignme
   17768:	746e 6554 7473 2928 3d20 203d 7830 4546     ntTest() == 0xFE
   17778:	0000 0000 6f76 6469 5420 7365 5374 6174     ....void TestSta
   17788:	6b63 6c41 6769 6d6e 6e65 2874 0029 0000     ckAlignment()...
   17798:	6143 6c6c 6346 3174 3028 4478 2945 3d20     CallFct1(0xDE) =
   177a8:	203d 7830 4544 0000 736d 5f70 6562 6f66     = 0xDE..msp_befo
   177b8:	6572 3d20 203d 736d 5f70 6661 6574 0072     re == msp_after.
   177c8:	0000 0000 7473 6c72 6e65 7428 7365 5f74     ....strlen(test_
   177d8:	7473 3172 2029 3d3d 3020 0000 6f76 6469     str1) == 0..void
   177e8:	5420 7365 5374 7274 656c 286e 0029 0000      TestStrlen()...
   177f8:	552f 6573 7372 632f 6767 6c2f 6269 696d     /Users/cgg/libmi
   17808:	7263 656f 756d 742f 7365 7374 732f 7379     croemu/tests/sys
   17818:	6574 5f6d 6574 7473 2f73 6574 7473 6562     tem_tests/testbe
   17828:	636e 2f68 7273 2f63 6574 7473 735f 6474     nch/src/test_std
   17838:	615f 676c 736f 632e 7070 0000 0030 0000     _algos.cpp..0...
   17848:	7473 6c72 6e65 7428 7365 5f74 7473 3272     strlen(test_str2
   17858:	2029 3d3d 3120 0000 3130 3332 3534 3736     ) == 1..01234567
   17868:	0038 0000 7473 6c72 6e65 7428 7365 5f74     8...strlen(test_
   17878:	7473 3372 2029 3d3d 3920 0000 616d 6e69     str3) == 9..main
   17888:	632e 7070 0000 0000 7473 6c72 6e65 7428     .cpp....strlen(t
   17898:	7365 5f74 7473 3472 2029 3d3d 3820 0000     est_str4) == 8..
   178a8:	4241 4443 4645 0047 7473 6372 706d 7428     ABCDEFG.strcmp(t
   178b8:	7365 5f74 7473 5f72 6d63 2c70 2220 4241     est_str_cmp, "AB
   178c8:	4443 4645 2247 2029 3d3d 3020 0000 0000     CDEFG") == 0....
   178d8:	6f76 6469 5420 7365 5374 7274 6d63 2870     void TestStrcmp(
   178e8:	0029 0000 4241 6443 4645 0047 7473 6372     )...ABCdEFG.strc
   178f8:	706d 7428 7365 5f74 7473 5f72 6d63 2c70     mp(test_str_cmp,
   17908:	2220 4241 6443 4645 2247 2029 203c 0030      "ABCdEFG") < 0.
   17918:	4241 4343 4645 0047 7473 6372 706d 7428     ABCCEFG.strcmp(t
   17928:	7365 5f74 7473 5f72 6d63 2c70 2220 4241     est_str_cmp, "AB
   17938:	4343 4645 2247 2029 203e 0030 6261 3463     CCEFG") > 0.abc4
   17948:	3635 3837 3039 0000 7473 6372 706d 7328     567890..strcmp(s
   17958:	7274 2c31 2220 6261 3463 3635 3837 3039     tr1, "abc4567890
   17968:	2922 3d20 203d 0030 6f76 6469 5420 7365     ") == 0.void Tes
   17978:	4d74 6d65 7043 2879 0029 0000 3231 3433     tMemCpy()...1234
   17988:	3635 3837 3039 0000 6261 6463 6665 6867     567890..abcdefgh
   17998:	6a69 0000 3231 3433 3534 3836 3039 0000     ij..1234456890..
   179a8:	7473 6372 706d 7328 7274 202c 3122 3332     strcmp(str, "123
   179b8:	3434 3635 3938 2230 2029 3d3d 3020 0000     4456890") == 0..
   179c8:	6f76 6469 5420 7365 4d74 6d65 6f4d 6576     void TestMemMove
   179d8:	2928 0000 2023 6554 7473 203a 7453 6e61     ()..# Test: Stan
   179e8:	6164 6472 6120 676c 726f 7469 6d68 736e     dard algorithmns
   179f8:	0000 0000 2023 6554 7473 203a 6953 706d     ....# Test: Simp
   17a08:	656c 6320 6c61 7563 616c 6974 6e6f 2073     le calculations 
   17a18:	6977 6874 7320 6769 656e 2064 6e69 6574     with signed inte
   17a28:	6567 7372 0000 0000 6361 7563 2038 3d3d     gers....accu8 ==
   17a38:	3120 3230 0000 0000 6f76 6469 5420 7365      102....void Tes
   17a48:	4974 746e 6143 636c 2928 0000 552f 6573     tIntCalc()../Use
   17a58:	7372 632f 6767 6c2f 6269 696d 7263 656f     rs/cgg/libmicroe
   17a68:	756d 742f 7365 7374 732f 7379 6574 5f6d     mu/tests/system_
   17a78:	6574 7473 2f73 6574 7473 6562 636e 2f68     tests/testbench/
   17a88:	7273 2f63 6574 7473 695f 746e 635f 6c61     src/test_int_cal
   17a98:	2e63 7063 0070 0000 6361 7563 2038 3d3d     c.cpp...accu8 ==
   17aa8:	2d20 3633 0000 0000 6361 7563 2038 3d3d      -36....accu8 ==
   17ab8:	2d20 3031 0038 0000 6361 7563 2038 3d3d      -108...accu8 ==
   17ac8:	2d20 3231 0030 0000 6361 7563 2038 3d3d      -120...accu8 ==
   17ad8:	3120 0030 6361 7563 2038 3d3d 3120 3831      10.accu8 == 118
   17ae8:	0000 0000 6361 7563 2038 3d3d 3420 5532     ....accu8 == 42U
   17af8:	0000 0000 6361 7563 3631 3d20 203d 3031     ....accu16 == 10
   17b08:	0032 0000 6361 7563 3631 3d20 203d 332d     2...accu16 == -3
   17b18:	0036 0000 6361 7563 3631 3d20 203d 312d     6...accu16 == -1
   17b28:	3830 0000 6361 7563 3631 3d20 203d 312d     08..accu16 == -1
   17b38:	3032 0000 6361 7563 3631 3d20 203d 3031     20..accu16 == 10
   17b48:	0000 0000 6361 7563 3631 3d20 203d 3233     ....accu16 == 32
   17b58:	3537 0038 6361 7563 3631 3d20 203d 3234     758.accu16 == 42
   17b68:	0055 0000 6361 7563 3233 3d20 203d 3031     U...accu32 == 10
   17b78:	0032 0000 6361 7563 3233 3d20 203d 332d     2...accu32 == -3
   17b88:	0036 0000 6361 7563 3233 3d20 203d 312d     6...accu32 == -1
   17b98:	3830 0000 6361 7563 3233 3d20 203d 312d     08..accu32 == -1
   17ba8:	3032 0000 6361 7563 3233 3d20 203d 3031     20..accu32 == 10
   17bb8:	0000 0000 6361 7563 3233 3d20 203d 3132     ....accu32 == 21
   17bc8:	3734 3834 3633 3833 0000 0000 6361 7563     47483638....accu
   17bd8:	3233 3d20 203d 3234 0055 0000 6128 2520     32 == 42U...(a %
   17be8:	6220 2029 3d3d 3020 0000 0000 6128 2520      b) == 0....(a %
   17bf8:	6220 2029 3d3d 3020 3878 3030 3030 3030      b) == 0x8000000
   17c08:	0031 0000 2023 6554 7473 203a 6953 706d     1...# Test: Simp
   17c18:	656c 6320 6c61 7563 616c 6974 6e6f 2073     le calculations 
   17c28:	6977 6874 7520 736e 6769 656e 2064 6e69     with unsigned in
   17c38:	6574 6567 7372 0000 6361 7563 2038 3d3d     tegers..accu8 ==
   17c48:	3220 3634 0055 0000 6f76 6469 5420 7365      246U...void Tes
   17c58:	5574 6e49 4374 6c61 2863 0029 552f 6573     tUIntCalc()./Use
   17c68:	7372 632f 6767 6c2f 6269 696d 7263 656f     rs/cgg/libmicroe
   17c78:	756d 742f 7365 7374 732f 7379 6574 5f6d     mu/tests/system_
   17c88:	6574 7473 2f73 6574 7473 6562 636e 2f68     tests/testbench/
   17c98:	7273 2f63 6574 7473 755f 6e69 5f74 6163     src/test_uint_ca
   17ca8:	636c 632e 7070 0000 6361 7563 2038 3d3d     lc.cpp..accu8 ==
   17cb8:	3820 0055 6361 7563 2038 3d3d 3520 5536      8U.accu8 == 56U
   17cc8:	0000 0000 6361 7563 2038 3d3d 3220 3535     ....accu8 == 255
   17cd8:	0055 0000 6361 7563 2038 3d3d 3120 5530     U...accu8 == 10U
   17ce8:	0000 0000 6361 7563 2038 3d3d 3320 0055     ....accu8 == 3U.
   17cf8:	6361 7563 2038 3d3d 3020 0055 6361 7563     accu8 == 0U.accu
   17d08:	2038 3d3d 3420 5532 0000 0000 6361 7563     8 == 42U....accu
   17d18:	3631 3d20 203d 3432 5536 0000 6361 7563     16 == 246U..accu
   17d28:	3631 3d20 203d 3337 5538 0000 6361 7563     16 == 738U..accu
   17d38:	3631 3d20 203d 3035 5530 0000 6361 7563     16 == 500U..accu
   17d48:	3631 3d20 203d 3032 0055 0000 6361 7563     16 == 20U...accu
   17d58:	3631 3d20 203d 5533 0000 0000 6361 7563     16 == 3U....accu
   17d68:	3631 3d20 203d 5530 0000 0000 6361 7563     16 == 0U....accu
   17d78:	3631 3d20 203d 3536 3335 5535 0000 0000     16 == 65535U....
   17d88:	6361 7563 3631 3d20 203d 3234 0055 0000     accu16 == 42U...
   17d98:	6361 7563 3233 3d20 203d 3432 5536 0000     accu32 == 246U..
   17da8:	6361 7563 3233 3d20 203d 3337 5538 0000     accu32 == 738U..
   17db8:	6361 7563 3233 3d20 203d 3035 5530 0000     accu32 == 500U..
   17dc8:	6361 7563 3233 3d20 203d 3032 0055 0000     accu32 == 20U...
   17dd8:	6361 7563 3233 3d20 203d 5533 0000 0000     accu32 == 3U....
   17de8:	6361 7563 3233 3d20 203d 5530 0000 0000     accu32 == 0U....
   17df8:	6361 7563 3233 3d20 203d 3234 3439 3639     accu32 == 429496
   17e08:	3237 3539 0055 0000 6361 7563 3233 3d20     7295U...accu32 =
   17e18:	203d 3234 0055 0000 6128 2520 6220 2029     = 42U...(a % b) 
   17e28:	3d3d 3020 0055 0000 6128 2520 6220 2029     == 0U...(a % b) 
   17e38:	3d3d 3120 0055 0000 2023 6554 7473 203a     == 1U...# Test: 
   17e48:	6649 7420 6568 206e 6c65 6573 0000 0000     If then else....
   17e58:	7242 6e61 6863 6554 7473 6128 6772 2029     BranchTest(arg) 
   17e68:	3d3d 3520 0055 0000 6f76 6469 5420 7365     == 5U...void Tes
   17e78:	4974 5466 6568 456e 736c 2865 0029 0000     tIfThenElse()...
   17e88:	552f 6573 7372 632f 6767 6c2f 6269 696d     /Users/cgg/libmi
   17e98:	7263 656f 756d 742f 7365 7374 732f 7379     croemu/tests/sys
   17ea8:	6574 5f6d 6574 7473 2f73 6574 7473 6562     tem_tests/testbe
   17eb8:	636e 2f68 7273 2f63 6574 7473 695f 5f66     nch/src/test_if_
   17ec8:	6874 6e65 655f 736c 2e65 7063 0070 0000     then_else.cpp...
   17ed8:	7242 6e61 6863 6554 7473 6128 6772 2029     BranchTest(arg) 
   17ee8:	3d3d 3420 0055 0000 7242 6e61 6863 6554     == 4U...BranchTe
   17ef8:	7473 6128 6772 2029 3d3d 3120 0055 0000     st(arg) == 1U...
   17f08:	2023 6554 7473 203a 7954 6570 6320 7361     # Test: Type cas
   17f18:	6974 676e 0000 0000 3375 2032 3d3d 3120     ting....u32 == 1
   17f28:	3332 3534 0055 0000 6f76 6469 5420 7365     2345U...void Tes
   17f38:	5474 7079 4365 7361 6974 676e 2928 0000     tTypeCasting()..
   17f48:	552f 6573 7372 632f 6767 6c2f 6269 696d     /Users/cgg/libmi
   17f58:	7263 656f 756d 742f 7365 7374 732f 7379     croemu/tests/sys
   17f68:	6574 5f6d 6574 7473 2f73 6574 7473 6562     tem_tests/testbe
   17f78:	636e 2f68 7273 2f63 6574 7473 745f 7079     nch/src/test_typ
   17f88:	5f65 6163 7473 6e69 2e67 7063 0070 0000     e_casting.cpp...
   17f98:	3375 5f32 7063 2079 3d3d 3120 3332 3534     u32_cpy == 12345
   17fa8:	0055 0000 3375 5f32 636d 7970 3d20 203d     U...u32_mcpy == 
   17fb8:	3231 3433 5535 0000 2023 6554 7473 203a     12345U..# Test: 
   17fc8:	6f50 796c 6f6d 7072 6968 6d73 006e 0000     Polymorphismn...
   17fd8:	6564 6972 6576 2e64 6143 6c6c 2928 3d20     derived.Call() =
   17fe8:	203d 7830 4641 4546 0000 0000 6f76 6469     = 0xAFFE....void
   17ff8:	5420 7365 5074 6c6f 6d79 726f 6870 7369      TestPolymorphis
   18008:	6e6d 2928 0000 0000 552f 6573 7372 632f     mn()..../Users/c
   18018:	6767 6c2f 6269 696d 7263 656f 756d 742f     gg/libmicroemu/t
   18028:	7365 7374 732f 7379 6574 5f6d 6574 7473     ests/system_test
   18038:	2f73 6574 7473 6562 636e 2f68 7273 2f63     s/testbench/src/
   18048:	6574 7473 705f 6c6f 6d79 726f 6870 7369     test_polymorphis
   18058:	6e6d 632e 7070 0000 6162 6573 3e2d 6143     mn.cpp..base->Ca
   18068:	6c6c 2928 3d20 203d 7830 4641 4546 0000     ll() == 0xAFFE..
   18078:	6162 6573 635f 6e6f 7473 7572 7463 6465     base_constructed
   18088:	432e 6c61 286c 2029 3d3d 3020 4278 4545     .Call() == 0xBEE
   18098:	4346 4641 0045 0000                         FCAFE...

000180a0 <vtable for Derived>:
   180a0:	0000 0000 80b8 0001 1855 0000               ........U...

000180ac <vtable for Base>:
   180ac:	0000 0000 80d0 0001 183d 0000               ........=...

000180b8 <typeinfo for Derived>:
   180b8:	8ea4 0001 80c4 0001 80d0 0001               ............

000180c4 <typeinfo name for Derived>:
   180c4:	4437 7265 7669 6465 0000 0000               7Derived....

000180d0 <typeinfo for Base>:
   180d0:	8e44 0001 80d8 0001                         D.......

000180d8 <typeinfo name for Base>:
   180d8:	4234 7361 0065 0000 6166 736c 0065 0000     4Base...false...
   180e8:	6975 746e 3233 745f 5420 7365 5474 6261     uint32_t TestTab
   180f8:	656c 6346 3274 2928 0000 0000 552f 6573     leFct2()..../Use
   18108:	7372 632f 6767 6c2f 6269 696d 7263 656f     rs/cgg/libmicroe
   18118:	756d 742f 7365 7374 732f 7379 6574 5f6d     mu/tests/system_
   18128:	6574 7473 2f73 6574 7473 6562 636e 2f68     tests/testbench/
   18138:	7273 2f63 6574 7473 735f 6977 6374 5f68     src/test_switch_
   18148:	6163 6573 632e 7070 0000 0000 2023 6554     case.cpp....# Te
   18158:	7473 203a 7753 7469 6863 632f 7361 0065     st: Switch/case.
   18168:	6554 7473 6154 6c62 4665 7463 2831 7327     TestTableFct1('s
   18178:	2927 3d20 203d 5534 0000 0000 6f76 6469     ') == 4U....void
   18188:	5420 7365 5374 6977 6374 4368 7361 2865      TestSwitchCase(
   18198:	0029 0000 6554 7473 6154 6c62 4665 7463     )...TestTableFct
   181a8:	2831 6827 2927 3d20 203d 5531 0000 0000     1('h') == 1U....
   181b8:	6554 7473 6154 6c62 4665 7463 2832 2029     TestTableFct2() 
   181c8:	3d3d 3220 5538 0000 2023 6554 7473 203a     == 28U..# Test: 
   181d8:	6946 6f62 616e 6363 2069 7228 6365 7275     Fibonacci (recur
   181e8:	6973 6576 0029 0000 6946 6f62 616e 6363     sive)...Fibonacc
   181f8:	2869 2935 3d20 203d 5535 0000 6f76 6469     i(5) == 5U..void
   18208:	5420 7365 4674 6269 6e6f 6361 6963 2928      TestFibonacci()
   18218:	0000 0000 552f 6573 7372 632f 6767 6c2f     ..../Users/cgg/l
   18228:	6269 696d 7263 656f 756d 742f 7365 7374     ibmicroemu/tests
   18238:	732f 7379 6574 5f6d 6574 7473 2f73 6574     /system_tests/te
   18248:	7473 6562 636e 2f68 7273 2f63 6574 7473     stbench/src/test
   18258:	665f 6269 6e6f 6361 6963 632e 7070 0000     _fibonacci.cpp..
   18268:	6946 6f62 616e 6363 2869 2936 3d20 203d     Fibonacci(6) == 
   18278:	5538 0000 6946 6f62 616e 6363 2869 2937     8U..Fibonacci(7)
   18288:	3d20 203d 3331 0055 6946 6f62 616e 6363      == 13U.Fibonacc
   18298:	2869 2938 3d20 203d 3132 0055 2023 6554     i(8) == 21U.# Te
   182a8:	7473 203a 7551 6369 736b 726f 0074 0000     st: Quicksort...
   182b8:	7261 3372 5b32 5d30 3d20 203d 5530 0000     arr32[0] == 0U..
   182c8:	6f76 6469 5420 7365 5174 6975 6b63 6f73     void TestQuickso
   182d8:	7472 2928 0000 0000 552f 6573 7372 632f     rt()..../Users/c
   182e8:	6767 6c2f 6269 696d 7263 656f 756d 742f     gg/libmicroemu/t
   182f8:	7365 7374 732f 7379 6574 5f6d 6574 7473     ests/system_test
   18308:	2f73 6574 7473 6562 636e 2f68 7273 2f63     s/testbench/src/
   18318:	6574 7473 715f 6975 6b63 6f73 7472 632e     test_quicksort.c
   18328:	7070 0000 7261 3372 5b32 5d31 3d20 203d     pp..arr32[1] == 
   18338:	5531 0000 7261 3372 5b32 5d32 3d20 203d     1U..arr32[2] == 
   18348:	5532 0000 7261 3372 5b32 5d33 3d20 203d     2U..arr32[3] == 
   18358:	5533 0000 7261 3372 5b32 5d34 3d20 203d     3U..arr32[4] == 
   18368:	5534 0000 7261 3372 5b32 5d35 3d20 203d     4U..arr32[5] == 
   18378:	5535 0000 7261 3372 5b32 5d36 3d20 203d     5U..arr32[6] == 
   18388:	5536 0000 7261 3372 5b32 5d37 3d20 203d     6U..arr32[7] == 
   18398:	5537 0000 7261 3372 5b32 5d38 3d20 203d     7U..arr32[8] == 
   183a8:	5538 0000 7261 3372 5b32 5d39 3d20 203d     8U..arr32[9] == 
   183b8:	5539 0000 7261 3172 5b36 5d30 3d20 203d     9U..arr16[0] == 
   183c8:	5530 0000 7261 3172 5b36 5d31 3d20 203d     0U..arr16[1] == 
   183d8:	5531 0000 7261 3172 5b36 5d32 3d20 203d     1U..arr16[2] == 
   183e8:	5532 0000 7261 3172 5b36 5d33 3d20 203d     2U..arr16[3] == 
   183f8:	5533 0000 7261 3172 5b36 5d34 3d20 203d     3U..arr16[4] == 
   18408:	5534 0000 7261 3172 5b36 5d35 3d20 203d     4U..arr16[5] == 
   18418:	5535 0000 7261 3172 5b36 5d36 3d20 203d     5U..arr16[6] == 
   18428:	5536 0000 7261 3172 5b36 5d37 3d20 203d     6U..arr16[7] == 
   18438:	5537 0000 7261 3172 5b36 5d38 3d20 203d     7U..arr16[8] == 
   18448:	5538 0000 7261 3172 5b36 5d39 3d20 203d     8U..arr16[9] == 
   18458:	5539 0000 7261 3872 305b 205d 3d3d 3020     9U..arr8[0] == 0
   18468:	0055 0000 7261 3872 315b 205d 3d3d 3120     U...arr8[1] == 1
   18478:	0055 0000 7261 3872 325b 205d 3d3d 3220     U...arr8[2] == 2
   18488:	0055 0000 7261 3872 335b 205d 3d3d 3320     U...arr8[3] == 3
   18498:	0055 0000 7261 3872 345b 205d 3d3d 3420     U...arr8[4] == 4
   184a8:	0055 0000 7261 3872 355b 205d 3d3d 3520     U...arr8[5] == 5
   184b8:	0055 0000 7261 3872 365b 205d 3d3d 3620     U...arr8[6] == 6
   184c8:	0055 0000 7261 3872 375b 205d 3d3d 3720     U...arr8[7] == 7
   184d8:	0055 0000 7261 3872 385b 205d 3d3d 3820     U...arr8[8] == 8
   184e8:	0055 0000 7261 3872 395b 205d 3d3d 3920     U...arr8[9] == 9
   184f8:	0055 0000 0009 0000 0003 0000 0007 0000     U...............
   18508:	0001 0000 0005 0000 0004 0000 0008 0000     ................
   18518:	0006 0000 0002 0000 0000 0000 0009 0003     ................
   18528:	0007 0001 0005 0004 0008 0006 0002 0000     ................
   18538:	0309 0107 0405 0608 0002 0000               ............

00018544 <kCfsrBfarValidFlag>:
   18544:	8000 0000                                   ....

00018548 <kCfsrLspErrFlag>:
   18548:	2000 0000                                   . ..

0001854c <kCfsrStkErrFlag>:
   1854c:	1000 0000                                   ....

00018550 <kCfsrUnstkErrFlag>:
   18550:	0800 0000                                   ....

00018554 <kCfsrImpreciseErrFlag>:
   18554:	0400 0000                                   ....

00018558 <kCfsrPreciseErrFlag>:
   18558:	0200 0000                                   ....

0001855c <kCfsrIBusErrFlag>:
   1855c:	0100 0000                                   ....

00018560 <kCfsrMmarValidFlag>:
   18560:	0080 0000                                   ....

00018564 <kCfsrMLspErrFlag>:
   18564:	0020 0000                                    ...

00018568 <kCfsrMStkErrFlag>:
   18568:	0010 0000                                   ....

0001856c <kCfsrMUnstkErrFlag>:
   1856c:	0008 0000                                   ....

00018570 <kCfsrDAccViolFlag>:
   18570:	0002 0000                                   ....

00018574 <kCfsrIAccViolFlag>:
   18574:	0001 0000                                   ....

00018578 <kCfsrDivByZeroFlag>:
   18578:	0000 0200                                   ....

0001857c <kCfsrUnalignedFlag>:
   1857c:	0000 0100                                   ....

00018580 <kCfsrNoCpFlag>:
   18580:	0000 0008                                   ....

00018584 <kCfsrInvPcFlag>:
   18584:	0000 0004                                   ....

00018588 <kCfsrInvStateFlag>:
   18588:	0000 0002                                   ....

0001858c <kCfsrUndefInstrFlag>:
   1858c:	0000 0001                                   ....

00018590 <kCcrNonBaseThreadEnableFlag>:
   18590:	0001 0000                                   ....

00018594 <kCcrUserSettablePendSvFlag>:
   18594:	0002 0000                                   ....

00018598 <kCcrUnalignTrapEnableFlag>:
   18598:	0008 0000                                   ....

0001859c <kCcrDivByZeroTrapEnableFlag>:
   1859c:	0010 0000                                   ....

000185a0 <kCcrMainStackAlignFlag>:
   185a0:	0200 0000                                   ....

000185a4 <kCcrIgnoreLsbOnDataFlag>:
   185a4:	0400 0000                                   ....

000185a8 <kCcrStkAlignFlag>:
   185a8:	0200 0000                                   ....

000185ac <kCcrBranchPredictionEnableFlag>:
   185ac:	0000 0004                                   ....

000185b0 <kCcrL1CacheEnableFlag>:
   185b0:	0000 0008                                   ....

000185b4 <kSystickCsrCountFlag>:
   185b4:	0010 0000                                   ....

000185b8 <kSystickCsrClkSource>:
   185b8:	0002 0000                                   ....

000185bc <kSystickCsrClkSourceExternal>:
   185bc:	0000 0000                                   ....

000185c0 <kSystickCsrClkSourceCore>:
   185c0:	0002 0000                                   ....

000185c4 <kSystickCsrTickInt>:
   185c4:	0001 0000                                   ....

000185c8 <kSystickCsrTickIntPend>:
   185c8:	0001 0000                                   ....

000185cc <kSystickCsrTickIntNoPend>:
   185cc:	0000 0000                                   ....

000185d0 <kSystickCsrEnable>:
   185d0:	0000 0000                                   ....

000185d4 <kSystickCsrEnableMultishot>:
   185d4:	0000 0000                                   ....

000185d8 <kSystickCsrEnableDisabled>:
   185d8:	0000 0000                                   ....

000185dc <kSystickCvrNoRef>:
   185dc:	001f 0000                                   ....

000185e0 <kSystickCvrSkew>:
   185e0:	001e 0000                                   ....

000185e4 <kSystickCvrTenms>:
   185e4:	ffff 00ff 6373 2d62 433e 5346 2052 3d3d     ....scb->CFSR ==
   185f4:	3020 0055 6f76 6469 5420 7365 5674 7261      0U.void TestVar
   18604:	6f69 7375 6146 6c75 7374 2928 0000 0000     iousFaults()....
   18614:	552f 6573 7372 632f 6767 6c2f 6269 696d     /Users/cgg/libmi
   18624:	7263 656f 756d 742f 7365 7374 732f 7379     croemu/tests/sys
   18634:	6574 5f6d 6574 7473 2f73 6574 7473 6562     tem_tests/testbe
   18644:	636e 2f68 7273 2f63 6574 7473 655f 6378     nch/src/test_exc
   18654:	7065 6974 6e6f 2e73 7063 0070 7375 6761     eptions.cpp.usag
   18664:	5f65 6166 6c75 7374 3d20 203d 5530 0000     e_faults == 0U..
   18674:	7562 5f73 6166 6c75 7374 3d20 203d 5530     bus_faults == 0U
   18684:	0000 0000 7375 6761 5f65 6166 6c75 7374     ....usage_faults
   18694:	3d20 203d 5531 0000 6373 2d62 433e 5346      == 1U..scb->CFS
   186a4:	2052 3d3d 6b20 6643 7273 6e49 5376 6174     R == kCfsrInvSta
   186b4:	6574 6c46 6761 0000 6373 2d62 433e 5346     teFlag..scb->CFS
   186c4:	2052 3d3d 6b20 6643 7273 4249 7375 7245     R == kCfsrIBusEr
   186d4:	4672 616c 0067 0000 6f76 6469 5420 7365     rFlag...void Tes
   186e4:	4274 7375 6166 6c75 2874 0029 6373 2d62     tBusfault().scb-
   186f4:	433e 5346 2052 3d3d 3020 3078 0055 0000     >CFSR == 0x0U...
   18704:	7562 5f73 6166 6c75 7374 3d20 203d 5531     bus_faults == 1U
   18714:	0000 0000 6373 2d62 433e 5346 2052 3d3d     ....scb->CFSR ==
   18724:	2820 436b 7366 4272 6166 5672 6c61 6469      (kCfsrBfarValid
   18734:	6c46 6761 7c20 6b20 6643 7273 7250 6365     Flag | kCfsrPrec
   18744:	7369 4565 7272 6c46 6761 0029 6373 2d62     iseErrFlag).scb-
   18754:	423e 4146 2052 3d3d 7220 6965 746e 7265     >BFAR == reinter
   18764:	7270 7465 635f 7361 3c74 6975 746e 3233     pret_cast<uint32
   18774:	745f 283e 2970 0000 6373 2d62 433e 5346     _t>(p)..scb->CFS
   18784:	2052 3d3d 6b20 6643 7273 7250 6365 7369     R == kCfsrPrecis
   18794:	4565 7272 6c46 6761 0000 0000 7562 5f73     eErrFlag....bus_
   187a4:	6166 6c75 7374 3d20 203d 5532 0000 0000     faults == 2U....
   187b4:	6f76 6469 5420 7365 4474 7669 6469 4265     void TestDivideB
   187c4:	5a79 7265 286f 0029 7328 6263 3e2d 4343     yZero().(scb->CC
   187d4:	2052 2026 436b 7263 6944 4276 5a79 7265     R & kCcrDivByZer
   187e4:	546f 6172 4570 616e 6c62 4665 616c 2967     oTrapEnableFlag)
   187f4:	3d20 203d 5530 0000 3178 3d20 203d 0030      == 0U..x1 == 0.
   18804:	3278 3d20 203d 0030 6373 2d62 433e 5346     x2 == 0.scb->CFS
   18814:	2052 3d3d 6b20 6643 7273 6944 4276 5a79     R == kCfsrDivByZ
   18824:	7265 466f 616c 0067 7375 6761 5f65 6166     eroFlag.usage_fa
   18834:	6c75 7374 3d20 203d 5532 0000 2023 6554     ults == 2U..# Te
   18844:	7473 203a 7845 6563 7470 6f69 736e 0000     st: Exceptions..

00018854 <kCfsrBfarValidFlag>:
   18854:	8000 0000                                   ....

00018858 <kCfsrLspErrFlag>:
   18858:	2000 0000                                   . ..

0001885c <kCfsrStkErrFlag>:
   1885c:	1000 0000                                   ....

00018860 <kCfsrUnstkErrFlag>:
   18860:	0800 0000                                   ....

00018864 <kCfsrImpreciseErrFlag>:
   18864:	0400 0000                                   ....

00018868 <kCfsrPreciseErrFlag>:
   18868:	0200 0000                                   ....

0001886c <kCfsrIBusErrFlag>:
   1886c:	0100 0000                                   ....

00018870 <kCfsrMmarValidFlag>:
   18870:	0080 0000                                   ....

00018874 <kCfsrMLspErrFlag>:
   18874:	0020 0000                                    ...

00018878 <kCfsrMStkErrFlag>:
   18878:	0010 0000                                   ....

0001887c <kCfsrMUnstkErrFlag>:
   1887c:	0008 0000                                   ....

00018880 <kCfsrDAccViolFlag>:
   18880:	0002 0000                                   ....

00018884 <kCfsrIAccViolFlag>:
   18884:	0001 0000                                   ....

00018888 <kCfsrDivByZeroFlag>:
   18888:	0000 0200                                   ....

0001888c <kCfsrUnalignedFlag>:
   1888c:	0000 0100                                   ....

00018890 <kCfsrNoCpFlag>:
   18890:	0000 0008                                   ....

00018894 <kCfsrInvPcFlag>:
   18894:	0000 0004                                   ....

00018898 <kCfsrInvStateFlag>:
   18898:	0000 0002                                   ....

0001889c <kCfsrUndefInstrFlag>:
   1889c:	0000 0001                                   ....

000188a0 <kCcrNonBaseThreadEnableFlag>:
   188a0:	0001 0000                                   ....

000188a4 <kCcrUserSettablePendSvFlag>:
   188a4:	0002 0000                                   ....

000188a8 <kCcrUnalignTrapEnableFlag>:
   188a8:	0008 0000                                   ....

000188ac <kCcrDivByZeroTrapEnableFlag>:
   188ac:	0010 0000                                   ....

000188b0 <kCcrMainStackAlignFlag>:
   188b0:	0200 0000                                   ....

000188b4 <kCcrIgnoreLsbOnDataFlag>:
   188b4:	0400 0000                                   ....

000188b8 <kCcrStkAlignFlag>:
   188b8:	0200 0000                                   ....

000188bc <kCcrBranchPredictionEnableFlag>:
   188bc:	0000 0004                                   ....

000188c0 <kCcrL1CacheEnableFlag>:
   188c0:	0000 0008 2023 6554 7473 203a 7953 7473     ....# Test: Syst
   188d0:	6d65 6320 6e6f 7274 6c6f 6220 7375 0000     em control bus..
   188e0:	6373 2d62 433e 5243 3d20 203d 6b28 6343     scb->CCR == (kCc
   188f0:	5372 6b74 6c41 6769 466e 616c 2967 0000     rStkAlignFlag)..
   18900:	6f76 6469 5420 7365 5374 6263 2928 0000     void TestScb()..
   18910:	552f 6573 7372 632f 6767 6c2f 6269 696d     /Users/cgg/libmi
   18920:	7263 656f 756d 742f 7365 7374 732f 7379     croemu/tests/sys
   18930:	6574 5f6d 6574 7473 2f73 6574 7473 6562     tem_tests/testbe
   18940:	636e 2f68 7273 2f63 6574 7473 735f 6263     nch/src/test_scb
   18950:	632e 7070 0000 0000                         .cpp....

00018958 <kSystickCsrCountFlag>:
   18958:	0010 0000                                   ....

0001895c <kSystickCsrClkSource>:
   1895c:	0002 0000                                   ....

00018960 <kSystickCsrClkSourceExternal>:
   18960:	0000 0000                                   ....

00018964 <kSystickCsrClkSourceCore>:
   18964:	0002 0000                                   ....

00018968 <kSystickCsrTickInt>:
   18968:	0001 0000                                   ....

0001896c <kSystickCsrTickIntPend>:
   1896c:	0001 0000                                   ....

00018970 <kSystickCsrTickIntNoPend>:
   18970:	0000 0000                                   ....

00018974 <kSystickCsrEnable>:
   18974:	0000 0000                                   ....

00018978 <kSystickCsrEnableMultishot>:
   18978:	0000 0000                                   ....

0001897c <kSystickCsrEnableDisabled>:
   1897c:	0000 0000                                   ....

00018980 <kSystickCvrNoRef>:
   18980:	001f 0000                                   ....

00018984 <kSystickCvrSkew>:
   18984:	001e 0000                                   ....

00018988 <kSystickCvrTenms>:
   18988:	ffff 00ff 5653 5f43 6148 646e 656c 2072     ....SVC_Handler 
   18998:	6163 6c6c 6465 2520 2069 6974 656d 0073     called %i times.
   189a8:	7953 5473 6369 5f6b 6148 646e 656c 2072     SysTick_Handler 
   189b8:	6163 6c6c 6465 2520 2069 6974 656d 0073     called %i times.
   189c8:	2023 6554 7473 203a 5249 7351 0000 0000     # Test: IRQs....
   189d8:	7953 5473 6369 5f6b 6148 646e 656c 2072     SysTick_Handler 
   189e8:	6163 6c6c 6465 2520 2069 6974 656d 2073     called %i times 
   189f8:	7562 2074 7865 6570 7463 6465 7720 7265     but expected wer
   18a08:	2065 6925 000a 0000 7973 7473 6369 5f6b     e %i....systick_
   18a18:	6163 6c6c 635f 756f 746e 2120 203d 5845     call_count != EX
   18a28:	4550 5443 4445 535f 5359 4954 4b43 0053     PECTED_SYSTICKS.
   18a38:	6f76 6469 5420 7365 4974 7172 2873 0029     void TestIrqs().
   18a48:	552f 6573 7372 632f 6767 6c2f 6269 696d     /Users/cgg/libmi
   18a58:	7263 656f 756d 742f 7365 7374 732f 7379     croemu/tests/sys
   18a68:	6574 5f6d 6574 7473 2f73 6574 7473 6562     tem_tests/testbe
   18a78:	636e 2f68 7273 2f63 6574 7473 695f 7172     nch/src/test_irq
   18a88:	2e73 7063 0070 0000 7953 5473 6369 5f6b     s.cpp...SysTick_
   18a98:	6148 646e 656c 2072 6163 6c6c 6465 3920     Handler called 9
   18aa8:	2033 6974 656d 0073 7473 6372 706d 4528     3 times.strcmp(E
   18ab8:	5058 4345 4554 5f44 5953 5453 4349 5f4b     XPECTED_SYSTICK_
   18ac8:	5453 4952 474e 202c 7973 7473 6369 5f6b     STRING, systick_
   18ad8:	7562 6666 7265 305f 2029 3d3d 3020 0055     buffer_0) == 0U.
   18ae8:	7473 6372 706d 4528 5058 4345 4554 5f44     strcmp(EXPECTED_
   18af8:	5953 5453 4349 5f4b 5453 4952 474e 202c     SYSTICK_STRING, 
   18b08:	7973 7473 6369 5f6b 7562 6666 7265 315f     systick_buffer_1
   18b18:	2029 3d3d 3020 0055 5653 5f43 6148 646e     ) == 0U.SVC_Hand
   18b28:	656c 2072 6163 6c6c 6465 2520 2069 6974     ler called %i ti
   18b38:	656d 2073 7562 2074 7865 6570 7463 6465     mes but expected
   18b48:	7720 7265 2065 6925 000a 0000 7673 5f63      were %i....svc_
   18b58:	6163 6c6c 635f 756f 746e 2120 203d 5845     call_count != EX
   18b68:	4550 5443 4445 535f 4356 0000 5653 5f43     PECTED_SVC..SVC_
   18b78:	6148 646e 656c 2072 6163 6c6c 6465 3120     Handler called 1
   18b88:	2030 6974 656d 0073 7473 6372 706d 4528     0 times.strcmp(E
   18b98:	5058 4345 4554 5f44 5653 5f43 5453 4952     XPECTED_SVC_STRI
   18ba8:	474e 202c 7673 5f63 7562 6666 7265 305f     NG, svc_buffer_0
   18bb8:	2029 3d3d 3020 0055 7473 6372 706d 4528     ) == 0U.strcmp(E
   18bc8:	5058 4345 4554 5f44 5653 5f43 5453 4952     XPECTED_SVC_STRI
   18bd8:	474e 202c 7673 5f63 7562 6666 7265 315f     NG, svc_buffer_1
   18be8:	2029 3d3d 3020 0055 2023 6554 7473 203a     ) == 0U.# Test: 
   18bf8:	5243 0043 6572 7573 746c 3d20 203d 7830     CRC.result == 0x
   18c08:	3932 3142 0000 0000 6f76 6469 5420 7365     29B1....void Tes
   18c18:	4374 6372 2928 0000 552f 6573 7372 632f     tCrc()../Users/c
   18c28:	6767 6c2f 6269 696d 7263 656f 756d 742f     gg/libmicroemu/t
   18c38:	7365 7374 732f 7379 6574 5f6d 6574 7473     ests/system_test
   18c48:	2f73 6574 7473 6562 636e 2f68 7273 2f63     s/testbench/src/
   18c58:	6574 7473 635f 6372 632e 7070 0000 0000     test_crc.cpp....
   18c68:	3231 3433 3635 3837 0039 0000               123456789...

00018c74 <kAllocCycles>:
   18c74:	0021 0000 2023 6554 7473 203a 6548 7061     !...# Test: Heap
   18c84:	0000 0000 3170 2120 203d 756e 6c6c 7470     ....p1 != nullpt
   18c94:	0072 0000 6f76 6469 5420 7365 4874 6165     r...void TestHea
   18ca4:	2870 0029 552f 6573 7372 632f 6767 6c2f     p()./Users/cgg/l
   18cb4:	6269 696d 7263 656f 756d 742f 7365 7374     ibmicroemu/tests
   18cc4:	732f 7379 6574 5f6d 6574 7473 2f73 6574     /system_tests/te
   18cd4:	7473 6562 636e 2f68 7273 2f63 6574 7473     stbench/src/test
   18ce4:	685f 6165 2e70 7063 0070 0000 3270 2120     _heap.cpp...p2 !
   18cf4:	203d 756e 6c6c 7470 0072 0000 3370 2120     = nullptr...p3 !
   18d04:	203d 756e 6c6c 7470 0072 0000 3470 2120     = nullptr...p4 !
   18d14:	203d 756e 6c6c 7470 0072 0000 6568 7061     = nullptr...heap
   18d24:	3d20 203d 6568 7061 735f 6174 7472 0000      == heap_start..
   18d34:	6f63 746e 6f72 206c 3d3d 3020 3278 0055     control == 0x2U.
   18d44:	6f76 6469 5020 6f72 6563 7373 7453 6361     void ProcessStac
   18d54:	466b 7463 2928 0000 552f 6573 7372 632f     kFct()../Users/c
   18d64:	6767 6c2f 6269 696d 7263 656f 756d 742f     gg/libmicroemu/t
   18d74:	7365 7374 732f 7379 6574 5f6d 6574 7473     ests/system_test
   18d84:	2f73 6574 7473 6562 636e 2f68 7273 2f63     s/testbench/src/
   18d94:	6574 7473 705f 6f72 6563 7373 735f 6174     test_process_sta
   18da4:	6b63 632e 7070 0000 2023 6554 7473 203a     ck.cpp..# Test: 
   18db4:	7250 636f 7365 2073 7453 6361 206b 6f50     Process Stack Po
   18dc4:	6e69 6574 0072 0000 6f63 746e 6f72 206c     inter...control 
   18dd4:	3d3d 3020 3078 0055 6f76 6469 5420 7365     == 0x0U.void Tes
   18de4:	5074 6f72 6563 7373 7453 6361 286b 0029     tProcessStack().
   18df4:	6552 6461 5350 2850 2029 3d3d 7020 7073     ReadPSP() == psp
   18e04:	765f 6c61 0000 0000                         _val....

00018e0c <typeinfo for __cxxabiv1::__class_type_info>:
   18e0c:	8ea4 0001 8e18 0001 8ec8 0001               ............

00018e18 <typeinfo name for __cxxabiv1::__class_type_info>:
   18e18:	314e 5f30 635f 7878 6261 7669 3131 5f37     N10__cxxabiv117_
   18e28:	635f 616c 7373 745f 7079 5f65 6e69 6f66     _class_type_info
   18e38:	0045 0000                                   E...

00018e3c <vtable for __cxxabiv1::__class_type_info>:
   18e3c:	0000 0000 8e0c 0001 312d 0000 3141 0000     ........-1..A1..
   18e4c:	3349 0000 3349 0000 31bd 0000 30ed 0000     I3..I3...1...0..
   18e5c:	31a1 0000 315d 0000 3121 0000               .1..]1..!1..

00018e68 <typeinfo for __cxxabiv1::__si_class_type_info>:
   18e68:	8ea4 0001 8e74 0001 8e0c 0001               ....t.......

00018e74 <typeinfo name for __cxxabiv1::__si_class_type_info>:
   18e74:	314e 5f30 635f 7878 6261 7669 3231 5f30     N10__cxxabiv120_
   18e84:	735f 5f69 6c63 7361 5f73 7974 6570 695f     _si_class_type_i
   18e94:	666e 456f 0000 0000                         nfoE....

00018e9c <vtable for __cxxabiv1::__si_class_type_info>:
   18e9c:	0000 0000 8e68 0001 3229 0000 323d 0000     ....h...)2..=2..
   18eac:	3349 0000 3349 0000 31bd 0000 30ed 0000     I3..I3...1...0..
   18ebc:	3319 0000 3295 0000 3259 0000               .3...2..Y2..

00018ec8 <typeinfo for std::type_info>:
   18ec8:	8e44 0001 8ed0 0001                         D.......

00018ed0 <typeinfo name for std::type_info>:
   18ed0:	7453 7439 7079 5f65 6e69 6f66 0000 0000     St9type_info....

00018ee0 <vtable for std::type_info>:
   18ee0:	0000 0000 8ec8 0001 3345 0000 3351 0000     ........E3..Q3..
   18ef0:	3349 0000 3349 0000 3361 0000 334d 0000     I3..I3..a3..M3..
   18f00:	7473 3a64 623a 6461 615f 6c6c 636f 0000     std::bad_alloc..

00018f10 <typeinfo for std::bad_alloc>:
   18f10:	8ea4 0001 8f1c 0001 8f80 0001               ............

00018f1c <typeinfo name for std::bad_alloc>:
   18f1c:	7453 6239 6461 615f 6c6c 636f 0000 0000     St9bad_alloc....

00018f2c <vtable for std::bad_alloc>:
   18f2c:	0000 0000 8f10 0001 33c1 0000 33d5 0000     .........3...3..
   18f3c:	33b9 0000 7473 3a64 653a 6378 7065 6974     .3..std::excepti
   18f4c:	6e6f 0000 7473 3a64 623a 6461 655f 6378     on..std::bad_exc
   18f5c:	7065 6974 6e6f 0000                         eption..

00018f64 <typeinfo for __cxxabiv1::__forced_unwind>:
   18f64:	8e44 0001 8f88 0001                         D.......

00018f6c <typeinfo for __cxxabiv1::__foreign_exception>:
   18f6c:	8e44 0001 8fa8 0001                         D.......

00018f74 <typeinfo for std::bad_exception>:
   18f74:	8ea4 0001 8fcc 0001 8f80 0001               ............

00018f80 <typeinfo for std::exception>:
   18f80:	8e44 0001 8fe0 0001                         D.......

00018f88 <typeinfo name for __cxxabiv1::__forced_unwind>:
   18f88:	314e 5f30 635f 7878 6261 7669 3131 5f35     N10__cxxabiv115_
   18f98:	665f 726f 6563 5f64 6e75 6977 646e 0045     _forced_unwindE.

00018fa8 <typeinfo name for __cxxabiv1::__foreign_exception>:
   18fa8:	314e 5f30 635f 7878 6261 7669 3131 5f39     N10__cxxabiv119_
   18fb8:	665f 726f 6965 6e67 655f 6378 7065 6974     _foreign_excepti
   18fc8:	6e6f 0045                                   onE.

00018fcc <typeinfo name for std::bad_exception>:
   18fcc:	7453 3331 6162 5f64 7865 6563 7470 6f69     St13bad_exceptio
   18fdc:	006e 0000                                   n...

00018fe0 <typeinfo name for std::exception>:
   18fe0:	7453 6539 6378 7065 6974 6e6f 0000 0000     St9exception....

00018ff0 <vtable for __cxxabiv1::__forced_unwind>:
   18ff0:	0000 0000 8f64 0001 0000 0000 0000 0000     ....d...........
   19000:	3855 0000                                   U8..

00019004 <vtable for __cxxabiv1::__foreign_exception>:
   19004:	0000 0000 8f6c 0001 0000 0000 0000 0000     ....l...........
   19014:	3855 0000                                   U8..

00019018 <vtable for std::bad_exception>:
   19018:	0000 0000 8f74 0001 35b5 0000 35d9 0000     ....t....5...5..
   19028:	35c1 0000                                   .5..

0001902c <vtable for std::exception>:
   1902c:	0000 0000 8f80 0001 35b1 0000 35c9 0000     .........5...5..
   1903c:	35b9 0000                                   .5..

00019040 <std::nothrow>:
   19040:	0000 0000 7570 6572 7620 7269 7574 6c61     ....pure virtual
   19050:	6d20 7465 6f68 2064 6163 6c6c 6465 000a      method called..
   19060:	6564 656c 6574 2064 6976 7472 6175 206c     deleted virtual 
   19070:	656d 6874 646f 6320 6c61 656c 0a64 0000     method called...
   19080:	6574 6d72 6e69 7461 2065 6163 6c6c 6465     terminate called
   19090:	7220 6365 7275 6973 6576 796c 000a 0000      recursively....
   190a0:	6574 6d72 6e69 7461 2065 6163 6c6c 6465     terminate called
   190b0:	6120 7466 7265 7420 7268 776f 6e69 2067      after throwing 
   190c0:	6e61 6920 736e 6174 636e 2065 666f 2720     an instance of '
   190d0:	0000 0000 0a27 0000 6574 6d72 6e69 7461     ....'...terminat
   190e0:	2065 6163 6c6c 6465 7720 7469 6f68 7475     e called without
   190f0:	6120 206e 6361 6974 6576 6520 6378 7065      an active excep
   19100:	6974 6e6f 000a 0000 2020 6877 7461 2928     tion....  what()
   19110:	203a 0020 6425 0000 475f 4f4c 4142 5f4c     :  .%d.._GLOBAL_
   19120:	0000 0000 6128 6f6e 796e 6f6d 7375 6e20     ....(anonymous n
   19130:	6d61 7365 6170 6563 0029 0000 7561 6f74     amespace)...auto
   19140:	0000 0000 6564 6c63 7974 6570 6128 7475     ....decltype(aut
   19150:	296f 0000 7473 6972 676e 6c20 7469 7265     o)..string liter
   19160:	6c61 0000 7473 0064 6564 6c63 7974 6570     al..std.decltype
   19170:	6e28 6c75 706c 7274 0029 0000 615b 6962     (nullptr)...[abi
   19180:	003a 0000 3a3a 0000 647b 6665 7561 746c     :...::..{default
   19190:	6120 6772 0023 0000 3a7d 003a 7561 6f74      arg#...}::.auto
   191a0:	003a 0000 6574 706d 616c 6574 7020 7261     :...template par
   191b0:	6d61 7465 7265 6f20 6a62 6365 2074 6f66     ameter object fo
   191c0:	2072 0000 7476 6261 656c 6620 726f 0020     r ..vtable for .
   191d0:	5456 2054 6f66 2072 0000 0000 6f63 736e     VTT for ....cons
   191e0:	7274 6375 6974 6e6f 7620 6174 6c62 2065     truction vtable 
   191f0:	6f66 2072 0000 0000 692d 2d6e 0000 0000     for ....-in-....
   19200:	7974 6570 6e69 6f66 6620 726f 0020 0000     typeinfo for ...
   19210:	7974 6570 6e69 6f66 6e20 6d61 2065 6f66     typeinfo name fo
   19220:	2072 0000 7974 6570 6e69 6f66 6620 206e     r ..typeinfo fn 
   19230:	6f66 2072 0000 0000 6f6e 2d6e 6976 7472     for ....non-virt
   19240:	6175 206c 6874 6e75 206b 6f74 0020 0000     ual thunk to ...
   19250:	6f63 6176 6972 6e61 2074 6572 7574 6e72     covariant return
   19260:	7420 7568 6b6e 7420 206f 0000 616a 6176      thunk to ..java
   19270:	4320 616c 7373 6620 726f 0020 7567 7261      Class for .guar
   19280:	2064 6176 6972 6261 656c 6620 726f 0020     d variable for .
   19290:	4c54 2053 6e69 7469 6620 6e75 7463 6f69     TLS init functio
   192a0:	206e 6f66 2072 0000 4c54 2053 7277 7061     n for ..TLS wrap
   192b0:	6570 2072 7566 636e 6974 6e6f 6620 726f     per function for
   192c0:	0020 0000 6572 6566 6572 636e 2065 6574      ...reference te
   192d0:	706d 726f 7261 2079 0023 0000 6968 6464     mporary #...hidd
   192e0:	6e65 6120 696c 7361 6620 726f 0020 0000     en alias for ...
   192f0:	6f6e 2d6e 7274 6e61 6173 7463 6f69 206e     non-transaction 
   19300:	6c63 6e6f 2065 6f66 2072 0000 535f 7461     clone for .._Sat
   19310:	0020 0000 465f 6172 7463 0000 415f 6363      ..._Fract.._Acc
   19320:	6d75 0000 202c 0000 706f 7265 7461 726f     um.., ..operator
   19330:	0000 0000 706f 7265 7461 726f 0020 0000     ....operator ...
   19340:	283e 0000 7571 0000 3a20 0020 656e 2077     >(..qu.. : .new 
   19350:	0000 0000 6c75 0000 6c6c 0000 6c75 006c     ....ul..ll..ull.
   19360:	6166 736c 0065 0000 7274 6575 0000 0000     false...true....
   19370:	616a 6176 7220 7365 756f 6372 2065 0000     java resource ..
   19380:	6564 6c63 7974 6570 2820 0000 2e2e 002e     decltype (......
   19390:	6874 7369 0000 0000 707b 7261 236d 0000     this....{parm#..
   193a0:	6c67 626f 6c61 6320 6e6f 7473 7572 7463     global construct
   193b0:	726f 2073 656b 6579 2064 6f74 0020 0000     ors keyed to ...
   193c0:	6c67 626f 6c61 6420 7365 7274 6375 6f74     global destructo
   193d0:	7372 6b20 7965 6465 7420 206f 0000 0000     rs keyed to ....
   193e0:	6c7b 6d61 6462 2861 0000 0000 2329 0000     {lambda(....)#..
   193f0:	757b 6e6e 6d61 6465 7420 7079 2365 0000     {unnamed type#..
   19400:	5b20 6c63 6e6f 2065 0000 0000 7220 7365      [clone .... res
   19410:	7274 6369 0074 0000 7620 6c6f 7461 6c69     trict... volatil
   19420:	0065 0000 6320 6e6f 7473 0000 7420 6172     e... const.. tra
   19430:	736e 6361 6974 6e6f 735f 6661 0065 0000     nsaction_safe...
   19440:	6e20 656f 6378 7065 0074 0000 7420 7268      noexcept... thr
   19450:	776f 0000 2626 0000 5f20 6f43 706d 656c     ow..&&.. _Comple
   19460:	0078 0000 5f20 6d49 6761 6e69 7261 0079     x... _Imaginary.
   19470:	3a3a 002a 5f20 765f 6365 6f74 2872 0000     ::*. __vector(..
   19480:	2e28 2e2e 0000 0000 2e2e 292e 0000 0000     (..........)....
   19490:	7473 3a64 613a 6c6c 636f 7461 726f 0000     std::allocator..
   194a0:	6c61 6f6c 6163 6f74 0072 0000 7473 3a64     allocator...std:
   194b0:	623a 7361 6369 735f 7274 6e69 0067 0000     :basic_string...
   194c0:	6162 6973 5f63 7473 6972 676e 0000 0000     basic_string....
   194d0:	7473 3a64 733a 7274 6e69 0067 7473 3a64     std::string.std:
   194e0:	623a 7361 6369 735f 7274 6e69 3c67 6863     :basic_string<ch
   194f0:	7261 202c 7473 3a64 633a 6168 5f72 7274     ar, std::char_tr
   19500:	6961 7374 633c 6168 3e72 202c 7473 3a64     aits<char>, std:
   19510:	613a 6c6c 636f 7461 726f 633c 6168 3e72     :allocator<char>
   19520:	3e20 0000 7473 3a64 693a 7473 6572 6d61      >..std::istream
   19530:	0000 0000 7473 3a64 623a 7361 6369 695f     ....std::basic_i
   19540:	7473 6572 6d61 633c 6168 2c72 7320 6474     stream<char, std
   19550:	3a3a 6863 7261 745f 6172 7469 3c73 6863     ::char_traits<ch
   19560:	7261 203e 003e 0000 6162 6973 5f63 7369     ar> >...basic_is
   19570:	7274 6165 006d 0000 7473 3a64 6f3a 7473     tream...std::ost
   19580:	6572 6d61 0000 0000 7473 3a64 623a 7361     ream....std::bas
   19590:	6369 6f5f 7473 6572 6d61 633c 6168 2c72     ic_ostream<char,
   195a0:	7320 6474 3a3a 6863 7261 745f 6172 7469      std::char_trait
   195b0:	3c73 6863 7261 203e 003e 0000 6162 6973     s<char> >...basi
   195c0:	5f63 736f 7274 6165 006d 0000 7473 3a64     c_ostream...std:
   195d0:	693a 736f 7274 6165 006d 0000 7473 3a64     :iostream...std:
   195e0:	623a 7361 6369 695f 736f 7274 6165 3c6d     :basic_iostream<
   195f0:	6863 7261 202c 7473 3a64 633a 6168 5f72     char, std::char_
   19600:	7274 6961 7374 633c 6168 3e72 3e20 0000     traits<char> >..
   19610:	6162 6973 5f63 6f69 7473 6572 6d61 0000     basic_iostream..
   19620:	4e61 0000 3d26 0000 5361 0000 003d 0000     aN..&=..aS..=...
   19630:	6161 0000 6461 0000 0026 0000 6e61 0000     aa..ad..&...an..
   19640:	7461 0000 6c61 6769 6f6e 2066 0000 0000     at..alignof ....
   19650:	7761 0000 6f63 615f 6177 7469 0020 0000     aw..co_await ...
   19660:	7a61 0000 6363 0000 6f63 736e 5f74 6163     az..cc..const_ca
   19670:	7473 0000 6c63 0000 2928 0000 6d63 0000     st..cl..()..cm..
   19680:	002c 0000 6f63 0000 007e 0000 5664 0000     ,...co..~...dV..
   19690:	3d2f 0000 6164 0000 6564 656c 6574 5d5b     /=..da..delete[]
   196a0:	0020 0000 6364 0000 7964 616e 696d 5f63      ...dc..dynamic_
   196b0:	6163 7473 0000 0000 6564 0000 002a 0000     cast....de..*...
   196c0:	6c64 0000 6564 656c 6574 0020 7364 0000     dl..delete .ds..
   196d0:	2a2e 0000 7464 0000 7664 0000 002f 0000     .*..dt..dv../...
   196e0:	4f65 0000 3d5e 0000 6f65 0000 005e 0000     eO..^=..eo..^...
   196f0:	7165 0000 3d3d 0000 4c66 0000 5266 0000     eq..==..fL..fR..
   19700:	6c66 0000 7266 0000 6567 0000 3d3e 0000     fl..fr..ge..>=..
   19710:	7367 0000 7467 0000 7869 0000 5d5b 0000     gs..gt..ix..[]..
   19720:	536c 0000 3c3c 003d 3d3c 0000 696c 0000     lS..<<=.<=..li..
   19730:	706f 7265 7461 726f 2222 0020 736c 0000     operator"" .ls..
   19740:	3c3c 0000 746c 0000 003c 0000 496d 0000     <<..lt..<...mI..
   19750:	3d2d 0000 4c6d 0000 3d2a 0000 696d 0000     -=..mL..*=..mi..
   19760:	002d 0000 6c6d 0000 6d6d 0000 2d2d 0000     -...ml..mm..--..
   19770:	616e 0000 656e 5b77 005d 0000 656e 0000     na..new[]...ne..
   19780:	3d21 0000 746e 0000 0021 0000 776e 0000     !=..nt..!...nw..
   19790:	656e 0077 526f 0000 3d7c 0000 6f6f 0000     new.oR..|=..oo..
   197a0:	7c7c 0000 007c 0000 4c70 0000 3d2b 0000     ||..|...pL..+=..
   197b0:	6c70 0000 002b 0000 6d70 0000 3e2d 002a     pl..+...pm..->*.
   197c0:	7070 0000 2b2b 0000 7370 0000 7470 0000     pp..++..ps..pt..
   197d0:	3e2d 0000 003f 0000 4d72 0000 3d25 0000     ->..?...rM..%=..
   197e0:	5372 0000 3e3e 003d 6372 0000 6572 6e69     rS..>>=.rc..rein
   197f0:	6574 7072 6572 5f74 6163 7473 0000 0000     terpret_cast....
   19800:	6d72 0000 0025 0000 7372 0000 3e3e 0000     rm..%...rs..>>..
   19810:	5073 0000 6973 657a 666f 2e2e 002e 0000     sP..sizeof......
   19820:	5a73 0000 6373 0000 7473 7461 6369 635f     sZ..sc..static_c
   19830:	7361 0074 7373 0000 3d3c 003e 6973 657a     ast.ss..<=>.size
   19840:	666f 0020 7a73 0000 7274 0000 6874 6f72     of .sz..tr..thro
   19850:	0077 0000 7774 0000 6874 6f72 2077 0000     w...tw..throw ..
   19860:	6973 6e67 6465 6320 6168 0072 6f62 6c6f     signed char.bool
   19870:	0000 0000 6f62 6c6f 6165 006e 6863 7261     ....boolean.char
   19880:	0000 0000 7962 6574 0000 0000 6f64 6275     ....byte....doub
   19890:	656c 0000 6f6c 676e 6420 756f 6c62 0065     le..long double.
   198a0:	6c66 616f 0074 0000 5f5f 6c66 616f 3174     float...__float1
   198b0:	3832 0000 6e75 6973 6e67 6465 6320 6168     28..unsigned cha
   198c0:	0072 0000 6e69 0074 6e75 6973 6e67 6465     r...int.unsigned
   198d0:	6920 746e 0000 0000 6e75 6973 6e67 6465      int....unsigned
   198e0:	0000 0000 6f6c 676e 0000 0000 6e75 6973     ....long....unsi
   198f0:	6e67 6465 6c20 6e6f 0067 0000 5f5f 6e69     gned long...__in
   19900:	3174 3832 0000 0000 6e75 6973 6e67 6465     t128....unsigned
   19910:	5f20 695f 746e 3231 0038 0000 6873 726f      __int128...shor
   19920:	0074 0000 6e75 6973 6e67 6465 7320 6f68     t...unsigned sho
   19930:	7472 0000 6f76 6469 0000 0000 6377 6168     rt..void....wcha
   19940:	5f72 0074 6f6c 676e 6c20 6e6f 0067 0000     r_t.long long...
   19950:	6e75 6973 6e67 6465 6c20 6e6f 2067 6f6c     unsigned long lo
   19960:	676e 0000 6564 6963 616d 336c 0032 0000     ng..decimal32...
   19970:	6564 6963 616d 366c 0034 0000 6564 6963     decimal64...deci
   19980:	616d 316c 3832 0000 6168 666c 0000 0000     mal128..half....
   19990:	6863 7261 5f38 0074 6863 7261 3631 745f     char8_t.char16_t
   199a0:	0000 0000 6863 7261 3233 745f 0000 0000     ....char32_t....

000199b0 <standard_subs>:
   199b0:	0074 0000 9164 0001 0003 0000 9164 0001     t...d.......d...
   199c0:	0003 0000 0000 0000 0000 0000 0061 0000     ............a...
   199d0:	9490 0001 000e 0000 9490 0001 000e 0000     ................
   199e0:	94a0 0001 0009 0000 0062 0000 94ac 0001     ........b.......
   199f0:	0011 0000 94ac 0001 0011 0000 94c0 0001     ................
   19a00:	000c 0000 0073 0000 94d0 0001 000b 0000     ....s...........
   19a10:	94dc 0001 0046 0000 94c0 0001 000c 0000     ....F...........
   19a20:	0069 0000 9524 0001 000c 0000 9534 0001     i...$.......4...
   19a30:	0031 0000 9568 0001 000d 0000 006f 0000     1...h.......o...
   19a40:	9578 0001 000c 0000 9588 0001 0031 0000     x...........1...
   19a50:	95bc 0001 000d 0000 0064 0000 95cc 0001     ........d.......
   19a60:	000d 0000 95dc 0001 0032 0000 9610 0001     ........2.......
   19a70:	000e 0000                                   ....

00019a74 <cplus_demangle_builtin_types>:
   19a74:	9860 0001 000b 0000 9860 0001 000b 0000     `.......`.......
   19a84:	0000 0000 986c 0001 0004 0000 9874 0001     ....l.......t...
   19a94:	0007 0000 0007 0000 987c 0001 0004 0000     ........|.......
   19aa4:	9884 0001 0004 0000 0000 0000 988c 0001     ................
   19ab4:	0006 0000 988c 0001 0006 0000 0008 0000     ................
   19ac4:	9894 0001 000b 0000 9894 0001 000b 0000     ................
   19ad4:	0008 0000 98a0 0001 0005 0000 98a0 0001     ................
   19ae4:	0005 0000 0008 0000 98a8 0001 000a 0000     ................
   19af4:	98a8 0001 000a 0000 0008 0000 98b4 0001     ................
   19b04:	000d 0000 98b4 0001 000d 0000 0000 0000     ................
   19b14:	98c4 0001 0003 0000 98c4 0001 0003 0000     ................
   19b24:	0001 0000 98c8 0001 000c 0000 98d8 0001     ................
   19b34:	0008 0000 0002 0000 0000 0000 0000 0000     ................
	...
   19b50:	98e4 0001 0004 0000 98e4 0001 0004 0000     ................
   19b60:	0003 0000 98ec 0001 000d 0000 98ec 0001     ................
   19b70:	000d 0000 0004 0000 98fc 0001 0008 0000     ................
   19b80:	98fc 0001 0008 0000 0000 0000 9908 0001     ................
   19b90:	0011 0000 9908 0001 0011 0000 0000 0000     ................
	...
   19bdc:	991c 0001 0005 0000 991c 0001 0005 0000     ................
   19bec:	0000 0000 9924 0001 000e 0000 9924 0001     ....$.......$...
   19bfc:	000e 0000 0000 0000 0000 0000 0000 0000     ................
	...
   19c18:	9934 0001 0004 0000 9934 0001 0004 0000     4.......4.......
   19c28:	0009 0000 993c 0001 0007 0000 987c 0001     ....<.......|...
   19c38:	0004 0000 0000 0000 9944 0001 0009 0000     ........D.......
   19c48:	98e4 0001 0004 0000 0005 0000 9950 0001     ............P...
   19c58:	0012 0000 9950 0001 0012 0000 0006 0000     ....P...........
   19c68:	938c 0001 0003 0000 938c 0001 0003 0000     ................
   19c78:	0000 0000 9964 0001 0009 0000 9964 0001     ....d.......d...
   19c88:	0009 0000 0000 0000 9970 0001 0009 0000     ........p.......
   19c98:	9970 0001 0009 0000 0000 0000 997c 0001     p...........|...
   19ca8:	000a 0000 997c 0001 000a 0000 0000 0000     ....|...........
   19cb8:	9988 0001 0004 0000 9988 0001 0004 0000     ................
   19cc8:	0008 0000 9990 0001 0007 0000 9990 0001     ................
   19cd8:	0007 0000 0000 0000 9998 0001 0008 0000     ................
   19ce8:	9998 0001 0008 0000 0000 0000 99a4 0001     ................
   19cf8:	0008 0000 99a4 0001 0008 0000 0000 0000     ................
   19d08:	9168 0001 0011 0000 9168 0001 0011 0000     h.......h.......
   19d18:	0000 0000                                   ....

00019d1c <cplus_demangle_operators>:
   19d1c:	9620 0001 9624 0001 0002 0000 0002 0000      ...$...........
   19d2c:	9628 0001 962c 0001 0001 0000 0002 0000     (...,...........
   19d3c:	9630 0001 9454 0001 0002 0000 0002 0000     0...T...........
   19d4c:	9634 0001 9638 0001 0001 0000 0001 0000     4...8...........
   19d5c:	963c 0001 9638 0001 0001 0000 0002 0000     <...8...........
   19d6c:	9640 0001 9644 0001 0008 0000 0001 0000     @...D...........
   19d7c:	9650 0001 9654 0001 0009 0000 0001 0000     P...T...........
   19d8c:	9660 0001 9644 0001 0008 0000 0001 0000     `...D...........
   19d9c:	9664 0001 9668 0001 000a 0000 0002 0000     d...h...........
   19dac:	9674 0001 9678 0001 0002 0000 0002 0000     t...x...........
   19dbc:	967c 0001 9680 0001 0001 0000 0002 0000     |...............
   19dcc:	9684 0001 9688 0001 0001 0000 0001 0000     ................
   19ddc:	968c 0001 9690 0001 0002 0000 0002 0000     ................
   19dec:	9694 0001 9698 0001 0009 0000 0001 0000     ................
   19dfc:	96a4 0001 96a8 0001 000c 0000 0002 0000     ................
   19e0c:	96b8 0001 96bc 0001 0001 0000 0001 0000     ................
   19e1c:	96c0 0001 96c4 0001 0007 0000 0001 0000     ................
   19e2c:	96cc 0001 96d0 0001 0002 0000 0002 0000     ................
   19e3c:	96d4 0001 981c 0001 0001 0000 0002 0000     ................
   19e4c:	96d8 0001 96dc 0001 0001 0000 0002 0000     ................
   19e5c:	96e0 0001 96e4 0001 0002 0000 0002 0000     ................
   19e6c:	96e8 0001 96ec 0001 0001 0000 0002 0000     ................
   19e7c:	96f0 0001 96f4 0001 0002 0000 0002 0000     ................
   19e8c:	96f8 0001 938c 0001 0003 0000 0003 0000     ................
   19e9c:	96fc 0001 938c 0001 0003 0000 0003 0000     ................
   19eac:	9700 0001 938c 0001 0003 0000 0002 0000     ................
   19ebc:	9704 0001 938c 0001 0003 0000 0002 0000     ................
   19ecc:	9708 0001 970c 0001 0002 0000 0002 0000     ................
   19edc:	9710 0001 9184 0001 0002 0000 0001 0000     ................
   19eec:	9714 0001 9564 0001 0001 0000 0002 0000     ....d...........
   19efc:	9718 0001 971c 0001 0002 0000 0002 0000     ................
   19f0c:	9720 0001 9724 0001 0003 0000 0002 0000      ...$...........
   19f1c:	9890 0001 9728 0001 0002 0000 0002 0000     ....(...........
   19f2c:	972c 0001 9730 0001 000b 0000 0001 0000     ,...0...........
   19f3c:	973c 0001 9740 0001 0002 0000 0002 0000     <...@...........
   19f4c:	9744 0001 9748 0001 0001 0000 0002 0000     D...H...........
   19f5c:	974c 0001 9750 0001 0002 0000 0002 0000     L...P...........
   19f6c:	9754 0001 9758 0001 0002 0000 0002 0000     T...X...........
   19f7c:	975c 0001 9760 0001 0001 0000 0002 0000     \...`...........
   19f8c:	9764 0001 96bc 0001 0001 0000 0002 0000     d...............
   19f9c:	9768 0001 976c 0001 0002 0000 0001 0000     h...l...........
   19fac:	9770 0001 9774 0001 0005 0000 0003 0000     p...t...........
   19fbc:	977c 0001 9780 0001 0002 0000 0002 0000     |...............
   19fcc:	9960 0001 9760 0001 0001 0000 0001 0000     `...`...........
   19fdc:	9784 0001 9788 0001 0001 0000 0001 0000     ................
   19fec:	978c 0001 9790 0001 0003 0000 0003 0000     ................
   19ffc:	9794 0001 9798 0001 0002 0000 0002 0000     ................
   1a00c:	979c 0001 97a0 0001 0002 0000 0002 0000     ................
   1a01c:	949c 0001 97a4 0001 0001 0000 0002 0000     ................
   1a02c:	97a8 0001 97ac 0001 0002 0000 0002 0000     ................
   1a03c:	97b0 0001 97b4 0001 0001 0000 0002 0000     ................
   1a04c:	97b8 0001 97bc 0001 0003 0000 0002 0000     ................
   1a05c:	97c0 0001 97c4 0001 0002 0000 0001 0000     ................
   1a06c:	97c8 0001 97b4 0001 0001 0000 0001 0000     ................
   1a07c:	97cc 0001 97d0 0001 0002 0000 0002 0000     ................
   1a08c:	9344 0001 97d4 0001 0001 0000 0003 0000     D...............
   1a09c:	97d8 0001 97dc 0001 0002 0000 0002 0000     ................
   1a0ac:	97e0 0001 97e4 0001 0003 0000 0002 0000     ................
   1a0bc:	97e8 0001 97ec 0001 0010 0000 0002 0000     ................
   1a0cc:	9800 0001 9804 0001 0001 0000 0002 0000     ................
   1a0dc:	9808 0001 980c 0001 0002 0000 0002 0000     ................
   1a0ec:	9810 0001 9814 0001 0009 0000 0001 0000     ................
   1a0fc:	9820 0001 9814 0001 0009 0000 0001 0000      ...............
   1a10c:	9824 0001 9828 0001 000b 0000 0002 0000     $...(...........
   1a11c:	9834 0001 9838 0001 0003 0000 0002 0000     4...8...........
   1a12c:	9670 0001 983c 0001 0007 0000 0001 0000     p...<...........
   1a13c:	9844 0001 983c 0001 0007 0000 0001 0000     D...<...........
   1a14c:	9848 0001 984c 0001 0005 0000 0000 0000     H...L...........
   1a15c:	9854 0001 9858 0001 0006 0000 0001 0000     T...X...........
	...
   1a17c:	202c 7566 636e 6974 6e6f 203a 0000 0000     , function: ....
   1a18c:	7361 6573 7472 6f69 206e 2522 2273 6620     assertion "%s" f
   1a19c:	6961 656c 3a64 6620 6c69 2065 2522 2273     ailed: file "%s"
   1a1ac:	202c 696c 656e 2520 2564 2573 0a73 0000     , line %d%s%s...

0001a1bc <_global_impure_ptr>:
   1a1bc:	0128 2000 4e49 0046 6e69 0066 414e 004e     (.. INF.inf.NAN.
   1a1cc:	616e 006e 3130 3332 3534 3736 3938 6261     nan.0123456789ab
   1a1dc:	6463 6665 0000 0000 3130 3332 3534 3736     cdef....01234567
   1a1ec:	3938 4241 4443 4645 0000 0000 6e28 6c75     89ABCDEF....(nul
   1a1fc:	296c 0000 0030 0000                         l)..0...

0001a204 <blanks.1>:
   1a204:	2020 2020 2020 2020 2020 2020 2020 2020                     

0001a214 <zeroes.0>:
   1a214:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000

0001a224 <blanks.1>:
   1a224:	2020 2020 2020 2020 2020 2020 2020 2020                     

0001a234 <zeroes.0>:
   1a234:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000

0001a244 <blanks.1>:
   1a244:	2020 2020 2020 2020 2020 2020 2020 2020                     

0001a254 <zeroes.0>:
   1a254:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
   1a264:	614e 004e 6e49 6966 696e 7974 0000 0000     NaN.Infinity....
   1a274:	6142 6c6c 636f 7320 6375 6563 6465 6465     Balloc succeeded
   1a284:	0000 0000 742f 706d 6a2f 6e65 696b 736e     ..../tmp/jenkins
   1a294:	472d 4343 312d 2d30 6970 6570 696c 656e     -GCC-10-pipeline
   1a2a4:	332d 3833 325f 3230 3131 3130 5f38 3631     -338_20211018_16
   1a2b4:	3433 3135 3136 3539 732f 6372 6e2f 7765     34516195/src/new
   1a2c4:	696c 2f62 656e 6c77 6269 6c2f 6269 2f63     lib/newlib/libc/
   1a2d4:	7473 6c64 6269 642f 6f74 2e61 0063 0000     stdlib/dtoa.c...
   1a2e4:	0043 0000 4f50 4953 0058 0000 742f 706d     C...POSIX.../tmp
   1a2f4:	6a2f 6e65 696b 736e 472d 4343 312d 2d30     /jenkins-GCC-10-
   1a304:	6970 6570 696c 656e 332d 3833 325f 3230     pipeline-338_202
   1a314:	3131 3130 5f38 3631 3433 3135 3136 3539     11018_1634516195
   1a324:	732f 6372 6e2f 7765 696c 2f62 656e 6c77     /src/newlib/newl
   1a334:	6269 6c2f 6269 2f63 7473 6c64 6269 6d2f     ib/libc/stdlib/m
   1a344:	7270 6365 632e 0000 0000 0000               prec.c......

0001a350 <__mprec_bigtens>:
   1a350:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
   1a360:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
   1a370:	bf3c 7f73 4fdd 7515                         <.s..O.u

0001a378 <__mprec_tens>:
   1a378:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
   1a388:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
   1a398:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
   1a3a8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
   1a3b8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
   1a3c8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
   1a3d8:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
   1a3e8:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
   1a3f8:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
   1a408:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
   1a418:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
   1a428:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
   1a438:	9db4 79d9 7843 44ea                         ...yCx.D

0001a440 <__mprec_tinytens>:
   1a440:	89bc 97d8 d2b2 3c9c a733 d5a8 f623 3949     .......<3...#.I9
   1a450:	a73d 44f4 0ffd 32a5 979d cf8c ba08 255b     =..D...2......[%
   1a460:	6f43 64ac 0628 0ac8                         Co.d(...

0001a468 <p05.0>:
   1a468:	0005 0000 0019 0000 007d 0000               ........}...

0001a474 <blanks.1>:
   1a474:	2020 2020 2020 2020 2020 2020 2020 2020                     

0001a484 <zeroes.0>:
   1a484:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000

0001a494 <_ctype_>:
   1a494:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
   1a4a4:	2020 2020 2020 2020 2020 2020 2020 2020                     
   1a4b4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
   1a4c4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
   1a4d4:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
   1a4e4:	0101 0101 0101 0101 0101 0101 1010 1010     ................
   1a4f4:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
   1a504:	0202 0202 0202 0202 0202 0202 1010 1010     ................
   1a514:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
   1a598:	733a 6d65 6869 736f 6974 676e 662d 6165     :semihosting-fea
   1a5a8:	7574 6572 0073 0000 743a 0074               tures...:tt.

0001a5b4 <all_implied_fbits>:
   1a5b4:	2702 2705 2707 272f 2731 270d 272b 2711     .'.'.'/'1'.'+'.'
   1a5c4:	2710 271a 2738 2714 273b 2723 271f 273a     .'.'8'.';'#'.':'
   1a5d4:	2726 0000                                   &'..

0001a5d8 <__EH_FRAME_BEGIN__>:
   1a5d8:	0000 0000                                   ....
