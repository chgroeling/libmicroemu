
/Users/cgg/microemu/tests/system_tests/testbench/build/testbench.elf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__Vectors>:
       0:	20020000 	.word	0x20020000
       4:	000001f5 	.word	0x000001f5
       8:	000001f9 	.word	0x000001f9
       c:	000001fb 	.word	0x000001fb
      10:	000001fd 	.word	0x000001fd
      14:	00002269 	.word	0x00002269
      18:	00002335 	.word	0x00002335
	...
      2c:	00002911 	.word	0x00002911
      30:	00000205 	.word	0x00000205
      34:	00000000 	.word	0x00000000
      38:	00000207 	.word	0x00000207
      3c:	000029e1 	.word	0x000029e1

00000040 <__do_global_dtors_aux>:
      40:	b510      	push	{r4, lr}
      42:	4c05      	ldr	r4, [pc, #20]	; (58 <__do_global_dtors_aux+0x18>)
      44:	7823      	ldrb	r3, [r4, #0]
      46:	b933      	cbnz	r3, 56 <__do_global_dtors_aux+0x16>
      48:	4b04      	ldr	r3, [pc, #16]	; (5c <__do_global_dtors_aux+0x1c>)
      4a:	b113      	cbz	r3, 52 <__do_global_dtors_aux+0x12>
      4c:	4804      	ldr	r0, [pc, #16]	; (60 <__do_global_dtors_aux+0x20>)
      4e:	f3af 8000 	nop.w
      52:	2301      	movs	r3, #1
      54:	7023      	strb	r3, [r4, #0]
      56:	bd10      	pop	{r4, pc}
      58:	20000aec 	.word	0x20000aec
      5c:	00000000 	.word	0x00000000
      60:	0001a3d0 	.word	0x0001a3d0

00000064 <frame_dummy>:
      64:	b508      	push	{r3, lr}
      66:	4b03      	ldr	r3, [pc, #12]	; (74 <frame_dummy+0x10>)
      68:	b11b      	cbz	r3, 72 <frame_dummy+0xe>
      6a:	4903      	ldr	r1, [pc, #12]	; (78 <frame_dummy+0x14>)
      6c:	4803      	ldr	r0, [pc, #12]	; (7c <frame_dummy+0x18>)
      6e:	f3af 8000 	nop.w
      72:	bd08      	pop	{r3, pc}
      74:	00000000 	.word	0x00000000
      78:	20000af0 	.word	0x20000af0
      7c:	0001a3d0 	.word	0x0001a3d0

00000080 <_stack_init>:
      80:	2a00      	cmp	r2, #0
      82:	d001      	beq.n	88 <_stack_init+0x8>
      84:	f502 7a80 	add.w	sl, r2, #256	; 0x100
      88:	4770      	bx	lr
      8a:	bf00      	nop

0000008c <_mainCRTStartup>:
      8c:	2016      	movs	r0, #22
      8e:	a131      	add	r1, pc, #196	; (adr r1, 154 <_mainCRTStartup+0xc8>)
      90:	beab      	bkpt	0x00ab
      92:	4830      	ldr	r0, [pc, #192]	; (154 <_mainCRTStartup+0xc8>)
      94:	6841      	ldr	r1, [r0, #4]
      96:	2900      	cmp	r1, #0
      98:	d001      	beq.n	9e <_mainCRTStartup+0x12>
      9a:	4a36      	ldr	r2, [pc, #216]	; (174 <_mainCRTStartup+0xe8>)
      9c:	6011      	str	r1, [r2, #0]
      9e:	6801      	ldr	r1, [r0, #0]
      a0:	2900      	cmp	r1, #0
      a2:	d101      	bne.n	a8 <_mainCRTStartup+0x1c>
      a4:	4932      	ldr	r1, [pc, #200]	; (170 <_mainCRTStartup+0xe4>)
      a6:	6001      	str	r1, [r0, #0]
      a8:	6881      	ldr	r1, [r0, #8]
      aa:	68c2      	ldr	r2, [r0, #12]
      ac:	4b2a      	ldr	r3, [pc, #168]	; (158 <_mainCRTStartup+0xcc>)
      ae:	2900      	cmp	r1, #0
      b0:	d000      	beq.n	b4 <_mainCRTStartup+0x28>
      b2:	460b      	mov	r3, r1
      b4:	469d      	mov	sp, r3
      b6:	f7ff ffe3 	bl	80 <_stack_init>
      ba:	2100      	movs	r1, #0
      bc:	468b      	mov	fp, r1
      be:	460f      	mov	r7, r1
      c0:	4826      	ldr	r0, [pc, #152]	; (15c <_mainCRTStartup+0xd0>)
      c2:	4a27      	ldr	r2, [pc, #156]	; (160 <_mainCRTStartup+0xd4>)
      c4:	1a12      	subs	r2, r2, r0
      c6:	f00c fc61 	bl	c98c <memset>
      ca:	f016 fd77 	bl	16bbc <initialise_monitor_handles>
      ce:	2015      	movs	r0, #21
      d0:	4926      	ldr	r1, [pc, #152]	; (16c <_mainCRTStartup+0xe0>)
      d2:	beab      	bkpt	0x00ab
      d4:	4925      	ldr	r1, [pc, #148]	; (16c <_mainCRTStartup+0xe0>)
      d6:	6809      	ldr	r1, [r1, #0]
      d8:	2000      	movs	r0, #0
      da:	b401      	push	{r0}
      dc:	780b      	ldrb	r3, [r1, #0]
      de:	3101      	adds	r1, #1
      e0:	2b00      	cmp	r3, #0
      e2:	d015      	beq.n	110 <_mainCRTStartup+0x84>
      e4:	2b20      	cmp	r3, #32
      e6:	d0f9      	beq.n	dc <_mainCRTStartup+0x50>
      e8:	2b22      	cmp	r3, #34	; 0x22
      ea:	d001      	beq.n	f0 <_mainCRTStartup+0x64>
      ec:	2b27      	cmp	r3, #39	; 0x27
      ee:	d101      	bne.n	f4 <_mainCRTStartup+0x68>
      f0:	001a      	movs	r2, r3
      f2:	e001      	b.n	f8 <_mainCRTStartup+0x6c>
      f4:	2220      	movs	r2, #32
      f6:	3901      	subs	r1, #1
      f8:	b402      	push	{r1}
      fa:	3001      	adds	r0, #1
      fc:	780b      	ldrb	r3, [r1, #0]
      fe:	3101      	adds	r1, #1
     100:	2b00      	cmp	r3, #0
     102:	d005      	beq.n	110 <_mainCRTStartup+0x84>
     104:	429a      	cmp	r2, r3
     106:	d1f9      	bne.n	fc <_mainCRTStartup+0x70>
     108:	2200      	movs	r2, #0
     10a:	1e4b      	subs	r3, r1, #1
     10c:	701a      	strb	r2, [r3, #0]
     10e:	e7e5      	b.n	dc <_mainCRTStartup+0x50>
     110:	4669      	mov	r1, sp
     112:	0002      	movs	r2, r0
     114:	0092      	lsls	r2, r2, #2
     116:	446a      	add	r2, sp
     118:	466b      	mov	r3, sp
     11a:	429a      	cmp	r2, r3
     11c:	d906      	bls.n	12c <_mainCRTStartup+0xa0>
     11e:	3a04      	subs	r2, #4
     120:	6814      	ldr	r4, [r2, #0]
     122:	681d      	ldr	r5, [r3, #0]
     124:	6015      	str	r5, [r2, #0]
     126:	601c      	str	r4, [r3, #0]
     128:	3304      	adds	r3, #4
     12a:	e7f6      	b.n	11a <_mainCRTStartup+0x8e>
     12c:	466c      	mov	r4, sp
     12e:	2507      	movs	r5, #7
     130:	43ac      	bics	r4, r5
     132:	46a5      	mov	sp, r4
     134:	0004      	movs	r4, r0
     136:	000d      	movs	r5, r1
     138:	480a      	ldr	r0, [pc, #40]	; (164 <_mainCRTStartup+0xd8>)
     13a:	2800      	cmp	r0, #0
     13c:	d002      	beq.n	144 <_mainCRTStartup+0xb8>
     13e:	480a      	ldr	r0, [pc, #40]	; (168 <_mainCRTStartup+0xdc>)
     140:	f011 fe70 	bl	11e24 <atexit>
     144:	f00b ff9c 	bl	c080 <__libc_init_array>
     148:	0020      	movs	r0, r4
     14a:	0029      	movs	r1, r5
     14c:	f000 f814 	bl	178 <main>
     150:	f00b fce4 	bl	bb1c <exit>
     154:	20000004 	.word	0x20000004
     158:	20020000 	.word	0x20020000
     15c:	20000aec 	.word	0x20000aec
     160:	2000205c 	.word	0x2000205c
     164:	00011e25 	.word	0x00011e25
     168:	000132f5 	.word	0x000132f5
     16c:	20000114 	.word	0x20000114
     170:	20002060 	.word	0x20002060
     174:	20000ad0 	.word	0x20000ad0

00000178 <main>:
#include <stdlib.h>
#include <time.h>

// Main
// ----------------------------
int main() {
     178:	b580      	push	{r7, lr}
     17a:	af00      	add	r7, sp, #0

#ifdef MEASURE_TIME
  clock_t start_t, end_t;
  start_t = clock();
#endif
  printf("-------------------------------\n");
     17c:	481b      	ldr	r0, [pc, #108]	; (1ec <main+0x74>)
     17e:	f00c fd4d 	bl	cc1c <puts>
  printf("Emulator test bench\n");
     182:	481b      	ldr	r0, [pc, #108]	; (1f0 <main+0x78>)
     184:	f00c fd4a 	bl	cc1c <puts>
  printf("-------------------------------\n");
     188:	4818      	ldr	r0, [pc, #96]	; (1ec <main+0x74>)
     18a:	f00c fd47 	bl	cc1c <puts>

  TestStdOut();
     18e:	f000 fb2d 	bl	7ec <TestStdOut()>

  // Irq test runs in parallel
  StartIrqTest();
     192:	f002 fc99 	bl	2ac8 <StartIrqTest()>

  TestStackAlignment();
     196:	f000 fbca 	bl	92e <TestStackAlignment()>
  TestHeap();
     19a:	f002 fde5 	bl	2d68 <TestHeap()>
  TestIfThenElse();
     19e:	f001 f9c9 	bl	1534 <TestIfThenElse()>
  TestSwitchCase();
     1a2:	f001 fc15 	bl	19d0 <TestSwitchCase()>
  TestIntCalc();
     1a6:	f000 fcf9 	bl	b9c <TestIntCalc()>
  TestUIntCalc();
     1aa:	f000 ff41 	bl	1030 <TestUIntCalc()>
  TestFloat();
     1ae:	f000 f87f 	bl	2b0 <TestFloat()>
  TestTypeCasting();
     1b2:	f001 fa05 	bl	15c0 <TestTypeCasting()>
  TestPolymorphismn();
     1b6:	f001 fa59 	bl	166c <TestPolymorphismn()>
  TestStdAlgos();
     1ba:	f000 fcdd 	bl	b78 <TestStdAlgos()>
  TestSprintf();
     1be:	f000 fa6f 	bl	6a0 <TestSprintf()>
  TestScb();
     1c2:	f002 fb85 	bl	28d0 <TestScb()>
  TestFibonacci();
     1c6:	f001 fc53 	bl	1a70 <TestFibonacci()>
  TestQuicksort();
     1ca:	f001 fcbb 	bl	1b44 <TestQuicksort()>
  TestCrc();
     1ce:	f002 fd9d 	bl	2d0c <TestCrc()>
  TestExceptions();
     1d2:	f002 faf5 	bl	27c0 <TestExceptions()>
  TestProcessStack();
     1d6:	f002 fea1 	bl	2f1c <TestProcessStack()>
  TestIrqs(); // must be at the end
     1da:	f002 fc7d 	bl	2ad8 <TestIrqs()>
  printf("-------------------------------\n");
     1de:	4803      	ldr	r0, [pc, #12]	; (1ec <main+0x74>)
     1e0:	f00c fd1c 	bl	cc1c <puts>
  auto diff_t = static_cast<unsigned long>(end_t) - static_cast<unsigned long>(start_t);
  printf("# Test: Time measurement start_t:%u / end_t:%u / diff_t: %u / CLOCKS_PER_SEC:%u \n",
         start_t, end_t, diff_t, CLOCKS_PER_SEC);
#endif
  // ----------------------------
  return EXIT_SUCCESS;
     1e4:	2300      	movs	r3, #0
     1e6:	4618      	mov	r0, r3
     1e8:	bd80      	pop	{r7, pc}
     1ea:	bf00      	nop
     1ec:	0001701c 	.word	0x0001701c
     1f0:	0001703c 	.word	0x0001703c

000001f4 <Reset_Handler>:
     1f4:	f7ff ff4a 	bl	8c <_mainCRTStartup>

000001f8 <NMI_Handler>:
     1f8:	4770      	bx	lr

000001fa <HardFault_Handler>:
     1fa:	4770      	bx	lr

000001fc <MemManage_Handler>:
     1fc:	4770      	bx	lr
     1fe:	4770      	bx	lr
     200:	4770      	bx	lr
     202:	4770      	bx	lr

00000204 <DebugMon_Handler>:
     204:	4770      	bx	lr

00000206 <PendSV_Handler>:
     206:	4770      	bx	lr
     208:	4770      	bx	lr
     20a:	bf00      	nop

0000020c <GetSysTickBase()>:
  volatile uint32_t CNT; // Current value register {"count"}
  volatile uint32_t CVR; // Calibration value register
};

// SysTick register map base pointer
static inline SysTickRegMap *GetSysTickBase() {
     20c:	b480      	push	{r7}
     20e:	af00      	add	r7, sp, #0
  return reinterpret_cast<SysTickRegMap *>(reinterpret_cast<unsigned *>(0xE000E010u));
     210:	4b02      	ldr	r3, [pc, #8]	; (21c <GetSysTickBase()+0x10>)
};
     212:	4618      	mov	r0, r3
     214:	46bd      	mov	sp, r7
     216:	bc80      	pop	{r7}
     218:	4770      	bx	lr
     21a:	bf00      	nop
     21c:	e000e010 	.word	0xe000e010

00000220 <SysTickInit(unsigned long)>:

#include "systick.h"

volatile uint32_t systick_uptime_millis;

void SysTickInit(uint32_t reload_val) {
     220:	b580      	push	{r7, lr}
     222:	b082      	sub	sp, #8
     224:	af00      	add	r7, sp, #0
     226:	6078      	str	r0, [r7, #4]
  GetSysTickBase()->RVR = reload_val;
     228:	f7ff fff0 	bl	20c <GetSysTickBase()>
     22c:	4602      	mov	r2, r0
     22e:	687b      	ldr	r3, [r7, #4]
     230:	6053      	str	r3, [r2, #4]
  SysTickEnable();
     232:	f000 f80d 	bl	250 <SysTickEnable()>
}
     236:	bf00      	nop
     238:	3708      	adds	r7, #8
     23a:	46bd      	mov	sp, r7
     23c:	bd80      	pop	{r7, pc}

0000023e <SysTickDisable()>:

void SysTickDisable() { GetSysTickBase()->CSR = kSystickCsrClkSourceCore; }
     23e:	b580      	push	{r7, lr}
     240:	af00      	add	r7, sp, #0
     242:	f7ff ffe3 	bl	20c <GetSysTickBase()>
     246:	4603      	mov	r3, r0
     248:	2202      	movs	r2, #2
     24a:	601a      	str	r2, [r3, #0]
     24c:	bf00      	nop
     24e:	bd80      	pop	{r7, pc}

00000250 <SysTickEnable()>:

void SysTickEnable() {
     250:	b580      	push	{r7, lr}
     252:	af00      	add	r7, sp, #0
  /* re-enables init registers without changing reload val */
  GetSysTickBase()->CSR = (kSystickCsrClkSourceCore | kSystickCsrEnable | kSystickCsrTickIntPend);
     254:	f7ff ffda 	bl	20c <GetSysTickBase()>
     258:	4603      	mov	r3, r0
     25a:	2203      	movs	r2, #3
     25c:	601a      	str	r2, [r3, #0]
}
     25e:	bf00      	nop
     260:	bd80      	pop	{r7, pc}
     262:	bf00      	nop

00000264 <IsFloatEqual(float, float)>:
#include <stdint.h>
#include <stdio.h>

static constexpr float kEps = 1.0e-4f;

bool IsFloatEqual(float a, float b) { return ((a >= b - kEps) && (a <= b + kEps)); }
     264:	b580      	push	{r7, lr}
     266:	b082      	sub	sp, #8
     268:	af00      	add	r7, sp, #0
     26a:	6078      	str	r0, [r7, #4]
     26c:	6039      	str	r1, [r7, #0]
     26e:	490f      	ldr	r1, [pc, #60]	; (2ac <IsFloatEqual(float, float)+0x48>)
     270:	6838      	ldr	r0, [r7, #0]
     272:	f00a f985 	bl	a580 <__aeabi_fsub>
     276:	4603      	mov	r3, r0
     278:	4619      	mov	r1, r3
     27a:	6878      	ldr	r0, [r7, #4]
     27c:	f00a fc3c 	bl	aaf8 <__aeabi_fcmpge>
     280:	4603      	mov	r3, r0
     282:	2b00      	cmp	r3, #0
     284:	d00d      	beq.n	2a2 <IsFloatEqual(float, float)+0x3e>
     286:	4909      	ldr	r1, [pc, #36]	; (2ac <IsFloatEqual(float, float)+0x48>)
     288:	6838      	ldr	r0, [r7, #0]
     28a:	f00a f97b 	bl	a584 <__addsf3>
     28e:	4603      	mov	r3, r0
     290:	4619      	mov	r1, r3
     292:	6878      	ldr	r0, [r7, #4]
     294:	f00a fc26 	bl	aae4 <__aeabi_fcmple>
     298:	4603      	mov	r3, r0
     29a:	2b00      	cmp	r3, #0
     29c:	d001      	beq.n	2a2 <IsFloatEqual(float, float)+0x3e>
     29e:	2301      	movs	r3, #1
     2a0:	e000      	b.n	2a4 <IsFloatEqual(float, float)+0x40>
     2a2:	2300      	movs	r3, #0
     2a4:	4618      	mov	r0, r3
     2a6:	3708      	adds	r7, #8
     2a8:	46bd      	mov	sp, r7
     2aa:	bd80      	pop	{r7, pc}
     2ac:	38d1b717 	.word	0x38d1b717

000002b0 <TestFloat()>:

void TestFloat() {
     2b0:	b590      	push	{r4, r7, lr}
     2b2:	b08b      	sub	sp, #44	; 0x2c
     2b4:	af00      	add	r7, sp, #0
  printf("# Test: Simple calculations with floats\n");
     2b6:	489f      	ldr	r0, [pc, #636]	; (534 <TestFloat()+0x284>)
     2b8:	f00c fcb0 	bl	cc1c <puts>

  volatile float f = 123.5f;
     2bc:	4b9e      	ldr	r3, [pc, #632]	; (538 <TestFloat()+0x288>)
     2be:	61fb      	str	r3, [r7, #28]

  assert(f == 123.5f);
     2c0:	69fb      	ldr	r3, [r7, #28]
     2c2:	499d      	ldr	r1, [pc, #628]	; (538 <TestFloat()+0x288>)
     2c4:	4618      	mov	r0, r3
     2c6:	f00a fbf9 	bl	aabc <__aeabi_fcmpeq>
     2ca:	4603      	mov	r3, r0
     2cc:	2b00      	cmp	r3, #0
     2ce:	d105      	bne.n	2dc <TestFloat()+0x2c>
     2d0:	4b9a      	ldr	r3, [pc, #616]	; (53c <TestFloat()+0x28c>)
     2d2:	4a9b      	ldr	r2, [pc, #620]	; (540 <TestFloat()+0x290>)
     2d4:	2110      	movs	r1, #16
     2d6:	489b      	ldr	r0, [pc, #620]	; (544 <TestFloat()+0x294>)
     2d8:	f00b fbfa 	bl	bad0 <__assert_func>

  volatile int32_t f_i = static_cast<int32_t>(f);
     2dc:	69fb      	ldr	r3, [r7, #28]
     2de:	4618      	mov	r0, r3
     2e0:	f00a fc34 	bl	ab4c <__aeabi_f2iz>
     2e4:	4603      	mov	r3, r0
     2e6:	61bb      	str	r3, [r7, #24]
  assert(f_i == 123);
     2e8:	69bb      	ldr	r3, [r7, #24]
     2ea:	2b7b      	cmp	r3, #123	; 0x7b
     2ec:	d005      	beq.n	2fa <TestFloat()+0x4a>
     2ee:	4b96      	ldr	r3, [pc, #600]	; (548 <TestFloat()+0x298>)
     2f0:	4a93      	ldr	r2, [pc, #588]	; (540 <TestFloat()+0x290>)
     2f2:	2113      	movs	r1, #19
     2f4:	4893      	ldr	r0, [pc, #588]	; (544 <TestFloat()+0x294>)
     2f6:	f00b fbeb 	bl	bad0 <__assert_func>

  volatile float frac = f - f_i;
     2fa:	69fc      	ldr	r4, [r7, #28]
     2fc:	69bb      	ldr	r3, [r7, #24]
     2fe:	4618      	mov	r0, r3
     300:	f00a f9f4 	bl	a6ec <__aeabi_i2f>
     304:	4603      	mov	r3, r0
     306:	4619      	mov	r1, r3
     308:	4620      	mov	r0, r4
     30a:	f00a f939 	bl	a580 <__aeabi_fsub>
     30e:	4603      	mov	r3, r0
     310:	617b      	str	r3, [r7, #20]
  assert((frac >= (0.5f - kEps)) && (frac <= (0.5f + kEps)));
     312:	697b      	ldr	r3, [r7, #20]
     314:	498d      	ldr	r1, [pc, #564]	; (54c <TestFloat()+0x29c>)
     316:	4618      	mov	r0, r3
     318:	f00a fbee 	bl	aaf8 <__aeabi_fcmpge>
     31c:	4603      	mov	r3, r0
     31e:	2b00      	cmp	r3, #0
     320:	d007      	beq.n	332 <TestFloat()+0x82>
     322:	697b      	ldr	r3, [r7, #20]
     324:	498a      	ldr	r1, [pc, #552]	; (550 <TestFloat()+0x2a0>)
     326:	4618      	mov	r0, r3
     328:	f00a fbdc 	bl	aae4 <__aeabi_fcmple>
     32c:	4603      	mov	r3, r0
     32e:	2b00      	cmp	r3, #0
     330:	d105      	bne.n	33e <TestFloat()+0x8e>
     332:	4b88      	ldr	r3, [pc, #544]	; (554 <TestFloat()+0x2a4>)
     334:	4a82      	ldr	r2, [pc, #520]	; (540 <TestFloat()+0x290>)
     336:	2116      	movs	r1, #22
     338:	4882      	ldr	r0, [pc, #520]	; (544 <TestFloat()+0x294>)
     33a:	f00b fbc9 	bl	bad0 <__assert_func>

  for (int i = 0; i < 3; ++i) { // 6 Nachkommastellen
     33e:	2300      	movs	r3, #0
     340:	627b      	str	r3, [r7, #36]	; 0x24
     342:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     344:	2b02      	cmp	r3, #2
     346:	dc4b      	bgt.n	3e0 <TestFloat()+0x130>
    frac *= 10;
     348:	697b      	ldr	r3, [r7, #20]
     34a:	4983      	ldr	r1, [pc, #524]	; (558 <TestFloat()+0x2a8>)
     34c:	4618      	mov	r0, r3
     34e:	f00a fa21 	bl	a794 <__aeabi_fmul>
     352:	4603      	mov	r3, r0
     354:	617b      	str	r3, [r7, #20]
    int digit = static_cast<int>(frac);
     356:	697b      	ldr	r3, [r7, #20]
     358:	4618      	mov	r0, r3
     35a:	f00a fbf7 	bl	ab4c <__aeabi_f2iz>
     35e:	4603      	mov	r3, r0
     360:	623b      	str	r3, [r7, #32]
    assert(digit >= 0 && digit <= 9);
     362:	6a3b      	ldr	r3, [r7, #32]
     364:	2b00      	cmp	r3, #0
     366:	db02      	blt.n	36e <TestFloat()+0xbe>
     368:	6a3b      	ldr	r3, [r7, #32]
     36a:	2b09      	cmp	r3, #9
     36c:	dd05      	ble.n	37a <TestFloat()+0xca>
     36e:	4b7b      	ldr	r3, [pc, #492]	; (55c <TestFloat()+0x2ac>)
     370:	4a73      	ldr	r2, [pc, #460]	; (540 <TestFloat()+0x290>)
     372:	211b      	movs	r1, #27
     374:	4873      	ldr	r0, [pc, #460]	; (544 <TestFloat()+0x294>)
     376:	f00b fbab 	bl	bad0 <__assert_func>
    assert(i != 0 || digit == 5);
     37a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     37c:	2b00      	cmp	r3, #0
     37e:	d108      	bne.n	392 <TestFloat()+0xe2>
     380:	6a3b      	ldr	r3, [r7, #32]
     382:	2b05      	cmp	r3, #5
     384:	d005      	beq.n	392 <TestFloat()+0xe2>
     386:	4b76      	ldr	r3, [pc, #472]	; (560 <TestFloat()+0x2b0>)
     388:	4a6d      	ldr	r2, [pc, #436]	; (540 <TestFloat()+0x290>)
     38a:	211c      	movs	r1, #28
     38c:	486d      	ldr	r0, [pc, #436]	; (544 <TestFloat()+0x294>)
     38e:	f00b fb9f 	bl	bad0 <__assert_func>
    assert(i != 1 || digit == 0);
     392:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     394:	2b01      	cmp	r3, #1
     396:	d108      	bne.n	3aa <TestFloat()+0xfa>
     398:	6a3b      	ldr	r3, [r7, #32]
     39a:	2b00      	cmp	r3, #0
     39c:	d005      	beq.n	3aa <TestFloat()+0xfa>
     39e:	4b71      	ldr	r3, [pc, #452]	; (564 <TestFloat()+0x2b4>)
     3a0:	4a67      	ldr	r2, [pc, #412]	; (540 <TestFloat()+0x290>)
     3a2:	211d      	movs	r1, #29
     3a4:	4867      	ldr	r0, [pc, #412]	; (544 <TestFloat()+0x294>)
     3a6:	f00b fb93 	bl	bad0 <__assert_func>
    assert(i != 2 || digit == 0);
     3aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     3ac:	2b02      	cmp	r3, #2
     3ae:	d108      	bne.n	3c2 <TestFloat()+0x112>
     3b0:	6a3b      	ldr	r3, [r7, #32]
     3b2:	2b00      	cmp	r3, #0
     3b4:	d005      	beq.n	3c2 <TestFloat()+0x112>
     3b6:	4b6c      	ldr	r3, [pc, #432]	; (568 <TestFloat()+0x2b8>)
     3b8:	4a61      	ldr	r2, [pc, #388]	; (540 <TestFloat()+0x290>)
     3ba:	211e      	movs	r1, #30
     3bc:	4861      	ldr	r0, [pc, #388]	; (544 <TestFloat()+0x294>)
     3be:	f00b fb87 	bl	bad0 <__assert_func>
    frac -= digit;
     3c2:	697c      	ldr	r4, [r7, #20]
     3c4:	6a38      	ldr	r0, [r7, #32]
     3c6:	f00a f991 	bl	a6ec <__aeabi_i2f>
     3ca:	4603      	mov	r3, r0
     3cc:	4619      	mov	r1, r3
     3ce:	4620      	mov	r0, r4
     3d0:	f00a f8d6 	bl	a580 <__aeabi_fsub>
     3d4:	4603      	mov	r3, r0
     3d6:	617b      	str	r3, [r7, #20]
  for (int i = 0; i < 3; ++i) { // 6 Nachkommastellen
     3d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     3da:	3301      	adds	r3, #1
     3dc:	627b      	str	r3, [r7, #36]	; 0x24
     3de:	e7b0      	b.n	342 <TestFloat()+0x92>
  }

  // float equation
  volatile float a = 2.0f;
     3e0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
     3e4:	613b      	str	r3, [r7, #16]

  a = a * 2.0f; // 4.0
     3e6:	693b      	ldr	r3, [r7, #16]
     3e8:	4619      	mov	r1, r3
     3ea:	4618      	mov	r0, r3
     3ec:	f00a f8ca 	bl	a584 <__addsf3>
     3f0:	4603      	mov	r3, r0
     3f2:	613b      	str	r3, [r7, #16]
  a = a + 1.0f; // 5.0
     3f4:	693b      	ldr	r3, [r7, #16]
     3f6:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
     3fa:	4618      	mov	r0, r3
     3fc:	f00a f8c2 	bl	a584 <__addsf3>
     400:	4603      	mov	r3, r0
     402:	613b      	str	r3, [r7, #16]
  a = a - 0.5f; // 4.5
     404:	693b      	ldr	r3, [r7, #16]
     406:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
     40a:	4618      	mov	r0, r3
     40c:	f00a f8b8 	bl	a580 <__aeabi_fsub>
     410:	4603      	mov	r3, r0
     412:	613b      	str	r3, [r7, #16]
  a = a / 0.5f; // 9.0
     414:	693b      	ldr	r3, [r7, #16]
     416:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
     41a:	4618      	mov	r0, r3
     41c:	f00a fa6e 	bl	a8fc <__aeabi_fdiv>
     420:	4603      	mov	r3, r0
     422:	613b      	str	r3, [r7, #16]
  assert(IsFloatEqual(a, 9.0f));
     424:	693b      	ldr	r3, [r7, #16]
     426:	4951      	ldr	r1, [pc, #324]	; (56c <TestFloat()+0x2bc>)
     428:	4618      	mov	r0, r3
     42a:	f7ff ff1b 	bl	264 <IsFloatEqual(float, float)>
     42e:	4603      	mov	r3, r0
     430:	2b00      	cmp	r3, #0
     432:	d105      	bne.n	440 <TestFloat()+0x190>
     434:	4b4e      	ldr	r3, [pc, #312]	; (570 <TestFloat()+0x2c0>)
     436:	4a42      	ldr	r2, [pc, #264]	; (540 <TestFloat()+0x290>)
     438:	2129      	movs	r1, #41	; 0x29
     43a:	4842      	ldr	r0, [pc, #264]	; (544 <TestFloat()+0x294>)
     43c:	f00b fb48 	bl	bad0 <__assert_func>

  // rounding
  a = 1.499f;
     440:	4b4c      	ldr	r3, [pc, #304]	; (574 <TestFloat()+0x2c4>)
     442:	613b      	str	r3, [r7, #16]

  volatile auto a_ceil = std::ceil(a);
     444:	693b      	ldr	r3, [r7, #16]
     446:	4618      	mov	r0, r3
     448:	f000 f8a6 	bl	598 <std::ceil(float)>
     44c:	4603      	mov	r3, r0
     44e:	60fb      	str	r3, [r7, #12]
  assert(IsFloatEqual(a_ceil, 2.0f));
     450:	68fb      	ldr	r3, [r7, #12]
     452:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
     456:	4618      	mov	r0, r3
     458:	f7ff ff04 	bl	264 <IsFloatEqual(float, float)>
     45c:	4603      	mov	r3, r0
     45e:	2b00      	cmp	r3, #0
     460:	d105      	bne.n	46e <TestFloat()+0x1be>
     462:	4b45      	ldr	r3, [pc, #276]	; (578 <TestFloat()+0x2c8>)
     464:	4a36      	ldr	r2, [pc, #216]	; (540 <TestFloat()+0x290>)
     466:	212f      	movs	r1, #47	; 0x2f
     468:	4836      	ldr	r0, [pc, #216]	; (544 <TestFloat()+0x294>)
     46a:	f00b fb31 	bl	bad0 <__assert_func>

  volatile auto a_floor = std::floor(a);
     46e:	693b      	ldr	r3, [r7, #16]
     470:	4618      	mov	r0, r3
     472:	f000 f89d 	bl	5b0 <std::floor(float)>
     476:	4603      	mov	r3, r0
     478:	60bb      	str	r3, [r7, #8]
  assert(IsFloatEqual(a_floor, 1.0f));
     47a:	68bb      	ldr	r3, [r7, #8]
     47c:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
     480:	4618      	mov	r0, r3
     482:	f7ff feef 	bl	264 <IsFloatEqual(float, float)>
     486:	4603      	mov	r3, r0
     488:	2b00      	cmp	r3, #0
     48a:	d105      	bne.n	498 <TestFloat()+0x1e8>
     48c:	4b3b      	ldr	r3, [pc, #236]	; (57c <TestFloat()+0x2cc>)
     48e:	4a2c      	ldr	r2, [pc, #176]	; (540 <TestFloat()+0x290>)
     490:	2132      	movs	r1, #50	; 0x32
     492:	482c      	ldr	r0, [pc, #176]	; (544 <TestFloat()+0x294>)
     494:	f00b fb1c 	bl	bad0 <__assert_func>

  volatile auto a_round = std::round(a);
     498:	693b      	ldr	r3, [r7, #16]
     49a:	4618      	mov	r0, r3
     49c:	f000 f8f1 	bl	682 <std::round(float)>
     4a0:	4603      	mov	r3, r0
     4a2:	607b      	str	r3, [r7, #4]
  assert(IsFloatEqual(a_round, 1.0f));
     4a4:	687b      	ldr	r3, [r7, #4]
     4a6:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
     4aa:	4618      	mov	r0, r3
     4ac:	f7ff feda 	bl	264 <IsFloatEqual(float, float)>
     4b0:	4603      	mov	r3, r0
     4b2:	2b00      	cmp	r3, #0
     4b4:	d105      	bne.n	4c2 <TestFloat()+0x212>
     4b6:	4b32      	ldr	r3, [pc, #200]	; (580 <TestFloat()+0x2d0>)
     4b8:	4a21      	ldr	r2, [pc, #132]	; (540 <TestFloat()+0x290>)
     4ba:	2135      	movs	r1, #53	; 0x35
     4bc:	4821      	ldr	r0, [pc, #132]	; (544 <TestFloat()+0x294>)
     4be:	f00b fb07 	bl	bad0 <__assert_func>

  assert(std::isnan(NAN) == true);
     4c2:	4830      	ldr	r0, [pc, #192]	; (584 <TestFloat()+0x2d4>)
     4c4:	f000 f8a8 	bl	618 <std::isnan(float)>
     4c8:	4603      	mov	r3, r0
     4ca:	2b01      	cmp	r3, #1
     4cc:	d005      	beq.n	4da <TestFloat()+0x22a>
     4ce:	4b2e      	ldr	r3, [pc, #184]	; (588 <TestFloat()+0x2d8>)
     4d0:	4a1b      	ldr	r2, [pc, #108]	; (540 <TestFloat()+0x290>)
     4d2:	2137      	movs	r1, #55	; 0x37
     4d4:	481b      	ldr	r0, [pc, #108]	; (544 <TestFloat()+0x294>)
     4d6:	f00b fafb 	bl	bad0 <__assert_func>
  assert(std::isnan(INFINITY) == false);
     4da:	f04f 40ff 	mov.w	r0, #2139095040	; 0x7f800000
     4de:	f000 f89b 	bl	618 <std::isnan(float)>
     4e2:	4603      	mov	r3, r0
     4e4:	2b00      	cmp	r3, #0
     4e6:	d005      	beq.n	4f4 <TestFloat()+0x244>
     4e8:	4b28      	ldr	r3, [pc, #160]	; (58c <TestFloat()+0x2dc>)
     4ea:	4a15      	ldr	r2, [pc, #84]	; (540 <TestFloat()+0x290>)
     4ec:	2138      	movs	r1, #56	; 0x38
     4ee:	4815      	ldr	r0, [pc, #84]	; (544 <TestFloat()+0x294>)
     4f0:	f00b faee 	bl	bad0 <__assert_func>
  assert(std::isnan(0.0) == false);
     4f4:	f04f 0000 	mov.w	r0, #0
     4f8:	f04f 0100 	mov.w	r1, #0
     4fc:	f000 f8a5 	bl	64a <std::isnan(double)>
     500:	4603      	mov	r3, r0
     502:	2b00      	cmp	r3, #0
     504:	d005      	beq.n	512 <TestFloat()+0x262>
     506:	4b22      	ldr	r3, [pc, #136]	; (590 <TestFloat()+0x2e0>)
     508:	4a0d      	ldr	r2, [pc, #52]	; (540 <TestFloat()+0x290>)
     50a:	2139      	movs	r1, #57	; 0x39
     50c:	480d      	ldr	r0, [pc, #52]	; (544 <TestFloat()+0x294>)
     50e:	f00b fadf 	bl	bad0 <__assert_func>
  assert(std::isinf(INFINITY) == true);
     512:	f04f 40ff 	mov.w	r0, #2139095040	; 0x7f800000
     516:	f000 f857 	bl	5c8 <std::isinf(float)>
     51a:	4603      	mov	r3, r0
     51c:	2b01      	cmp	r3, #1
     51e:	d005      	beq.n	52c <TestFloat()+0x27c>
     520:	4b1c      	ldr	r3, [pc, #112]	; (594 <TestFloat()+0x2e4>)
     522:	4a07      	ldr	r2, [pc, #28]	; (540 <TestFloat()+0x290>)
     524:	213a      	movs	r1, #58	; 0x3a
     526:	4807      	ldr	r0, [pc, #28]	; (544 <TestFloat()+0x294>)
     528:	f00b fad2 	bl	bad0 <__assert_func>
     52c:	bf00      	nop
     52e:	372c      	adds	r7, #44	; 0x2c
     530:	46bd      	mov	sp, r7
     532:	bd90      	pop	{r4, r7, pc}
     534:	00017088 	.word	0x00017088
     538:	42f70000 	.word	0x42f70000
     53c:	000170b0 	.word	0x000170b0
     540:	000170bc 	.word	0x000170bc
     544:	000170d0 	.word	0x000170d0
     548:	00017114 	.word	0x00017114
     54c:	3efff2e5 	.word	0x3efff2e5
     550:	3f00068e 	.word	0x3f00068e
     554:	00017120 	.word	0x00017120
     558:	41200000 	.word	0x41200000
     55c:	00017154 	.word	0x00017154
     560:	00017170 	.word	0x00017170
     564:	00017188 	.word	0x00017188
     568:	000171a0 	.word	0x000171a0
     56c:	41100000 	.word	0x41100000
     570:	000171b8 	.word	0x000171b8
     574:	3fbfdf3b 	.word	0x3fbfdf3b
     578:	000171d0 	.word	0x000171d0
     57c:	000171ec 	.word	0x000171ec
     580:	00017208 	.word	0x00017208
     584:	7fc00000 	.word	0x7fc00000
     588:	00017224 	.word	0x00017224
     58c:	0001723c 	.word	0x0001723c
     590:	0001725c 	.word	0x0001725c
     594:	00017278 	.word	0x00017278

00000598 <std::ceil(float)>:
  using ::ceil;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  ceil(float __x)
  { return __builtin_ceilf(__x); }
     598:	b580      	push	{r7, lr}
     59a:	b082      	sub	sp, #8
     59c:	af00      	add	r7, sp, #0
     59e:	6078      	str	r0, [r7, #4]
     5a0:	6878      	ldr	r0, [r7, #4]
     5a2:	f009 fe7d 	bl	a2a0 <ceilf>
     5a6:	4603      	mov	r3, r0
     5a8:	4618      	mov	r0, r3
     5aa:	3708      	adds	r7, #8
     5ac:	46bd      	mov	sp, r7
     5ae:	bd80      	pop	{r7, pc}

000005b0 <std::floor(float)>:
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
     5b0:	b580      	push	{r7, lr}
     5b2:	b082      	sub	sp, #8
     5b4:	af00      	add	r7, sp, #0
     5b6:	6078      	str	r0, [r7, #4]
     5b8:	6878      	ldr	r0, [r7, #4]
     5ba:	f009 feaf 	bl	a31c <floorf>
     5be:	4603      	mov	r3, r0
     5c0:	4618      	mov	r0, r3
     5c2:	3708      	adds	r7, #8
     5c4:	46bd      	mov	sp, r7
     5c6:	bd80      	pop	{r7, pc}

000005c8 <std::isinf(float)>:
#endif

#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
  constexpr bool
  isinf(float __x)
  { return __builtin_isinf(__x); }
     5c8:	b5b0      	push	{r4, r5, r7, lr}
     5ca:	b082      	sub	sp, #8
     5cc:	af00      	add	r7, sp, #0
     5ce:	6078      	str	r0, [r7, #4]
     5d0:	687b      	ldr	r3, [r7, #4]
     5d2:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
     5d6:	2301      	movs	r3, #1
     5d8:	461d      	mov	r5, r3
     5da:	490e      	ldr	r1, [pc, #56]	; (614 <std::isinf(float)+0x4c>)
     5dc:	4620      	mov	r0, r4
     5de:	f00a fa9f 	bl	ab20 <__aeabi_fcmpun>
     5e2:	4603      	mov	r3, r0
     5e4:	2b00      	cmp	r3, #0
     5e6:	d108      	bne.n	5fa <std::isinf(float)+0x32>
     5e8:	490a      	ldr	r1, [pc, #40]	; (614 <std::isinf(float)+0x4c>)
     5ea:	4620      	mov	r0, r4
     5ec:	f00a fa7a 	bl	aae4 <__aeabi_fcmple>
     5f0:	4603      	mov	r3, r0
     5f2:	2b00      	cmp	r3, #0
     5f4:	d101      	bne.n	5fa <std::isinf(float)+0x32>
     5f6:	2300      	movs	r3, #0
     5f8:	461d      	mov	r5, r3
     5fa:	b2eb      	uxtb	r3, r5
     5fc:	f083 0301 	eor.w	r3, r3, #1
     600:	b2db      	uxtb	r3, r3
     602:	2b00      	cmp	r3, #0
     604:	bf14      	ite	ne
     606:	2301      	movne	r3, #1
     608:	2300      	moveq	r3, #0
     60a:	b2db      	uxtb	r3, r3
     60c:	4618      	mov	r0, r3
     60e:	3708      	adds	r7, #8
     610:	46bd      	mov	sp, r7
     612:	bdb0      	pop	{r4, r5, r7, pc}
     614:	7f7fffff 	.word	0x7f7fffff

00000618 <std::isnan(float)>:
#endif

#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
  constexpr bool
  isnan(float __x)
  { return __builtin_isnan(__x); }
     618:	b590      	push	{r4, r7, lr}
     61a:	b083      	sub	sp, #12
     61c:	af00      	add	r7, sp, #0
     61e:	6078      	str	r0, [r7, #4]
     620:	2301      	movs	r3, #1
     622:	461c      	mov	r4, r3
     624:	6879      	ldr	r1, [r7, #4]
     626:	6878      	ldr	r0, [r7, #4]
     628:	f00a fa7a 	bl	ab20 <__aeabi_fcmpun>
     62c:	4603      	mov	r3, r0
     62e:	2b00      	cmp	r3, #0
     630:	d101      	bne.n	636 <std::isnan(float)+0x1e>
     632:	2300      	movs	r3, #0
     634:	461c      	mov	r4, r3
     636:	b2e3      	uxtb	r3, r4
     638:	2b00      	cmp	r3, #0
     63a:	bf14      	ite	ne
     63c:	2301      	movne	r3, #1
     63e:	2300      	moveq	r3, #0
     640:	b2db      	uxtb	r3, r3
     642:	4618      	mov	r0, r3
     644:	370c      	adds	r7, #12
     646:	46bd      	mov	sp, r7
     648:	bd90      	pop	{r4, r7, pc}

0000064a <std::isnan(double)>:
  && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
  using ::isnan;
#else
  constexpr bool
  isnan(double __x)
  { return __builtin_isnan(__x); }
     64a:	b590      	push	{r4, r7, lr}
     64c:	b083      	sub	sp, #12
     64e:	af00      	add	r7, sp, #0
     650:	e9c7 0100 	strd	r0, r1, [r7]
     654:	2301      	movs	r3, #1
     656:	461c      	mov	r4, r3
     658:	e9d7 2300 	ldrd	r2, r3, [r7]
     65c:	e9d7 0100 	ldrd	r0, r1, [r7]
     660:	f009 ff74 	bl	a54c <__aeabi_dcmpun>
     664:	4603      	mov	r3, r0
     666:	2b00      	cmp	r3, #0
     668:	d101      	bne.n	66e <std::isnan(double)+0x24>
     66a:	2300      	movs	r3, #0
     66c:	461c      	mov	r4, r3
     66e:	b2e3      	uxtb	r3, r4
     670:	2b00      	cmp	r3, #0
     672:	bf14      	ite	ne
     674:	2301      	movne	r3, #1
     676:	2300      	moveq	r3, #0
     678:	b2db      	uxtb	r3, r3
     67a:	4618      	mov	r0, r3
     67c:	370c      	adds	r7, #12
     67e:	46bd      	mov	sp, r7
     680:	bd90      	pop	{r4, r7, pc}

00000682 <std::round(float)>:
#endif

#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
  constexpr float
  round(float __x)
  { return __builtin_roundf(__x); }
     682:	b580      	push	{r7, lr}
     684:	b082      	sub	sp, #8
     686:	af00      	add	r7, sp, #0
     688:	6078      	str	r0, [r7, #4]
     68a:	6878      	ldr	r0, [r7, #4]
     68c:	f009 fe86 	bl	a39c <roundf>
     690:	4603      	mov	r3, r0
     692:	4618      	mov	r0, r3
     694:	3708      	adds	r7, #8
     696:	46bd      	mov	sp, r7
     698:	bd80      	pop	{r7, pc}
     69a:	0000      	movs	r0, r0
     69c:	0000      	movs	r0, r0
	...

000006a0 <TestSprintf()>:
#include <cmath>
#include <cstring>
#include <stdint.h>
#include <stdio.h>

void TestSprintf() {
     6a0:	b580      	push	{r7, lr}
     6a2:	b092      	sub	sp, #72	; 0x48
     6a4:	af02      	add	r7, sp, #8
  printf("# Test: Sprintf\n");
     6a6:	483c      	ldr	r0, [pc, #240]	; (798 <TestSprintf()+0xf8>)
     6a8:	f00c fab8 	bl	cc1c <puts>

  char buf[50];
  sprintf(buf, "%s, %i, %u", "ABC", -123, 345);
     6ac:	1d38      	adds	r0, r7, #4
     6ae:	f240 1359 	movw	r3, #345	; 0x159
     6b2:	9300      	str	r3, [sp, #0]
     6b4:	f06f 037a 	mvn.w	r3, #122	; 0x7a
     6b8:	4a38      	ldr	r2, [pc, #224]	; (79c <TestSprintf()+0xfc>)
     6ba:	4939      	ldr	r1, [pc, #228]	; (7a0 <TestSprintf()+0x100>)
     6bc:	f00c fe3a 	bl	d334 <sprintf>
  assert(strcmp(buf, "ABC, -123, 345") == 0);
     6c0:	1d3b      	adds	r3, r7, #4
     6c2:	4938      	ldr	r1, [pc, #224]	; (7a4 <TestSprintf()+0x104>)
     6c4:	4618      	mov	r0, r3
     6c6:	f00c fe57 	bl	d378 <strcmp>
     6ca:	4603      	mov	r3, r0
     6cc:	2b00      	cmp	r3, #0
     6ce:	d005      	beq.n	6dc <TestSprintf()+0x3c>
     6d0:	4b35      	ldr	r3, [pc, #212]	; (7a8 <TestSprintf()+0x108>)
     6d2:	4a36      	ldr	r2, [pc, #216]	; (7ac <TestSprintf()+0x10c>)
     6d4:	210d      	movs	r1, #13
     6d6:	4836      	ldr	r0, [pc, #216]	; (7b0 <TestSprintf()+0x110>)
     6d8:	f00b f9fa 	bl	bad0 <__assert_func>

  uint32_t test0{1234u};
     6dc:	f240 43d2 	movw	r3, #1234	; 0x4d2
     6e0:	63fb      	str	r3, [r7, #60]	; 0x3c
  sprintf(buf, "  1234 == %u\n", test0);
     6e2:	1d3b      	adds	r3, r7, #4
     6e4:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
     6e6:	4933      	ldr	r1, [pc, #204]	; (7b4 <TestSprintf()+0x114>)
     6e8:	4618      	mov	r0, r3
     6ea:	f00c fe23 	bl	d334 <sprintf>
  assert(strcmp(buf, "  1234 == 1234\n") == 0);
     6ee:	1d3b      	adds	r3, r7, #4
     6f0:	4931      	ldr	r1, [pc, #196]	; (7b8 <TestSprintf()+0x118>)
     6f2:	4618      	mov	r0, r3
     6f4:	f00c fe40 	bl	d378 <strcmp>
     6f8:	4603      	mov	r3, r0
     6fa:	2b00      	cmp	r3, #0
     6fc:	d005      	beq.n	70a <TestSprintf()+0x6a>
     6fe:	4b2f      	ldr	r3, [pc, #188]	; (7bc <TestSprintf()+0x11c>)
     700:	4a2a      	ldr	r2, [pc, #168]	; (7ac <TestSprintf()+0x10c>)
     702:	2111      	movs	r1, #17
     704:	482a      	ldr	r0, [pc, #168]	; (7b0 <TestSprintf()+0x110>)
     706:	f00b f9e3 	bl	bad0 <__assert_func>

  uint32_t test1{0xCAFEBABEu};
     70a:	4b2d      	ldr	r3, [pc, #180]	; (7c0 <TestSprintf()+0x120>)
     70c:	63bb      	str	r3, [r7, #56]	; 0x38
  sprintf(buf, "  0xCAFEBABE == 0x%X\n", test1);
     70e:	1d3b      	adds	r3, r7, #4
     710:	6bba      	ldr	r2, [r7, #56]	; 0x38
     712:	492c      	ldr	r1, [pc, #176]	; (7c4 <TestSprintf()+0x124>)
     714:	4618      	mov	r0, r3
     716:	f00c fe0d 	bl	d334 <sprintf>
  assert(strcmp(buf, "  0xCAFEBABE == 0xCAFEBABE\n") == 0);
     71a:	1d3b      	adds	r3, r7, #4
     71c:	492a      	ldr	r1, [pc, #168]	; (7c8 <TestSprintf()+0x128>)
     71e:	4618      	mov	r0, r3
     720:	f00c fe2a 	bl	d378 <strcmp>
     724:	4603      	mov	r3, r0
     726:	2b00      	cmp	r3, #0
     728:	d005      	beq.n	736 <TestSprintf()+0x96>
     72a:	4b28      	ldr	r3, [pc, #160]	; (7cc <TestSprintf()+0x12c>)
     72c:	4a1f      	ldr	r2, [pc, #124]	; (7ac <TestSprintf()+0x10c>)
     72e:	2115      	movs	r1, #21
     730:	481f      	ldr	r0, [pc, #124]	; (7b0 <TestSprintf()+0x110>)
     732:	f00b f9cd 	bl	bad0 <__assert_func>

  sprintf(buf, "  Float: %f\n", 123.45678f);
     736:	1d38      	adds	r0, r7, #4
     738:	a315      	add	r3, pc, #84	; (adr r3, 790 <TestSprintf()+0xf0>)
     73a:	e9d3 2300 	ldrd	r2, r3, [r3]
     73e:	4924      	ldr	r1, [pc, #144]	; (7d0 <TestSprintf()+0x130>)
     740:	f00c fdf8 	bl	d334 <sprintf>
  assert(strcmp(buf, "  Float: 123.456779\n") == 0);
     744:	1d3b      	adds	r3, r7, #4
     746:	4923      	ldr	r1, [pc, #140]	; (7d4 <TestSprintf()+0x134>)
     748:	4618      	mov	r0, r3
     74a:	f00c fe15 	bl	d378 <strcmp>
     74e:	4603      	mov	r3, r0
     750:	2b00      	cmp	r3, #0
     752:	d005      	beq.n	760 <TestSprintf()+0xc0>
     754:	4b20      	ldr	r3, [pc, #128]	; (7d8 <TestSprintf()+0x138>)
     756:	4a15      	ldr	r2, [pc, #84]	; (7ac <TestSprintf()+0x10c>)
     758:	2118      	movs	r1, #24
     75a:	4815      	ldr	r0, [pc, #84]	; (7b0 <TestSprintf()+0x110>)
     75c:	f00b f9b8 	bl	bad0 <__assert_func>

  sprintf(buf, "  --> %s \n", "inserted str");
     760:	1d3b      	adds	r3, r7, #4
     762:	4a1e      	ldr	r2, [pc, #120]	; (7dc <TestSprintf()+0x13c>)
     764:	491e      	ldr	r1, [pc, #120]	; (7e0 <TestSprintf()+0x140>)
     766:	4618      	mov	r0, r3
     768:	f00c fde4 	bl	d334 <sprintf>
  assert(strcmp(buf, "  --> inserted str \n") == 0);
     76c:	1d3b      	adds	r3, r7, #4
     76e:	491d      	ldr	r1, [pc, #116]	; (7e4 <TestSprintf()+0x144>)
     770:	4618      	mov	r0, r3
     772:	f00c fe01 	bl	d378 <strcmp>
     776:	4603      	mov	r3, r0
     778:	2b00      	cmp	r3, #0
     77a:	d005      	beq.n	788 <TestSprintf()+0xe8>
     77c:	4b1a      	ldr	r3, [pc, #104]	; (7e8 <TestSprintf()+0x148>)
     77e:	4a0b      	ldr	r2, [pc, #44]	; (7ac <TestSprintf()+0x10c>)
     780:	211b      	movs	r1, #27
     782:	480b      	ldr	r0, [pc, #44]	; (7b0 <TestSprintf()+0x110>)
     784:	f00b f9a4 	bl	bad0 <__assert_func>
     788:	bf00      	nop
     78a:	3740      	adds	r7, #64	; 0x40
     78c:	46bd      	mov	sp, r7
     78e:	bd80      	pop	{r7, pc}
     790:	e0000000 	.word	0xe0000000
     794:	405edd3b 	.word	0x405edd3b
     798:	00017298 	.word	0x00017298
     79c:	000172a8 	.word	0x000172a8
     7a0:	000172ac 	.word	0x000172ac
     7a4:	000172b8 	.word	0x000172b8
     7a8:	000172c8 	.word	0x000172c8
     7ac:	000172ec 	.word	0x000172ec
     7b0:	00017300 	.word	0x00017300
     7b4:	00017348 	.word	0x00017348
     7b8:	00017358 	.word	0x00017358
     7bc:	00017368 	.word	0x00017368
     7c0:	cafebabe 	.word	0xcafebabe
     7c4:	00017390 	.word	0x00017390
     7c8:	000173a8 	.word	0x000173a8
     7cc:	000173c4 	.word	0x000173c4
     7d0:	000173f8 	.word	0x000173f8
     7d4:	00017408 	.word	0x00017408
     7d8:	00017420 	.word	0x00017420
     7dc:	0001744c 	.word	0x0001744c
     7e0:	0001745c 	.word	0x0001745c
     7e4:	00017468 	.word	0x00017468
     7e8:	00017480 	.word	0x00017480

000007ec <TestStdOut()>:
#include "test_std_out.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

void TestStdOut() {
     7ec:	b580      	push	{r7, lr}
     7ee:	af00      	add	r7, sp, #0
  printf("# Test: Standard output\n");
     7f0:	4826      	ldr	r0, [pc, #152]	; (88c <TestStdOut()+0xa0>)
     7f2:	f00c fa13 	bl	cc1c <puts>

  // char tests
  fputc(' ', stdout);
     7f6:	4b26      	ldr	r3, [pc, #152]	; (890 <TestStdOut()+0xa4>)
     7f8:	681b      	ldr	r3, [r3, #0]
     7fa:	689b      	ldr	r3, [r3, #8]
     7fc:	4619      	mov	r1, r3
     7fe:	2020      	movs	r0, #32
     800:	f00b f9e6 	bl	bbd0 <fputc>
  fputc(' ', stdout);
     804:	4b22      	ldr	r3, [pc, #136]	; (890 <TestStdOut()+0xa4>)
     806:	681b      	ldr	r3, [r3, #0]
     808:	689b      	ldr	r3, [r3, #8]
     80a:	4619      	mov	r1, r3
     80c:	2020      	movs	r0, #32
     80e:	f00b f9df 	bl	bbd0 <fputc>
  fputc('T', stdout);
     812:	4b1f      	ldr	r3, [pc, #124]	; (890 <TestStdOut()+0xa4>)
     814:	681b      	ldr	r3, [r3, #0]
     816:	689b      	ldr	r3, [r3, #8]
     818:	4619      	mov	r1, r3
     81a:	2054      	movs	r0, #84	; 0x54
     81c:	f00b f9d8 	bl	bbd0 <fputc>
  fputc('E', stdout);
     820:	4b1b      	ldr	r3, [pc, #108]	; (890 <TestStdOut()+0xa4>)
     822:	681b      	ldr	r3, [r3, #0]
     824:	689b      	ldr	r3, [r3, #8]
     826:	4619      	mov	r1, r3
     828:	2045      	movs	r0, #69	; 0x45
     82a:	f00b f9d1 	bl	bbd0 <fputc>
  fputc('S', stdout);
     82e:	4b18      	ldr	r3, [pc, #96]	; (890 <TestStdOut()+0xa4>)
     830:	681b      	ldr	r3, [r3, #0]
     832:	689b      	ldr	r3, [r3, #8]
     834:	4619      	mov	r1, r3
     836:	2053      	movs	r0, #83	; 0x53
     838:	f00b f9ca 	bl	bbd0 <fputc>
  fputc('T', stdout);
     83c:	4b14      	ldr	r3, [pc, #80]	; (890 <TestStdOut()+0xa4>)
     83e:	681b      	ldr	r3, [r3, #0]
     840:	689b      	ldr	r3, [r3, #8]
     842:	4619      	mov	r1, r3
     844:	2054      	movs	r0, #84	; 0x54
     846:	f00b f9c3 	bl	bbd0 <fputc>
  fputc('!', stdout);
     84a:	4b11      	ldr	r3, [pc, #68]	; (890 <TestStdOut()+0xa4>)
     84c:	681b      	ldr	r3, [r3, #0]
     84e:	689b      	ldr	r3, [r3, #8]
     850:	4619      	mov	r1, r3
     852:	2021      	movs	r0, #33	; 0x21
     854:	f00b f9bc 	bl	bbd0 <fputc>
  fputc('\n', stdout);
     858:	4b0d      	ldr	r3, [pc, #52]	; (890 <TestStdOut()+0xa4>)
     85a:	681b      	ldr	r3, [r3, #0]
     85c:	689b      	ldr	r3, [r3, #8]
     85e:	4619      	mov	r1, r3
     860:	200a      	movs	r0, #10
     862:	f00b f9b5 	bl	bbd0 <fputc>

  printf("  Hello World\n");
     866:	480b      	ldr	r0, [pc, #44]	; (894 <TestStdOut()+0xa8>)
     868:	f00c f9d8 	bl	cc1c <puts>

  printf("  0123456789012345678901234567890123456789\n");
     86c:	480a      	ldr	r0, [pc, #40]	; (898 <TestStdOut()+0xac>)
     86e:	f00c f9d5 	bl	cc1c <puts>

  fprintf(stdout, "  fprintf output\n");
     872:	4b07      	ldr	r3, [pc, #28]	; (890 <TestStdOut()+0xa4>)
     874:	681b      	ldr	r3, [r3, #0]
     876:	689b      	ldr	r3, [r3, #8]
     878:	2211      	movs	r2, #17
     87a:	2101      	movs	r1, #1
     87c:	4807      	ldr	r0, [pc, #28]	; (89c <TestStdOut()+0xb0>)
     87e:	f00b fbed 	bl	c05c <fwrite>
  iprintf("  iprintf output\n");
     882:	4807      	ldr	r0, [pc, #28]	; (8a0 <TestStdOut()+0xb4>)
     884:	f00b fc20 	bl	c0c8 <iprintf>
     888:	bf00      	nop
     88a:	bd80      	pop	{r7, pc}
     88c:	000174ac 	.word	0x000174ac
     890:	20000124 	.word	0x20000124
     894:	000174c4 	.word	0x000174c4
     898:	000174d4 	.word	0x000174d4
     89c:	00017500 	.word	0x00017500
     8a0:	00017514 	.word	0x00017514

000008a4 <StackAlignmentTest()>:
#include "test_stack_alignment.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

uint32_t StackAlignmentTest() {
     8a4:	b480      	push	{r7}
     8a6:	b083      	sub	sp, #12
     8a8:	af00      	add	r7, sp, #0
  volatile uint32_t ret32 = 0xCAFEu;
     8aa:	f64c 23fe 	movw	r3, #51966	; 0xcafe
     8ae:	607b      	str	r3, [r7, #4]
  volatile uint16_t ret16 = static_cast<uint16_t>(ret32);
     8b0:	687b      	ldr	r3, [r7, #4]
     8b2:	b29b      	uxth	r3, r3
     8b4:	807b      	strh	r3, [r7, #2]
  volatile uint8_t ret8 = static_cast<uint8_t>(ret16);
     8b6:	887b      	ldrh	r3, [r7, #2]
     8b8:	b29b      	uxth	r3, r3
     8ba:	b2db      	uxtb	r3, r3
     8bc:	707b      	strb	r3, [r7, #1]
  return ret8;
     8be:	787b      	ldrb	r3, [r7, #1]
     8c0:	b2db      	uxtb	r3, r3
};
     8c2:	4618      	mov	r0, r3
     8c4:	370c      	adds	r7, #12
     8c6:	46bd      	mov	sp, r7
     8c8:	bc80      	pop	{r7}
     8ca:	4770      	bx	lr

000008cc <CallFct3(unsigned long)>:

uint32_t CallFct3(uint32_t a) {
     8cc:	b480      	push	{r7}
     8ce:	b085      	sub	sp, #20
     8d0:	af00      	add	r7, sp, #0
     8d2:	6078      	str	r0, [r7, #4]
  volatile uint32_t ret = a;
     8d4:	687b      	ldr	r3, [r7, #4]
     8d6:	60fb      	str	r3, [r7, #12]
  return ret;
     8d8:	68fb      	ldr	r3, [r7, #12]
}
     8da:	4618      	mov	r0, r3
     8dc:	3714      	adds	r7, #20
     8de:	46bd      	mov	sp, r7
     8e0:	bc80      	pop	{r7}
     8e2:	4770      	bx	lr

000008e4 <CallFct2(unsigned short)>:

uint16_t CallFct2(uint16_t a) {
     8e4:	b580      	push	{r7, lr}
     8e6:	b084      	sub	sp, #16
     8e8:	af00      	add	r7, sp, #0
     8ea:	4603      	mov	r3, r0
     8ec:	80fb      	strh	r3, [r7, #6]
  volatile uint16_t ret = static_cast<uint16_t>(CallFct3(static_cast<uint32_t>(a)));
     8ee:	88fb      	ldrh	r3, [r7, #6]
     8f0:	4618      	mov	r0, r3
     8f2:	f7ff ffeb 	bl	8cc <CallFct3(unsigned long)>
     8f6:	4603      	mov	r3, r0
     8f8:	b29b      	uxth	r3, r3
     8fa:	81fb      	strh	r3, [r7, #14]
  return ret;
     8fc:	89fb      	ldrh	r3, [r7, #14]
     8fe:	b29b      	uxth	r3, r3
}
     900:	4618      	mov	r0, r3
     902:	3710      	adds	r7, #16
     904:	46bd      	mov	sp, r7
     906:	bd80      	pop	{r7, pc}

00000908 <CallFct1(unsigned char)>:

uint8_t CallFct1(uint8_t a) {
     908:	b580      	push	{r7, lr}
     90a:	b084      	sub	sp, #16
     90c:	af00      	add	r7, sp, #0
     90e:	4603      	mov	r3, r0
     910:	71fb      	strb	r3, [r7, #7]
  volatile uint8_t ret = static_cast<uint8_t>(CallFct2(static_cast<uint16_t>(a)));
     912:	79fb      	ldrb	r3, [r7, #7]
     914:	b29b      	uxth	r3, r3
     916:	4618      	mov	r0, r3
     918:	f7ff ffe4 	bl	8e4 <CallFct2(unsigned short)>
     91c:	4603      	mov	r3, r0
     91e:	b2db      	uxtb	r3, r3
     920:	73fb      	strb	r3, [r7, #15]
  return ret;
     922:	7bfb      	ldrb	r3, [r7, #15]
     924:	b2db      	uxtb	r3, r3
}
     926:	4618      	mov	r0, r3
     928:	3710      	adds	r7, #16
     92a:	46bd      	mov	sp, r7
     92c:	bd80      	pop	{r7, pc}

0000092e <TestStackAlignment()>:

// TODO: Read out the stack pointer and check if it is aligned
void TestStackAlignment() {
     92e:	b580      	push	{r7, lr}
     930:	af00      	add	r7, sp, #0
  printf("# Test: Stack alignment\n");
     932:	480e      	ldr	r0, [pc, #56]	; (96c <TestStackAlignment()+0x3e>)
     934:	f00c f972 	bl	cc1c <puts>
  assert(StackAlignmentTest() == 0xFE);
     938:	f7ff ffb4 	bl	8a4 <StackAlignmentTest()>
     93c:	4603      	mov	r3, r0
     93e:	2bfe      	cmp	r3, #254	; 0xfe
     940:	d005      	beq.n	94e <TestStackAlignment()+0x20>
     942:	4b0b      	ldr	r3, [pc, #44]	; (970 <TestStackAlignment()+0x42>)
     944:	4a0b      	ldr	r2, [pc, #44]	; (974 <TestStackAlignment()+0x46>)
     946:	211f      	movs	r1, #31
     948:	480b      	ldr	r0, [pc, #44]	; (978 <TestStackAlignment()+0x4a>)
     94a:	f00b f8c1 	bl	bad0 <__assert_func>
  assert(CallFct1(0xDE) == 0xDE);
     94e:	20de      	movs	r0, #222	; 0xde
     950:	f7ff ffda 	bl	908 <CallFct1(unsigned char)>
     954:	4603      	mov	r3, r0
     956:	2bde      	cmp	r3, #222	; 0xde
     958:	d005      	beq.n	966 <TestStackAlignment()+0x38>
     95a:	4b08      	ldr	r3, [pc, #32]	; (97c <TestStackAlignment()+0x4e>)
     95c:	4a05      	ldr	r2, [pc, #20]	; (974 <TestStackAlignment()+0x46>)
     95e:	2120      	movs	r1, #32
     960:	4805      	ldr	r0, [pc, #20]	; (978 <TestStackAlignment()+0x4a>)
     962:	f00b f8b5 	bl	bad0 <__assert_func>
     966:	bf00      	nop
     968:	bd80      	pop	{r7, pc}
     96a:	bf00      	nop
     96c:	00017528 	.word	0x00017528
     970:	00017540 	.word	0x00017540
     974:	00017560 	.word	0x00017560
     978:	0001757c 	.word	0x0001757c
     97c:	000175cc 	.word	0x000175cc

00000980 <TestStrlen()>:
#include <assert.h>
#include <cstring>
#include <stdint.h>
#include <stdio.h>

void TestStrlen() {
     980:	b580      	push	{r7, lr}
     982:	b084      	sub	sp, #16
     984:	af00      	add	r7, sp, #0
  const char *test_str1 = "";
     986:	4b1d      	ldr	r3, [pc, #116]	; (9fc <TestStrlen()+0x7c>)
     988:	60fb      	str	r3, [r7, #12]
  assert(strlen(test_str1) == 0);
     98a:	68fb      	ldr	r3, [r7, #12]
     98c:	781b      	ldrb	r3, [r3, #0]
     98e:	2b00      	cmp	r3, #0
     990:	d005      	beq.n	99e <TestStrlen()+0x1e>
     992:	4b1b      	ldr	r3, [pc, #108]	; (a00 <TestStrlen()+0x80>)
     994:	4a1b      	ldr	r2, [pc, #108]	; (a04 <TestStrlen()+0x84>)
     996:	2109      	movs	r1, #9
     998:	481b      	ldr	r0, [pc, #108]	; (a08 <TestStrlen()+0x88>)
     99a:	f00b f899 	bl	bad0 <__assert_func>

  const char *test_str2 = "0";
     99e:	4b1b      	ldr	r3, [pc, #108]	; (a0c <TestStrlen()+0x8c>)
     9a0:	60bb      	str	r3, [r7, #8]
  assert(strlen(test_str2) == 1);
     9a2:	68b8      	ldr	r0, [r7, #8]
     9a4:	f00c fdc6 	bl	d534 <strlen>
     9a8:	4603      	mov	r3, r0
     9aa:	2b01      	cmp	r3, #1
     9ac:	d005      	beq.n	9ba <TestStrlen()+0x3a>
     9ae:	4b18      	ldr	r3, [pc, #96]	; (a10 <TestStrlen()+0x90>)
     9b0:	4a14      	ldr	r2, [pc, #80]	; (a04 <TestStrlen()+0x84>)
     9b2:	210c      	movs	r1, #12
     9b4:	4814      	ldr	r0, [pc, #80]	; (a08 <TestStrlen()+0x88>)
     9b6:	f00b f88b 	bl	bad0 <__assert_func>

  const char *test_str3 = "012345678";
     9ba:	4b16      	ldr	r3, [pc, #88]	; (a14 <TestStrlen()+0x94>)
     9bc:	607b      	str	r3, [r7, #4]
  assert(strlen(test_str3) == 9);
     9be:	6878      	ldr	r0, [r7, #4]
     9c0:	f00c fdb8 	bl	d534 <strlen>
     9c4:	4603      	mov	r3, r0
     9c6:	2b09      	cmp	r3, #9
     9c8:	d005      	beq.n	9d6 <TestStrlen()+0x56>
     9ca:	4b13      	ldr	r3, [pc, #76]	; (a18 <TestStrlen()+0x98>)
     9cc:	4a0d      	ldr	r2, [pc, #52]	; (a04 <TestStrlen()+0x84>)
     9ce:	210f      	movs	r1, #15
     9d0:	480d      	ldr	r0, [pc, #52]	; (a08 <TestStrlen()+0x88>)
     9d2:	f00b f87d 	bl	bad0 <__assert_func>

  const char *test_str4 = "main.cpp";
     9d6:	4b11      	ldr	r3, [pc, #68]	; (a1c <TestStrlen()+0x9c>)
     9d8:	603b      	str	r3, [r7, #0]
  assert(strlen(test_str4) == 8);
     9da:	6838      	ldr	r0, [r7, #0]
     9dc:	f00c fdaa 	bl	d534 <strlen>
     9e0:	4603      	mov	r3, r0
     9e2:	2b08      	cmp	r3, #8
     9e4:	d005      	beq.n	9f2 <TestStrlen()+0x72>
     9e6:	4b0e      	ldr	r3, [pc, #56]	; (a20 <TestStrlen()+0xa0>)
     9e8:	4a06      	ldr	r2, [pc, #24]	; (a04 <TestStrlen()+0x84>)
     9ea:	2112      	movs	r1, #18
     9ec:	4806      	ldr	r0, [pc, #24]	; (a08 <TestStrlen()+0x88>)
     9ee:	f00b f86f 	bl	bad0 <__assert_func>
}
     9f2:	bf00      	nop
     9f4:	3710      	adds	r7, #16
     9f6:	46bd      	mov	sp, r7
     9f8:	bd80      	pop	{r7, pc}
     9fa:	bf00      	nop
     9fc:	000175e4 	.word	0x000175e4
     a00:	000175e8 	.word	0x000175e8
     a04:	00017600 	.word	0x00017600
     a08:	00017614 	.word	0x00017614
     a0c:	0001765c 	.word	0x0001765c
     a10:	00017660 	.word	0x00017660
     a14:	00017678 	.word	0x00017678
     a18:	00017684 	.word	0x00017684
     a1c:	0001769c 	.word	0x0001769c
     a20:	000176a8 	.word	0x000176a8

00000a24 <TestStrcmp()>:

void TestStrcmp() {
     a24:	b580      	push	{r7, lr}
     a26:	b082      	sub	sp, #8
     a28:	af00      	add	r7, sp, #0

  assert(strcmp("ABCD", "ABCD") == 0);
  assert(strcmp("ABCD", "ABBC") > 0);
  assert(strcmp("ABCD", "ABdD") < 0);

  const char *test_str_cmp = "ABCDEFG";
     a2a:	4b16      	ldr	r3, [pc, #88]	; (a84 <TestStrcmp()+0x60>)
     a2c:	607b      	str	r3, [r7, #4]
  assert(strcmp(test_str_cmp, "ABCDEFG") == 0);
     a2e:	4915      	ldr	r1, [pc, #84]	; (a84 <TestStrcmp()+0x60>)
     a30:	6878      	ldr	r0, [r7, #4]
     a32:	f00c fca1 	bl	d378 <strcmp>
     a36:	4603      	mov	r3, r0
     a38:	2b00      	cmp	r3, #0
     a3a:	d005      	beq.n	a48 <TestStrcmp()+0x24>
     a3c:	4b12      	ldr	r3, [pc, #72]	; (a88 <TestStrcmp()+0x64>)
     a3e:	4a13      	ldr	r2, [pc, #76]	; (a8c <TestStrcmp()+0x68>)
     a40:	212b      	movs	r1, #43	; 0x2b
     a42:	4813      	ldr	r0, [pc, #76]	; (a90 <TestStrcmp()+0x6c>)
     a44:	f00b f844 	bl	bad0 <__assert_func>
  assert(strcmp(test_str_cmp, "ABCdEFG") < 0);
     a48:	4912      	ldr	r1, [pc, #72]	; (a94 <TestStrcmp()+0x70>)
     a4a:	6878      	ldr	r0, [r7, #4]
     a4c:	f00c fc94 	bl	d378 <strcmp>
     a50:	4603      	mov	r3, r0
     a52:	2b00      	cmp	r3, #0
     a54:	db05      	blt.n	a62 <TestStrcmp()+0x3e>
     a56:	4b10      	ldr	r3, [pc, #64]	; (a98 <TestStrcmp()+0x74>)
     a58:	4a0c      	ldr	r2, [pc, #48]	; (a8c <TestStrcmp()+0x68>)
     a5a:	212c      	movs	r1, #44	; 0x2c
     a5c:	480c      	ldr	r0, [pc, #48]	; (a90 <TestStrcmp()+0x6c>)
     a5e:	f00b f837 	bl	bad0 <__assert_func>
  assert(strcmp(test_str_cmp, "ABCCEFG") > 0);
     a62:	490e      	ldr	r1, [pc, #56]	; (a9c <TestStrcmp()+0x78>)
     a64:	6878      	ldr	r0, [r7, #4]
     a66:	f00c fc87 	bl	d378 <strcmp>
     a6a:	4603      	mov	r3, r0
     a6c:	2b00      	cmp	r3, #0
     a6e:	dc05      	bgt.n	a7c <TestStrcmp()+0x58>
     a70:	4b0b      	ldr	r3, [pc, #44]	; (aa0 <TestStrcmp()+0x7c>)
     a72:	4a06      	ldr	r2, [pc, #24]	; (a8c <TestStrcmp()+0x68>)
     a74:	212d      	movs	r1, #45	; 0x2d
     a76:	4806      	ldr	r0, [pc, #24]	; (a90 <TestStrcmp()+0x6c>)
     a78:	f00b f82a 	bl	bad0 <__assert_func>
}
     a7c:	bf00      	nop
     a7e:	3708      	adds	r7, #8
     a80:	46bd      	mov	sp, r7
     a82:	bd80      	pop	{r7, pc}
     a84:	000176c0 	.word	0x000176c0
     a88:	000176c8 	.word	0x000176c8
     a8c:	000176f0 	.word	0x000176f0
     a90:	00017614 	.word	0x00017614
     a94:	00017704 	.word	0x00017704
     a98:	0001770c 	.word	0x0001770c
     a9c:	00017730 	.word	0x00017730
     aa0:	00017738 	.word	0x00017738

00000aa4 <TestMemCpy()>:

void TestMemCpy() {
     aa4:	b580      	push	{r7, lr}
     aa6:	b086      	sub	sp, #24
     aa8:	af00      	add	r7, sp, #0
  char str1[] = "1234567890";
     aaa:	4a15      	ldr	r2, [pc, #84]	; (b00 <TestMemCpy()+0x5c>)
     aac:	f107 030c 	add.w	r3, r7, #12
     ab0:	ca07      	ldmia	r2, {r0, r1, r2}
     ab2:	c303      	stmia	r3!, {r0, r1}
     ab4:	801a      	strh	r2, [r3, #0]
     ab6:	3302      	adds	r3, #2
     ab8:	0c12      	lsrs	r2, r2, #16
     aba:	701a      	strb	r2, [r3, #0]
  char str2[] = "abcdefghij";
     abc:	4a11      	ldr	r2, [pc, #68]	; (b04 <TestMemCpy()+0x60>)
     abe:	463b      	mov	r3, r7
     ac0:	ca07      	ldmia	r2, {r0, r1, r2}
     ac2:	c303      	stmia	r3!, {r0, r1}
     ac4:	801a      	strh	r2, [r3, #0]
     ac6:	3302      	adds	r3, #2
     ac8:	0c12      	lsrs	r2, r2, #16
     aca:	701a      	strb	r2, [r3, #0]
  memcpy(str1, str2, 3);
     acc:	4639      	mov	r1, r7
     ace:	f107 030c 	add.w	r3, r7, #12
     ad2:	2203      	movs	r2, #3
     ad4:	4618      	mov	r0, r3
     ad6:	f00b fe67 	bl	c7a8 <memcpy>
  assert(strcmp(str1, "abc4567890") == 0);
     ada:	f107 030c 	add.w	r3, r7, #12
     ade:	490a      	ldr	r1, [pc, #40]	; (b08 <TestMemCpy()+0x64>)
     ae0:	4618      	mov	r0, r3
     ae2:	f00c fc49 	bl	d378 <strcmp>
     ae6:	4603      	mov	r3, r0
     ae8:	2b00      	cmp	r3, #0
     aea:	d005      	beq.n	af8 <TestMemCpy()+0x54>
     aec:	4b07      	ldr	r3, [pc, #28]	; (b0c <TestMemCpy()+0x68>)
     aee:	4a08      	ldr	r2, [pc, #32]	; (b10 <TestMemCpy()+0x6c>)
     af0:	2134      	movs	r1, #52	; 0x34
     af2:	4808      	ldr	r0, [pc, #32]	; (b14 <TestMemCpy()+0x70>)
     af4:	f00a ffec 	bl	bad0 <__assert_func>
}
     af8:	bf00      	nop
     afa:	3718      	adds	r7, #24
     afc:	46bd      	mov	sp, r7
     afe:	bd80      	pop	{r7, pc}
     b00:	0001779c 	.word	0x0001779c
     b04:	000177a8 	.word	0x000177a8
     b08:	0001775c 	.word	0x0001775c
     b0c:	00017768 	.word	0x00017768
     b10:	00017788 	.word	0x00017788
     b14:	00017614 	.word	0x00017614

00000b18 <TestMemMove()>:

void TestMemMove() {
     b18:	b580      	push	{r7, lr}
     b1a:	b084      	sub	sp, #16
     b1c:	af00      	add	r7, sp, #0
  char str[] = "1234567890";
     b1e:	4a11      	ldr	r2, [pc, #68]	; (b64 <TestMemMove()+0x4c>)
     b20:	1d3b      	adds	r3, r7, #4
     b22:	ca07      	ldmia	r2, {r0, r1, r2}
     b24:	c303      	stmia	r3!, {r0, r1}
     b26:	801a      	strh	r2, [r3, #0]
     b28:	3302      	adds	r3, #2
     b2a:	0c12      	lsrs	r2, r2, #16
     b2c:	701a      	strb	r2, [r3, #0]
  memmove(str + 4, str + 3, 3); // copies from [4, 5, 6] to [5, 6, 7]
     b2e:	1d3b      	adds	r3, r7, #4
     b30:	3304      	adds	r3, #4
     b32:	1d39      	adds	r1, r7, #4
     b34:	3103      	adds	r1, #3
     b36:	2203      	movs	r2, #3
     b38:	4618      	mov	r0, r3
     b3a:	f00b feab 	bl	c894 <memmove>
  assert(strcmp(str, "1234456890") == 0);
     b3e:	1d3b      	adds	r3, r7, #4
     b40:	4909      	ldr	r1, [pc, #36]	; (b68 <TestMemMove()+0x50>)
     b42:	4618      	mov	r0, r3
     b44:	f00c fc18 	bl	d378 <strcmp>
     b48:	4603      	mov	r3, r0
     b4a:	2b00      	cmp	r3, #0
     b4c:	d005      	beq.n	b5a <TestMemMove()+0x42>
     b4e:	4b07      	ldr	r3, [pc, #28]	; (b6c <TestMemMove()+0x54>)
     b50:	4a07      	ldr	r2, [pc, #28]	; (b70 <TestMemMove()+0x58>)
     b52:	213a      	movs	r1, #58	; 0x3a
     b54:	4807      	ldr	r0, [pc, #28]	; (b74 <TestMemMove()+0x5c>)
     b56:	f00a ffbb 	bl	bad0 <__assert_func>
}
     b5a:	bf00      	nop
     b5c:	3710      	adds	r7, #16
     b5e:	46bd      	mov	sp, r7
     b60:	bd80      	pop	{r7, pc}
     b62:	bf00      	nop
     b64:	0001779c 	.word	0x0001779c
     b68:	000177b4 	.word	0x000177b4
     b6c:	000177c0 	.word	0x000177c0
     b70:	000177e0 	.word	0x000177e0
     b74:	00017614 	.word	0x00017614

00000b78 <TestStdAlgos()>:

void TestStdAlgos() {
     b78:	b580      	push	{r7, lr}
     b7a:	af00      	add	r7, sp, #0
  printf("# Test: Standard algorithmns\n");
     b7c:	4806      	ldr	r0, [pc, #24]	; (b98 <TestStdAlgos()+0x20>)
     b7e:	f00c f84d 	bl	cc1c <puts>
  TestStrlen();
     b82:	f7ff fefd 	bl	980 <TestStrlen()>
  TestStrcmp();
     b86:	f7ff ff4d 	bl	a24 <TestStrcmp()>
  TestMemMove();
     b8a:	f7ff ffc5 	bl	b18 <TestMemMove()>
  TestMemCpy();
     b8e:	f7ff ff89 	bl	aa4 <TestMemCpy()>
     b92:	bf00      	nop
     b94:	bd80      	pop	{r7, pc}
     b96:	bf00      	nop
     b98:	000177f4 	.word	0x000177f4

00000b9c <TestIntCalc()>:
#include "test_int_calc.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

void TestIntCalc() {
     b9c:	b580      	push	{r7, lr}
     b9e:	b084      	sub	sp, #16
     ba0:	af00      	add	r7, sp, #0
  printf("# Test: Simple calculations with signed integers\n");
     ba2:	4893      	ldr	r0, [pc, #588]	; (df0 <TestIntCalc()+0x254>)
     ba4:	f00c f83a 	bl	cc1c <puts>
  // -----------------------------
  // 8-bit
  // -----------------------------
  volatile int8_t accu8 = 50;
     ba8:	2332      	movs	r3, #50	; 0x32
     baa:	73fb      	strb	r3, [r7, #15]

  accu8 += 52;
     bac:	7bfb      	ldrb	r3, [r7, #15]
     bae:	b25b      	sxtb	r3, r3
     bb0:	b2db      	uxtb	r3, r3
     bb2:	3334      	adds	r3, #52	; 0x34
     bb4:	b2db      	uxtb	r3, r3
     bb6:	b25b      	sxtb	r3, r3
     bb8:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 102);
     bba:	7bfb      	ldrb	r3, [r7, #15]
     bbc:	b25b      	sxtb	r3, r3
     bbe:	2b66      	cmp	r3, #102	; 0x66
     bc0:	d005      	beq.n	bce <TestIntCalc()+0x32>
     bc2:	4b8c      	ldr	r3, [pc, #560]	; (df4 <TestIntCalc()+0x258>)
     bc4:	4a8c      	ldr	r2, [pc, #560]	; (df8 <TestIntCalc()+0x25c>)
     bc6:	210e      	movs	r1, #14
     bc8:	488c      	ldr	r0, [pc, #560]	; (dfc <TestIntCalc()+0x260>)
     bca:	f00a ff81 	bl	bad0 <__assert_func>

  accu8 = accu8 - 138;
     bce:	7bfb      	ldrb	r3, [r7, #15]
     bd0:	b25b      	sxtb	r3, r3
     bd2:	b2db      	uxtb	r3, r3
     bd4:	3376      	adds	r3, #118	; 0x76
     bd6:	b2db      	uxtb	r3, r3
     bd8:	b25b      	sxtb	r3, r3
     bda:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == -36);
     bdc:	7bfb      	ldrb	r3, [r7, #15]
     bde:	b25b      	sxtb	r3, r3
     be0:	f113 0f24 	cmn.w	r3, #36	; 0x24
     be4:	d005      	beq.n	bf2 <TestIntCalc()+0x56>
     be6:	4b86      	ldr	r3, [pc, #536]	; (e00 <TestIntCalc()+0x264>)
     be8:	4a83      	ldr	r2, [pc, #524]	; (df8 <TestIntCalc()+0x25c>)
     bea:	2111      	movs	r1, #17
     bec:	4883      	ldr	r0, [pc, #524]	; (dfc <TestIntCalc()+0x260>)
     bee:	f00a ff6f 	bl	bad0 <__assert_func>

  accu8 *= 3;
     bf2:	7bfb      	ldrb	r3, [r7, #15]
     bf4:	b25b      	sxtb	r3, r3
     bf6:	b2db      	uxtb	r3, r3
     bf8:	461a      	mov	r2, r3
     bfa:	0052      	lsls	r2, r2, #1
     bfc:	4413      	add	r3, r2
     bfe:	b2db      	uxtb	r3, r3
     c00:	b25b      	sxtb	r3, r3
     c02:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == -108);
     c04:	7bfb      	ldrb	r3, [r7, #15]
     c06:	b25b      	sxtb	r3, r3
     c08:	f113 0f6c 	cmn.w	r3, #108	; 0x6c
     c0c:	d005      	beq.n	c1a <TestIntCalc()+0x7e>
     c0e:	4b7d      	ldr	r3, [pc, #500]	; (e04 <TestIntCalc()+0x268>)
     c10:	4a79      	ldr	r2, [pc, #484]	; (df8 <TestIntCalc()+0x25c>)
     c12:	2114      	movs	r1, #20
     c14:	4879      	ldr	r0, [pc, #484]	; (dfc <TestIntCalc()+0x260>)
     c16:	f00a ff5b 	bl	bad0 <__assert_func>

  accu8 -= 12;
     c1a:	7bfb      	ldrb	r3, [r7, #15]
     c1c:	b25b      	sxtb	r3, r3
     c1e:	b2db      	uxtb	r3, r3
     c20:	3b0c      	subs	r3, #12
     c22:	b2db      	uxtb	r3, r3
     c24:	b25b      	sxtb	r3, r3
     c26:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == -120);
     c28:	7bfb      	ldrb	r3, [r7, #15]
     c2a:	b25b      	sxtb	r3, r3
     c2c:	f113 0f78 	cmn.w	r3, #120	; 0x78
     c30:	d005      	beq.n	c3e <TestIntCalc()+0xa2>
     c32:	4b75      	ldr	r3, [pc, #468]	; (e08 <TestIntCalc()+0x26c>)
     c34:	4a70      	ldr	r2, [pc, #448]	; (df8 <TestIntCalc()+0x25c>)
     c36:	2117      	movs	r1, #23
     c38:	4870      	ldr	r0, [pc, #448]	; (dfc <TestIntCalc()+0x260>)
     c3a:	f00a ff49 	bl	bad0 <__assert_func>

  accu8 /= -12;
     c3e:	7bfb      	ldrb	r3, [r7, #15]
     c40:	b25b      	sxtb	r3, r3
     c42:	4a72      	ldr	r2, [pc, #456]	; (e0c <TestIntCalc()+0x270>)
     c44:	fb82 1203 	smull	r1, r2, r2, r3
     c48:	1052      	asrs	r2, r2, #1
     c4a:	17db      	asrs	r3, r3, #31
     c4c:	1a9b      	subs	r3, r3, r2
     c4e:	b25b      	sxtb	r3, r3
     c50:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 10);
     c52:	7bfb      	ldrb	r3, [r7, #15]
     c54:	b25b      	sxtb	r3, r3
     c56:	2b0a      	cmp	r3, #10
     c58:	d005      	beq.n	c66 <TestIntCalc()+0xca>
     c5a:	4b6d      	ldr	r3, [pc, #436]	; (e10 <TestIntCalc()+0x274>)
     c5c:	4a66      	ldr	r2, [pc, #408]	; (df8 <TestIntCalc()+0x25c>)
     c5e:	211a      	movs	r1, #26
     c60:	4866      	ldr	r0, [pc, #408]	; (dfc <TestIntCalc()+0x260>)
     c62:	f00a ff35 	bl	bad0 <__assert_func>

  // overflow tests
  accu8 = -128;
     c66:	2380      	movs	r3, #128	; 0x80
     c68:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 - 10;
     c6a:	7bfb      	ldrb	r3, [r7, #15]
     c6c:	b25b      	sxtb	r3, r3
     c6e:	b2db      	uxtb	r3, r3
     c70:	3b0a      	subs	r3, #10
     c72:	b2db      	uxtb	r3, r3
     c74:	b25b      	sxtb	r3, r3
     c76:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 118);
     c78:	7bfb      	ldrb	r3, [r7, #15]
     c7a:	b25b      	sxtb	r3, r3
     c7c:	2b76      	cmp	r3, #118	; 0x76
     c7e:	d005      	beq.n	c8c <TestIntCalc()+0xf0>
     c80:	4b64      	ldr	r3, [pc, #400]	; (e14 <TestIntCalc()+0x278>)
     c82:	4a5d      	ldr	r2, [pc, #372]	; (df8 <TestIntCalc()+0x25c>)
     c84:	211f      	movs	r1, #31
     c86:	485d      	ldr	r0, [pc, #372]	; (dfc <TestIntCalc()+0x260>)
     c88:	f00a ff22 	bl	bad0 <__assert_func>

  // accumulate tests
  accu8 = 1u;
     c8c:	2301      	movs	r3, #1
     c8e:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 2
     c90:	7bfb      	ldrb	r3, [r7, #15]
     c92:	b25b      	sxtb	r3, r3
     c94:	b2db      	uxtb	r3, r3
     c96:	7bfa      	ldrb	r2, [r7, #15]
     c98:	b252      	sxtb	r2, r2
     c9a:	b2d2      	uxtb	r2, r2
     c9c:	fb02 f303 	mul.w	r3, r2, r3
     ca0:	b2da      	uxtb	r2, r3
     ca2:	7bfb      	ldrb	r3, [r7, #15]
     ca4:	b25b      	sxtb	r3, r3
     ca6:	b2db      	uxtb	r3, r3
     ca8:	4413      	add	r3, r2
     caa:	b2db      	uxtb	r3, r3
     cac:	b25b      	sxtb	r3, r3
     cae:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 6
     cb0:	7bfb      	ldrb	r3, [r7, #15]
     cb2:	b25b      	sxtb	r3, r3
     cb4:	b2db      	uxtb	r3, r3
     cb6:	7bfa      	ldrb	r2, [r7, #15]
     cb8:	b252      	sxtb	r2, r2
     cba:	b2d2      	uxtb	r2, r2
     cbc:	fb02 f303 	mul.w	r3, r2, r3
     cc0:	b2da      	uxtb	r2, r3
     cc2:	7bfb      	ldrb	r3, [r7, #15]
     cc4:	b25b      	sxtb	r3, r3
     cc6:	b2db      	uxtb	r3, r3
     cc8:	4413      	add	r3, r2
     cca:	b2db      	uxtb	r3, r3
     ccc:	b25b      	sxtb	r3, r3
     cce:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 42
     cd0:	7bfb      	ldrb	r3, [r7, #15]
     cd2:	b25b      	sxtb	r3, r3
     cd4:	b2db      	uxtb	r3, r3
     cd6:	7bfa      	ldrb	r2, [r7, #15]
     cd8:	b252      	sxtb	r2, r2
     cda:	b2d2      	uxtb	r2, r2
     cdc:	fb02 f303 	mul.w	r3, r2, r3
     ce0:	b2da      	uxtb	r2, r3
     ce2:	7bfb      	ldrb	r3, [r7, #15]
     ce4:	b25b      	sxtb	r3, r3
     ce6:	b2db      	uxtb	r3, r3
     ce8:	4413      	add	r3, r2
     cea:	b2db      	uxtb	r3, r3
     cec:	b25b      	sxtb	r3, r3
     cee:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 42u);
     cf0:	7bfb      	ldrb	r3, [r7, #15]
     cf2:	b25b      	sxtb	r3, r3
     cf4:	2b2a      	cmp	r3, #42	; 0x2a
     cf6:	d005      	beq.n	d04 <TestIntCalc()+0x168>
     cf8:	4b47      	ldr	r3, [pc, #284]	; (e18 <TestIntCalc()+0x27c>)
     cfa:	4a3f      	ldr	r2, [pc, #252]	; (df8 <TestIntCalc()+0x25c>)
     cfc:	2126      	movs	r1, #38	; 0x26
     cfe:	483f      	ldr	r0, [pc, #252]	; (dfc <TestIntCalc()+0x260>)
     d00:	f00a fee6 	bl	bad0 <__assert_func>

  // -----------------------------
  // 16-bit
  // -----------------------------
  volatile int16_t accu16 = 50;
     d04:	2332      	movs	r3, #50	; 0x32
     d06:	81bb      	strh	r3, [r7, #12]

  accu16 += 52;
     d08:	89bb      	ldrh	r3, [r7, #12]
     d0a:	b21b      	sxth	r3, r3
     d0c:	b29b      	uxth	r3, r3
     d0e:	3334      	adds	r3, #52	; 0x34
     d10:	b29b      	uxth	r3, r3
     d12:	b21b      	sxth	r3, r3
     d14:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 102);
     d16:	89bb      	ldrh	r3, [r7, #12]
     d18:	b21b      	sxth	r3, r3
     d1a:	2b66      	cmp	r3, #102	; 0x66
     d1c:	d005      	beq.n	d2a <TestIntCalc()+0x18e>
     d1e:	4b3f      	ldr	r3, [pc, #252]	; (e1c <TestIntCalc()+0x280>)
     d20:	4a35      	ldr	r2, [pc, #212]	; (df8 <TestIntCalc()+0x25c>)
     d22:	212e      	movs	r1, #46	; 0x2e
     d24:	4835      	ldr	r0, [pc, #212]	; (dfc <TestIntCalc()+0x260>)
     d26:	f00a fed3 	bl	bad0 <__assert_func>

  accu16 = accu16 - 138;
     d2a:	89bb      	ldrh	r3, [r7, #12]
     d2c:	b21b      	sxth	r3, r3
     d2e:	b29b      	uxth	r3, r3
     d30:	3b8a      	subs	r3, #138	; 0x8a
     d32:	b29b      	uxth	r3, r3
     d34:	b21b      	sxth	r3, r3
     d36:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == -36);
     d38:	89bb      	ldrh	r3, [r7, #12]
     d3a:	b21b      	sxth	r3, r3
     d3c:	f113 0f24 	cmn.w	r3, #36	; 0x24
     d40:	d005      	beq.n	d4e <TestIntCalc()+0x1b2>
     d42:	4b37      	ldr	r3, [pc, #220]	; (e20 <TestIntCalc()+0x284>)
     d44:	4a2c      	ldr	r2, [pc, #176]	; (df8 <TestIntCalc()+0x25c>)
     d46:	2131      	movs	r1, #49	; 0x31
     d48:	482c      	ldr	r0, [pc, #176]	; (dfc <TestIntCalc()+0x260>)
     d4a:	f00a fec1 	bl	bad0 <__assert_func>

  accu16 *= 3;
     d4e:	89bb      	ldrh	r3, [r7, #12]
     d50:	b21b      	sxth	r3, r3
     d52:	b29b      	uxth	r3, r3
     d54:	461a      	mov	r2, r3
     d56:	0052      	lsls	r2, r2, #1
     d58:	4413      	add	r3, r2
     d5a:	b29b      	uxth	r3, r3
     d5c:	b21b      	sxth	r3, r3
     d5e:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == -108);
     d60:	89bb      	ldrh	r3, [r7, #12]
     d62:	b21b      	sxth	r3, r3
     d64:	f113 0f6c 	cmn.w	r3, #108	; 0x6c
     d68:	d005      	beq.n	d76 <TestIntCalc()+0x1da>
     d6a:	4b2e      	ldr	r3, [pc, #184]	; (e24 <TestIntCalc()+0x288>)
     d6c:	4a22      	ldr	r2, [pc, #136]	; (df8 <TestIntCalc()+0x25c>)
     d6e:	2134      	movs	r1, #52	; 0x34
     d70:	4822      	ldr	r0, [pc, #136]	; (dfc <TestIntCalc()+0x260>)
     d72:	f00a fead 	bl	bad0 <__assert_func>

  accu16 -= 12;
     d76:	89bb      	ldrh	r3, [r7, #12]
     d78:	b21b      	sxth	r3, r3
     d7a:	b29b      	uxth	r3, r3
     d7c:	3b0c      	subs	r3, #12
     d7e:	b29b      	uxth	r3, r3
     d80:	b21b      	sxth	r3, r3
     d82:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == -120);
     d84:	89bb      	ldrh	r3, [r7, #12]
     d86:	b21b      	sxth	r3, r3
     d88:	f113 0f78 	cmn.w	r3, #120	; 0x78
     d8c:	d005      	beq.n	d9a <TestIntCalc()+0x1fe>
     d8e:	4b26      	ldr	r3, [pc, #152]	; (e28 <TestIntCalc()+0x28c>)
     d90:	4a19      	ldr	r2, [pc, #100]	; (df8 <TestIntCalc()+0x25c>)
     d92:	2137      	movs	r1, #55	; 0x37
     d94:	4819      	ldr	r0, [pc, #100]	; (dfc <TestIntCalc()+0x260>)
     d96:	f00a fe9b 	bl	bad0 <__assert_func>

  accu16 /= -12;
     d9a:	89bb      	ldrh	r3, [r7, #12]
     d9c:	b21b      	sxth	r3, r3
     d9e:	4a1b      	ldr	r2, [pc, #108]	; (e0c <TestIntCalc()+0x270>)
     da0:	fb82 1203 	smull	r1, r2, r2, r3
     da4:	1052      	asrs	r2, r2, #1
     da6:	17db      	asrs	r3, r3, #31
     da8:	1a9b      	subs	r3, r3, r2
     daa:	b21b      	sxth	r3, r3
     dac:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 10);
     dae:	89bb      	ldrh	r3, [r7, #12]
     db0:	b21b      	sxth	r3, r3
     db2:	2b0a      	cmp	r3, #10
     db4:	d005      	beq.n	dc2 <TestIntCalc()+0x226>
     db6:	4b1d      	ldr	r3, [pc, #116]	; (e2c <TestIntCalc()+0x290>)
     db8:	4a0f      	ldr	r2, [pc, #60]	; (df8 <TestIntCalc()+0x25c>)
     dba:	213a      	movs	r1, #58	; 0x3a
     dbc:	480f      	ldr	r0, [pc, #60]	; (dfc <TestIntCalc()+0x260>)
     dbe:	f00a fe87 	bl	bad0 <__assert_func>

  // overlfow tests
  accu16 = -32768;
     dc2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
     dc6:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 - 10;
     dc8:	89bb      	ldrh	r3, [r7, #12]
     dca:	b21b      	sxth	r3, r3
     dcc:	b29b      	uxth	r3, r3
     dce:	3b0a      	subs	r3, #10
     dd0:	b29b      	uxth	r3, r3
     dd2:	b21b      	sxth	r3, r3
     dd4:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 32758);
     dd6:	89bb      	ldrh	r3, [r7, #12]
     dd8:	b21b      	sxth	r3, r3
     dda:	f647 72f6 	movw	r2, #32758	; 0x7ff6
     dde:	4293      	cmp	r3, r2
     de0:	d028      	beq.n	e34 <TestIntCalc()+0x298>
     de2:	4b13      	ldr	r3, [pc, #76]	; (e30 <TestIntCalc()+0x294>)
     de4:	4a04      	ldr	r2, [pc, #16]	; (df8 <TestIntCalc()+0x25c>)
     de6:	213f      	movs	r1, #63	; 0x3f
     de8:	4804      	ldr	r0, [pc, #16]	; (dfc <TestIntCalc()+0x260>)
     dea:	f00a fe71 	bl	bad0 <__assert_func>
     dee:	bf00      	nop
     df0:	00017814 	.word	0x00017814
     df4:	00017848 	.word	0x00017848
     df8:	00017858 	.word	0x00017858
     dfc:	0001786c 	.word	0x0001786c
     e00:	000178b4 	.word	0x000178b4
     e04:	000178c4 	.word	0x000178c4
     e08:	000178d4 	.word	0x000178d4
     e0c:	2aaaaaab 	.word	0x2aaaaaab
     e10:	000178e4 	.word	0x000178e4
     e14:	000178f0 	.word	0x000178f0
     e18:	00017900 	.word	0x00017900
     e1c:	00017910 	.word	0x00017910
     e20:	00017920 	.word	0x00017920
     e24:	00017930 	.word	0x00017930
     e28:	00017940 	.word	0x00017940
     e2c:	00017950 	.word	0x00017950
     e30:	00017960 	.word	0x00017960

  // accumulate tests
  accu16 = 1u;
     e34:	2301      	movs	r3, #1
     e36:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 2
     e38:	89bb      	ldrh	r3, [r7, #12]
     e3a:	b21b      	sxth	r3, r3
     e3c:	b29b      	uxth	r3, r3
     e3e:	89ba      	ldrh	r2, [r7, #12]
     e40:	b212      	sxth	r2, r2
     e42:	b292      	uxth	r2, r2
     e44:	fb02 f303 	mul.w	r3, r2, r3
     e48:	b29a      	uxth	r2, r3
     e4a:	89bb      	ldrh	r3, [r7, #12]
     e4c:	b21b      	sxth	r3, r3
     e4e:	b29b      	uxth	r3, r3
     e50:	4413      	add	r3, r2
     e52:	b29b      	uxth	r3, r3
     e54:	b21b      	sxth	r3, r3
     e56:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 6
     e58:	89bb      	ldrh	r3, [r7, #12]
     e5a:	b21b      	sxth	r3, r3
     e5c:	b29b      	uxth	r3, r3
     e5e:	89ba      	ldrh	r2, [r7, #12]
     e60:	b212      	sxth	r2, r2
     e62:	b292      	uxth	r2, r2
     e64:	fb02 f303 	mul.w	r3, r2, r3
     e68:	b29a      	uxth	r2, r3
     e6a:	89bb      	ldrh	r3, [r7, #12]
     e6c:	b21b      	sxth	r3, r3
     e6e:	b29b      	uxth	r3, r3
     e70:	4413      	add	r3, r2
     e72:	b29b      	uxth	r3, r3
     e74:	b21b      	sxth	r3, r3
     e76:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 42
     e78:	89bb      	ldrh	r3, [r7, #12]
     e7a:	b21b      	sxth	r3, r3
     e7c:	b29b      	uxth	r3, r3
     e7e:	89ba      	ldrh	r2, [r7, #12]
     e80:	b212      	sxth	r2, r2
     e82:	b292      	uxth	r2, r2
     e84:	fb02 f303 	mul.w	r3, r2, r3
     e88:	b29a      	uxth	r2, r3
     e8a:	89bb      	ldrh	r3, [r7, #12]
     e8c:	b21b      	sxth	r3, r3
     e8e:	b29b      	uxth	r3, r3
     e90:	4413      	add	r3, r2
     e92:	b29b      	uxth	r3, r3
     e94:	b21b      	sxth	r3, r3
     e96:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 42u);
     e98:	89bb      	ldrh	r3, [r7, #12]
     e9a:	b21b      	sxth	r3, r3
     e9c:	2b2a      	cmp	r3, #42	; 0x2a
     e9e:	d005      	beq.n	eac <TestIntCalc()+0x310>
     ea0:	4b54      	ldr	r3, [pc, #336]	; (ff4 <TestIntCalc()+0x458>)
     ea2:	4a55      	ldr	r2, [pc, #340]	; (ff8 <TestIntCalc()+0x45c>)
     ea4:	2146      	movs	r1, #70	; 0x46
     ea6:	4855      	ldr	r0, [pc, #340]	; (ffc <TestIntCalc()+0x460>)
     ea8:	f00a fe12 	bl	bad0 <__assert_func>

  // -----------------------------
  // 32-bit
  // -----------------------------
  volatile int32_t accu32 = 50;
     eac:	2332      	movs	r3, #50	; 0x32
     eae:	60bb      	str	r3, [r7, #8]

  accu32 += 52;
     eb0:	68bb      	ldr	r3, [r7, #8]
     eb2:	3334      	adds	r3, #52	; 0x34
     eb4:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 102);
     eb6:	68bb      	ldr	r3, [r7, #8]
     eb8:	2b66      	cmp	r3, #102	; 0x66
     eba:	d005      	beq.n	ec8 <TestIntCalc()+0x32c>
     ebc:	4b50      	ldr	r3, [pc, #320]	; (1000 <Heap_Size>)
     ebe:	4a4e      	ldr	r2, [pc, #312]	; (ff8 <TestIntCalc()+0x45c>)
     ec0:	214e      	movs	r1, #78	; 0x4e
     ec2:	484e      	ldr	r0, [pc, #312]	; (ffc <TestIntCalc()+0x460>)
     ec4:	f00a fe04 	bl	bad0 <__assert_func>

  accu32 = accu32 - 138;
     ec8:	68bb      	ldr	r3, [r7, #8]
     eca:	3b8a      	subs	r3, #138	; 0x8a
     ecc:	60bb      	str	r3, [r7, #8]
  assert(accu32 == -36);
     ece:	68bb      	ldr	r3, [r7, #8]
     ed0:	f113 0f24 	cmn.w	r3, #36	; 0x24
     ed4:	d005      	beq.n	ee2 <TestIntCalc()+0x346>
     ed6:	4b4b      	ldr	r3, [pc, #300]	; (1004 <Heap_Size+0x4>)
     ed8:	4a47      	ldr	r2, [pc, #284]	; (ff8 <TestIntCalc()+0x45c>)
     eda:	2151      	movs	r1, #81	; 0x51
     edc:	4847      	ldr	r0, [pc, #284]	; (ffc <TestIntCalc()+0x460>)
     ede:	f00a fdf7 	bl	bad0 <__assert_func>

  accu32 *= 3;
     ee2:	68ba      	ldr	r2, [r7, #8]
     ee4:	4613      	mov	r3, r2
     ee6:	005b      	lsls	r3, r3, #1
     ee8:	4413      	add	r3, r2
     eea:	60bb      	str	r3, [r7, #8]
  assert(accu32 == -108);
     eec:	68bb      	ldr	r3, [r7, #8]
     eee:	f113 0f6c 	cmn.w	r3, #108	; 0x6c
     ef2:	d005      	beq.n	f00 <TestIntCalc()+0x364>
     ef4:	4b44      	ldr	r3, [pc, #272]	; (1008 <Heap_Size+0x8>)
     ef6:	4a40      	ldr	r2, [pc, #256]	; (ff8 <TestIntCalc()+0x45c>)
     ef8:	2154      	movs	r1, #84	; 0x54
     efa:	4840      	ldr	r0, [pc, #256]	; (ffc <TestIntCalc()+0x460>)
     efc:	f00a fde8 	bl	bad0 <__assert_func>

  accu32 -= 12;
     f00:	68bb      	ldr	r3, [r7, #8]
     f02:	3b0c      	subs	r3, #12
     f04:	60bb      	str	r3, [r7, #8]
  assert(accu32 == -120);
     f06:	68bb      	ldr	r3, [r7, #8]
     f08:	f113 0f78 	cmn.w	r3, #120	; 0x78
     f0c:	d005      	beq.n	f1a <TestIntCalc()+0x37e>
     f0e:	4b3f      	ldr	r3, [pc, #252]	; (100c <Heap_Size+0xc>)
     f10:	4a39      	ldr	r2, [pc, #228]	; (ff8 <TestIntCalc()+0x45c>)
     f12:	2157      	movs	r1, #87	; 0x57
     f14:	4839      	ldr	r0, [pc, #228]	; (ffc <TestIntCalc()+0x460>)
     f16:	f00a fddb 	bl	bad0 <__assert_func>

  accu32 /= -12;
     f1a:	68bb      	ldr	r3, [r7, #8]
     f1c:	4a3c      	ldr	r2, [pc, #240]	; (1010 <Heap_Size+0x10>)
     f1e:	fb82 1203 	smull	r1, r2, r2, r3
     f22:	1052      	asrs	r2, r2, #1
     f24:	17db      	asrs	r3, r3, #31
     f26:	1a9b      	subs	r3, r3, r2
     f28:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 10);
     f2a:	68bb      	ldr	r3, [r7, #8]
     f2c:	2b0a      	cmp	r3, #10
     f2e:	d005      	beq.n	f3c <TestIntCalc()+0x3a0>
     f30:	4b38      	ldr	r3, [pc, #224]	; (1014 <Heap_Size+0x14>)
     f32:	4a31      	ldr	r2, [pc, #196]	; (ff8 <TestIntCalc()+0x45c>)
     f34:	215a      	movs	r1, #90	; 0x5a
     f36:	4831      	ldr	r0, [pc, #196]	; (ffc <TestIntCalc()+0x460>)
     f38:	f00a fdca 	bl	bad0 <__assert_func>

  // overflow tests
  accu32 = -2147483648;
     f3c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
     f40:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 - 10;
     f42:	68bb      	ldr	r3, [r7, #8]
     f44:	3b0a      	subs	r3, #10
     f46:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 2147483638);
     f48:	68bb      	ldr	r3, [r7, #8]
     f4a:	4a33      	ldr	r2, [pc, #204]	; (1018 <Heap_Size+0x18>)
     f4c:	4293      	cmp	r3, r2
     f4e:	d005      	beq.n	f5c <TestIntCalc()+0x3c0>
     f50:	4b32      	ldr	r3, [pc, #200]	; (101c <Heap_Size+0x1c>)
     f52:	4a29      	ldr	r2, [pc, #164]	; (ff8 <TestIntCalc()+0x45c>)
     f54:	215f      	movs	r1, #95	; 0x5f
     f56:	4829      	ldr	r0, [pc, #164]	; (ffc <TestIntCalc()+0x460>)
     f58:	f00a fdba 	bl	bad0 <__assert_func>

  // accumulate tests
  accu32 = 1u;
     f5c:	2301      	movs	r3, #1
     f5e:	60bb      	str	r3, [r7, #8]

  accu32 = accu32 * accu32 + accu32; // 2
     f60:	68bb      	ldr	r3, [r7, #8]
     f62:	68ba      	ldr	r2, [r7, #8]
     f64:	fb03 f202 	mul.w	r2, r3, r2
     f68:	68bb      	ldr	r3, [r7, #8]
     f6a:	4413      	add	r3, r2
     f6c:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 6
     f6e:	68bb      	ldr	r3, [r7, #8]
     f70:	68ba      	ldr	r2, [r7, #8]
     f72:	fb03 f202 	mul.w	r2, r3, r2
     f76:	68bb      	ldr	r3, [r7, #8]
     f78:	4413      	add	r3, r2
     f7a:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 42
     f7c:	68bb      	ldr	r3, [r7, #8]
     f7e:	68ba      	ldr	r2, [r7, #8]
     f80:	fb03 f202 	mul.w	r2, r3, r2
     f84:	68bb      	ldr	r3, [r7, #8]
     f86:	4413      	add	r3, r2
     f88:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 42u);
     f8a:	68bb      	ldr	r3, [r7, #8]
     f8c:	2b2a      	cmp	r3, #42	; 0x2a
     f8e:	d005      	beq.n	f9c <TestIntCalc()+0x400>
     f90:	4b23      	ldr	r3, [pc, #140]	; (1020 <Heap_Size+0x20>)
     f92:	4a19      	ldr	r2, [pc, #100]	; (ff8 <TestIntCalc()+0x45c>)
     f94:	2167      	movs	r1, #103	; 0x67
     f96:	4819      	ldr	r0, [pc, #100]	; (ffc <TestIntCalc()+0x460>)
     f98:	f00a fd9a 	bl	bad0 <__assert_func>

  // -----------------------------
  // 32-bit Modulo Tests
  // -----------------------------

  volatile int32_t a = 0x80000000;
     f9c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
     fa0:	607b      	str	r3, [r7, #4]
  volatile int32_t b = 0x80000000;
     fa2:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
     fa6:	603b      	str	r3, [r7, #0]

  assert((a % b) == 0);
     fa8:	687b      	ldr	r3, [r7, #4]
     faa:	683a      	ldr	r2, [r7, #0]
     fac:	fb93 f1f2 	sdiv	r1, r3, r2
     fb0:	fb01 f202 	mul.w	r2, r1, r2
     fb4:	1a9b      	subs	r3, r3, r2
     fb6:	2b00      	cmp	r3, #0
     fb8:	d005      	beq.n	fc6 <TestIntCalc()+0x42a>
     fba:	4b1a      	ldr	r3, [pc, #104]	; (1024 <Heap_Size+0x24>)
     fbc:	4a0e      	ldr	r2, [pc, #56]	; (ff8 <TestIntCalc()+0x45c>)
     fbe:	2170      	movs	r1, #112	; 0x70
     fc0:	480e      	ldr	r0, [pc, #56]	; (ffc <TestIntCalc()+0x460>)
     fc2:	f00a fd85 	bl	bad0 <__assert_func>

  a += 1u;
     fc6:	687b      	ldr	r3, [r7, #4]
     fc8:	3301      	adds	r3, #1
     fca:	607b      	str	r3, [r7, #4]
  assert((a % b) == 0x80000001); // signed divison result
     fcc:	687b      	ldr	r3, [r7, #4]
     fce:	683a      	ldr	r2, [r7, #0]
     fd0:	fb93 f1f2 	sdiv	r1, r3, r2
     fd4:	fb01 f202 	mul.w	r2, r1, r2
     fd8:	1a9b      	subs	r3, r3, r2
     fda:	4a13      	ldr	r2, [pc, #76]	; (1028 <Heap_Size+0x28>)
     fdc:	4293      	cmp	r3, r2
     fde:	d005      	beq.n	fec <TestIntCalc()+0x450>
     fe0:	4b12      	ldr	r3, [pc, #72]	; (102c <Heap_Size+0x2c>)
     fe2:	4a05      	ldr	r2, [pc, #20]	; (ff8 <TestIntCalc()+0x45c>)
     fe4:	2173      	movs	r1, #115	; 0x73
     fe6:	4805      	ldr	r0, [pc, #20]	; (ffc <TestIntCalc()+0x460>)
     fe8:	f00a fd72 	bl	bad0 <__assert_func>
     fec:	bf00      	nop
     fee:	3710      	adds	r7, #16
     ff0:	46bd      	mov	sp, r7
     ff2:	bd80      	pop	{r7, pc}
     ff4:	00017970 	.word	0x00017970
     ff8:	00017858 	.word	0x00017858
     ffc:	0001786c 	.word	0x0001786c
    1000:	00017980 	.word	0x00017980
    1004:	00017990 	.word	0x00017990
    1008:	000179a0 	.word	0x000179a0
    100c:	000179b0 	.word	0x000179b0
    1010:	2aaaaaab 	.word	0x2aaaaaab
    1014:	000179c0 	.word	0x000179c0
    1018:	7ffffff6 	.word	0x7ffffff6
    101c:	000179d0 	.word	0x000179d0
    1020:	000179e8 	.word	0x000179e8
    1024:	000179f8 	.word	0x000179f8
    1028:	80000001 	.word	0x80000001
    102c:	00017a08 	.word	0x00017a08

00001030 <TestUIntCalc()>:
#include "test_uint_calc.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

void TestUIntCalc() {
    1030:	b580      	push	{r7, lr}
    1032:	b084      	sub	sp, #16
    1034:	af00      	add	r7, sp, #0
  printf("# Test: Simple calculations with unsigned integers\n");
    1036:	4893      	ldr	r0, [pc, #588]	; (1284 <TestUIntCalc()+0x254>)
    1038:	f00b fdf0 	bl	cc1c <puts>
  // -----------------------------
  // 8-bit
  // -----------------------------
  volatile uint8_t accu8 = 123u;
    103c:	237b      	movs	r3, #123	; 0x7b
    103e:	73fb      	strb	r3, [r7, #15]

  accu8 += 123u;
    1040:	7bfb      	ldrb	r3, [r7, #15]
    1042:	b2db      	uxtb	r3, r3
    1044:	337b      	adds	r3, #123	; 0x7b
    1046:	b2db      	uxtb	r3, r3
    1048:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 246u);
    104a:	7bfb      	ldrb	r3, [r7, #15]
    104c:	b2db      	uxtb	r3, r3
    104e:	2bf6      	cmp	r3, #246	; 0xf6
    1050:	d005      	beq.n	105e <TestUIntCalc()+0x2e>
    1052:	4b8d      	ldr	r3, [pc, #564]	; (1288 <TestUIntCalc()+0x258>)
    1054:	4a8d      	ldr	r2, [pc, #564]	; (128c <TestUIntCalc()+0x25c>)
    1056:	210e      	movs	r1, #14
    1058:	488d      	ldr	r0, [pc, #564]	; (1290 <TestUIntCalc()+0x260>)
    105a:	f00a fd39 	bl	bad0 <__assert_func>

  accu8 = accu8 - 238u;
    105e:	7bfb      	ldrb	r3, [r7, #15]
    1060:	b2db      	uxtb	r3, r3
    1062:	3312      	adds	r3, #18
    1064:	b2db      	uxtb	r3, r3
    1066:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 8u);
    1068:	7bfb      	ldrb	r3, [r7, #15]
    106a:	b2db      	uxtb	r3, r3
    106c:	2b08      	cmp	r3, #8
    106e:	d005      	beq.n	107c <TestUIntCalc()+0x4c>
    1070:	4b88      	ldr	r3, [pc, #544]	; (1294 <TestUIntCalc()+0x264>)
    1072:	4a86      	ldr	r2, [pc, #536]	; (128c <TestUIntCalc()+0x25c>)
    1074:	2111      	movs	r1, #17
    1076:	4886      	ldr	r0, [pc, #536]	; (1290 <TestUIntCalc()+0x260>)
    1078:	f00a fd2a 	bl	bad0 <__assert_func>

  accu8 *= 7u;
    107c:	7bfb      	ldrb	r3, [r7, #15]
    107e:	b2db      	uxtb	r3, r3
    1080:	461a      	mov	r2, r3
    1082:	00d2      	lsls	r2, r2, #3
    1084:	1ad3      	subs	r3, r2, r3
    1086:	b2db      	uxtb	r3, r3
    1088:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 56u);
    108a:	7bfb      	ldrb	r3, [r7, #15]
    108c:	b2db      	uxtb	r3, r3
    108e:	2b38      	cmp	r3, #56	; 0x38
    1090:	d005      	beq.n	109e <TestUIntCalc()+0x6e>
    1092:	4b81      	ldr	r3, [pc, #516]	; (1298 <TestUIntCalc()+0x268>)
    1094:	4a7d      	ldr	r2, [pc, #500]	; (128c <TestUIntCalc()+0x25c>)
    1096:	2114      	movs	r1, #20
    1098:	487d      	ldr	r0, [pc, #500]	; (1290 <TestUIntCalc()+0x260>)
    109a:	f00a fd19 	bl	bad0 <__assert_func>

  accu8 -= 57u;
    109e:	7bfb      	ldrb	r3, [r7, #15]
    10a0:	b2db      	uxtb	r3, r3
    10a2:	3b39      	subs	r3, #57	; 0x39
    10a4:	b2db      	uxtb	r3, r3
    10a6:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 255u);
    10a8:	7bfb      	ldrb	r3, [r7, #15]
    10aa:	b2db      	uxtb	r3, r3
    10ac:	2bff      	cmp	r3, #255	; 0xff
    10ae:	d005      	beq.n	10bc <TestUIntCalc()+0x8c>
    10b0:	4b7a      	ldr	r3, [pc, #488]	; (129c <TestUIntCalc()+0x26c>)
    10b2:	4a76      	ldr	r2, [pc, #472]	; (128c <TestUIntCalc()+0x25c>)
    10b4:	2117      	movs	r1, #23
    10b6:	4876      	ldr	r0, [pc, #472]	; (1290 <TestUIntCalc()+0x260>)
    10b8:	f00a fd0a 	bl	bad0 <__assert_func>

  accu8 /= 25u;
    10bc:	7bfb      	ldrb	r3, [r7, #15]
    10be:	b2db      	uxtb	r3, r3
    10c0:	4a77      	ldr	r2, [pc, #476]	; (12a0 <TestUIntCalc()+0x270>)
    10c2:	fba2 2303 	umull	r2, r3, r2, r3
    10c6:	08db      	lsrs	r3, r3, #3
    10c8:	b2db      	uxtb	r3, r3
    10ca:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 10u);
    10cc:	7bfb      	ldrb	r3, [r7, #15]
    10ce:	b2db      	uxtb	r3, r3
    10d0:	2b0a      	cmp	r3, #10
    10d2:	d005      	beq.n	10e0 <TestUIntCalc()+0xb0>
    10d4:	4b73      	ldr	r3, [pc, #460]	; (12a4 <TestUIntCalc()+0x274>)
    10d6:	4a6d      	ldr	r2, [pc, #436]	; (128c <TestUIntCalc()+0x25c>)
    10d8:	211a      	movs	r1, #26
    10da:	486d      	ldr	r0, [pc, #436]	; (1290 <TestUIntCalc()+0x260>)
    10dc:	f00a fcf8 	bl	bad0 <__assert_func>

  accu8 = 1u + 2u + (3u * 3u - 9u) * 50u;
    10e0:	2303      	movs	r3, #3
    10e2:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 3u);
    10e4:	7bfb      	ldrb	r3, [r7, #15]
    10e6:	b2db      	uxtb	r3, r3
    10e8:	2b03      	cmp	r3, #3
    10ea:	d005      	beq.n	10f8 <TestUIntCalc()+0xc8>
    10ec:	4b6e      	ldr	r3, [pc, #440]	; (12a8 <TestUIntCalc()+0x278>)
    10ee:	4a67      	ldr	r2, [pc, #412]	; (128c <TestUIntCalc()+0x25c>)
    10f0:	211d      	movs	r1, #29
    10f2:	4867      	ldr	r0, [pc, #412]	; (1290 <TestUIntCalc()+0x260>)
    10f4:	f00a fcec 	bl	bad0 <__assert_func>

  // overflow test
  accu8 = 255u;
    10f8:	23ff      	movs	r3, #255	; 0xff
    10fa:	73fb      	strb	r3, [r7, #15]
  accu8 += 1u;
    10fc:	7bfb      	ldrb	r3, [r7, #15]
    10fe:	b2db      	uxtb	r3, r3
    1100:	3301      	adds	r3, #1
    1102:	b2db      	uxtb	r3, r3
    1104:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 0u);
    1106:	7bfb      	ldrb	r3, [r7, #15]
    1108:	b2db      	uxtb	r3, r3
    110a:	2b00      	cmp	r3, #0
    110c:	d005      	beq.n	111a <TestUIntCalc()+0xea>
    110e:	4b67      	ldr	r3, [pc, #412]	; (12ac <TestUIntCalc()+0x27c>)
    1110:	4a5e      	ldr	r2, [pc, #376]	; (128c <TestUIntCalc()+0x25c>)
    1112:	2122      	movs	r1, #34	; 0x22
    1114:	485e      	ldr	r0, [pc, #376]	; (1290 <TestUIntCalc()+0x260>)
    1116:	f00a fcdb 	bl	bad0 <__assert_func>
  accu8 -= 1u;
    111a:	7bfb      	ldrb	r3, [r7, #15]
    111c:	b2db      	uxtb	r3, r3
    111e:	3b01      	subs	r3, #1
    1120:	b2db      	uxtb	r3, r3
    1122:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 255u);
    1124:	7bfb      	ldrb	r3, [r7, #15]
    1126:	b2db      	uxtb	r3, r3
    1128:	2bff      	cmp	r3, #255	; 0xff
    112a:	d005      	beq.n	1138 <TestUIntCalc()+0x108>
    112c:	4b5b      	ldr	r3, [pc, #364]	; (129c <TestUIntCalc()+0x26c>)
    112e:	4a57      	ldr	r2, [pc, #348]	; (128c <TestUIntCalc()+0x25c>)
    1130:	2124      	movs	r1, #36	; 0x24
    1132:	4857      	ldr	r0, [pc, #348]	; (1290 <TestUIntCalc()+0x260>)
    1134:	f00a fccc 	bl	bad0 <__assert_func>

  // accumulate tests
  accu8 = 1u;
    1138:	2301      	movs	r3, #1
    113a:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 2
    113c:	7bfb      	ldrb	r3, [r7, #15]
    113e:	b2db      	uxtb	r3, r3
    1140:	7bfa      	ldrb	r2, [r7, #15]
    1142:	b2d2      	uxtb	r2, r2
    1144:	fb02 f303 	mul.w	r3, r2, r3
    1148:	b2da      	uxtb	r2, r3
    114a:	7bfb      	ldrb	r3, [r7, #15]
    114c:	b2db      	uxtb	r3, r3
    114e:	4413      	add	r3, r2
    1150:	b2db      	uxtb	r3, r3
    1152:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 6
    1154:	7bfb      	ldrb	r3, [r7, #15]
    1156:	b2db      	uxtb	r3, r3
    1158:	7bfa      	ldrb	r2, [r7, #15]
    115a:	b2d2      	uxtb	r2, r2
    115c:	fb02 f303 	mul.w	r3, r2, r3
    1160:	b2da      	uxtb	r2, r3
    1162:	7bfb      	ldrb	r3, [r7, #15]
    1164:	b2db      	uxtb	r3, r3
    1166:	4413      	add	r3, r2
    1168:	b2db      	uxtb	r3, r3
    116a:	73fb      	strb	r3, [r7, #15]
  accu8 = accu8 * accu8 + accu8; // 42
    116c:	7bfb      	ldrb	r3, [r7, #15]
    116e:	b2db      	uxtb	r3, r3
    1170:	7bfa      	ldrb	r2, [r7, #15]
    1172:	b2d2      	uxtb	r2, r2
    1174:	fb02 f303 	mul.w	r3, r2, r3
    1178:	b2da      	uxtb	r2, r3
    117a:	7bfb      	ldrb	r3, [r7, #15]
    117c:	b2db      	uxtb	r3, r3
    117e:	4413      	add	r3, r2
    1180:	b2db      	uxtb	r3, r3
    1182:	73fb      	strb	r3, [r7, #15]
  assert(accu8 == 42u);
    1184:	7bfb      	ldrb	r3, [r7, #15]
    1186:	b2db      	uxtb	r3, r3
    1188:	2b2a      	cmp	r3, #42	; 0x2a
    118a:	d005      	beq.n	1198 <TestUIntCalc()+0x168>
    118c:	4b48      	ldr	r3, [pc, #288]	; (12b0 <TestUIntCalc()+0x280>)
    118e:	4a3f      	ldr	r2, [pc, #252]	; (128c <TestUIntCalc()+0x25c>)
    1190:	212b      	movs	r1, #43	; 0x2b
    1192:	483f      	ldr	r0, [pc, #252]	; (1290 <TestUIntCalc()+0x260>)
    1194:	f00a fc9c 	bl	bad0 <__assert_func>

  // -----------------------------
  // 16-bit
  // -----------------------------
  volatile uint16_t accu16 = 123u;
    1198:	237b      	movs	r3, #123	; 0x7b
    119a:	81bb      	strh	r3, [r7, #12]

  accu16 += 123u;
    119c:	89bb      	ldrh	r3, [r7, #12]
    119e:	b29b      	uxth	r3, r3
    11a0:	337b      	adds	r3, #123	; 0x7b
    11a2:	b29b      	uxth	r3, r3
    11a4:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 246u);
    11a6:	89bb      	ldrh	r3, [r7, #12]
    11a8:	b29b      	uxth	r3, r3
    11aa:	2bf6      	cmp	r3, #246	; 0xf6
    11ac:	d005      	beq.n	11ba <TestUIntCalc()+0x18a>
    11ae:	4b41      	ldr	r3, [pc, #260]	; (12b4 <TestUIntCalc()+0x284>)
    11b0:	4a36      	ldr	r2, [pc, #216]	; (128c <TestUIntCalc()+0x25c>)
    11b2:	2133      	movs	r1, #51	; 0x33
    11b4:	4836      	ldr	r0, [pc, #216]	; (1290 <TestUIntCalc()+0x260>)
    11b6:	f00a fc8b 	bl	bad0 <__assert_func>

  accu16 *= 3u;
    11ba:	89bb      	ldrh	r3, [r7, #12]
    11bc:	b29b      	uxth	r3, r3
    11be:	461a      	mov	r2, r3
    11c0:	0052      	lsls	r2, r2, #1
    11c2:	4413      	add	r3, r2
    11c4:	b29b      	uxth	r3, r3
    11c6:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 738u);
    11c8:	89bb      	ldrh	r3, [r7, #12]
    11ca:	b29b      	uxth	r3, r3
    11cc:	f240 22e2 	movw	r2, #738	; 0x2e2
    11d0:	4293      	cmp	r3, r2
    11d2:	d005      	beq.n	11e0 <TestUIntCalc()+0x1b0>
    11d4:	4b38      	ldr	r3, [pc, #224]	; (12b8 <TestUIntCalc()+0x288>)
    11d6:	4a2d      	ldr	r2, [pc, #180]	; (128c <TestUIntCalc()+0x25c>)
    11d8:	2136      	movs	r1, #54	; 0x36
    11da:	482d      	ldr	r0, [pc, #180]	; (1290 <TestUIntCalc()+0x260>)
    11dc:	f00a fc78 	bl	bad0 <__assert_func>

  accu16 = accu16 - 238u;
    11e0:	89bb      	ldrh	r3, [r7, #12]
    11e2:	b29b      	uxth	r3, r3
    11e4:	3bee      	subs	r3, #238	; 0xee
    11e6:	b29b      	uxth	r3, r3
    11e8:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 500u);
    11ea:	89bb      	ldrh	r3, [r7, #12]
    11ec:	b29b      	uxth	r3, r3
    11ee:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
    11f2:	d005      	beq.n	1200 <TestUIntCalc()+0x1d0>
    11f4:	4b31      	ldr	r3, [pc, #196]	; (12bc <TestUIntCalc()+0x28c>)
    11f6:	4a25      	ldr	r2, [pc, #148]	; (128c <TestUIntCalc()+0x25c>)
    11f8:	2139      	movs	r1, #57	; 0x39
    11fa:	4825      	ldr	r0, [pc, #148]	; (1290 <TestUIntCalc()+0x260>)
    11fc:	f00a fc68 	bl	bad0 <__assert_func>

  accu16 /= 25u;
    1200:	89bb      	ldrh	r3, [r7, #12]
    1202:	b29b      	uxth	r3, r3
    1204:	4a26      	ldr	r2, [pc, #152]	; (12a0 <TestUIntCalc()+0x270>)
    1206:	fba2 2303 	umull	r2, r3, r2, r3
    120a:	08db      	lsrs	r3, r3, #3
    120c:	b29b      	uxth	r3, r3
    120e:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 20u);
    1210:	89bb      	ldrh	r3, [r7, #12]
    1212:	b29b      	uxth	r3, r3
    1214:	2b14      	cmp	r3, #20
    1216:	d005      	beq.n	1224 <TestUIntCalc()+0x1f4>
    1218:	4b29      	ldr	r3, [pc, #164]	; (12c0 <TestUIntCalc()+0x290>)
    121a:	4a1c      	ldr	r2, [pc, #112]	; (128c <TestUIntCalc()+0x25c>)
    121c:	213c      	movs	r1, #60	; 0x3c
    121e:	481c      	ldr	r0, [pc, #112]	; (1290 <TestUIntCalc()+0x260>)
    1220:	f00a fc56 	bl	bad0 <__assert_func>

  accu16 = 1u + 2u + (3u * 3u - 9u) * 50u;
    1224:	2303      	movs	r3, #3
    1226:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 3u);
    1228:	89bb      	ldrh	r3, [r7, #12]
    122a:	b29b      	uxth	r3, r3
    122c:	2b03      	cmp	r3, #3
    122e:	d005      	beq.n	123c <TestUIntCalc()+0x20c>
    1230:	4b24      	ldr	r3, [pc, #144]	; (12c4 <TestUIntCalc()+0x294>)
    1232:	4a16      	ldr	r2, [pc, #88]	; (128c <TestUIntCalc()+0x25c>)
    1234:	213f      	movs	r1, #63	; 0x3f
    1236:	4816      	ldr	r0, [pc, #88]	; (1290 <TestUIntCalc()+0x260>)
    1238:	f00a fc4a 	bl	bad0 <__assert_func>

  // overflow test
  accu16 = 65535u;
    123c:	f64f 73ff 	movw	r3, #65535	; 0xffff
    1240:	81bb      	strh	r3, [r7, #12]
  accu16 += 1u;
    1242:	89bb      	ldrh	r3, [r7, #12]
    1244:	b29b      	uxth	r3, r3
    1246:	3301      	adds	r3, #1
    1248:	b29b      	uxth	r3, r3
    124a:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 0u);
    124c:	89bb      	ldrh	r3, [r7, #12]
    124e:	b29b      	uxth	r3, r3
    1250:	2b00      	cmp	r3, #0
    1252:	d005      	beq.n	1260 <TestUIntCalc()+0x230>
    1254:	4b1c      	ldr	r3, [pc, #112]	; (12c8 <TestUIntCalc()+0x298>)
    1256:	4a0d      	ldr	r2, [pc, #52]	; (128c <TestUIntCalc()+0x25c>)
    1258:	2144      	movs	r1, #68	; 0x44
    125a:	480d      	ldr	r0, [pc, #52]	; (1290 <TestUIntCalc()+0x260>)
    125c:	f00a fc38 	bl	bad0 <__assert_func>
  accu16 -= 1u;
    1260:	89bb      	ldrh	r3, [r7, #12]
    1262:	b29b      	uxth	r3, r3
    1264:	3b01      	subs	r3, #1
    1266:	b29b      	uxth	r3, r3
    1268:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 65535u);
    126a:	89bb      	ldrh	r3, [r7, #12]
    126c:	b29b      	uxth	r3, r3
    126e:	f64f 72ff 	movw	r2, #65535	; 0xffff
    1272:	4293      	cmp	r3, r2
    1274:	d02c      	beq.n	12d0 <TestUIntCalc()+0x2a0>
    1276:	4b15      	ldr	r3, [pc, #84]	; (12cc <TestUIntCalc()+0x29c>)
    1278:	4a04      	ldr	r2, [pc, #16]	; (128c <TestUIntCalc()+0x25c>)
    127a:	2146      	movs	r1, #70	; 0x46
    127c:	4804      	ldr	r0, [pc, #16]	; (1290 <TestUIntCalc()+0x260>)
    127e:	f00a fc27 	bl	bad0 <__assert_func>
    1282:	bf00      	nop
    1284:	00017a20 	.word	0x00017a20
    1288:	00017a54 	.word	0x00017a54
    128c:	00017a64 	.word	0x00017a64
    1290:	00017a78 	.word	0x00017a78
    1294:	00017ac0 	.word	0x00017ac0
    1298:	00017acc 	.word	0x00017acc
    129c:	00017adc 	.word	0x00017adc
    12a0:	51eb851f 	.word	0x51eb851f
    12a4:	00017aec 	.word	0x00017aec
    12a8:	00017afc 	.word	0x00017afc
    12ac:	00017b08 	.word	0x00017b08
    12b0:	00017b14 	.word	0x00017b14
    12b4:	00017b24 	.word	0x00017b24
    12b8:	00017b34 	.word	0x00017b34
    12bc:	00017b44 	.word	0x00017b44
    12c0:	00017b54 	.word	0x00017b54
    12c4:	00017b64 	.word	0x00017b64
    12c8:	00017b74 	.word	0x00017b74
    12cc:	00017b84 	.word	0x00017b84

  // accumulate tests
  accu16 = 1u;
    12d0:	2301      	movs	r3, #1
    12d2:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 2
    12d4:	89bb      	ldrh	r3, [r7, #12]
    12d6:	b29b      	uxth	r3, r3
    12d8:	89ba      	ldrh	r2, [r7, #12]
    12da:	b292      	uxth	r2, r2
    12dc:	fb02 f303 	mul.w	r3, r2, r3
    12e0:	b29a      	uxth	r2, r3
    12e2:	89bb      	ldrh	r3, [r7, #12]
    12e4:	b29b      	uxth	r3, r3
    12e6:	4413      	add	r3, r2
    12e8:	b29b      	uxth	r3, r3
    12ea:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 6
    12ec:	89bb      	ldrh	r3, [r7, #12]
    12ee:	b29b      	uxth	r3, r3
    12f0:	89ba      	ldrh	r2, [r7, #12]
    12f2:	b292      	uxth	r2, r2
    12f4:	fb02 f303 	mul.w	r3, r2, r3
    12f8:	b29a      	uxth	r2, r3
    12fa:	89bb      	ldrh	r3, [r7, #12]
    12fc:	b29b      	uxth	r3, r3
    12fe:	4413      	add	r3, r2
    1300:	b29b      	uxth	r3, r3
    1302:	81bb      	strh	r3, [r7, #12]
  accu16 = accu16 * accu16 + accu16; // 42
    1304:	89bb      	ldrh	r3, [r7, #12]
    1306:	b29b      	uxth	r3, r3
    1308:	89ba      	ldrh	r2, [r7, #12]
    130a:	b292      	uxth	r2, r2
    130c:	fb02 f303 	mul.w	r3, r2, r3
    1310:	b29a      	uxth	r2, r3
    1312:	89bb      	ldrh	r3, [r7, #12]
    1314:	b29b      	uxth	r3, r3
    1316:	4413      	add	r3, r2
    1318:	b29b      	uxth	r3, r3
    131a:	81bb      	strh	r3, [r7, #12]
  assert(accu16 == 42u);
    131c:	89bb      	ldrh	r3, [r7, #12]
    131e:	b29b      	uxth	r3, r3
    1320:	2b2a      	cmp	r3, #42	; 0x2a
    1322:	d005      	beq.n	1330 <TestUIntCalc()+0x300>
    1324:	4b58      	ldr	r3, [pc, #352]	; (1488 <TestUIntCalc()+0x458>)
    1326:	4a59      	ldr	r2, [pc, #356]	; (148c <TestUIntCalc()+0x45c>)
    1328:	214d      	movs	r1, #77	; 0x4d
    132a:	4859      	ldr	r0, [pc, #356]	; (1490 <TestUIntCalc()+0x460>)
    132c:	f00a fbd0 	bl	bad0 <__assert_func>

  // -----------------------------
  // 32-bit
  // -----------------------------
  volatile uint32_t accu32 = 123u;
    1330:	237b      	movs	r3, #123	; 0x7b
    1332:	60bb      	str	r3, [r7, #8]

  accu32 += 123u;
    1334:	68bb      	ldr	r3, [r7, #8]
    1336:	337b      	adds	r3, #123	; 0x7b
    1338:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 246u);
    133a:	68bb      	ldr	r3, [r7, #8]
    133c:	2bf6      	cmp	r3, #246	; 0xf6
    133e:	d005      	beq.n	134c <TestUIntCalc()+0x31c>
    1340:	4b54      	ldr	r3, [pc, #336]	; (1494 <TestUIntCalc()+0x464>)
    1342:	4a52      	ldr	r2, [pc, #328]	; (148c <TestUIntCalc()+0x45c>)
    1344:	2155      	movs	r1, #85	; 0x55
    1346:	4852      	ldr	r0, [pc, #328]	; (1490 <TestUIntCalc()+0x460>)
    1348:	f00a fbc2 	bl	bad0 <__assert_func>

  accu32 *= 3u;
    134c:	68ba      	ldr	r2, [r7, #8]
    134e:	4613      	mov	r3, r2
    1350:	005b      	lsls	r3, r3, #1
    1352:	4413      	add	r3, r2
    1354:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 738u);
    1356:	68bb      	ldr	r3, [r7, #8]
    1358:	f240 22e2 	movw	r2, #738	; 0x2e2
    135c:	4293      	cmp	r3, r2
    135e:	d005      	beq.n	136c <TestUIntCalc()+0x33c>
    1360:	4b4d      	ldr	r3, [pc, #308]	; (1498 <TestUIntCalc()+0x468>)
    1362:	4a4a      	ldr	r2, [pc, #296]	; (148c <TestUIntCalc()+0x45c>)
    1364:	2158      	movs	r1, #88	; 0x58
    1366:	484a      	ldr	r0, [pc, #296]	; (1490 <TestUIntCalc()+0x460>)
    1368:	f00a fbb2 	bl	bad0 <__assert_func>

  accu32 = accu32 - 238u;
    136c:	68bb      	ldr	r3, [r7, #8]
    136e:	3bee      	subs	r3, #238	; 0xee
    1370:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 500u);
    1372:	68bb      	ldr	r3, [r7, #8]
    1374:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
    1378:	d005      	beq.n	1386 <TestUIntCalc()+0x356>
    137a:	4b48      	ldr	r3, [pc, #288]	; (149c <TestUIntCalc()+0x46c>)
    137c:	4a43      	ldr	r2, [pc, #268]	; (148c <TestUIntCalc()+0x45c>)
    137e:	215b      	movs	r1, #91	; 0x5b
    1380:	4843      	ldr	r0, [pc, #268]	; (1490 <TestUIntCalc()+0x460>)
    1382:	f00a fba5 	bl	bad0 <__assert_func>

  accu32 /= 25u;
    1386:	68bb      	ldr	r3, [r7, #8]
    1388:	4a45      	ldr	r2, [pc, #276]	; (14a0 <TestUIntCalc()+0x470>)
    138a:	fba2 2303 	umull	r2, r3, r2, r3
    138e:	08db      	lsrs	r3, r3, #3
    1390:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 20u);
    1392:	68bb      	ldr	r3, [r7, #8]
    1394:	2b14      	cmp	r3, #20
    1396:	d005      	beq.n	13a4 <TestUIntCalc()+0x374>
    1398:	4b42      	ldr	r3, [pc, #264]	; (14a4 <TestUIntCalc()+0x474>)
    139a:	4a3c      	ldr	r2, [pc, #240]	; (148c <TestUIntCalc()+0x45c>)
    139c:	215e      	movs	r1, #94	; 0x5e
    139e:	483c      	ldr	r0, [pc, #240]	; (1490 <TestUIntCalc()+0x460>)
    13a0:	f00a fb96 	bl	bad0 <__assert_func>

  accu32 = 1u + 2u + (3u * 3u - 9u) * 50u;
    13a4:	2303      	movs	r3, #3
    13a6:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 3u);
    13a8:	68bb      	ldr	r3, [r7, #8]
    13aa:	2b03      	cmp	r3, #3
    13ac:	d005      	beq.n	13ba <TestUIntCalc()+0x38a>
    13ae:	4b3e      	ldr	r3, [pc, #248]	; (14a8 <TestUIntCalc()+0x478>)
    13b0:	4a36      	ldr	r2, [pc, #216]	; (148c <TestUIntCalc()+0x45c>)
    13b2:	2161      	movs	r1, #97	; 0x61
    13b4:	4836      	ldr	r0, [pc, #216]	; (1490 <TestUIntCalc()+0x460>)
    13b6:	f00a fb8b 	bl	bad0 <__assert_func>

  // overflow test
  accu32 = 4294967295u;
    13ba:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    13be:	60bb      	str	r3, [r7, #8]
  accu32 += 1u;
    13c0:	68bb      	ldr	r3, [r7, #8]
    13c2:	3301      	adds	r3, #1
    13c4:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 0u);
    13c6:	68bb      	ldr	r3, [r7, #8]
    13c8:	2b00      	cmp	r3, #0
    13ca:	d005      	beq.n	13d8 <TestUIntCalc()+0x3a8>
    13cc:	4b37      	ldr	r3, [pc, #220]	; (14ac <TestUIntCalc()+0x47c>)
    13ce:	4a2f      	ldr	r2, [pc, #188]	; (148c <TestUIntCalc()+0x45c>)
    13d0:	2166      	movs	r1, #102	; 0x66
    13d2:	482f      	ldr	r0, [pc, #188]	; (1490 <TestUIntCalc()+0x460>)
    13d4:	f00a fb7c 	bl	bad0 <__assert_func>
  accu32 -= 1u;
    13d8:	68bb      	ldr	r3, [r7, #8]
    13da:	3b01      	subs	r3, #1
    13dc:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 4294967295u);
    13de:	68bb      	ldr	r3, [r7, #8]
    13e0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    13e4:	d005      	beq.n	13f2 <TestUIntCalc()+0x3c2>
    13e6:	4b32      	ldr	r3, [pc, #200]	; (14b0 <TestUIntCalc()+0x480>)
    13e8:	4a28      	ldr	r2, [pc, #160]	; (148c <TestUIntCalc()+0x45c>)
    13ea:	2168      	movs	r1, #104	; 0x68
    13ec:	4828      	ldr	r0, [pc, #160]	; (1490 <TestUIntCalc()+0x460>)
    13ee:	f00a fb6f 	bl	bad0 <__assert_func>

  // accumulate tests
  accu32 = 1u;
    13f2:	2301      	movs	r3, #1
    13f4:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 2
    13f6:	68bb      	ldr	r3, [r7, #8]
    13f8:	68ba      	ldr	r2, [r7, #8]
    13fa:	fb03 f202 	mul.w	r2, r3, r2
    13fe:	68bb      	ldr	r3, [r7, #8]
    1400:	4413      	add	r3, r2
    1402:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 6
    1404:	68bb      	ldr	r3, [r7, #8]
    1406:	68ba      	ldr	r2, [r7, #8]
    1408:	fb03 f202 	mul.w	r2, r3, r2
    140c:	68bb      	ldr	r3, [r7, #8]
    140e:	4413      	add	r3, r2
    1410:	60bb      	str	r3, [r7, #8]
  accu32 = accu32 * accu32 + accu32; // 42
    1412:	68bb      	ldr	r3, [r7, #8]
    1414:	68ba      	ldr	r2, [r7, #8]
    1416:	fb03 f202 	mul.w	r2, r3, r2
    141a:	68bb      	ldr	r3, [r7, #8]
    141c:	4413      	add	r3, r2
    141e:	60bb      	str	r3, [r7, #8]
  assert(accu32 == 42u);
    1420:	68bb      	ldr	r3, [r7, #8]
    1422:	2b2a      	cmp	r3, #42	; 0x2a
    1424:	d005      	beq.n	1432 <TestUIntCalc()+0x402>
    1426:	4b23      	ldr	r3, [pc, #140]	; (14b4 <TestUIntCalc()+0x484>)
    1428:	4a18      	ldr	r2, [pc, #96]	; (148c <TestUIntCalc()+0x45c>)
    142a:	216f      	movs	r1, #111	; 0x6f
    142c:	4818      	ldr	r0, [pc, #96]	; (1490 <TestUIntCalc()+0x460>)
    142e:	f00a fb4f 	bl	bad0 <__assert_func>

  // -----------------------------
  // 32-bit Modulo
  // -----------------------------

  volatile uint32_t a = 0x80000000u;
    1432:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    1436:	607b      	str	r3, [r7, #4]
  volatile uint32_t b = 0x80000000u;
    1438:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    143c:	603b      	str	r3, [r7, #0]

  assert((a % b) == 0u);
    143e:	687b      	ldr	r3, [r7, #4]
    1440:	683a      	ldr	r2, [r7, #0]
    1442:	fbb3 f1f2 	udiv	r1, r3, r2
    1446:	fb01 f202 	mul.w	r2, r1, r2
    144a:	1a9b      	subs	r3, r3, r2
    144c:	2b00      	cmp	r3, #0
    144e:	d005      	beq.n	145c <TestUIntCalc()+0x42c>
    1450:	4b19      	ldr	r3, [pc, #100]	; (14b8 <TestUIntCalc()+0x488>)
    1452:	4a0e      	ldr	r2, [pc, #56]	; (148c <TestUIntCalc()+0x45c>)
    1454:	2178      	movs	r1, #120	; 0x78
    1456:	480e      	ldr	r0, [pc, #56]	; (1490 <TestUIntCalc()+0x460>)
    1458:	f00a fb3a 	bl	bad0 <__assert_func>

  a += 1u;
    145c:	687b      	ldr	r3, [r7, #4]
    145e:	3301      	adds	r3, #1
    1460:	607b      	str	r3, [r7, #4]
  assert((a % b) == 1u);
    1462:	687b      	ldr	r3, [r7, #4]
    1464:	683a      	ldr	r2, [r7, #0]
    1466:	fbb3 f1f2 	udiv	r1, r3, r2
    146a:	fb01 f202 	mul.w	r2, r1, r2
    146e:	1a9b      	subs	r3, r3, r2
    1470:	2b01      	cmp	r3, #1
    1472:	d005      	beq.n	1480 <TestUIntCalc()+0x450>
    1474:	4b11      	ldr	r3, [pc, #68]	; (14bc <TestUIntCalc()+0x48c>)
    1476:	4a05      	ldr	r2, [pc, #20]	; (148c <TestUIntCalc()+0x45c>)
    1478:	217b      	movs	r1, #123	; 0x7b
    147a:	4805      	ldr	r0, [pc, #20]	; (1490 <TestUIntCalc()+0x460>)
    147c:	f00a fb28 	bl	bad0 <__assert_func>
    1480:	bf00      	nop
    1482:	3710      	adds	r7, #16
    1484:	46bd      	mov	sp, r7
    1486:	bd80      	pop	{r7, pc}
    1488:	00017b98 	.word	0x00017b98
    148c:	00017a64 	.word	0x00017a64
    1490:	00017a78 	.word	0x00017a78
    1494:	00017ba8 	.word	0x00017ba8
    1498:	00017bb8 	.word	0x00017bb8
    149c:	00017bc8 	.word	0x00017bc8
    14a0:	51eb851f 	.word	0x51eb851f
    14a4:	00017bd8 	.word	0x00017bd8
    14a8:	00017be8 	.word	0x00017be8
    14ac:	00017bf8 	.word	0x00017bf8
    14b0:	00017c08 	.word	0x00017c08
    14b4:	00017c20 	.word	0x00017c20
    14b8:	00017c30 	.word	0x00017c30
    14bc:	00017c40 	.word	0x00017c40

000014c0 <BranchTest(long)>:
#include "test_if_then_else.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

uint32_t BranchTest(volatile int32_t arg) {
    14c0:	b480      	push	{r7}
    14c2:	b083      	sub	sp, #12
    14c4:	af00      	add	r7, sp, #0
    14c6:	6078      	str	r0, [r7, #4]
  if (arg > 0) {
    14c8:	687b      	ldr	r3, [r7, #4]
    14ca:	2b00      	cmp	r3, #0
    14cc:	bfcc      	ite	gt
    14ce:	2301      	movgt	r3, #1
    14d0:	2300      	movle	r3, #0
    14d2:	b2db      	uxtb	r3, r3
    14d4:	2b00      	cmp	r3, #0
    14d6:	d001      	beq.n	14dc <BranchTest(long)+0x1c>
    return 1u;
    14d8:	2301      	movs	r3, #1
    14da:	e026      	b.n	152a <BranchTest(long)+0x6a>
  } else if (arg >= 5) {
    14dc:	687b      	ldr	r3, [r7, #4]
    14de:	2b04      	cmp	r3, #4
    14e0:	bfcc      	ite	gt
    14e2:	2301      	movgt	r3, #1
    14e4:	2300      	movle	r3, #0
    14e6:	b2db      	uxtb	r3, r3
    14e8:	2b00      	cmp	r3, #0
    14ea:	d001      	beq.n	14f0 <BranchTest(long)+0x30>
    return 2u;
    14ec:	2302      	movs	r3, #2
    14ee:	e01c      	b.n	152a <BranchTest(long)+0x6a>
  } else if (arg >= 10) {
    14f0:	687b      	ldr	r3, [r7, #4]
    14f2:	2b09      	cmp	r3, #9
    14f4:	bfcc      	ite	gt
    14f6:	2301      	movgt	r3, #1
    14f8:	2300      	movle	r3, #0
    14fa:	b2db      	uxtb	r3, r3
    14fc:	2b00      	cmp	r3, #0
    14fe:	d001      	beq.n	1504 <BranchTest(long)+0x44>
    return 3u;
    1500:	2303      	movs	r3, #3
    1502:	e012      	b.n	152a <BranchTest(long)+0x6a>
  } else if (arg < -10) {
    1504:	687b      	ldr	r3, [r7, #4]
    1506:	f113 0f0a 	cmn.w	r3, #10
    150a:	bfb4      	ite	lt
    150c:	2301      	movlt	r3, #1
    150e:	2300      	movge	r3, #0
    1510:	b2db      	uxtb	r3, r3
    1512:	2b00      	cmp	r3, #0
    1514:	d001      	beq.n	151a <BranchTest(long)+0x5a>
    return 4u;
    1516:	2304      	movs	r3, #4
    1518:	e007      	b.n	152a <BranchTest(long)+0x6a>
  } else if (arg < 0) {
    151a:	687b      	ldr	r3, [r7, #4]
    151c:	0fdb      	lsrs	r3, r3, #31
    151e:	b2db      	uxtb	r3, r3
    1520:	2b00      	cmp	r3, #0
    1522:	d001      	beq.n	1528 <BranchTest(long)+0x68>
    return 5u;
    1524:	2305      	movs	r3, #5
    1526:	e000      	b.n	152a <BranchTest(long)+0x6a>
  }
  return 0u;
    1528:	2300      	movs	r3, #0
}
    152a:	4618      	mov	r0, r3
    152c:	370c      	adds	r7, #12
    152e:	46bd      	mov	sp, r7
    1530:	bc80      	pop	{r7}
    1532:	4770      	bx	lr

00001534 <TestIfThenElse()>:

void TestIfThenElse() {
    1534:	b580      	push	{r7, lr}
    1536:	b082      	sub	sp, #8
    1538:	af00      	add	r7, sp, #0
  printf("# Test: If then else\n");
    153a:	481b      	ldr	r0, [pc, #108]	; (15a8 <TestIfThenElse()+0x74>)
    153c:	f00b fb6e 	bl	cc1c <puts>
  volatile int32_t arg = -5;
    1540:	f06f 0304 	mvn.w	r3, #4
    1544:	607b      	str	r3, [r7, #4]
  assert(BranchTest(arg) == 5u);
    1546:	687b      	ldr	r3, [r7, #4]
    1548:	4618      	mov	r0, r3
    154a:	f7ff ffb9 	bl	14c0 <BranchTest(long)>
    154e:	4603      	mov	r3, r0
    1550:	2b05      	cmp	r3, #5
    1552:	d005      	beq.n	1560 <TestIfThenElse()+0x2c>
    1554:	4b15      	ldr	r3, [pc, #84]	; (15ac <TestIfThenElse()+0x78>)
    1556:	4a16      	ldr	r2, [pc, #88]	; (15b0 <TestIfThenElse()+0x7c>)
    1558:	2118      	movs	r1, #24
    155a:	4816      	ldr	r0, [pc, #88]	; (15b4 <TestIfThenElse()+0x80>)
    155c:	f00a fab8 	bl	bad0 <__assert_func>
  arg = -11;
    1560:	f06f 030a 	mvn.w	r3, #10
    1564:	607b      	str	r3, [r7, #4]
  assert(BranchTest(arg) == 4u);
    1566:	687b      	ldr	r3, [r7, #4]
    1568:	4618      	mov	r0, r3
    156a:	f7ff ffa9 	bl	14c0 <BranchTest(long)>
    156e:	4603      	mov	r3, r0
    1570:	2b04      	cmp	r3, #4
    1572:	d005      	beq.n	1580 <TestIfThenElse()+0x4c>
    1574:	4b10      	ldr	r3, [pc, #64]	; (15b8 <TestIfThenElse()+0x84>)
    1576:	4a0e      	ldr	r2, [pc, #56]	; (15b0 <TestIfThenElse()+0x7c>)
    1578:	211a      	movs	r1, #26
    157a:	480e      	ldr	r0, [pc, #56]	; (15b4 <TestIfThenElse()+0x80>)
    157c:	f00a faa8 	bl	bad0 <__assert_func>
  arg = 3;
    1580:	2303      	movs	r3, #3
    1582:	607b      	str	r3, [r7, #4]
  assert(BranchTest(arg) == 1u);
    1584:	687b      	ldr	r3, [r7, #4]
    1586:	4618      	mov	r0, r3
    1588:	f7ff ff9a 	bl	14c0 <BranchTest(long)>
    158c:	4603      	mov	r3, r0
    158e:	2b01      	cmp	r3, #1
    1590:	d005      	beq.n	159e <TestIfThenElse()+0x6a>
    1592:	4b0a      	ldr	r3, [pc, #40]	; (15bc <TestIfThenElse()+0x88>)
    1594:	4a06      	ldr	r2, [pc, #24]	; (15b0 <TestIfThenElse()+0x7c>)
    1596:	211c      	movs	r1, #28
    1598:	4806      	ldr	r0, [pc, #24]	; (15b4 <TestIfThenElse()+0x80>)
    159a:	f00a fa99 	bl	bad0 <__assert_func>
    159e:	bf00      	nop
    15a0:	3708      	adds	r7, #8
    15a2:	46bd      	mov	sp, r7
    15a4:	bd80      	pop	{r7, pc}
    15a6:	bf00      	nop
    15a8:	00017c50 	.word	0x00017c50
    15ac:	00017c68 	.word	0x00017c68
    15b0:	00017c80 	.word	0x00017c80
    15b4:	00017c98 	.word	0x00017c98
    15b8:	00017ce4 	.word	0x00017ce4
    15bc:	00017cfc 	.word	0x00017cfc

000015c0 <TestTypeCasting()>:
#include <assert.h>
#include <cstring>
#include <stdint.h>
#include <stdio.h>

void TestTypeCasting() {
    15c0:	b580      	push	{r7, lr}
    15c2:	b08c      	sub	sp, #48	; 0x30
    15c4:	af00      	add	r7, sp, #0
  printf("# Test: Type casting\n");
    15c6:	4823      	ldr	r0, [pc, #140]	; (1654 <TestTypeCasting()+0x94>)
    15c8:	f00b fb28 	bl	cc1c <puts>
  volatile uint64_t u64 = 12345u;
    15cc:	f243 0239 	movw	r2, #12345	; 0x3039
    15d0:	f04f 0300 	mov.w	r3, #0
    15d4:	e9c7 2308 	strd	r2, r3, [r7, #32]
  volatile uint32_t u32 = static_cast<uint32_t>(u64);
    15d8:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
    15dc:	4613      	mov	r3, r2
    15de:	61fb      	str	r3, [r7, #28]
  assert(u32 == 12345u);
    15e0:	69fb      	ldr	r3, [r7, #28]
    15e2:	f243 0239 	movw	r2, #12345	; 0x3039
    15e6:	4293      	cmp	r3, r2
    15e8:	d005      	beq.n	15f6 <TestTypeCasting()+0x36>
    15ea:	4b1b      	ldr	r3, [pc, #108]	; (1658 <TestTypeCasting()+0x98>)
    15ec:	4a1b      	ldr	r2, [pc, #108]	; (165c <TestTypeCasting()+0x9c>)
    15ee:	210b      	movs	r1, #11
    15f0:	481b      	ldr	r0, [pc, #108]	; (1660 <TestTypeCasting()+0xa0>)
    15f2:	f00a fa6d 	bl	bad0 <__assert_func>

  uint64_t u64_cpy = u64;
    15f6:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
    15fa:	e9c7 2304 	strd	r2, r3, [r7, #16]
  volatile uint32_t u32_cpy = static_cast<uint32_t>(u64_cpy);
    15fe:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
    1602:	4613      	mov	r3, r2
    1604:	60fb      	str	r3, [r7, #12]
  assert(u32_cpy == 12345u);
    1606:	68fb      	ldr	r3, [r7, #12]
    1608:	f243 0239 	movw	r2, #12345	; 0x3039
    160c:	4293      	cmp	r3, r2
    160e:	d005      	beq.n	161c <TestTypeCasting()+0x5c>
    1610:	4b14      	ldr	r3, [pc, #80]	; (1664 <TestTypeCasting()+0xa4>)
    1612:	4a12      	ldr	r2, [pc, #72]	; (165c <TestTypeCasting()+0x9c>)
    1614:	210f      	movs	r1, #15
    1616:	4812      	ldr	r0, [pc, #72]	; (1660 <TestTypeCasting()+0xa0>)
    1618:	f00a fa5a 	bl	bad0 <__assert_func>

  uint64_t u64_mcpy = 0x0u;
    161c:	f04f 0200 	mov.w	r2, #0
    1620:	f04f 0300 	mov.w	r3, #0
    1624:	e9c7 2300 	strd	r2, r3, [r7]
    1628:	693b      	ldr	r3, [r7, #16]
  memcpy(&u64_mcpy, &u64_cpy, 4u);
    162a:	603b      	str	r3, [r7, #0]
  uint32_t u32_mcpy = static_cast<uint32_t>(u64_mcpy);
    162c:	e9d7 2300 	ldrd	r2, r3, [r7]
    1630:	4613      	mov	r3, r2
    1632:	62fb      	str	r3, [r7, #44]	; 0x2c
  assert(u32_mcpy == 12345u);
    1634:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1636:	f243 0239 	movw	r2, #12345	; 0x3039
    163a:	4293      	cmp	r3, r2
    163c:	d005      	beq.n	164a <TestTypeCasting()+0x8a>
    163e:	4b0a      	ldr	r3, [pc, #40]	; (1668 <TestTypeCasting()+0xa8>)
    1640:	4a06      	ldr	r2, [pc, #24]	; (165c <TestTypeCasting()+0x9c>)
    1642:	2114      	movs	r1, #20
    1644:	4806      	ldr	r0, [pc, #24]	; (1660 <TestTypeCasting()+0xa0>)
    1646:	f00a fa43 	bl	bad0 <__assert_func>
    164a:	bf00      	nop
    164c:	3730      	adds	r7, #48	; 0x30
    164e:	46bd      	mov	sp, r7
    1650:	bd80      	pop	{r7, pc}
    1652:	bf00      	nop
    1654:	00017d14 	.word	0x00017d14
    1658:	00017d2c 	.word	0x00017d2c
    165c:	00017d3c 	.word	0x00017d3c
    1660:	00017d54 	.word	0x00017d54
    1664:	00017da0 	.word	0x00017da0
    1668:	00017db4 	.word	0x00017db4

0000166c <TestPolymorphismn()>:
class Derived : public Base {
public:
  virtual uint32_t Call() override { return 0xAFFE; }
};

void TestPolymorphismn() {
    166c:	b580      	push	{r7, lr}
    166e:	b084      	sub	sp, #16
    1670:	af00      	add	r7, sp, #0
  printf("# Test: Polymorphismn\n");
    1672:	481e      	ldr	r0, [pc, #120]	; (16ec <TestPolymorphismn()+0x80>)
    1674:	f00b fad2 	bl	cc1c <puts>
  auto derived = Derived();
    1678:	4b1d      	ldr	r3, [pc, #116]	; (16f0 <TestPolymorphismn()+0x84>)
    167a:	60bb      	str	r3, [r7, #8]
  assert(derived.Call() == 0xAFFE);
    167c:	f107 0308 	add.w	r3, r7, #8
    1680:	4618      	mov	r0, r3
    1682:	f000 f851 	bl	1728 <Derived::Call()>
    1686:	4603      	mov	r3, r0
    1688:	f64a 72fe 	movw	r2, #45054	; 0xaffe
    168c:	4293      	cmp	r3, r2
    168e:	d005      	beq.n	169c <TestPolymorphismn()+0x30>
    1690:	4b18      	ldr	r3, [pc, #96]	; (16f4 <TestPolymorphismn()+0x88>)
    1692:	4a19      	ldr	r2, [pc, #100]	; (16f8 <TestPolymorphismn()+0x8c>)
    1694:	2114      	movs	r1, #20
    1696:	4819      	ldr	r0, [pc, #100]	; (16fc <TestPolymorphismn()+0x90>)
    1698:	f00a fa1a 	bl	bad0 <__assert_func>
  auto *base = reinterpret_cast<Base *>(&derived);
    169c:	f107 0308 	add.w	r3, r7, #8
    16a0:	60fb      	str	r3, [r7, #12]
  assert(base->Call() == 0xAFFE);
    16a2:	68fb      	ldr	r3, [r7, #12]
    16a4:	681b      	ldr	r3, [r3, #0]
    16a6:	681b      	ldr	r3, [r3, #0]
    16a8:	68f8      	ldr	r0, [r7, #12]
    16aa:	4798      	blx	r3
    16ac:	4603      	mov	r3, r0
    16ae:	f64a 72fe 	movw	r2, #45054	; 0xaffe
    16b2:	4293      	cmp	r3, r2
    16b4:	d005      	beq.n	16c2 <TestPolymorphismn()+0x56>
    16b6:	4b12      	ldr	r3, [pc, #72]	; (1700 <TestPolymorphismn()+0x94>)
    16b8:	4a0f      	ldr	r2, [pc, #60]	; (16f8 <TestPolymorphismn()+0x8c>)
    16ba:	2116      	movs	r1, #22
    16bc:	480f      	ldr	r0, [pc, #60]	; (16fc <TestPolymorphismn()+0x90>)
    16be:	f00a fa07 	bl	bad0 <__assert_func>
  auto base_constructed = Base();
    16c2:	4b10      	ldr	r3, [pc, #64]	; (1704 <TestPolymorphismn()+0x98>)
    16c4:	607b      	str	r3, [r7, #4]
  assert(base_constructed.Call() == 0xBEEFCAFE);
    16c6:	1d3b      	adds	r3, r7, #4
    16c8:	4618      	mov	r0, r3
    16ca:	f000 f821 	bl	1710 <Base::Call()>
    16ce:	4603      	mov	r3, r0
    16d0:	4a0d      	ldr	r2, [pc, #52]	; (1708 <TestPolymorphismn()+0x9c>)
    16d2:	4293      	cmp	r3, r2
    16d4:	d005      	beq.n	16e2 <TestPolymorphismn()+0x76>
    16d6:	4b0d      	ldr	r3, [pc, #52]	; (170c <TestPolymorphismn()+0xa0>)
    16d8:	4a07      	ldr	r2, [pc, #28]	; (16f8 <TestPolymorphismn()+0x8c>)
    16da:	2118      	movs	r1, #24
    16dc:	4807      	ldr	r0, [pc, #28]	; (16fc <TestPolymorphismn()+0x90>)
    16de:	f00a f9f7 	bl	bad0 <__assert_func>
    16e2:	bf00      	nop
    16e4:	3710      	adds	r7, #16
    16e6:	46bd      	mov	sp, r7
    16e8:	bd80      	pop	{r7, pc}
    16ea:	bf00      	nop
    16ec:	00017dc8 	.word	0x00017dc8
    16f0:	00017eac 	.word	0x00017eac
    16f4:	00017de0 	.word	0x00017de0
    16f8:	00017dfc 	.word	0x00017dfc
    16fc:	00017e18 	.word	0x00017e18
    1700:	00017e64 	.word	0x00017e64
    1704:	00017eb8 	.word	0x00017eb8
    1708:	beefcafe 	.word	0xbeefcafe
    170c:	00017e7c 	.word	0x00017e7c

00001710 <Base::Call()>:
  virtual uint32_t Call() { return 0xBEEFCAFE; }
    1710:	b480      	push	{r7}
    1712:	b083      	sub	sp, #12
    1714:	af00      	add	r7, sp, #0
    1716:	6078      	str	r0, [r7, #4]
    1718:	4b02      	ldr	r3, [pc, #8]	; (1724 <Base::Call()+0x14>)
    171a:	4618      	mov	r0, r3
    171c:	370c      	adds	r7, #12
    171e:	46bd      	mov	sp, r7
    1720:	bc80      	pop	{r7}
    1722:	4770      	bx	lr
    1724:	beefcafe 	.word	0xbeefcafe

00001728 <Derived::Call()>:
  virtual uint32_t Call() override { return 0xAFFE; }
    1728:	b480      	push	{r7}
    172a:	b083      	sub	sp, #12
    172c:	af00      	add	r7, sp, #0
    172e:	6078      	str	r0, [r7, #4]
    1730:	f64a 73fe 	movw	r3, #45054	; 0xaffe
    1734:	4618      	mov	r0, r3
    1736:	370c      	adds	r7, #12
    1738:	46bd      	mov	sp, r7
    173a:	bc80      	pop	{r7}
    173c:	4770      	bx	lr
	...

00001740 <TableFct0()>:
#include "test_switch_case.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

uint8_t TableFct0() {
    1740:	b480      	push	{r7}
    1742:	b083      	sub	sp, #12
    1744:	af00      	add	r7, sp, #0
  volatile uint32_t temp = 0;
    1746:	2300      	movs	r3, #0
    1748:	607b      	str	r3, [r7, #4]
  static_cast<void>(temp);
    174a:	687b      	ldr	r3, [r7, #4]
  return 0;
    174c:	2300      	movs	r3, #0
}
    174e:	4618      	mov	r0, r3
    1750:	370c      	adds	r7, #12
    1752:	46bd      	mov	sp, r7
    1754:	bc80      	pop	{r7}
    1756:	4770      	bx	lr

00001758 <TableFct1()>:
uint8_t TableFct1() {
    1758:	b480      	push	{r7}
    175a:	b083      	sub	sp, #12
    175c:	af00      	add	r7, sp, #0
  volatile uint64_t temp = 0;
    175e:	f04f 0200 	mov.w	r2, #0
    1762:	f04f 0300 	mov.w	r3, #0
    1766:	e9c7 2300 	strd	r2, r3, [r7]
  static_cast<void>(temp);
    176a:	e9d7 2300 	ldrd	r2, r3, [r7]
  return 1;
    176e:	2301      	movs	r3, #1
}
    1770:	4618      	mov	r0, r3
    1772:	370c      	adds	r7, #12
    1774:	46bd      	mov	sp, r7
    1776:	bc80      	pop	{r7}
    1778:	4770      	bx	lr

0000177a <TableFct2()>:
uint8_t TableFct2() {
    177a:	b480      	push	{r7}
    177c:	b083      	sub	sp, #12
    177e:	af00      	add	r7, sp, #0
  volatile uint16_t temp = 0;
    1780:	2300      	movs	r3, #0
    1782:	80fb      	strh	r3, [r7, #6]
  static_cast<void>(temp);
    1784:	88fb      	ldrh	r3, [r7, #6]
  return 2;
    1786:	2302      	movs	r3, #2
}
    1788:	4618      	mov	r0, r3
    178a:	370c      	adds	r7, #12
    178c:	46bd      	mov	sp, r7
    178e:	bc80      	pop	{r7}
    1790:	4770      	bx	lr

00001792 <TableFct3()>:

uint8_t TableFct3() {
    1792:	b480      	push	{r7}
    1794:	b083      	sub	sp, #12
    1796:	af00      	add	r7, sp, #0
  volatile uint8_t temp = 0;
    1798:	2300      	movs	r3, #0
    179a:	71fb      	strb	r3, [r7, #7]
  static_cast<void>(temp);
    179c:	79fb      	ldrb	r3, [r7, #7]
  return 3;
    179e:	2303      	movs	r3, #3
}
    17a0:	4618      	mov	r0, r3
    17a2:	370c      	adds	r7, #12
    17a4:	46bd      	mov	sp, r7
    17a6:	bc80      	pop	{r7}
    17a8:	4770      	bx	lr

000017aa <TableFct4()>:

uint8_t TableFct4() {
    17aa:	b480      	push	{r7}
    17ac:	b083      	sub	sp, #12
    17ae:	af00      	add	r7, sp, #0
  volatile int8_t temp = 0;
    17b0:	2300      	movs	r3, #0
    17b2:	71fb      	strb	r3, [r7, #7]
  static_cast<void>(temp);
    17b4:	79fb      	ldrb	r3, [r7, #7]
  return 4;
    17b6:	2304      	movs	r3, #4
}
    17b8:	4618      	mov	r0, r3
    17ba:	370c      	adds	r7, #12
    17bc:	46bd      	mov	sp, r7
    17be:	bc80      	pop	{r7}
    17c0:	4770      	bx	lr

000017c2 <TableFct5()>:
uint8_t TableFct5() {
    17c2:	b480      	push	{r7}
    17c4:	b083      	sub	sp, #12
    17c6:	af00      	add	r7, sp, #0
  volatile int32_t temp = 0;
    17c8:	2300      	movs	r3, #0
    17ca:	607b      	str	r3, [r7, #4]
  static_cast<void>(temp);
    17cc:	687b      	ldr	r3, [r7, #4]
  return 5;
    17ce:	2305      	movs	r3, #5
}
    17d0:	4618      	mov	r0, r3
    17d2:	370c      	adds	r7, #12
    17d4:	46bd      	mov	sp, r7
    17d6:	bc80      	pop	{r7}
    17d8:	4770      	bx	lr

000017da <TableFct6()>:
uint8_t TableFct6() {
    17da:	b480      	push	{r7}
    17dc:	b083      	sub	sp, #12
    17de:	af00      	add	r7, sp, #0
  volatile int16_t temp = 0;
    17e0:	2300      	movs	r3, #0
    17e2:	80fb      	strh	r3, [r7, #6]
  static_cast<void>(temp);
    17e4:	88fb      	ldrh	r3, [r7, #6]
  return 6;
    17e6:	2306      	movs	r3, #6
}
    17e8:	4618      	mov	r0, r3
    17ea:	370c      	adds	r7, #12
    17ec:	46bd      	mov	sp, r7
    17ee:	bc80      	pop	{r7}
    17f0:	4770      	bx	lr

000017f2 <TableFct7()>:

uint8_t TableFct7() {
    17f2:	b480      	push	{r7}
    17f4:	b083      	sub	sp, #12
    17f6:	af00      	add	r7, sp, #0
  volatile int64_t temp = 0;
    17f8:	f04f 0200 	mov.w	r2, #0
    17fc:	f04f 0300 	mov.w	r3, #0
    1800:	e9c7 2300 	strd	r2, r3, [r7]
  static_cast<void>(temp);
    1804:	e9d7 2300 	ldrd	r2, r3, [r7]
  return 7;
    1808:	2307      	movs	r3, #7
}
    180a:	4618      	mov	r0, r3
    180c:	370c      	adds	r7, #12
    180e:	46bd      	mov	sp, r7
    1810:	bc80      	pop	{r7}
    1812:	4770      	bx	lr

00001814 <TestTableFct1(char)>:

uint32_t TestTableFct1(char buf) {
    1814:	b480      	push	{r7}
    1816:	b083      	sub	sp, #12
    1818:	af00      	add	r7, sp, #0
    181a:	4603      	mov	r3, r0
    181c:	71fb      	strb	r3, [r7, #7]
  switch (buf) {
    181e:	79fb      	ldrb	r3, [r7, #7]
    1820:	2bff      	cmp	r3, #255	; 0xff
    1822:	d057      	beq.n	18d4 <TestTableFct1(char)+0xc0>
    1824:	2bff      	cmp	r3, #255	; 0xff
    1826:	dc57      	bgt.n	18d8 <TestTableFct1(char)+0xc4>
    1828:	2be8      	cmp	r3, #232	; 0xe8
    182a:	d049      	beq.n	18c0 <TestTableFct1(char)+0xac>
    182c:	2be8      	cmp	r3, #232	; 0xe8
    182e:	dc53      	bgt.n	18d8 <TestTableFct1(char)+0xc4>
    1830:	2b7d      	cmp	r3, #125	; 0x7d
    1832:	dc51      	bgt.n	18d8 <TestTableFct1(char)+0xc4>
    1834:	2b64      	cmp	r3, #100	; 0x64
    1836:	da04      	bge.n	1842 <TestTableFct1(char)+0x2e>
    1838:	2b00      	cmp	r3, #0
    183a:	d03d      	beq.n	18b8 <TestTableFct1(char)+0xa4>
    183c:	2b0c      	cmp	r3, #12
    183e:	d047      	beq.n	18d0 <TestTableFct1(char)+0xbc>
    1840:	e04a      	b.n	18d8 <TestTableFct1(char)+0xc4>
    1842:	3b64      	subs	r3, #100	; 0x64
    1844:	2b19      	cmp	r3, #25
    1846:	d847      	bhi.n	18d8 <TestTableFct1(char)+0xc4>
    1848:	a201      	add	r2, pc, #4	; (adr r2, 1850 <TestTableFct1(char)+0x3c>)
    184a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    184e:	bf00      	nop
    1850:	000018bd 	.word	0x000018bd
    1854:	000018d9 	.word	0x000018d9
    1858:	000018d9 	.word	0x000018d9
    185c:	000018d9 	.word	0x000018d9
    1860:	000018d9 	.word	0x000018d9
    1864:	000018d9 	.word	0x000018d9
    1868:	000018d9 	.word	0x000018d9
    186c:	000018d9 	.word	0x000018d9
    1870:	000018d9 	.word	0x000018d9
    1874:	000018d9 	.word	0x000018d9
    1878:	000018d9 	.word	0x000018d9
    187c:	000018d9 	.word	0x000018d9
    1880:	000018d9 	.word	0x000018d9
    1884:	000018d9 	.word	0x000018d9
    1888:	000018d9 	.word	0x000018d9
    188c:	000018c5 	.word	0x000018c5
    1890:	000018d9 	.word	0x000018d9
    1894:	000018d9 	.word	0x000018d9
    1898:	000018d9 	.word	0x000018d9
    189c:	000018d9 	.word	0x000018d9
    18a0:	000018d9 	.word	0x000018d9
    18a4:	000018c9 	.word	0x000018c9
    18a8:	000018d9 	.word	0x000018d9
    18ac:	000018d9 	.word	0x000018d9
    18b0:	000018d9 	.word	0x000018d9
    18b4:	000018cd 	.word	0x000018cd
  case 0:
    return 1u;
    18b8:	2301      	movs	r3, #1
    18ba:	e00e      	b.n	18da <TestTableFct1(char)+0xc6>
  case 100:
    return 2u;
    18bc:	2302      	movs	r3, #2
    18be:	e00c      	b.n	18da <TestTableFct1(char)+0xc6>
  case 232:
    return 3u;
    18c0:	2303      	movs	r3, #3
    18c2:	e00a      	b.n	18da <TestTableFct1(char)+0xc6>
  case 115:
    return 4u;
    18c4:	2304      	movs	r3, #4
    18c6:	e008      	b.n	18da <TestTableFct1(char)+0xc6>
  case 121:
    return 5u;
    18c8:	2305      	movs	r3, #5
    18ca:	e006      	b.n	18da <TestTableFct1(char)+0xc6>
  case 125:
    return 6u;
    18cc:	2306      	movs	r3, #6
    18ce:	e004      	b.n	18da <TestTableFct1(char)+0xc6>
  case 12:
    return 7u;
    18d0:	2307      	movs	r3, #7
    18d2:	e002      	b.n	18da <TestTableFct1(char)+0xc6>
  case 255:
    return 8u;
    18d4:	2308      	movs	r3, #8
    18d6:	e000      	b.n	18da <TestTableFct1(char)+0xc6>
  default:
    return 1u;
    18d8:	2301      	movs	r3, #1
  }
  return 0u;
}
    18da:	4618      	mov	r0, r3
    18dc:	370c      	adds	r7, #12
    18de:	46bd      	mov	sp, r7
    18e0:	bc80      	pop	{r7}
    18e2:	4770      	bx	lr

000018e4 <TestTableFct2()>:
uint32_t TestTableFct2() {
    18e4:	b580      	push	{r7, lr}
    18e6:	b082      	sub	sp, #8
    18e8:	af00      	add	r7, sp, #0
  uint32_t accu = 0;
    18ea:	2300      	movs	r3, #0
    18ec:	607b      	str	r3, [r7, #4]
  for (uint8_t i = 0; i < 8; ++i) {
    18ee:	2300      	movs	r3, #0
    18f0:	70fb      	strb	r3, [r7, #3]
    18f2:	78fb      	ldrb	r3, [r7, #3]
    18f4:	2b07      	cmp	r3, #7
    18f6:	d85f      	bhi.n	19b8 <TestTableFct2()+0xd4>
    switch (i) {
    18f8:	78fb      	ldrb	r3, [r7, #3]
    18fa:	2b07      	cmp	r3, #7
    18fc:	d852      	bhi.n	19a4 <TestTableFct2()+0xc0>
    18fe:	a201      	add	r2, pc, #4	; (adr r2, 1904 <TestTableFct2()+0x20>)
    1900:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    1904:	00001925 	.word	0x00001925
    1908:	00001935 	.word	0x00001935
    190c:	00001945 	.word	0x00001945
    1910:	00001955 	.word	0x00001955
    1914:	00001965 	.word	0x00001965
    1918:	00001975 	.word	0x00001975
    191c:	00001985 	.word	0x00001985
    1920:	00001995 	.word	0x00001995
    case 0u:
      accu += TableFct0(); // 0
    1924:	f7ff ff0c 	bl	1740 <TableFct0()>
    1928:	4603      	mov	r3, r0
    192a:	461a      	mov	r2, r3
    192c:	687b      	ldr	r3, [r7, #4]
    192e:	4413      	add	r3, r2
    1930:	607b      	str	r3, [r7, #4]
      break;
    1932:	e03d      	b.n	19b0 <TestTableFct2()+0xcc>
    case 1u:
      accu += TableFct1(); // 1
    1934:	f7ff ff10 	bl	1758 <TableFct1()>
    1938:	4603      	mov	r3, r0
    193a:	461a      	mov	r2, r3
    193c:	687b      	ldr	r3, [r7, #4]
    193e:	4413      	add	r3, r2
    1940:	607b      	str	r3, [r7, #4]
      break;
    1942:	e035      	b.n	19b0 <TestTableFct2()+0xcc>
    case 2u:
      accu += TableFct2(); // 3
    1944:	f7ff ff19 	bl	177a <TableFct2()>
    1948:	4603      	mov	r3, r0
    194a:	461a      	mov	r2, r3
    194c:	687b      	ldr	r3, [r7, #4]
    194e:	4413      	add	r3, r2
    1950:	607b      	str	r3, [r7, #4]
      break;
    1952:	e02d      	b.n	19b0 <TestTableFct2()+0xcc>
    case 3u:
      accu += TableFct3(); // 6
    1954:	f7ff ff1d 	bl	1792 <TableFct3()>
    1958:	4603      	mov	r3, r0
    195a:	461a      	mov	r2, r3
    195c:	687b      	ldr	r3, [r7, #4]
    195e:	4413      	add	r3, r2
    1960:	607b      	str	r3, [r7, #4]
      break;
    1962:	e025      	b.n	19b0 <TestTableFct2()+0xcc>
    case 4u:
      accu += TableFct4(); // 10
    1964:	f7ff ff21 	bl	17aa <TableFct4()>
    1968:	4603      	mov	r3, r0
    196a:	461a      	mov	r2, r3
    196c:	687b      	ldr	r3, [r7, #4]
    196e:	4413      	add	r3, r2
    1970:	607b      	str	r3, [r7, #4]
      break;
    1972:	e01d      	b.n	19b0 <TestTableFct2()+0xcc>
    case 5u:
      accu += TableFct5(); // 15
    1974:	f7ff ff25 	bl	17c2 <TableFct5()>
    1978:	4603      	mov	r3, r0
    197a:	461a      	mov	r2, r3
    197c:	687b      	ldr	r3, [r7, #4]
    197e:	4413      	add	r3, r2
    1980:	607b      	str	r3, [r7, #4]
      break;
    1982:	e015      	b.n	19b0 <TestTableFct2()+0xcc>
    case 6u:
      accu += TableFct6(); // 21
    1984:	f7ff ff29 	bl	17da <TableFct6()>
    1988:	4603      	mov	r3, r0
    198a:	461a      	mov	r2, r3
    198c:	687b      	ldr	r3, [r7, #4]
    198e:	4413      	add	r3, r2
    1990:	607b      	str	r3, [r7, #4]
      break;
    1992:	e00d      	b.n	19b0 <TestTableFct2()+0xcc>
    case 7u:
      accu += TableFct7(); // 28
    1994:	f7ff ff2d 	bl	17f2 <TableFct7()>
    1998:	4603      	mov	r3, r0
    199a:	461a      	mov	r2, r3
    199c:	687b      	ldr	r3, [r7, #4]
    199e:	4413      	add	r3, r2
    19a0:	607b      	str	r3, [r7, #4]
      break;
    19a2:	e005      	b.n	19b0 <TestTableFct2()+0xcc>
    default: // clearly an error
      assert(false);
    19a4:	4b07      	ldr	r3, [pc, #28]	; (19c4 <TestTableFct2()+0xe0>)
    19a6:	4a08      	ldr	r2, [pc, #32]	; (19c8 <TestTableFct2()+0xe4>)
    19a8:	2166      	movs	r1, #102	; 0x66
    19aa:	4808      	ldr	r0, [pc, #32]	; (19cc <TestTableFct2()+0xe8>)
    19ac:	f00a f890 	bl	bad0 <__assert_func>
  for (uint8_t i = 0; i < 8; ++i) {
    19b0:	78fb      	ldrb	r3, [r7, #3]
    19b2:	3301      	adds	r3, #1
    19b4:	70fb      	strb	r3, [r7, #3]
    19b6:	e79c      	b.n	18f2 <TestTableFct2()+0xe>
      break;
    }
  }

  return accu;
    19b8:	687b      	ldr	r3, [r7, #4]
}
    19ba:	4618      	mov	r0, r3
    19bc:	3708      	adds	r7, #8
    19be:	46bd      	mov	sp, r7
    19c0:	bd80      	pop	{r7, pc}
    19c2:	bf00      	nop
    19c4:	00017ee4 	.word	0x00017ee4
    19c8:	00017eec 	.word	0x00017eec
    19cc:	00017f08 	.word	0x00017f08

000019d0 <TestSwitchCase()>:

void TestSwitchCase() {
    19d0:	b580      	push	{r7, lr}
    19d2:	af00      	add	r7, sp, #0
  printf("# Test: Switch/case\n");
    19d4:	4813      	ldr	r0, [pc, #76]	; (1a24 <TestSwitchCase()+0x54>)
    19d6:	f00b f921 	bl	cc1c <puts>
  assert(TestTableFct1('s') == 4u);
    19da:	2073      	movs	r0, #115	; 0x73
    19dc:	f7ff ff1a 	bl	1814 <TestTableFct1(char)>
    19e0:	4603      	mov	r3, r0
    19e2:	2b04      	cmp	r3, #4
    19e4:	d005      	beq.n	19f2 <TestSwitchCase()+0x22>
    19e6:	4b10      	ldr	r3, [pc, #64]	; (1a28 <TestSwitchCase()+0x58>)
    19e8:	4a10      	ldr	r2, [pc, #64]	; (1a2c <TestSwitchCase()+0x5c>)
    19ea:	2170      	movs	r1, #112	; 0x70
    19ec:	4810      	ldr	r0, [pc, #64]	; (1a30 <TestSwitchCase()+0x60>)
    19ee:	f00a f86f 	bl	bad0 <__assert_func>
  assert(TestTableFct1('h') == 1u);
    19f2:	2068      	movs	r0, #104	; 0x68
    19f4:	f7ff ff0e 	bl	1814 <TestTableFct1(char)>
    19f8:	4603      	mov	r3, r0
    19fa:	2b01      	cmp	r3, #1
    19fc:	d005      	beq.n	1a0a <TestSwitchCase()+0x3a>
    19fe:	4b0d      	ldr	r3, [pc, #52]	; (1a34 <TestSwitchCase()+0x64>)
    1a00:	4a0a      	ldr	r2, [pc, #40]	; (1a2c <TestSwitchCase()+0x5c>)
    1a02:	2171      	movs	r1, #113	; 0x71
    1a04:	480a      	ldr	r0, [pc, #40]	; (1a30 <TestSwitchCase()+0x60>)
    1a06:	f00a f863 	bl	bad0 <__assert_func>
  assert(TestTableFct2() == 28u);
    1a0a:	f7ff ff6b 	bl	18e4 <TestTableFct2()>
    1a0e:	4603      	mov	r3, r0
    1a10:	2b1c      	cmp	r3, #28
    1a12:	d005      	beq.n	1a20 <TestSwitchCase()+0x50>
    1a14:	4b08      	ldr	r3, [pc, #32]	; (1a38 <TestSwitchCase()+0x68>)
    1a16:	4a05      	ldr	r2, [pc, #20]	; (1a2c <TestSwitchCase()+0x5c>)
    1a18:	2172      	movs	r1, #114	; 0x72
    1a1a:	4805      	ldr	r0, [pc, #20]	; (1a30 <TestSwitchCase()+0x60>)
    1a1c:	f00a f858 	bl	bad0 <__assert_func>
    1a20:	bf00      	nop
    1a22:	bd80      	pop	{r7, pc}
    1a24:	00017f54 	.word	0x00017f54
    1a28:	00017f68 	.word	0x00017f68
    1a2c:	00017f84 	.word	0x00017f84
    1a30:	00017f08 	.word	0x00017f08
    1a34:	00017f9c 	.word	0x00017f9c
    1a38:	00017fb8 	.word	0x00017fb8

00001a3c <Fibonacci(int)>:
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

// Recursive fibonacci algorithm
int Fibonacci(int n) {
    1a3c:	b590      	push	{r4, r7, lr}
    1a3e:	b083      	sub	sp, #12
    1a40:	af00      	add	r7, sp, #0
    1a42:	6078      	str	r0, [r7, #4]
  if (n <= 1) {
    1a44:	687b      	ldr	r3, [r7, #4]
    1a46:	2b01      	cmp	r3, #1
    1a48:	dc01      	bgt.n	1a4e <Fibonacci(int)+0x12>
    return n;
    1a4a:	687b      	ldr	r3, [r7, #4]
    1a4c:	e00c      	b.n	1a68 <Fibonacci(int)+0x2c>
  } else {
    return Fibonacci(n - 1) + Fibonacci(n - 2);
    1a4e:	687b      	ldr	r3, [r7, #4]
    1a50:	3b01      	subs	r3, #1
    1a52:	4618      	mov	r0, r3
    1a54:	f7ff fff2 	bl	1a3c <Fibonacci(int)>
    1a58:	4604      	mov	r4, r0
    1a5a:	687b      	ldr	r3, [r7, #4]
    1a5c:	3b02      	subs	r3, #2
    1a5e:	4618      	mov	r0, r3
    1a60:	f7ff ffec 	bl	1a3c <Fibonacci(int)>
    1a64:	4603      	mov	r3, r0
    1a66:	4423      	add	r3, r4
  }
}
    1a68:	4618      	mov	r0, r3
    1a6a:	370c      	adds	r7, #12
    1a6c:	46bd      	mov	sp, r7
    1a6e:	bd90      	pop	{r4, r7, pc}

00001a70 <TestFibonacci()>:

void TestFibonacci() {
    1a70:	b580      	push	{r7, lr}
    1a72:	af00      	add	r7, sp, #0
  printf("# Test: Fibonacci (recursive)\n");
    1a74:	482c      	ldr	r0, [pc, #176]	; (1b28 <TestFibonacci()+0xb8>)
    1a76:	f00b f8d1 	bl	cc1c <puts>
  assert(Fibonacci(5) == 5u);
    1a7a:	2005      	movs	r0, #5
    1a7c:	f7ff ffde 	bl	1a3c <Fibonacci(int)>
    1a80:	4603      	mov	r3, r0
    1a82:	2b05      	cmp	r3, #5
    1a84:	d005      	beq.n	1a92 <TestFibonacci()+0x22>
    1a86:	4b29      	ldr	r3, [pc, #164]	; (1b2c <TestFibonacci()+0xbc>)
    1a88:	4a29      	ldr	r2, [pc, #164]	; (1b30 <TestFibonacci()+0xc0>)
    1a8a:	2111      	movs	r1, #17
    1a8c:	4829      	ldr	r0, [pc, #164]	; (1b34 <TestFibonacci()+0xc4>)
    1a8e:	f00a f81f 	bl	bad0 <__assert_func>
  assert(Fibonacci(6) == 8u);
    1a92:	2006      	movs	r0, #6
    1a94:	f7ff ffd2 	bl	1a3c <Fibonacci(int)>
    1a98:	4603      	mov	r3, r0
    1a9a:	2b08      	cmp	r3, #8
    1a9c:	d005      	beq.n	1aaa <TestFibonacci()+0x3a>
    1a9e:	4b26      	ldr	r3, [pc, #152]	; (1b38 <TestFibonacci()+0xc8>)
    1aa0:	4a23      	ldr	r2, [pc, #140]	; (1b30 <TestFibonacci()+0xc0>)
    1aa2:	2112      	movs	r1, #18
    1aa4:	4823      	ldr	r0, [pc, #140]	; (1b34 <TestFibonacci()+0xc4>)
    1aa6:	f00a f813 	bl	bad0 <__assert_func>
  assert(Fibonacci(7) == 13u);
    1aaa:	2007      	movs	r0, #7
    1aac:	f7ff ffc6 	bl	1a3c <Fibonacci(int)>
    1ab0:	4603      	mov	r3, r0
    1ab2:	2b0d      	cmp	r3, #13
    1ab4:	d005      	beq.n	1ac2 <TestFibonacci()+0x52>
    1ab6:	4b21      	ldr	r3, [pc, #132]	; (1b3c <TestFibonacci()+0xcc>)
    1ab8:	4a1d      	ldr	r2, [pc, #116]	; (1b30 <TestFibonacci()+0xc0>)
    1aba:	2113      	movs	r1, #19
    1abc:	481d      	ldr	r0, [pc, #116]	; (1b34 <TestFibonacci()+0xc4>)
    1abe:	f00a f807 	bl	bad0 <__assert_func>
  assert(Fibonacci(8) == 21u);
    1ac2:	2008      	movs	r0, #8
    1ac4:	f7ff ffba 	bl	1a3c <Fibonacci(int)>
    1ac8:	4603      	mov	r3, r0
    1aca:	2b15      	cmp	r3, #21
    1acc:	d005      	beq.n	1ada <TestFibonacci()+0x6a>
    1ace:	4b1c      	ldr	r3, [pc, #112]	; (1b40 <TestFibonacci()+0xd0>)
    1ad0:	4a17      	ldr	r2, [pc, #92]	; (1b30 <TestFibonacci()+0xc0>)
    1ad2:	2114      	movs	r1, #20
    1ad4:	4817      	ldr	r0, [pc, #92]	; (1b34 <TestFibonacci()+0xc4>)
    1ad6:	f009 fffb 	bl	bad0 <__assert_func>
  assert(Fibonacci(7) == 13u);
    1ada:	2007      	movs	r0, #7
    1adc:	f7ff ffae 	bl	1a3c <Fibonacci(int)>
    1ae0:	4603      	mov	r3, r0
    1ae2:	2b0d      	cmp	r3, #13
    1ae4:	d005      	beq.n	1af2 <TestFibonacci()+0x82>
    1ae6:	4b15      	ldr	r3, [pc, #84]	; (1b3c <TestFibonacci()+0xcc>)
    1ae8:	4a11      	ldr	r2, [pc, #68]	; (1b30 <TestFibonacci()+0xc0>)
    1aea:	2115      	movs	r1, #21
    1aec:	4811      	ldr	r0, [pc, #68]	; (1b34 <TestFibonacci()+0xc4>)
    1aee:	f009 ffef 	bl	bad0 <__assert_func>
  assert(Fibonacci(6) == 8u);
    1af2:	2006      	movs	r0, #6
    1af4:	f7ff ffa2 	bl	1a3c <Fibonacci(int)>
    1af8:	4603      	mov	r3, r0
    1afa:	2b08      	cmp	r3, #8
    1afc:	d005      	beq.n	1b0a <TestFibonacci()+0x9a>
    1afe:	4b0e      	ldr	r3, [pc, #56]	; (1b38 <TestFibonacci()+0xc8>)
    1b00:	4a0b      	ldr	r2, [pc, #44]	; (1b30 <TestFibonacci()+0xc0>)
    1b02:	2116      	movs	r1, #22
    1b04:	480b      	ldr	r0, [pc, #44]	; (1b34 <TestFibonacci()+0xc4>)
    1b06:	f009 ffe3 	bl	bad0 <__assert_func>
  assert(Fibonacci(5) == 5u);
    1b0a:	2005      	movs	r0, #5
    1b0c:	f7ff ff96 	bl	1a3c <Fibonacci(int)>
    1b10:	4603      	mov	r3, r0
    1b12:	2b05      	cmp	r3, #5
    1b14:	d005      	beq.n	1b22 <TestFibonacci()+0xb2>
    1b16:	4b05      	ldr	r3, [pc, #20]	; (1b2c <TestFibonacci()+0xbc>)
    1b18:	4a05      	ldr	r2, [pc, #20]	; (1b30 <TestFibonacci()+0xc0>)
    1b1a:	2117      	movs	r1, #23
    1b1c:	4805      	ldr	r0, [pc, #20]	; (1b34 <TestFibonacci()+0xc4>)
    1b1e:	f009 ffd7 	bl	bad0 <__assert_func>
    1b22:	bf00      	nop
    1b24:	bd80      	pop	{r7, pc}
    1b26:	bf00      	nop
    1b28:	00017fd0 	.word	0x00017fd0
    1b2c:	00017ff0 	.word	0x00017ff0
    1b30:	00018004 	.word	0x00018004
    1b34:	0001801c 	.word	0x0001801c
    1b38:	00018064 	.word	0x00018064
    1b3c:	00018078 	.word	0x00018078
    1b40:	0001808c 	.word	0x0001808c

00001b44 <TestQuicksort()>:
    QuickSort(arr, low, pi - 1);
    QuickSort(arr, pi + 1, high);
  }
}

void TestQuicksort() {
    1b44:	b5b0      	push	{r4, r5, r7, lr}
    1b46:	b096      	sub	sp, #88	; 0x58
    1b48:	af00      	add	r7, sp, #0
  printf("# Test: Quicksort\n");
    1b4a:	4899      	ldr	r0, [pc, #612]	; (1db0 <TestQuicksort()+0x26c>)
    1b4c:	f00b f866 	bl	cc1c <puts>

  // 32-bit
  volatile uint32_t arr32[] = {9, 3, 7, 1, 5, 4, 8, 6, 2, 0};
    1b50:	4b98      	ldr	r3, [pc, #608]	; (1db4 <TestQuicksort()+0x270>)
    1b52:	f107 0424 	add.w	r4, r7, #36	; 0x24
    1b56:	461d      	mov	r5, r3
    1b58:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    1b5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    1b5c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    1b5e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    1b60:	e895 0003 	ldmia.w	r5, {r0, r1}
    1b64:	e884 0003 	stmia.w	r4, {r0, r1}
  int n32 = sizeof(arr32) / sizeof(arr32[0]);
    1b68:	230a      	movs	r3, #10
    1b6a:	657b      	str	r3, [r7, #84]	; 0x54
  QuickSort(arr32, 0, n32 - 1);
    1b6c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    1b6e:	1e5a      	subs	r2, r3, #1
    1b70:	f107 0324 	add.w	r3, r7, #36	; 0x24
    1b74:	2100      	movs	r1, #0
    1b76:	4618      	mov	r0, r3
    1b78:	f000 f992 	bl	1ea0 <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)>
  assert(arr32[0] == 0u);
    1b7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1b7e:	2b00      	cmp	r3, #0
    1b80:	d005      	beq.n	1b8e <TestQuicksort()+0x4a>
    1b82:	4b8d      	ldr	r3, [pc, #564]	; (1db8 <TestQuicksort()+0x274>)
    1b84:	4a8d      	ldr	r2, [pc, #564]	; (1dbc <TestQuicksort()+0x278>)
    1b86:	212b      	movs	r1, #43	; 0x2b
    1b88:	488d      	ldr	r0, [pc, #564]	; (1dc0 <TestQuicksort()+0x27c>)
    1b8a:	f009 ffa1 	bl	bad0 <__assert_func>
  assert(arr32[1] == 1u);
    1b8e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1b90:	2b01      	cmp	r3, #1
    1b92:	d005      	beq.n	1ba0 <TestQuicksort()+0x5c>
    1b94:	4b8b      	ldr	r3, [pc, #556]	; (1dc4 <TestQuicksort()+0x280>)
    1b96:	4a89      	ldr	r2, [pc, #548]	; (1dbc <TestQuicksort()+0x278>)
    1b98:	212c      	movs	r1, #44	; 0x2c
    1b9a:	4889      	ldr	r0, [pc, #548]	; (1dc0 <TestQuicksort()+0x27c>)
    1b9c:	f009 ff98 	bl	bad0 <__assert_func>
  assert(arr32[2] == 2u);
    1ba0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1ba2:	2b02      	cmp	r3, #2
    1ba4:	d005      	beq.n	1bb2 <TestQuicksort()+0x6e>
    1ba6:	4b88      	ldr	r3, [pc, #544]	; (1dc8 <TestQuicksort()+0x284>)
    1ba8:	4a84      	ldr	r2, [pc, #528]	; (1dbc <TestQuicksort()+0x278>)
    1baa:	212d      	movs	r1, #45	; 0x2d
    1bac:	4884      	ldr	r0, [pc, #528]	; (1dc0 <TestQuicksort()+0x27c>)
    1bae:	f009 ff8f 	bl	bad0 <__assert_func>
  assert(arr32[3] == 3u);
    1bb2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    1bb4:	2b03      	cmp	r3, #3
    1bb6:	d005      	beq.n	1bc4 <TestQuicksort()+0x80>
    1bb8:	4b84      	ldr	r3, [pc, #528]	; (1dcc <TestQuicksort()+0x288>)
    1bba:	4a80      	ldr	r2, [pc, #512]	; (1dbc <TestQuicksort()+0x278>)
    1bbc:	212e      	movs	r1, #46	; 0x2e
    1bbe:	4880      	ldr	r0, [pc, #512]	; (1dc0 <TestQuicksort()+0x27c>)
    1bc0:	f009 ff86 	bl	bad0 <__assert_func>
  assert(arr32[4] == 4u);
    1bc4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    1bc6:	2b04      	cmp	r3, #4
    1bc8:	d005      	beq.n	1bd6 <TestQuicksort()+0x92>
    1bca:	4b81      	ldr	r3, [pc, #516]	; (1dd0 <TestQuicksort()+0x28c>)
    1bcc:	4a7b      	ldr	r2, [pc, #492]	; (1dbc <TestQuicksort()+0x278>)
    1bce:	212f      	movs	r1, #47	; 0x2f
    1bd0:	487b      	ldr	r0, [pc, #492]	; (1dc0 <TestQuicksort()+0x27c>)
    1bd2:	f009 ff7d 	bl	bad0 <__assert_func>
  assert(arr32[5] == 5u);
    1bd6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    1bd8:	2b05      	cmp	r3, #5
    1bda:	d005      	beq.n	1be8 <TestQuicksort()+0xa4>
    1bdc:	4b7d      	ldr	r3, [pc, #500]	; (1dd4 <TestQuicksort()+0x290>)
    1bde:	4a77      	ldr	r2, [pc, #476]	; (1dbc <TestQuicksort()+0x278>)
    1be0:	2130      	movs	r1, #48	; 0x30
    1be2:	4877      	ldr	r0, [pc, #476]	; (1dc0 <TestQuicksort()+0x27c>)
    1be4:	f009 ff74 	bl	bad0 <__assert_func>
  assert(arr32[6] == 6u);
    1be8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1bea:	2b06      	cmp	r3, #6
    1bec:	d005      	beq.n	1bfa <TestQuicksort()+0xb6>
    1bee:	4b7a      	ldr	r3, [pc, #488]	; (1dd8 <TestQuicksort()+0x294>)
    1bf0:	4a72      	ldr	r2, [pc, #456]	; (1dbc <TestQuicksort()+0x278>)
    1bf2:	2131      	movs	r1, #49	; 0x31
    1bf4:	4872      	ldr	r0, [pc, #456]	; (1dc0 <TestQuicksort()+0x27c>)
    1bf6:	f009 ff6b 	bl	bad0 <__assert_func>
  assert(arr32[7] == 7u);
    1bfa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    1bfc:	2b07      	cmp	r3, #7
    1bfe:	d005      	beq.n	1c0c <TestQuicksort()+0xc8>
    1c00:	4b76      	ldr	r3, [pc, #472]	; (1ddc <TestQuicksort()+0x298>)
    1c02:	4a6e      	ldr	r2, [pc, #440]	; (1dbc <TestQuicksort()+0x278>)
    1c04:	2132      	movs	r1, #50	; 0x32
    1c06:	486e      	ldr	r0, [pc, #440]	; (1dc0 <TestQuicksort()+0x27c>)
    1c08:	f009 ff62 	bl	bad0 <__assert_func>
  assert(arr32[8] == 8u);
    1c0c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    1c0e:	2b08      	cmp	r3, #8
    1c10:	d005      	beq.n	1c1e <TestQuicksort()+0xda>
    1c12:	4b73      	ldr	r3, [pc, #460]	; (1de0 <TestQuicksort()+0x29c>)
    1c14:	4a69      	ldr	r2, [pc, #420]	; (1dbc <TestQuicksort()+0x278>)
    1c16:	2133      	movs	r1, #51	; 0x33
    1c18:	4869      	ldr	r0, [pc, #420]	; (1dc0 <TestQuicksort()+0x27c>)
    1c1a:	f009 ff59 	bl	bad0 <__assert_func>
  assert(arr32[9] == 9u);
    1c1e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    1c20:	2b09      	cmp	r3, #9
    1c22:	d005      	beq.n	1c30 <TestQuicksort()+0xec>
    1c24:	4b6f      	ldr	r3, [pc, #444]	; (1de4 <TestQuicksort()+0x2a0>)
    1c26:	4a65      	ldr	r2, [pc, #404]	; (1dbc <TestQuicksort()+0x278>)
    1c28:	2134      	movs	r1, #52	; 0x34
    1c2a:	4865      	ldr	r0, [pc, #404]	; (1dc0 <TestQuicksort()+0x27c>)
    1c2c:	f009 ff50 	bl	bad0 <__assert_func>

  // 16-bit
  volatile uint16_t arr16[] = {9, 3, 7, 1, 5, 4, 8, 6, 2, 0};
    1c30:	4b6d      	ldr	r3, [pc, #436]	; (1de8 <TestQuicksort()+0x2a4>)
    1c32:	f107 0410 	add.w	r4, r7, #16
    1c36:	461d      	mov	r5, r3
    1c38:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    1c3a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    1c3c:	682b      	ldr	r3, [r5, #0]
    1c3e:	6023      	str	r3, [r4, #0]
  int n16 = sizeof(arr16) / sizeof(arr16[0]);
    1c40:	230a      	movs	r3, #10
    1c42:	653b      	str	r3, [r7, #80]	; 0x50
  QuickSort(arr16, 0, n16 - 1);
    1c44:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    1c46:	1e5a      	subs	r2, r3, #1
    1c48:	f107 0310 	add.w	r3, r7, #16
    1c4c:	2100      	movs	r1, #0
    1c4e:	4618      	mov	r0, r3
    1c50:	f000 f949 	bl	1ee6 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)>
  assert(arr16[0] == 0u);
    1c54:	8a3b      	ldrh	r3, [r7, #16]
    1c56:	b29b      	uxth	r3, r3
    1c58:	2b00      	cmp	r3, #0
    1c5a:	d005      	beq.n	1c68 <TestQuicksort()+0x124>
    1c5c:	4b63      	ldr	r3, [pc, #396]	; (1dec <TestQuicksort()+0x2a8>)
    1c5e:	4a57      	ldr	r2, [pc, #348]	; (1dbc <TestQuicksort()+0x278>)
    1c60:	213a      	movs	r1, #58	; 0x3a
    1c62:	4857      	ldr	r0, [pc, #348]	; (1dc0 <TestQuicksort()+0x27c>)
    1c64:	f009 ff34 	bl	bad0 <__assert_func>
  assert(arr16[1] == 1u);
    1c68:	8a7b      	ldrh	r3, [r7, #18]
    1c6a:	b29b      	uxth	r3, r3
    1c6c:	2b01      	cmp	r3, #1
    1c6e:	d005      	beq.n	1c7c <TestQuicksort()+0x138>
    1c70:	4b5f      	ldr	r3, [pc, #380]	; (1df0 <TestQuicksort()+0x2ac>)
    1c72:	4a52      	ldr	r2, [pc, #328]	; (1dbc <TestQuicksort()+0x278>)
    1c74:	213b      	movs	r1, #59	; 0x3b
    1c76:	4852      	ldr	r0, [pc, #328]	; (1dc0 <TestQuicksort()+0x27c>)
    1c78:	f009 ff2a 	bl	bad0 <__assert_func>
  assert(arr16[2] == 2u);
    1c7c:	8abb      	ldrh	r3, [r7, #20]
    1c7e:	b29b      	uxth	r3, r3
    1c80:	2b02      	cmp	r3, #2
    1c82:	d005      	beq.n	1c90 <TestQuicksort()+0x14c>
    1c84:	4b5b      	ldr	r3, [pc, #364]	; (1df4 <TestQuicksort()+0x2b0>)
    1c86:	4a4d      	ldr	r2, [pc, #308]	; (1dbc <TestQuicksort()+0x278>)
    1c88:	213c      	movs	r1, #60	; 0x3c
    1c8a:	484d      	ldr	r0, [pc, #308]	; (1dc0 <TestQuicksort()+0x27c>)
    1c8c:	f009 ff20 	bl	bad0 <__assert_func>
  assert(arr16[3] == 3u);
    1c90:	8afb      	ldrh	r3, [r7, #22]
    1c92:	b29b      	uxth	r3, r3
    1c94:	2b03      	cmp	r3, #3
    1c96:	d005      	beq.n	1ca4 <TestQuicksort()+0x160>
    1c98:	4b57      	ldr	r3, [pc, #348]	; (1df8 <TestQuicksort()+0x2b4>)
    1c9a:	4a48      	ldr	r2, [pc, #288]	; (1dbc <TestQuicksort()+0x278>)
    1c9c:	213d      	movs	r1, #61	; 0x3d
    1c9e:	4848      	ldr	r0, [pc, #288]	; (1dc0 <TestQuicksort()+0x27c>)
    1ca0:	f009 ff16 	bl	bad0 <__assert_func>
  assert(arr16[4] == 4u);
    1ca4:	8b3b      	ldrh	r3, [r7, #24]
    1ca6:	b29b      	uxth	r3, r3
    1ca8:	2b04      	cmp	r3, #4
    1caa:	d005      	beq.n	1cb8 <TestQuicksort()+0x174>
    1cac:	4b53      	ldr	r3, [pc, #332]	; (1dfc <TestQuicksort()+0x2b8>)
    1cae:	4a43      	ldr	r2, [pc, #268]	; (1dbc <TestQuicksort()+0x278>)
    1cb0:	213e      	movs	r1, #62	; 0x3e
    1cb2:	4843      	ldr	r0, [pc, #268]	; (1dc0 <TestQuicksort()+0x27c>)
    1cb4:	f009 ff0c 	bl	bad0 <__assert_func>
  assert(arr16[5] == 5u);
    1cb8:	8b7b      	ldrh	r3, [r7, #26]
    1cba:	b29b      	uxth	r3, r3
    1cbc:	2b05      	cmp	r3, #5
    1cbe:	d005      	beq.n	1ccc <TestQuicksort()+0x188>
    1cc0:	4b4f      	ldr	r3, [pc, #316]	; (1e00 <TestQuicksort()+0x2bc>)
    1cc2:	4a3e      	ldr	r2, [pc, #248]	; (1dbc <TestQuicksort()+0x278>)
    1cc4:	213f      	movs	r1, #63	; 0x3f
    1cc6:	483e      	ldr	r0, [pc, #248]	; (1dc0 <TestQuicksort()+0x27c>)
    1cc8:	f009 ff02 	bl	bad0 <__assert_func>
  assert(arr16[6] == 6u);
    1ccc:	8bbb      	ldrh	r3, [r7, #28]
    1cce:	b29b      	uxth	r3, r3
    1cd0:	2b06      	cmp	r3, #6
    1cd2:	d005      	beq.n	1ce0 <TestQuicksort()+0x19c>
    1cd4:	4b4b      	ldr	r3, [pc, #300]	; (1e04 <TestQuicksort()+0x2c0>)
    1cd6:	4a39      	ldr	r2, [pc, #228]	; (1dbc <TestQuicksort()+0x278>)
    1cd8:	2140      	movs	r1, #64	; 0x40
    1cda:	4839      	ldr	r0, [pc, #228]	; (1dc0 <TestQuicksort()+0x27c>)
    1cdc:	f009 fef8 	bl	bad0 <__assert_func>
  assert(arr16[7] == 7u);
    1ce0:	8bfb      	ldrh	r3, [r7, #30]
    1ce2:	b29b      	uxth	r3, r3
    1ce4:	2b07      	cmp	r3, #7
    1ce6:	d005      	beq.n	1cf4 <TestQuicksort()+0x1b0>
    1ce8:	4b47      	ldr	r3, [pc, #284]	; (1e08 <TestQuicksort()+0x2c4>)
    1cea:	4a34      	ldr	r2, [pc, #208]	; (1dbc <TestQuicksort()+0x278>)
    1cec:	2141      	movs	r1, #65	; 0x41
    1cee:	4834      	ldr	r0, [pc, #208]	; (1dc0 <TestQuicksort()+0x27c>)
    1cf0:	f009 feee 	bl	bad0 <__assert_func>
  assert(arr16[8] == 8u);
    1cf4:	8c3b      	ldrh	r3, [r7, #32]
    1cf6:	b29b      	uxth	r3, r3
    1cf8:	2b08      	cmp	r3, #8
    1cfa:	d005      	beq.n	1d08 <TestQuicksort()+0x1c4>
    1cfc:	4b43      	ldr	r3, [pc, #268]	; (1e0c <TestQuicksort()+0x2c8>)
    1cfe:	4a2f      	ldr	r2, [pc, #188]	; (1dbc <TestQuicksort()+0x278>)
    1d00:	2142      	movs	r1, #66	; 0x42
    1d02:	482f      	ldr	r0, [pc, #188]	; (1dc0 <TestQuicksort()+0x27c>)
    1d04:	f009 fee4 	bl	bad0 <__assert_func>
  assert(arr16[9] == 9u);
    1d08:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
    1d0a:	b29b      	uxth	r3, r3
    1d0c:	2b09      	cmp	r3, #9
    1d0e:	d005      	beq.n	1d1c <TestQuicksort()+0x1d8>
    1d10:	4b3f      	ldr	r3, [pc, #252]	; (1e10 <TestQuicksort()+0x2cc>)
    1d12:	4a2a      	ldr	r2, [pc, #168]	; (1dbc <TestQuicksort()+0x278>)
    1d14:	2143      	movs	r1, #67	; 0x43
    1d16:	482a      	ldr	r0, [pc, #168]	; (1dc0 <TestQuicksort()+0x27c>)
    1d18:	f009 feda 	bl	bad0 <__assert_func>

  // 8-bit
  volatile uint8_t arr8[] = {9, 3, 7, 1, 5, 4, 8, 6, 2, 0};
    1d1c:	4a3d      	ldr	r2, [pc, #244]	; (1e14 <TestQuicksort()+0x2d0>)
    1d1e:	1d3b      	adds	r3, r7, #4
    1d20:	ca07      	ldmia	r2, {r0, r1, r2}
    1d22:	c303      	stmia	r3!, {r0, r1}
    1d24:	801a      	strh	r2, [r3, #0]
  int n8 = sizeof(arr8) / sizeof(arr8[0]);
    1d26:	230a      	movs	r3, #10
    1d28:	64fb      	str	r3, [r7, #76]	; 0x4c
  QuickSort(arr8, 0, n8 - 1);
    1d2a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    1d2c:	1e5a      	subs	r2, r3, #1
    1d2e:	1d3b      	adds	r3, r7, #4
    1d30:	2100      	movs	r1, #0
    1d32:	4618      	mov	r0, r3
    1d34:	f000 f8fa 	bl	1f2c <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)>
  assert(arr8[0] == 0u);
    1d38:	793b      	ldrb	r3, [r7, #4]
    1d3a:	b2db      	uxtb	r3, r3
    1d3c:	2b00      	cmp	r3, #0
    1d3e:	d005      	beq.n	1d4c <TestQuicksort()+0x208>
    1d40:	4b35      	ldr	r3, [pc, #212]	; (1e18 <TestQuicksort()+0x2d4>)
    1d42:	4a1e      	ldr	r2, [pc, #120]	; (1dbc <TestQuicksort()+0x278>)
    1d44:	2149      	movs	r1, #73	; 0x49
    1d46:	481e      	ldr	r0, [pc, #120]	; (1dc0 <TestQuicksort()+0x27c>)
    1d48:	f009 fec2 	bl	bad0 <__assert_func>
  assert(arr8[1] == 1u);
    1d4c:	797b      	ldrb	r3, [r7, #5]
    1d4e:	b2db      	uxtb	r3, r3
    1d50:	2b01      	cmp	r3, #1
    1d52:	d005      	beq.n	1d60 <TestQuicksort()+0x21c>
    1d54:	4b31      	ldr	r3, [pc, #196]	; (1e1c <TestQuicksort()+0x2d8>)
    1d56:	4a19      	ldr	r2, [pc, #100]	; (1dbc <TestQuicksort()+0x278>)
    1d58:	214a      	movs	r1, #74	; 0x4a
    1d5a:	4819      	ldr	r0, [pc, #100]	; (1dc0 <TestQuicksort()+0x27c>)
    1d5c:	f009 feb8 	bl	bad0 <__assert_func>
  assert(arr8[2] == 2u);
    1d60:	79bb      	ldrb	r3, [r7, #6]
    1d62:	b2db      	uxtb	r3, r3
    1d64:	2b02      	cmp	r3, #2
    1d66:	d005      	beq.n	1d74 <TestQuicksort()+0x230>
    1d68:	4b2d      	ldr	r3, [pc, #180]	; (1e20 <TestQuicksort()+0x2dc>)
    1d6a:	4a14      	ldr	r2, [pc, #80]	; (1dbc <TestQuicksort()+0x278>)
    1d6c:	214b      	movs	r1, #75	; 0x4b
    1d6e:	4814      	ldr	r0, [pc, #80]	; (1dc0 <TestQuicksort()+0x27c>)
    1d70:	f009 feae 	bl	bad0 <__assert_func>
  assert(arr8[3] == 3u);
    1d74:	79fb      	ldrb	r3, [r7, #7]
    1d76:	b2db      	uxtb	r3, r3
    1d78:	2b03      	cmp	r3, #3
    1d7a:	d005      	beq.n	1d88 <TestQuicksort()+0x244>
    1d7c:	4b29      	ldr	r3, [pc, #164]	; (1e24 <TestQuicksort()+0x2e0>)
    1d7e:	4a0f      	ldr	r2, [pc, #60]	; (1dbc <TestQuicksort()+0x278>)
    1d80:	214c      	movs	r1, #76	; 0x4c
    1d82:	480f      	ldr	r0, [pc, #60]	; (1dc0 <TestQuicksort()+0x27c>)
    1d84:	f009 fea4 	bl	bad0 <__assert_func>
  assert(arr8[4] == 4u);
    1d88:	7a3b      	ldrb	r3, [r7, #8]
    1d8a:	b2db      	uxtb	r3, r3
    1d8c:	2b04      	cmp	r3, #4
    1d8e:	d005      	beq.n	1d9c <TestQuicksort()+0x258>
    1d90:	4b25      	ldr	r3, [pc, #148]	; (1e28 <TestQuicksort()+0x2e4>)
    1d92:	4a0a      	ldr	r2, [pc, #40]	; (1dbc <TestQuicksort()+0x278>)
    1d94:	214d      	movs	r1, #77	; 0x4d
    1d96:	480a      	ldr	r0, [pc, #40]	; (1dc0 <TestQuicksort()+0x27c>)
    1d98:	f009 fe9a 	bl	bad0 <__assert_func>
  assert(arr8[5] == 5u);
    1d9c:	7a7b      	ldrb	r3, [r7, #9]
    1d9e:	b2db      	uxtb	r3, r3
    1da0:	2b05      	cmp	r3, #5
    1da2:	d045      	beq.n	1e30 <TestQuicksort()+0x2ec>
    1da4:	4b21      	ldr	r3, [pc, #132]	; (1e2c <TestQuicksort()+0x2e8>)
    1da6:	4a05      	ldr	r2, [pc, #20]	; (1dbc <TestQuicksort()+0x278>)
    1da8:	214e      	movs	r1, #78	; 0x4e
    1daa:	4805      	ldr	r0, [pc, #20]	; (1dc0 <TestQuicksort()+0x27c>)
    1dac:	f009 fe90 	bl	bad0 <__assert_func>
    1db0:	000180a0 	.word	0x000180a0
    1db4:	000182f4 	.word	0x000182f4
    1db8:	000180b4 	.word	0x000180b4
    1dbc:	000180c4 	.word	0x000180c4
    1dc0:	000180dc 	.word	0x000180dc
    1dc4:	00018124 	.word	0x00018124
    1dc8:	00018134 	.word	0x00018134
    1dcc:	00018144 	.word	0x00018144
    1dd0:	00018154 	.word	0x00018154
    1dd4:	00018164 	.word	0x00018164
    1dd8:	00018174 	.word	0x00018174
    1ddc:	00018184 	.word	0x00018184
    1de0:	00018194 	.word	0x00018194
    1de4:	000181a4 	.word	0x000181a4
    1de8:	0001831c 	.word	0x0001831c
    1dec:	000181b4 	.word	0x000181b4
    1df0:	000181c4 	.word	0x000181c4
    1df4:	000181d4 	.word	0x000181d4
    1df8:	000181e4 	.word	0x000181e4
    1dfc:	000181f4 	.word	0x000181f4
    1e00:	00018204 	.word	0x00018204
    1e04:	00018214 	.word	0x00018214
    1e08:	00018224 	.word	0x00018224
    1e0c:	00018234 	.word	0x00018234
    1e10:	00018244 	.word	0x00018244
    1e14:	00018330 	.word	0x00018330
    1e18:	00018254 	.word	0x00018254
    1e1c:	00018264 	.word	0x00018264
    1e20:	00018274 	.word	0x00018274
    1e24:	00018284 	.word	0x00018284
    1e28:	00018294 	.word	0x00018294
    1e2c:	000182a4 	.word	0x000182a4
  assert(arr8[6] == 6u);
    1e30:	7abb      	ldrb	r3, [r7, #10]
    1e32:	b2db      	uxtb	r3, r3
    1e34:	2b06      	cmp	r3, #6
    1e36:	d005      	beq.n	1e44 <TestQuicksort()+0x300>
    1e38:	4b13      	ldr	r3, [pc, #76]	; (1e88 <TestQuicksort()+0x344>)
    1e3a:	4a14      	ldr	r2, [pc, #80]	; (1e8c <TestQuicksort()+0x348>)
    1e3c:	214f      	movs	r1, #79	; 0x4f
    1e3e:	4814      	ldr	r0, [pc, #80]	; (1e90 <TestQuicksort()+0x34c>)
    1e40:	f009 fe46 	bl	bad0 <__assert_func>
  assert(arr8[7] == 7u);
    1e44:	7afb      	ldrb	r3, [r7, #11]
    1e46:	b2db      	uxtb	r3, r3
    1e48:	2b07      	cmp	r3, #7
    1e4a:	d005      	beq.n	1e58 <TestQuicksort()+0x314>
    1e4c:	4b11      	ldr	r3, [pc, #68]	; (1e94 <TestQuicksort()+0x350>)
    1e4e:	4a0f      	ldr	r2, [pc, #60]	; (1e8c <TestQuicksort()+0x348>)
    1e50:	2150      	movs	r1, #80	; 0x50
    1e52:	480f      	ldr	r0, [pc, #60]	; (1e90 <TestQuicksort()+0x34c>)
    1e54:	f009 fe3c 	bl	bad0 <__assert_func>
  assert(arr8[8] == 8u);
    1e58:	7b3b      	ldrb	r3, [r7, #12]
    1e5a:	b2db      	uxtb	r3, r3
    1e5c:	2b08      	cmp	r3, #8
    1e5e:	d005      	beq.n	1e6c <TestQuicksort()+0x328>
    1e60:	4b0d      	ldr	r3, [pc, #52]	; (1e98 <TestQuicksort()+0x354>)
    1e62:	4a0a      	ldr	r2, [pc, #40]	; (1e8c <TestQuicksort()+0x348>)
    1e64:	2151      	movs	r1, #81	; 0x51
    1e66:	480a      	ldr	r0, [pc, #40]	; (1e90 <TestQuicksort()+0x34c>)
    1e68:	f009 fe32 	bl	bad0 <__assert_func>
  assert(arr8[9] == 9u);
    1e6c:	7b7b      	ldrb	r3, [r7, #13]
    1e6e:	b2db      	uxtb	r3, r3
    1e70:	2b09      	cmp	r3, #9
    1e72:	d005      	beq.n	1e80 <TestQuicksort()+0x33c>
    1e74:	4b09      	ldr	r3, [pc, #36]	; (1e9c <TestQuicksort()+0x358>)
    1e76:	4a05      	ldr	r2, [pc, #20]	; (1e8c <TestQuicksort()+0x348>)
    1e78:	2152      	movs	r1, #82	; 0x52
    1e7a:	4805      	ldr	r0, [pc, #20]	; (1e90 <TestQuicksort()+0x34c>)
    1e7c:	f009 fe28 	bl	bad0 <__assert_func>
    1e80:	bf00      	nop
    1e82:	3758      	adds	r7, #88	; 0x58
    1e84:	46bd      	mov	sp, r7
    1e86:	bdb0      	pop	{r4, r5, r7, pc}
    1e88:	000182b4 	.word	0x000182b4
    1e8c:	000180c4 	.word	0x000180c4
    1e90:	000180dc 	.word	0x000180dc
    1e94:	000182c4 	.word	0x000182c4
    1e98:	000182d4 	.word	0x000182d4
    1e9c:	000182e4 	.word	0x000182e4

00001ea0 <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)>:
template <typename T> void QuickSort(T arr[], int low, int high) {
    1ea0:	b580      	push	{r7, lr}
    1ea2:	b086      	sub	sp, #24
    1ea4:	af00      	add	r7, sp, #0
    1ea6:	60f8      	str	r0, [r7, #12]
    1ea8:	60b9      	str	r1, [r7, #8]
    1eaa:	607a      	str	r2, [r7, #4]
  if (low < high) {
    1eac:	68ba      	ldr	r2, [r7, #8]
    1eae:	687b      	ldr	r3, [r7, #4]
    1eb0:	429a      	cmp	r2, r3
    1eb2:	da14      	bge.n	1ede <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)+0x3e>
    int pi = Partition(arr, low, high);
    1eb4:	687a      	ldr	r2, [r7, #4]
    1eb6:	68b9      	ldr	r1, [r7, #8]
    1eb8:	68f8      	ldr	r0, [r7, #12]
    1eba:	f000 f85a 	bl	1f72 <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)>
    1ebe:	4603      	mov	r3, r0
    1ec0:	617b      	str	r3, [r7, #20]
    QuickSort(arr, low, pi - 1);
    1ec2:	697b      	ldr	r3, [r7, #20]
    1ec4:	3b01      	subs	r3, #1
    1ec6:	461a      	mov	r2, r3
    1ec8:	68b9      	ldr	r1, [r7, #8]
    1eca:	68f8      	ldr	r0, [r7, #12]
    1ecc:	f7ff ffe8 	bl	1ea0 <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)>
    QuickSort(arr, pi + 1, high);
    1ed0:	697b      	ldr	r3, [r7, #20]
    1ed2:	3301      	adds	r3, #1
    1ed4:	687a      	ldr	r2, [r7, #4]
    1ed6:	4619      	mov	r1, r3
    1ed8:	68f8      	ldr	r0, [r7, #12]
    1eda:	f7ff ffe1 	bl	1ea0 <void QuickSort<unsigned long volatile>(unsigned long volatile*, int, int)>
}
    1ede:	bf00      	nop
    1ee0:	3718      	adds	r7, #24
    1ee2:	46bd      	mov	sp, r7
    1ee4:	bd80      	pop	{r7, pc}

00001ee6 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)>:
template <typename T> void QuickSort(T arr[], int low, int high) {
    1ee6:	b580      	push	{r7, lr}
    1ee8:	b086      	sub	sp, #24
    1eea:	af00      	add	r7, sp, #0
    1eec:	60f8      	str	r0, [r7, #12]
    1eee:	60b9      	str	r1, [r7, #8]
    1ef0:	607a      	str	r2, [r7, #4]
  if (low < high) {
    1ef2:	68ba      	ldr	r2, [r7, #8]
    1ef4:	687b      	ldr	r3, [r7, #4]
    1ef6:	429a      	cmp	r2, r3
    1ef8:	da14      	bge.n	1f24 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)+0x3e>
    int pi = Partition(arr, low, high);
    1efa:	687a      	ldr	r2, [r7, #4]
    1efc:	68b9      	ldr	r1, [r7, #8]
    1efe:	68f8      	ldr	r0, [r7, #12]
    1f00:	f000 f87d 	bl	1ffe <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)>
    1f04:	4603      	mov	r3, r0
    1f06:	617b      	str	r3, [r7, #20]
    QuickSort(arr, low, pi - 1);
    1f08:	697b      	ldr	r3, [r7, #20]
    1f0a:	3b01      	subs	r3, #1
    1f0c:	461a      	mov	r2, r3
    1f0e:	68b9      	ldr	r1, [r7, #8]
    1f10:	68f8      	ldr	r0, [r7, #12]
    1f12:	f7ff ffe8 	bl	1ee6 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)>
    QuickSort(arr, pi + 1, high);
    1f16:	697b      	ldr	r3, [r7, #20]
    1f18:	3301      	adds	r3, #1
    1f1a:	687a      	ldr	r2, [r7, #4]
    1f1c:	4619      	mov	r1, r3
    1f1e:	68f8      	ldr	r0, [r7, #12]
    1f20:	f7ff ffe1 	bl	1ee6 <void QuickSort<unsigned short volatile>(unsigned short volatile*, int, int)>
}
    1f24:	bf00      	nop
    1f26:	3718      	adds	r7, #24
    1f28:	46bd      	mov	sp, r7
    1f2a:	bd80      	pop	{r7, pc}

00001f2c <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)>:
template <typename T> void QuickSort(T arr[], int low, int high) {
    1f2c:	b580      	push	{r7, lr}
    1f2e:	b086      	sub	sp, #24
    1f30:	af00      	add	r7, sp, #0
    1f32:	60f8      	str	r0, [r7, #12]
    1f34:	60b9      	str	r1, [r7, #8]
    1f36:	607a      	str	r2, [r7, #4]
  if (low < high) {
    1f38:	68ba      	ldr	r2, [r7, #8]
    1f3a:	687b      	ldr	r3, [r7, #4]
    1f3c:	429a      	cmp	r2, r3
    1f3e:	da14      	bge.n	1f6a <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)+0x3e>
    int pi = Partition(arr, low, high);
    1f40:	687a      	ldr	r2, [r7, #4]
    1f42:	68b9      	ldr	r1, [r7, #8]
    1f44:	68f8      	ldr	r0, [r7, #12]
    1f46:	f000 f8a3 	bl	2090 <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)>
    1f4a:	4603      	mov	r3, r0
    1f4c:	617b      	str	r3, [r7, #20]
    QuickSort(arr, low, pi - 1);
    1f4e:	697b      	ldr	r3, [r7, #20]
    1f50:	3b01      	subs	r3, #1
    1f52:	461a      	mov	r2, r3
    1f54:	68b9      	ldr	r1, [r7, #8]
    1f56:	68f8      	ldr	r0, [r7, #12]
    1f58:	f7ff ffe8 	bl	1f2c <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)>
    QuickSort(arr, pi + 1, high);
    1f5c:	697b      	ldr	r3, [r7, #20]
    1f5e:	3301      	adds	r3, #1
    1f60:	687a      	ldr	r2, [r7, #4]
    1f62:	4619      	mov	r1, r3
    1f64:	68f8      	ldr	r0, [r7, #12]
    1f66:	f7ff ffe1 	bl	1f2c <void QuickSort<unsigned char volatile>(unsigned char volatile*, int, int)>
}
    1f6a:	bf00      	nop
    1f6c:	3718      	adds	r7, #24
    1f6e:	46bd      	mov	sp, r7
    1f70:	bd80      	pop	{r7, pc}

00001f72 <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)>:
template <typename T> int Partition(T arr[], int low, int high) {
    1f72:	b580      	push	{r7, lr}
    1f74:	b088      	sub	sp, #32
    1f76:	af00      	add	r7, sp, #0
    1f78:	60f8      	str	r0, [r7, #12]
    1f7a:	60b9      	str	r1, [r7, #8]
    1f7c:	607a      	str	r2, [r7, #4]
  T pivot = arr[high];
    1f7e:	687b      	ldr	r3, [r7, #4]
    1f80:	009b      	lsls	r3, r3, #2
    1f82:	68fa      	ldr	r2, [r7, #12]
    1f84:	4413      	add	r3, r2
    1f86:	681b      	ldr	r3, [r3, #0]
    1f88:	617b      	str	r3, [r7, #20]
  int i = (low - 1);
    1f8a:	68bb      	ldr	r3, [r7, #8]
    1f8c:	3b01      	subs	r3, #1
    1f8e:	61fb      	str	r3, [r7, #28]
  for (int j = low; j <= high - 1; j++) {
    1f90:	68bb      	ldr	r3, [r7, #8]
    1f92:	61bb      	str	r3, [r7, #24]
    1f94:	687a      	ldr	r2, [r7, #4]
    1f96:	69bb      	ldr	r3, [r7, #24]
    1f98:	429a      	cmp	r2, r3
    1f9a:	dd1e      	ble.n	1fda <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)+0x68>
    if (arr[j] < pivot) {
    1f9c:	69bb      	ldr	r3, [r7, #24]
    1f9e:	009b      	lsls	r3, r3, #2
    1fa0:	68fa      	ldr	r2, [r7, #12]
    1fa2:	4413      	add	r3, r2
    1fa4:	681a      	ldr	r2, [r3, #0]
    1fa6:	697b      	ldr	r3, [r7, #20]
    1fa8:	429a      	cmp	r2, r3
    1faa:	bf34      	ite	cc
    1fac:	2301      	movcc	r3, #1
    1fae:	2300      	movcs	r3, #0
    1fb0:	b2db      	uxtb	r3, r3
    1fb2:	2b00      	cmp	r3, #0
    1fb4:	d00d      	beq.n	1fd2 <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)+0x60>
      i++;
    1fb6:	69fb      	ldr	r3, [r7, #28]
    1fb8:	3301      	adds	r3, #1
    1fba:	61fb      	str	r3, [r7, #28]
      Swap(&arr[i], &arr[j]);
    1fbc:	69fb      	ldr	r3, [r7, #28]
    1fbe:	009b      	lsls	r3, r3, #2
    1fc0:	68fa      	ldr	r2, [r7, #12]
    1fc2:	18d0      	adds	r0, r2, r3
    1fc4:	69bb      	ldr	r3, [r7, #24]
    1fc6:	009b      	lsls	r3, r3, #2
    1fc8:	68fa      	ldr	r2, [r7, #12]
    1fca:	4413      	add	r3, r2
    1fcc:	4619      	mov	r1, r3
    1fce:	f000 f8a2 	bl	2116 <void Swap<unsigned long volatile>(unsigned long volatile*, unsigned long volatile*)>
  for (int j = low; j <= high - 1; j++) {
    1fd2:	69bb      	ldr	r3, [r7, #24]
    1fd4:	3301      	adds	r3, #1
    1fd6:	61bb      	str	r3, [r7, #24]
    1fd8:	e7dc      	b.n	1f94 <int Partition<unsigned long volatile>(unsigned long volatile*, int, int)+0x22>
  Swap(&arr[i + 1], &arr[high]);
    1fda:	69fb      	ldr	r3, [r7, #28]
    1fdc:	3301      	adds	r3, #1
    1fde:	009b      	lsls	r3, r3, #2
    1fe0:	68fa      	ldr	r2, [r7, #12]
    1fe2:	18d0      	adds	r0, r2, r3
    1fe4:	687b      	ldr	r3, [r7, #4]
    1fe6:	009b      	lsls	r3, r3, #2
    1fe8:	68fa      	ldr	r2, [r7, #12]
    1fea:	4413      	add	r3, r2
    1fec:	4619      	mov	r1, r3
    1fee:	f000 f892 	bl	2116 <void Swap<unsigned long volatile>(unsigned long volatile*, unsigned long volatile*)>
  return (i + 1);
    1ff2:	69fb      	ldr	r3, [r7, #28]
    1ff4:	3301      	adds	r3, #1
}
    1ff6:	4618      	mov	r0, r3
    1ff8:	3720      	adds	r7, #32
    1ffa:	46bd      	mov	sp, r7
    1ffc:	bd80      	pop	{r7, pc}

00001ffe <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)>:
template <typename T> int Partition(T arr[], int low, int high) {
    1ffe:	b580      	push	{r7, lr}
    2000:	b088      	sub	sp, #32
    2002:	af00      	add	r7, sp, #0
    2004:	60f8      	str	r0, [r7, #12]
    2006:	60b9      	str	r1, [r7, #8]
    2008:	607a      	str	r2, [r7, #4]
  T pivot = arr[high];
    200a:	687b      	ldr	r3, [r7, #4]
    200c:	005b      	lsls	r3, r3, #1
    200e:	68fa      	ldr	r2, [r7, #12]
    2010:	4413      	add	r3, r2
    2012:	881b      	ldrh	r3, [r3, #0]
    2014:	b29b      	uxth	r3, r3
    2016:	82fb      	strh	r3, [r7, #22]
  int i = (low - 1);
    2018:	68bb      	ldr	r3, [r7, #8]
    201a:	3b01      	subs	r3, #1
    201c:	61fb      	str	r3, [r7, #28]
  for (int j = low; j <= high - 1; j++) {
    201e:	68bb      	ldr	r3, [r7, #8]
    2020:	61bb      	str	r3, [r7, #24]
    2022:	687a      	ldr	r2, [r7, #4]
    2024:	69bb      	ldr	r3, [r7, #24]
    2026:	429a      	cmp	r2, r3
    2028:	dd20      	ble.n	206c <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)+0x6e>
    if (arr[j] < pivot) {
    202a:	69bb      	ldr	r3, [r7, #24]
    202c:	005b      	lsls	r3, r3, #1
    202e:	68fa      	ldr	r2, [r7, #12]
    2030:	4413      	add	r3, r2
    2032:	881b      	ldrh	r3, [r3, #0]
    2034:	b29a      	uxth	r2, r3
    2036:	8afb      	ldrh	r3, [r7, #22]
    2038:	b29b      	uxth	r3, r3
    203a:	429a      	cmp	r2, r3
    203c:	bf34      	ite	cc
    203e:	2301      	movcc	r3, #1
    2040:	2300      	movcs	r3, #0
    2042:	b2db      	uxtb	r3, r3
    2044:	2b00      	cmp	r3, #0
    2046:	d00d      	beq.n	2064 <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)+0x66>
      i++;
    2048:	69fb      	ldr	r3, [r7, #28]
    204a:	3301      	adds	r3, #1
    204c:	61fb      	str	r3, [r7, #28]
      Swap(&arr[i], &arr[j]);
    204e:	69fb      	ldr	r3, [r7, #28]
    2050:	005b      	lsls	r3, r3, #1
    2052:	68fa      	ldr	r2, [r7, #12]
    2054:	18d0      	adds	r0, r2, r3
    2056:	69bb      	ldr	r3, [r7, #24]
    2058:	005b      	lsls	r3, r3, #1
    205a:	68fa      	ldr	r2, [r7, #12]
    205c:	4413      	add	r3, r2
    205e:	4619      	mov	r1, r3
    2060:	f000 f86d 	bl	213e <void Swap<unsigned short volatile>(unsigned short volatile*, unsigned short volatile*)>
  for (int j = low; j <= high - 1; j++) {
    2064:	69bb      	ldr	r3, [r7, #24]
    2066:	3301      	adds	r3, #1
    2068:	61bb      	str	r3, [r7, #24]
    206a:	e7da      	b.n	2022 <int Partition<unsigned short volatile>(unsigned short volatile*, int, int)+0x24>
  Swap(&arr[i + 1], &arr[high]);
    206c:	69fb      	ldr	r3, [r7, #28]
    206e:	3301      	adds	r3, #1
    2070:	005b      	lsls	r3, r3, #1
    2072:	68fa      	ldr	r2, [r7, #12]
    2074:	18d0      	adds	r0, r2, r3
    2076:	687b      	ldr	r3, [r7, #4]
    2078:	005b      	lsls	r3, r3, #1
    207a:	68fa      	ldr	r2, [r7, #12]
    207c:	4413      	add	r3, r2
    207e:	4619      	mov	r1, r3
    2080:	f000 f85d 	bl	213e <void Swap<unsigned short volatile>(unsigned short volatile*, unsigned short volatile*)>
  return (i + 1);
    2084:	69fb      	ldr	r3, [r7, #28]
    2086:	3301      	adds	r3, #1
}
    2088:	4618      	mov	r0, r3
    208a:	3720      	adds	r7, #32
    208c:	46bd      	mov	sp, r7
    208e:	bd80      	pop	{r7, pc}

00002090 <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)>:
template <typename T> int Partition(T arr[], int low, int high) {
    2090:	b580      	push	{r7, lr}
    2092:	b088      	sub	sp, #32
    2094:	af00      	add	r7, sp, #0
    2096:	60f8      	str	r0, [r7, #12]
    2098:	60b9      	str	r1, [r7, #8]
    209a:	607a      	str	r2, [r7, #4]
  T pivot = arr[high];
    209c:	687b      	ldr	r3, [r7, #4]
    209e:	68fa      	ldr	r2, [r7, #12]
    20a0:	4413      	add	r3, r2
    20a2:	781b      	ldrb	r3, [r3, #0]
    20a4:	b2db      	uxtb	r3, r3
    20a6:	75fb      	strb	r3, [r7, #23]
  int i = (low - 1);
    20a8:	68bb      	ldr	r3, [r7, #8]
    20aa:	3b01      	subs	r3, #1
    20ac:	61fb      	str	r3, [r7, #28]
  for (int j = low; j <= high - 1; j++) {
    20ae:	68bb      	ldr	r3, [r7, #8]
    20b0:	61bb      	str	r3, [r7, #24]
    20b2:	687a      	ldr	r2, [r7, #4]
    20b4:	69bb      	ldr	r3, [r7, #24]
    20b6:	429a      	cmp	r2, r3
    20b8:	dd1d      	ble.n	20f6 <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)+0x66>
    if (arr[j] < pivot) {
    20ba:	69bb      	ldr	r3, [r7, #24]
    20bc:	68fa      	ldr	r2, [r7, #12]
    20be:	4413      	add	r3, r2
    20c0:	781b      	ldrb	r3, [r3, #0]
    20c2:	b2da      	uxtb	r2, r3
    20c4:	7dfb      	ldrb	r3, [r7, #23]
    20c6:	b2db      	uxtb	r3, r3
    20c8:	429a      	cmp	r2, r3
    20ca:	bf34      	ite	cc
    20cc:	2301      	movcc	r3, #1
    20ce:	2300      	movcs	r3, #0
    20d0:	b2db      	uxtb	r3, r3
    20d2:	2b00      	cmp	r3, #0
    20d4:	d00b      	beq.n	20ee <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)+0x5e>
      i++;
    20d6:	69fb      	ldr	r3, [r7, #28]
    20d8:	3301      	adds	r3, #1
    20da:	61fb      	str	r3, [r7, #28]
      Swap(&arr[i], &arr[j]);
    20dc:	69fb      	ldr	r3, [r7, #28]
    20de:	68fa      	ldr	r2, [r7, #12]
    20e0:	18d0      	adds	r0, r2, r3
    20e2:	69bb      	ldr	r3, [r7, #24]
    20e4:	68fa      	ldr	r2, [r7, #12]
    20e6:	4413      	add	r3, r2
    20e8:	4619      	mov	r1, r3
    20ea:	f000 f83f 	bl	216c <void Swap<unsigned char volatile>(unsigned char volatile*, unsigned char volatile*)>
  for (int j = low; j <= high - 1; j++) {
    20ee:	69bb      	ldr	r3, [r7, #24]
    20f0:	3301      	adds	r3, #1
    20f2:	61bb      	str	r3, [r7, #24]
    20f4:	e7dd      	b.n	20b2 <int Partition<unsigned char volatile>(unsigned char volatile*, int, int)+0x22>
  Swap(&arr[i + 1], &arr[high]);
    20f6:	69fb      	ldr	r3, [r7, #28]
    20f8:	3301      	adds	r3, #1
    20fa:	68fa      	ldr	r2, [r7, #12]
    20fc:	18d0      	adds	r0, r2, r3
    20fe:	687b      	ldr	r3, [r7, #4]
    2100:	68fa      	ldr	r2, [r7, #12]
    2102:	4413      	add	r3, r2
    2104:	4619      	mov	r1, r3
    2106:	f000 f831 	bl	216c <void Swap<unsigned char volatile>(unsigned char volatile*, unsigned char volatile*)>
  return (i + 1);
    210a:	69fb      	ldr	r3, [r7, #28]
    210c:	3301      	adds	r3, #1
}
    210e:	4618      	mov	r0, r3
    2110:	3720      	adds	r7, #32
    2112:	46bd      	mov	sp, r7
    2114:	bd80      	pop	{r7, pc}

00002116 <void Swap<unsigned long volatile>(unsigned long volatile*, unsigned long volatile*)>:
template <typename T> void Swap(T *a, T *b) {
    2116:	b480      	push	{r7}
    2118:	b085      	sub	sp, #20
    211a:	af00      	add	r7, sp, #0
    211c:	6078      	str	r0, [r7, #4]
    211e:	6039      	str	r1, [r7, #0]
  T temp = *a;
    2120:	687b      	ldr	r3, [r7, #4]
    2122:	681b      	ldr	r3, [r3, #0]
    2124:	60fb      	str	r3, [r7, #12]
  *a = *b;
    2126:	683b      	ldr	r3, [r7, #0]
    2128:	681a      	ldr	r2, [r3, #0]
    212a:	687b      	ldr	r3, [r7, #4]
    212c:	601a      	str	r2, [r3, #0]
  *b = temp;
    212e:	68fa      	ldr	r2, [r7, #12]
    2130:	683b      	ldr	r3, [r7, #0]
    2132:	601a      	str	r2, [r3, #0]
}
    2134:	bf00      	nop
    2136:	3714      	adds	r7, #20
    2138:	46bd      	mov	sp, r7
    213a:	bc80      	pop	{r7}
    213c:	4770      	bx	lr

0000213e <void Swap<unsigned short volatile>(unsigned short volatile*, unsigned short volatile*)>:
template <typename T> void Swap(T *a, T *b) {
    213e:	b480      	push	{r7}
    2140:	b085      	sub	sp, #20
    2142:	af00      	add	r7, sp, #0
    2144:	6078      	str	r0, [r7, #4]
    2146:	6039      	str	r1, [r7, #0]
  T temp = *a;
    2148:	687b      	ldr	r3, [r7, #4]
    214a:	881b      	ldrh	r3, [r3, #0]
    214c:	b29b      	uxth	r3, r3
    214e:	81fb      	strh	r3, [r7, #14]
  *a = *b;
    2150:	683b      	ldr	r3, [r7, #0]
    2152:	881b      	ldrh	r3, [r3, #0]
    2154:	b29a      	uxth	r2, r3
    2156:	687b      	ldr	r3, [r7, #4]
    2158:	801a      	strh	r2, [r3, #0]
  *b = temp;
    215a:	89fb      	ldrh	r3, [r7, #14]
    215c:	b29a      	uxth	r2, r3
    215e:	683b      	ldr	r3, [r7, #0]
    2160:	801a      	strh	r2, [r3, #0]
}
    2162:	bf00      	nop
    2164:	3714      	adds	r7, #20
    2166:	46bd      	mov	sp, r7
    2168:	bc80      	pop	{r7}
    216a:	4770      	bx	lr

0000216c <void Swap<unsigned char volatile>(unsigned char volatile*, unsigned char volatile*)>:
template <typename T> void Swap(T *a, T *b) {
    216c:	b480      	push	{r7}
    216e:	b085      	sub	sp, #20
    2170:	af00      	add	r7, sp, #0
    2172:	6078      	str	r0, [r7, #4]
    2174:	6039      	str	r1, [r7, #0]
  T temp = *a;
    2176:	687b      	ldr	r3, [r7, #4]
    2178:	781b      	ldrb	r3, [r3, #0]
    217a:	b2db      	uxtb	r3, r3
    217c:	73fb      	strb	r3, [r7, #15]
  *a = *b;
    217e:	683b      	ldr	r3, [r7, #0]
    2180:	781b      	ldrb	r3, [r3, #0]
    2182:	b2da      	uxtb	r2, r3
    2184:	687b      	ldr	r3, [r7, #4]
    2186:	701a      	strb	r2, [r3, #0]
  *b = temp;
    2188:	7bfb      	ldrb	r3, [r7, #15]
    218a:	b2da      	uxtb	r2, r3
    218c:	683b      	ldr	r3, [r7, #0]
    218e:	701a      	strb	r2, [r3, #0]
}
    2190:	bf00      	nop
    2192:	3714      	adds	r7, #20
    2194:	46bd      	mov	sp, r7
    2196:	bc80      	pop	{r7}
    2198:	4770      	bx	lr
	...

0000219c <GetSCBBase()>:
static constexpr uint32_t kCcrStkAlignFlag{(1U << 9U)}; // Stack alignment on exception entry
static constexpr uint32_t kCcrBranchPredictionEnableFlag{(1U << 18U)}; // Branch prediction enable
static constexpr uint32_t kCcrL1CacheEnableFlag{(1U << 19U)};          // L1 cache enable

// SysTick register map base pointer
static inline volatile SCB *GetSCBBase() {
    219c:	b480      	push	{r7}
    219e:	af00      	add	r7, sp, #0
  return reinterpret_cast<SCB *>(reinterpret_cast<unsigned *>(0xE000ED00u));
    21a0:	4b02      	ldr	r3, [pc, #8]	; (21ac <GetSCBBase()+0x10>)
    21a2:	4618      	mov	r0, r3
    21a4:	46bd      	mov	sp, r7
    21a6:	bc80      	pop	{r7}
    21a8:	4770      	bx	lr
    21aa:	bf00      	nop
    21ac:	e000ed00 	.word	0xe000ed00

000021b0 <BusFault_Handler_ABI>:

/// BusFault_Handler_ABI
/// This function is called from the assembler BusFault_Handler function which is called by the
/// Cortex-M processor when a bus fault occurs. The function oversteps the instruction that caused
/// the fault and increments the PC in the stack frame.
void BusFault_Handler_ABI(uint32_t *stack_frame) {
    21b0:	4668      	mov	r0, sp
    21b2:	f020 0107 	bic.w	r1, r0, #7
    21b6:	468d      	mov	sp, r1
    21b8:	b591      	push	{r0, r4, r7, lr}
    21ba:	b088      	sub	sp, #32
    21bc:	af00      	add	r7, sp, #0
    21be:	6078      	str	r0, [r7, #4]

  uint32_t faulty_pc = stack_frame[6]; // Read PC from stack frame
    21c0:	687b      	ldr	r3, [r7, #4]
    21c2:	699b      	ldr	r3, [r3, #24]
    21c4:	61fb      	str	r3, [r7, #28]
                                       // printf("BusFault_Handler 0x%08x\n", faulty_pc);

  if (return_adr == 0U) {
    21c6:	4826      	ldr	r0, [pc, #152]	; (2260 <BusFault_Handler_ABI+0xb0>)
    21c8:	f000 fb1c 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    21cc:	4603      	mov	r3, r0
    21ce:	2b00      	cmp	r3, #0
    21d0:	bf0c      	ite	eq
    21d2:	2301      	moveq	r3, #1
    21d4:	2300      	movne	r3, #0
    21d6:	b2db      	uxtb	r3, r3
    21d8:	2b00      	cmp	r3, #0
    21da:	d024      	beq.n	2226 <BusFault_Handler_ABI+0x76>
    uint16_t *instr = (uint16_t *)(faulty_pc & ~0x1U); // read the instruction that caused the fault
    21dc:	69fb      	ldr	r3, [r7, #28]
    21de:	f023 0301 	bic.w	r3, r3, #1
    21e2:	61bb      	str	r3, [r7, #24]
    uint16_t instr_val = *instr;
    21e4:	69bb      	ldr	r3, [r7, #24]
    21e6:	881b      	ldrh	r3, [r3, #0]
    21e8:	82fb      	strh	r3, [r7, #22]

    if (((instr_val & 0xF800U) == 0xF800U) || ((instr_val & 0xF800U) == 0xE800U) ||
    21ea:	8afb      	ldrh	r3, [r7, #22]
    21ec:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    21f0:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
    21f4:	d00b      	beq.n	220e <BusFault_Handler_ABI+0x5e>
    21f6:	8afb      	ldrh	r3, [r7, #22]
    21f8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    21fc:	f5b3 4f68 	cmp.w	r3, #59392	; 0xe800
    2200:	d005      	beq.n	220e <BusFault_Handler_ABI+0x5e>
        ((instr_val & 0xF800U) == 0xF000U)) { // Check if the instruction is a 32-Bit instruction
    2202:	8afb      	ldrh	r3, [r7, #22]
    2204:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    if (((instr_val & 0xF800U) == 0xF800U) || ((instr_val & 0xF800U) == 0xE800U) ||
    2208:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
    220c:	d105      	bne.n	221a <BusFault_Handler_ABI+0x6a>
      stack_frame[6U] = faulty_pc + 4U;       // overstep 32-Bit instruction
    220e:	687b      	ldr	r3, [r7, #4]
    2210:	3318      	adds	r3, #24
    2212:	69fa      	ldr	r2, [r7, #28]
    2214:	3204      	adds	r2, #4
    2216:	601a      	str	r2, [r3, #0]
    2218:	e011      	b.n	223e <BusFault_Handler_ABI+0x8e>
    } else {
      stack_frame[6U] = faulty_pc + 2U; // overstep 16-Bit instruction
    221a:	687b      	ldr	r3, [r7, #4]
    221c:	3318      	adds	r3, #24
    221e:	69fa      	ldr	r2, [r7, #28]
    2220:	3202      	adds	r2, #2
    2222:	601a      	str	r2, [r3, #0]
    2224:	e00b      	b.n	223e <BusFault_Handler_ABI+0x8e>
    }
  } else {
    stack_frame[6U] = return_adr;
    2226:	687b      	ldr	r3, [r7, #4]
    2228:	f103 0418 	add.w	r4, r3, #24
    222c:	480c      	ldr	r0, [pc, #48]	; (2260 <BusFault_Handler_ABI+0xb0>)
    222e:	f000 fae9 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2232:	4603      	mov	r3, r0
    2234:	6023      	str	r3, [r4, #0]
    return_adr = 0;
    2236:	2100      	movs	r1, #0
    2238:	4809      	ldr	r0, [pc, #36]	; (2260 <BusFault_Handler_ABI+0xb0>)
    223a:	f000 fafe 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  }

  auto *scb = GetSCBBase();
    223e:	f7ff ffad 	bl	219c <GetSCBBase()>
    2242:	6138      	str	r0, [r7, #16]
  auto cfsr = scb->CFSR;
    2244:	693b      	ldr	r3, [r7, #16]
    2246:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2248:	60fb      	str	r3, [r7, #12]
  if (cfsr & kCfsrIBusErrFlag) {
    // abort();
  }
  bus_faults++;
    224a:	2100      	movs	r1, #0
    224c:	4805      	ldr	r0, [pc, #20]	; (2264 <BusFault_Handler_ABI+0xb4>)
    224e:	f000 fb14 	bl	287a <std::__atomic_base<unsigned long>::operator++(int)>
}
    2252:	bf00      	nop
    2254:	3720      	adds	r7, #32
    2256:	46bd      	mov	sp, r7
    2258:	e8bd 4091 	ldmia.w	sp!, {r0, r4, r7, lr}
    225c:	4685      	mov	sp, r0
    225e:	4770      	bx	lr
    2260:	20000b0c 	.word	0x20000b0c
    2264:	20000b10 	.word	0x20000b10

00002268 <BusFault_Handler>:

void BusFault_Handler(void) {
  __asm volatile("MOV    r0, sp                  \n" // Load the current value of the Main Stack
    2268:	4668      	mov	r0, sp
    226a:	f7ff bfa1 	b.w	21b0 <BusFault_Handler_ABI>
                                                     // Pointer (MSP) into r0
                 "B BusFault_Handler_ABI        \n"  // Call the C function BusFault_Handler_ABI
  );
}
    226e:	bf00      	nop

00002270 <UsageFault_Handler_ABI>:

/// UsageFault_Handler_ABI
/// This function is called from the assembler UsageFault_Handler function which is called by the
/// Cortex-M processor when a usage fault occurs. The function oversteps the instruction that caused
/// the fault and increments the PC in the stack frame.
void UsageFault_Handler_ABI(uint32_t *stack_frame) {
    2270:	4668      	mov	r0, sp
    2272:	f020 0107 	bic.w	r1, r0, #7
    2276:	468d      	mov	sp, r1
    2278:	b591      	push	{r0, r4, r7, lr}
    227a:	b086      	sub	sp, #24
    227c:	af00      	add	r7, sp, #0
    227e:	6078      	str	r0, [r7, #4]

  uint32_t faulty_pc = stack_frame[6]; // Read PC from stack frame
    2280:	687b      	ldr	r3, [r7, #4]
    2282:	699b      	ldr	r3, [r3, #24]
    2284:	617b      	str	r3, [r7, #20]

  if (return_adr == 0U) {
    2286:	4829      	ldr	r0, [pc, #164]	; (232c <UsageFault_Handler_ABI+0xbc>)
    2288:	f000 fabc 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    228c:	4603      	mov	r3, r0
    228e:	2b00      	cmp	r3, #0
    2290:	bf0c      	ite	eq
    2292:	2301      	moveq	r3, #1
    2294:	2300      	movne	r3, #0
    2296:	b2db      	uxtb	r3, r3
    2298:	2b00      	cmp	r3, #0
    229a:	d024      	beq.n	22e6 <UsageFault_Handler_ABI+0x76>
    uint16_t *instr = (uint16_t *)(faulty_pc & ~0x1U); // read the instruction that caused the fault
    229c:	697b      	ldr	r3, [r7, #20]
    229e:	f023 0301 	bic.w	r3, r3, #1
    22a2:	613b      	str	r3, [r7, #16]
    uint16_t instr_val = *instr;
    22a4:	693b      	ldr	r3, [r7, #16]
    22a6:	881b      	ldrh	r3, [r3, #0]
    22a8:	81fb      	strh	r3, [r7, #14]

    if (((instr_val & 0xF800U) == 0xF800U) || ((instr_val & 0xF800U) == 0xE800U) ||
    22aa:	89fb      	ldrh	r3, [r7, #14]
    22ac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    22b0:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
    22b4:	d00b      	beq.n	22ce <UsageFault_Handler_ABI+0x5e>
    22b6:	89fb      	ldrh	r3, [r7, #14]
    22b8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    22bc:	f5b3 4f68 	cmp.w	r3, #59392	; 0xe800
    22c0:	d005      	beq.n	22ce <UsageFault_Handler_ABI+0x5e>
        ((instr_val & 0xF800U) == 0xF000U)) { // Check if the instruction is a 32-Bit instruction
    22c2:	89fb      	ldrh	r3, [r7, #14]
    22c4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
    if (((instr_val & 0xF800U) == 0xF800U) || ((instr_val & 0xF800U) == 0xE800U) ||
    22c8:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
    22cc:	d105      	bne.n	22da <UsageFault_Handler_ABI+0x6a>
      stack_frame[6U] = faulty_pc + 4U;       // overstep 32-Bit instruction
    22ce:	687b      	ldr	r3, [r7, #4]
    22d0:	3318      	adds	r3, #24
    22d2:	697a      	ldr	r2, [r7, #20]
    22d4:	3204      	adds	r2, #4
    22d6:	601a      	str	r2, [r3, #0]
    22d8:	e011      	b.n	22fe <UsageFault_Handler_ABI+0x8e>
    } else {
      stack_frame[6U] = faulty_pc + 2U; // overstep 16-Bit instruction
    22da:	687b      	ldr	r3, [r7, #4]
    22dc:	3318      	adds	r3, #24
    22de:	697a      	ldr	r2, [r7, #20]
    22e0:	3202      	adds	r2, #2
    22e2:	601a      	str	r2, [r3, #0]
    22e4:	e00b      	b.n	22fe <UsageFault_Handler_ABI+0x8e>
    }
  } else {

    stack_frame[6U] = return_adr;
    22e6:	687b      	ldr	r3, [r7, #4]
    22e8:	f103 0418 	add.w	r4, r3, #24
    22ec:	480f      	ldr	r0, [pc, #60]	; (232c <UsageFault_Handler_ABI+0xbc>)
    22ee:	f000 fa89 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    22f2:	4603      	mov	r3, r0
    22f4:	6023      	str	r3, [r4, #0]
    return_adr = 0;
    22f6:	2100      	movs	r1, #0
    22f8:	480c      	ldr	r0, [pc, #48]	; (232c <UsageFault_Handler_ABI+0xbc>)
    22fa:	f000 fa9e 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  }

  // some tests set the t-bit intentionally to 0. This is not allowed in the ARMv7-M architecture
  // Reverse the T-bit to 1 in case such an instruction is executed
  auto xpsr = stack_frame[7U];
    22fe:	687b      	ldr	r3, [r7, #4]
    2300:	69db      	ldr	r3, [r3, #28]
    2302:	60bb      	str	r3, [r7, #8]
  xpsr = xpsr | (1 << 24); // Force the T-bit to 1
    2304:	68bb      	ldr	r3, [r7, #8]
    2306:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
    230a:	60bb      	str	r3, [r7, #8]
  stack_frame[7U] = xpsr;
    230c:	687b      	ldr	r3, [r7, #4]
    230e:	331c      	adds	r3, #28
    2310:	68ba      	ldr	r2, [r7, #8]
    2312:	601a      	str	r2, [r3, #0]

  usage_faults++;
    2314:	2100      	movs	r1, #0
    2316:	4806      	ldr	r0, [pc, #24]	; (2330 <UsageFault_Handler_ABI+0xc0>)
    2318:	f000 faaf 	bl	287a <std::__atomic_base<unsigned long>::operator++(int)>
}
    231c:	bf00      	nop
    231e:	3718      	adds	r7, #24
    2320:	46bd      	mov	sp, r7
    2322:	e8bd 4091 	ldmia.w	sp!, {r0, r4, r7, lr}
    2326:	4685      	mov	sp, r0
    2328:	4770      	bx	lr
    232a:	bf00      	nop
    232c:	20000b0c 	.word	0x20000b0c
    2330:	20000b14 	.word	0x20000b14

00002334 <UsageFault_Handler>:

void UsageFault_Handler(void) {
  __asm volatile("MOV    r0, sp                  \n"  // Load the current value of the Main Stack
    2334:	4668      	mov	r0, sp
    2336:	f7ff bf9b 	b.w	2270 <UsageFault_Handler_ABI>
                                                      // Pointer (MSP) into r0
                 "B UsageFault_Handler_ABI        \n" // Call the C function BusFault_Handler_ABI
  );
}
    233a:	bf00      	nop

0000233c <TestVariousFaults()>:

void TestVariousFaults() {
    233c:	b580      	push	{r7, lr}
    233e:	b082      	sub	sp, #8
    2340:	af00      	add	r7, sp, #0
  uint32_t faulty_address = 0x40000001;
    2342:	4b41      	ldr	r3, [pc, #260]	; (2448 <TestVariousFaults()+0x10c>)
    2344:	607b      	str	r3, [r7, #4]

  usage_faults = 0U;
    2346:	2100      	movs	r1, #0
    2348:	4840      	ldr	r0, [pc, #256]	; (244c <TestVariousFaults()+0x110>)
    234a:	f000 fa76 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  bus_faults = 0U;
    234e:	2100      	movs	r1, #0
    2350:	483f      	ldr	r0, [pc, #252]	; (2450 <TestVariousFaults()+0x114>)
    2352:	f000 fa72 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  auto *scb = GetSCBBase();
    2356:	f7ff ff21 	bl	219c <GetSCBBase()>
    235a:	6038      	str	r0, [r7, #0]
  assert(scb->CFSR == 0U);
    235c:	683b      	ldr	r3, [r7, #0]
    235e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2360:	2b00      	cmp	r3, #0
    2362:	d005      	beq.n	2370 <TestVariousFaults()+0x34>
    2364:	4b3b      	ldr	r3, [pc, #236]	; (2454 <TestVariousFaults()+0x118>)
    2366:	4a3c      	ldr	r2, [pc, #240]	; (2458 <TestVariousFaults()+0x11c>)
    2368:	216a      	movs	r1, #106	; 0x6a
    236a:	483c      	ldr	r0, [pc, #240]	; (245c <TestVariousFaults()+0x120>)
    236c:	f009 fbb0 	bl	bad0 <__assert_func>
  assert(usage_faults == 0U);
    2370:	4836      	ldr	r0, [pc, #216]	; (244c <TestVariousFaults()+0x110>)
    2372:	f000 fa47 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2376:	4603      	mov	r3, r0
    2378:	2b00      	cmp	r3, #0
    237a:	d005      	beq.n	2388 <TestVariousFaults()+0x4c>
    237c:	4b38      	ldr	r3, [pc, #224]	; (2460 <TestVariousFaults()+0x124>)
    237e:	4a36      	ldr	r2, [pc, #216]	; (2458 <TestVariousFaults()+0x11c>)
    2380:	216b      	movs	r1, #107	; 0x6b
    2382:	4836      	ldr	r0, [pc, #216]	; (245c <TestVariousFaults()+0x120>)
    2384:	f009 fba4 	bl	bad0 <__assert_func>
  assert(bus_faults == 0U);
    2388:	4831      	ldr	r0, [pc, #196]	; (2450 <TestVariousFaults()+0x114>)
    238a:	f000 fa3b 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    238e:	4603      	mov	r3, r0
    2390:	2b00      	cmp	r3, #0
    2392:	d005      	beq.n	23a0 <TestVariousFaults()+0x64>
    2394:	4b33      	ldr	r3, [pc, #204]	; (2464 <TestVariousFaults()+0x128>)
    2396:	4a30      	ldr	r2, [pc, #192]	; (2458 <TestVariousFaults()+0x11c>)
    2398:	216c      	movs	r1, #108	; 0x6c
    239a:	4830      	ldr	r0, [pc, #192]	; (245c <TestVariousFaults()+0x120>)
    239c:	f009 fb98 	bl	bad0 <__assert_func>
  return_adr = reinterpret_cast<uint32_t>(&&label_wrong_mode);
    23a0:	4b31      	ldr	r3, [pc, #196]	; (2468 <TestVariousFaults()+0x12c>)
    23a2:	4619      	mov	r1, r3
    23a4:	4831      	ldr	r0, [pc, #196]	; (246c <TestVariousFaults()+0x130>)
    23a6:	f000 fa48 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  asm volatile goto("" :: ::label_wrong_mode, label_fetch_fault);
  // provoke an Usage Fault .. wrong execution state
  __asm__ volatile("mov r0, 0x10\n"
    23aa:	f04f 0010 	mov.w	r0, #16
    23ae:	4700      	bx	r0
                   :      // no input
                   : "r0" // clobber
  );

label_wrong_mode:
  __asm__ volatile("nop"
    23b0:	bf00      	nop
                   : // no output
                   : // no input
                   : // no clobber
  );

  assert(usage_faults == 1U);
    23b2:	4826      	ldr	r0, [pc, #152]	; (244c <TestVariousFaults()+0x110>)
    23b4:	f000 fa26 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    23b8:	4603      	mov	r3, r0
    23ba:	2b01      	cmp	r3, #1
    23bc:	d005      	beq.n	23ca <TestVariousFaults()+0x8e>
    23be:	4b2c      	ldr	r3, [pc, #176]	; (2470 <TestVariousFaults()+0x134>)
    23c0:	4a25      	ldr	r2, [pc, #148]	; (2458 <TestVariousFaults()+0x11c>)
    23c2:	217e      	movs	r1, #126	; 0x7e
    23c4:	4825      	ldr	r0, [pc, #148]	; (245c <TestVariousFaults()+0x120>)
    23c6:	f009 fb83 	bl	bad0 <__assert_func>
  assert(scb->CFSR == kCfsrInvStateFlag);
    23ca:	683b      	ldr	r3, [r7, #0]
    23cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    23ce:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
    23d2:	d005      	beq.n	23e0 <TestVariousFaults()+0xa4>
    23d4:	4b27      	ldr	r3, [pc, #156]	; (2474 <TestVariousFaults()+0x138>)
    23d6:	4a20      	ldr	r2, [pc, #128]	; (2458 <TestVariousFaults()+0x11c>)
    23d8:	217f      	movs	r1, #127	; 0x7f
    23da:	4820      	ldr	r0, [pc, #128]	; (245c <TestVariousFaults()+0x120>)
    23dc:	f009 fb78 	bl	bad0 <__assert_func>
  scb->CFSR = kCfsrInvStateFlag; // reset fault
    23e0:	683b      	ldr	r3, [r7, #0]
    23e2:	f44f 3200 	mov.w	r2, #131072	; 0x20000
    23e6:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0U);
    23e8:	683b      	ldr	r3, [r7, #0]
    23ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    23ec:	2b00      	cmp	r3, #0
    23ee:	d005      	beq.n	23fc <TestVariousFaults()+0xc0>
    23f0:	4b18      	ldr	r3, [pc, #96]	; (2454 <TestVariousFaults()+0x118>)
    23f2:	4a19      	ldr	r2, [pc, #100]	; (2458 <TestVariousFaults()+0x11c>)
    23f4:	2181      	movs	r1, #129	; 0x81
    23f6:	4819      	ldr	r0, [pc, #100]	; (245c <TestVariousFaults()+0x120>)
    23f8:	f009 fb6a 	bl	bad0 <__assert_func>

  // provoke an Bus Fault .. instruction bus fault
  return_adr = reinterpret_cast<uint32_t>(&&label_fetch_fault);
    23fc:	4b1e      	ldr	r3, [pc, #120]	; (2478 <TestVariousFaults()+0x13c>)
    23fe:	4619      	mov	r1, r3
    2400:	481a      	ldr	r0, [pc, #104]	; (246c <TestVariousFaults()+0x130>)
    2402:	f000 fa1a 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>

  __asm__ volatile("mov r0, %0\n"
    2406:	687b      	ldr	r3, [r7, #4]
    2408:	4618      	mov	r0, r3
    240a:	4700      	bx	r0
                   : "r"(faulty_address) // no input
                   : "r0"                // no clobber
  );

label_fetch_fault:
  __asm__ volatile("nop"
    240c:	bf00      	nop
                   : // no output
                   : // no input
                   : // no clobber
  );
  assert(scb->CFSR == kCfsrIBusErrFlag);
    240e:	683b      	ldr	r3, [r7, #0]
    2410:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2412:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
    2416:	d005      	beq.n	2424 <TestVariousFaults()+0xe8>
    2418:	4b18      	ldr	r3, [pc, #96]	; (247c <TestVariousFaults()+0x140>)
    241a:	4a0f      	ldr	r2, [pc, #60]	; (2458 <TestVariousFaults()+0x11c>)
    241c:	2193      	movs	r1, #147	; 0x93
    241e:	480f      	ldr	r0, [pc, #60]	; (245c <TestVariousFaults()+0x120>)
    2420:	f009 fb56 	bl	bad0 <__assert_func>
  scb->CFSR = kCfsrIBusErrFlag; // reset fault
    2424:	683b      	ldr	r3, [r7, #0]
    2426:	f44f 7280 	mov.w	r2, #256	; 0x100
    242a:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0U);
    242c:	683b      	ldr	r3, [r7, #0]
    242e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2430:	2b00      	cmp	r3, #0
    2432:	d005      	beq.n	2440 <TestVariousFaults()+0x104>
    2434:	4b07      	ldr	r3, [pc, #28]	; (2454 <TestVariousFaults()+0x118>)
    2436:	4a08      	ldr	r2, [pc, #32]	; (2458 <TestVariousFaults()+0x11c>)
    2438:	2195      	movs	r1, #149	; 0x95
    243a:	4808      	ldr	r0, [pc, #32]	; (245c <TestVariousFaults()+0x120>)
    243c:	f009 fb48 	bl	bad0 <__assert_func>
}
    2440:	bf00      	nop
    2442:	3708      	adds	r7, #8
    2444:	46bd      	mov	sp, r7
    2446:	bd80      	pop	{r7, pc}
    2448:	40000001 	.word	0x40000001
    244c:	20000b14 	.word	0x20000b14
    2450:	20000b10 	.word	0x20000b10
    2454:	000183e0 	.word	0x000183e0
    2458:	000183f0 	.word	0x000183f0
    245c:	0001840c 	.word	0x0001840c
    2460:	00018458 	.word	0x00018458
    2464:	0001846c 	.word	0x0001846c
    2468:	000023b0 	.word	0x000023b0
    246c:	20000b0c 	.word	0x20000b0c
    2470:	00018480 	.word	0x00018480
    2474:	00018494 	.word	0x00018494
    2478:	0000240c 	.word	0x0000240c
    247c:	000184b4 	.word	0x000184b4

00002480 <TestBusfault()>:

void TestBusfault() {
    2480:	b580      	push	{r7, lr}
    2482:	b084      	sub	sp, #16
    2484:	af00      	add	r7, sp, #0
  bus_faults = 0U;
    2486:	2100      	movs	r1, #0
    2488:	4852      	ldr	r0, [pc, #328]	; (25d4 <TestBusfault()+0x154>)
    248a:	f000 f9d6 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  auto *scb = GetSCBBase();
    248e:	f7ff fe85 	bl	219c <GetSCBBase()>
    2492:	60f8      	str	r0, [r7, #12]
  assert(scb->CFSR == 0U);
    2494:	68fb      	ldr	r3, [r7, #12]
    2496:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2498:	2b00      	cmp	r3, #0
    249a:	d005      	beq.n	24a8 <TestBusfault()+0x28>
    249c:	4b4e      	ldr	r3, [pc, #312]	; (25d8 <TestBusfault()+0x158>)
    249e:	4a4f      	ldr	r2, [pc, #316]	; (25dc <TestBusfault()+0x15c>)
    24a0:	219b      	movs	r1, #155	; 0x9b
    24a2:	484f      	ldr	r0, [pc, #316]	; (25e0 <TestBusfault()+0x160>)
    24a4:	f009 fb14 	bl	bad0 <__assert_func>
  assert(bus_faults == 0u);
    24a8:	484a      	ldr	r0, [pc, #296]	; (25d4 <TestBusfault()+0x154>)
    24aa:	f000 f9ab 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    24ae:	4603      	mov	r3, r0
    24b0:	2b00      	cmp	r3, #0
    24b2:	d005      	beq.n	24c0 <TestBusfault()+0x40>
    24b4:	4b4b      	ldr	r3, [pc, #300]	; (25e4 <TestBusfault()+0x164>)
    24b6:	4a49      	ldr	r2, [pc, #292]	; (25dc <TestBusfault()+0x15c>)
    24b8:	219c      	movs	r1, #156	; 0x9c
    24ba:	4849      	ldr	r0, [pc, #292]	; (25e0 <TestBusfault()+0x160>)
    24bc:	f009 fb08 	bl	bad0 <__assert_func>
  assert(scb->CFSR == 0x0U);
    24c0:	68fb      	ldr	r3, [r7, #12]
    24c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    24c4:	2b00      	cmp	r3, #0
    24c6:	d005      	beq.n	24d4 <TestBusfault()+0x54>
    24c8:	4b47      	ldr	r3, [pc, #284]	; (25e8 <TestBusfault()+0x168>)
    24ca:	4a44      	ldr	r2, [pc, #272]	; (25dc <TestBusfault()+0x15c>)
    24cc:	219d      	movs	r1, #157	; 0x9d
    24ce:	4844      	ldr	r0, [pc, #272]	; (25e0 <TestBusfault()+0x160>)
    24d0:	f009 fafe 	bl	bad0 <__assert_func>

  // Provoke a bus fault (write)
  volatile uint32_t *p = reinterpret_cast<uint32_t *>(0xF0000000);
    24d4:	f04f 4370 	mov.w	r3, #4026531840	; 0xf0000000
    24d8:	60bb      	str	r3, [r7, #8]
  *p = 0xDEADBEEFU;
    24da:	68bb      	ldr	r3, [r7, #8]
    24dc:	4a43      	ldr	r2, [pc, #268]	; (25ec <TestBusfault()+0x16c>)
    24de:	601a      	str	r2, [r3, #0]

  assert(bus_faults == 1U);
    24e0:	483c      	ldr	r0, [pc, #240]	; (25d4 <TestBusfault()+0x154>)
    24e2:	f000 f98f 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    24e6:	4603      	mov	r3, r0
    24e8:	2b01      	cmp	r3, #1
    24ea:	d005      	beq.n	24f8 <TestBusfault()+0x78>
    24ec:	4b40      	ldr	r3, [pc, #256]	; (25f0 <TestBusfault()+0x170>)
    24ee:	4a3b      	ldr	r2, [pc, #236]	; (25dc <TestBusfault()+0x15c>)
    24f0:	21a3      	movs	r1, #163	; 0xa3
    24f2:	483b      	ldr	r0, [pc, #236]	; (25e0 <TestBusfault()+0x160>)
    24f4:	f009 faec 	bl	bad0 <__assert_func>
  assert(scb->CFSR == (kCfsrBfarValidFlag | kCfsrPreciseErrFlag));
    24f8:	68fb      	ldr	r3, [r7, #12]
    24fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    24fc:	f5b3 4f02 	cmp.w	r3, #33280	; 0x8200
    2500:	d005      	beq.n	250e <TestBusfault()+0x8e>
    2502:	4b3c      	ldr	r3, [pc, #240]	; (25f4 <TestBusfault()+0x174>)
    2504:	4a35      	ldr	r2, [pc, #212]	; (25dc <TestBusfault()+0x15c>)
    2506:	21a4      	movs	r1, #164	; 0xa4
    2508:	4835      	ldr	r0, [pc, #212]	; (25e0 <TestBusfault()+0x160>)
    250a:	f009 fae1 	bl	bad0 <__assert_func>
  assert(scb->BFAR == reinterpret_cast<uint32_t>(p));
    250e:	68fb      	ldr	r3, [r7, #12]
    2510:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    2512:	68bb      	ldr	r3, [r7, #8]
    2514:	429a      	cmp	r2, r3
    2516:	d005      	beq.n	2524 <TestBusfault()+0xa4>
    2518:	4b37      	ldr	r3, [pc, #220]	; (25f8 <TestBusfault()+0x178>)
    251a:	4a30      	ldr	r2, [pc, #192]	; (25dc <TestBusfault()+0x15c>)
    251c:	21a5      	movs	r1, #165	; 0xa5
    251e:	4830      	ldr	r0, [pc, #192]	; (25e0 <TestBusfault()+0x160>)
    2520:	f009 fad6 	bl	bad0 <__assert_func>

  // reset bus fault
  scb->CFSR = kCfsrBfarValidFlag;
    2524:	68fb      	ldr	r3, [r7, #12]
    2526:	f44f 4200 	mov.w	r2, #32768	; 0x8000
    252a:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == kCfsrPreciseErrFlag);
    252c:	68fb      	ldr	r3, [r7, #12]
    252e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2530:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    2534:	d005      	beq.n	2542 <TestBusfault()+0xc2>
    2536:	4b31      	ldr	r3, [pc, #196]	; (25fc <TestBusfault()+0x17c>)
    2538:	4a28      	ldr	r2, [pc, #160]	; (25dc <TestBusfault()+0x15c>)
    253a:	21a9      	movs	r1, #169	; 0xa9
    253c:	4828      	ldr	r0, [pc, #160]	; (25e0 <TestBusfault()+0x160>)
    253e:	f009 fac7 	bl	bad0 <__assert_func>

  scb->CFSR = kCfsrPreciseErrFlag;
    2542:	68fb      	ldr	r3, [r7, #12]
    2544:	f44f 7200 	mov.w	r2, #512	; 0x200
    2548:	629a      	str	r2, [r3, #40]	; 0x28

  assert(scb->CFSR == 0x0U);
    254a:	68fb      	ldr	r3, [r7, #12]
    254c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    254e:	2b00      	cmp	r3, #0
    2550:	d005      	beq.n	255e <TestBusfault()+0xde>
    2552:	4b25      	ldr	r3, [pc, #148]	; (25e8 <TestBusfault()+0x168>)
    2554:	4a21      	ldr	r2, [pc, #132]	; (25dc <TestBusfault()+0x15c>)
    2556:	21ad      	movs	r1, #173	; 0xad
    2558:	4821      	ldr	r0, [pc, #132]	; (25e0 <TestBusfault()+0x160>)
    255a:	f009 fab9 	bl	bad0 <__assert_func>

  // Provoke a bus fault (read)
  p = reinterpret_cast<uint32_t *>(0x0A000000);
    255e:	f04f 6320 	mov.w	r3, #167772160	; 0xa000000
    2562:	60bb      	str	r3, [r7, #8]
  volatile uint32_t x = *p;
    2564:	68bb      	ldr	r3, [r7, #8]
    2566:	681b      	ldr	r3, [r3, #0]
    2568:	607b      	str	r3, [r7, #4]

  assert(bus_faults == 2U);
    256a:	481a      	ldr	r0, [pc, #104]	; (25d4 <TestBusfault()+0x154>)
    256c:	f000 f94a 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2570:	4603      	mov	r3, r0
    2572:	2b02      	cmp	r3, #2
    2574:	d005      	beq.n	2582 <TestBusfault()+0x102>
    2576:	4b22      	ldr	r3, [pc, #136]	; (2600 <TestBusfault()+0x180>)
    2578:	4a18      	ldr	r2, [pc, #96]	; (25dc <TestBusfault()+0x15c>)
    257a:	21b3      	movs	r1, #179	; 0xb3
    257c:	4818      	ldr	r0, [pc, #96]	; (25e0 <TestBusfault()+0x160>)
    257e:	f009 faa7 	bl	bad0 <__assert_func>
  assert(scb->CFSR == (kCfsrBfarValidFlag | kCfsrPreciseErrFlag));
    2582:	68fb      	ldr	r3, [r7, #12]
    2584:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2586:	f5b3 4f02 	cmp.w	r3, #33280	; 0x8200
    258a:	d005      	beq.n	2598 <TestBusfault()+0x118>
    258c:	4b19      	ldr	r3, [pc, #100]	; (25f4 <TestBusfault()+0x174>)
    258e:	4a13      	ldr	r2, [pc, #76]	; (25dc <TestBusfault()+0x15c>)
    2590:	21b4      	movs	r1, #180	; 0xb4
    2592:	4813      	ldr	r0, [pc, #76]	; (25e0 <TestBusfault()+0x160>)
    2594:	f009 fa9c 	bl	bad0 <__assert_func>
  assert(scb->BFAR == reinterpret_cast<uint32_t>(p));
    2598:	68fb      	ldr	r3, [r7, #12]
    259a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    259c:	68bb      	ldr	r3, [r7, #8]
    259e:	429a      	cmp	r2, r3
    25a0:	d005      	beq.n	25ae <TestBusfault()+0x12e>
    25a2:	4b15      	ldr	r3, [pc, #84]	; (25f8 <TestBusfault()+0x178>)
    25a4:	4a0d      	ldr	r2, [pc, #52]	; (25dc <TestBusfault()+0x15c>)
    25a6:	21b5      	movs	r1, #181	; 0xb5
    25a8:	480d      	ldr	r0, [pc, #52]	; (25e0 <TestBusfault()+0x160>)
    25aa:	f009 fa91 	bl	bad0 <__assert_func>

  // reset bus fault
  scb->CFSR = kCfsrBfarValidFlag | kCfsrPreciseErrFlag;
    25ae:	68fb      	ldr	r3, [r7, #12]
    25b0:	f44f 4202 	mov.w	r2, #33280	; 0x8200
    25b4:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0x0U);
    25b6:	68fb      	ldr	r3, [r7, #12]
    25b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    25ba:	2b00      	cmp	r3, #0
    25bc:	d005      	beq.n	25ca <TestBusfault()+0x14a>
    25be:	4b0a      	ldr	r3, [pc, #40]	; (25e8 <TestBusfault()+0x168>)
    25c0:	4a06      	ldr	r2, [pc, #24]	; (25dc <TestBusfault()+0x15c>)
    25c2:	21b9      	movs	r1, #185	; 0xb9
    25c4:	4806      	ldr	r0, [pc, #24]	; (25e0 <TestBusfault()+0x160>)
    25c6:	f009 fa83 	bl	bad0 <__assert_func>
}
    25ca:	bf00      	nop
    25cc:	3710      	adds	r7, #16
    25ce:	46bd      	mov	sp, r7
    25d0:	bd80      	pop	{r7, pc}
    25d2:	bf00      	nop
    25d4:	20000b10 	.word	0x20000b10
    25d8:	000183e0 	.word	0x000183e0
    25dc:	000184d4 	.word	0x000184d4
    25e0:	0001840c 	.word	0x0001840c
    25e4:	000184e8 	.word	0x000184e8
    25e8:	000184fc 	.word	0x000184fc
    25ec:	deadbeef 	.word	0xdeadbeef
    25f0:	00018510 	.word	0x00018510
    25f4:	00018524 	.word	0x00018524
    25f8:	0001855c 	.word	0x0001855c
    25fc:	00018588 	.word	0x00018588
    2600:	000185ac 	.word	0x000185ac

00002604 <TestDivideByZero()>:

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdiv-by-zero"

void TestDivideByZero() {
    2604:	b580      	push	{r7, lr}
    2606:	b088      	sub	sp, #32
    2608:	af00      	add	r7, sp, #0
  volatile int32_t i_divisor = 0U;
    260a:	2300      	movs	r3, #0
    260c:	61bb      	str	r3, [r7, #24]
  volatile uint32_t u_divisor = 0U;
    260e:	2300      	movs	r3, #0
    2610:	617b      	str	r3, [r7, #20]
  usage_faults = 0U;
    2612:	2100      	movs	r1, #0
    2614:	485f      	ldr	r0, [pc, #380]	; (2794 <TestDivideByZero()+0x190>)
    2616:	f000 f910 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  auto *scb = GetSCBBase();
    261a:	f7ff fdbf 	bl	219c <GetSCBBase()>
    261e:	61f8      	str	r0, [r7, #28]
  assert(scb->CFSR == 0U);
    2620:	69fb      	ldr	r3, [r7, #28]
    2622:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2624:	2b00      	cmp	r3, #0
    2626:	d005      	beq.n	2634 <TestDivideByZero()+0x30>
    2628:	4b5b      	ldr	r3, [pc, #364]	; (2798 <TestDivideByZero()+0x194>)
    262a:	4a5c      	ldr	r2, [pc, #368]	; (279c <TestDivideByZero()+0x198>)
    262c:	21c4      	movs	r1, #196	; 0xc4
    262e:	485c      	ldr	r0, [pc, #368]	; (27a0 <TestDivideByZero()+0x19c>)
    2630:	f009 fa4e 	bl	bad0 <__assert_func>
  assert((scb->CCR & kCcrDivByZeroTrapEnableFlag) == 0U);
    2634:	69fb      	ldr	r3, [r7, #28]
    2636:	695b      	ldr	r3, [r3, #20]
    2638:	f003 0310 	and.w	r3, r3, #16
    263c:	2b00      	cmp	r3, #0
    263e:	d005      	beq.n	264c <TestDivideByZero()+0x48>
    2640:	4b58      	ldr	r3, [pc, #352]	; (27a4 <TestDivideByZero()+0x1a0>)
    2642:	4a56      	ldr	r2, [pc, #344]	; (279c <TestDivideByZero()+0x198>)
    2644:	21c5      	movs	r1, #197	; 0xc5
    2646:	4856      	ldr	r0, [pc, #344]	; (27a0 <TestDivideByZero()+0x19c>)
    2648:	f009 fa42 	bl	bad0 <__assert_func>
  assert(usage_faults == 0U);
    264c:	4851      	ldr	r0, [pc, #324]	; (2794 <TestDivideByZero()+0x190>)
    264e:	f000 f8d9 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2652:	4603      	mov	r3, r0
    2654:	2b00      	cmp	r3, #0
    2656:	d005      	beq.n	2664 <TestDivideByZero()+0x60>
    2658:	4b53      	ldr	r3, [pc, #332]	; (27a8 <TestDivideByZero()+0x1a4>)
    265a:	4a50      	ldr	r2, [pc, #320]	; (279c <TestDivideByZero()+0x198>)
    265c:	21c6      	movs	r1, #198	; 0xc6
    265e:	4850      	ldr	r0, [pc, #320]	; (27a0 <TestDivideByZero()+0x19c>)
    2660:	f009 fa36 	bl	bad0 <__assert_func>

  volatile uint32_t x1 = 123U / u_divisor; // provoke a divide by zero without exception
    2664:	697b      	ldr	r3, [r7, #20]
    2666:	227b      	movs	r2, #123	; 0x7b
    2668:	fbb2 f3f3 	udiv	r3, r2, r3
    266c:	613b      	str	r3, [r7, #16]
  assert(usage_faults == 0U);
    266e:	4849      	ldr	r0, [pc, #292]	; (2794 <TestDivideByZero()+0x190>)
    2670:	f000 f8c8 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2674:	4603      	mov	r3, r0
    2676:	2b00      	cmp	r3, #0
    2678:	d005      	beq.n	2686 <TestDivideByZero()+0x82>
    267a:	4b4b      	ldr	r3, [pc, #300]	; (27a8 <TestDivideByZero()+0x1a4>)
    267c:	4a47      	ldr	r2, [pc, #284]	; (279c <TestDivideByZero()+0x198>)
    267e:	21c9      	movs	r1, #201	; 0xc9
    2680:	4847      	ldr	r0, [pc, #284]	; (27a0 <TestDivideByZero()+0x19c>)
    2682:	f009 fa25 	bl	bad0 <__assert_func>
  assert(x1 == 0);
    2686:	693b      	ldr	r3, [r7, #16]
    2688:	2b00      	cmp	r3, #0
    268a:	d005      	beq.n	2698 <TestDivideByZero()+0x94>
    268c:	4b47      	ldr	r3, [pc, #284]	; (27ac <TestDivideByZero()+0x1a8>)
    268e:	4a43      	ldr	r2, [pc, #268]	; (279c <TestDivideByZero()+0x198>)
    2690:	21ca      	movs	r1, #202	; 0xca
    2692:	4843      	ldr	r0, [pc, #268]	; (27a0 <TestDivideByZero()+0x19c>)
    2694:	f009 fa1c 	bl	bad0 <__assert_func>

  volatile int32_t x2 = 123 / i_divisor; // provoke a divide by zero without exception
    2698:	69bb      	ldr	r3, [r7, #24]
    269a:	227b      	movs	r2, #123	; 0x7b
    269c:	fb92 f3f3 	sdiv	r3, r2, r3
    26a0:	60fb      	str	r3, [r7, #12]
  assert(usage_faults == 0U);
    26a2:	483c      	ldr	r0, [pc, #240]	; (2794 <TestDivideByZero()+0x190>)
    26a4:	f000 f8ae 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    26a8:	4603      	mov	r3, r0
    26aa:	2b00      	cmp	r3, #0
    26ac:	d005      	beq.n	26ba <TestDivideByZero()+0xb6>
    26ae:	4b3e      	ldr	r3, [pc, #248]	; (27a8 <TestDivideByZero()+0x1a4>)
    26b0:	4a3a      	ldr	r2, [pc, #232]	; (279c <TestDivideByZero()+0x198>)
    26b2:	21cd      	movs	r1, #205	; 0xcd
    26b4:	483a      	ldr	r0, [pc, #232]	; (27a0 <TestDivideByZero()+0x19c>)
    26b6:	f009 fa0b 	bl	bad0 <__assert_func>
  assert(x2 == 0);
    26ba:	68fb      	ldr	r3, [r7, #12]
    26bc:	2b00      	cmp	r3, #0
    26be:	d005      	beq.n	26cc <TestDivideByZero()+0xc8>
    26c0:	4b3b      	ldr	r3, [pc, #236]	; (27b0 <TestDivideByZero()+0x1ac>)
    26c2:	4a36      	ldr	r2, [pc, #216]	; (279c <TestDivideByZero()+0x198>)
    26c4:	21ce      	movs	r1, #206	; 0xce
    26c6:	4836      	ldr	r0, [pc, #216]	; (27a0 <TestDivideByZero()+0x19c>)
    26c8:	f009 fa02 	bl	bad0 <__assert_func>

  // Enable divide by zero trap
  scb->CCR = scb->CCR | kCcrDivByZeroTrapEnableFlag;
    26cc:	69fb      	ldr	r3, [r7, #28]
    26ce:	695b      	ldr	r3, [r3, #20]
    26d0:	f043 0210 	orr.w	r2, r3, #16
    26d4:	69fb      	ldr	r3, [r7, #28]
    26d6:	615a      	str	r2, [r3, #20]

  volatile uint32_t x3 = 123U / u_divisor; // provoke a divide by zero exception
    26d8:	697b      	ldr	r3, [r7, #20]
    26da:	227b      	movs	r2, #123	; 0x7b
    26dc:	fbb2 f3f3 	udiv	r3, r2, r3
    26e0:	60bb      	str	r3, [r7, #8]
  assert(usage_faults == 1U);
    26e2:	482c      	ldr	r0, [pc, #176]	; (2794 <TestDivideByZero()+0x190>)
    26e4:	f000 f88e 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    26e8:	4603      	mov	r3, r0
    26ea:	2b01      	cmp	r3, #1
    26ec:	d005      	beq.n	26fa <TestDivideByZero()+0xf6>
    26ee:	4b31      	ldr	r3, [pc, #196]	; (27b4 <TestDivideByZero()+0x1b0>)
    26f0:	4a2a      	ldr	r2, [pc, #168]	; (279c <TestDivideByZero()+0x198>)
    26f2:	21d4      	movs	r1, #212	; 0xd4
    26f4:	482a      	ldr	r0, [pc, #168]	; (27a0 <TestDivideByZero()+0x19c>)
    26f6:	f009 f9eb 	bl	bad0 <__assert_func>
  assert(scb->CFSR == kCfsrDivByZeroFlag);
    26fa:	69fb      	ldr	r3, [r7, #28]
    26fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    26fe:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
    2702:	d005      	beq.n	2710 <TestDivideByZero()+0x10c>
    2704:	4b2c      	ldr	r3, [pc, #176]	; (27b8 <TestDivideByZero()+0x1b4>)
    2706:	4a25      	ldr	r2, [pc, #148]	; (279c <TestDivideByZero()+0x198>)
    2708:	21d5      	movs	r1, #213	; 0xd5
    270a:	4825      	ldr	r0, [pc, #148]	; (27a0 <TestDivideByZero()+0x19c>)
    270c:	f009 f9e0 	bl	bad0 <__assert_func>
  scb->CFSR = kCfsrDivByZeroFlag; // reset fault
    2710:	69fb      	ldr	r3, [r7, #28]
    2712:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
    2716:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0U);
    2718:	69fb      	ldr	r3, [r7, #28]
    271a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    271c:	2b00      	cmp	r3, #0
    271e:	d005      	beq.n	272c <TestDivideByZero()+0x128>
    2720:	4b1d      	ldr	r3, [pc, #116]	; (2798 <TestDivideByZero()+0x194>)
    2722:	4a1e      	ldr	r2, [pc, #120]	; (279c <TestDivideByZero()+0x198>)
    2724:	21d7      	movs	r1, #215	; 0xd7
    2726:	481e      	ldr	r0, [pc, #120]	; (27a0 <TestDivideByZero()+0x19c>)
    2728:	f009 f9d2 	bl	bad0 <__assert_func>

  volatile int32_t x4 = 123 / i_divisor; // provoke a divide by zero exception
    272c:	69bb      	ldr	r3, [r7, #24]
    272e:	227b      	movs	r2, #123	; 0x7b
    2730:	fb92 f3f3 	sdiv	r3, r2, r3
    2734:	607b      	str	r3, [r7, #4]
  assert(usage_faults == 2U);
    2736:	4817      	ldr	r0, [pc, #92]	; (2794 <TestDivideByZero()+0x190>)
    2738:	f000 f864 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    273c:	4603      	mov	r3, r0
    273e:	2b02      	cmp	r3, #2
    2740:	d005      	beq.n	274e <TestDivideByZero()+0x14a>
    2742:	4b1e      	ldr	r3, [pc, #120]	; (27bc <TestDivideByZero()+0x1b8>)
    2744:	4a15      	ldr	r2, [pc, #84]	; (279c <TestDivideByZero()+0x198>)
    2746:	21da      	movs	r1, #218	; 0xda
    2748:	4815      	ldr	r0, [pc, #84]	; (27a0 <TestDivideByZero()+0x19c>)
    274a:	f009 f9c1 	bl	bad0 <__assert_func>
  assert(scb->CFSR == kCfsrDivByZeroFlag);
    274e:	69fb      	ldr	r3, [r7, #28]
    2750:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2752:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
    2756:	d005      	beq.n	2764 <TestDivideByZero()+0x160>
    2758:	4b17      	ldr	r3, [pc, #92]	; (27b8 <TestDivideByZero()+0x1b4>)
    275a:	4a10      	ldr	r2, [pc, #64]	; (279c <TestDivideByZero()+0x198>)
    275c:	21db      	movs	r1, #219	; 0xdb
    275e:	4810      	ldr	r0, [pc, #64]	; (27a0 <TestDivideByZero()+0x19c>)
    2760:	f009 f9b6 	bl	bad0 <__assert_func>
  scb->CFSR = kCfsrDivByZeroFlag; // reset fault
    2764:	69fb      	ldr	r3, [r7, #28]
    2766:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
    276a:	629a      	str	r2, [r3, #40]	; 0x28
  assert(scb->CFSR == 0U);
    276c:	69fb      	ldr	r3, [r7, #28]
    276e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2770:	2b00      	cmp	r3, #0
    2772:	d005      	beq.n	2780 <TestDivideByZero()+0x17c>
    2774:	4b08      	ldr	r3, [pc, #32]	; (2798 <TestDivideByZero()+0x194>)
    2776:	4a09      	ldr	r2, [pc, #36]	; (279c <TestDivideByZero()+0x198>)
    2778:	21dd      	movs	r1, #221	; 0xdd
    277a:	4809      	ldr	r0, [pc, #36]	; (27a0 <TestDivideByZero()+0x19c>)
    277c:	f009 f9a8 	bl	bad0 <__assert_func>

  // Disable divide by zero trap
  scb->CCR = scb->CCR & ~kCcrDivByZeroTrapEnableFlag;
    2780:	69fb      	ldr	r3, [r7, #28]
    2782:	695b      	ldr	r3, [r3, #20]
    2784:	f023 0210 	bic.w	r2, r3, #16
    2788:	69fb      	ldr	r3, [r7, #28]
    278a:	615a      	str	r2, [r3, #20]
}
    278c:	bf00      	nop
    278e:	3720      	adds	r7, #32
    2790:	46bd      	mov	sp, r7
    2792:	bd80      	pop	{r7, pc}
    2794:	20000b14 	.word	0x20000b14
    2798:	000183e0 	.word	0x000183e0
    279c:	000185c0 	.word	0x000185c0
    27a0:	0001840c 	.word	0x0001840c
    27a4:	000185d8 	.word	0x000185d8
    27a8:	00018458 	.word	0x00018458
    27ac:	00018608 	.word	0x00018608
    27b0:	00018610 	.word	0x00018610
    27b4:	00018480 	.word	0x00018480
    27b8:	00018618 	.word	0x00018618
    27bc:	00018638 	.word	0x00018638

000027c0 <TestExceptions()>:
#pragma GCC diagnostic pop

void TestExceptions() {
    27c0:	b580      	push	{r7, lr}
    27c2:	af00      	add	r7, sp, #0
  printf("# Test: Exceptions\n");
    27c4:	4805      	ldr	r0, [pc, #20]	; (27dc <TestExceptions()+0x1c>)
    27c6:	f00a fa29 	bl	cc1c <puts>

  // SysTickDisable(); // deactivate SysTick and wait for the test to finish

  TestVariousFaults();
    27ca:	f7ff fdb7 	bl	233c <TestVariousFaults()>
  TestBusfault();
    27ce:	f7ff fe57 	bl	2480 <TestBusfault()>
  TestDivideByZero();
    27d2:	f7ff ff17 	bl	2604 <TestDivideByZero()>
    27d6:	bf00      	nop
    27d8:	bd80      	pop	{r7, pc}
    27da:	bf00      	nop
    27dc:	0001864c 	.word	0x0001864c

000027e0 <std::operator&(std::memory_order, std::__memory_order_modifier)>:
    return memory_order(int(__m) | int(__mod));
  }

  constexpr memory_order
  operator&(memory_order __m, __memory_order_modifier __mod)
  {
    27e0:	b480      	push	{r7}
    27e2:	b083      	sub	sp, #12
    27e4:	af00      	add	r7, sp, #0
    27e6:	4603      	mov	r3, r0
    27e8:	6039      	str	r1, [r7, #0]
    27ea:	71fb      	strb	r3, [r7, #7]
    return memory_order(int(__m) & int(__mod));
    27ec:	683b      	ldr	r3, [r7, #0]
    27ee:	b25a      	sxtb	r2, r3
    27f0:	f997 3007 	ldrsb.w	r3, [r7, #7]
    27f4:	4013      	ands	r3, r2
    27f6:	b25b      	sxtb	r3, r3
    27f8:	b2db      	uxtb	r3, r3
  }
    27fa:	4618      	mov	r0, r3
    27fc:	370c      	adds	r7, #12
    27fe:	46bd      	mov	sp, r7
    2800:	bc80      	pop	{r7}
    2802:	4770      	bx	lr

00002804 <std::__atomic_base<unsigned long>::operator unsigned long() const>:
      __atomic_base& operator=(const __atomic_base&) volatile = delete;

      // Requires __int_type convertible to _M_i.
      constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }

      operator __int_type() const noexcept
    2804:	b580      	push	{r7, lr}
    2806:	b084      	sub	sp, #16
    2808:	af00      	add	r7, sp, #0
    280a:	6078      	str	r0, [r7, #4]
    280c:	687b      	ldr	r3, [r7, #4]
    280e:	60fb      	str	r3, [r7, #12]
    2810:	2305      	movs	r3, #5
    2812:	72fb      	strb	r3, [r7, #11]
      }

      _GLIBCXX_ALWAYS_INLINE __int_type
      load(memory_order __m = memory_order_seq_cst) const noexcept
      {
	memory_order __b = __m & __memory_order_mask;
    2814:	7afb      	ldrb	r3, [r7, #11]
    2816:	f64f 71ff 	movw	r1, #65535	; 0xffff
    281a:	4618      	mov	r0, r3
    281c:	f7ff ffe0 	bl	27e0 <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2820:	4603      	mov	r3, r0
    2822:	72bb      	strb	r3, [r7, #10]
	__glibcxx_assert(__b != memory_order_release);
	__glibcxx_assert(__b != memory_order_acq_rel);

	return __atomic_load_n(&_M_i, int(__m));
    2824:	68fb      	ldr	r3, [r7, #12]
    2826:	f3bf 8f5b 	dmb	ish
    282a:	681b      	ldr	r3, [r3, #0]
    282c:	f3bf 8f5b 	dmb	ish
    2830:	bf00      	nop
      { return load(); }
    2832:	4618      	mov	r0, r3
    2834:	3710      	adds	r7, #16
    2836:	46bd      	mov	sp, r7
    2838:	bd80      	pop	{r7, pc}

0000283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>:
      operator=(__int_type __i) noexcept
    283a:	b580      	push	{r7, lr}
    283c:	b086      	sub	sp, #24
    283e:	af00      	add	r7, sp, #0
    2840:	6078      	str	r0, [r7, #4]
    2842:	6039      	str	r1, [r7, #0]
    2844:	687b      	ldr	r3, [r7, #4]
    2846:	617b      	str	r3, [r7, #20]
    2848:	683b      	ldr	r3, [r7, #0]
    284a:	613b      	str	r3, [r7, #16]
    284c:	2305      	movs	r3, #5
    284e:	73fb      	strb	r3, [r7, #15]
	memory_order __b = __m & __memory_order_mask;
    2850:	7bfb      	ldrb	r3, [r7, #15]
    2852:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2856:	4618      	mov	r0, r3
    2858:	f7ff ffc2 	bl	27e0 <std::operator&(std::memory_order, std::__memory_order_modifier)>
    285c:	4603      	mov	r3, r0
    285e:	73bb      	strb	r3, [r7, #14]
	__atomic_store_n(&_M_i, __i, int(__m));
    2860:	697b      	ldr	r3, [r7, #20]
    2862:	f3bf 8f5b 	dmb	ish
    2866:	693a      	ldr	r2, [r7, #16]
    2868:	601a      	str	r2, [r3, #0]
    286a:	f3bf 8f5b 	dmb	ish
      }
    286e:	bf00      	nop
	return __i;
    2870:	683b      	ldr	r3, [r7, #0]
      }
    2872:	4618      	mov	r0, r3
    2874:	3718      	adds	r7, #24
    2876:	46bd      	mov	sp, r7
    2878:	bd80      	pop	{r7, pc}

0000287a <std::__atomic_base<unsigned long>::operator++(int)>:
      operator++(int) noexcept
    287a:	b480      	push	{r7}
    287c:	b087      	sub	sp, #28
    287e:	af00      	add	r7, sp, #0
    2880:	6078      	str	r0, [r7, #4]
    2882:	6039      	str	r1, [r7, #0]
    2884:	687b      	ldr	r3, [r7, #4]
    2886:	617b      	str	r3, [r7, #20]
    2888:	2301      	movs	r3, #1
    288a:	613b      	str	r3, [r7, #16]
    288c:	2305      	movs	r3, #5
    288e:	73fb      	strb	r3, [r7, #15]
      }

      _GLIBCXX_ALWAYS_INLINE __int_type
      fetch_add(__int_type __i,
		memory_order __m = memory_order_seq_cst) noexcept
      { return __atomic_fetch_add(&_M_i, __i, int(__m)); }
    2890:	697b      	ldr	r3, [r7, #20]
    2892:	693a      	ldr	r2, [r7, #16]
    2894:	f3bf 8f5b 	dmb	ish
    2898:	e853 1f00 	ldrex	r1, [r3]
    289c:	eb01 0002 	add.w	r0, r1, r2
    28a0:	e843 0c00 	strex	ip, r0, [r3]
    28a4:	f1bc 0f00 	cmp.w	ip, #0
    28a8:	d1f6      	bne.n	2898 <std::__atomic_base<unsigned long>::operator++(int)+0x1e>
    28aa:	f3bf 8f5b 	dmb	ish
    28ae:	bf00      	nop
      { return fetch_add(1); }
    28b0:	460b      	mov	r3, r1
    28b2:	4618      	mov	r0, r3
    28b4:	371c      	adds	r7, #28
    28b6:	46bd      	mov	sp, r7
    28b8:	bc80      	pop	{r7}
    28ba:	4770      	bx	lr

000028bc <GetSCBBase()>:
static inline volatile SCB *GetSCBBase() {
    28bc:	b480      	push	{r7}
    28be:	af00      	add	r7, sp, #0
  return reinterpret_cast<SCB *>(reinterpret_cast<unsigned *>(0xE000ED00u));
    28c0:	4b02      	ldr	r3, [pc, #8]	; (28cc <GetSCBBase()+0x10>)
    28c2:	4618      	mov	r0, r3
    28c4:	46bd      	mov	sp, r7
    28c6:	bc80      	pop	{r7}
    28c8:	4770      	bx	lr
    28ca:	bf00      	nop
    28cc:	e000ed00 	.word	0xe000ed00

000028d0 <TestScb()>:
#include <assert.h>
#include <atomic>
#include <stdint.h>
#include <stdio.h>

void TestScb() {
    28d0:	b580      	push	{r7, lr}
    28d2:	b082      	sub	sp, #8
    28d4:	af00      	add	r7, sp, #0
  printf("# Test: System control bus\n");
    28d6:	480a      	ldr	r0, [pc, #40]	; (2900 <TestScb()+0x30>)
    28d8:	f00a f9a0 	bl	cc1c <puts>
  auto *scb = GetSCBBase();
    28dc:	f7ff ffee 	bl	28bc <GetSCBBase()>
    28e0:	6078      	str	r0, [r7, #4]

  assert(scb->CCR == (kCcrStkAlignFlag));
    28e2:	687b      	ldr	r3, [r7, #4]
    28e4:	695b      	ldr	r3, [r3, #20]
    28e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    28ea:	d005      	beq.n	28f8 <TestScb()+0x28>
    28ec:	4b05      	ldr	r3, [pc, #20]	; (2904 <TestScb()+0x34>)
    28ee:	4a06      	ldr	r2, [pc, #24]	; (2908 <TestScb()+0x38>)
    28f0:	210c      	movs	r1, #12
    28f2:	4806      	ldr	r0, [pc, #24]	; (290c <TestScb()+0x3c>)
    28f4:	f009 f8ec 	bl	bad0 <__assert_func>
    28f8:	bf00      	nop
    28fa:	3708      	adds	r7, #8
    28fc:	46bd      	mov	sp, r7
    28fe:	bd80      	pop	{r7, pc}
    2900:	000186d0 	.word	0x000186d0
    2904:	000186ec 	.word	0x000186ec
    2908:	0001870c 	.word	0x0001870c
    290c:	0001871c 	.word	0x0001871c

00002910 <SVC_Handler>:
char svc_buffer_1[256u];

std::atomic<uint32_t> svc_next_buffer{0u};
std::atomic<uint32_t> svc_call_count{0u};

void SVC_Handler() {
    2910:	4668      	mov	r0, sp
    2912:	f020 0107 	bic.w	r1, r0, #7
    2916:	468d      	mov	sp, r1
    2918:	b581      	push	{r0, r7, lr}
    291a:	b083      	sub	sp, #12
    291c:	af00      	add	r7, sp, #0
  svc_call_count++;
    291e:	2100      	movs	r1, #0
    2920:	482a      	ldr	r0, [pc, #168]	; (29cc <SVC_Handler+0xbc>)
    2922:	f7ff ffaa 	bl	287a <std::__atomic_base<unsigned long>::operator++(int)>

  // this looks weird; but it is a simple way to stress the emulator.
  // sprintf does a lot of nasty things and is a good test for the emulator
  if (svc_next_buffer == 1u) {
    2926:	482a      	ldr	r0, [pc, #168]	; (29d0 <SVC_Handler+0xc0>)
    2928:	f7ff ff6c 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    292c:	4603      	mov	r3, r0
    292e:	2b01      	cmp	r3, #1
    2930:	bf0c      	ite	eq
    2932:	2301      	moveq	r3, #1
    2934:	2300      	movne	r3, #0
    2936:	b2db      	uxtb	r3, r3
    2938:	2b00      	cmp	r3, #0
    293a:	d01a      	beq.n	2972 <SVC_Handler+0x62>
    293c:	2305      	movs	r3, #5
    293e:	70fb      	strb	r3, [r7, #3]
	memory_order __b = __m & __memory_order_mask;
    2940:	78fb      	ldrb	r3, [r7, #3]
    2942:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2946:	4618      	mov	r0, r3
    2948:	f7ff ff4a 	bl	27e0 <std::operator&(std::memory_order, std::__memory_order_modifier)>
    294c:	4603      	mov	r3, r0
    294e:	70bb      	strb	r3, [r7, #2]
	return __atomic_load_n(&_M_i, int(__m));
    2950:	4b1e      	ldr	r3, [pc, #120]	; (29cc <SVC_Handler+0xbc>)
    2952:	f3bf 8f5b 	dmb	ish
    2956:	681b      	ldr	r3, [r3, #0]
    2958:	f3bf 8f5b 	dmb	ish
    295c:	bf00      	nop
    sprintf(svc_buffer_1, "SVC_Handler called %i times", svc_call_count.load());
    295e:	461a      	mov	r2, r3
    2960:	491c      	ldr	r1, [pc, #112]	; (29d4 <SVC_Handler+0xc4>)
    2962:	481d      	ldr	r0, [pc, #116]	; (29d8 <SVC_Handler+0xc8>)
    2964:	f00a fce6 	bl	d334 <sprintf>
    svc_next_buffer = 0u;
    2968:	2100      	movs	r1, #0
    296a:	4819      	ldr	r0, [pc, #100]	; (29d0 <SVC_Handler+0xc0>)
    296c:	f7ff ff65 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
    2970:	e019      	b.n	29a6 <SVC_Handler+0x96>
    2972:	2305      	movs	r3, #5
    2974:	707b      	strb	r3, [r7, #1]
	memory_order __b = __m & __memory_order_mask;
    2976:	787b      	ldrb	r3, [r7, #1]
    2978:	f64f 71ff 	movw	r1, #65535	; 0xffff
    297c:	4618      	mov	r0, r3
    297e:	f7ff ff2f 	bl	27e0 <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2982:	4603      	mov	r3, r0
    2984:	703b      	strb	r3, [r7, #0]
	return __atomic_load_n(&_M_i, int(__m));
    2986:	4b11      	ldr	r3, [pc, #68]	; (29cc <SVC_Handler+0xbc>)
    2988:	f3bf 8f5b 	dmb	ish
    298c:	681b      	ldr	r3, [r3, #0]
    298e:	f3bf 8f5b 	dmb	ish
    2992:	bf00      	nop
  } else {
    sprintf(svc_buffer_0, "SVC_Handler called %i times", svc_call_count.load());
    2994:	461a      	mov	r2, r3
    2996:	490f      	ldr	r1, [pc, #60]	; (29d4 <SVC_Handler+0xc4>)
    2998:	4810      	ldr	r0, [pc, #64]	; (29dc <SVC_Handler+0xcc>)
    299a:	f00a fccb 	bl	d334 <sprintf>
    svc_next_buffer = 1u;
    299e:	2101      	movs	r1, #1
    29a0:	480b      	ldr	r0, [pc, #44]	; (29d0 <SVC_Handler+0xc0>)
    29a2:	f7ff ff4a 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>

  // Burn cycles

  // During this loop another SysTick_Handler call is expected
  // The emulator should be able to handle this
  for (int i = 0; i < 1000u; i++) {
    29a6:	2300      	movs	r3, #0
    29a8:	607b      	str	r3, [r7, #4]
    29aa:	687b      	ldr	r3, [r7, #4]
    29ac:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
    29b0:	d204      	bcs.n	29bc <SVC_Handler+0xac>
    __asm__("NOP");
    29b2:	bf00      	nop
  for (int i = 0; i < 1000u; i++) {
    29b4:	687b      	ldr	r3, [r7, #4]
    29b6:	3301      	adds	r3, #1
    29b8:	607b      	str	r3, [r7, #4]
    29ba:	e7f6      	b.n	29aa <SVC_Handler+0x9a>
  }
};
    29bc:	bf00      	nop
    29be:	370c      	adds	r7, #12
    29c0:	46bd      	mov	sp, r7
    29c2:	e8bd 4081 	ldmia.w	sp!, {r0, r7, lr}
    29c6:	4685      	mov	sp, r0
    29c8:	4770      	bx	lr
    29ca:	bf00      	nop
    29cc:	20000d1c 	.word	0x20000d1c
    29d0:	20000d18 	.word	0x20000d18
    29d4:	00018794 	.word	0x00018794
    29d8:	20000c18 	.word	0x20000c18
    29dc:	20000b18 	.word	0x20000b18

000029e0 <SysTick_Handler>:
char systick_buffer_1[256u];

std::atomic<uint32_t> systick_next_buffer{0u};
std::atomic<uint32_t> systick_call_count{0u};

void SysTick_Handler() {
    29e0:	4668      	mov	r0, sp
    29e2:	f020 0107 	bic.w	r1, r0, #7
    29e6:	468d      	mov	sp, r1
    29e8:	b581      	push	{r0, r7, lr}
    29ea:	b083      	sub	sp, #12
    29ec:	af00      	add	r7, sp, #0

  // Call SVC_Handler every 10th time
  if (systick_call_count % 10 == 0u) {
    29ee:	4830      	ldr	r0, [pc, #192]	; (2ab0 <SysTick_Handler+0xd0>)
    29f0:	f7ff ff08 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    29f4:	4601      	mov	r1, r0
    29f6:	4b2f      	ldr	r3, [pc, #188]	; (2ab4 <SysTick_Handler+0xd4>)
    29f8:	fba3 2301 	umull	r2, r3, r3, r1
    29fc:	08da      	lsrs	r2, r3, #3
    29fe:	4613      	mov	r3, r2
    2a00:	009b      	lsls	r3, r3, #2
    2a02:	4413      	add	r3, r2
    2a04:	005b      	lsls	r3, r3, #1
    2a06:	1aca      	subs	r2, r1, r3
    2a08:	2a00      	cmp	r2, #0
    2a0a:	bf0c      	ite	eq
    2a0c:	2301      	moveq	r3, #1
    2a0e:	2300      	movne	r3, #0
    2a10:	b2db      	uxtb	r3, r3
    2a12:	2b00      	cmp	r3, #0
    2a14:	d000      	beq.n	2a18 <SysTick_Handler+0x38>
    __asm__("SVC #0x02           \n" : : :);
    2a16:	df02      	svc	2
  }

  systick_call_count++;
    2a18:	2100      	movs	r1, #0
    2a1a:	4825      	ldr	r0, [pc, #148]	; (2ab0 <SysTick_Handler+0xd0>)
    2a1c:	f7ff ff2d 	bl	287a <std::__atomic_base<unsigned long>::operator++(int)>

  // this looks weird; but it is a simple way to stress the emulator.
  // sprintf does a lot of nasty things and is a good test for the emulator
  if (systick_next_buffer == 1u) {
    2a20:	4825      	ldr	r0, [pc, #148]	; (2ab8 <SysTick_Handler+0xd8>)
    2a22:	f7ff feef 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2a26:	4603      	mov	r3, r0
    2a28:	2b01      	cmp	r3, #1
    2a2a:	bf0c      	ite	eq
    2a2c:	2301      	moveq	r3, #1
    2a2e:	2300      	movne	r3, #0
    2a30:	b2db      	uxtb	r3, r3
    2a32:	2b00      	cmp	r3, #0
    2a34:	d01a      	beq.n	2a6c <SysTick_Handler+0x8c>
    2a36:	2305      	movs	r3, #5
    2a38:	71fb      	strb	r3, [r7, #7]
	memory_order __b = __m & __memory_order_mask;
    2a3a:	79fb      	ldrb	r3, [r7, #7]
    2a3c:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2a40:	4618      	mov	r0, r3
    2a42:	f7ff fecd 	bl	27e0 <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2a46:	4603      	mov	r3, r0
    2a48:	71bb      	strb	r3, [r7, #6]
	return __atomic_load_n(&_M_i, int(__m));
    2a4a:	4b19      	ldr	r3, [pc, #100]	; (2ab0 <SysTick_Handler+0xd0>)
    2a4c:	f3bf 8f5b 	dmb	ish
    2a50:	681b      	ldr	r3, [r3, #0]
    2a52:	f3bf 8f5b 	dmb	ish
    2a56:	bf00      	nop
    sprintf(systick_buffer_1, "SysTick_Handler called %i times", systick_call_count.load());
    2a58:	461a      	mov	r2, r3
    2a5a:	4918      	ldr	r1, [pc, #96]	; (2abc <SysTick_Handler+0xdc>)
    2a5c:	4818      	ldr	r0, [pc, #96]	; (2ac0 <SysTick_Handler+0xe0>)
    2a5e:	f00a fc69 	bl	d334 <sprintf>
    systick_next_buffer = 0u;
    2a62:	2100      	movs	r1, #0
    2a64:	4814      	ldr	r0, [pc, #80]	; (2ab8 <SysTick_Handler+0xd8>)
    2a66:	f7ff fee8 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
  } else {
    sprintf(systick_buffer_0, "SysTick_Handler called %i times", systick_call_count.load());
    systick_next_buffer = 1u;
  }
};
    2a6a:	e019      	b.n	2aa0 <SysTick_Handler+0xc0>
    2a6c:	2305      	movs	r3, #5
    2a6e:	717b      	strb	r3, [r7, #5]
	memory_order __b = __m & __memory_order_mask;
    2a70:	797b      	ldrb	r3, [r7, #5]
    2a72:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2a76:	4618      	mov	r0, r3
    2a78:	f7ff feb2 	bl	27e0 <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2a7c:	4603      	mov	r3, r0
    2a7e:	713b      	strb	r3, [r7, #4]
	return __atomic_load_n(&_M_i, int(__m));
    2a80:	4b0b      	ldr	r3, [pc, #44]	; (2ab0 <SysTick_Handler+0xd0>)
    2a82:	f3bf 8f5b 	dmb	ish
    2a86:	681b      	ldr	r3, [r3, #0]
    2a88:	f3bf 8f5b 	dmb	ish
    2a8c:	bf00      	nop
    sprintf(systick_buffer_0, "SysTick_Handler called %i times", systick_call_count.load());
    2a8e:	461a      	mov	r2, r3
    2a90:	490a      	ldr	r1, [pc, #40]	; (2abc <SysTick_Handler+0xdc>)
    2a92:	480c      	ldr	r0, [pc, #48]	; (2ac4 <SysTick_Handler+0xe4>)
    2a94:	f00a fc4e 	bl	d334 <sprintf>
    systick_next_buffer = 1u;
    2a98:	2101      	movs	r1, #1
    2a9a:	4807      	ldr	r0, [pc, #28]	; (2ab8 <SysTick_Handler+0xd8>)
    2a9c:	f7ff fecd 	bl	283a <std::__atomic_base<unsigned long>::operator=(unsigned long)>
};
    2aa0:	bf00      	nop
    2aa2:	370c      	adds	r7, #12
    2aa4:	46bd      	mov	sp, r7
    2aa6:	e8bd 4081 	ldmia.w	sp!, {r0, r7, lr}
    2aaa:	4685      	mov	sp, r0
    2aac:	4770      	bx	lr
    2aae:	bf00      	nop
    2ab0:	20000f24 	.word	0x20000f24
    2ab4:	cccccccd 	.word	0xcccccccd
    2ab8:	20000f20 	.word	0x20000f20
    2abc:	000187b0 	.word	0x000187b0
    2ac0:	20000e20 	.word	0x20000e20
    2ac4:	20000d20 	.word	0x20000d20

00002ac8 <StartIrqTest()>:

void StartIrqTest() {
    2ac8:	b580      	push	{r7, lr}
    2aca:	af00      	add	r7, sp, #0
  // Initialize SysTick
  SysTickInit(2000); // assume this processor runs at 100MHz and the Systick at 500Hz
    2acc:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
    2ad0:	f7fd fba6 	bl	220 <SysTickInit(unsigned long)>
}
    2ad4:	bf00      	nop
    2ad6:	bd80      	pop	{r7, pc}

00002ad8 <TestIrqs()>:

void TestIrqs() {
    2ad8:	b580      	push	{r7, lr}
    2ada:	b082      	sub	sp, #8
    2adc:	af00      	add	r7, sp, #0
  printf("# Test: IRQs\n");
    2ade:	4856      	ldr	r0, [pc, #344]	; (2c38 <TestIrqs()+0x160>)
    2ae0:	f00a f89c 	bl	cc1c <puts>
  SysTickDisable(); // deactivate SysTick and wait for the test to finish
    2ae4:	f7fd fbab 	bl	23e <SysTickDisable()>

  if (systick_call_count != EXPECTED_SYSTICKS) {
    2ae8:	4854      	ldr	r0, [pc, #336]	; (2c3c <TestIrqs()+0x164>)
    2aea:	f7ff fe8b 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2aee:	4603      	mov	r3, r0
    2af0:	2b5d      	cmp	r3, #93	; 0x5d
    2af2:	bf14      	ite	ne
    2af4:	2301      	movne	r3, #1
    2af6:	2300      	moveq	r3, #0
    2af8:	b2db      	uxtb	r3, r3
    2afa:	2b00      	cmp	r3, #0
    2afc:	d021      	beq.n	2b42 <TestIrqs()+0x6a>
    2afe:	2305      	movs	r3, #5
    2b00:	71fb      	strb	r3, [r7, #7]
	memory_order __b = __m & __memory_order_mask;
    2b02:	79fb      	ldrb	r3, [r7, #7]
    2b04:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2b08:	4618      	mov	r0, r3
    2b0a:	f7ff fe69 	bl	27e0 <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2b0e:	4603      	mov	r3, r0
    2b10:	71bb      	strb	r3, [r7, #6]
	return __atomic_load_n(&_M_i, int(__m));
    2b12:	4b4a      	ldr	r3, [pc, #296]	; (2c3c <TestIrqs()+0x164>)
    2b14:	f3bf 8f5b 	dmb	ish
    2b18:	681b      	ldr	r3, [r3, #0]
    2b1a:	f3bf 8f5b 	dmb	ish
    2b1e:	bf00      	nop
    printf("SysTick_Handler called %i times but expected were %i\n", systick_call_count.load(),
    2b20:	225d      	movs	r2, #93	; 0x5d
    2b22:	4619      	mov	r1, r3
    2b24:	4846      	ldr	r0, [pc, #280]	; (2c40 <TestIrqs()+0x168>)
    2b26:	f009 ff9f 	bl	ca68 <printf>
           EXPECTED_SYSTICKS);

    assert(systick_call_count != EXPECTED_SYSTICKS);
    2b2a:	4844      	ldr	r0, [pc, #272]	; (2c3c <TestIrqs()+0x164>)
    2b2c:	f7ff fe6a 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2b30:	4603      	mov	r3, r0
    2b32:	2b5d      	cmp	r3, #93	; 0x5d
    2b34:	d105      	bne.n	2b42 <TestIrqs()+0x6a>
    2b36:	4b43      	ldr	r3, [pc, #268]	; (2c44 <TestIrqs()+0x16c>)
    2b38:	4a43      	ldr	r2, [pc, #268]	; (2c48 <TestIrqs()+0x170>)
    2b3a:	215d      	movs	r1, #93	; 0x5d
    2b3c:	4843      	ldr	r0, [pc, #268]	; (2c4c <TestIrqs()+0x174>)
    2b3e:	f008 ffc7 	bl	bad0 <__assert_func>
  };

  // take the actual buffer
  if (systick_next_buffer == 1u) {
    2b42:	4843      	ldr	r0, [pc, #268]	; (2c50 <TestIrqs()+0x178>)
    2b44:	f7ff fe5e 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2b48:	4603      	mov	r3, r0
    2b4a:	2b01      	cmp	r3, #1
    2b4c:	bf0c      	ite	eq
    2b4e:	2301      	moveq	r3, #1
    2b50:	2300      	movne	r3, #0
    2b52:	b2db      	uxtb	r3, r3
    2b54:	2b00      	cmp	r3, #0
    2b56:	d00c      	beq.n	2b72 <TestIrqs()+0x9a>
    assert(strcmp(EXPECTED_SYSTICK_STRING, systick_buffer_0) == 0U);
    2b58:	493e      	ldr	r1, [pc, #248]	; (2c54 <TestIrqs()+0x17c>)
    2b5a:	483f      	ldr	r0, [pc, #252]	; (2c58 <TestIrqs()+0x180>)
    2b5c:	f00a fc0c 	bl	d378 <strcmp>
    2b60:	4603      	mov	r3, r0
    2b62:	2b00      	cmp	r3, #0
    2b64:	d012      	beq.n	2b8c <TestIrqs()+0xb4>
    2b66:	4b3d      	ldr	r3, [pc, #244]	; (2c5c <TestIrqs()+0x184>)
    2b68:	4a37      	ldr	r2, [pc, #220]	; (2c48 <TestIrqs()+0x170>)
    2b6a:	2162      	movs	r1, #98	; 0x62
    2b6c:	4837      	ldr	r0, [pc, #220]	; (2c4c <TestIrqs()+0x174>)
    2b6e:	f008 ffaf 	bl	bad0 <__assert_func>
  } else {
    assert(strcmp(EXPECTED_SYSTICK_STRING, systick_buffer_1) == 0U);
    2b72:	493b      	ldr	r1, [pc, #236]	; (2c60 <TestIrqs()+0x188>)
    2b74:	4838      	ldr	r0, [pc, #224]	; (2c58 <TestIrqs()+0x180>)
    2b76:	f00a fbff 	bl	d378 <strcmp>
    2b7a:	4603      	mov	r3, r0
    2b7c:	2b00      	cmp	r3, #0
    2b7e:	d005      	beq.n	2b8c <TestIrqs()+0xb4>
    2b80:	4b38      	ldr	r3, [pc, #224]	; (2c64 <TestIrqs()+0x18c>)
    2b82:	4a31      	ldr	r2, [pc, #196]	; (2c48 <TestIrqs()+0x170>)
    2b84:	2164      	movs	r1, #100	; 0x64
    2b86:	4831      	ldr	r0, [pc, #196]	; (2c4c <TestIrqs()+0x174>)
    2b88:	f008 ffa2 	bl	bad0 <__assert_func>
  }

  if (svc_call_count != EXPECTED_SVC) {
    2b8c:	4836      	ldr	r0, [pc, #216]	; (2c68 <TestIrqs()+0x190>)
    2b8e:	f7ff fe39 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2b92:	4603      	mov	r3, r0
    2b94:	2b0a      	cmp	r3, #10
    2b96:	bf14      	ite	ne
    2b98:	2301      	movne	r3, #1
    2b9a:	2300      	moveq	r3, #0
    2b9c:	b2db      	uxtb	r3, r3
    2b9e:	2b00      	cmp	r3, #0
    2ba0:	d021      	beq.n	2be6 <TestIrqs()+0x10e>
    2ba2:	2305      	movs	r3, #5
    2ba4:	717b      	strb	r3, [r7, #5]
	memory_order __b = __m & __memory_order_mask;
    2ba6:	797b      	ldrb	r3, [r7, #5]
    2ba8:	f64f 71ff 	movw	r1, #65535	; 0xffff
    2bac:	4618      	mov	r0, r3
    2bae:	f7ff fe17 	bl	27e0 <std::operator&(std::memory_order, std::__memory_order_modifier)>
    2bb2:	4603      	mov	r3, r0
    2bb4:	713b      	strb	r3, [r7, #4]
	return __atomic_load_n(&_M_i, int(__m));
    2bb6:	4b2c      	ldr	r3, [pc, #176]	; (2c68 <TestIrqs()+0x190>)
    2bb8:	f3bf 8f5b 	dmb	ish
    2bbc:	681b      	ldr	r3, [r3, #0]
    2bbe:	f3bf 8f5b 	dmb	ish
    2bc2:	bf00      	nop
    printf("SVC_Handler called %i times but expected were %i\n", svc_call_count.load(),
    2bc4:	220a      	movs	r2, #10
    2bc6:	4619      	mov	r1, r3
    2bc8:	4828      	ldr	r0, [pc, #160]	; (2c6c <TestIrqs()+0x194>)
    2bca:	f009 ff4d 	bl	ca68 <printf>
           EXPECTED_SVC);

    assert(svc_call_count != EXPECTED_SVC);
    2bce:	4826      	ldr	r0, [pc, #152]	; (2c68 <TestIrqs()+0x190>)
    2bd0:	f7ff fe18 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2bd4:	4603      	mov	r3, r0
    2bd6:	2b0a      	cmp	r3, #10
    2bd8:	d105      	bne.n	2be6 <TestIrqs()+0x10e>
    2bda:	4b25      	ldr	r3, [pc, #148]	; (2c70 <TestIrqs()+0x198>)
    2bdc:	4a1a      	ldr	r2, [pc, #104]	; (2c48 <TestIrqs()+0x170>)
    2bde:	216b      	movs	r1, #107	; 0x6b
    2be0:	481a      	ldr	r0, [pc, #104]	; (2c4c <TestIrqs()+0x174>)
    2be2:	f008 ff75 	bl	bad0 <__assert_func>
  };

  // take the actual buffer
  if (svc_next_buffer == 1u) {
    2be6:	4823      	ldr	r0, [pc, #140]	; (2c74 <TestIrqs()+0x19c>)
    2be8:	f7ff fe0c 	bl	2804 <std::__atomic_base<unsigned long>::operator unsigned long() const>
    2bec:	4603      	mov	r3, r0
    2bee:	2b01      	cmp	r3, #1
    2bf0:	bf0c      	ite	eq
    2bf2:	2301      	moveq	r3, #1
    2bf4:	2300      	movne	r3, #0
    2bf6:	b2db      	uxtb	r3, r3
    2bf8:	2b00      	cmp	r3, #0
    2bfa:	d00c      	beq.n	2c16 <TestIrqs()+0x13e>
    assert(strcmp(EXPECTED_SVC_STRING, svc_buffer_0) == 0U);
    2bfc:	491e      	ldr	r1, [pc, #120]	; (2c78 <TestIrqs()+0x1a0>)
    2bfe:	481f      	ldr	r0, [pc, #124]	; (2c7c <TestIrqs()+0x1a4>)
    2c00:	f00a fbba 	bl	d378 <strcmp>
    2c04:	4603      	mov	r3, r0
    2c06:	2b00      	cmp	r3, #0
    2c08:	d012      	beq.n	2c30 <TestIrqs()+0x158>
    2c0a:	4b1d      	ldr	r3, [pc, #116]	; (2c80 <TestIrqs()+0x1a8>)
    2c0c:	4a0e      	ldr	r2, [pc, #56]	; (2c48 <TestIrqs()+0x170>)
    2c0e:	2170      	movs	r1, #112	; 0x70
    2c10:	480e      	ldr	r0, [pc, #56]	; (2c4c <TestIrqs()+0x174>)
    2c12:	f008 ff5d 	bl	bad0 <__assert_func>
  } else {
    assert(strcmp(EXPECTED_SVC_STRING, svc_buffer_1) == 0U);
    2c16:	491b      	ldr	r1, [pc, #108]	; (2c84 <TestIrqs()+0x1ac>)
    2c18:	4818      	ldr	r0, [pc, #96]	; (2c7c <TestIrqs()+0x1a4>)
    2c1a:	f00a fbad 	bl	d378 <strcmp>
    2c1e:	4603      	mov	r3, r0
    2c20:	2b00      	cmp	r3, #0
    2c22:	d005      	beq.n	2c30 <TestIrqs()+0x158>
    2c24:	4b18      	ldr	r3, [pc, #96]	; (2c88 <TestIrqs()+0x1b0>)
    2c26:	4a08      	ldr	r2, [pc, #32]	; (2c48 <TestIrqs()+0x170>)
    2c28:	2172      	movs	r1, #114	; 0x72
    2c2a:	4808      	ldr	r0, [pc, #32]	; (2c4c <TestIrqs()+0x174>)
    2c2c:	f008 ff50 	bl	bad0 <__assert_func>
  }
    2c30:	bf00      	nop
    2c32:	3708      	adds	r7, #8
    2c34:	46bd      	mov	sp, r7
    2c36:	bd80      	pop	{r7, pc}
    2c38:	000187d0 	.word	0x000187d0
    2c3c:	20000f24 	.word	0x20000f24
    2c40:	000187e0 	.word	0x000187e0
    2c44:	00018818 	.word	0x00018818
    2c48:	00018840 	.word	0x00018840
    2c4c:	00018850 	.word	0x00018850
    2c50:	20000f20 	.word	0x20000f20
    2c54:	20000d20 	.word	0x20000d20
    2c58:	00018894 	.word	0x00018894
    2c5c:	000188b4 	.word	0x000188b4
    2c60:	20000e20 	.word	0x20000e20
    2c64:	000188ec 	.word	0x000188ec
    2c68:	20000d1c 	.word	0x20000d1c
    2c6c:	00018924 	.word	0x00018924
    2c70:	00018958 	.word	0x00018958
    2c74:	20000d18 	.word	0x20000d18
    2c78:	20000b18 	.word	0x20000b18
    2c7c:	00018978 	.word	0x00018978
    2c80:	00018994 	.word	0x00018994
    2c84:	20000c18 	.word	0x20000c18
    2c88:	000189c4 	.word	0x000189c4

00002c8c <Crc16(unsigned char const*, unsigned int)>:
#include "test_crc.h"
#include <assert.h>
#include <stdint.h>
#include <stdio.h>

uint16_t Crc16(const uint8_t *data, size_t length) {
    2c8c:	b480      	push	{r7}
    2c8e:	b087      	sub	sp, #28
    2c90:	af00      	add	r7, sp, #0
    2c92:	6078      	str	r0, [r7, #4]
    2c94:	6039      	str	r1, [r7, #0]
  uint16_t crc = 0xFFFF;              // Initial value
    2c96:	f64f 73ff 	movw	r3, #65535	; 0xffff
    2c9a:	82fb      	strh	r3, [r7, #22]
  const uint16_t polynomial = 0x1021; // CRC-16-CCITT polynomial
    2c9c:	f241 0321 	movw	r3, #4129	; 0x1021
    2ca0:	817b      	strh	r3, [r7, #10]

  for (size_t i = 0; i < length; ++i) {
    2ca2:	2300      	movs	r3, #0
    2ca4:	613b      	str	r3, [r7, #16]
    2ca6:	693a      	ldr	r2, [r7, #16]
    2ca8:	683b      	ldr	r3, [r7, #0]
    2caa:	429a      	cmp	r2, r3
    2cac:	d228      	bcs.n	2d00 <Crc16(unsigned char const*, unsigned int)+0x74>
    crc ^= (data[i] << 8); // XOR byte into the top byte of the 16-bit CRC
    2cae:	687a      	ldr	r2, [r7, #4]
    2cb0:	693b      	ldr	r3, [r7, #16]
    2cb2:	4413      	add	r3, r2
    2cb4:	781b      	ldrb	r3, [r3, #0]
    2cb6:	021b      	lsls	r3, r3, #8
    2cb8:	b21a      	sxth	r2, r3
    2cba:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
    2cbe:	4053      	eors	r3, r2
    2cc0:	b21b      	sxth	r3, r3
    2cc2:	82fb      	strh	r3, [r7, #22]

    for (int bit = 0; bit < 8; ++bit) {
    2cc4:	2300      	movs	r3, #0
    2cc6:	60fb      	str	r3, [r7, #12]
    2cc8:	68fb      	ldr	r3, [r7, #12]
    2cca:	2b07      	cmp	r3, #7
    2ccc:	dc14      	bgt.n	2cf8 <Crc16(unsigned char const*, unsigned int)+0x6c>
      if (crc & 0x8000) { // If the top bit is set
    2cce:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
    2cd2:	2b00      	cmp	r3, #0
    2cd4:	da09      	bge.n	2cea <Crc16(unsigned char const*, unsigned int)+0x5e>
        crc = (crc << 1) ^ polynomial;
    2cd6:	8afb      	ldrh	r3, [r7, #22]
    2cd8:	005b      	lsls	r3, r3, #1
    2cda:	b21b      	sxth	r3, r3
    2cdc:	f483 5381 	eor.w	r3, r3, #4128	; 0x1020
    2ce0:	f083 0301 	eor.w	r3, r3, #1
    2ce4:	b21b      	sxth	r3, r3
    2ce6:	82fb      	strh	r3, [r7, #22]
    2ce8:	e002      	b.n	2cf0 <Crc16(unsigned char const*, unsigned int)+0x64>
      } else {
        crc <<= 1;
    2cea:	8afb      	ldrh	r3, [r7, #22]
    2cec:	005b      	lsls	r3, r3, #1
    2cee:	82fb      	strh	r3, [r7, #22]
    for (int bit = 0; bit < 8; ++bit) {
    2cf0:	68fb      	ldr	r3, [r7, #12]
    2cf2:	3301      	adds	r3, #1
    2cf4:	60fb      	str	r3, [r7, #12]
    2cf6:	e7e7      	b.n	2cc8 <Crc16(unsigned char const*, unsigned int)+0x3c>
  for (size_t i = 0; i < length; ++i) {
    2cf8:	693b      	ldr	r3, [r7, #16]
    2cfa:	3301      	adds	r3, #1
    2cfc:	613b      	str	r3, [r7, #16]
    2cfe:	e7d2      	b.n	2ca6 <Crc16(unsigned char const*, unsigned int)+0x1a>
      }
    }
  }

  return crc;
    2d00:	8afb      	ldrh	r3, [r7, #22]
}
    2d02:	4618      	mov	r0, r3
    2d04:	371c      	adds	r7, #28
    2d06:	46bd      	mov	sp, r7
    2d08:	bc80      	pop	{r7}
    2d0a:	4770      	bx	lr

00002d0c <TestCrc()>:

void TestCrc() {
    2d0c:	b580      	push	{r7, lr}
    2d0e:	b084      	sub	sp, #16
    2d10:	af00      	add	r7, sp, #0
  printf("# Test: CRC\n");
    2d12:	4810      	ldr	r0, [pc, #64]	; (2d54 <TestCrc()+0x48>)
    2d14:	f009 ff82 	bl	cc1c <puts>

  // Test data
  char data[] = "123456789";
    2d18:	4a0f      	ldr	r2, [pc, #60]	; (2d58 <TestCrc()+0x4c>)
    2d1a:	463b      	mov	r3, r7
    2d1c:	ca07      	ldmia	r2, {r0, r1, r2}
    2d1e:	c303      	stmia	r3!, {r0, r1}
    2d20:	801a      	strh	r2, [r3, #0]
  size_t length = sizeof(data) / sizeof(data[0]) - 1U; // -1 to exclude null terminator
    2d22:	2309      	movs	r3, #9
    2d24:	60fb      	str	r3, [r7, #12]

  // Calculate CRC16
  uint16_t result = Crc16(reinterpret_cast<uint8_t *>(data), length);
    2d26:	463b      	mov	r3, r7
    2d28:	68f9      	ldr	r1, [r7, #12]
    2d2a:	4618      	mov	r0, r3
    2d2c:	f7ff ffae 	bl	2c8c <Crc16(unsigned char const*, unsigned int)>
    2d30:	4603      	mov	r3, r0
    2d32:	817b      	strh	r3, [r7, #10]

  // printf("CRC16: 0x%X\n", result);
  assert(result == 0x29B1);
    2d34:	897b      	ldrh	r3, [r7, #10]
    2d36:	f642 12b1 	movw	r2, #10673	; 0x29b1
    2d3a:	4293      	cmp	r3, r2
    2d3c:	d005      	beq.n	2d4a <TestCrc()+0x3e>
    2d3e:	4b07      	ldr	r3, [pc, #28]	; (2d5c <TestCrc()+0x50>)
    2d40:	4a07      	ldr	r2, [pc, #28]	; (2d60 <TestCrc()+0x54>)
    2d42:	2124      	movs	r1, #36	; 0x24
    2d44:	4807      	ldr	r0, [pc, #28]	; (2d64 <TestCrc()+0x58>)
    2d46:	f008 fec3 	bl	bad0 <__assert_func>
    2d4a:	bf00      	nop
    2d4c:	3710      	adds	r7, #16
    2d4e:	46bd      	mov	sp, r7
    2d50:	bd80      	pop	{r7, pc}
    2d52:	bf00      	nop
    2d54:	000189f4 	.word	0x000189f4
    2d58:	00018a68 	.word	0x00018a68
    2d5c:	00018a00 	.word	0x00018a00
    2d60:	00018a14 	.word	0x00018a14
    2d64:	00018a24 	.word	0x00018a24

00002d68 <TestHeap()>:
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

static constexpr uint32_t kAllocCycles = 33U;
void TestHeap() {
    2d68:	b580      	push	{r7, lr}
    2d6a:	b088      	sub	sp, #32
    2d6c:	af00      	add	r7, sp, #0
  printf("# Test: Heap\n");
    2d6e:	4843      	ldr	r0, [pc, #268]	; (2e7c <TestHeap()+0x114>)
    2d70:	f009 ff54 	bl	cc1c <puts>

  // get pointer to the actual heap start
  void *heap = malloc(1U);
    2d74:	2001      	movs	r0, #1
    2d76:	f009 f9df 	bl	c138 <malloc>
    2d7a:	4603      	mov	r3, r0
    2d7c:	61bb      	str	r3, [r7, #24]
  void *heap_start = heap;
    2d7e:	69bb      	ldr	r3, [r7, #24]
    2d80:	617b      	str	r3, [r7, #20]
  free(heap);
    2d82:	69b8      	ldr	r0, [r7, #24]
    2d84:	f009 f9e0 	bl	c148 <free>

  // Test data
  for (uint32_t i = 0u; i < kAllocCycles; i++) {
    2d88:	2300      	movs	r3, #0
    2d8a:	61fb      	str	r3, [r7, #28]
    2d8c:	69fb      	ldr	r3, [r7, #28]
    2d8e:	2b20      	cmp	r3, #32
    2d90:	d85e      	bhi.n	2e50 <TestHeap()+0xe8>
    uint32_t *p1 = new uint32_t;
    2d92:	2004      	movs	r0, #4
    2d94:	f000 f994 	bl	30c0 <operator new(unsigned int)>
    2d98:	4603      	mov	r3, r0
    2d9a:	613b      	str	r3, [r7, #16]
    uint16_t *p2 = new uint16_t;
    2d9c:	2002      	movs	r0, #2
    2d9e:	f000 f98f 	bl	30c0 <operator new(unsigned int)>
    2da2:	4603      	mov	r3, r0
    2da4:	60fb      	str	r3, [r7, #12]
    uint8_t *p3 = new uint8_t;
    2da6:	2001      	movs	r0, #1
    2da8:	f000 f98a 	bl	30c0 <operator new(unsigned int)>
    2dac:	4603      	mov	r3, r0
    2dae:	60bb      	str	r3, [r7, #8]
    void *p4 = malloc(97U); // 97 is a prime number
    2db0:	2061      	movs	r0, #97	; 0x61
    2db2:	f009 f9c1 	bl	c138 <malloc>
    2db6:	4603      	mov	r3, r0
    2db8:	607b      	str	r3, [r7, #4]

    assert(p1 != nullptr);
    2dba:	693b      	ldr	r3, [r7, #16]
    2dbc:	2b00      	cmp	r3, #0
    2dbe:	d105      	bne.n	2dcc <TestHeap()+0x64>
    2dc0:	4b2f      	ldr	r3, [pc, #188]	; (2e80 <TestHeap()+0x118>)
    2dc2:	4a30      	ldr	r2, [pc, #192]	; (2e84 <TestHeap()+0x11c>)
    2dc4:	2117      	movs	r1, #23
    2dc6:	4830      	ldr	r0, [pc, #192]	; (2e88 <TestHeap()+0x120>)
    2dc8:	f008 fe82 	bl	bad0 <__assert_func>
    assert(p2 != nullptr);
    2dcc:	68fb      	ldr	r3, [r7, #12]
    2dce:	2b00      	cmp	r3, #0
    2dd0:	d105      	bne.n	2dde <TestHeap()+0x76>
    2dd2:	4b2e      	ldr	r3, [pc, #184]	; (2e8c <TestHeap()+0x124>)
    2dd4:	4a2b      	ldr	r2, [pc, #172]	; (2e84 <TestHeap()+0x11c>)
    2dd6:	2118      	movs	r1, #24
    2dd8:	482b      	ldr	r0, [pc, #172]	; (2e88 <TestHeap()+0x120>)
    2dda:	f008 fe79 	bl	bad0 <__assert_func>
    assert(p3 != nullptr);
    2dde:	68bb      	ldr	r3, [r7, #8]
    2de0:	2b00      	cmp	r3, #0
    2de2:	d105      	bne.n	2df0 <TestHeap()+0x88>
    2de4:	4b2a      	ldr	r3, [pc, #168]	; (2e90 <TestHeap()+0x128>)
    2de6:	4a27      	ldr	r2, [pc, #156]	; (2e84 <TestHeap()+0x11c>)
    2de8:	2119      	movs	r1, #25
    2dea:	4827      	ldr	r0, [pc, #156]	; (2e88 <TestHeap()+0x120>)
    2dec:	f008 fe70 	bl	bad0 <__assert_func>
    assert(p4 != nullptr);
    2df0:	687b      	ldr	r3, [r7, #4]
    2df2:	2b00      	cmp	r3, #0
    2df4:	d105      	bne.n	2e02 <TestHeap()+0x9a>
    2df6:	4b27      	ldr	r3, [pc, #156]	; (2e94 <TestHeap()+0x12c>)
    2df8:	4a22      	ldr	r2, [pc, #136]	; (2e84 <TestHeap()+0x11c>)
    2dfa:	211a      	movs	r1, #26
    2dfc:	4822      	ldr	r0, [pc, #136]	; (2e88 <TestHeap()+0x120>)
    2dfe:	f008 fe67 	bl	bad0 <__assert_func>
    *p1 = i;
    2e02:	693b      	ldr	r3, [r7, #16]
    2e04:	69fa      	ldr	r2, [r7, #28]
    2e06:	601a      	str	r2, [r3, #0]
    *p2 = i;
    2e08:	69fb      	ldr	r3, [r7, #28]
    2e0a:	b29a      	uxth	r2, r3
    2e0c:	68fb      	ldr	r3, [r7, #12]
    2e0e:	801a      	strh	r2, [r3, #0]
    *p3 = i;
    2e10:	69fb      	ldr	r3, [r7, #28]
    2e12:	b2da      	uxtb	r2, r3
    2e14:	68bb      	ldr	r3, [r7, #8]
    2e16:	701a      	strb	r2, [r3, #0]

    delete p1;
    2e18:	693b      	ldr	r3, [r7, #16]
    2e1a:	2b00      	cmp	r3, #0
    2e1c:	d003      	beq.n	2e26 <TestHeap()+0xbe>
    2e1e:	2104      	movs	r1, #4
    2e20:	4618      	mov	r0, r3
    2e22:	f000 f94b 	bl	30bc <operator delete(void*, unsigned int)>
    delete p2;
    2e26:	68fb      	ldr	r3, [r7, #12]
    2e28:	2b00      	cmp	r3, #0
    2e2a:	d003      	beq.n	2e34 <TestHeap()+0xcc>
    2e2c:	2102      	movs	r1, #2
    2e2e:	4618      	mov	r0, r3
    2e30:	f000 f944 	bl	30bc <operator delete(void*, unsigned int)>
    delete p3;
    2e34:	68bb      	ldr	r3, [r7, #8]
    2e36:	2b00      	cmp	r3, #0
    2e38:	d003      	beq.n	2e42 <TestHeap()+0xda>
    2e3a:	2101      	movs	r1, #1
    2e3c:	4618      	mov	r0, r3
    2e3e:	f000 f93d 	bl	30bc <operator delete(void*, unsigned int)>
    free(p4);
    2e42:	6878      	ldr	r0, [r7, #4]
    2e44:	f009 f980 	bl	c148 <free>
  for (uint32_t i = 0u; i < kAllocCycles; i++) {
    2e48:	69fb      	ldr	r3, [r7, #28]
    2e4a:	3301      	adds	r3, #1
    2e4c:	61fb      	str	r3, [r7, #28]
    2e4e:	e79d      	b.n	2d8c <TestHeap()+0x24>
  }

  heap = malloc(1U);
    2e50:	2001      	movs	r0, #1
    2e52:	f009 f971 	bl	c138 <malloc>
    2e56:	4603      	mov	r3, r0
    2e58:	61bb      	str	r3, [r7, #24]
  assert(heap == heap_start);
    2e5a:	69ba      	ldr	r2, [r7, #24]
    2e5c:	697b      	ldr	r3, [r7, #20]
    2e5e:	429a      	cmp	r2, r3
    2e60:	d005      	beq.n	2e6e <TestHeap()+0x106>
    2e62:	4b0d      	ldr	r3, [pc, #52]	; (2e98 <TestHeap()+0x130>)
    2e64:	4a07      	ldr	r2, [pc, #28]	; (2e84 <TestHeap()+0x11c>)
    2e66:	2126      	movs	r1, #38	; 0x26
    2e68:	4807      	ldr	r0, [pc, #28]	; (2e88 <TestHeap()+0x120>)
    2e6a:	f008 fe31 	bl	bad0 <__assert_func>
  free(heap);
    2e6e:	69b8      	ldr	r0, [r7, #24]
    2e70:	f009 f96a 	bl	c148 <free>
    2e74:	bf00      	nop
    2e76:	3720      	adds	r7, #32
    2e78:	46bd      	mov	sp, r7
    2e7a:	bd80      	pop	{r7, pc}
    2e7c:	00018a78 	.word	0x00018a78
    2e80:	00018a88 	.word	0x00018a88
    2e84:	00018a98 	.word	0x00018a98
    2e88:	00018aa8 	.word	0x00018aa8
    2e8c:	00018aec 	.word	0x00018aec
    2e90:	00018afc 	.word	0x00018afc
    2e94:	00018b0c 	.word	0x00018b0c
    2e98:	00018b1c 	.word	0x00018b1c

00002e9c <ReadPSP()>:
// Inline assembly helper to set the PSP
__attribute__((always_inline)) inline void SetPSP(uint32_t pspValue) {
  __asm volatile("MSR PSP, %0\n" ::"r"(pspValue) : "memory"); // Input value for r0
}

uint32_t ReadPSP() {
    2e9c:	b480      	push	{r7}
    2e9e:	b083      	sub	sp, #12
    2ea0:	af00      	add	r7, sp, #0
  uint32_t psp_val;
  __asm volatile("MRS %0, PSP\n" : "=r"(psp_val));
    2ea2:	f3ef 8309 	mrs	r3, PSP
    2ea6:	607b      	str	r3, [r7, #4]
  return psp_val;
    2ea8:	687b      	ldr	r3, [r7, #4]
}
    2eaa:	4618      	mov	r0, r3
    2eac:	370c      	adds	r7, #12
    2eae:	46bd      	mov	sp, r7
    2eb0:	bc80      	pop	{r7}
    2eb2:	4770      	bx	lr

00002eb4 <ReadMSP()>:

uint32_t ReadMSP() {
    2eb4:	b480      	push	{r7}
    2eb6:	b083      	sub	sp, #12
    2eb8:	af00      	add	r7, sp, #0
  uint32_t msp_val;
  __asm volatile("MRS %0, MSP\n" : "=r"(msp_val));
    2eba:	f3ef 8308 	mrs	r3, MSP
    2ebe:	607b      	str	r3, [r7, #4]
  return msp_val;
    2ec0:	687b      	ldr	r3, [r7, #4]
}
    2ec2:	4618      	mov	r0, r3
    2ec4:	370c      	adds	r7, #12
    2ec6:	46bd      	mov	sp, r7
    2ec8:	bc80      	pop	{r7}
    2eca:	4770      	bx	lr

00002ecc <ReadControl()>:
                 ::
                     : "r0");
}

// Function to read the CONTROL register
uint32_t ReadControl() {
    2ecc:	b480      	push	{r7}
    2ece:	b083      	sub	sp, #12
    2ed0:	af00      	add	r7, sp, #0
  uint32_t controlValue;
  __asm volatile("MRS %0, CONTROL\n" : "=r"(controlValue));
    2ed2:	f3ef 8314 	mrs	r3, CONTROL
    2ed6:	607b      	str	r3, [r7, #4]
  return controlValue;
    2ed8:	687b      	ldr	r3, [r7, #4]
}
    2eda:	4618      	mov	r0, r3
    2edc:	370c      	adds	r7, #12
    2ede:	46bd      	mov	sp, r7
    2ee0:	bc80      	pop	{r7}
    2ee2:	4770      	bx	lr

00002ee4 <ProcessStackFct()>:

void __attribute__((noinline)) ProcessStackFct() {
    2ee4:	b580      	push	{r7, lr}
    2ee6:	b082      	sub	sp, #8
    2ee8:	af00      	add	r7, sp, #0
  auto control{0U};
    2eea:	2300      	movs	r3, #0
    2eec:	607b      	str	r3, [r7, #4]
  control = ReadControl(); // Read the CONTROL register
    2eee:	f7ff ffed 	bl	2ecc <ReadControl()>
    2ef2:	6078      	str	r0, [r7, #4]
  assert(control == 0x2U); // Check if the CONTROL register is set to use PSP
    2ef4:	687b      	ldr	r3, [r7, #4]
    2ef6:	2b02      	cmp	r3, #2
    2ef8:	d005      	beq.n	2f06 <ProcessStackFct()+0x22>
    2efa:	4b05      	ldr	r3, [pc, #20]	; (2f10 <ProcessStackFct()+0x2c>)
    2efc:	4a05      	ldr	r2, [pc, #20]	; (2f14 <ProcessStackFct()+0x30>)
    2efe:	2135      	movs	r1, #53	; 0x35
    2f00:	4805      	ldr	r0, [pc, #20]	; (2f18 <ProcessStackFct()+0x34>)
    2f02:	f008 fde5 	bl	bad0 <__assert_func>
}
    2f06:	bf00      	nop
    2f08:	3708      	adds	r7, #8
    2f0a:	46bd      	mov	sp, r7
    2f0c:	bd80      	pop	{r7, pc}
    2f0e:	bf00      	nop
    2f10:	00018b30 	.word	0x00018b30
    2f14:	00018b40 	.word	0x00018b40
    2f18:	00018b58 	.word	0x00018b58

00002f1c <TestProcessStack()>:

static uint32_t process_stack[1024]; // Define a stack for the process mode
void TestProcessStack() {
    2f1c:	b580      	push	{r7, lr}
    2f1e:	b084      	sub	sp, #16
    2f20:	af00      	add	r7, sp, #0
  printf("# Test: Process Stack Pointer\n");
    2f22:	4821      	ldr	r0, [pc, #132]	; (2fa8 <TestProcessStack()+0x8c>)
    2f24:	f009 fe7a 	bl	cc1c <puts>
  auto control = ReadControl(); // Read the CONTROL register
    2f28:	f7ff ffd0 	bl	2ecc <ReadControl()>
    2f2c:	60f8      	str	r0, [r7, #12]
  assert(control == 0x0U);      // Check if the CONTROL register is set to use MSP
    2f2e:	68fb      	ldr	r3, [r7, #12]
    2f30:	2b00      	cmp	r3, #0
    2f32:	d005      	beq.n	2f40 <TestProcessStack()+0x24>
    2f34:	4b1d      	ldr	r3, [pc, #116]	; (2fac <TestProcessStack()+0x90>)
    2f36:	4a1e      	ldr	r2, [pc, #120]	; (2fb0 <TestProcessStack()+0x94>)
    2f38:	213c      	movs	r1, #60	; 0x3c
    2f3a:	481e      	ldr	r0, [pc, #120]	; (2fb4 <TestProcessStack()+0x98>)
    2f3c:	f008 fdc8 	bl	bad0 <__assert_func>

  uint32_t psp_val =
    2f40:	4b1d      	ldr	r3, [pc, #116]	; (2fb8 <TestProcessStack()+0x9c>)
    2f42:	60bb      	str	r3, [r7, #8]
    2f44:	68bb      	ldr	r3, [r7, #8]
    2f46:	607b      	str	r3, [r7, #4]
  __asm volatile("MSR PSP, %0\n" ::"r"(pspValue) : "memory"); // Input value for r0
    2f48:	687b      	ldr	r3, [r7, #4]
    2f4a:	f383 8809 	msr	PSP, r3
}
    2f4e:	bf00      	nop
      reinterpret_cast<uint32_t>(&process_stack[1024]); // Initialize PSP (top of stack)

  SetPSP(psp_val);              // Set the PSP
  assert(ReadPSP() == psp_val); // Check if the PSP is set correctly
    2f50:	f7ff ffa4 	bl	2e9c <ReadPSP()>
    2f54:	4602      	mov	r2, r0
    2f56:	68bb      	ldr	r3, [r7, #8]
    2f58:	4293      	cmp	r3, r2
    2f5a:	d005      	beq.n	2f68 <TestProcessStack()+0x4c>
    2f5c:	4b17      	ldr	r3, [pc, #92]	; (2fbc <TestProcessStack()+0xa0>)
    2f5e:	4a14      	ldr	r2, [pc, #80]	; (2fb0 <TestProcessStack()+0x94>)
    2f60:	2142      	movs	r1, #66	; 0x42
    2f62:	4814      	ldr	r0, [pc, #80]	; (2fb4 <TestProcessStack()+0x98>)
    2f64:	f008 fdb4 	bl	bad0 <__assert_func>
  __asm volatile("MRS r0, CONTROL\n"   // Move CONTROL register to r0
    2f68:	f3ef 8014 	mrs	r0, CONTROL
    2f6c:	f040 0002 	orr.w	r0, r0, #2
    2f70:	f380 8814 	msr	CONTROL, r0
}
    2f74:	bf00      	nop
  SwitchToPSP();                // Switch to use PSP for stack operations

  ProcessStackFct(); // Call the function to test the process stack
    2f76:	f7ff ffb5 	bl	2ee4 <ProcessStackFct()>
  __asm volatile("MRS r0, CONTROL\n"   // Move CONTROL register to r0
    2f7a:	f3ef 8014 	mrs	r0, CONTROL
    2f7e:	f020 0002 	bic.w	r0, r0, #2
    2f82:	f380 8814 	msr	CONTROL, r0
}
    2f86:	bf00      	nop

  SwitchToMSP();           // Switch to use MSP for stack operations
  control = ReadControl(); // Read the CONTROL register
    2f88:	f7ff ffa0 	bl	2ecc <ReadControl()>
    2f8c:	60f8      	str	r0, [r7, #12]
  assert(control == 0x0U); // Check if the CONTROL register is set to use MSP
    2f8e:	68fb      	ldr	r3, [r7, #12]
    2f90:	2b00      	cmp	r3, #0
    2f92:	d005      	beq.n	2fa0 <TestProcessStack()+0x84>
    2f94:	4b05      	ldr	r3, [pc, #20]	; (2fac <TestProcessStack()+0x90>)
    2f96:	4a06      	ldr	r2, [pc, #24]	; (2fb0 <TestProcessStack()+0x94>)
    2f98:	2149      	movs	r1, #73	; 0x49
    2f9a:	4806      	ldr	r0, [pc, #24]	; (2fb4 <TestProcessStack()+0x98>)
    2f9c:	f008 fd98 	bl	bad0 <__assert_func>
}
    2fa0:	bf00      	nop
    2fa2:	3710      	adds	r7, #16
    2fa4:	46bd      	mov	sp, r7
    2fa6:	bd80      	pop	{r7, pc}
    2fa8:	00018ba4 	.word	0x00018ba4
    2fac:	00018bc4 	.word	0x00018bc4
    2fb0:	00018bd4 	.word	0x00018bd4
    2fb4:	00018b58 	.word	0x00018b58
    2fb8:	20001f28 	.word	0x20001f28
    2fbc:	00018bec 	.word	0x00018bec

00002fc0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
    2fc0:	2310      	movs	r3, #16
    2fc2:	b570      	push	{r4, r5, r6, lr}
    2fc4:	2400      	movs	r4, #0
    2fc6:	b084      	sub	sp, #16
    2fc8:	9302      	str	r3, [sp, #8]
    2fca:	6803      	ldr	r3, [r0, #0]
    2fcc:	4615      	mov	r5, r2
    2fce:	699e      	ldr	r6, [r3, #24]
    2fd0:	6812      	ldr	r2, [r2, #0]
    2fd2:	466b      	mov	r3, sp
    2fd4:	9400      	str	r4, [sp, #0]
    2fd6:	9401      	str	r4, [sp, #4]
    2fd8:	9403      	str	r4, [sp, #12]
    2fda:	47b0      	blx	r6
    2fdc:	f89d 3004 	ldrb.w	r3, [sp, #4]
    2fe0:	f003 0306 	and.w	r3, r3, #6
    2fe4:	2b06      	cmp	r3, #6
    2fe6:	bf09      	itett	eq
    2fe8:	2001      	moveq	r0, #1
    2fea:	4620      	movne	r0, r4
    2fec:	9b00      	ldreq	r3, [sp, #0]
    2fee:	602b      	streq	r3, [r5, #0]
    2ff0:	b004      	add	sp, #16
    2ff2:	bd70      	pop	{r4, r5, r6, pc}

00002ff4 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    2ff4:	9800      	ldr	r0, [sp, #0]
    2ff6:	4290      	cmp	r0, r2
    2ff8:	bf14      	ite	ne
    2ffa:	2001      	movne	r0, #1
    2ffc:	2006      	moveq	r0, #6
    2ffe:	4770      	bx	lr

00003000 <__cxxabiv1::__class_type_info::~__class_type_info()>:
    3000:	b510      	push	{r4, lr}
    3002:	4604      	mov	r4, r0
    3004:	4b02      	ldr	r3, [pc, #8]	; (3010 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
    3006:	6003      	str	r3, [r0, #0]
    3008:	f000 f906 	bl	3218 <std::type_info::~type_info()>
    300c:	4620      	mov	r0, r4
    300e:	bd10      	pop	{r4, pc}
    3010:	00018c3c 	.word	0x00018c3c

00003014 <__cxxabiv1::__class_type_info::~__class_type_info()>:
    3014:	b510      	push	{r4, lr}
    3016:	4604      	mov	r4, r0
    3018:	4b04      	ldr	r3, [pc, #16]	; (302c <__cxxabiv1::__class_type_info::~__class_type_info()+0x18>)
    301a:	6003      	str	r3, [r0, #0]
    301c:	f000 f8fc 	bl	3218 <std::type_info::~type_info()>
    3020:	4620      	mov	r0, r4
    3022:	2108      	movs	r1, #8
    3024:	f000 f84a 	bl	30bc <operator delete(void*, unsigned int)>
    3028:	4620      	mov	r0, r4
    302a:	bd10      	pop	{r4, pc}
    302c:	00018c3c 	.word	0x00018c3c

00003030 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    3030:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3034:	9f06      	ldr	r7, [sp, #24]
    3036:	e9dd 1508 	ldrd	r1, r5, [sp, #32]
    303a:	428f      	cmp	r7, r1
    303c:	4604      	mov	r4, r0
    303e:	4690      	mov	r8, r2
    3040:	461e      	mov	r6, r3
    3042:	d00c      	beq.n	305e <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
    3044:	4631      	mov	r1, r6
    3046:	4620      	mov	r0, r4
    3048:	f000 f90a 	bl	3260 <std::type_info::operator==(std::type_info const&) const>
    304c:	b120      	cbz	r0, 3058 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x28>
    304e:	2301      	movs	r3, #1
    3050:	602f      	str	r7, [r5, #0]
    3052:	f885 8004 	strb.w	r8, [r5, #4]
    3056:	71ab      	strb	r3, [r5, #6]
    3058:	2000      	movs	r0, #0
    305a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    305e:	9907      	ldr	r1, [sp, #28]
    3060:	f000 f8fe 	bl	3260 <std::type_info::operator==(std::type_info const&) const>
    3064:	2800      	cmp	r0, #0
    3066:	d0ed      	beq.n	3044 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x14>
    3068:	2000      	movs	r0, #0
    306a:	f885 8005 	strb.w	r8, [r5, #5]
    306e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3072:	bf00      	nop

00003074 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    3074:	b538      	push	{r3, r4, r5, lr}
    3076:	4615      	mov	r5, r2
    3078:	461c      	mov	r4, r3
    307a:	f000 f8f1 	bl	3260 <std::type_info::operator==(std::type_info const&) const>
    307e:	b900      	cbnz	r0, 3082 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe>
    3080:	bd38      	pop	{r3, r4, r5, pc}
    3082:	2208      	movs	r2, #8
    3084:	2306      	movs	r3, #6
    3086:	6025      	str	r5, [r4, #0]
    3088:	60e2      	str	r2, [r4, #12]
    308a:	7123      	strb	r3, [r4, #4]
    308c:	bd38      	pop	{r3, r4, r5, pc}
    308e:	bf00      	nop

00003090 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
    3090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3094:	4606      	mov	r6, r0
    3096:	4617      	mov	r7, r2
    3098:	461d      	mov	r5, r3
    309a:	460c      	mov	r4, r1
    309c:	f000 f8e0 	bl	3260 <std::type_info::operator==(std::type_info const&) const>
    30a0:	b948      	cbnz	r0, 30b6 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    30a2:	2d03      	cmp	r5, #3
    30a4:	d807      	bhi.n	30b6 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    30a6:	6823      	ldr	r3, [r4, #0]
    30a8:	463a      	mov	r2, r7
    30aa:	4631      	mov	r1, r6
    30ac:	4620      	mov	r0, r4
    30ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    30b2:	695b      	ldr	r3, [r3, #20]
    30b4:	4718      	bx	r3
    30b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    30ba:	bf00      	nop

000030bc <operator delete(void*, unsigned int)>:
    30bc:	f000 b902 	b.w	32c4 <operator delete(void*)>

000030c0 <operator new(unsigned int)>:
    30c0:	2801      	cmp	r0, #1
    30c2:	bf38      	it	cc
    30c4:	2001      	movcc	r0, #1
    30c6:	b510      	push	{r4, lr}
    30c8:	4604      	mov	r4, r0
    30ca:	4620      	mov	r0, r4
    30cc:	f009 f834 	bl	c138 <malloc>
    30d0:	b100      	cbz	r0, 30d4 <operator new(unsigned int)+0x14>
    30d2:	bd10      	pop	{r4, pc}
    30d4:	f000 fb20 	bl	3718 <std::get_new_handler()>
    30d8:	b108      	cbz	r0, 30de <operator new(unsigned int)+0x1e>
    30da:	4780      	blx	r0
    30dc:	e7f5      	b.n	30ca <operator new(unsigned int)+0xa>
    30de:	2004      	movs	r0, #4
    30e0:	f000 f970 	bl	33c4 <__cxa_allocate_exception>
    30e4:	4b02      	ldr	r3, [pc, #8]	; (30f0 <operator new(unsigned int)+0x30>)
    30e6:	4a03      	ldr	r2, [pc, #12]	; (30f4 <operator new(unsigned int)+0x34>)
    30e8:	4903      	ldr	r1, [pc, #12]	; (30f8 <operator new(unsigned int)+0x38>)
    30ea:	6003      	str	r3, [r0, #0]
    30ec:	f000 fab0 	bl	3650 <__cxa_throw>
    30f0:	00018d2c 	.word	0x00018d2c
    30f4:	00003295 	.word	0x00003295
    30f8:	00018d08 	.word	0x00018d08

000030fc <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    30fc:	b510      	push	{r4, lr}
    30fe:	4604      	mov	r4, r0
    3100:	4b02      	ldr	r3, [pc, #8]	; (310c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
    3102:	6003      	str	r3, [r0, #0]
    3104:	f7ff ff7c 	bl	3000 <__cxxabiv1::__class_type_info::~__class_type_info()>
    3108:	4620      	mov	r0, r4
    310a:	bd10      	pop	{r4, pc}
    310c:	00018c9c 	.word	0x00018c9c

00003110 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    3110:	b510      	push	{r4, lr}
    3112:	4604      	mov	r4, r0
    3114:	4b04      	ldr	r3, [pc, #16]	; (3128 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x18>)
    3116:	6003      	str	r3, [r0, #0]
    3118:	f7ff ff72 	bl	3000 <__cxxabiv1::__class_type_info::~__class_type_info()>
    311c:	4620      	mov	r0, r4
    311e:	210c      	movs	r1, #12
    3120:	f7ff ffcc 	bl	30bc <operator delete(void*, unsigned int)>
    3124:	4620      	mov	r0, r4
    3126:	bd10      	pop	{r4, pc}
    3128:	00018c9c 	.word	0x00018c9c

0000312c <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    312c:	b570      	push	{r4, r5, r6, lr}
    312e:	b082      	sub	sp, #8
    3130:	9e06      	ldr	r6, [sp, #24]
    3132:	4604      	mov	r4, r0
    3134:	4296      	cmp	r6, r2
    3136:	460d      	mov	r5, r1
    3138:	d009      	beq.n	314e <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x22>
    313a:	68a0      	ldr	r0, [r4, #8]
    313c:	4629      	mov	r1, r5
    313e:	6804      	ldr	r4, [r0, #0]
    3140:	9606      	str	r6, [sp, #24]
    3142:	6a24      	ldr	r4, [r4, #32]
    3144:	46a4      	mov	ip, r4
    3146:	b002      	add	sp, #8
    3148:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    314c:	4760      	bx	ip
    314e:	4619      	mov	r1, r3
    3150:	9201      	str	r2, [sp, #4]
    3152:	9300      	str	r3, [sp, #0]
    3154:	f000 f884 	bl	3260 <std::type_info::operator==(std::type_info const&) const>
    3158:	e9dd 3200 	ldrd	r3, r2, [sp]
    315c:	2800      	cmp	r0, #0
    315e:	d0ec      	beq.n	313a <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0xe>
    3160:	2006      	movs	r0, #6
    3162:	b002      	add	sp, #8
    3164:	bd70      	pop	{r4, r5, r6, pc}
    3166:	bf00      	nop

00003168 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    3168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    316c:	460d      	mov	r5, r1
    316e:	b081      	sub	sp, #4
    3170:	4619      	mov	r1, r3
    3172:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	; 0x28
    3176:	e9dd 980c 	ldrd	r9, r8, [sp, #48]	; 0x30
    317a:	461c      	mov	r4, r3
    317c:	4606      	mov	r6, r0
    317e:	4693      	mov	fp, r2
    3180:	f000 f86e 	bl	3260 <std::type_info::operator==(std::type_info const&) const>
    3184:	b980      	cbnz	r0, 31a8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x40>
    3186:	454f      	cmp	r7, r9
    3188:	d027      	beq.n	31da <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x72>
    318a:	68b0      	ldr	r0, [r6, #8]
    318c:	4623      	mov	r3, r4
    318e:	6804      	ldr	r4, [r0, #0]
    3190:	e9cd 980c 	strd	r9, r8, [sp, #48]	; 0x30
    3194:	e9cd 7a0a 	strd	r7, sl, [sp, #40]	; 0x28
    3198:	69e4      	ldr	r4, [r4, #28]
    319a:	465a      	mov	r2, fp
    319c:	4629      	mov	r1, r5
    319e:	46a4      	mov	ip, r4
    31a0:	b001      	add	sp, #4
    31a2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    31a6:	4760      	bx	ip
    31a8:	2d00      	cmp	r5, #0
    31aa:	f8c8 7000 	str.w	r7, [r8]
    31ae:	f888 b004 	strb.w	fp, [r8, #4]
    31b2:	db0c      	blt.n	31ce <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x66>
    31b4:	443d      	add	r5, r7
    31b6:	45a9      	cmp	r9, r5
    31b8:	bf0c      	ite	eq
    31ba:	f04f 0906 	moveq.w	r9, #6
    31be:	f04f 0901 	movne.w	r9, #1
    31c2:	f888 9006 	strb.w	r9, [r8, #6]
    31c6:	2000      	movs	r0, #0
    31c8:	b001      	add	sp, #4
    31ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    31ce:	3502      	adds	r5, #2
    31d0:	d1f9      	bne.n	31c6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x5e>
    31d2:	2301      	movs	r3, #1
    31d4:	f888 3006 	strb.w	r3, [r8, #6]
    31d8:	e7f5      	b.n	31c6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x5e>
    31da:	4651      	mov	r1, sl
    31dc:	4630      	mov	r0, r6
    31de:	f000 f83f 	bl	3260 <std::type_info::operator==(std::type_info const&) const>
    31e2:	2800      	cmp	r0, #0
    31e4:	d0d1      	beq.n	318a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22>
    31e6:	f888 b005 	strb.w	fp, [r8, #5]
    31ea:	e7ec      	b.n	31c6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x5e>

000031ec <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    31ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    31f0:	4606      	mov	r6, r0
    31f2:	460f      	mov	r7, r1
    31f4:	4614      	mov	r4, r2
    31f6:	461d      	mov	r5, r3
    31f8:	f7ff ff3c 	bl	3074 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
    31fc:	b948      	cbnz	r0, 3212 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
    31fe:	68b0      	ldr	r0, [r6, #8]
    3200:	462b      	mov	r3, r5
    3202:	6805      	ldr	r5, [r0, #0]
    3204:	4622      	mov	r2, r4
    3206:	69ac      	ldr	r4, [r5, #24]
    3208:	4639      	mov	r1, r7
    320a:	46a4      	mov	ip, r4
    320c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    3210:	4760      	bx	ip
    3212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3216:	bf00      	nop

00003218 <std::type_info::~type_info()>:
    3218:	4770      	bx	lr
    321a:	bf00      	nop

0000321c <std::type_info::__is_pointer_p() const>:
    321c:	2000      	movs	r0, #0
    321e:	4770      	bx	lr

00003220 <std::type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
    3220:	2000      	movs	r0, #0
    3222:	4770      	bx	lr

00003224 <std::type_info::~type_info()>:
    3224:	b510      	push	{r4, lr}
    3226:	4604      	mov	r4, r0
    3228:	2108      	movs	r1, #8
    322a:	f7ff ff47 	bl	30bc <operator delete(void*, unsigned int)>
    322e:	4620      	mov	r0, r4
    3230:	bd10      	pop	{r4, pc}
    3232:	bf00      	nop

00003234 <std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
    3234:	4288      	cmp	r0, r1
    3236:	d011      	beq.n	325c <std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x28>
    3238:	b508      	push	{r3, lr}
    323a:	6840      	ldr	r0, [r0, #4]
    323c:	7803      	ldrb	r3, [r0, #0]
    323e:	2b2a      	cmp	r3, #42	; 0x2a
    3240:	d00a      	beq.n	3258 <std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x24>
    3242:	6849      	ldr	r1, [r1, #4]
    3244:	780b      	ldrb	r3, [r1, #0]
    3246:	2b2a      	cmp	r3, #42	; 0x2a
    3248:	bf08      	it	eq
    324a:	3101      	addeq	r1, #1
    324c:	f00a f894 	bl	d378 <strcmp>
    3250:	fab0 f080 	clz	r0, r0
    3254:	0940      	lsrs	r0, r0, #5
    3256:	bd08      	pop	{r3, pc}
    3258:	2000      	movs	r0, #0
    325a:	bd08      	pop	{r3, pc}
    325c:	2001      	movs	r0, #1
    325e:	4770      	bx	lr

00003260 <std::type_info::operator==(std::type_info const&) const>:
    3260:	4281      	cmp	r1, r0
    3262:	d011      	beq.n	3288 <std::type_info::operator==(std::type_info const&) const+0x28>
    3264:	b508      	push	{r3, lr}
    3266:	6840      	ldr	r0, [r0, #4]
    3268:	7803      	ldrb	r3, [r0, #0]
    326a:	2b2a      	cmp	r3, #42	; 0x2a
    326c:	d00a      	beq.n	3284 <std::type_info::operator==(std::type_info const&) const+0x24>
    326e:	6849      	ldr	r1, [r1, #4]
    3270:	780b      	ldrb	r3, [r1, #0]
    3272:	2b2a      	cmp	r3, #42	; 0x2a
    3274:	bf08      	it	eq
    3276:	3101      	addeq	r1, #1
    3278:	f00a f87e 	bl	d378 <strcmp>
    327c:	fab0 f080 	clz	r0, r0
    3280:	0940      	lsrs	r0, r0, #5
    3282:	bd08      	pop	{r3, pc}
    3284:	2000      	movs	r0, #0
    3286:	bd08      	pop	{r3, pc}
    3288:	2001      	movs	r0, #1
    328a:	4770      	bx	lr

0000328c <std::bad_alloc::what() const>:
    328c:	4800      	ldr	r0, [pc, #0]	; (3290 <std::bad_alloc::what() const+0x4>)
    328e:	4770      	bx	lr
    3290:	00018cf8 	.word	0x00018cf8

00003294 <std::bad_alloc::~bad_alloc()>:
    3294:	b510      	push	{r4, lr}
    3296:	4604      	mov	r4, r0
    3298:	4b02      	ldr	r3, [pc, #8]	; (32a4 <std::bad_alloc::~bad_alloc()+0x10>)
    329a:	6003      	str	r3, [r0, #0]
    329c:	f000 f8f2 	bl	3484 <std::exception::~exception()>
    32a0:	4620      	mov	r0, r4
    32a2:	bd10      	pop	{r4, pc}
    32a4:	00018d2c 	.word	0x00018d2c

000032a8 <std::bad_alloc::~bad_alloc()>:
    32a8:	b510      	push	{r4, lr}
    32aa:	4604      	mov	r4, r0
    32ac:	4b04      	ldr	r3, [pc, #16]	; (32c0 <std::bad_alloc::~bad_alloc()+0x18>)
    32ae:	6003      	str	r3, [r0, #0]
    32b0:	f000 f8e8 	bl	3484 <std::exception::~exception()>
    32b4:	4620      	mov	r0, r4
    32b6:	2104      	movs	r1, #4
    32b8:	f7ff ff00 	bl	30bc <operator delete(void*, unsigned int)>
    32bc:	4620      	mov	r0, r4
    32be:	bd10      	pop	{r4, pc}
    32c0:	00018d2c 	.word	0x00018d2c

000032c4 <operator delete(void*)>:
    32c4:	f008 bf40 	b.w	c148 <free>

000032c8 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>:
    32c8:	491f      	ldr	r1, [pc, #124]	; (3348 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x80>)
    32ca:	b530      	push	{r4, r5, lr}
    32cc:	684b      	ldr	r3, [r1, #4]
    32ce:	f1a0 0408 	sub.w	r4, r0, #8
    32d2:	b35b      	cbz	r3, 332c <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x64>
    32d4:	f850 5c08 	ldr.w	r5, [r0, #-8]
    32d8:	eb04 0e05 	add.w	lr, r4, r5
    32dc:	4573      	cmp	r3, lr
    32de:	d825      	bhi.n	332c <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x64>
    32e0:	d01f      	beq.n	3322 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x5a>
    32e2:	685a      	ldr	r2, [r3, #4]
    32e4:	f101 0c04 	add.w	ip, r1, #4
    32e8:	b932      	cbnz	r2, 32f8 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x30>
    32ea:	e00f      	b.n	330c <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x44>
    32ec:	6851      	ldr	r1, [r2, #4]
    32ee:	f103 0c04 	add.w	ip, r3, #4
    32f2:	b311      	cbz	r1, 333a <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x72>
    32f4:	4613      	mov	r3, r2
    32f6:	460a      	mov	r2, r1
    32f8:	4596      	cmp	lr, r2
    32fa:	d3f7      	bcc.n	32ec <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x24>
    32fc:	bf04      	itt	eq
    32fe:	e9de 2100 	ldrdeq	r2, r1, [lr]
    3302:	6059      	streq	r1, [r3, #4]
    3304:	f8dc 3000 	ldr.w	r3, [ip]
    3308:	bf08      	it	eq
    330a:	18ad      	addeq	r5, r5, r2
    330c:	681a      	ldr	r2, [r3, #0]
    330e:	1899      	adds	r1, r3, r2
    3310:	428c      	cmp	r4, r1
    3312:	d00f      	beq.n	3334 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x6c>
    3314:	685b      	ldr	r3, [r3, #4]
    3316:	e940 5302 	strd	r5, r3, [r0, #-8]
    331a:	f8dc 3000 	ldr.w	r3, [ip]
    331e:	605c      	str	r4, [r3, #4]
    3320:	bd30      	pop	{r4, r5, pc}
    3322:	681a      	ldr	r2, [r3, #0]
    3324:	685b      	ldr	r3, [r3, #4]
    3326:	442a      	add	r2, r5
    3328:	f840 2c08 	str.w	r2, [r0, #-8]
    332c:	f840 3c04 	str.w	r3, [r0, #-4]
    3330:	604c      	str	r4, [r1, #4]
    3332:	bd30      	pop	{r4, r5, pc}
    3334:	442a      	add	r2, r5
    3336:	601a      	str	r2, [r3, #0]
    3338:	bd30      	pop	{r4, r5, pc}
    333a:	685b      	ldr	r3, [r3, #4]
    333c:	681a      	ldr	r2, [r3, #0]
    333e:	1899      	adds	r1, r3, r2
    3340:	428c      	cmp	r4, r1
    3342:	d1e7      	bne.n	3314 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x4c>
    3344:	e7f6      	b.n	3334 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x6c>
    3346:	bf00      	nop
    3348:	20001f28 	.word	0x20001f28

0000334c <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>:
    334c:	4916      	ldr	r1, [pc, #88]	; (33a8 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x5c>)
    334e:	f100 0208 	add.w	r2, r0, #8
    3352:	684b      	ldr	r3, [r1, #4]
    3354:	2a08      	cmp	r2, #8
    3356:	bf38      	it	cc
    3358:	2208      	movcc	r2, #8
    335a:	b1ab      	cbz	r3, 3388 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x3c>
    335c:	3207      	adds	r2, #7
    335e:	f022 0207 	bic.w	r2, r2, #7
    3362:	1d08      	adds	r0, r1, #4
    3364:	e002      	b.n	336c <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x20>
    3366:	1d18      	adds	r0, r3, #4
    3368:	685b      	ldr	r3, [r3, #4]
    336a:	b16b      	cbz	r3, 3388 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x3c>
    336c:	6819      	ldr	r1, [r3, #0]
    336e:	428a      	cmp	r2, r1
    3370:	d8f9      	bhi.n	3366 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x1a>
    3372:	b410      	push	{r4}
    3374:	1a8c      	subs	r4, r1, r2
    3376:	2c07      	cmp	r4, #7
    3378:	d808      	bhi.n	338c <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x40>
    337a:	685a      	ldr	r2, [r3, #4]
    337c:	6019      	str	r1, [r3, #0]
    337e:	3308      	adds	r3, #8
    3380:	6002      	str	r2, [r0, #0]
    3382:	bc10      	pop	{r4}
    3384:	4618      	mov	r0, r3
    3386:	4770      	bx	lr
    3388:	4618      	mov	r0, r3
    338a:	4770      	bx	lr
    338c:	f8d3 c004 	ldr.w	ip, [r3, #4]
    3390:	1899      	adds	r1, r3, r2
    3392:	f8c1 c004 	str.w	ip, [r1, #4]
    3396:	509c      	str	r4, [r3, r2]
    3398:	6803      	ldr	r3, [r0, #0]
    339a:	bc10      	pop	{r4}
    339c:	601a      	str	r2, [r3, #0]
    339e:	3308      	adds	r3, #8
    33a0:	6001      	str	r1, [r0, #0]
    33a2:	4618      	mov	r0, r3
    33a4:	4770      	bx	lr
    33a6:	bf00      	nop
    33a8:	20001f28 	.word	0x20001f28

000033ac <__gnu_cxx::__freeres()>:
    33ac:	b510      	push	{r4, lr}
    33ae:	4c04      	ldr	r4, [pc, #16]	; (33c0 <__gnu_cxx::__freeres()+0x14>)
    33b0:	68a0      	ldr	r0, [r4, #8]
    33b2:	b118      	cbz	r0, 33bc <__gnu_cxx::__freeres()+0x10>
    33b4:	f008 fec8 	bl	c148 <free>
    33b8:	2300      	movs	r3, #0
    33ba:	60a3      	str	r3, [r4, #8]
    33bc:	bd10      	pop	{r4, pc}
    33be:	bf00      	nop
    33c0:	20001f28 	.word	0x20001f28

000033c4 <__cxa_allocate_exception>:
    33c4:	b510      	push	{r4, lr}
    33c6:	f100 0480 	add.w	r4, r0, #128	; 0x80
    33ca:	4620      	mov	r0, r4
    33cc:	f008 feb4 	bl	c138 <malloc>
    33d0:	4603      	mov	r3, r0
    33d2:	b130      	cbz	r0, 33e2 <__cxa_allocate_exception+0x1e>
    33d4:	2280      	movs	r2, #128	; 0x80
    33d6:	2100      	movs	r1, #0
    33d8:	4618      	mov	r0, r3
    33da:	f009 fad7 	bl	c98c <memset>
    33de:	3080      	adds	r0, #128	; 0x80
    33e0:	bd10      	pop	{r4, pc}
    33e2:	4620      	mov	r0, r4
    33e4:	f7ff ffb2 	bl	334c <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>
    33e8:	4603      	mov	r3, r0
    33ea:	2800      	cmp	r0, #0
    33ec:	d1f2      	bne.n	33d4 <__cxa_allocate_exception+0x10>
    33ee:	f000 f891 	bl	3514 <std::terminate()>
    33f2:	bf00      	nop

000033f4 <__cxa_free_exception>:
    33f4:	4a06      	ldr	r2, [pc, #24]	; (3410 <__cxa_free_exception+0x1c>)
    33f6:	3880      	subs	r0, #128	; 0x80
    33f8:	6893      	ldr	r3, [r2, #8]
    33fa:	4298      	cmp	r0, r3
    33fc:	d905      	bls.n	340a <__cxa_free_exception+0x16>
    33fe:	68d2      	ldr	r2, [r2, #12]
    3400:	4413      	add	r3, r2
    3402:	4298      	cmp	r0, r3
    3404:	d201      	bcs.n	340a <__cxa_free_exception+0x16>
    3406:	f7ff bf5f 	b.w	32c8 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>
    340a:	f008 be9d 	b.w	c148 <free>
    340e:	bf00      	nop
    3410:	20001f28 	.word	0x20001f28

00003414 <__cxa_allocate_dependent_exception>:
    3414:	b508      	push	{r3, lr}
    3416:	2078      	movs	r0, #120	; 0x78
    3418:	f008 fe8e 	bl	c138 <malloc>
    341c:	4603      	mov	r3, r0
    341e:	b128      	cbz	r0, 342c <__cxa_allocate_dependent_exception+0x18>
    3420:	2278      	movs	r2, #120	; 0x78
    3422:	2100      	movs	r1, #0
    3424:	4618      	mov	r0, r3
    3426:	f009 fab1 	bl	c98c <memset>
    342a:	bd08      	pop	{r3, pc}
    342c:	2078      	movs	r0, #120	; 0x78
    342e:	f7ff ff8d 	bl	334c <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>
    3432:	4603      	mov	r3, r0
    3434:	2800      	cmp	r0, #0
    3436:	d1f3      	bne.n	3420 <__cxa_allocate_dependent_exception+0xc>
    3438:	f000 f86c 	bl	3514 <std::terminate()>

0000343c <__cxa_free_dependent_exception>:
    343c:	4906      	ldr	r1, [pc, #24]	; (3458 <__cxa_free_dependent_exception+0x1c>)
    343e:	4603      	mov	r3, r0
    3440:	688a      	ldr	r2, [r1, #8]
    3442:	4290      	cmp	r0, r2
    3444:	d905      	bls.n	3452 <__cxa_free_dependent_exception+0x16>
    3446:	68c9      	ldr	r1, [r1, #12]
    3448:	440a      	add	r2, r1
    344a:	4290      	cmp	r0, r2
    344c:	d201      	bcs.n	3452 <__cxa_free_dependent_exception+0x16>
    344e:	f7ff bf3b 	b.w	32c8 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>
    3452:	4618      	mov	r0, r3
    3454:	f008 be78 	b.w	c148 <free>
    3458:	20001f28 	.word	0x20001f28

0000345c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
    345c:	b538      	push	{r3, r4, r5, lr}
    345e:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
    3462:	4c07      	ldr	r4, [pc, #28]	; (3480 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
    3464:	4628      	mov	r0, r5
    3466:	60e5      	str	r5, [r4, #12]
    3468:	f008 fe66 	bl	c138 <malloc>
    346c:	60a0      	str	r0, [r4, #8]
    346e:	b120      	cbz	r0, 347a <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
    3470:	2300      	movs	r3, #0
    3472:	6060      	str	r0, [r4, #4]
    3474:	e9c0 5300 	strd	r5, r3, [r0]
    3478:	bd38      	pop	{r3, r4, r5, pc}
    347a:	60e0      	str	r0, [r4, #12]
    347c:	6060      	str	r0, [r4, #4]
    347e:	bd38      	pop	{r3, r4, r5, pc}
    3480:	20001f28 	.word	0x20001f28

00003484 <std::exception::~exception()>:
    3484:	4770      	bx	lr
    3486:	bf00      	nop

00003488 <std::bad_exception::~bad_exception()>:
    3488:	4770      	bx	lr
    348a:	bf00      	nop

0000348c <transaction clone for std::exception::what() const>:
    348c:	4800      	ldr	r0, [pc, #0]	; (3490 <transaction clone for std::exception::what() const+0x4>)
    348e:	4770      	bx	lr
    3490:	00018d38 	.word	0x00018d38

00003494 <transaction clone for std::bad_exception::what() const>:
    3494:	4800      	ldr	r0, [pc, #0]	; (3498 <transaction clone for std::bad_exception::what() const+0x4>)
    3496:	4770      	bx	lr
    3498:	00018d48 	.word	0x00018d48

0000349c <std::exception::~exception()>:
    349c:	b510      	push	{r4, lr}
    349e:	4604      	mov	r4, r0
    34a0:	2104      	movs	r1, #4
    34a2:	f7ff fe0b 	bl	30bc <operator delete(void*, unsigned int)>
    34a6:	4620      	mov	r0, r4
    34a8:	bd10      	pop	{r4, pc}
    34aa:	bf00      	nop

000034ac <std::bad_exception::~bad_exception()>:
    34ac:	b510      	push	{r4, lr}
    34ae:	4604      	mov	r4, r0
    34b0:	2104      	movs	r1, #4
    34b2:	f7ff fe03 	bl	30bc <operator delete(void*, unsigned int)>
    34b6:	4620      	mov	r0, r4
    34b8:	bd10      	pop	{r4, pc}
    34ba:	bf00      	nop

000034bc <__cxxabiv1::__forced_unwind::~__forced_unwind()>:
    34bc:	4770      	bx	lr
    34be:	bf00      	nop

000034c0 <__cxxabiv1::__forced_unwind::~__forced_unwind()>:
    34c0:	b510      	push	{r4, lr}
    34c2:	4604      	mov	r4, r0
    34c4:	2104      	movs	r1, #4
    34c6:	f7ff fdf9 	bl	30bc <operator delete(void*, unsigned int)>
    34ca:	4620      	mov	r0, r4
    34cc:	bd10      	pop	{r4, pc}
    34ce:	bf00      	nop

000034d0 <__cxxabiv1::__foreign_exception::~__foreign_exception()>:
    34d0:	4770      	bx	lr
    34d2:	bf00      	nop

000034d4 <__cxxabiv1::__foreign_exception::~__foreign_exception()>:
    34d4:	b510      	push	{r4, lr}
    34d6:	4604      	mov	r4, r0
    34d8:	2104      	movs	r1, #4
    34da:	f7ff fdef 	bl	30bc <operator delete(void*, unsigned int)>
    34de:	4620      	mov	r0, r4
    34e0:	bd10      	pop	{r4, pc}
    34e2:	bf00      	nop

000034e4 <transaction clone for std::exception::~exception() const>:
    34e4:	4770      	bx	lr
    34e6:	bf00      	nop

000034e8 <transaction clone for std::bad_exception::~bad_exception() const>:
    34e8:	4770      	bx	lr
    34ea:	bf00      	nop

000034ec <__cxxabiv1::__terminate(void (*)())>:
    34ec:	b508      	push	{r3, lr}
    34ee:	4780      	blx	r0
    34f0:	f008 fae6 	bl	bac0 <abort>
    34f4:	f006 fb0c 	bl	9b10 <__cxa_begin_catch>
    34f8:	f008 fae2 	bl	bac0 <abort>
    34fc:	460c      	mov	r4, r1
    34fe:	4605      	mov	r5, r0
    3500:	f006 fb46 	bl	9b90 <__cxa_end_catch>
    3504:	3401      	adds	r4, #1
    3506:	d102      	bne.n	350e <__cxxabiv1::__terminate(void (*)())+0x22>
    3508:	4628      	mov	r0, r5
    350a:	f006 fa8b 	bl	9a24 <__cxa_call_unexpected>
    350e:	f006 f991 	bl	9834 <__cxa_end_cleanup>
    3512:	bf00      	nop

00003514 <std::terminate()>:
    3514:	b508      	push	{r3, lr}
    3516:	4b03      	ldr	r3, [pc, #12]	; (3524 <std::terminate()+0x10>)
    3518:	6818      	ldr	r0, [r3, #0]
    351a:	f3bf 8f5b 	dmb	ish
    351e:	f7ff ffe5 	bl	34ec <__cxxabiv1::__terminate(void (*)())>
    3522:	bf00      	nop
    3524:	20000120 	.word	0x20000120

00003528 <__cxxabiv1::__unexpected(void (*)())>:
    3528:	b508      	push	{r3, lr}
    352a:	4780      	blx	r0
    352c:	f7ff fff2 	bl	3514 <std::terminate()>

00003530 <std::unexpected()>:
    3530:	b508      	push	{r3, lr}
    3532:	4b03      	ldr	r3, [pc, #12]	; (3540 <std::unexpected()+0x10>)
    3534:	6818      	ldr	r0, [r3, #0]
    3536:	f3bf 8f5b 	dmb	ish
    353a:	f7ff fff5 	bl	3528 <__cxxabiv1::__unexpected(void (*)())>
    353e:	bf00      	nop
    3540:	2000011c 	.word	0x2000011c

00003544 <std::set_terminate(void (*)())>:
    3544:	4b07      	ldr	r3, [pc, #28]	; (3564 <std::set_terminate(void (*)())+0x20>)
    3546:	f3bf 8f5b 	dmb	ish
    354a:	2800      	cmp	r0, #0
    354c:	bf18      	it	ne
    354e:	4603      	movne	r3, r0
    3550:	4a05      	ldr	r2, [pc, #20]	; (3568 <std::set_terminate(void (*)())+0x24>)
    3552:	e852 0f00 	ldrex	r0, [r2]
    3556:	e842 3100 	strex	r1, r3, [r2]
    355a:	2900      	cmp	r1, #0
    355c:	d1f9      	bne.n	3552 <std::set_terminate(void (*)())+0xe>
    355e:	f3bf 8f5b 	dmb	ish
    3562:	4770      	bx	lr
    3564:	00003751 	.word	0x00003751
    3568:	20000120 	.word	0x20000120

0000356c <std::get_terminate()>:
    356c:	4b02      	ldr	r3, [pc, #8]	; (3578 <std::get_terminate()+0xc>)
    356e:	6818      	ldr	r0, [r3, #0]
    3570:	f3bf 8f5b 	dmb	ish
    3574:	4770      	bx	lr
    3576:	bf00      	nop
    3578:	20000120 	.word	0x20000120

0000357c <std::set_unexpected(void (*)())>:
    357c:	4b07      	ldr	r3, [pc, #28]	; (359c <std::set_unexpected(void (*)())+0x20>)
    357e:	f3bf 8f5b 	dmb	ish
    3582:	2800      	cmp	r0, #0
    3584:	bf18      	it	ne
    3586:	4603      	movne	r3, r0
    3588:	4a05      	ldr	r2, [pc, #20]	; (35a0 <std::set_unexpected(void (*)())+0x24>)
    358a:	e852 0f00 	ldrex	r0, [r2]
    358e:	e842 3100 	strex	r1, r3, [r2]
    3592:	2900      	cmp	r1, #0
    3594:	d1f9      	bne.n	358a <std::set_unexpected(void (*)())+0xe>
    3596:	f3bf 8f5b 	dmb	ish
    359a:	4770      	bx	lr
    359c:	00003515 	.word	0x00003515
    35a0:	2000011c 	.word	0x2000011c

000035a4 <std::get_unexpected()>:
    35a4:	4b02      	ldr	r3, [pc, #8]	; (35b0 <std::get_unexpected()+0xc>)
    35a6:	6818      	ldr	r0, [r3, #0]
    35a8:	f3bf 8f5b 	dmb	ish
    35ac:	4770      	bx	lr
    35ae:	bf00      	nop
    35b0:	2000011c 	.word	0x2000011c

000035b4 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)>:
    35b4:	2801      	cmp	r0, #1
    35b6:	b510      	push	{r4, lr}
    35b8:	d81a      	bhi.n	35f0 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x3c>
    35ba:	f3bf 8f5b 	dmb	ish
    35be:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
    35c2:	e853 2f00 	ldrex	r2, [r3]
    35c6:	3a01      	subs	r2, #1
    35c8:	e843 2000 	strex	r0, r2, [r3]
    35cc:	2800      	cmp	r0, #0
    35ce:	d1f8      	bne.n	35c2 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0xe>
    35d0:	f3bf 8f5b 	dmb	ish
    35d4:	b95a      	cbnz	r2, 35ee <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x3a>
    35d6:	f851 3c1c 	ldr.w	r3, [r1, #-28]
    35da:	f101 0458 	add.w	r4, r1, #88	; 0x58
    35de:	b10b      	cbz	r3, 35e4 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x30>
    35e0:	4620      	mov	r0, r4
    35e2:	4798      	blx	r3
    35e4:	4620      	mov	r0, r4
    35e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    35ea:	f7ff bf03 	b.w	33f4 <__cxa_free_exception>
    35ee:	bd10      	pop	{r4, pc}
    35f0:	f851 0c14 	ldr.w	r0, [r1, #-20]
    35f4:	f7ff ff7a 	bl	34ec <__cxxabiv1::__terminate(void (*)())>

000035f8 <__cxa_init_primary_exception>:
    35f8:	b538      	push	{r3, r4, r5, lr}
    35fa:	2500      	movs	r5, #0
    35fc:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
    3600:	f840 5c80 	str.w	r5, [r0, #-128]
    3604:	4604      	mov	r4, r0
    3606:	f7ff ffcd 	bl	35a4 <std::get_unexpected()>
    360a:	f844 0c70 	str.w	r0, [r4, #-112]
    360e:	f7ff ffad 	bl	356c <std::get_terminate()>
    3612:	232b      	movs	r3, #43	; 0x2b
    3614:	2147      	movs	r1, #71	; 0x47
    3616:	2243      	movs	r2, #67	; 0x43
    3618:	f804 1c58 	strb.w	r1, [r4, #-88]
    361c:	f804 3c53 	strb.w	r3, [r4, #-83]
    3620:	214e      	movs	r1, #78	; 0x4e
    3622:	f804 3c52 	strb.w	r3, [r4, #-82]
    3626:	2355      	movs	r3, #85	; 0x55
    3628:	f804 2c55 	strb.w	r2, [r4, #-85]
    362c:	f804 2c54 	strb.w	r2, [r4, #-84]
    3630:	4a06      	ldr	r2, [pc, #24]	; (364c <__cxa_init_primary_exception+0x54>)
    3632:	f804 5c51 	strb.w	r5, [r4, #-81]
    3636:	f804 1c57 	strb.w	r1, [r4, #-87]
    363a:	f804 3c56 	strb.w	r3, [r4, #-86]
    363e:	f844 0c6c 	str.w	r0, [r4, #-108]
    3642:	f844 2c50 	str.w	r2, [r4, #-80]
    3646:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
    364a:	bd38      	pop	{r3, r4, r5, pc}
    364c:	000035b5 	.word	0x000035b5

00003650 <__cxa_throw>:
    3650:	b570      	push	{r4, r5, r6, lr}
    3652:	4604      	mov	r4, r0
    3654:	460e      	mov	r6, r1
    3656:	4615      	mov	r5, r2
    3658:	f006 faf0 	bl	9c3c <__cxa_get_globals>
    365c:	4603      	mov	r3, r0
    365e:	4620      	mov	r0, r4
    3660:	685c      	ldr	r4, [r3, #4]
    3662:	4631      	mov	r1, r6
    3664:	3401      	adds	r4, #1
    3666:	462a      	mov	r2, r5
    3668:	605c      	str	r4, [r3, #4]
    366a:	f7ff ffc5 	bl	35f8 <__cxa_init_primary_exception>
    366e:	2301      	movs	r3, #1
    3670:	4604      	mov	r4, r0
    3672:	f844 3b28 	str.w	r3, [r4], #40
    3676:	4620      	mov	r0, r4
    3678:	f007 fffc 	bl	b674 <_Unwind_RaiseException>
    367c:	4620      	mov	r0, r4
    367e:	f006 fa47 	bl	9b10 <__cxa_begin_catch>
    3682:	f7ff ff47 	bl	3514 <std::terminate()>
    3686:	bf00      	nop

00003688 <__cxa_rethrow>:
    3688:	b510      	push	{r4, lr}
    368a:	f006 fad7 	bl	9c3c <__cxa_get_globals>
    368e:	e9d0 4200 	ldrd	r4, r2, [r0]
    3692:	3201      	adds	r2, #1
    3694:	6042      	str	r2, [r0, #4]
    3696:	b164      	cbz	r4, 36b2 <__cxa_rethrow+0x2a>
    3698:	f894 2020 	ldrb.w	r2, [r4, #32]
    369c:	2a47      	cmp	r2, #71	; 0x47
    369e:	d00a      	beq.n	36b6 <__cxa_rethrow+0x2e>
    36a0:	2200      	movs	r2, #0
    36a2:	6002      	str	r2, [r0, #0]
    36a4:	3420      	adds	r4, #32
    36a6:	4620      	mov	r0, r4
    36a8:	f008 f808 	bl	b6bc <_Unwind_Resume_or_Rethrow>
    36ac:	4620      	mov	r0, r4
    36ae:	f006 fa2f 	bl	9b10 <__cxa_begin_catch>
    36b2:	f7ff ff2f 	bl	3514 <std::terminate()>
    36b6:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
    36ba:	2a4e      	cmp	r2, #78	; 0x4e
    36bc:	d1f0      	bne.n	36a0 <__cxa_rethrow+0x18>
    36be:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
    36c2:	2a55      	cmp	r2, #85	; 0x55
    36c4:	d1ec      	bne.n	36a0 <__cxa_rethrow+0x18>
    36c6:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
    36ca:	2a43      	cmp	r2, #67	; 0x43
    36cc:	d1e8      	bne.n	36a0 <__cxa_rethrow+0x18>
    36ce:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
    36d2:	2a43      	cmp	r2, #67	; 0x43
    36d4:	d1e4      	bne.n	36a0 <__cxa_rethrow+0x18>
    36d6:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
    36da:	2a2b      	cmp	r2, #43	; 0x2b
    36dc:	d1e0      	bne.n	36a0 <__cxa_rethrow+0x18>
    36de:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
    36e2:	2a2b      	cmp	r2, #43	; 0x2b
    36e4:	d1dc      	bne.n	36a0 <__cxa_rethrow+0x18>
    36e6:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
    36ea:	2a01      	cmp	r2, #1
    36ec:	d8d8      	bhi.n	36a0 <__cxa_rethrow+0x18>
    36ee:	6962      	ldr	r2, [r4, #20]
    36f0:	4252      	negs	r2, r2
    36f2:	6162      	str	r2, [r4, #20]
    36f4:	e7d6      	b.n	36a4 <__cxa_rethrow+0x1c>
    36f6:	bf00      	nop

000036f8 <std::set_new_handler(void (*)())>:
    36f8:	4602      	mov	r2, r0
    36fa:	f3bf 8f5b 	dmb	ish
    36fe:	4b05      	ldr	r3, [pc, #20]	; (3714 <std::set_new_handler(void (*)())+0x1c>)
    3700:	e853 0f00 	ldrex	r0, [r3]
    3704:	e843 2100 	strex	r1, r2, [r3]
    3708:	2900      	cmp	r1, #0
    370a:	d1f9      	bne.n	3700 <std::set_new_handler(void (*)())+0x8>
    370c:	f3bf 8f5b 	dmb	ish
    3710:	4770      	bx	lr
    3712:	bf00      	nop
    3714:	20001f38 	.word	0x20001f38

00003718 <std::get_new_handler()>:
    3718:	4b02      	ldr	r3, [pc, #8]	; (3724 <std::get_new_handler()+0xc>)
    371a:	6818      	ldr	r0, [r3, #0]
    371c:	f3bf 8f5b 	dmb	ish
    3720:	4770      	bx	lr
    3722:	bf00      	nop
    3724:	20001f38 	.word	0x20001f38

00003728 <__cxa_pure_virtual>:
    3728:	221b      	movs	r2, #27
    372a:	b508      	push	{r3, lr}
    372c:	4902      	ldr	r1, [pc, #8]	; (3738 <__cxa_pure_virtual+0x10>)
    372e:	2002      	movs	r0, #2
    3730:	f00b fcbe 	bl	f0b0 <write>
    3734:	f7ff feee 	bl	3514 <std::terminate()>
    3738:	00018e3c 	.word	0x00018e3c

0000373c <__cxa_deleted_virtual>:
    373c:	221e      	movs	r2, #30
    373e:	b508      	push	{r3, lr}
    3740:	4902      	ldr	r1, [pc, #8]	; (374c <__cxa_deleted_virtual+0x10>)
    3742:	2002      	movs	r0, #2
    3744:	f00b fcb4 	bl	f0b0 <write>
    3748:	f7ff fee4 	bl	3514 <std::terminate()>
    374c:	00018e58 	.word	0x00018e58

00003750 <__gnu_cxx::__verbose_terminate_handler()>:
    3750:	b570      	push	{r4, r5, r6, lr}
    3752:	4b3b      	ldr	r3, [pc, #236]	; (3840 <__gnu_cxx::__verbose_terminate_handler()+0xf0>)
    3754:	b082      	sub	sp, #8
    3756:	781a      	ldrb	r2, [r3, #0]
    3758:	2a00      	cmp	r2, #0
    375a:	d141      	bne.n	37e0 <__gnu_cxx::__verbose_terminate_handler()+0x90>
    375c:	2401      	movs	r4, #1
    375e:	701c      	strb	r4, [r3, #0]
    3760:	f006 fd90 	bl	a284 <__cxa_current_exception_type>
    3764:	2800      	cmp	r0, #0
    3766:	d031      	beq.n	37cc <__gnu_cxx::__verbose_terminate_handler()+0x7c>
    3768:	2200      	movs	r2, #0
    376a:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    376e:	6844      	ldr	r4, [r0, #4]
    3770:	4611      	mov	r1, r2
    3772:	7823      	ldrb	r3, [r4, #0]
    3774:	9601      	str	r6, [sp, #4]
    3776:	2b2a      	cmp	r3, #42	; 0x2a
    3778:	bf08      	it	eq
    377a:	3401      	addeq	r4, #1
    377c:	ab01      	add	r3, sp, #4
    377e:	4620      	mov	r0, r4
    3780:	f005 ffe4 	bl	974c <__cxa_demangle>
    3784:	4d2f      	ldr	r5, [pc, #188]	; (3844 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    3786:	4606      	mov	r6, r0
    3788:	682b      	ldr	r3, [r5, #0]
    378a:	2230      	movs	r2, #48	; 0x30
    378c:	68db      	ldr	r3, [r3, #12]
    378e:	2101      	movs	r1, #1
    3790:	482d      	ldr	r0, [pc, #180]	; (3848 <__gnu_cxx::__verbose_terminate_handler()+0xf8>)
    3792:	f008 fc63 	bl	c05c <fwrite>
    3796:	9b01      	ldr	r3, [sp, #4]
    3798:	b193      	cbz	r3, 37c0 <__gnu_cxx::__verbose_terminate_handler()+0x70>
    379a:	682b      	ldr	r3, [r5, #0]
    379c:	4620      	mov	r0, r4
    379e:	68d9      	ldr	r1, [r3, #12]
    37a0:	f008 fa86 	bl	bcb0 <fputs>
    37a4:	682b      	ldr	r3, [r5, #0]
    37a6:	2202      	movs	r2, #2
    37a8:	68db      	ldr	r3, [r3, #12]
    37aa:	2101      	movs	r1, #1
    37ac:	4827      	ldr	r0, [pc, #156]	; (384c <__gnu_cxx::__verbose_terminate_handler()+0xfc>)
    37ae:	f008 fc55 	bl	c05c <fwrite>
    37b2:	9b01      	ldr	r3, [sp, #4]
    37b4:	b913      	cbnz	r3, 37bc <__gnu_cxx::__verbose_terminate_handler()+0x6c>
    37b6:	4630      	mov	r0, r6
    37b8:	f008 fcc6 	bl	c148 <free>
    37bc:	f7ff ff64 	bl	3688 <__cxa_rethrow>
    37c0:	682b      	ldr	r3, [r5, #0]
    37c2:	4630      	mov	r0, r6
    37c4:	68d9      	ldr	r1, [r3, #12]
    37c6:	f008 fa73 	bl	bcb0 <fputs>
    37ca:	e7eb      	b.n	37a4 <__gnu_cxx::__verbose_terminate_handler()+0x54>
    37cc:	4b1d      	ldr	r3, [pc, #116]	; (3844 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    37ce:	222d      	movs	r2, #45	; 0x2d
    37d0:	681b      	ldr	r3, [r3, #0]
    37d2:	4621      	mov	r1, r4
    37d4:	68db      	ldr	r3, [r3, #12]
    37d6:	481e      	ldr	r0, [pc, #120]	; (3850 <__gnu_cxx::__verbose_terminate_handler()+0x100>)
    37d8:	f008 fc40 	bl	c05c <fwrite>
    37dc:	f008 f970 	bl	bac0 <abort>
    37e0:	4b18      	ldr	r3, [pc, #96]	; (3844 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    37e2:	221d      	movs	r2, #29
    37e4:	681b      	ldr	r3, [r3, #0]
    37e6:	2101      	movs	r1, #1
    37e8:	68db      	ldr	r3, [r3, #12]
    37ea:	481a      	ldr	r0, [pc, #104]	; (3854 <__gnu_cxx::__verbose_terminate_handler()+0x104>)
    37ec:	f008 fc36 	bl	c05c <fwrite>
    37f0:	f008 f966 	bl	bac0 <abort>
    37f4:	2901      	cmp	r1, #1
    37f6:	460c      	mov	r4, r1
    37f8:	d119      	bne.n	382e <__gnu_cxx::__verbose_terminate_handler()+0xde>
    37fa:	f006 f989 	bl	9b10 <__cxa_begin_catch>
    37fe:	6803      	ldr	r3, [r0, #0]
    3800:	689b      	ldr	r3, [r3, #8]
    3802:	4798      	blx	r3
    3804:	682b      	ldr	r3, [r5, #0]
    3806:	4606      	mov	r6, r0
    3808:	220b      	movs	r2, #11
    380a:	4621      	mov	r1, r4
    380c:	68db      	ldr	r3, [r3, #12]
    380e:	4812      	ldr	r0, [pc, #72]	; (3858 <__gnu_cxx::__verbose_terminate_handler()+0x108>)
    3810:	f008 fc24 	bl	c05c <fwrite>
    3814:	682b      	ldr	r3, [r5, #0]
    3816:	4630      	mov	r0, r6
    3818:	68d9      	ldr	r1, [r3, #12]
    381a:	f008 fa49 	bl	bcb0 <fputs>
    381e:	682b      	ldr	r3, [r5, #0]
    3820:	200a      	movs	r0, #10
    3822:	68d9      	ldr	r1, [r3, #12]
    3824:	f008 f9d4 	bl	bbd0 <fputc>
    3828:	f006 f9b2 	bl	9b90 <__cxa_end_catch>
    382c:	e7d6      	b.n	37dc <__gnu_cxx::__verbose_terminate_handler()+0x8c>
    382e:	f006 f96f 	bl	9b10 <__cxa_begin_catch>
    3832:	f006 f9ad 	bl	9b90 <__cxa_end_catch>
    3836:	e7d1      	b.n	37dc <__gnu_cxx::__verbose_terminate_handler()+0x8c>
    3838:	f006 f9aa 	bl	9b90 <__cxa_end_catch>
    383c:	f005 fffa 	bl	9834 <__cxa_end_cleanup>
    3840:	20001f3c 	.word	0x20001f3c
    3844:	20000124 	.word	0x20000124
    3848:	00018e98 	.word	0x00018e98
    384c:	00018ecc 	.word	0x00018ecc
    3850:	00018ed0 	.word	0x00018ed0
    3854:	00018e78 	.word	0x00018e78
    3858:	00018f00 	.word	0x00018f00

0000385c <d_make_comp>:
    385c:	4684      	mov	ip, r0
    385e:	1e48      	subs	r0, r1, #1
    3860:	b570      	push	{r4, r5, r6, lr}
    3862:	284f      	cmp	r0, #79	; 0x4f
    3864:	d842      	bhi.n	38ec <d_make_comp+0x90>
    3866:	e8df f000 	tbb	[pc, r0]
    386a:	2828      	.short	0x2828
    386c:	41412828 	.word	0x41412828
    3870:	3f3f4141 	.word	0x3f3f4141
    3874:	3f3f3f28 	.word	0x3f3f3f28
    3878:	3f3f3f3f 	.word	0x3f3f3f3f
    387c:	3f3f3f3f 	.word	0x3f3f3f3f
    3880:	2a2a413f 	.word	0x2a2a413f
    3884:	2a2a2a2a 	.word	0x2a2a2a2a
    3888:	3f282a2a 	.word	0x3f282a2a
    388c:	3f3f3f3f 	.word	0x3f3f3f3f
    3890:	292a3f41 	.word	0x292a3f41
    3894:	2a284128 	.word	0x2a284128
    3898:	41293f2a 	.word	0x41293f2a
    389c:	3f3f3f41 	.word	0x3f3f3f41
    38a0:	28282828 	.word	0x28282828
    38a4:	28283f28 	.word	0x28283f28
    38a8:	4141283f 	.word	0x4141283f
    38ac:	413f3f3f 	.word	0x413f3f3f
    38b0:	3f3f4141 	.word	0x3f3f4141
    38b4:	282a283f 	.word	0x282a283f
    38b8:	2a2a      	.short	0x2a2a
    38ba:	b1ba      	cbz	r2, 38ec <d_make_comp+0x90>
    38bc:	b1b3      	cbz	r3, 38ec <d_make_comp+0x90>
    38be:	e9dc 4005 	ldrd	r4, r0, [ip, #20]
    38c2:	4284      	cmp	r4, r0
    38c4:	da12      	bge.n	38ec <d_make_comp+0x90>
    38c6:	2600      	movs	r6, #0
    38c8:	f8dc 5010 	ldr.w	r5, [ip, #16]
    38cc:	eb04 0e84 	add.w	lr, r4, r4, lsl #2
    38d0:	eb05 008e 	add.w	r0, r5, lr, lsl #2
    38d4:	3401      	adds	r4, #1
    38d6:	e9c0 6601 	strd	r6, r6, [r0, #4]
    38da:	f8cc 4014 	str.w	r4, [ip, #20]
    38de:	f805 102e 	strb.w	r1, [r5, lr, lsl #2]
    38e2:	e9c0 2303 	strd	r2, r3, [r0, #12]
    38e6:	bd70      	pop	{r4, r5, r6, pc}
    38e8:	2a00      	cmp	r2, #0
    38ea:	d1e8      	bne.n	38be <d_make_comp+0x62>
    38ec:	2000      	movs	r0, #0
    38ee:	bd70      	pop	{r4, r5, r6, pc}

000038f0 <d_number>:
    38f0:	b570      	push	{r4, r5, r6, lr}
    38f2:	68c2      	ldr	r2, [r0, #12]
    38f4:	4686      	mov	lr, r0
    38f6:	7811      	ldrb	r1, [r2, #0]
    38f8:	296e      	cmp	r1, #110	; 0x6e
    38fa:	d024      	beq.n	3946 <d_number+0x56>
    38fc:	3930      	subs	r1, #48	; 0x30
    38fe:	b2cb      	uxtb	r3, r1
    3900:	2b09      	cmp	r3, #9
    3902:	d82a      	bhi.n	395a <d_number+0x6a>
    3904:	2600      	movs	r6, #0
    3906:	2000      	movs	r0, #0
    3908:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
    390c:	4c14      	ldr	r4, [pc, #80]	; (3960 <d_number+0x70>)
    390e:	e006      	b.n	391e <d_number+0x2e>
    3910:	4619      	mov	r1, r3
    3912:	1aeb      	subs	r3, r5, r3
    3914:	fba4 c303 	umull	ip, r3, r4, r3
    3918:	ebb0 0fd3 	cmp.w	r0, r3, lsr #3
    391c:	dc10      	bgt.n	3940 <d_number+0x50>
    391e:	3201      	adds	r2, #1
    3920:	f8ce 200c 	str.w	r2, [lr, #12]
    3924:	7813      	ldrb	r3, [r2, #0]
    3926:	eb00 0080 	add.w	r0, r0, r0, lsl #2
    392a:	3b30      	subs	r3, #48	; 0x30
    392c:	fa5f fc83 	uxtb.w	ip, r3
    3930:	f1bc 0f09 	cmp.w	ip, #9
    3934:	eb01 0040 	add.w	r0, r1, r0, lsl #1
    3938:	d9ea      	bls.n	3910 <d_number+0x20>
    393a:	b106      	cbz	r6, 393e <d_number+0x4e>
    393c:	4240      	negs	r0, r0
    393e:	bd70      	pop	{r4, r5, r6, pc}
    3940:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    3944:	bd70      	pop	{r4, r5, r6, pc}
    3946:	1c53      	adds	r3, r2, #1
    3948:	60c3      	str	r3, [r0, #12]
    394a:	7851      	ldrb	r1, [r2, #1]
    394c:	3930      	subs	r1, #48	; 0x30
    394e:	b2ca      	uxtb	r2, r1
    3950:	2a09      	cmp	r2, #9
    3952:	d802      	bhi.n	395a <d_number+0x6a>
    3954:	461a      	mov	r2, r3
    3956:	2601      	movs	r6, #1
    3958:	e7d5      	b.n	3906 <d_number+0x16>
    395a:	2000      	movs	r0, #0
    395c:	bd70      	pop	{r4, r5, r6, pc}
    395e:	bf00      	nop
    3960:	cccccccd 	.word	0xcccccccd

00003964 <d_call_offset>:
    3964:	b510      	push	{r4, lr}
    3966:	4604      	mov	r4, r0
    3968:	b929      	cbnz	r1, 3976 <d_call_offset+0x12>
    396a:	68c3      	ldr	r3, [r0, #12]
    396c:	781a      	ldrb	r2, [r3, #0]
    396e:	b16a      	cbz	r2, 398c <d_call_offset+0x28>
    3970:	1c5a      	adds	r2, r3, #1
    3972:	60c2      	str	r2, [r0, #12]
    3974:	7819      	ldrb	r1, [r3, #0]
    3976:	2968      	cmp	r1, #104	; 0x68
    3978:	d017      	beq.n	39aa <d_call_offset+0x46>
    397a:	2976      	cmp	r1, #118	; 0x76
    397c:	d106      	bne.n	398c <d_call_offset+0x28>
    397e:	4620      	mov	r0, r4
    3980:	f7ff ffb6 	bl	38f0 <d_number>
    3984:	68e3      	ldr	r3, [r4, #12]
    3986:	781a      	ldrb	r2, [r3, #0]
    3988:	2a5f      	cmp	r2, #95	; 0x5f
    398a:	d001      	beq.n	3990 <d_call_offset+0x2c>
    398c:	2000      	movs	r0, #0
    398e:	bd10      	pop	{r4, pc}
    3990:	3301      	adds	r3, #1
    3992:	4620      	mov	r0, r4
    3994:	60e3      	str	r3, [r4, #12]
    3996:	f7ff ffab 	bl	38f0 <d_number>
    399a:	68e3      	ldr	r3, [r4, #12]
    399c:	781a      	ldrb	r2, [r3, #0]
    399e:	2a5f      	cmp	r2, #95	; 0x5f
    39a0:	d1f4      	bne.n	398c <d_call_offset+0x28>
    39a2:	2001      	movs	r0, #1
    39a4:	4403      	add	r3, r0
    39a6:	60e3      	str	r3, [r4, #12]
    39a8:	bd10      	pop	{r4, pc}
    39aa:	4620      	mov	r0, r4
    39ac:	f7ff ffa0 	bl	38f0 <d_number>
    39b0:	e7f3      	b.n	399a <d_call_offset+0x36>
    39b2:	bf00      	nop

000039b4 <d_ref_qualifier>:
    39b4:	b410      	push	{r4}
    39b6:	68c3      	ldr	r3, [r0, #12]
    39b8:	460a      	mov	r2, r1
    39ba:	7819      	ldrb	r1, [r3, #0]
    39bc:	2952      	cmp	r1, #82	; 0x52
    39be:	d00d      	beq.n	39dc <d_ref_qualifier+0x28>
    39c0:	294f      	cmp	r1, #79	; 0x4f
    39c2:	d002      	beq.n	39ca <d_ref_qualifier+0x16>
    39c4:	4610      	mov	r0, r2
    39c6:	bc10      	pop	{r4}
    39c8:	4770      	bx	lr
    39ca:	2120      	movs	r1, #32
    39cc:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
    39ce:	3403      	adds	r4, #3
    39d0:	62c4      	str	r4, [r0, #44]	; 0x2c
    39d2:	1c5c      	adds	r4, r3, #1
    39d4:	60c4      	str	r4, [r0, #12]
    39d6:	2300      	movs	r3, #0
    39d8:	bc10      	pop	{r4}
    39da:	e73f      	b.n	385c <d_make_comp>
    39dc:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
    39de:	211f      	movs	r1, #31
    39e0:	3402      	adds	r4, #2
    39e2:	62c4      	str	r4, [r0, #44]	; 0x2c
    39e4:	e7f5      	b.n	39d2 <d_ref_qualifier+0x1e>
    39e6:	bf00      	nop

000039e8 <d_count_templates_scopes>:
    39e8:	2900      	cmp	r1, #0
    39ea:	d065      	beq.n	3ab8 <d_count_templates_scopes+0xd0>
    39ec:	b570      	push	{r4, r5, r6, lr}
    39ee:	4606      	mov	r6, r0
    39f0:	460c      	mov	r4, r1
    39f2:	68a3      	ldr	r3, [r4, #8]
    39f4:	2b01      	cmp	r3, #1
    39f6:	f103 0301 	add.w	r3, r3, #1
    39fa:	dc36      	bgt.n	3a6a <d_count_templates_scopes+0x82>
    39fc:	f8d6 511c 	ldr.w	r5, [r6, #284]	; 0x11c
    3a00:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
    3a04:	dc31      	bgt.n	3a6a <d_count_templates_scopes+0x82>
    3a06:	7822      	ldrb	r2, [r4, #0]
    3a08:	60a3      	str	r3, [r4, #8]
    3a0a:	1e53      	subs	r3, r2, #1
    3a0c:	2b4f      	cmp	r3, #79	; 0x4f
    3a0e:	d82c      	bhi.n	3a6a <d_count_templates_scopes+0x82>
    3a10:	e8df f003 	tbb	[pc, r3]
    3a14:	4b303030 	.word	0x4b303030
    3a18:	2c2c2b2b 	.word	0x2c2c2b2b
    3a1c:	30303030 	.word	0x30303030
    3a20:	30303030 	.word	0x30303030
    3a24:	30303030 	.word	0x30303030
    3a28:	2b303030 	.word	0x2b303030
    3a2c:	30303030 	.word	0x30303030
    3a30:	30303030 	.word	0x30303030
    3a34:	41413030 	.word	0x41413030
    3a38:	302b3030 	.word	0x302b3030
    3a3c:	28303030 	.word	0x28303030
    3a40:	30303030 	.word	0x30303030
    3a44:	302c2b30 	.word	0x302c2b30
    3a48:	30303030 	.word	0x30303030
    3a4c:	30303030 	.word	0x30303030
    3a50:	30303030 	.word	0x30303030
    3a54:	28302b2b 	.word	0x28302b2b
    3a58:	2b282828 	.word	0x2b282828
    3a5c:	30303030 	.word	0x30303030
    3a60:	30303030 	.word	0x30303030
    3a64:	68e4      	ldr	r4, [r4, #12]
    3a66:	2c00      	cmp	r4, #0
    3a68:	d1c3      	bne.n	39f2 <d_count_templates_scopes+0xa>
    3a6a:	bd70      	pop	{r4, r5, r6, pc}
    3a6c:	6924      	ldr	r4, [r4, #16]
    3a6e:	2c00      	cmp	r4, #0
    3a70:	d1bf      	bne.n	39f2 <d_count_templates_scopes+0xa>
    3a72:	e7fa      	b.n	3a6a <d_count_templates_scopes+0x82>
    3a74:	68e1      	ldr	r1, [r4, #12]
    3a76:	3501      	adds	r5, #1
    3a78:	4630      	mov	r0, r6
    3a7a:	f8c6 511c 	str.w	r5, [r6, #284]	; 0x11c
    3a7e:	f7ff ffb3 	bl	39e8 <d_count_templates_scopes>
    3a82:	4630      	mov	r0, r6
    3a84:	6921      	ldr	r1, [r4, #16]
    3a86:	f7ff ffaf 	bl	39e8 <d_count_templates_scopes>
    3a8a:	f8d6 311c 	ldr.w	r3, [r6, #284]	; 0x11c
    3a8e:	3b01      	subs	r3, #1
    3a90:	f8c6 311c 	str.w	r3, [r6, #284]	; 0x11c
    3a94:	bd70      	pop	{r4, r5, r6, pc}
    3a96:	68e1      	ldr	r1, [r4, #12]
    3a98:	780b      	ldrb	r3, [r1, #0]
    3a9a:	2b05      	cmp	r3, #5
    3a9c:	d1eb      	bne.n	3a76 <d_count_templates_scopes+0x8e>
    3a9e:	f8d6 3138 	ldr.w	r3, [r6, #312]	; 0x138
    3aa2:	3301      	adds	r3, #1
    3aa4:	f8c6 3138 	str.w	r3, [r6, #312]	; 0x138
    3aa8:	e7e5      	b.n	3a76 <d_count_templates_scopes+0x8e>
    3aaa:	f8d6 3144 	ldr.w	r3, [r6, #324]	; 0x144
    3aae:	68e1      	ldr	r1, [r4, #12]
    3ab0:	3301      	adds	r3, #1
    3ab2:	f8c6 3144 	str.w	r3, [r6, #324]	; 0x144
    3ab6:	e7de      	b.n	3a76 <d_count_templates_scopes+0x8e>
    3ab8:	4770      	bx	lr
    3aba:	bf00      	nop

00003abc <d_discriminator>:
    3abc:	68c3      	ldr	r3, [r0, #12]
    3abe:	781a      	ldrb	r2, [r3, #0]
    3ac0:	2a5f      	cmp	r2, #95	; 0x5f
    3ac2:	d001      	beq.n	3ac8 <d_discriminator+0xc>
    3ac4:	2001      	movs	r0, #1
    3ac6:	4770      	bx	lr
    3ac8:	b510      	push	{r4, lr}
    3aca:	1c5a      	adds	r2, r3, #1
    3acc:	60c2      	str	r2, [r0, #12]
    3ace:	785a      	ldrb	r2, [r3, #1]
    3ad0:	4604      	mov	r4, r0
    3ad2:	2a5f      	cmp	r2, #95	; 0x5f
    3ad4:	d004      	beq.n	3ae0 <d_discriminator+0x24>
    3ad6:	f7ff ff0b 	bl	38f0 <d_number>
    3ada:	43c0      	mvns	r0, r0
    3adc:	0fc0      	lsrs	r0, r0, #31
    3ade:	bd10      	pop	{r4, pc}
    3ae0:	3302      	adds	r3, #2
    3ae2:	60c3      	str	r3, [r0, #12]
    3ae4:	f7ff ff04 	bl	38f0 <d_number>
    3ae8:	2800      	cmp	r0, #0
    3aea:	db09      	blt.n	3b00 <d_discriminator+0x44>
    3aec:	2809      	cmp	r0, #9
    3aee:	dd09      	ble.n	3b04 <d_discriminator+0x48>
    3af0:	68e3      	ldr	r3, [r4, #12]
    3af2:	781a      	ldrb	r2, [r3, #0]
    3af4:	2a5f      	cmp	r2, #95	; 0x5f
    3af6:	d103      	bne.n	3b00 <d_discriminator+0x44>
    3af8:	3301      	adds	r3, #1
    3afa:	2001      	movs	r0, #1
    3afc:	60e3      	str	r3, [r4, #12]
    3afe:	bd10      	pop	{r4, pc}
    3b00:	2000      	movs	r0, #0
    3b02:	bd10      	pop	{r4, pc}
    3b04:	2001      	movs	r0, #1
    3b06:	bd10      	pop	{r4, pc}

00003b08 <d_index_template_argument.part.0>:
    3b08:	b928      	cbnz	r0, 3b16 <d_index_template_argument.part.0+0xe>
    3b0a:	e009      	b.n	3b20 <d_index_template_argument.part.0+0x18>
    3b0c:	2900      	cmp	r1, #0
    3b0e:	dd08      	ble.n	3b22 <d_index_template_argument.part.0+0x1a>
    3b10:	6900      	ldr	r0, [r0, #16]
    3b12:	3901      	subs	r1, #1
    3b14:	b140      	cbz	r0, 3b28 <d_index_template_argument.part.0+0x20>
    3b16:	7803      	ldrb	r3, [r0, #0]
    3b18:	2b2f      	cmp	r3, #47	; 0x2f
    3b1a:	d0f7      	beq.n	3b0c <d_index_template_argument.part.0+0x4>
    3b1c:	2000      	movs	r0, #0
    3b1e:	4770      	bx	lr
    3b20:	4770      	bx	lr
    3b22:	d1fb      	bne.n	3b1c <d_index_template_argument.part.0+0x14>
    3b24:	68c0      	ldr	r0, [r0, #12]
    3b26:	4770      	bx	lr
    3b28:	4770      	bx	lr
    3b2a:	bf00      	nop

00003b2c <d_growable_string_callback_adapter>:
    3b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3b2e:	4614      	mov	r4, r2
    3b30:	6852      	ldr	r2, [r2, #4]
    3b32:	68a5      	ldr	r5, [r4, #8]
    3b34:	1c4b      	adds	r3, r1, #1
    3b36:	4413      	add	r3, r2
    3b38:	42ab      	cmp	r3, r5
    3b3a:	460e      	mov	r6, r1
    3b3c:	4607      	mov	r7, r0
    3b3e:	b083      	sub	sp, #12
    3b40:	d811      	bhi.n	3b66 <d_growable_string_callback_adapter+0x3a>
    3b42:	68e5      	ldr	r5, [r4, #12]
    3b44:	b96d      	cbnz	r5, 3b62 <d_growable_string_callback_adapter+0x36>
    3b46:	6863      	ldr	r3, [r4, #4]
    3b48:	6820      	ldr	r0, [r4, #0]
    3b4a:	4632      	mov	r2, r6
    3b4c:	4418      	add	r0, r3
    3b4e:	4639      	mov	r1, r7
    3b50:	f008 fe2a 	bl	c7a8 <memcpy>
    3b54:	e9d4 3200 	ldrd	r3, r2, [r4]
    3b58:	4433      	add	r3, r6
    3b5a:	549d      	strb	r5, [r3, r2]
    3b5c:	6863      	ldr	r3, [r4, #4]
    3b5e:	4433      	add	r3, r6
    3b60:	6063      	str	r3, [r4, #4]
    3b62:	b003      	add	sp, #12
    3b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3b66:	68e2      	ldr	r2, [r4, #12]
    3b68:	2a00      	cmp	r2, #0
    3b6a:	d1fa      	bne.n	3b62 <d_growable_string_callback_adapter+0x36>
    3b6c:	b155      	cbz	r5, 3b84 <d_growable_string_callback_adapter+0x58>
    3b6e:	006d      	lsls	r5, r5, #1
    3b70:	42ab      	cmp	r3, r5
    3b72:	d8fc      	bhi.n	3b6e <d_growable_string_callback_adapter+0x42>
    3b74:	4629      	mov	r1, r5
    3b76:	6820      	ldr	r0, [r4, #0]
    3b78:	f009 f858 	bl	cc2c <realloc>
    3b7c:	b138      	cbz	r0, 3b8e <d_growable_string_callback_adapter+0x62>
    3b7e:	6020      	str	r0, [r4, #0]
    3b80:	60a5      	str	r5, [r4, #8]
    3b82:	e7de      	b.n	3b42 <d_growable_string_callback_adapter+0x16>
    3b84:	2b02      	cmp	r3, #2
    3b86:	f04f 0502 	mov.w	r5, #2
    3b8a:	d8f0      	bhi.n	3b6e <d_growable_string_callback_adapter+0x42>
    3b8c:	e7f2      	b.n	3b74 <d_growable_string_callback_adapter+0x48>
    3b8e:	9001      	str	r0, [sp, #4]
    3b90:	6820      	ldr	r0, [r4, #0]
    3b92:	f008 fad9 	bl	c148 <free>
    3b96:	2201      	movs	r2, #1
    3b98:	9b01      	ldr	r3, [sp, #4]
    3b9a:	e9c4 3300 	strd	r3, r3, [r4]
    3b9e:	e9c4 3202 	strd	r3, r2, [r4, #8]
    3ba2:	e7de      	b.n	3b62 <d_growable_string_callback_adapter+0x36>

00003ba4 <next_is_type_qual.isra.0>:
    3ba4:	7803      	ldrb	r3, [r0, #0]
    3ba6:	2b72      	cmp	r3, #114	; 0x72
    3ba8:	d007      	beq.n	3bba <next_is_type_qual.isra.0+0x16>
    3baa:	2b56      	cmp	r3, #86	; 0x56
    3bac:	d005      	beq.n	3bba <next_is_type_qual.isra.0+0x16>
    3bae:	2b4b      	cmp	r3, #75	; 0x4b
    3bb0:	d003      	beq.n	3bba <next_is_type_qual.isra.0+0x16>
    3bb2:	2b44      	cmp	r3, #68	; 0x44
    3bb4:	d003      	beq.n	3bbe <next_is_type_qual.isra.0+0x1a>
    3bb6:	2000      	movs	r0, #0
    3bb8:	4770      	bx	lr
    3bba:	2001      	movs	r0, #1
    3bbc:	4770      	bx	lr
    3bbe:	7840      	ldrb	r0, [r0, #1]
    3bc0:	f000 03df 	and.w	r3, r0, #223	; 0xdf
    3bc4:	2b4f      	cmp	r3, #79	; 0x4f
    3bc6:	d0f8      	beq.n	3bba <next_is_type_qual.isra.0+0x16>
    3bc8:	3877      	subs	r0, #119	; 0x77
    3bca:	2801      	cmp	r0, #1
    3bcc:	bf8c      	ite	hi
    3bce:	2000      	movhi	r0, #0
    3bd0:	2001      	movls	r0, #1
    3bd2:	4770      	bx	lr

00003bd4 <d_append_char>:
    3bd4:	b570      	push	{r4, r5, r6, lr}
    3bd6:	460d      	mov	r5, r1
    3bd8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    3bdc:	4604      	mov	r4, r0
    3bde:	29ff      	cmp	r1, #255	; 0xff
    3be0:	d006      	beq.n	3bf0 <d_append_char+0x1c>
    3be2:	1c4b      	adds	r3, r1, #1
    3be4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    3be8:	5465      	strb	r5, [r4, r1]
    3bea:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    3bee:	bd70      	pop	{r4, r5, r6, pc}
    3bf0:	2600      	movs	r6, #0
    3bf2:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    3bf6:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    3bfa:	4798      	blx	r3
    3bfc:	2301      	movs	r3, #1
    3bfe:	4631      	mov	r1, r6
    3c00:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    3c04:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    3c08:	441a      	add	r2, r3
    3c0a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    3c0e:	5465      	strb	r5, [r4, r1]
    3c10:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    3c14:	bd70      	pop	{r4, r5, r6, pc}
    3c16:	bf00      	nop

00003c18 <d_lookup_template_argument>:
    3c18:	4603      	mov	r3, r0
    3c1a:	f8d0 0110 	ldr.w	r0, [r0, #272]	; 0x110
    3c1e:	b190      	cbz	r0, 3c46 <d_lookup_template_argument+0x2e>
    3c20:	68cb      	ldr	r3, [r1, #12]
    3c22:	6842      	ldr	r2, [r0, #4]
    3c24:	2b00      	cmp	r3, #0
    3c26:	6910      	ldr	r0, [r2, #16]
    3c28:	db0b      	blt.n	3c42 <d_lookup_template_argument+0x2a>
    3c2a:	b920      	cbnz	r0, 3c36 <d_lookup_template_argument+0x1e>
    3c2c:	e009      	b.n	3c42 <d_lookup_template_argument+0x2a>
    3c2e:	b13b      	cbz	r3, 3c40 <d_lookup_template_argument+0x28>
    3c30:	6900      	ldr	r0, [r0, #16]
    3c32:	3b01      	subs	r3, #1
    3c34:	b130      	cbz	r0, 3c44 <d_lookup_template_argument+0x2c>
    3c36:	7802      	ldrb	r2, [r0, #0]
    3c38:	2a2f      	cmp	r2, #47	; 0x2f
    3c3a:	d0f8      	beq.n	3c2e <d_lookup_template_argument+0x16>
    3c3c:	2000      	movs	r0, #0
    3c3e:	4770      	bx	lr
    3c40:	68c0      	ldr	r0, [r0, #12]
    3c42:	4770      	bx	lr
    3c44:	4770      	bx	lr
    3c46:	2201      	movs	r2, #1
    3c48:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
    3c4c:	4770      	bx	lr
    3c4e:	bf00      	nop

00003c50 <d_find_pack>:
    3c50:	2900      	cmp	r1, #0
    3c52:	d042      	beq.n	3cda <d_find_pack+0x8a>
    3c54:	b538      	push	{r3, r4, r5, lr}
    3c56:	4605      	mov	r5, r0
    3c58:	460c      	mov	r4, r1
    3c5a:	7823      	ldrb	r3, [r4, #0]
    3c5c:	2b4c      	cmp	r3, #76	; 0x4c
    3c5e:	d832      	bhi.n	3cc6 <d_find_pack+0x76>
    3c60:	e8df f003 	tbb	[pc, r3]
    3c64:	3131312f 	.word	0x3131312f
    3c68:	372f2731 	.word	0x372f2731
    3c6c:	31313137 	.word	0x31313137
    3c70:	31313131 	.word	0x31313131
    3c74:	31313131 	.word	0x31313131
    3c78:	31313131 	.word	0x31313131
    3c7c:	3131312f 	.word	0x3131312f
    3c80:	31313131 	.word	0x31313131
    3c84:	31313131 	.word	0x31313131
    3c88:	2f313131 	.word	0x2f313131
    3c8c:	31313131 	.word	0x31313131
    3c90:	3131312f 	.word	0x3131312f
    3c94:	372f3131 	.word	0x372f3131
    3c98:	31313131 	.word	0x31313131
    3c9c:	31313131 	.word	0x31313131
    3ca0:	31313131 	.word	0x31313131
    3ca4:	312f2f31 	.word	0x312f2f31
    3ca8:	2f2f3131 	.word	0x2f2f3131
    3cac:	2f31312f 	.word	0x2f31312f
    3cb0:	2f          	.byte	0x2f
    3cb1:	00          	.byte	0x00
    3cb2:	4621      	mov	r1, r4
    3cb4:	4628      	mov	r0, r5
    3cb6:	f7ff ffaf 	bl	3c18 <d_lookup_template_argument>
    3cba:	b110      	cbz	r0, 3cc2 <d_find_pack+0x72>
    3cbc:	7803      	ldrb	r3, [r0, #0]
    3cbe:	2b2f      	cmp	r3, #47	; 0x2f
    3cc0:	d000      	beq.n	3cc4 <d_find_pack+0x74>
    3cc2:	2000      	movs	r0, #0
    3cc4:	bd38      	pop	{r3, r4, r5, pc}
    3cc6:	4628      	mov	r0, r5
    3cc8:	68e1      	ldr	r1, [r4, #12]
    3cca:	f7ff ffc1 	bl	3c50 <d_find_pack>
    3cce:	2800      	cmp	r0, #0
    3cd0:	d1f8      	bne.n	3cc4 <d_find_pack+0x74>
    3cd2:	6924      	ldr	r4, [r4, #16]
    3cd4:	2c00      	cmp	r4, #0
    3cd6:	d1c0      	bne.n	3c5a <d_find_pack+0xa>
    3cd8:	e7f3      	b.n	3cc2 <d_find_pack+0x72>
    3cda:	2000      	movs	r0, #0
    3cdc:	4770      	bx	lr
    3cde:	bf00      	nop

00003ce0 <d_append_string>:
    3ce0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3ce4:	4604      	mov	r4, r0
    3ce6:	4608      	mov	r0, r1
    3ce8:	460d      	mov	r5, r1
    3cea:	f009 fc23 	bl	d534 <strlen>
    3cee:	b340      	cbz	r0, 3d42 <d_append_string+0x62>
    3cf0:	3d01      	subs	r5, #1
    3cf2:	f04f 0800 	mov.w	r8, #0
    3cf6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    3cfa:	182f      	adds	r7, r5, r0
    3cfc:	e009      	b.n	3d12 <d_append_string+0x32>
    3cfe:	460b      	mov	r3, r1
    3d00:	42bd      	cmp	r5, r7
    3d02:	f101 0101 	add.w	r1, r1, #1
    3d06:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    3d0a:	54e6      	strb	r6, [r4, r3]
    3d0c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    3d10:	d017      	beq.n	3d42 <d_append_string+0x62>
    3d12:	29ff      	cmp	r1, #255	; 0xff
    3d14:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    3d18:	d1f1      	bne.n	3cfe <d_append_string+0x1e>
    3d1a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    3d1e:	4620      	mov	r0, r4
    3d20:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    3d24:	4798      	blx	r3
    3d26:	2101      	movs	r1, #1
    3d28:	2300      	movs	r3, #0
    3d2a:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    3d2e:	42bd      	cmp	r5, r7
    3d30:	440a      	add	r2, r1
    3d32:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    3d36:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    3d3a:	54e6      	strb	r6, [r4, r3]
    3d3c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    3d40:	d1e7      	bne.n	3d12 <d_append_string+0x32>
    3d42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3d46:	bf00      	nop

00003d48 <d_template_param>:
    3d48:	b538      	push	{r3, r4, r5, lr}
    3d4a:	68c3      	ldr	r3, [r0, #12]
    3d4c:	781a      	ldrb	r2, [r3, #0]
    3d4e:	2a54      	cmp	r2, #84	; 0x54
    3d50:	d125      	bne.n	3d9e <d_template_param+0x56>
    3d52:	1c5a      	adds	r2, r3, #1
    3d54:	60c2      	str	r2, [r0, #12]
    3d56:	785a      	ldrb	r2, [r3, #1]
    3d58:	4604      	mov	r4, r0
    3d5a:	2a5f      	cmp	r2, #95	; 0x5f
    3d5c:	d021      	beq.n	3da2 <d_template_param+0x5a>
    3d5e:	2a6e      	cmp	r2, #110	; 0x6e
    3d60:	d01d      	beq.n	3d9e <d_template_param+0x56>
    3d62:	f7ff fdc5 	bl	38f0 <d_number>
    3d66:	1c42      	adds	r2, r0, #1
    3d68:	d419      	bmi.n	3d9e <d_template_param+0x56>
    3d6a:	68e3      	ldr	r3, [r4, #12]
    3d6c:	7819      	ldrb	r1, [r3, #0]
    3d6e:	295f      	cmp	r1, #95	; 0x5f
    3d70:	d115      	bne.n	3d9e <d_template_param+0x56>
    3d72:	3301      	adds	r3, #1
    3d74:	60e3      	str	r3, [r4, #12]
    3d76:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
    3d7a:	428b      	cmp	r3, r1
    3d7c:	da0f      	bge.n	3d9e <d_template_param+0x56>
    3d7e:	2500      	movs	r5, #0
    3d80:	f04f 0e05 	mov.w	lr, #5
    3d84:	6921      	ldr	r1, [r4, #16]
    3d86:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
    3d8a:	eb01 008c 	add.w	r0, r1, ip, lsl #2
    3d8e:	3301      	adds	r3, #1
    3d90:	e9c0 5501 	strd	r5, r5, [r0, #4]
    3d94:	6163      	str	r3, [r4, #20]
    3d96:	f801 e02c 	strb.w	lr, [r1, ip, lsl #2]
    3d9a:	60c2      	str	r2, [r0, #12]
    3d9c:	bd38      	pop	{r3, r4, r5, pc}
    3d9e:	2000      	movs	r0, #0
    3da0:	bd38      	pop	{r3, r4, r5, pc}
    3da2:	3302      	adds	r3, #2
    3da4:	2200      	movs	r2, #0
    3da6:	60c3      	str	r3, [r0, #12]
    3da8:	e7e5      	b.n	3d76 <d_template_param+0x2e>
    3daa:	bf00      	nop

00003dac <d_append_num>:
    3dac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3db0:	b088      	sub	sp, #32
    3db2:	460a      	mov	r2, r1
    3db4:	4604      	mov	r4, r0
    3db6:	491a      	ldr	r1, [pc, #104]	; (3e20 <d_append_num+0x74>)
    3db8:	a801      	add	r0, sp, #4
    3dba:	f009 fabb 	bl	d334 <sprintf>
    3dbe:	a801      	add	r0, sp, #4
    3dc0:	f009 fbb8 	bl	d534 <strlen>
    3dc4:	b340      	cbz	r0, 3e18 <d_append_num+0x6c>
    3dc6:	ad01      	add	r5, sp, #4
    3dc8:	f04f 0800 	mov.w	r8, #0
    3dcc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    3dd0:	182f      	adds	r7, r5, r0
    3dd2:	e009      	b.n	3de8 <d_append_num+0x3c>
    3dd4:	460b      	mov	r3, r1
    3dd6:	42af      	cmp	r7, r5
    3dd8:	f101 0101 	add.w	r1, r1, #1
    3ddc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    3de0:	54e6      	strb	r6, [r4, r3]
    3de2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    3de6:	d017      	beq.n	3e18 <d_append_num+0x6c>
    3de8:	29ff      	cmp	r1, #255	; 0xff
    3dea:	f815 6b01 	ldrb.w	r6, [r5], #1
    3dee:	d1f1      	bne.n	3dd4 <d_append_num+0x28>
    3df0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    3df4:	4620      	mov	r0, r4
    3df6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    3dfa:	4798      	blx	r3
    3dfc:	2101      	movs	r1, #1
    3dfe:	2300      	movs	r3, #0
    3e00:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    3e04:	42af      	cmp	r7, r5
    3e06:	440a      	add	r2, r1
    3e08:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    3e0c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    3e10:	54e6      	strb	r6, [r4, r3]
    3e12:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    3e16:	d1e7      	bne.n	3de8 <d_append_num+0x3c>
    3e18:	b008      	add	sp, #32
    3e1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3e1e:	bf00      	nop
    3e20:	00018f0c 	.word	0x00018f0c

00003e24 <d_source_name>:
    3e24:	b570      	push	{r4, r5, r6, lr}
    3e26:	4604      	mov	r4, r0
    3e28:	f7ff fd62 	bl	38f0 <d_number>
    3e2c:	1e05      	subs	r5, r0, #0
    3e2e:	dd46      	ble.n	3ebe <d_source_name+0x9a>
    3e30:	68e6      	ldr	r6, [r4, #12]
    3e32:	6863      	ldr	r3, [r4, #4]
    3e34:	1b9b      	subs	r3, r3, r6
    3e36:	429d      	cmp	r5, r3
    3e38:	dc3e      	bgt.n	3eb8 <d_source_name+0x94>
    3e3a:	68a2      	ldr	r2, [r4, #8]
    3e3c:	1973      	adds	r3, r6, r5
    3e3e:	0752      	lsls	r2, r2, #29
    3e40:	60e3      	str	r3, [r4, #12]
    3e42:	d504      	bpl.n	3e4e <d_source_name+0x2a>
    3e44:	5d72      	ldrb	r2, [r6, r5]
    3e46:	2a24      	cmp	r2, #36	; 0x24
    3e48:	bf04      	itt	eq
    3e4a:	3301      	addeq	r3, #1
    3e4c:	60e3      	streq	r3, [r4, #12]
    3e4e:	2d09      	cmp	r5, #9
    3e50:	dd22      	ble.n	3e98 <d_source_name+0x74>
    3e52:	2208      	movs	r2, #8
    3e54:	4630      	mov	r0, r6
    3e56:	4929      	ldr	r1, [pc, #164]	; (3efc <d_source_name+0xd8>)
    3e58:	f008 fc72 	bl	c740 <memcmp>
    3e5c:	b930      	cbnz	r0, 3e6c <d_source_name+0x48>
    3e5e:	7a33      	ldrb	r3, [r6, #8]
    3e60:	2b2e      	cmp	r3, #46	; 0x2e
    3e62:	d02e      	beq.n	3ec2 <d_source_name+0x9e>
    3e64:	2b5f      	cmp	r3, #95	; 0x5f
    3e66:	d02c      	beq.n	3ec2 <d_source_name+0x9e>
    3e68:	2b24      	cmp	r3, #36	; 0x24
    3e6a:	d02a      	beq.n	3ec2 <d_source_name+0x9e>
    3e6c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    3e70:	4293      	cmp	r3, r2
    3e72:	da21      	bge.n	3eb8 <d_source_name+0x94>
    3e74:	2200      	movs	r2, #0
    3e76:	6920      	ldr	r0, [r4, #16]
    3e78:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    3e7c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    3e80:	3301      	adds	r3, #1
    3e82:	e9c0 2201 	strd	r2, r2, [r0, #4]
    3e86:	6163      	str	r3, [r4, #20]
    3e88:	2300      	movs	r3, #0
    3e8a:	7003      	strb	r3, [r0, #0]
    3e8c:	e9c0 6503 	strd	r6, r5, [r0, #12]
    3e90:	e9c0 3301 	strd	r3, r3, [r0, #4]
    3e94:	62a0      	str	r0, [r4, #40]	; 0x28
    3e96:	bd70      	pop	{r4, r5, r6, pc}
    3e98:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    3e9c:	4293      	cmp	r3, r2
    3e9e:	da0b      	bge.n	3eb8 <d_source_name+0x94>
    3ea0:	2200      	movs	r2, #0
    3ea2:	6920      	ldr	r0, [r4, #16]
    3ea4:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    3ea8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    3eac:	3301      	adds	r3, #1
    3eae:	e9c0 2201 	strd	r2, r2, [r0, #4]
    3eb2:	6163      	str	r3, [r4, #20]
    3eb4:	2e00      	cmp	r6, #0
    3eb6:	d1e7      	bne.n	3e88 <d_source_name+0x64>
    3eb8:	2000      	movs	r0, #0
    3eba:	62a0      	str	r0, [r4, #40]	; 0x28
    3ebc:	bd70      	pop	{r4, r5, r6, pc}
    3ebe:	2000      	movs	r0, #0
    3ec0:	bd70      	pop	{r4, r5, r6, pc}
    3ec2:	7a73      	ldrb	r3, [r6, #9]
    3ec4:	2b4e      	cmp	r3, #78	; 0x4e
    3ec6:	d1d1      	bne.n	3e6c <d_source_name+0x48>
    3ec8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3eca:	6963      	ldr	r3, [r4, #20]
    3ecc:	69a1      	ldr	r1, [r4, #24]
    3ece:	3216      	adds	r2, #22
    3ed0:	1b55      	subs	r5, r2, r5
    3ed2:	428b      	cmp	r3, r1
    3ed4:	62e5      	str	r5, [r4, #44]	; 0x2c
    3ed6:	daef      	bge.n	3eb8 <d_source_name+0x94>
    3ed8:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    3edc:	3301      	adds	r3, #1
    3ede:	6163      	str	r3, [r4, #20]
    3ee0:	2115      	movs	r1, #21
    3ee2:	2300      	movs	r3, #0
    3ee4:	6922      	ldr	r2, [r4, #16]
    3ee6:	4d06      	ldr	r5, [pc, #24]	; (3f00 <d_source_name+0xdc>)
    3ee8:	0086      	lsls	r6, r0, #2
    3eea:	eb02 0080 	add.w	r0, r2, r0, lsl #2
    3eee:	e9c0 3301 	strd	r3, r3, [r0, #4]
    3ef2:	5593      	strb	r3, [r2, r6]
    3ef4:	e9c0 5103 	strd	r5, r1, [r0, #12]
    3ef8:	e7df      	b.n	3eba <d_source_name+0x96>
    3efa:	bf00      	nop
    3efc:	00018f10 	.word	0x00018f10
    3f00:	00018f1c 	.word	0x00018f1c

00003f04 <d_substitution>:
    3f04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    3f08:	68c3      	ldr	r3, [r0, #12]
    3f0a:	781a      	ldrb	r2, [r3, #0]
    3f0c:	2a53      	cmp	r2, #83	; 0x53
    3f0e:	d131      	bne.n	3f74 <d_substitution+0x70>
    3f10:	1c5a      	adds	r2, r3, #1
    3f12:	60c2      	str	r2, [r0, #12]
    3f14:	785a      	ldrb	r2, [r3, #1]
    3f16:	4604      	mov	r4, r0
    3f18:	b3a2      	cbz	r2, 3f84 <d_substitution+0x80>
    3f1a:	1c9a      	adds	r2, r3, #2
    3f1c:	60c2      	str	r2, [r0, #12]
    3f1e:	785a      	ldrb	r2, [r3, #1]
    3f20:	2a5f      	cmp	r2, #95	; 0x5f
    3f22:	d044      	beq.n	3fae <d_substitution+0xaa>
    3f24:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
    3f28:	b2c3      	uxtb	r3, r0
    3f2a:	2b09      	cmp	r3, #9
    3f2c:	d826      	bhi.n	3f7c <d_substitution+0x78>
    3f2e:	2100      	movs	r1, #0
    3f30:	e00d      	b.n	3f4e <d_substitution+0x4a>
    3f32:	3b30      	subs	r3, #48	; 0x30
    3f34:	4299      	cmp	r1, r3
    3f36:	d81d      	bhi.n	3f74 <d_substitution+0x70>
    3f38:	68e1      	ldr	r1, [r4, #12]
    3f3a:	780a      	ldrb	r2, [r1, #0]
    3f3c:	1c48      	adds	r0, r1, #1
    3f3e:	b11a      	cbz	r2, 3f48 <d_substitution+0x44>
    3f40:	60e0      	str	r0, [r4, #12]
    3f42:	780a      	ldrb	r2, [r1, #0]
    3f44:	2a5f      	cmp	r2, #95	; 0x5f
    3f46:	d03c      	beq.n	3fc2 <d_substitution+0xbe>
    3f48:	4619      	mov	r1, r3
    3f4a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
    3f4e:	b2c0      	uxtb	r0, r0
    3f50:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    3f54:	2809      	cmp	r0, #9
    3f56:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
    3f5a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    3f5e:	d9e8      	bls.n	3f32 <d_substitution+0x2e>
    3f60:	f1bc 0f19 	cmp.w	ip, #25
    3f64:	d806      	bhi.n	3f74 <d_substitution+0x70>
    3f66:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    3f6a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    3f6e:	3b37      	subs	r3, #55	; 0x37
    3f70:	4299      	cmp	r1, r3
    3f72:	d9e1      	bls.n	3f38 <d_substitution+0x34>
    3f74:	2500      	movs	r5, #0
    3f76:	4628      	mov	r0, r5
    3f78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    3f7c:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
    3f80:	2b19      	cmp	r3, #25
    3f82:	d9d4      	bls.n	3f2e <d_substitution+0x2a>
    3f84:	68a3      	ldr	r3, [r4, #8]
    3f86:	f003 0308 	and.w	r3, r3, #8
    3f8a:	2b00      	cmp	r3, #0
    3f8c:	bf14      	ite	ne
    3f8e:	2501      	movne	r5, #1
    3f90:	2500      	moveq	r5, #0
    3f92:	d100      	bne.n	3f96 <d_substitution+0x92>
    3f94:	b9b9      	cbnz	r1, 3fc6 <d_substitution+0xc2>
    3f96:	4b40      	ldr	r3, [pc, #256]	; (4098 <Stack_Size+0x98>)
    3f98:	2174      	movs	r1, #116	; 0x74
    3f9a:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
    3f9e:	e001      	b.n	3fa4 <d_substitution+0xa0>
    3fa0:	f813 1f1c 	ldrb.w	r1, [r3, #28]!
    3fa4:	4291      	cmp	r1, r2
    3fa6:	d015      	beq.n	3fd4 <d_substitution+0xd0>
    3fa8:	4283      	cmp	r3, r0
    3faa:	d1f9      	bne.n	3fa0 <d_substitution+0x9c>
    3fac:	e7e2      	b.n	3f74 <d_substitution+0x70>
    3fae:	2300      	movs	r3, #0
    3fb0:	6a22      	ldr	r2, [r4, #32]
    3fb2:	429a      	cmp	r2, r3
    3fb4:	d9de      	bls.n	3f74 <d_substitution+0x70>
    3fb6:	69e2      	ldr	r2, [r4, #28]
    3fb8:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
    3fbc:	4628      	mov	r0, r5
    3fbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    3fc2:	3301      	adds	r3, #1
    3fc4:	e7f4      	b.n	3fb0 <d_substitution+0xac>
    3fc6:	68e3      	ldr	r3, [r4, #12]
    3fc8:	781b      	ldrb	r3, [r3, #0]
    3fca:	3b43      	subs	r3, #67	; 0x43
    3fcc:	2b01      	cmp	r3, #1
    3fce:	bf98      	it	ls
    3fd0:	460d      	movls	r5, r1
    3fd2:	e7e0      	b.n	3f96 <d_substitution+0x92>
    3fd4:	695e      	ldr	r6, [r3, #20]
    3fd6:	2e00      	cmp	r6, #0
    3fd8:	d056      	beq.n	4088 <Stack_Size+0x88>
    3fda:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    3fde:	4282      	cmp	r2, r0
    3fe0:	f8d3 8018 	ldr.w	r8, [r3, #24]
    3fe4:	da55      	bge.n	4092 <Stack_Size+0x92>
    3fe6:	f04f 0e00 	mov.w	lr, #0
    3fea:	f04f 0918 	mov.w	r9, #24
    3fee:	6927      	ldr	r7, [r4, #16]
    3ff0:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
    3ff4:	eb07 018c 	add.w	r1, r7, ip, lsl #2
    3ff8:	3201      	adds	r2, #1
    3ffa:	e9c1 ee01 	strd	lr, lr, [r1, #4]
    3ffe:	6162      	str	r2, [r4, #20]
    4000:	f807 902c 	strb.w	r9, [r7, ip, lsl #2]
    4004:	e9c1 6803 	strd	r6, r8, [r1, #12]
    4008:	62a1      	str	r1, [r4, #40]	; 0x28
    400a:	2d00      	cmp	r5, #0
    400c:	d039      	beq.n	4082 <Stack_Size+0x82>
    400e:	e9d3 7103 	ldrd	r7, r1, [r3, #12]
    4012:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4014:	4290      	cmp	r0, r2
    4016:	440b      	add	r3, r1
    4018:	62e3      	str	r3, [r4, #44]	; 0x2c
    401a:	dd38      	ble.n	408e <Stack_Size+0x8e>
    401c:	2600      	movs	r6, #0
    401e:	f04f 0c18 	mov.w	ip, #24
    4022:	6923      	ldr	r3, [r4, #16]
    4024:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    4028:	eb03 0580 	add.w	r5, r3, r0, lsl #2
    402c:	3201      	adds	r2, #1
    402e:	e9c5 6601 	strd	r6, r6, [r5, #4]
    4032:	6162      	str	r2, [r4, #20]
    4034:	f803 c020 	strb.w	ip, [r3, r0, lsl #2]
    4038:	e9c5 7103 	strd	r7, r1, [r5, #12]
    403c:	68e3      	ldr	r3, [r4, #12]
    403e:	781a      	ldrb	r2, [r3, #0]
    4040:	2a42      	cmp	r2, #66	; 0x42
    4042:	d198      	bne.n	3f76 <d_substitution+0x72>
    4044:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    4046:	3301      	adds	r3, #1
    4048:	60e3      	str	r3, [r4, #12]
    404a:	4620      	mov	r0, r4
    404c:	f7ff feea 	bl	3e24 <d_source_name>
    4050:	462a      	mov	r2, r5
    4052:	4603      	mov	r3, r0
    4054:	214c      	movs	r1, #76	; 0x4c
    4056:	4620      	mov	r0, r4
    4058:	f7ff fc00 	bl	385c <d_make_comp>
    405c:	68e3      	ldr	r3, [r4, #12]
    405e:	4605      	mov	r5, r0
    4060:	781a      	ldrb	r2, [r3, #0]
    4062:	2a42      	cmp	r2, #66	; 0x42
    4064:	d0ef      	beq.n	4046 <Stack_Size+0x46>
    4066:	62a6      	str	r6, [r4, #40]	; 0x28
    4068:	2800      	cmp	r0, #0
    406a:	d083      	beq.n	3f74 <d_substitution+0x70>
    406c:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    4070:	4293      	cmp	r3, r2
    4072:	f6bf af7f 	bge.w	3f74 <d_substitution+0x70>
    4076:	69e1      	ldr	r1, [r4, #28]
    4078:	1c5a      	adds	r2, r3, #1
    407a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
    407e:	6222      	str	r2, [r4, #32]
    4080:	e779      	b.n	3f76 <d_substitution+0x72>
    4082:	e9d3 7101 	ldrd	r7, r1, [r3, #4]
    4086:	e7c4      	b.n	4012 <Stack_Size+0x12>
    4088:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    408c:	e7bd      	b.n	400a <Stack_Size+0xa>
    408e:	2500      	movs	r5, #0
    4090:	e7d4      	b.n	403c <Stack_Size+0x3c>
    4092:	2100      	movs	r1, #0
    4094:	e7b8      	b.n	4008 <Stack_Size+0x8>
    4096:	bf00      	nop
    4098:	000197a8 	.word	0x000197a8

0000409c <d_print_java_identifier>:
    409c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    40a0:	188f      	adds	r7, r1, r2
    40a2:	42b9      	cmp	r1, r7
    40a4:	d24a      	bcs.n	413c <d_print_java_identifier+0xa0>
    40a6:	460c      	mov	r4, r1
    40a8:	4605      	mov	r5, r0
    40aa:	f04f 0800 	mov.w	r8, #0
    40ae:	e00c      	b.n	40ca <d_print_java_identifier+0x2e>
    40b0:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    40b4:	29ff      	cmp	r1, #255	; 0xff
    40b6:	d033      	beq.n	4120 <d_print_java_identifier+0x84>
    40b8:	1c4b      	adds	r3, r1, #1
    40ba:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
    40be:	546e      	strb	r6, [r5, r1]
    40c0:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    40c4:	3401      	adds	r4, #1
    40c6:	42a7      	cmp	r7, r4
    40c8:	d938      	bls.n	413c <d_print_java_identifier+0xa0>
    40ca:	1b3b      	subs	r3, r7, r4
    40cc:	2b03      	cmp	r3, #3
    40ce:	7826      	ldrb	r6, [r4, #0]
    40d0:	ddee      	ble.n	40b0 <d_print_java_identifier+0x14>
    40d2:	2e5f      	cmp	r6, #95	; 0x5f
    40d4:	d1ec      	bne.n	40b0 <d_print_java_identifier+0x14>
    40d6:	7863      	ldrb	r3, [r4, #1]
    40d8:	2b5f      	cmp	r3, #95	; 0x5f
    40da:	d1e9      	bne.n	40b0 <d_print_java_identifier+0x14>
    40dc:	78a3      	ldrb	r3, [r4, #2]
    40de:	2b55      	cmp	r3, #85	; 0x55
    40e0:	d1e6      	bne.n	40b0 <d_print_java_identifier+0x14>
    40e2:	1ce2      	adds	r2, r4, #3
    40e4:	4297      	cmp	r7, r2
    40e6:	d9e3      	bls.n	40b0 <d_print_java_identifier+0x14>
    40e8:	2100      	movs	r1, #0
    40ea:	e005      	b.n	40f8 <d_print_java_identifier+0x5c>
    40ec:	f1a6 0337 	sub.w	r3, r6, #55	; 0x37
    40f0:	42ba      	cmp	r2, r7
    40f2:	eb03 1101 	add.w	r1, r3, r1, lsl #4
    40f6:	d023      	beq.n	4140 <d_print_java_identifier+0xa4>
    40f8:	4691      	mov	r9, r2
    40fa:	f812 6b01 	ldrb.w	r6, [r2], #1
    40fe:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    4102:	b2d8      	uxtb	r0, r3
    4104:	2809      	cmp	r0, #9
    4106:	f1a6 0c41 	sub.w	ip, r6, #65	; 0x41
    410a:	d9f1      	bls.n	40f0 <d_print_java_identifier+0x54>
    410c:	f1bc 0f05 	cmp.w	ip, #5
    4110:	f1a6 0361 	sub.w	r3, r6, #97	; 0x61
    4114:	d9ea      	bls.n	40ec <d_print_java_identifier+0x50>
    4116:	2b05      	cmp	r3, #5
    4118:	d814      	bhi.n	4144 <d_print_java_identifier+0xa8>
    411a:	f1a6 0357 	sub.w	r3, r6, #87	; 0x57
    411e:	e7e7      	b.n	40f0 <d_print_java_identifier+0x54>
    4120:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
    4124:	4628      	mov	r0, r5
    4126:	f885 80ff 	strb.w	r8, [r5, #255]	; 0xff
    412a:	4798      	blx	r3
    412c:	2301      	movs	r3, #1
    412e:	f8d5 2128 	ldr.w	r2, [r5, #296]	; 0x128
    4132:	2100      	movs	r1, #0
    4134:	441a      	add	r2, r3
    4136:	f8c5 2128 	str.w	r2, [r5, #296]	; 0x128
    413a:	e7be      	b.n	40ba <d_print_java_identifier+0x1e>
    413c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    4140:	265f      	movs	r6, #95	; 0x5f
    4142:	e7b5      	b.n	40b0 <d_print_java_identifier+0x14>
    4144:	454f      	cmp	r7, r9
    4146:	d9fb      	bls.n	4140 <d_print_java_identifier+0xa4>
    4148:	2e5f      	cmp	r6, #95	; 0x5f
    414a:	d1f9      	bne.n	4140 <d_print_java_identifier+0xa4>
    414c:	29ff      	cmp	r1, #255	; 0xff
    414e:	d8af      	bhi.n	40b0 <d_print_java_identifier+0x14>
    4150:	b2ce      	uxtb	r6, r1
    4152:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    4156:	29ff      	cmp	r1, #255	; 0xff
    4158:	d007      	beq.n	416a <d_print_java_identifier+0xce>
    415a:	1c4b      	adds	r3, r1, #1
    415c:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
    4160:	464c      	mov	r4, r9
    4162:	546e      	strb	r6, [r5, r1]
    4164:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    4168:	e7ac      	b.n	40c4 <d_print_java_identifier+0x28>
    416a:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
    416e:	4628      	mov	r0, r5
    4170:	f885 80ff 	strb.w	r8, [r5, #255]	; 0xff
    4174:	4798      	blx	r3
    4176:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    417a:	2100      	movs	r1, #0
    417c:	3301      	adds	r3, #1
    417e:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    4182:	e7ea      	b.n	415a <d_print_java_identifier+0xbe>

00004184 <d_type>:
    4184:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    4188:	68c2      	ldr	r2, [r0, #12]
    418a:	4604      	mov	r4, r0
    418c:	b083      	sub	sp, #12
    418e:	4610      	mov	r0, r2
    4190:	f7ff fd08 	bl	3ba4 <next_is_type_qual.isra.0>
    4194:	2800      	cmp	r0, #0
    4196:	d16e      	bne.n	4276 <d_type+0xf2>
    4198:	7811      	ldrb	r1, [r2, #0]
    419a:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    419e:	2b4a      	cmp	r3, #74	; 0x4a
    41a0:	d864      	bhi.n	426c <d_type+0xe8>
    41a2:	e8df f013 	tbh	[pc, r3, lsl #1]
    41a6:	00b9      	.short	0x00b9
    41a8:	00b900b9 	.word	0x00b900b9
    41ac:	00b900b9 	.word	0x00b900b9
    41b0:	00b900b9 	.word	0x00b900b9
    41b4:	00b900b9 	.word	0x00b900b9
    41b8:	006300b9 	.word	0x006300b9
    41bc:	00630063 	.word	0x00630063
    41c0:	00630063 	.word	0x00630063
    41c4:	00630063 	.word	0x00630063
    41c8:	006301ff 	.word	0x006301ff
    41cc:	014400ce 	.word	0x014400ce
    41d0:	013e0063 	.word	0x013e0063
    41d4:	006301e1 	.word	0x006301e1
    41d8:	00630063 	.word	0x00630063
    41dc:	00630063 	.word	0x00630063
    41e0:	00b90241 	.word	0x00b90241
    41e4:	01c501d3 	.word	0x01c501d3
    41e8:	01b70063 	.word	0x01b70063
    41ec:	00f4011a 	.word	0x00f4011a
    41f0:	006300dc 	.word	0x006300dc
    41f4:	00630063 	.word	0x00630063
    41f8:	00b90063 	.word	0x00b90063
    41fc:	00630063 	.word	0x00630063
    4200:	00630063 	.word	0x00630063
    4204:	00630063 	.word	0x00630063
    4208:	00980098 	.word	0x00980098
    420c:	00980098 	.word	0x00980098
    4210:	00980098 	.word	0x00980098
    4214:	00980098 	.word	0x00980098
    4218:	00980098 	.word	0x00980098
    421c:	00980063 	.word	0x00980063
    4220:	00980098 	.word	0x00980098
    4224:	00630098 	.word	0x00630098
    4228:	00630063 	.word	0x00630063
    422c:	00980098 	.word	0x00980098
    4230:	009801ef 	.word	0x009801ef
    4234:	00980098 	.word	0x00980098
    4238:	00980098 	.word	0x00980098
    423c:	2301      	movs	r3, #1
    423e:	6b25      	ldr	r5, [r4, #48]	; 0x30
    4240:	4620      	mov	r0, r4
    4242:	6323      	str	r3, [r4, #48]	; 0x30
    4244:	f001 fbfa 	bl	5a3c <d_expression_1>
    4248:	6325      	str	r5, [r4, #48]	; 0x30
    424a:	4602      	mov	r2, r0
    424c:	2300      	movs	r3, #0
    424e:	2143      	movs	r1, #67	; 0x43
    4250:	4620      	mov	r0, r4
    4252:	f7ff fb03 	bl	385c <d_make_comp>
    4256:	4605      	mov	r5, r0
    4258:	9001      	str	r0, [sp, #4]
    425a:	b138      	cbz	r0, 426c <d_type+0xe8>
    425c:	68e3      	ldr	r3, [r4, #12]
    425e:	781a      	ldrb	r2, [r3, #0]
    4260:	b122      	cbz	r2, 426c <d_type+0xe8>
    4262:	1c5a      	adds	r2, r3, #1
    4264:	60e2      	str	r2, [r4, #12]
    4266:	781b      	ldrb	r3, [r3, #0]
    4268:	2b45      	cmp	r3, #69	; 0x45
    426a:	d05c      	beq.n	4326 <d_type+0x1a2>
    426c:	2500      	movs	r5, #0
    426e:	4628      	mov	r0, r5
    4270:	b003      	add	sp, #12
    4272:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    4276:	2200      	movs	r2, #0
    4278:	4620      	mov	r0, r4
    427a:	a901      	add	r1, sp, #4
    427c:	f001 fe3a 	bl	5ef4 <d_cv_qualifiers>
    4280:	4605      	mov	r5, r0
    4282:	2800      	cmp	r0, #0
    4284:	d0f2      	beq.n	426c <d_type+0xe8>
    4286:	68e3      	ldr	r3, [r4, #12]
    4288:	4620      	mov	r0, r4
    428a:	781b      	ldrb	r3, [r3, #0]
    428c:	2b46      	cmp	r3, #70	; 0x46
    428e:	d01e      	beq.n	42ce <d_type+0x14a>
    4290:	f7ff ff78 	bl	4184 <d_type>
    4294:	6028      	str	r0, [r5, #0]
    4296:	2800      	cmp	r0, #0
    4298:	d0e8      	beq.n	426c <d_type+0xe8>
    429a:	7803      	ldrb	r3, [r0, #0]
    429c:	3b1f      	subs	r3, #31
    429e:	2b01      	cmp	r3, #1
    42a0:	d805      	bhi.n	42ae <d_type+0x12a>
    42a2:	9a01      	ldr	r2, [sp, #4]
    42a4:	68c3      	ldr	r3, [r0, #12]
    42a6:	60c2      	str	r2, [r0, #12]
    42a8:	682a      	ldr	r2, [r5, #0]
    42aa:	9201      	str	r2, [sp, #4]
    42ac:	602b      	str	r3, [r5, #0]
    42ae:	9d01      	ldr	r5, [sp, #4]
    42b0:	2d00      	cmp	r5, #0
    42b2:	d0db      	beq.n	426c <d_type+0xe8>
    42b4:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    42b8:	4293      	cmp	r3, r2
    42ba:	dad7      	bge.n	426c <d_type+0xe8>
    42bc:	4628      	mov	r0, r5
    42be:	69e1      	ldr	r1, [r4, #28]
    42c0:	1c5a      	adds	r2, r3, #1
    42c2:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    42c6:	6222      	str	r2, [r4, #32]
    42c8:	b003      	add	sp, #12
    42ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    42ce:	f000 fc69 	bl	4ba4 <d_function_type>
    42d2:	6028      	str	r0, [r5, #0]
    42d4:	e7df      	b.n	4296 <d_type+0x112>
    42d6:	48b2      	ldr	r0, [pc, #712]	; (45a0 <d_type+0x41c>)
    42d8:	3961      	subs	r1, #97	; 0x61
    42da:	eb01 0181 	add.w	r1, r1, r1, lsl #2
    42de:	6963      	ldr	r3, [r4, #20]
    42e0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    42e4:	69a0      	ldr	r0, [r4, #24]
    42e6:	4283      	cmp	r3, r0
    42e8:	f280 835a 	bge.w	49a0 <d_type+0x81c>
    42ec:	1c57      	adds	r7, r2, #1
    42ee:	f04f 0c27 	mov.w	ip, #39	; 0x27
    42f2:	2200      	movs	r2, #0
    42f4:	6920      	ldr	r0, [r4, #16]
    42f6:	eb03 0683 	add.w	r6, r3, r3, lsl #2
    42fa:	eb00 0586 	add.w	r5, r0, r6, lsl #2
    42fe:	3301      	adds	r3, #1
    4300:	e9c5 2201 	strd	r2, r2, [r5, #4]
    4304:	6163      	str	r3, [r4, #20]
    4306:	f800 c026 	strb.w	ip, [r0, r6, lsl #2]
    430a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    430c:	60e9      	str	r1, [r5, #12]
    430e:	6849      	ldr	r1, [r1, #4]
    4310:	60e7      	str	r7, [r4, #12]
    4312:	440b      	add	r3, r1
    4314:	62e3      	str	r3, [r4, #44]	; 0x2c
    4316:	e7aa      	b.n	426e <d_type+0xea>
    4318:	4620      	mov	r0, r4
    431a:	f000 fe11 	bl	4f40 <d_name>
    431e:	4605      	mov	r5, r0
    4320:	9001      	str	r0, [sp, #4]
    4322:	2d00      	cmp	r5, #0
    4324:	d0a2      	beq.n	426c <d_type+0xe8>
    4326:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    432a:	4293      	cmp	r3, r2
    432c:	da9e      	bge.n	426c <d_type+0xe8>
    432e:	69e1      	ldr	r1, [r4, #28]
    4330:	1c5a      	adds	r2, r3, #1
    4332:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    4336:	9d01      	ldr	r5, [sp, #4]
    4338:	6222      	str	r2, [r4, #32]
    433a:	4628      	mov	r0, r5
    433c:	b003      	add	sp, #12
    433e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    4342:	3201      	adds	r2, #1
    4344:	60e2      	str	r2, [r4, #12]
    4346:	4620      	mov	r0, r4
    4348:	f7ff ff1c 	bl	4184 <d_type>
    434c:	2300      	movs	r3, #0
    434e:	4602      	mov	r2, r0
    4350:	2125      	movs	r1, #37	; 0x25
    4352:	4620      	mov	r0, r4
    4354:	f7ff fa82 	bl	385c <d_make_comp>
    4358:	4605      	mov	r5, r0
    435a:	9001      	str	r0, [sp, #4]
    435c:	e7e1      	b.n	4322 <d_type+0x19e>
    435e:	3201      	adds	r2, #1
    4360:	60e2      	str	r2, [r4, #12]
    4362:	4620      	mov	r0, r4
    4364:	f7ff fd5e 	bl	3e24 <d_source_name>
    4368:	68e3      	ldr	r3, [r4, #12]
    436a:	9001      	str	r0, [sp, #4]
    436c:	781a      	ldrb	r2, [r3, #0]
    436e:	4605      	mov	r5, r0
    4370:	2a49      	cmp	r2, #73	; 0x49
    4372:	f000 82b9 	beq.w	48e8 <d_type+0x764>
    4376:	4620      	mov	r0, r4
    4378:	f7ff ff04 	bl	4184 <d_type>
    437c:	2121      	movs	r1, #33	; 0x21
    437e:	4602      	mov	r2, r0
    4380:	9b01      	ldr	r3, [sp, #4]
    4382:	4620      	mov	r0, r4
    4384:	f7ff fa6a 	bl	385c <d_make_comp>
    4388:	4605      	mov	r5, r0
    438a:	9001      	str	r0, [sp, #4]
    438c:	e7c9      	b.n	4322 <d_type+0x19e>
    438e:	4620      	mov	r0, r4
    4390:	f7ff fcda 	bl	3d48 <d_template_param>
    4394:	68e6      	ldr	r6, [r4, #12]
    4396:	9001      	str	r0, [sp, #4]
    4398:	7833      	ldrb	r3, [r6, #0]
    439a:	4605      	mov	r5, r0
    439c:	2b49      	cmp	r3, #73	; 0x49
    439e:	d1c0      	bne.n	4322 <d_type+0x19e>
    43a0:	6b63      	ldr	r3, [r4, #52]	; 0x34
    43a2:	2b00      	cmp	r3, #0
    43a4:	f040 82c8 	bne.w	4938 <d_type+0x7b4>
    43a8:	2800      	cmp	r0, #0
    43aa:	f43f af5f 	beq.w	426c <d_type+0xe8>
    43ae:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    43b2:	428a      	cmp	r2, r1
    43b4:	f6bf af5a 	bge.w	426c <d_type+0xe8>
    43b8:	69e1      	ldr	r1, [r4, #28]
    43ba:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    43be:	3201      	adds	r2, #1
    43c0:	6222      	str	r2, [r4, #32]
    43c2:	7832      	ldrb	r2, [r6, #0]
    43c4:	3a49      	subs	r2, #73	; 0x49
    43c6:	2a01      	cmp	r2, #1
    43c8:	d805      	bhi.n	43d6 <d_type+0x252>
    43ca:	3601      	adds	r6, #1
    43cc:	4620      	mov	r0, r4
    43ce:	60e6      	str	r6, [r4, #12]
    43d0:	f001 fe66 	bl	60a0 <d_template_args_1>
    43d4:	4603      	mov	r3, r0
    43d6:	462a      	mov	r2, r5
    43d8:	e01c      	b.n	4414 <d_type+0x290>
    43da:	7853      	ldrb	r3, [r2, #1]
    43dc:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    43e0:	2a09      	cmp	r2, #9
    43e2:	d905      	bls.n	43f0 <d_type+0x26c>
    43e4:	2b5f      	cmp	r3, #95	; 0x5f
    43e6:	d003      	beq.n	43f0 <d_type+0x26c>
    43e8:	3b41      	subs	r3, #65	; 0x41
    43ea:	2b19      	cmp	r3, #25
    43ec:	f200 8297 	bhi.w	491e <d_type+0x79a>
    43f0:	2100      	movs	r1, #0
    43f2:	4620      	mov	r0, r4
    43f4:	f7ff fd86 	bl	3f04 <d_substitution>
    43f8:	68e3      	ldr	r3, [r4, #12]
    43fa:	9001      	str	r0, [sp, #4]
    43fc:	781a      	ldrb	r2, [r3, #0]
    43fe:	4605      	mov	r5, r0
    4400:	2a49      	cmp	r2, #73	; 0x49
    4402:	f47f af34 	bne.w	426e <d_type+0xea>
    4406:	3301      	adds	r3, #1
    4408:	60e3      	str	r3, [r4, #12]
    440a:	4620      	mov	r0, r4
    440c:	f001 fe48 	bl	60a0 <d_template_args_1>
    4410:	462a      	mov	r2, r5
    4412:	4603      	mov	r3, r0
    4414:	2104      	movs	r1, #4
    4416:	4620      	mov	r0, r4
    4418:	f7ff fa20 	bl	385c <d_make_comp>
    441c:	4605      	mov	r5, r0
    441e:	9001      	str	r0, [sp, #4]
    4420:	e77f      	b.n	4322 <d_type+0x19e>
    4422:	4620      	mov	r0, r4
    4424:	f000 fbbe 	bl	4ba4 <d_function_type>
    4428:	4605      	mov	r5, r0
    442a:	9001      	str	r0, [sp, #4]
    442c:	e779      	b.n	4322 <d_type+0x19e>
    442e:	1c53      	adds	r3, r2, #1
    4430:	60e3      	str	r3, [r4, #12]
    4432:	7853      	ldrb	r3, [r2, #1]
    4434:	2b00      	cmp	r3, #0
    4436:	f43f af19 	beq.w	426c <d_type+0xe8>
    443a:	1c93      	adds	r3, r2, #2
    443c:	60e3      	str	r3, [r4, #12]
    443e:	7853      	ldrb	r3, [r2, #1]
    4440:	3b46      	subs	r3, #70	; 0x46
    4442:	2b30      	cmp	r3, #48	; 0x30
    4444:	f63f af12 	bhi.w	426c <d_type+0xe8>
    4448:	a101      	add	r1, pc, #4	; (adr r1, 4450 <d_type+0x2cc>)
    444a:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
    444e:	bf00      	nop
    4450:	00004659 	.word	0x00004659
    4454:	0000426d 	.word	0x0000426d
    4458:	0000426d 	.word	0x0000426d
    445c:	0000426d 	.word	0x0000426d
    4460:	0000426d 	.word	0x0000426d
    4464:	0000426d 	.word	0x0000426d
    4468:	0000426d 	.word	0x0000426d
    446c:	0000426d 	.word	0x0000426d
    4470:	0000426d 	.word	0x0000426d
    4474:	0000426d 	.word	0x0000426d
    4478:	0000426d 	.word	0x0000426d
    447c:	0000426d 	.word	0x0000426d
    4480:	0000426d 	.word	0x0000426d
    4484:	0000426d 	.word	0x0000426d
    4488:	0000423d 	.word	0x0000423d
    448c:	0000426d 	.word	0x0000426d
    4490:	0000426d 	.word	0x0000426d
    4494:	0000426d 	.word	0x0000426d
    4498:	0000426d 	.word	0x0000426d
    449c:	0000426d 	.word	0x0000426d
    44a0:	0000426d 	.word	0x0000426d
    44a4:	0000426d 	.word	0x0000426d
    44a8:	0000426d 	.word	0x0000426d
    44ac:	0000426d 	.word	0x0000426d
    44b0:	0000426d 	.word	0x0000426d
    44b4:	0000426d 	.word	0x0000426d
    44b8:	0000426d 	.word	0x0000426d
    44bc:	000046f9 	.word	0x000046f9
    44c0:	0000426d 	.word	0x0000426d
    44c4:	000046cd 	.word	0x000046cd
    44c8:	000047ab 	.word	0x000047ab
    44cc:	0000477b 	.word	0x0000477b
    44d0:	0000474b 	.word	0x0000474b
    44d4:	0000426d 	.word	0x0000426d
    44d8:	0000471b 	.word	0x0000471b
    44dc:	000048c9 	.word	0x000048c9
    44e0:	0000426d 	.word	0x0000426d
    44e4:	0000426d 	.word	0x0000426d
    44e8:	0000426d 	.word	0x0000426d
    44ec:	0000426d 	.word	0x0000426d
    44f0:	0000489b 	.word	0x0000489b
    44f4:	0000426d 	.word	0x0000426d
    44f8:	00004883 	.word	0x00004883
    44fc:	0000426d 	.word	0x0000426d
    4500:	0000426d 	.word	0x0000426d
    4504:	00004853 	.word	0x00004853
    4508:	0000423d 	.word	0x0000423d
    450c:	00004823 	.word	0x00004823
    4510:	000047c9 	.word	0x000047c9
    4514:	3201      	adds	r2, #1
    4516:	60e2      	str	r2, [r4, #12]
    4518:	4620      	mov	r0, r4
    451a:	f7ff fe33 	bl	4184 <d_type>
    451e:	2300      	movs	r3, #0
    4520:	4602      	mov	r2, r0
    4522:	2123      	movs	r1, #35	; 0x23
    4524:	4620      	mov	r0, r4
    4526:	f7ff f999 	bl	385c <d_make_comp>
    452a:	4605      	mov	r5, r0
    452c:	9001      	str	r0, [sp, #4]
    452e:	e6f8      	b.n	4322 <d_type+0x19e>
    4530:	3201      	adds	r2, #1
    4532:	60e2      	str	r2, [r4, #12]
    4534:	4620      	mov	r0, r4
    4536:	f7ff fe25 	bl	4184 <d_type>
    453a:	2300      	movs	r3, #0
    453c:	4602      	mov	r2, r0
    453e:	2122      	movs	r1, #34	; 0x22
    4540:	4620      	mov	r0, r4
    4542:	f7ff f98b 	bl	385c <d_make_comp>
    4546:	4605      	mov	r5, r0
    4548:	9001      	str	r0, [sp, #4]
    454a:	e6ea      	b.n	4322 <d_type+0x19e>
    454c:	3201      	adds	r2, #1
    454e:	60e2      	str	r2, [r4, #12]
    4550:	4620      	mov	r0, r4
    4552:	f7ff fe17 	bl	4184 <d_type>
    4556:	2300      	movs	r3, #0
    4558:	4602      	mov	r2, r0
    455a:	2124      	movs	r1, #36	; 0x24
    455c:	4620      	mov	r0, r4
    455e:	f7ff f97d 	bl	385c <d_make_comp>
    4562:	4605      	mov	r5, r0
    4564:	9001      	str	r0, [sp, #4]
    4566:	e6dc      	b.n	4322 <d_type+0x19e>
    4568:	3201      	adds	r2, #1
    456a:	60e2      	str	r2, [r4, #12]
    456c:	4620      	mov	r0, r4
    456e:	f7ff fe09 	bl	4184 <d_type>
    4572:	2300      	movs	r3, #0
    4574:	4602      	mov	r2, r0
    4576:	2126      	movs	r1, #38	; 0x26
    4578:	4620      	mov	r0, r4
    457a:	f7ff f96f 	bl	385c <d_make_comp>
    457e:	4605      	mov	r5, r0
    4580:	9001      	str	r0, [sp, #4]
    4582:	e6ce      	b.n	4322 <d_type+0x19e>
    4584:	3201      	adds	r2, #1
    4586:	60e2      	str	r2, [r4, #12]
    4588:	4620      	mov	r0, r4
    458a:	f7ff fc4b 	bl	3e24 <d_source_name>
    458e:	2300      	movs	r3, #0
    4590:	4602      	mov	r2, r0
    4592:	2128      	movs	r1, #40	; 0x28
    4594:	4620      	mov	r0, r4
    4596:	f7ff f961 	bl	385c <d_make_comp>
    459a:	4605      	mov	r5, r0
    459c:	9001      	str	r0, [sp, #4]
    459e:	e6c0      	b.n	4322 <d_type+0x19e>
    45a0:	0001986c 	.word	0x0001986c
    45a4:	1c51      	adds	r1, r2, #1
    45a6:	60e1      	str	r1, [r4, #12]
    45a8:	7853      	ldrb	r3, [r2, #1]
    45aa:	2b5f      	cmp	r3, #95	; 0x5f
    45ac:	f000 819a 	beq.w	48e4 <d_type+0x760>
    45b0:	3b30      	subs	r3, #48	; 0x30
    45b2:	2b09      	cmp	r3, #9
    45b4:	f200 81a5 	bhi.w	4902 <d_type+0x77e>
    45b8:	460b      	mov	r3, r1
    45ba:	461d      	mov	r5, r3
    45bc:	3301      	adds	r3, #1
    45be:	60e3      	str	r3, [r4, #12]
    45c0:	781a      	ldrb	r2, [r3, #0]
    45c2:	3a30      	subs	r2, #48	; 0x30
    45c4:	2a09      	cmp	r2, #9
    45c6:	d9f8      	bls.n	45ba <d_type+0x436>
    45c8:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    45cc:	4282      	cmp	r2, r0
    45ce:	eba3 0c01 	sub.w	ip, r3, r1
    45d2:	f6bf ae4b 	bge.w	426c <d_type+0xe8>
    45d6:	2000      	movs	r0, #0
    45d8:	f8d4 e010 	ldr.w	lr, [r4, #16]
    45dc:	eb02 0782 	add.w	r7, r2, r2, lsl #2
    45e0:	eb0e 0687 	add.w	r6, lr, r7, lsl #2
    45e4:	3201      	adds	r2, #1
    45e6:	4584      	cmp	ip, r0
    45e8:	e9c6 0001 	strd	r0, r0, [r6, #4]
    45ec:	ea4f 0787 	mov.w	r7, r7, lsl #2
    45f0:	6162      	str	r2, [r4, #20]
    45f2:	f77f ae3b 	ble.w	426c <d_type+0xe8>
    45f6:	e9c6 0001 	strd	r0, r0, [r6, #4]
    45fa:	f80e 0007 	strb.w	r0, [lr, r7]
    45fe:	e9c6 1c03 	strd	r1, ip, [r6, #12]
    4602:	4619      	mov	r1, r3
    4604:	786b      	ldrb	r3, [r5, #1]
    4606:	2b5f      	cmp	r3, #95	; 0x5f
    4608:	f47f ae30 	bne.w	426c <d_type+0xe8>
    460c:	3101      	adds	r1, #1
    460e:	60e1      	str	r1, [r4, #12]
    4610:	4620      	mov	r0, r4
    4612:	f7ff fdb7 	bl	4184 <d_type>
    4616:	4632      	mov	r2, r6
    4618:	4603      	mov	r3, r0
    461a:	212a      	movs	r1, #42	; 0x2a
    461c:	4620      	mov	r0, r4
    461e:	f7ff f91d 	bl	385c <d_make_comp>
    4622:	4605      	mov	r5, r0
    4624:	9001      	str	r0, [sp, #4]
    4626:	e67c      	b.n	4322 <d_type+0x19e>
    4628:	3201      	adds	r2, #1
    462a:	4620      	mov	r0, r4
    462c:	60e2      	str	r2, [r4, #12]
    462e:	f7ff fda9 	bl	4184 <d_type>
    4632:	4605      	mov	r5, r0
    4634:	2800      	cmp	r0, #0
    4636:	f43f ae19 	beq.w	426c <d_type+0xe8>
    463a:	4620      	mov	r0, r4
    463c:	f7ff fda2 	bl	4184 <d_type>
    4640:	4603      	mov	r3, r0
    4642:	2800      	cmp	r0, #0
    4644:	f43f ae12 	beq.w	426c <d_type+0xe8>
    4648:	462a      	mov	r2, r5
    464a:	212b      	movs	r1, #43	; 0x2b
    464c:	4620      	mov	r0, r4
    464e:	f7ff f905 	bl	385c <d_make_comp>
    4652:	4605      	mov	r5, r0
    4654:	9001      	str	r0, [sp, #4]
    4656:	e664      	b.n	4322 <d_type+0x19e>
    4658:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
    465c:	428b      	cmp	r3, r1
    465e:	f280 81a3 	bge.w	49a8 <d_type+0x824>
    4662:	2600      	movs	r6, #0
    4664:	272c      	movs	r7, #44	; 0x2c
    4666:	6921      	ldr	r1, [r4, #16]
    4668:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    466c:	eb01 0580 	add.w	r5, r1, r0, lsl #2
    4670:	e9c5 6601 	strd	r6, r6, [r5, #4]
    4674:	3301      	adds	r3, #1
    4676:	6163      	str	r3, [r4, #20]
    4678:	9501      	str	r5, [sp, #4]
    467a:	f801 7020 	strb.w	r7, [r1, r0, lsl #2]
    467e:	7893      	ldrb	r3, [r2, #2]
    4680:	3b30      	subs	r3, #48	; 0x30
    4682:	b2db      	uxtb	r3, r3
    4684:	2b09      	cmp	r3, #9
    4686:	bf94      	ite	ls
    4688:	2301      	movls	r3, #1
    468a:	4633      	movhi	r3, r6
    468c:	822b      	strh	r3, [r5, #16]
    468e:	d803      	bhi.n	4698 <d_type+0x514>
    4690:	4620      	mov	r0, r4
    4692:	f7ff f92d 	bl	38f0 <d_number>
    4696:	9d01      	ldr	r5, [sp, #4]
    4698:	4620      	mov	r0, r4
    469a:	f7ff fd73 	bl	4184 <d_type>
    469e:	9b01      	ldr	r3, [sp, #4]
    46a0:	60e8      	str	r0, [r5, #12]
    46a2:	68db      	ldr	r3, [r3, #12]
    46a4:	2b00      	cmp	r3, #0
    46a6:	f43f ade1 	beq.w	426c <d_type+0xe8>
    46aa:	4620      	mov	r0, r4
    46ac:	f7ff f920 	bl	38f0 <d_number>
    46b0:	68e2      	ldr	r2, [r4, #12]
    46b2:	7813      	ldrb	r3, [r2, #0]
    46b4:	b113      	cbz	r3, 46bc <d_type+0x538>
    46b6:	1c53      	adds	r3, r2, #1
    46b8:	60e3      	str	r3, [r4, #12]
    46ba:	7813      	ldrb	r3, [r2, #0]
    46bc:	f1a3 0373 	sub.w	r3, r3, #115	; 0x73
    46c0:	fab3 f383 	clz	r3, r3
    46c4:	9d01      	ldr	r5, [sp, #4]
    46c6:	095b      	lsrs	r3, r3, #5
    46c8:	826b      	strh	r3, [r5, #18]
    46ca:	e5d0      	b.n	426e <d_type+0xea>
    46cc:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    46d0:	4293      	cmp	r3, r2
    46d2:	f6bf adcb 	bge.w	426c <d_type+0xe8>
    46d6:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    46da:	3301      	adds	r3, #1
    46dc:	6163      	str	r3, [r4, #20]
    46de:	210e      	movs	r1, #14
    46e0:	2300      	movs	r3, #0
    46e2:	6922      	ldr	r2, [r4, #16]
    46e4:	48b2      	ldr	r0, [pc, #712]	; (49b0 <d_type+0x82c>)
    46e6:	00ae      	lsls	r6, r5, #2
    46e8:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    46ec:	e9c5 3301 	strd	r3, r3, [r5, #4]
    46f0:	5593      	strb	r3, [r2, r6]
    46f2:	e9c5 0103 	strd	r0, r1, [r5, #12]
    46f6:	e5ba      	b.n	426e <d_type+0xea>
    46f8:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    46fc:	4293      	cmp	r3, r2
    46fe:	f6bf adb5 	bge.w	426c <d_type+0xe8>
    4702:	6922      	ldr	r2, [r4, #16]
    4704:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    4708:	3301      	adds	r3, #1
    470a:	00ae      	lsls	r6, r5, #2
    470c:	6163      	str	r3, [r4, #20]
    470e:	2104      	movs	r1, #4
    4710:	2300      	movs	r3, #0
    4712:	48a8      	ldr	r0, [pc, #672]	; (49b4 <d_type+0x830>)
    4714:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    4718:	e7e8      	b.n	46ec <d_type+0x568>
    471a:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    471e:	4293      	cmp	r3, r2
    4720:	f280 813e 	bge.w	49a0 <d_type+0x81c>
    4724:	2000      	movs	r0, #0
    4726:	2727      	movs	r7, #39	; 0x27
    4728:	6922      	ldr	r2, [r4, #16]
    472a:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    472e:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4732:	3301      	adds	r3, #1
    4734:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4738:	6163      	str	r3, [r4, #20]
    473a:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    473e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4740:	4e9d      	ldr	r6, [pc, #628]	; (49b8 <d_type+0x834>)
    4742:	3304      	adds	r3, #4
    4744:	60ee      	str	r6, [r5, #12]
    4746:	62e3      	str	r3, [r4, #44]	; 0x2c
    4748:	e591      	b.n	426e <d_type+0xea>
    474a:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    474e:	4293      	cmp	r3, r2
    4750:	f280 8126 	bge.w	49a0 <d_type+0x81c>
    4754:	2000      	movs	r0, #0
    4756:	2727      	movs	r7, #39	; 0x27
    4758:	6922      	ldr	r2, [r4, #16]
    475a:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    475e:	4e97      	ldr	r6, [pc, #604]	; (49bc <d_type+0x838>)
    4760:	3301      	adds	r3, #1
    4762:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4766:	e9c5 0001 	strd	r0, r0, [r5, #4]
    476a:	6163      	str	r3, [r4, #20]
    476c:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    4770:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4772:	60ee      	str	r6, [r5, #12]
    4774:	3309      	adds	r3, #9
    4776:	62e3      	str	r3, [r4, #44]	; 0x2c
    4778:	e579      	b.n	426e <d_type+0xea>
    477a:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    477e:	4293      	cmp	r3, r2
    4780:	f280 810e 	bge.w	49a0 <d_type+0x81c>
    4784:	2000      	movs	r0, #0
    4786:	2727      	movs	r7, #39	; 0x27
    4788:	6922      	ldr	r2, [r4, #16]
    478a:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    478e:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4792:	3301      	adds	r3, #1
    4794:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4798:	6163      	str	r3, [r4, #20]
    479a:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    479e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    47a0:	4e87      	ldr	r6, [pc, #540]	; (49c0 <d_type+0x83c>)
    47a2:	330a      	adds	r3, #10
    47a4:	60ee      	str	r6, [r5, #12]
    47a6:	62e3      	str	r3, [r4, #44]	; 0x2c
    47a8:	e561      	b.n	426e <d_type+0xea>
    47aa:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    47ae:	4293      	cmp	r3, r2
    47b0:	f280 80f6 	bge.w	49a0 <d_type+0x81c>
    47b4:	6922      	ldr	r2, [r4, #16]
    47b6:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    47ba:	2000      	movs	r0, #0
    47bc:	2727      	movs	r7, #39	; 0x27
    47be:	4e81      	ldr	r6, [pc, #516]	; (49c4 <d_type+0x840>)
    47c0:	3301      	adds	r3, #1
    47c2:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    47c6:	e7ce      	b.n	4766 <d_type+0x5e2>
    47c8:	7893      	ldrb	r3, [r2, #2]
    47ca:	2b5f      	cmp	r3, #95	; 0x5f
    47cc:	f000 80da 	beq.w	4984 <d_type+0x800>
    47d0:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    47d4:	4293      	cmp	r3, r2
    47d6:	f6bf ad49 	bge.w	426c <d_type+0xe8>
    47da:	2600      	movs	r6, #0
    47dc:	2742      	movs	r7, #66	; 0x42
    47de:	6922      	ldr	r2, [r4, #16]
    47e0:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    47e4:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    47e8:	3301      	adds	r3, #1
    47ea:	e9c5 6601 	strd	r6, r6, [r5, #4]
    47ee:	4620      	mov	r0, r4
    47f0:	6163      	str	r3, [r4, #20]
    47f2:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    47f6:	f7ff f87b 	bl	38f0 <d_number>
    47fa:	60e8      	str	r0, [r5, #12]
    47fc:	68e3      	ldr	r3, [r4, #12]
    47fe:	781a      	ldrb	r2, [r3, #0]
    4800:	2a5f      	cmp	r2, #95	; 0x5f
    4802:	f47f ad33 	bne.w	426c <d_type+0xe8>
    4806:	3301      	adds	r3, #1
    4808:	60e3      	str	r3, [r4, #12]
    480a:	4620      	mov	r0, r4
    480c:	f7ff fcba 	bl	4184 <d_type>
    4810:	462a      	mov	r2, r5
    4812:	4603      	mov	r3, r0
    4814:	212d      	movs	r1, #45	; 0x2d
    4816:	4620      	mov	r0, r4
    4818:	f7ff f820 	bl	385c <d_make_comp>
    481c:	4605      	mov	r5, r0
    481e:	9001      	str	r0, [sp, #4]
    4820:	e57f      	b.n	4322 <d_type+0x19e>
    4822:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4826:	4293      	cmp	r3, r2
    4828:	f280 80ba 	bge.w	49a0 <d_type+0x81c>
    482c:	2000      	movs	r0, #0
    482e:	2727      	movs	r7, #39	; 0x27
    4830:	6922      	ldr	r2, [r4, #16]
    4832:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4836:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    483a:	3301      	adds	r3, #1
    483c:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4840:	6163      	str	r3, [r4, #20]
    4842:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    4846:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4848:	4e5f      	ldr	r6, [pc, #380]	; (49c8 <d_type+0x844>)
    484a:	3307      	adds	r3, #7
    484c:	60ee      	str	r6, [r5, #12]
    484e:	62e3      	str	r3, [r4, #44]	; 0x2c
    4850:	e50d      	b.n	426e <d_type+0xea>
    4852:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4856:	4293      	cmp	r3, r2
    4858:	f280 80a2 	bge.w	49a0 <d_type+0x81c>
    485c:	2000      	movs	r0, #0
    485e:	2727      	movs	r7, #39	; 0x27
    4860:	6922      	ldr	r2, [r4, #16]
    4862:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4866:	4e59      	ldr	r6, [pc, #356]	; (49cc <d_type+0x848>)
    4868:	3301      	adds	r3, #1
    486a:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    486e:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4872:	6163      	str	r3, [r4, #20]
    4874:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    4878:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    487a:	60ee      	str	r6, [r5, #12]
    487c:	3308      	adds	r3, #8
    487e:	62e3      	str	r3, [r4, #44]	; 0x2c
    4880:	e4f5      	b.n	426e <d_type+0xea>
    4882:	4620      	mov	r0, r4
    4884:	f7ff fc7e 	bl	4184 <d_type>
    4888:	2300      	movs	r3, #0
    488a:	4602      	mov	r2, r0
    488c:	214b      	movs	r1, #75	; 0x4b
    488e:	4620      	mov	r0, r4
    4890:	f7fe ffe4 	bl	385c <d_make_comp>
    4894:	4605      	mov	r5, r0
    4896:	9001      	str	r0, [sp, #4]
    4898:	e543      	b.n	4322 <d_type+0x19e>
    489a:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    489e:	4293      	cmp	r3, r2
    48a0:	da7e      	bge.n	49a0 <d_type+0x81c>
    48a2:	2000      	movs	r0, #0
    48a4:	2727      	movs	r7, #39	; 0x27
    48a6:	6922      	ldr	r2, [r4, #16]
    48a8:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    48ac:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    48b0:	3301      	adds	r3, #1
    48b2:	e9c5 0001 	strd	r0, r0, [r5, #4]
    48b6:	6163      	str	r3, [r4, #20]
    48b8:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    48bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    48be:	4e44      	ldr	r6, [pc, #272]	; (49d0 <d_type+0x84c>)
    48c0:	3311      	adds	r3, #17
    48c2:	60ee      	str	r6, [r5, #12]
    48c4:	62e3      	str	r3, [r4, #44]	; 0x2c
    48c6:	e4d2      	b.n	426e <d_type+0xea>
    48c8:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    48cc:	4293      	cmp	r3, r2
    48ce:	da67      	bge.n	49a0 <d_type+0x81c>
    48d0:	6922      	ldr	r2, [r4, #16]
    48d2:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    48d6:	2000      	movs	r0, #0
    48d8:	2727      	movs	r7, #39	; 0x27
    48da:	4e3e      	ldr	r6, [pc, #248]	; (49d4 <d_type+0x850>)
    48dc:	3301      	adds	r3, #1
    48de:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    48e2:	e7c4      	b.n	486e <d_type+0x6ea>
    48e4:	2600      	movs	r6, #0
    48e6:	e691      	b.n	460c <d_type+0x488>
    48e8:	3301      	adds	r3, #1
    48ea:	60e3      	str	r3, [r4, #12]
    48ec:	4620      	mov	r0, r4
    48ee:	f001 fbd7 	bl	60a0 <d_template_args_1>
    48f2:	462a      	mov	r2, r5
    48f4:	4603      	mov	r3, r0
    48f6:	2104      	movs	r1, #4
    48f8:	4620      	mov	r0, r4
    48fa:	f7fe ffaf 	bl	385c <d_make_comp>
    48fe:	9001      	str	r0, [sp, #4]
    4900:	e539      	b.n	4376 <d_type+0x1f2>
    4902:	2301      	movs	r3, #1
    4904:	6b25      	ldr	r5, [r4, #48]	; 0x30
    4906:	4620      	mov	r0, r4
    4908:	6323      	str	r3, [r4, #48]	; 0x30
    490a:	f001 f897 	bl	5a3c <d_expression_1>
    490e:	6325      	str	r5, [r4, #48]	; 0x30
    4910:	4606      	mov	r6, r0
    4912:	2800      	cmp	r0, #0
    4914:	f43f acaa 	beq.w	426c <d_type+0xe8>
    4918:	68e1      	ldr	r1, [r4, #12]
    491a:	780b      	ldrb	r3, [r1, #0]
    491c:	e673      	b.n	4606 <d_type+0x482>
    491e:	4620      	mov	r0, r4
    4920:	f000 fb0e 	bl	4f40 <d_name>
    4924:	4605      	mov	r5, r0
    4926:	9001      	str	r0, [sp, #4]
    4928:	2800      	cmp	r0, #0
    492a:	f43f ac9f 	beq.w	426c <d_type+0xe8>
    492e:	7803      	ldrb	r3, [r0, #0]
    4930:	2b18      	cmp	r3, #24
    4932:	f47f acf8 	bne.w	4326 <d_type+0x1a2>
    4936:	e49a      	b.n	426e <d_type+0xea>
    4938:	1c73      	adds	r3, r6, #1
    493a:	60e3      	str	r3, [r4, #12]
    493c:	4620      	mov	r0, r4
    493e:	f8d4 9014 	ldr.w	r9, [r4, #20]
    4942:	f8d4 8020 	ldr.w	r8, [r4, #32]
    4946:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    4948:	f001 fbaa 	bl	60a0 <d_template_args_1>
    494c:	68e3      	ldr	r3, [r4, #12]
    494e:	781b      	ldrb	r3, [r3, #0]
    4950:	2b49      	cmp	r3, #73	; 0x49
    4952:	d007      	beq.n	4964 <d_type+0x7e0>
    4954:	9d01      	ldr	r5, [sp, #4]
    4956:	60e6      	str	r6, [r4, #12]
    4958:	f8c4 9014 	str.w	r9, [r4, #20]
    495c:	f8c4 8020 	str.w	r8, [r4, #32]
    4960:	62e7      	str	r7, [r4, #44]	; 0x2c
    4962:	e4de      	b.n	4322 <d_type+0x19e>
    4964:	9a01      	ldr	r2, [sp, #4]
    4966:	2a00      	cmp	r2, #0
    4968:	f43f ac80 	beq.w	426c <d_type+0xe8>
    496c:	e9d4 1308 	ldrd	r1, r3, [r4, #32]
    4970:	4299      	cmp	r1, r3
    4972:	f6bf ac7b 	bge.w	426c <d_type+0xe8>
    4976:	69e5      	ldr	r5, [r4, #28]
    4978:	4603      	mov	r3, r0
    497a:	f845 2021 	str.w	r2, [r5, r1, lsl #2]
    497e:	3101      	adds	r1, #1
    4980:	6221      	str	r1, [r4, #32]
    4982:	e547      	b.n	4414 <d_type+0x290>
    4984:	2301      	movs	r3, #1
    4986:	3203      	adds	r2, #3
    4988:	6b25      	ldr	r5, [r4, #48]	; 0x30
    498a:	4620      	mov	r0, r4
    498c:	60e2      	str	r2, [r4, #12]
    498e:	6323      	str	r3, [r4, #48]	; 0x30
    4990:	f001 f854 	bl	5a3c <d_expression_1>
    4994:	6325      	str	r5, [r4, #48]	; 0x30
    4996:	4605      	mov	r5, r0
    4998:	2800      	cmp	r0, #0
    499a:	f47f af2f 	bne.w	47fc <d_type+0x678>
    499e:	e465      	b.n	426c <d_type+0xe8>
    49a0:	2300      	movs	r3, #0
    49a2:	9301      	str	r3, [sp, #4]
    49a4:	68db      	ldr	r3, [r3, #12]
    49a6:	deff      	udf	#255	; 0xff
    49a8:	2300      	movs	r3, #0
    49aa:	701b      	strb	r3, [r3, #0]
    49ac:	deff      	udf	#255	; 0xff
    49ae:	bf00      	nop
    49b0:	00018f3c 	.word	0x00018f3c
    49b4:	00018f34 	.word	0x00018f34
    49b8:	00019ab0 	.word	0x00019ab0
    49bc:	00019a74 	.word	0x00019a74
    49c0:	00019a9c 	.word	0x00019a9c
    49c4:	00019a88 	.word	0x00019a88
    49c8:	00019ac4 	.word	0x00019ac4
    49cc:	00019ad8 	.word	0x00019ad8
    49d0:	00019b00 	.word	0x00019b00
    49d4:	00019aec 	.word	0x00019aec

000049d8 <d_operator_name>:
    49d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    49da:	68c3      	ldr	r3, [r0, #12]
    49dc:	4606      	mov	r6, r0
    49de:	781f      	ldrb	r7, [r3, #0]
    49e0:	bb77      	cbnz	r7, 4a40 <d_operator_name+0x68>
    49e2:	f04f 0e00 	mov.w	lr, #0
    49e6:	2145      	movs	r1, #69	; 0x45
    49e8:	2200      	movs	r2, #0
    49ea:	4d3c      	ldr	r5, [pc, #240]	; (4adc <d_operator_name+0x104>)
    49ec:	1a8b      	subs	r3, r1, r2
    49ee:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
    49f2:	eb02 0363 	add.w	r3, r2, r3, asr #1
    49f6:	0118      	lsls	r0, r3, #4
    49f8:	582c      	ldr	r4, [r5, r0]
    49fa:	eb05 1c03 	add.w	ip, r5, r3, lsl #4
    49fe:	7820      	ldrb	r0, [r4, #0]
    4a00:	42b8      	cmp	r0, r7
    4a02:	d006      	beq.n	4a12 <d_operator_name+0x3a>
    4a04:	bf8c      	ite	hi
    4a06:	4619      	movhi	r1, r3
    4a08:	1c5a      	addls	r2, r3, #1
    4a0a:	428a      	cmp	r2, r1
    4a0c:	d1ee      	bne.n	49ec <d_operator_name+0x14>
    4a0e:	2000      	movs	r0, #0
    4a10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4a12:	7860      	ldrb	r0, [r4, #1]
    4a14:	4570      	cmp	r0, lr
    4a16:	d1f5      	bne.n	4a04 <d_operator_name+0x2c>
    4a18:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
    4a1c:	4293      	cmp	r3, r2
    4a1e:	daf6      	bge.n	4a0e <d_operator_name+0x36>
    4a20:	2400      	movs	r4, #0
    4a22:	2532      	movs	r5, #50	; 0x32
    4a24:	6932      	ldr	r2, [r6, #16]
    4a26:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4a2a:	eb02 0081 	add.w	r0, r2, r1, lsl #2
    4a2e:	3301      	adds	r3, #1
    4a30:	e9c0 4401 	strd	r4, r4, [r0, #4]
    4a34:	6173      	str	r3, [r6, #20]
    4a36:	f802 5021 	strb.w	r5, [r2, r1, lsl #2]
    4a3a:	f8c0 c00c 	str.w	ip, [r0, #12]
    4a3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4a40:	1c5a      	adds	r2, r3, #1
    4a42:	60c2      	str	r2, [r0, #12]
    4a44:	f893 e001 	ldrb.w	lr, [r3, #1]
    4a48:	781f      	ldrb	r7, [r3, #0]
    4a4a:	f1be 0f00 	cmp.w	lr, #0
    4a4e:	d102      	bne.n	4a56 <d_operator_name+0x7e>
    4a50:	2f76      	cmp	r7, #118	; 0x76
    4a52:	d0c8      	beq.n	49e6 <d_operator_name+0xe>
    4a54:	e7c5      	b.n	49e2 <d_operator_name+0xa>
    4a56:	1c9a      	adds	r2, r3, #2
    4a58:	60c2      	str	r2, [r0, #12]
    4a5a:	2f76      	cmp	r7, #118	; 0x76
    4a5c:	f893 e001 	ldrb.w	lr, [r3, #1]
    4a60:	d11f      	bne.n	4aa2 <d_operator_name+0xca>
    4a62:	f1ae 0430 	sub.w	r4, lr, #48	; 0x30
    4a66:	b2e3      	uxtb	r3, r4
    4a68:	2b09      	cmp	r3, #9
    4a6a:	d8bc      	bhi.n	49e6 <d_operator_name+0xe>
    4a6c:	f7ff f9da 	bl	3e24 <d_source_name>
    4a70:	e9d6 3105 	ldrd	r3, r1, [r6, #20]
    4a74:	428b      	cmp	r3, r1
    4a76:	4602      	mov	r2, r0
    4a78:	dac9      	bge.n	4a0e <d_operator_name+0x36>
    4a7a:	2100      	movs	r1, #0
    4a7c:	6935      	ldr	r5, [r6, #16]
    4a7e:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4a82:	0087      	lsls	r7, r0, #2
    4a84:	3301      	adds	r3, #1
    4a86:	eb05 0080 	add.w	r0, r5, r0, lsl #2
    4a8a:	e9c0 1101 	strd	r1, r1, [r0, #4]
    4a8e:	6173      	str	r3, [r6, #20]
    4a90:	2a00      	cmp	r2, #0
    4a92:	d0bc      	beq.n	4a0e <d_operator_name+0x36>
    4a94:	2333      	movs	r3, #51	; 0x33
    4a96:	e9c0 1101 	strd	r1, r1, [r0, #4]
    4a9a:	55eb      	strb	r3, [r5, r7]
    4a9c:	e9c0 4203 	strd	r4, r2, [r0, #12]
    4aa0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4aa2:	2f63      	cmp	r7, #99	; 0x63
    4aa4:	d19f      	bne.n	49e6 <d_operator_name+0xe>
    4aa6:	f1be 0f76 	cmp.w	lr, #118	; 0x76
    4aaa:	d19c      	bne.n	49e6 <d_operator_name+0xe>
    4aac:	e9d0 340c 	ldrd	r3, r4, [r0, #48]	; 0x30
    4ab0:	fab3 f383 	clz	r3, r3
    4ab4:	095b      	lsrs	r3, r3, #5
    4ab6:	6343      	str	r3, [r0, #52]	; 0x34
    4ab8:	f7ff fb64 	bl	4184 <d_type>
    4abc:	6b73      	ldr	r3, [r6, #52]	; 0x34
    4abe:	4602      	mov	r2, r0
    4ac0:	b133      	cbz	r3, 4ad0 <d_operator_name+0xf8>
    4ac2:	2300      	movs	r3, #0
    4ac4:	2135      	movs	r1, #53	; 0x35
    4ac6:	4630      	mov	r0, r6
    4ac8:	f7fe fec8 	bl	385c <d_make_comp>
    4acc:	6374      	str	r4, [r6, #52]	; 0x34
    4ace:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4ad0:	2134      	movs	r1, #52	; 0x34
    4ad2:	4630      	mov	r0, r6
    4ad4:	f7fe fec2 	bl	385c <d_make_comp>
    4ad8:	e7f8      	b.n	4acc <d_operator_name+0xf4>
    4ada:	bf00      	nop
    4adc:	00019b14 	.word	0x00019b14

00004ae0 <d_parmlist>:
    4ae0:	2300      	movs	r3, #0
    4ae2:	b530      	push	{r4, r5, lr}
    4ae4:	68c2      	ldr	r2, [r0, #12]
    4ae6:	b083      	sub	sp, #12
    4ae8:	9301      	str	r3, [sp, #4]
    4aea:	7813      	ldrb	r3, [r2, #0]
    4aec:	b323      	cbz	r3, 4b38 <d_parmlist+0x58>
    4aee:	4604      	mov	r4, r0
    4af0:	ad01      	add	r5, sp, #4
    4af2:	e012      	b.n	4b1a <d_parmlist+0x3a>
    4af4:	2b4f      	cmp	r3, #79	; 0x4f
    4af6:	d016      	beq.n	4b26 <d_parmlist+0x46>
    4af8:	4620      	mov	r0, r4
    4afa:	f7ff fb43 	bl	4184 <d_type>
    4afe:	4602      	mov	r2, r0
    4b00:	b1d0      	cbz	r0, 4b38 <d_parmlist+0x58>
    4b02:	2300      	movs	r3, #0
    4b04:	212e      	movs	r1, #46	; 0x2e
    4b06:	4620      	mov	r0, r4
    4b08:	f7fe fea8 	bl	385c <d_make_comp>
    4b0c:	6028      	str	r0, [r5, #0]
    4b0e:	b198      	cbz	r0, 4b38 <d_parmlist+0x58>
    4b10:	68e2      	ldr	r2, [r4, #12]
    4b12:	f100 0510 	add.w	r5, r0, #16
    4b16:	7813      	ldrb	r3, [r2, #0]
    4b18:	b143      	cbz	r3, 4b2c <d_parmlist+0x4c>
    4b1a:	2b45      	cmp	r3, #69	; 0x45
    4b1c:	d006      	beq.n	4b2c <d_parmlist+0x4c>
    4b1e:	2b2e      	cmp	r3, #46	; 0x2e
    4b20:	d004      	beq.n	4b2c <d_parmlist+0x4c>
    4b22:	2b52      	cmp	r3, #82	; 0x52
    4b24:	d1e6      	bne.n	4af4 <d_parmlist+0x14>
    4b26:	7853      	ldrb	r3, [r2, #1]
    4b28:	2b45      	cmp	r3, #69	; 0x45
    4b2a:	d1e5      	bne.n	4af8 <d_parmlist+0x18>
    4b2c:	9801      	ldr	r0, [sp, #4]
    4b2e:	b118      	cbz	r0, 4b38 <d_parmlist+0x58>
    4b30:	6903      	ldr	r3, [r0, #16]
    4b32:	b123      	cbz	r3, 4b3e <d_parmlist+0x5e>
    4b34:	b003      	add	sp, #12
    4b36:	bd30      	pop	{r4, r5, pc}
    4b38:	2000      	movs	r0, #0
    4b3a:	b003      	add	sp, #12
    4b3c:	bd30      	pop	{r4, r5, pc}
    4b3e:	68c2      	ldr	r2, [r0, #12]
    4b40:	7811      	ldrb	r1, [r2, #0]
    4b42:	2927      	cmp	r1, #39	; 0x27
    4b44:	d1f6      	bne.n	4b34 <d_parmlist+0x54>
    4b46:	68d2      	ldr	r2, [r2, #12]
    4b48:	7c11      	ldrb	r1, [r2, #16]
    4b4a:	2909      	cmp	r1, #9
    4b4c:	d1f2      	bne.n	4b34 <d_parmlist+0x54>
    4b4e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    4b50:	6852      	ldr	r2, [r2, #4]
    4b52:	1a89      	subs	r1, r1, r2
    4b54:	62e1      	str	r1, [r4, #44]	; 0x2c
    4b56:	60c3      	str	r3, [r0, #12]
    4b58:	e7ec      	b.n	4b34 <d_parmlist+0x54>
    4b5a:	bf00      	nop

00004b5c <d_bare_function_type>:
    4b5c:	b570      	push	{r4, r5, r6, lr}
    4b5e:	68c3      	ldr	r3, [r0, #12]
    4b60:	4605      	mov	r5, r0
    4b62:	781a      	ldrb	r2, [r3, #0]
    4b64:	2a4a      	cmp	r2, #74	; 0x4a
    4b66:	d01a      	beq.n	4b9e <d_bare_function_type+0x42>
    4b68:	b181      	cbz	r1, 4b8c <d_bare_function_type+0x30>
    4b6a:	4628      	mov	r0, r5
    4b6c:	f7ff fb0a 	bl	4184 <d_type>
    4b70:	4604      	mov	r4, r0
    4b72:	b190      	cbz	r0, 4b9a <d_bare_function_type+0x3e>
    4b74:	4628      	mov	r0, r5
    4b76:	f7ff ffb3 	bl	4ae0 <d_parmlist>
    4b7a:	4603      	mov	r3, r0
    4b7c:	b168      	cbz	r0, 4b9a <d_bare_function_type+0x3e>
    4b7e:	4622      	mov	r2, r4
    4b80:	4628      	mov	r0, r5
    4b82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    4b86:	2129      	movs	r1, #41	; 0x29
    4b88:	f7fe be68 	b.w	385c <d_make_comp>
    4b8c:	4628      	mov	r0, r5
    4b8e:	460c      	mov	r4, r1
    4b90:	f7ff ffa6 	bl	4ae0 <d_parmlist>
    4b94:	4603      	mov	r3, r0
    4b96:	2800      	cmp	r0, #0
    4b98:	d1f1      	bne.n	4b7e <d_bare_function_type+0x22>
    4b9a:	2000      	movs	r0, #0
    4b9c:	bd70      	pop	{r4, r5, r6, pc}
    4b9e:	3301      	adds	r3, #1
    4ba0:	60c3      	str	r3, [r0, #12]
    4ba2:	e7e2      	b.n	4b6a <d_bare_function_type+0xe>

00004ba4 <d_function_type>:
    4ba4:	b510      	push	{r4, lr}
    4ba6:	4604      	mov	r4, r0
    4ba8:	6880      	ldr	r0, [r0, #8]
    4baa:	f410 2080 	ands.w	r0, r0, #262144	; 0x40000
    4bae:	d10b      	bne.n	4bc8 <d_function_type+0x24>
    4bb0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    4bb2:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    4bb6:	d806      	bhi.n	4bc6 <d_function_type+0x22>
    4bb8:	1c51      	adds	r1, r2, #1
    4bba:	68e3      	ldr	r3, [r4, #12]
    4bbc:	63a1      	str	r1, [r4, #56]	; 0x38
    4bbe:	7819      	ldrb	r1, [r3, #0]
    4bc0:	2946      	cmp	r1, #70	; 0x46
    4bc2:	d007      	beq.n	4bd4 <d_function_type+0x30>
    4bc4:	63a2      	str	r2, [r4, #56]	; 0x38
    4bc6:	bd10      	pop	{r4, pc}
    4bc8:	68e3      	ldr	r3, [r4, #12]
    4bca:	781a      	ldrb	r2, [r3, #0]
    4bcc:	2a46      	cmp	r2, #70	; 0x46
    4bce:	d001      	beq.n	4bd4 <d_function_type+0x30>
    4bd0:	2000      	movs	r0, #0
    4bd2:	bd10      	pop	{r4, pc}
    4bd4:	1c5a      	adds	r2, r3, #1
    4bd6:	60e2      	str	r2, [r4, #12]
    4bd8:	785a      	ldrb	r2, [r3, #1]
    4bda:	2101      	movs	r1, #1
    4bdc:	2a59      	cmp	r2, #89	; 0x59
    4bde:	bf04      	itt	eq
    4be0:	3302      	addeq	r3, #2
    4be2:	60e3      	streq	r3, [r4, #12]
    4be4:	4620      	mov	r0, r4
    4be6:	f7ff ffb9 	bl	4b5c <d_bare_function_type>
    4bea:	4601      	mov	r1, r0
    4bec:	4620      	mov	r0, r4
    4bee:	f7fe fee1 	bl	39b4 <d_ref_qualifier>
    4bf2:	68e3      	ldr	r3, [r4, #12]
    4bf4:	781a      	ldrb	r2, [r3, #0]
    4bf6:	2a45      	cmp	r2, #69	; 0x45
    4bf8:	bf04      	itt	eq
    4bfa:	3301      	addeq	r3, #1
    4bfc:	60e3      	streq	r3, [r4, #12]
    4bfe:	68a3      	ldr	r3, [r4, #8]
    4c00:	bf18      	it	ne
    4c02:	2000      	movne	r0, #0
    4c04:	035b      	lsls	r3, r3, #13
    4c06:	d4de      	bmi.n	4bc6 <d_function_type+0x22>
    4c08:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    4c0a:	3a01      	subs	r2, #1
    4c0c:	e7da      	b.n	4bc4 <d_function_type+0x20>
    4c0e:	bf00      	nop

00004c10 <d_unqualified_name>:
    4c10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4c12:	68c3      	ldr	r3, [r0, #12]
    4c14:	4604      	mov	r4, r0
    4c16:	781a      	ldrb	r2, [r3, #0]
    4c18:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
    4c1c:	2909      	cmp	r1, #9
    4c1e:	d961      	bls.n	4ce4 <d_unqualified_name+0xd4>
    4c20:	f1a2 0161 	sub.w	r1, r2, #97	; 0x61
    4c24:	2919      	cmp	r1, #25
    4c26:	d814      	bhi.n	4c52 <d_unqualified_name+0x42>
    4c28:	2a6f      	cmp	r2, #111	; 0x6f
    4c2a:	d104      	bne.n	4c36 <d_unqualified_name+0x26>
    4c2c:	785a      	ldrb	r2, [r3, #1]
    4c2e:	2a6e      	cmp	r2, #110	; 0x6e
    4c30:	bf04      	itt	eq
    4c32:	3302      	addeq	r3, #2
    4c34:	60c3      	streq	r3, [r0, #12]
    4c36:	4620      	mov	r0, r4
    4c38:	f7ff fece 	bl	49d8 <d_operator_name>
    4c3c:	4605      	mov	r5, r0
    4c3e:	b110      	cbz	r0, 4c46 <d_unqualified_name+0x36>
    4c40:	7803      	ldrb	r3, [r0, #0]
    4c42:	2b32      	cmp	r3, #50	; 0x32
    4c44:	d069      	beq.n	4d1a <d_unqualified_name+0x10a>
    4c46:	68e3      	ldr	r3, [r4, #12]
    4c48:	7819      	ldrb	r1, [r3, #0]
    4c4a:	2942      	cmp	r1, #66	; 0x42
    4c4c:	d051      	beq.n	4cf2 <d_unqualified_name+0xe2>
    4c4e:	4628      	mov	r0, r5
    4c50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4c52:	f1a2 0143 	sub.w	r1, r2, #67	; 0x43
    4c56:	2901      	cmp	r1, #1
    4c58:	f240 808b 	bls.w	4d72 <d_unqualified_name+0x162>
    4c5c:	2a4c      	cmp	r2, #76	; 0x4c
    4c5e:	d079      	beq.n	4d54 <d_unqualified_name+0x144>
    4c60:	2a55      	cmp	r2, #85	; 0x55
    4c62:	f040 8083 	bne.w	4d6c <d_unqualified_name+0x15c>
    4c66:	785a      	ldrb	r2, [r3, #1]
    4c68:	2a6c      	cmp	r2, #108	; 0x6c
    4c6a:	f000 80d5 	beq.w	4e18 <d_unqualified_name+0x208>
    4c6e:	2a74      	cmp	r2, #116	; 0x74
    4c70:	d17c      	bne.n	4d6c <d_unqualified_name+0x15c>
    4c72:	1c5a      	adds	r2, r3, #1
    4c74:	60c2      	str	r2, [r0, #12]
    4c76:	7859      	ldrb	r1, [r3, #1]
    4c78:	2974      	cmp	r1, #116	; 0x74
    4c7a:	f040 8098 	bne.w	4dae <d_unqualified_name+0x19e>
    4c7e:	1c9a      	adds	r2, r3, #2
    4c80:	60c2      	str	r2, [r0, #12]
    4c82:	789a      	ldrb	r2, [r3, #2]
    4c84:	2a5f      	cmp	r2, #95	; 0x5f
    4c86:	f000 8147 	beq.w	4f18 <d_unqualified_name+0x308>
    4c8a:	2a6e      	cmp	r2, #110	; 0x6e
    4c8c:	d06e      	beq.n	4d6c <d_unqualified_name+0x15c>
    4c8e:	f7fe fe2f 	bl	38f0 <d_number>
    4c92:	1c46      	adds	r6, r0, #1
    4c94:	68e3      	ldr	r3, [r4, #12]
    4c96:	f100 8128 	bmi.w	4eea <d_unqualified_name+0x2da>
    4c9a:	7819      	ldrb	r1, [r3, #0]
    4c9c:	295f      	cmp	r1, #95	; 0x5f
    4c9e:	d177      	bne.n	4d90 <d_unqualified_name+0x180>
    4ca0:	3301      	adds	r3, #1
    4ca2:	60e3      	str	r3, [r4, #12]
    4ca4:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4ca8:	4293      	cmp	r3, r2
    4caa:	f280 811d 	bge.w	4ee8 <d_unqualified_name+0x2d8>
    4cae:	2100      	movs	r1, #0
    4cb0:	2748      	movs	r7, #72	; 0x48
    4cb2:	6922      	ldr	r2, [r4, #16]
    4cb4:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4cb8:	eb02 0580 	add.w	r5, r2, r0, lsl #2
    4cbc:	3301      	adds	r3, #1
    4cbe:	e9c5 1101 	strd	r1, r1, [r5, #4]
    4cc2:	6163      	str	r3, [r4, #20]
    4cc4:	f802 7020 	strb.w	r7, [r2, r0, lsl #2]
    4cc8:	6a22      	ldr	r2, [r4, #32]
    4cca:	6a63      	ldr	r3, [r4, #36]	; 0x24
    4ccc:	60ee      	str	r6, [r5, #12]
    4cce:	429a      	cmp	r2, r3
    4cd0:	f280 8126 	bge.w	4f20 <d_unqualified_name+0x310>
    4cd4:	69e0      	ldr	r0, [r4, #28]
    4cd6:	68e3      	ldr	r3, [r4, #12]
    4cd8:	1c51      	adds	r1, r2, #1
    4cda:	f840 5022 	str.w	r5, [r0, r2, lsl #2]
    4cde:	6221      	str	r1, [r4, #32]
    4ce0:	7819      	ldrb	r1, [r3, #0]
    4ce2:	e7b2      	b.n	4c4a <d_unqualified_name+0x3a>
    4ce4:	f7ff f89e 	bl	3e24 <d_source_name>
    4ce8:	68e3      	ldr	r3, [r4, #12]
    4cea:	4605      	mov	r5, r0
    4cec:	7819      	ldrb	r1, [r3, #0]
    4cee:	2942      	cmp	r1, #66	; 0x42
    4cf0:	d1ad      	bne.n	4c4e <d_unqualified_name+0x3e>
    4cf2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    4cf4:	3301      	adds	r3, #1
    4cf6:	60e3      	str	r3, [r4, #12]
    4cf8:	4620      	mov	r0, r4
    4cfa:	f7ff f893 	bl	3e24 <d_source_name>
    4cfe:	462a      	mov	r2, r5
    4d00:	4603      	mov	r3, r0
    4d02:	214c      	movs	r1, #76	; 0x4c
    4d04:	4620      	mov	r0, r4
    4d06:	f7fe fda9 	bl	385c <d_make_comp>
    4d0a:	68e3      	ldr	r3, [r4, #12]
    4d0c:	4605      	mov	r5, r0
    4d0e:	7819      	ldrb	r1, [r3, #0]
    4d10:	2942      	cmp	r1, #66	; 0x42
    4d12:	d0ef      	beq.n	4cf4 <d_unqualified_name+0xe4>
    4d14:	4628      	mov	r0, r5
    4d16:	62a6      	str	r6, [r4, #40]	; 0x28
    4d18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4d1a:	68c2      	ldr	r2, [r0, #12]
    4d1c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4d1e:	6891      	ldr	r1, [r2, #8]
    4d20:	3307      	adds	r3, #7
    4d22:	6812      	ldr	r2, [r2, #0]
    4d24:	440b      	add	r3, r1
    4d26:	62e3      	str	r3, [r4, #44]	; 0x2c
    4d28:	7813      	ldrb	r3, [r2, #0]
    4d2a:	2b6c      	cmp	r3, #108	; 0x6c
    4d2c:	d18b      	bne.n	4c46 <d_unqualified_name+0x36>
    4d2e:	7853      	ldrb	r3, [r2, #1]
    4d30:	2b69      	cmp	r3, #105	; 0x69
    4d32:	d188      	bne.n	4c46 <d_unqualified_name+0x36>
    4d34:	7893      	ldrb	r3, [r2, #2]
    4d36:	2b00      	cmp	r3, #0
    4d38:	d185      	bne.n	4c46 <d_unqualified_name+0x36>
    4d3a:	4620      	mov	r0, r4
    4d3c:	f7ff f872 	bl	3e24 <d_source_name>
    4d40:	462a      	mov	r2, r5
    4d42:	4603      	mov	r3, r0
    4d44:	2137      	movs	r1, #55	; 0x37
    4d46:	4620      	mov	r0, r4
    4d48:	f7fe fd88 	bl	385c <d_make_comp>
    4d4c:	68e3      	ldr	r3, [r4, #12]
    4d4e:	4605      	mov	r5, r0
    4d50:	7819      	ldrb	r1, [r3, #0]
    4d52:	e77a      	b.n	4c4a <d_unqualified_name+0x3a>
    4d54:	3301      	adds	r3, #1
    4d56:	60c3      	str	r3, [r0, #12]
    4d58:	f7ff f864 	bl	3e24 <d_source_name>
    4d5c:	4605      	mov	r5, r0
    4d5e:	b128      	cbz	r0, 4d6c <d_unqualified_name+0x15c>
    4d60:	4620      	mov	r0, r4
    4d62:	f7fe feab 	bl	3abc <d_discriminator>
    4d66:	2800      	cmp	r0, #0
    4d68:	f47f af6d 	bne.w	4c46 <d_unqualified_name+0x36>
    4d6c:	2500      	movs	r5, #0
    4d6e:	4628      	mov	r0, r5
    4d70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4d72:	6a86      	ldr	r6, [r0, #40]	; 0x28
    4d74:	b186      	cbz	r6, 4d98 <d_unqualified_name+0x188>
    4d76:	7831      	ldrb	r1, [r6, #0]
    4d78:	b961      	cbnz	r1, 4d94 <d_unqualified_name+0x184>
    4d7a:	6931      	ldr	r1, [r6, #16]
    4d7c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    4d7e:	440a      	add	r2, r1
    4d80:	62e2      	str	r2, [r4, #44]	; 0x2c
    4d82:	7819      	ldrb	r1, [r3, #0]
    4d84:	2943      	cmp	r1, #67	; 0x43
    4d86:	460a      	mov	r2, r1
    4d88:	f000 8087 	beq.w	4e9a <d_unqualified_name+0x28a>
    4d8c:	2944      	cmp	r1, #68	; 0x44
    4d8e:	d005      	beq.n	4d9c <d_unqualified_name+0x18c>
    4d90:	2500      	movs	r5, #0
    4d92:	e75a      	b.n	4c4a <d_unqualified_name+0x3a>
    4d94:	2918      	cmp	r1, #24
    4d96:	d0f0      	beq.n	4d7a <d_unqualified_name+0x16a>
    4d98:	2a43      	cmp	r2, #67	; 0x43
    4d9a:	d07e      	beq.n	4e9a <d_unqualified_name+0x28a>
    4d9c:	7859      	ldrb	r1, [r3, #1]
    4d9e:	3930      	subs	r1, #48	; 0x30
    4da0:	2905      	cmp	r1, #5
    4da2:	d836      	bhi.n	4e12 <d_unqualified_name+0x202>
    4da4:	e8df f001 	tbb	[pc, r1]
    4da8:	35292c06 	.word	0x35292c06
    4dac:	2f32      	.short	0x2f32
    4dae:	4613      	mov	r3, r2
    4db0:	2500      	movs	r5, #0
    4db2:	e74a      	b.n	4c4a <d_unqualified_name+0x3a>
    4db4:	f04f 0e01 	mov.w	lr, #1
    4db8:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
    4dbc:	f103 0c02 	add.w	ip, r3, #2
    4dc0:	428a      	cmp	r2, r1
    4dc2:	f8c4 c00c 	str.w	ip, [r4, #12]
    4dc6:	f280 80a3 	bge.w	4f10 <d_unqualified_name+0x300>
    4dca:	2000      	movs	r0, #0
    4dcc:	6927      	ldr	r7, [r4, #16]
    4dce:	eb02 0182 	add.w	r1, r2, r2, lsl #2
    4dd2:	eb07 0581 	add.w	r5, r7, r1, lsl #2
    4dd6:	3201      	adds	r2, #1
    4dd8:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4ddc:	0089      	lsls	r1, r1, #2
    4dde:	6162      	str	r2, [r4, #20]
    4de0:	2e00      	cmp	r6, #0
    4de2:	f000 8095 	beq.w	4f10 <d_unqualified_name+0x300>
    4de6:	2208      	movs	r2, #8
    4de8:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4dec:	547a      	strb	r2, [r7, r1]
    4dee:	f885 e00c 	strb.w	lr, [r5, #12]
    4df2:	612e      	str	r6, [r5, #16]
    4df4:	7899      	ldrb	r1, [r3, #2]
    4df6:	4663      	mov	r3, ip
    4df8:	e727      	b.n	4c4a <d_unqualified_name+0x3a>
    4dfa:	f04f 0e03 	mov.w	lr, #3
    4dfe:	e7db      	b.n	4db8 <d_unqualified_name+0x1a8>
    4e00:	f04f 0e02 	mov.w	lr, #2
    4e04:	e7d8      	b.n	4db8 <d_unqualified_name+0x1a8>
    4e06:	f04f 0e05 	mov.w	lr, #5
    4e0a:	e7d5      	b.n	4db8 <d_unqualified_name+0x1a8>
    4e0c:	f04f 0e04 	mov.w	lr, #4
    4e10:	e7d2      	b.n	4db8 <d_unqualified_name+0x1a8>
    4e12:	4611      	mov	r1, r2
    4e14:	2500      	movs	r5, #0
    4e16:	e718      	b.n	4c4a <d_unqualified_name+0x3a>
    4e18:	1c5a      	adds	r2, r3, #1
    4e1a:	60c2      	str	r2, [r0, #12]
    4e1c:	7859      	ldrb	r1, [r3, #1]
    4e1e:	296c      	cmp	r1, #108	; 0x6c
    4e20:	d1c5      	bne.n	4dae <d_unqualified_name+0x19e>
    4e22:	3302      	adds	r3, #2
    4e24:	60c3      	str	r3, [r0, #12]
    4e26:	f7ff fe5b 	bl	4ae0 <d_parmlist>
    4e2a:	68e3      	ldr	r3, [r4, #12]
    4e2c:	4606      	mov	r6, r0
    4e2e:	2800      	cmp	r0, #0
    4e30:	d05b      	beq.n	4eea <d_unqualified_name+0x2da>
    4e32:	7819      	ldrb	r1, [r3, #0]
    4e34:	2945      	cmp	r1, #69	; 0x45
    4e36:	d1ab      	bne.n	4d90 <d_unqualified_name+0x180>
    4e38:	1c5a      	adds	r2, r3, #1
    4e3a:	60e2      	str	r2, [r4, #12]
    4e3c:	785a      	ldrb	r2, [r3, #1]
    4e3e:	2a5f      	cmp	r2, #95	; 0x5f
    4e40:	d076      	beq.n	4f30 <d_unqualified_name+0x320>
    4e42:	2a6e      	cmp	r2, #110	; 0x6e
    4e44:	d092      	beq.n	4d6c <d_unqualified_name+0x15c>
    4e46:	4620      	mov	r0, r4
    4e48:	f7fe fd52 	bl	38f0 <d_number>
    4e4c:	3001      	adds	r0, #1
    4e4e:	68e3      	ldr	r3, [r4, #12]
    4e50:	d44b      	bmi.n	4eea <d_unqualified_name+0x2da>
    4e52:	7819      	ldrb	r1, [r3, #0]
    4e54:	295f      	cmp	r1, #95	; 0x5f
    4e56:	d19b      	bne.n	4d90 <d_unqualified_name+0x180>
    4e58:	3301      	adds	r3, #1
    4e5a:	60e3      	str	r3, [r4, #12]
    4e5c:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
    4e60:	428a      	cmp	r2, r1
    4e62:	da42      	bge.n	4eea <d_unqualified_name+0x2da>
    4e64:	2100      	movs	r1, #0
    4e66:	f04f 0e46 	mov.w	lr, #70	; 0x46
    4e6a:	6927      	ldr	r7, [r4, #16]
    4e6c:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
    4e70:	eb07 058c 	add.w	r5, r7, ip, lsl #2
    4e74:	3201      	adds	r2, #1
    4e76:	e9c5 1101 	strd	r1, r1, [r5, #4]
    4e7a:	6162      	str	r2, [r4, #20]
    4e7c:	f807 e02c 	strb.w	lr, [r7, ip, lsl #2]
    4e80:	e9c5 6003 	strd	r6, r0, [r5, #12]
    4e84:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
    4e88:	4282      	cmp	r2, r0
    4e8a:	da2e      	bge.n	4eea <d_unqualified_name+0x2da>
    4e8c:	69e1      	ldr	r1, [r4, #28]
    4e8e:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
    4e92:	3201      	adds	r2, #1
    4e94:	6222      	str	r2, [r4, #32]
    4e96:	7819      	ldrb	r1, [r3, #0]
    4e98:	e6d7      	b.n	4c4a <d_unqualified_name+0x3a>
    4e9a:	785a      	ldrb	r2, [r3, #1]
    4e9c:	2a49      	cmp	r2, #73	; 0x49
    4e9e:	d027      	beq.n	4ef0 <d_unqualified_name+0x2e0>
    4ea0:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
    4ea4:	2904      	cmp	r1, #4
    4ea6:	f63f af61 	bhi.w	4d6c <d_unqualified_name+0x15c>
    4eaa:	3a30      	subs	r2, #48	; 0x30
    4eac:	3302      	adds	r3, #2
    4eae:	b2d7      	uxtb	r7, r2
    4eb0:	60e3      	str	r3, [r4, #12]
    4eb2:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4eb6:	4293      	cmp	r3, r2
    4eb8:	da16      	bge.n	4ee8 <d_unqualified_name+0x2d8>
    4eba:	2100      	movs	r1, #0
    4ebc:	6922      	ldr	r2, [r4, #16]
    4ebe:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4ec2:	eb02 0580 	add.w	r5, r2, r0, lsl #2
    4ec6:	3301      	adds	r3, #1
    4ec8:	e9c5 1101 	strd	r1, r1, [r5, #4]
    4ecc:	ea4f 0c80 	mov.w	ip, r0, lsl #2
    4ed0:	6163      	str	r3, [r4, #20]
    4ed2:	b34e      	cbz	r6, 4f28 <d_unqualified_name+0x318>
    4ed4:	2307      	movs	r3, #7
    4ed6:	e9c5 1101 	strd	r1, r1, [r5, #4]
    4eda:	f802 300c 	strb.w	r3, [r2, ip]
    4ede:	68e3      	ldr	r3, [r4, #12]
    4ee0:	732f      	strb	r7, [r5, #12]
    4ee2:	612e      	str	r6, [r5, #16]
    4ee4:	7819      	ldrb	r1, [r3, #0]
    4ee6:	e6b0      	b.n	4c4a <d_unqualified_name+0x3a>
    4ee8:	68e3      	ldr	r3, [r4, #12]
    4eea:	2500      	movs	r5, #0
    4eec:	7819      	ldrb	r1, [r3, #0]
    4eee:	e6ac      	b.n	4c4a <d_unqualified_name+0x3a>
    4ef0:	1c58      	adds	r0, r3, #1
    4ef2:	60e0      	str	r0, [r4, #12]
    4ef4:	789a      	ldrb	r2, [r3, #2]
    4ef6:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
    4efa:	2904      	cmp	r1, #4
    4efc:	d81c      	bhi.n	4f38 <d_unqualified_name+0x328>
    4efe:	3303      	adds	r3, #3
    4f00:	3a30      	subs	r2, #48	; 0x30
    4f02:	4620      	mov	r0, r4
    4f04:	60e3      	str	r3, [r4, #12]
    4f06:	b2d7      	uxtb	r7, r2
    4f08:	f7ff f93c 	bl	4184 <d_type>
    4f0c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    4f0e:	e7d0      	b.n	4eb2 <d_unqualified_name+0x2a2>
    4f10:	7899      	ldrb	r1, [r3, #2]
    4f12:	2500      	movs	r5, #0
    4f14:	4663      	mov	r3, ip
    4f16:	e698      	b.n	4c4a <d_unqualified_name+0x3a>
    4f18:	3303      	adds	r3, #3
    4f1a:	2600      	movs	r6, #0
    4f1c:	60c3      	str	r3, [r0, #12]
    4f1e:	e6c1      	b.n	4ca4 <d_unqualified_name+0x94>
    4f20:	68e3      	ldr	r3, [r4, #12]
    4f22:	460d      	mov	r5, r1
    4f24:	7819      	ldrb	r1, [r3, #0]
    4f26:	e690      	b.n	4c4a <d_unqualified_name+0x3a>
    4f28:	68e3      	ldr	r3, [r4, #12]
    4f2a:	4635      	mov	r5, r6
    4f2c:	7819      	ldrb	r1, [r3, #0]
    4f2e:	e68c      	b.n	4c4a <d_unqualified_name+0x3a>
    4f30:	3302      	adds	r3, #2
    4f32:	2000      	movs	r0, #0
    4f34:	60e3      	str	r3, [r4, #12]
    4f36:	e791      	b.n	4e5c <d_unqualified_name+0x24c>
    4f38:	7859      	ldrb	r1, [r3, #1]
    4f3a:	2500      	movs	r5, #0
    4f3c:	4603      	mov	r3, r0
    4f3e:	e684      	b.n	4c4a <d_unqualified_name+0x3a>

00004f40 <d_name>:
    4f40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    4f44:	68c2      	ldr	r2, [r0, #12]
    4f46:	4604      	mov	r4, r0
    4f48:	7813      	ldrb	r3, [r2, #0]
    4f4a:	b084      	sub	sp, #16
    4f4c:	3b4e      	subs	r3, #78	; 0x4e
    4f4e:	2b0c      	cmp	r3, #12
    4f50:	d808      	bhi.n	4f64 <d_name+0x24>
    4f52:	e8df f003 	tbb	[pc, r3]
    4f56:	0731      	.short	0x0731
    4f58:	17070707 	.word	0x17070707
    4f5c:	07071307 	.word	0x07071307
    4f60:	0707      	.short	0x0707
    4f62:	86          	.byte	0x86
    4f63:	00          	.byte	0x00
    4f64:	f7ff fe54 	bl	4c10 <d_unqualified_name>
    4f68:	68e3      	ldr	r3, [r4, #12]
    4f6a:	4605      	mov	r5, r0
    4f6c:	781a      	ldrb	r2, [r3, #0]
    4f6e:	2a49      	cmp	r2, #73	; 0x49
    4f70:	f000 80cb 	beq.w	510a <d_name+0x1ca>
    4f74:	4628      	mov	r0, r5
    4f76:	b004      	add	sp, #16
    4f78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    4f7c:	b004      	add	sp, #16
    4f7e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    4f82:	e645      	b.n	4c10 <d_unqualified_name>
    4f84:	7853      	ldrb	r3, [r2, #1]
    4f86:	2b74      	cmp	r3, #116	; 0x74
    4f88:	f000 80d1 	beq.w	512e <d_name+0x1ee>
    4f8c:	2100      	movs	r1, #0
    4f8e:	f7fe ffb9 	bl	3f04 <d_substitution>
    4f92:	68e3      	ldr	r3, [r4, #12]
    4f94:	4605      	mov	r5, r0
    4f96:	781a      	ldrb	r2, [r3, #0]
    4f98:	2a49      	cmp	r2, #73	; 0x49
    4f9a:	d1eb      	bne.n	4f74 <d_name+0x34>
    4f9c:	3301      	adds	r3, #1
    4f9e:	60e3      	str	r3, [r4, #12]
    4fa0:	4620      	mov	r0, r4
    4fa2:	f001 f87d 	bl	60a0 <d_template_args_1>
    4fa6:	4603      	mov	r3, r0
    4fa8:	462a      	mov	r2, r5
    4faa:	2104      	movs	r1, #4
    4fac:	4620      	mov	r0, r4
    4fae:	b004      	add	sp, #16
    4fb0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    4fb4:	f7fe bc52 	b.w	385c <d_make_comp>
    4fb8:	1c53      	adds	r3, r2, #1
    4fba:	60c3      	str	r3, [r0, #12]
    4fbc:	2201      	movs	r2, #1
    4fbe:	a903      	add	r1, sp, #12
    4fc0:	f000 ff98 	bl	5ef4 <d_cv_qualifiers>
    4fc4:	4607      	mov	r7, r0
    4fc6:	2800      	cmp	r0, #0
    4fc8:	f000 80e9 	beq.w	519e <d_name+0x25e>
    4fcc:	2100      	movs	r1, #0
    4fce:	4620      	mov	r0, r4
    4fd0:	f7fe fcf0 	bl	39b4 <d_ref_qualifier>
    4fd4:	68e2      	ldr	r2, [r4, #12]
    4fd6:	4680      	mov	r8, r0
    4fd8:	7816      	ldrb	r6, [r2, #0]
    4fda:	b336      	cbz	r6, 502a <d_name+0xea>
    4fdc:	f04f 0a00 	mov.w	sl, #0
    4fe0:	f8df 92b8 	ldr.w	r9, [pc, #696]	; 529c <d_name+0x35c>
    4fe4:	2e44      	cmp	r6, #68	; 0x44
    4fe6:	f000 80df 	beq.w	51a8 <d_name+0x268>
    4fea:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    4fee:	b2db      	uxtb	r3, r3
    4ff0:	2b1c      	cmp	r3, #28
    4ff2:	f240 811d 	bls.w	5230 <d_name+0x2f0>
    4ff6:	f1a6 0361 	sub.w	r3, r6, #97	; 0x61
    4ffa:	2b19      	cmp	r3, #25
    4ffc:	f200 811a 	bhi.w	5234 <d_name+0x2f4>
    5000:	4620      	mov	r0, r4
    5002:	f7ff fe05 	bl	4c10 <d_unqualified_name>
    5006:	4605      	mov	r5, r0
    5008:	f1ba 0f00 	cmp.w	sl, #0
    500c:	d006      	beq.n	501c <d_name+0xdc>
    500e:	2101      	movs	r1, #1
    5010:	462b      	mov	r3, r5
    5012:	4652      	mov	r2, sl
    5014:	4620      	mov	r0, r4
    5016:	f7fe fc21 	bl	385c <d_make_comp>
    501a:	4605      	mov	r5, r0
    501c:	2e53      	cmp	r6, #83	; 0x53
    501e:	d10e      	bne.n	503e <d_name+0xfe>
    5020:	46aa      	mov	sl, r5
    5022:	68e2      	ldr	r2, [r4, #12]
    5024:	7816      	ldrb	r6, [r2, #0]
    5026:	2e00      	cmp	r6, #0
    5028:	d1dc      	bne.n	4fe4 <d_name+0xa4>
    502a:	2300      	movs	r3, #0
    502c:	461d      	mov	r5, r3
    502e:	603b      	str	r3, [r7, #0]
    5030:	e7a0      	b.n	4f74 <d_name+0x34>
    5032:	f7ff f8a7 	bl	4184 <d_type>
    5036:	4605      	mov	r5, r0
    5038:	f1ba 0f00 	cmp.w	sl, #0
    503c:	d1e7      	bne.n	500e <d_name+0xce>
    503e:	68e2      	ldr	r2, [r4, #12]
    5040:	7816      	ldrb	r6, [r2, #0]
    5042:	2e45      	cmp	r6, #69	; 0x45
    5044:	f000 80bf 	beq.w	51c6 <d_name+0x286>
    5048:	2d00      	cmp	r5, #0
    504a:	d0ee      	beq.n	502a <d_name+0xea>
    504c:	e9d4 3108 	ldrd	r3, r1, [r4, #32]
    5050:	428b      	cmp	r3, r1
    5052:	daea      	bge.n	502a <d_name+0xea>
    5054:	69e1      	ldr	r1, [r4, #28]
    5056:	46aa      	mov	sl, r5
    5058:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    505c:	3301      	adds	r3, #1
    505e:	6223      	str	r3, [r4, #32]
    5060:	e7e0      	b.n	5024 <d_name+0xe4>
    5062:	1c53      	adds	r3, r2, #1
    5064:	60c3      	str	r3, [r0, #12]
    5066:	7853      	ldrb	r3, [r2, #1]
    5068:	2b47      	cmp	r3, #71	; 0x47
    506a:	d002      	beq.n	5072 <d_name+0x132>
    506c:	2b54      	cmp	r3, #84	; 0x54
    506e:	f040 80b8 	bne.w	51e2 <d_name+0x2a2>
    5072:	4620      	mov	r0, r4
    5074:	f000 f9d2 	bl	541c <d_special_name>
    5078:	4605      	mov	r5, r0
    507a:	2d00      	cmp	r5, #0
    507c:	f000 808f 	beq.w	519e <d_name+0x25e>
    5080:	68e3      	ldr	r3, [r4, #12]
    5082:	781a      	ldrb	r2, [r3, #0]
    5084:	2a45      	cmp	r2, #69	; 0x45
    5086:	f040 808a 	bne.w	519e <d_name+0x25e>
    508a:	1c5a      	adds	r2, r3, #1
    508c:	60e2      	str	r2, [r4, #12]
    508e:	785a      	ldrb	r2, [r3, #1]
    5090:	2a73      	cmp	r2, #115	; 0x73
    5092:	f000 8107 	beq.w	52a4 <d_name+0x364>
    5096:	2a64      	cmp	r2, #100	; 0x64
    5098:	f000 80a8 	beq.w	51ec <d_name+0x2ac>
    509c:	4620      	mov	r0, r4
    509e:	f7ff ff4f 	bl	4f40 <d_name>
    50a2:	4603      	mov	r3, r0
    50a4:	b328      	cbz	r0, 50f2 <d_name+0x1b2>
    50a6:	7802      	ldrb	r2, [r0, #0]
    50a8:	2a46      	cmp	r2, #70	; 0x46
    50aa:	d022      	beq.n	50f2 <d_name+0x1b2>
    50ac:	2a48      	cmp	r2, #72	; 0x48
    50ae:	d020      	beq.n	50f2 <d_name+0x1b2>
    50b0:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    50b4:	4620      	mov	r0, r4
    50b6:	9301      	str	r3, [sp, #4]
    50b8:	f7fe fd00 	bl	3abc <d_discriminator>
    50bc:	9b01      	ldr	r3, [sp, #4]
    50be:	2800      	cmp	r0, #0
    50c0:	d06d      	beq.n	519e <d_name+0x25e>
    50c2:	1c72      	adds	r2, r6, #1
    50c4:	d015      	beq.n	50f2 <d_name+0x1b2>
    50c6:	469c      	mov	ip, r3
    50c8:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
    50cc:	429a      	cmp	r2, r3
    50ce:	f280 8118 	bge.w	5302 <d_name+0x3c2>
    50d2:	2700      	movs	r7, #0
    50d4:	f04f 0e47 	mov.w	lr, #71	; 0x47
    50d8:	6921      	ldr	r1, [r4, #16]
    50da:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    50de:	eb01 0380 	add.w	r3, r1, r0, lsl #2
    50e2:	3201      	adds	r2, #1
    50e4:	e9c3 7701 	strd	r7, r7, [r3, #4]
    50e8:	6162      	str	r2, [r4, #20]
    50ea:	f801 e020 	strb.w	lr, [r1, r0, lsl #2]
    50ee:	e9c3 c603 	strd	ip, r6, [r3, #12]
    50f2:	782a      	ldrb	r2, [r5, #0]
    50f4:	2a03      	cmp	r2, #3
    50f6:	d105      	bne.n	5104 <d_name+0x1c4>
    50f8:	692a      	ldr	r2, [r5, #16]
    50fa:	7811      	ldrb	r1, [r2, #0]
    50fc:	2929      	cmp	r1, #41	; 0x29
    50fe:	bf04      	itt	eq
    5100:	2100      	moveq	r1, #0
    5102:	60d1      	streq	r1, [r2, #12]
    5104:	462a      	mov	r2, r5
    5106:	2102      	movs	r1, #2
    5108:	e750      	b.n	4fac <d_name+0x6c>
    510a:	2800      	cmp	r0, #0
    510c:	d047      	beq.n	519e <d_name+0x25e>
    510e:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    5112:	428a      	cmp	r2, r1
    5114:	da43      	bge.n	519e <d_name+0x25e>
    5116:	69e1      	ldr	r1, [r4, #28]
    5118:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    511c:	3201      	adds	r2, #1
    511e:	6222      	str	r2, [r4, #32]
    5120:	781a      	ldrb	r2, [r3, #0]
    5122:	3a49      	subs	r2, #73	; 0x49
    5124:	2a01      	cmp	r2, #1
    5126:	f67f af39 	bls.w	4f9c <d_name+0x5c>
    512a:	2300      	movs	r3, #0
    512c:	e73c      	b.n	4fa8 <d_name+0x68>
    512e:	3202      	adds	r2, #2
    5130:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
    5134:	428b      	cmp	r3, r1
    5136:	60c2      	str	r2, [r0, #12]
    5138:	f280 80d1 	bge.w	52de <d_name+0x39e>
    513c:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    5140:	3301      	adds	r3, #1
    5142:	6143      	str	r3, [r0, #20]
    5144:	2103      	movs	r1, #3
    5146:	2300      	movs	r3, #0
    5148:	6902      	ldr	r2, [r0, #16]
    514a:	4855      	ldr	r0, [pc, #340]	; (52a0 <d_name+0x360>)
    514c:	00ae      	lsls	r6, r5, #2
    514e:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    5152:	e9c5 3301 	strd	r3, r3, [r5, #4]
    5156:	5593      	strb	r3, [r2, r6]
    5158:	e9c5 0103 	strd	r0, r1, [r5, #12]
    515c:	4620      	mov	r0, r4
    515e:	f7ff fd57 	bl	4c10 <d_unqualified_name>
    5162:	462a      	mov	r2, r5
    5164:	4603      	mov	r3, r0
    5166:	2101      	movs	r1, #1
    5168:	4620      	mov	r0, r4
    516a:	f7fe fb77 	bl	385c <d_make_comp>
    516e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    5170:	68e3      	ldr	r3, [r4, #12]
    5172:	3203      	adds	r2, #3
    5174:	62e2      	str	r2, [r4, #44]	; 0x2c
    5176:	781a      	ldrb	r2, [r3, #0]
    5178:	4605      	mov	r5, r0
    517a:	2a49      	cmp	r2, #73	; 0x49
    517c:	f47f aefa 	bne.w	4f74 <d_name+0x34>
    5180:	b168      	cbz	r0, 519e <d_name+0x25e>
    5182:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    5186:	428a      	cmp	r2, r1
    5188:	da09      	bge.n	519e <d_name+0x25e>
    518a:	69e1      	ldr	r1, [r4, #28]
    518c:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    5190:	3201      	adds	r2, #1
    5192:	6222      	str	r2, [r4, #32]
    5194:	781a      	ldrb	r2, [r3, #0]
    5196:	3a49      	subs	r2, #73	; 0x49
    5198:	2a01      	cmp	r2, #1
    519a:	d8c6      	bhi.n	512a <d_name+0x1ea>
    519c:	e6fe      	b.n	4f9c <d_name+0x5c>
    519e:	2500      	movs	r5, #0
    51a0:	4628      	mov	r0, r5
    51a2:	b004      	add	sp, #16
    51a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    51a8:	7853      	ldrb	r3, [r2, #1]
    51aa:	4620      	mov	r0, r4
    51ac:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    51b0:	2b54      	cmp	r3, #84	; 0x54
    51b2:	f43f af3e 	beq.w	5032 <d_name+0xf2>
    51b6:	f7ff fd2b 	bl	4c10 <d_unqualified_name>
    51ba:	4605      	mov	r5, r0
    51bc:	f1ba 0f00 	cmp.w	sl, #0
    51c0:	f47f af25 	bne.w	500e <d_name+0xce>
    51c4:	e73b      	b.n	503e <d_name+0xfe>
    51c6:	2315      	movs	r3, #21
    51c8:	fa29 f303 	lsr.w	r3, r9, r3
    51cc:	07d9      	lsls	r1, r3, #31
    51ce:	d540      	bpl.n	5252 <d_name+0x312>
    51d0:	4620      	mov	r0, r4
    51d2:	f7ff fd1d 	bl	4c10 <d_unqualified_name>
    51d6:	b115      	cbz	r5, 51de <d_name+0x29e>
    51d8:	46aa      	mov	sl, r5
    51da:	4605      	mov	r5, r0
    51dc:	e717      	b.n	500e <d_name+0xce>
    51de:	4605      	mov	r5, r0
    51e0:	e72d      	b.n	503e <d_name+0xfe>
    51e2:	2100      	movs	r1, #0
    51e4:	f000 f89c 	bl	5320 <d_encoding.part.0>
    51e8:	4605      	mov	r5, r0
    51ea:	e746      	b.n	507a <d_name+0x13a>
    51ec:	1c9a      	adds	r2, r3, #2
    51ee:	60e2      	str	r2, [r4, #12]
    51f0:	789a      	ldrb	r2, [r3, #2]
    51f2:	2a5f      	cmp	r2, #95	; 0x5f
    51f4:	f000 8081 	beq.w	52fa <d_name+0x3ba>
    51f8:	2a6e      	cmp	r2, #110	; 0x6e
    51fa:	d0d0      	beq.n	519e <d_name+0x25e>
    51fc:	4620      	mov	r0, r4
    51fe:	f7fe fb77 	bl	38f0 <d_number>
    5202:	1c46      	adds	r6, r0, #1
    5204:	d4cb      	bmi.n	519e <d_name+0x25e>
    5206:	68e3      	ldr	r3, [r4, #12]
    5208:	781a      	ldrb	r2, [r3, #0]
    520a:	2a5f      	cmp	r2, #95	; 0x5f
    520c:	d1c7      	bne.n	519e <d_name+0x25e>
    520e:	3301      	adds	r3, #1
    5210:	60e3      	str	r3, [r4, #12]
    5212:	4620      	mov	r0, r4
    5214:	f7ff fe94 	bl	4f40 <d_name>
    5218:	4603      	mov	r3, r0
    521a:	2800      	cmp	r0, #0
    521c:	f43f af53 	beq.w	50c6 <d_name+0x186>
    5220:	781a      	ldrb	r2, [r3, #0]
    5222:	2a46      	cmp	r2, #70	; 0x46
    5224:	f43f af4f 	beq.w	50c6 <d_name+0x186>
    5228:	2a48      	cmp	r2, #72	; 0x48
    522a:	f43f af4c 	beq.w	50c6 <d_name+0x186>
    522e:	e741      	b.n	50b4 <d_name+0x174>
    5230:	4655      	mov	r5, sl
    5232:	e7c9      	b.n	51c8 <d_name+0x288>
    5234:	2e55      	cmp	r6, #85	; 0x55
    5236:	d02f      	beq.n	5298 <d_name+0x358>
    5238:	2e53      	cmp	r6, #83	; 0x53
    523a:	d109      	bne.n	5250 <d_name+0x310>
    523c:	2101      	movs	r1, #1
    523e:	4620      	mov	r0, r4
    5240:	f7fe fe60 	bl	3f04 <d_substitution>
    5244:	4605      	mov	r5, r0
    5246:	f1ba 0f00 	cmp.w	sl, #0
    524a:	f47f aee0 	bne.w	500e <d_name+0xce>
    524e:	e6e7      	b.n	5020 <d_name+0xe0>
    5250:	4655      	mov	r5, sl
    5252:	2e49      	cmp	r6, #73	; 0x49
    5254:	d045      	beq.n	52e2 <d_name+0x3a2>
    5256:	2e54      	cmp	r6, #84	; 0x54
    5258:	d055      	beq.n	5306 <d_name+0x3c6>
    525a:	2e45      	cmp	r6, #69	; 0x45
    525c:	d009      	beq.n	5272 <d_name+0x332>
    525e:	2e4d      	cmp	r6, #77	; 0x4d
    5260:	f47f aee3 	bne.w	502a <d_name+0xea>
    5264:	2d00      	cmp	r5, #0
    5266:	f43f aee0 	beq.w	502a <d_name+0xea>
    526a:	3201      	adds	r2, #1
    526c:	46aa      	mov	sl, r5
    526e:	60e2      	str	r2, [r4, #12]
    5270:	e6d8      	b.n	5024 <d_name+0xe4>
    5272:	603d      	str	r5, [r7, #0]
    5274:	2d00      	cmp	r5, #0
    5276:	d092      	beq.n	519e <d_name+0x25e>
    5278:	f1b8 0f00 	cmp.w	r8, #0
    527c:	d004      	beq.n	5288 <d_name+0x348>
    527e:	9b03      	ldr	r3, [sp, #12]
    5280:	f8cd 800c 	str.w	r8, [sp, #12]
    5284:	f8c8 300c 	str.w	r3, [r8, #12]
    5288:	68e3      	ldr	r3, [r4, #12]
    528a:	781a      	ldrb	r2, [r3, #0]
    528c:	2a45      	cmp	r2, #69	; 0x45
    528e:	d186      	bne.n	519e <d_name+0x25e>
    5290:	3301      	adds	r3, #1
    5292:	9d03      	ldr	r5, [sp, #12]
    5294:	60e3      	str	r3, [r4, #12]
    5296:	e66d      	b.n	4f74 <d_name+0x34>
    5298:	4655      	mov	r5, sl
    529a:	e799      	b.n	51d0 <d_name+0x290>
    529c:	100803ff 	.word	0x100803ff
    52a0:	00018f5c 	.word	0x00018f5c
    52a4:	3302      	adds	r3, #2
    52a6:	4620      	mov	r0, r4
    52a8:	60e3      	str	r3, [r4, #12]
    52aa:	f7fe fc07 	bl	3abc <d_discriminator>
    52ae:	2800      	cmp	r0, #0
    52b0:	f43f af75 	beq.w	519e <d_name+0x25e>
    52b4:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
    52b8:	429a      	cmp	r2, r3
    52ba:	da22      	bge.n	5302 <d_name+0x3c2>
    52bc:	eb02 0382 	add.w	r3, r2, r2, lsl #2
    52c0:	3201      	adds	r2, #1
    52c2:	6162      	str	r2, [r4, #20]
    52c4:	200e      	movs	r0, #14
    52c6:	2200      	movs	r2, #0
    52c8:	6921      	ldr	r1, [r4, #16]
    52ca:	4e14      	ldr	r6, [pc, #80]	; (531c <d_name+0x3dc>)
    52cc:	009f      	lsls	r7, r3, #2
    52ce:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    52d2:	e9c3 2201 	strd	r2, r2, [r3, #4]
    52d6:	55ca      	strb	r2, [r1, r7]
    52d8:	e9c3 6003 	strd	r6, r0, [r3, #12]
    52dc:	e709      	b.n	50f2 <d_name+0x1b2>
    52de:	2500      	movs	r5, #0
    52e0:	e73c      	b.n	515c <d_name+0x21c>
    52e2:	2d00      	cmp	r5, #0
    52e4:	f43f aea1 	beq.w	502a <d_name+0xea>
    52e8:	3201      	adds	r2, #1
    52ea:	4620      	mov	r0, r4
    52ec:	60e2      	str	r2, [r4, #12]
    52ee:	f000 fed7 	bl	60a0 <d_template_args_1>
    52f2:	46aa      	mov	sl, r5
    52f4:	2104      	movs	r1, #4
    52f6:	4605      	mov	r5, r0
    52f8:	e68a      	b.n	5010 <d_name+0xd0>
    52fa:	3303      	adds	r3, #3
    52fc:	2600      	movs	r6, #0
    52fe:	60e3      	str	r3, [r4, #12]
    5300:	e787      	b.n	5212 <d_name+0x2d2>
    5302:	2300      	movs	r3, #0
    5304:	e6f5      	b.n	50f2 <d_name+0x1b2>
    5306:	4620      	mov	r0, r4
    5308:	46aa      	mov	sl, r5
    530a:	f7fe fd1d 	bl	3d48 <d_template_param>
    530e:	4605      	mov	r5, r0
    5310:	f1ba 0f00 	cmp.w	sl, #0
    5314:	f47f ae7b 	bne.w	500e <d_name+0xce>
    5318:	e691      	b.n	503e <d_name+0xfe>
    531a:	bf00      	nop
    531c:	00018f4c 	.word	0x00018f4c

00005320 <d_encoding.part.0>:
    5320:	b570      	push	{r4, r5, r6, lr}
    5322:	4605      	mov	r5, r0
    5324:	460e      	mov	r6, r1
    5326:	f7ff fe0b 	bl	4f40 <d_name>
    532a:	2800      	cmp	r0, #0
    532c:	d049      	beq.n	53c2 <d_encoding.part.0+0xa2>
    532e:	4604      	mov	r4, r0
    5330:	b1ee      	cbz	r6, 536e <d_encoding.part.0+0x4e>
    5332:	68ab      	ldr	r3, [r5, #8]
    5334:	07db      	lsls	r3, r3, #31
    5336:	d41a      	bmi.n	536e <d_encoding.part.0+0x4e>
    5338:	7823      	ldrb	r3, [r4, #0]
    533a:	2b4d      	cmp	r3, #77	; 0x4d
    533c:	f1a3 011c 	sub.w	r1, r3, #28
    5340:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
    5344:	d035      	beq.n	53b2 <d_encoding.part.0+0x92>
    5346:	d832      	bhi.n	53ae <d_encoding.part.0+0x8e>
    5348:	2904      	cmp	r1, #4
    534a:	d932      	bls.n	53b2 <d_encoding.part.0+0x92>
    534c:	2b02      	cmp	r3, #2
    534e:	d10c      	bne.n	536a <d_encoding.part.0+0x4a>
    5350:	6923      	ldr	r3, [r4, #16]
    5352:	2b00      	cmp	r3, #0
    5354:	d035      	beq.n	53c2 <d_encoding.part.0+0xa2>
    5356:	781a      	ldrb	r2, [r3, #0]
    5358:	2a4d      	cmp	r2, #77	; 0x4d
    535a:	f1a2 001c 	sub.w	r0, r2, #28
    535e:	f1a2 014f 	sub.w	r1, r2, #79	; 0x4f
    5362:	d02a      	beq.n	53ba <d_encoding.part.0+0x9a>
    5364:	d827      	bhi.n	53b6 <d_encoding.part.0+0x96>
    5366:	2804      	cmp	r0, #4
    5368:	d927      	bls.n	53ba <d_encoding.part.0+0x9a>
    536a:	4620      	mov	r0, r4
    536c:	bd70      	pop	{r4, r5, r6, pc}
    536e:	68eb      	ldr	r3, [r5, #12]
    5370:	781b      	ldrb	r3, [r3, #0]
    5372:	2b00      	cmp	r3, #0
    5374:	d0f9      	beq.n	536a <d_encoding.part.0+0x4a>
    5376:	2b45      	cmp	r3, #69	; 0x45
    5378:	d0f7      	beq.n	536a <d_encoding.part.0+0x4a>
    537a:	4621      	mov	r1, r4
    537c:	780b      	ldrb	r3, [r1, #0]
    537e:	2b04      	cmp	r3, #4
    5380:	d032      	beq.n	53e8 <d_encoding.part.0+0xc8>
    5382:	d826      	bhi.n	53d2 <d_encoding.part.0+0xb2>
    5384:	2b02      	cmp	r3, #2
    5386:	d122      	bne.n	53ce <d_encoding.part.0+0xae>
    5388:	6909      	ldr	r1, [r1, #16]
    538a:	2900      	cmp	r1, #0
    538c:	d1f6      	bne.n	537c <d_encoding.part.0+0x5c>
    538e:	4628      	mov	r0, r5
    5390:	f7ff fbe4 	bl	4b5c <d_bare_function_type>
    5394:	4603      	mov	r3, r0
    5396:	b1a0      	cbz	r0, 53c2 <d_encoding.part.0+0xa2>
    5398:	b916      	cbnz	r6, 53a0 <d_encoding.part.0+0x80>
    539a:	7822      	ldrb	r2, [r4, #0]
    539c:	2a02      	cmp	r2, #2
    539e:	d037      	beq.n	5410 <d_encoding.part.0+0xf0>
    53a0:	4622      	mov	r2, r4
    53a2:	4628      	mov	r0, r5
    53a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    53a8:	2103      	movs	r1, #3
    53aa:	f7fe ba57 	b.w	385c <d_make_comp>
    53ae:	2a01      	cmp	r2, #1
    53b0:	d8db      	bhi.n	536a <d_encoding.part.0+0x4a>
    53b2:	68e4      	ldr	r4, [r4, #12]
    53b4:	e7c0      	b.n	5338 <d_encoding.part.0+0x18>
    53b6:	2901      	cmp	r1, #1
    53b8:	d8d7      	bhi.n	536a <d_encoding.part.0+0x4a>
    53ba:	68db      	ldr	r3, [r3, #12]
    53bc:	6123      	str	r3, [r4, #16]
    53be:	2b00      	cmp	r3, #0
    53c0:	d1c9      	bne.n	5356 <d_encoding.part.0+0x36>
    53c2:	2400      	movs	r4, #0
    53c4:	4620      	mov	r0, r4
    53c6:	bd70      	pop	{r4, r5, r6, pc}
    53c8:	3b1c      	subs	r3, #28
    53ca:	2b04      	cmp	r3, #4
    53cc:	d908      	bls.n	53e0 <d_encoding.part.0+0xc0>
    53ce:	2100      	movs	r1, #0
    53d0:	e7dd      	b.n	538e <d_encoding.part.0+0x6e>
    53d2:	2b4d      	cmp	r3, #77	; 0x4d
    53d4:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
    53d8:	d002      	beq.n	53e0 <d_encoding.part.0+0xc0>
    53da:	d9f5      	bls.n	53c8 <d_encoding.part.0+0xa8>
    53dc:	2a01      	cmp	r2, #1
    53de:	d8f6      	bhi.n	53ce <d_encoding.part.0+0xae>
    53e0:	68c9      	ldr	r1, [r1, #12]
    53e2:	2900      	cmp	r1, #0
    53e4:	d1ca      	bne.n	537c <d_encoding.part.0+0x5c>
    53e6:	e7d2      	b.n	538e <d_encoding.part.0+0x6e>
    53e8:	68cb      	ldr	r3, [r1, #12]
    53ea:	b15b      	cbz	r3, 5404 <d_encoding.part.0+0xe4>
    53ec:	7819      	ldrb	r1, [r3, #0]
    53ee:	2908      	cmp	r1, #8
    53f0:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
    53f4:	d808      	bhi.n	5408 <d_encoding.part.0+0xe8>
    53f6:	2906      	cmp	r1, #6
    53f8:	d8e9      	bhi.n	53ce <d_encoding.part.0+0xae>
    53fa:	2a01      	cmp	r2, #1
    53fc:	d802      	bhi.n	5404 <d_encoding.part.0+0xe4>
    53fe:	691b      	ldr	r3, [r3, #16]
    5400:	2b00      	cmp	r3, #0
    5402:	d1f3      	bne.n	53ec <d_encoding.part.0+0xcc>
    5404:	2101      	movs	r1, #1
    5406:	e7c2      	b.n	538e <d_encoding.part.0+0x6e>
    5408:	3935      	subs	r1, #53	; 0x35
    540a:	bf18      	it	ne
    540c:	2101      	movne	r1, #1
    540e:	e7be      	b.n	538e <d_encoding.part.0+0x6e>
    5410:	7802      	ldrb	r2, [r0, #0]
    5412:	2a29      	cmp	r2, #41	; 0x29
    5414:	bf08      	it	eq
    5416:	60c6      	streq	r6, [r0, #12]
    5418:	e7c2      	b.n	53a0 <d_encoding.part.0+0x80>
    541a:	bf00      	nop

0000541c <d_special_name>:
    541c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    5420:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    5422:	68c3      	ldr	r3, [r0, #12]
    5424:	f101 0214 	add.w	r2, r1, #20
    5428:	62c2      	str	r2, [r0, #44]	; 0x2c
    542a:	781a      	ldrb	r2, [r3, #0]
    542c:	4604      	mov	r4, r0
    542e:	2a54      	cmp	r2, #84	; 0x54
    5430:	d078      	beq.n	5524 <d_special_name+0x108>
    5432:	2a47      	cmp	r2, #71	; 0x47
    5434:	d128      	bne.n	5488 <d_special_name+0x6c>
    5436:	1c5a      	adds	r2, r3, #1
    5438:	60c2      	str	r2, [r0, #12]
    543a:	785a      	ldrb	r2, [r3, #1]
    543c:	b322      	cbz	r2, 5488 <d_special_name+0x6c>
    543e:	1c9a      	adds	r2, r3, #2
    5440:	60c2      	str	r2, [r0, #12]
    5442:	785a      	ldrb	r2, [r3, #1]
    5444:	2a56      	cmp	r2, #86	; 0x56
    5446:	d822      	bhi.n	548e <d_special_name+0x72>
    5448:	2a40      	cmp	r2, #64	; 0x40
    544a:	d91d      	bls.n	5488 <d_special_name+0x6c>
    544c:	3a41      	subs	r2, #65	; 0x41
    544e:	2a15      	cmp	r2, #21
    5450:	d81a      	bhi.n	5488 <d_special_name+0x6c>
    5452:	e8df f012 	tbh	[pc, r2, lsl #1]
    5456:	0127      	.short	0x0127
    5458:	00190019 	.word	0x00190019
    545c:	00190019 	.word	0x00190019
    5460:	00190019 	.word	0x00190019
    5464:	00190019 	.word	0x00190019
    5468:	00190019 	.word	0x00190019
    546c:	00190019 	.word	0x00190019
    5470:	00190019 	.word	0x00190019
    5474:	00190019 	.word	0x00190019
    5478:	00190105 	.word	0x00190105
    547c:	001900eb 	.word	0x001900eb
    5480:	00e1      	.short	0x00e1
    5482:	68e3      	ldr	r3, [r4, #12]
    5484:	3302      	adds	r3, #2
    5486:	60e3      	str	r3, [r4, #12]
    5488:	2000      	movs	r0, #0
    548a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    548e:	2a72      	cmp	r2, #114	; 0x72
    5490:	d1fa      	bne.n	5488 <d_special_name+0x6c>
    5492:	f7fe fa2d 	bl	38f0 <d_number>
    5496:	2801      	cmp	r0, #1
    5498:	ddf6      	ble.n	5488 <d_special_name+0x6c>
    549a:	68e3      	ldr	r3, [r4, #12]
    549c:	781a      	ldrb	r2, [r3, #0]
    549e:	2a00      	cmp	r2, #0
    54a0:	d0f2      	beq.n	5488 <d_special_name+0x6c>
    54a2:	1c5e      	adds	r6, r3, #1
    54a4:	60e6      	str	r6, [r4, #12]
    54a6:	781b      	ldrb	r3, [r3, #0]
    54a8:	2b5f      	cmp	r3, #95	; 0x5f
    54aa:	d1ed      	bne.n	5488 <d_special_name+0x6c>
    54ac:	2200      	movs	r2, #0
    54ae:	f04f 0841 	mov.w	r8, #65	; 0x41
    54b2:	4617      	mov	r7, r2
    54b4:	1e45      	subs	r5, r0, #1
    54b6:	7833      	ldrb	r3, [r6, #0]
    54b8:	2b00      	cmp	r3, #0
    54ba:	d0e5      	beq.n	5488 <d_special_name+0x6c>
    54bc:	2b24      	cmp	r3, #36	; 0x24
    54be:	f040 81e6 	bne.w	588e <d_special_name+0x472>
    54c2:	7873      	ldrb	r3, [r6, #1]
    54c4:	2b53      	cmp	r3, #83	; 0x53
    54c6:	f000 8207 	beq.w	58d8 <d_special_name+0x4bc>
    54ca:	2b5f      	cmp	r3, #95	; 0x5f
    54cc:	f000 8202 	beq.w	58d4 <d_special_name+0x4b8>
    54d0:	2b24      	cmp	r3, #36	; 0x24
    54d2:	d1d9      	bne.n	5488 <d_special_name+0x6c>
    54d4:	4619      	mov	r1, r3
    54d6:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
    54da:	4298      	cmp	r0, r3
    54dc:	dad1      	bge.n	5482 <d_special_name+0x66>
    54de:	6926      	ldr	r6, [r4, #16]
    54e0:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
    54e4:	eb06 038c 	add.w	r3, r6, ip, lsl #2
    54e8:	3001      	adds	r0, #1
    54ea:	e9c3 7701 	strd	r7, r7, [r3, #4]
    54ee:	6160      	str	r0, [r4, #20]
    54f0:	f806 802c 	strb.w	r8, [r6, ip, lsl #2]
    54f4:	68e6      	ldr	r6, [r4, #12]
    54f6:	60d9      	str	r1, [r3, #12]
    54f8:	3602      	adds	r6, #2
    54fa:	3d02      	subs	r5, #2
    54fc:	60e6      	str	r6, [r4, #12]
    54fe:	2a00      	cmp	r2, #0
    5500:	f000 81e6 	beq.w	58d0 <d_special_name+0x4b4>
    5504:	2140      	movs	r1, #64	; 0x40
    5506:	4620      	mov	r0, r4
    5508:	f7fe f9a8 	bl	385c <d_make_comp>
    550c:	4602      	mov	r2, r0
    550e:	2800      	cmp	r0, #0
    5510:	d0ba      	beq.n	5488 <d_special_name+0x6c>
    5512:	2d00      	cmp	r5, #0
    5514:	dccf      	bgt.n	54b6 <d_special_name+0x9a>
    5516:	4620      	mov	r0, r4
    5518:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    551c:	2300      	movs	r3, #0
    551e:	213f      	movs	r1, #63	; 0x3f
    5520:	f7fe b99c 	b.w	385c <d_make_comp>
    5524:	1c5a      	adds	r2, r3, #1
    5526:	60c2      	str	r2, [r0, #12]
    5528:	785a      	ldrb	r2, [r3, #1]
    552a:	2a00      	cmp	r2, #0
    552c:	d0ac      	beq.n	5488 <d_special_name+0x6c>
    552e:	1c9a      	adds	r2, r3, #2
    5530:	60c2      	str	r2, [r0, #12]
    5532:	785b      	ldrb	r3, [r3, #1]
    5534:	3b41      	subs	r3, #65	; 0x41
    5536:	2b35      	cmp	r3, #53	; 0x35
    5538:	d8a6      	bhi.n	5488 <d_special_name+0x6c>
    553a:	a201      	add	r2, pc, #4	; (adr r2, 5540 <d_special_name+0x124>)
    553c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    5540:	000056f1 	.word	0x000056f1
    5544:	00005489 	.word	0x00005489
    5548:	00005705 	.word	0x00005705
    554c:	00005489 	.word	0x00005489
    5550:	00005489 	.word	0x00005489
    5554:	00005741 	.word	0x00005741
    5558:	00005489 	.word	0x00005489
    555c:	000057bd 	.word	0x000057bd
    5560:	00005867 	.word	0x00005867
    5564:	00005853 	.word	0x00005853
    5568:	00005489 	.word	0x00005489
    556c:	00005489 	.word	0x00005489
    5570:	00005489 	.word	0x00005489
    5574:	00005489 	.word	0x00005489
    5578:	00005489 	.word	0x00005489
    557c:	00005489 	.word	0x00005489
    5580:	00005489 	.word	0x00005489
    5584:	00005489 	.word	0x00005489
    5588:	0000587b 	.word	0x0000587b
    558c:	000057d1 	.word	0x000057d1
    5590:	00005489 	.word	0x00005489
    5594:	000057e9 	.word	0x000057e9
    5598:	00005801 	.word	0x00005801
    559c:	00005489 	.word	0x00005489
    55a0:	00005489 	.word	0x00005489
    55a4:	00005489 	.word	0x00005489
    55a8:	00005489 	.word	0x00005489
    55ac:	00005489 	.word	0x00005489
    55b0:	00005489 	.word	0x00005489
    55b4:	00005489 	.word	0x00005489
    55b8:	00005489 	.word	0x00005489
    55bc:	00005489 	.word	0x00005489
    55c0:	00005489 	.word	0x00005489
    55c4:	00005489 	.word	0x00005489
    55c8:	00005815 	.word	0x00005815
    55cc:	00005489 	.word	0x00005489
    55d0:	00005489 	.word	0x00005489
    55d4:	00005489 	.word	0x00005489
    55d8:	00005489 	.word	0x00005489
    55dc:	00005755 	.word	0x00005755
    55e0:	00005489 	.word	0x00005489
    55e4:	00005489 	.word	0x00005489
    55e8:	00005489 	.word	0x00005489
    55ec:	00005489 	.word	0x00005489
    55f0:	00005489 	.word	0x00005489
    55f4:	00005489 	.word	0x00005489
    55f8:	00005489 	.word	0x00005489
    55fc:	00005489 	.word	0x00005489
    5600:	00005489 	.word	0x00005489
    5604:	00005489 	.word	0x00005489
    5608:	00005489 	.word	0x00005489
    560c:	00005489 	.word	0x00005489
    5610:	00005489 	.word	0x00005489
    5614:	00005789 	.word	0x00005789
    5618:	f7ff fc92 	bl	4f40 <d_name>
    561c:	2300      	movs	r3, #0
    561e:	4602      	mov	r2, r0
    5620:	2113      	movs	r1, #19
    5622:	4620      	mov	r0, r4
    5624:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5628:	f7fe b918 	b.w	385c <d_make_comp>
    562c:	789a      	ldrb	r2, [r3, #2]
    562e:	2a00      	cmp	r2, #0
    5630:	f000 8154 	beq.w	58dc <d_special_name+0x4c0>
    5634:	1cda      	adds	r2, r3, #3
    5636:	60c2      	str	r2, [r0, #12]
    5638:	789a      	ldrb	r2, [r3, #2]
    563a:	78db      	ldrb	r3, [r3, #3]
    563c:	2a6e      	cmp	r2, #110	; 0x6e
    563e:	d046      	beq.n	56ce <d_special_name+0x2b2>
    5640:	2b47      	cmp	r3, #71	; 0x47
    5642:	d002      	beq.n	564a <d_special_name+0x22e>
    5644:	2b54      	cmp	r3, #84	; 0x54
    5646:	f040 8149 	bne.w	58dc <d_special_name+0x4c0>
    564a:	4620      	mov	r0, r4
    564c:	f7ff fee6 	bl	541c <d_special_name>
    5650:	4602      	mov	r2, r0
    5652:	4620      	mov	r0, r4
    5654:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5658:	2300      	movs	r3, #0
    565a:	2149      	movs	r1, #73	; 0x49
    565c:	f7fe b8fe 	b.w	385c <d_make_comp>
    5660:	f7ff fc6e 	bl	4f40 <d_name>
    5664:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
    5668:	4291      	cmp	r1, r2
    566a:	4606      	mov	r6, r0
    566c:	f280 8140 	bge.w	58f0 <d_special_name+0x4d4>
    5670:	2300      	movs	r3, #0
    5672:	f04f 0c42 	mov.w	ip, #66	; 0x42
    5676:	6922      	ldr	r2, [r4, #16]
    5678:	eb01 0781 	add.w	r7, r1, r1, lsl #2
    567c:	eb02 0587 	add.w	r5, r2, r7, lsl #2
    5680:	3101      	adds	r1, #1
    5682:	e9c5 3301 	strd	r3, r3, [r5, #4]
    5686:	4620      	mov	r0, r4
    5688:	6161      	str	r1, [r4, #20]
    568a:	f802 c027 	strb.w	ip, [r2, r7, lsl #2]
    568e:	f7fe f92f 	bl	38f0 <d_number>
    5692:	60e8      	str	r0, [r5, #12]
    5694:	462b      	mov	r3, r5
    5696:	4632      	mov	r2, r6
    5698:	4620      	mov	r0, r4
    569a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    569e:	2116      	movs	r1, #22
    56a0:	f7fe b8dc 	b.w	385c <d_make_comp>
    56a4:	789b      	ldrb	r3, [r3, #2]
    56a6:	2b47      	cmp	r3, #71	; 0x47
    56a8:	d001      	beq.n	56ae <d_special_name+0x292>
    56aa:	2b54      	cmp	r3, #84	; 0x54
    56ac:	d10a      	bne.n	56c4 <d_special_name+0x2a8>
    56ae:	4620      	mov	r0, r4
    56b0:	f7ff feb4 	bl	541c <d_special_name>
    56b4:	4602      	mov	r2, r0
    56b6:	4620      	mov	r0, r4
    56b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    56bc:	2300      	movs	r3, #0
    56be:	2117      	movs	r1, #23
    56c0:	f7fe b8cc 	b.w	385c <d_make_comp>
    56c4:	2100      	movs	r1, #0
    56c6:	f7ff fe2b 	bl	5320 <d_encoding.part.0>
    56ca:	4602      	mov	r2, r0
    56cc:	e7f3      	b.n	56b6 <d_special_name+0x29a>
    56ce:	2b47      	cmp	r3, #71	; 0x47
    56d0:	f000 811a 	beq.w	5908 <d_special_name+0x4ec>
    56d4:	2b54      	cmp	r3, #84	; 0x54
    56d6:	f000 8117 	beq.w	5908 <d_special_name+0x4ec>
    56da:	2100      	movs	r1, #0
    56dc:	f7ff fe20 	bl	5320 <d_encoding.part.0>
    56e0:	4602      	mov	r2, r0
    56e2:	4620      	mov	r0, r4
    56e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    56e8:	2300      	movs	r3, #0
    56ea:	214a      	movs	r1, #74	; 0x4a
    56ec:	f7fe b8b6 	b.w	385c <d_make_comp>
    56f0:	f000 fcac 	bl	604c <d_template_arg>
    56f4:	2300      	movs	r3, #0
    56f6:	4602      	mov	r2, r0
    56f8:	2130      	movs	r1, #48	; 0x30
    56fa:	4620      	mov	r0, r4
    56fc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5700:	f7fe b8ac 	b.w	385c <d_make_comp>
    5704:	f7fe fd3e 	bl	4184 <d_type>
    5708:	4605      	mov	r5, r0
    570a:	4620      	mov	r0, r4
    570c:	f7fe f8f0 	bl	38f0 <d_number>
    5710:	2800      	cmp	r0, #0
    5712:	f6ff aeb9 	blt.w	5488 <d_special_name+0x6c>
    5716:	68e3      	ldr	r3, [r4, #12]
    5718:	781a      	ldrb	r2, [r3, #0]
    571a:	2a5f      	cmp	r2, #95	; 0x5f
    571c:	f47f aeb4 	bne.w	5488 <d_special_name+0x6c>
    5720:	3301      	adds	r3, #1
    5722:	60e3      	str	r3, [r4, #12]
    5724:	4620      	mov	r0, r4
    5726:	f7fe fd2d 	bl	4184 <d_type>
    572a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    572c:	4602      	mov	r2, r0
    572e:	1d48      	adds	r0, r1, #5
    5730:	62e0      	str	r0, [r4, #44]	; 0x2c
    5732:	462b      	mov	r3, r5
    5734:	4620      	mov	r0, r4
    5736:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    573a:	210b      	movs	r1, #11
    573c:	f7fe b88e 	b.w	385c <d_make_comp>
    5740:	f7fe fd20 	bl	4184 <d_type>
    5744:	2300      	movs	r3, #0
    5746:	4602      	mov	r2, r0
    5748:	210e      	movs	r1, #14
    574a:	4620      	mov	r0, r4
    574c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5750:	f7fe b884 	b.w	385c <d_make_comp>
    5754:	2168      	movs	r1, #104	; 0x68
    5756:	f7fe f905 	bl	3964 <d_call_offset>
    575a:	2800      	cmp	r0, #0
    575c:	f43f ae94 	beq.w	5488 <d_special_name+0x6c>
    5760:	68e3      	ldr	r3, [r4, #12]
    5762:	781b      	ldrb	r3, [r3, #0]
    5764:	2b47      	cmp	r3, #71	; 0x47
    5766:	f000 80c5 	beq.w	58f4 <d_special_name+0x4d8>
    576a:	2b54      	cmp	r3, #84	; 0x54
    576c:	f000 80c2 	beq.w	58f4 <d_special_name+0x4d8>
    5770:	2100      	movs	r1, #0
    5772:	4620      	mov	r0, r4
    5774:	f7ff fdd4 	bl	5320 <d_encoding.part.0>
    5778:	4602      	mov	r2, r0
    577a:	4620      	mov	r0, r4
    577c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5780:	2300      	movs	r3, #0
    5782:	210f      	movs	r1, #15
    5784:	f7fe b86a 	b.w	385c <d_make_comp>
    5788:	2176      	movs	r1, #118	; 0x76
    578a:	f7fe f8eb 	bl	3964 <d_call_offset>
    578e:	2800      	cmp	r0, #0
    5790:	f43f ae7a 	beq.w	5488 <d_special_name+0x6c>
    5794:	68e3      	ldr	r3, [r4, #12]
    5796:	781b      	ldrb	r3, [r3, #0]
    5798:	2b47      	cmp	r3, #71	; 0x47
    579a:	f000 80b0 	beq.w	58fe <d_special_name+0x4e2>
    579e:	2b54      	cmp	r3, #84	; 0x54
    57a0:	f000 80ad 	beq.w	58fe <d_special_name+0x4e2>
    57a4:	2100      	movs	r1, #0
    57a6:	4620      	mov	r0, r4
    57a8:	f7ff fdba 	bl	5320 <d_encoding.part.0>
    57ac:	4602      	mov	r2, r0
    57ae:	4620      	mov	r0, r4
    57b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    57b4:	2300      	movs	r3, #0
    57b6:	2110      	movs	r1, #16
    57b8:	f7fe b850 	b.w	385c <d_make_comp>
    57bc:	f7ff fbc0 	bl	4f40 <d_name>
    57c0:	2300      	movs	r3, #0
    57c2:	4602      	mov	r2, r0
    57c4:	2114      	movs	r1, #20
    57c6:	4620      	mov	r0, r4
    57c8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    57cc:	f7fe b846 	b.w	385c <d_make_comp>
    57d0:	310a      	adds	r1, #10
    57d2:	62c1      	str	r1, [r0, #44]	; 0x2c
    57d4:	f7fe fcd6 	bl	4184 <d_type>
    57d8:	2300      	movs	r3, #0
    57da:	4602      	mov	r2, r0
    57dc:	210a      	movs	r1, #10
    57de:	4620      	mov	r0, r4
    57e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    57e4:	f7fe b83a 	b.w	385c <d_make_comp>
    57e8:	310f      	adds	r1, #15
    57ea:	62c1      	str	r1, [r0, #44]	; 0x2c
    57ec:	f7fe fcca 	bl	4184 <d_type>
    57f0:	2300      	movs	r3, #0
    57f2:	4602      	mov	r2, r0
    57f4:	2109      	movs	r1, #9
    57f6:	4620      	mov	r0, r4
    57f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    57fc:	f7fe b82e 	b.w	385c <d_make_comp>
    5800:	f7ff fb9e 	bl	4f40 <d_name>
    5804:	2300      	movs	r3, #0
    5806:	4602      	mov	r2, r0
    5808:	2115      	movs	r1, #21
    580a:	4620      	mov	r0, r4
    580c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5810:	f7fe b824 	b.w	385c <d_make_comp>
    5814:	2100      	movs	r1, #0
    5816:	f7fe f8a5 	bl	3964 <d_call_offset>
    581a:	2800      	cmp	r0, #0
    581c:	f43f ae34 	beq.w	5488 <d_special_name+0x6c>
    5820:	2100      	movs	r1, #0
    5822:	4620      	mov	r0, r4
    5824:	f7fe f89e 	bl	3964 <d_call_offset>
    5828:	2800      	cmp	r0, #0
    582a:	f43f ae2d 	beq.w	5488 <d_special_name+0x6c>
    582e:	68e3      	ldr	r3, [r4, #12]
    5830:	781b      	ldrb	r3, [r3, #0]
    5832:	2b47      	cmp	r3, #71	; 0x47
    5834:	d06d      	beq.n	5912 <d_special_name+0x4f6>
    5836:	2b54      	cmp	r3, #84	; 0x54
    5838:	d06b      	beq.n	5912 <d_special_name+0x4f6>
    583a:	2100      	movs	r1, #0
    583c:	4620      	mov	r0, r4
    583e:	f7ff fd6f 	bl	5320 <d_encoding.part.0>
    5842:	4602      	mov	r2, r0
    5844:	4620      	mov	r0, r4
    5846:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    584a:	2300      	movs	r3, #0
    584c:	2111      	movs	r1, #17
    584e:	f7fe b805 	b.w	385c <d_make_comp>
    5852:	f7fe fc97 	bl	4184 <d_type>
    5856:	2300      	movs	r3, #0
    5858:	4602      	mov	r2, r0
    585a:	2112      	movs	r1, #18
    585c:	4620      	mov	r0, r4
    585e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5862:	f7fd bffb 	b.w	385c <d_make_comp>
    5866:	f7fe fc8d 	bl	4184 <d_type>
    586a:	2300      	movs	r3, #0
    586c:	4602      	mov	r2, r0
    586e:	210c      	movs	r1, #12
    5870:	4620      	mov	r0, r4
    5872:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5876:	f7fd bff1 	b.w	385c <d_make_comp>
    587a:	f7fe fc83 	bl	4184 <d_type>
    587e:	2300      	movs	r3, #0
    5880:	4602      	mov	r2, r0
    5882:	210d      	movs	r1, #13
    5884:	4620      	mov	r0, r4
    5886:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    588a:	f7fd bfe7 	b.w	385c <d_make_comp>
    588e:	46b4      	mov	ip, r6
    5890:	2100      	movs	r1, #0
    5892:	e004      	b.n	589e <d_special_name+0x482>
    5894:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    5898:	b123      	cbz	r3, 58a4 <d_special_name+0x488>
    589a:	2b24      	cmp	r3, #36	; 0x24
    589c:	d002      	beq.n	58a4 <d_special_name+0x488>
    589e:	3101      	adds	r1, #1
    58a0:	42a9      	cmp	r1, r5
    58a2:	dbf7      	blt.n	5894 <d_special_name+0x478>
    58a4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
    58a8:	4283      	cmp	r3, r0
    58aa:	da1d      	bge.n	58e8 <d_special_name+0x4cc>
    58ac:	6920      	ldr	r0, [r4, #16]
    58ae:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
    58b2:	3301      	adds	r3, #1
    58b4:	6163      	str	r3, [r4, #20]
    58b6:	eb00 038c 	add.w	r3, r0, ip, lsl #2
    58ba:	e9c3 7701 	strd	r7, r7, [r3, #4]
    58be:	f800 702c 	strb.w	r7, [r0, ip, lsl #2]
    58c2:	e9c3 6103 	strd	r6, r1, [r3, #12]
    58c6:	68e6      	ldr	r6, [r4, #12]
    58c8:	1a6d      	subs	r5, r5, r1
    58ca:	440e      	add	r6, r1
    58cc:	60e6      	str	r6, [r4, #12]
    58ce:	e616      	b.n	54fe <d_special_name+0xe2>
    58d0:	461a      	mov	r2, r3
    58d2:	e61e      	b.n	5512 <d_special_name+0xf6>
    58d4:	212e      	movs	r1, #46	; 0x2e
    58d6:	e5fe      	b.n	54d6 <d_special_name+0xba>
    58d8:	212f      	movs	r1, #47	; 0x2f
    58da:	e5fc      	b.n	54d6 <d_special_name+0xba>
    58dc:	2100      	movs	r1, #0
    58de:	4620      	mov	r0, r4
    58e0:	f7ff fd1e 	bl	5320 <d_encoding.part.0>
    58e4:	4602      	mov	r2, r0
    58e6:	e6b4      	b.n	5652 <d_special_name+0x236>
    58e8:	68e3      	ldr	r3, [r4, #12]
    58ea:	440b      	add	r3, r1
    58ec:	60e3      	str	r3, [r4, #12]
    58ee:	e5cb      	b.n	5488 <d_special_name+0x6c>
    58f0:	2500      	movs	r5, #0
    58f2:	e6cf      	b.n	5694 <d_special_name+0x278>
    58f4:	4620      	mov	r0, r4
    58f6:	f7ff fd91 	bl	541c <d_special_name>
    58fa:	4602      	mov	r2, r0
    58fc:	e73d      	b.n	577a <d_special_name+0x35e>
    58fe:	4620      	mov	r0, r4
    5900:	f7ff fd8c 	bl	541c <d_special_name>
    5904:	4602      	mov	r2, r0
    5906:	e752      	b.n	57ae <d_special_name+0x392>
    5908:	4620      	mov	r0, r4
    590a:	f7ff fd87 	bl	541c <d_special_name>
    590e:	4602      	mov	r2, r0
    5910:	e6e7      	b.n	56e2 <d_special_name+0x2c6>
    5912:	4620      	mov	r0, r4
    5914:	f7ff fd82 	bl	541c <d_special_name>
    5918:	4602      	mov	r2, r0
    591a:	e793      	b.n	5844 <d_special_name+0x428>

0000591c <d_expr_primary>:
    591c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    591e:	68c2      	ldr	r2, [r0, #12]
    5920:	7813      	ldrb	r3, [r2, #0]
    5922:	2b4c      	cmp	r3, #76	; 0x4c
    5924:	d132      	bne.n	598c <d_expr_primary+0x70>
    5926:	1c53      	adds	r3, r2, #1
    5928:	60c3      	str	r3, [r0, #12]
    592a:	7851      	ldrb	r1, [r2, #1]
    592c:	4604      	mov	r4, r0
    592e:	295f      	cmp	r1, #95	; 0x5f
    5930:	d051      	beq.n	59d6 <d_expr_primary+0xba>
    5932:	295a      	cmp	r1, #90	; 0x5a
    5934:	d113      	bne.n	595e <d_expr_primary+0x42>
    5936:	1c5a      	adds	r2, r3, #1
    5938:	60e2      	str	r2, [r4, #12]
    593a:	785b      	ldrb	r3, [r3, #1]
    593c:	2b47      	cmp	r3, #71	; 0x47
    593e:	d043      	beq.n	59c8 <d_expr_primary+0xac>
    5940:	2b54      	cmp	r3, #84	; 0x54
    5942:	d041      	beq.n	59c8 <d_expr_primary+0xac>
    5944:	2100      	movs	r1, #0
    5946:	4620      	mov	r0, r4
    5948:	f7ff fcea 	bl	5320 <d_encoding.part.0>
    594c:	4606      	mov	r6, r0
    594e:	68e3      	ldr	r3, [r4, #12]
    5950:	781a      	ldrb	r2, [r3, #0]
    5952:	2a45      	cmp	r2, #69	; 0x45
    5954:	d11a      	bne.n	598c <d_expr_primary+0x70>
    5956:	3301      	adds	r3, #1
    5958:	4630      	mov	r0, r6
    595a:	60e3      	str	r3, [r4, #12]
    595c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    595e:	f7fe fc11 	bl	4184 <d_type>
    5962:	4606      	mov	r6, r0
    5964:	b190      	cbz	r0, 598c <d_expr_primary+0x70>
    5966:	7803      	ldrb	r3, [r0, #0]
    5968:	2b27      	cmp	r3, #39	; 0x27
    596a:	d012      	beq.n	5992 <d_expr_primary+0x76>
    596c:	68e2      	ldr	r2, [r4, #12]
    596e:	7815      	ldrb	r5, [r2, #0]
    5970:	2d6e      	cmp	r5, #110	; 0x6e
    5972:	d023      	beq.n	59bc <d_expr_primary+0xa0>
    5974:	213d      	movs	r1, #61	; 0x3d
    5976:	2d45      	cmp	r5, #69	; 0x45
    5978:	d059      	beq.n	5a2e <d_expr_primary+0x112>
    597a:	4613      	mov	r3, r2
    597c:	e003      	b.n	5986 <d_expr_primary+0x6a>
    597e:	60e3      	str	r3, [r4, #12]
    5980:	781d      	ldrb	r5, [r3, #0]
    5982:	2d45      	cmp	r5, #69	; 0x45
    5984:	d02f      	beq.n	59e6 <d_expr_primary+0xca>
    5986:	3301      	adds	r3, #1
    5988:	2d00      	cmp	r5, #0
    598a:	d1f8      	bne.n	597e <d_expr_primary+0x62>
    598c:	2600      	movs	r6, #0
    598e:	4630      	mov	r0, r6
    5990:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5992:	68c3      	ldr	r3, [r0, #12]
    5994:	7c1a      	ldrb	r2, [r3, #16]
    5996:	b11a      	cbz	r2, 59a0 <d_expr_primary+0x84>
    5998:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    599a:	6859      	ldr	r1, [r3, #4]
    599c:	1a52      	subs	r2, r2, r1
    599e:	62e2      	str	r2, [r4, #44]	; 0x2c
    59a0:	4925      	ldr	r1, [pc, #148]	; (5a38 <d_expr_primary+0x11c>)
    59a2:	6818      	ldr	r0, [r3, #0]
    59a4:	f007 fce8 	bl	d378 <strcmp>
    59a8:	2800      	cmp	r0, #0
    59aa:	d1df      	bne.n	596c <d_expr_primary+0x50>
    59ac:	68e2      	ldr	r2, [r4, #12]
    59ae:	7815      	ldrb	r5, [r2, #0]
    59b0:	2d45      	cmp	r5, #69	; 0x45
    59b2:	d03e      	beq.n	5a32 <d_expr_primary+0x116>
    59b4:	2d6e      	cmp	r5, #110	; 0x6e
    59b6:	d001      	beq.n	59bc <d_expr_primary+0xa0>
    59b8:	213d      	movs	r1, #61	; 0x3d
    59ba:	e7de      	b.n	597a <d_expr_primary+0x5e>
    59bc:	1c53      	adds	r3, r2, #1
    59be:	60e3      	str	r3, [r4, #12]
    59c0:	7855      	ldrb	r5, [r2, #1]
    59c2:	213e      	movs	r1, #62	; 0x3e
    59c4:	461a      	mov	r2, r3
    59c6:	e7d6      	b.n	5976 <d_expr_primary+0x5a>
    59c8:	4620      	mov	r0, r4
    59ca:	f7ff fd27 	bl	541c <d_special_name>
    59ce:	68e3      	ldr	r3, [r4, #12]
    59d0:	4606      	mov	r6, r0
    59d2:	781a      	ldrb	r2, [r3, #0]
    59d4:	e7bd      	b.n	5952 <d_expr_primary+0x36>
    59d6:	1c93      	adds	r3, r2, #2
    59d8:	60c3      	str	r3, [r0, #12]
    59da:	7892      	ldrb	r2, [r2, #2]
    59dc:	2a5a      	cmp	r2, #90	; 0x5a
    59de:	bf18      	it	ne
    59e0:	2600      	movne	r6, #0
    59e2:	d1b6      	bne.n	5952 <d_expr_primary+0x36>
    59e4:	e7a7      	b.n	5936 <d_expr_primary+0x1a>
    59e6:	1a9d      	subs	r5, r3, r2
    59e8:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
    59ec:	4298      	cmp	r0, r3
    59ee:	da1c      	bge.n	5a2a <d_expr_primary+0x10e>
    59f0:	2700      	movs	r7, #0
    59f2:	f8d4 e010 	ldr.w	lr, [r4, #16]
    59f6:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
    59fa:	eb0e 038c 	add.w	r3, lr, ip, lsl #2
    59fe:	3001      	adds	r0, #1
    5a00:	42bd      	cmp	r5, r7
    5a02:	e9c3 7701 	strd	r7, r7, [r3, #4]
    5a06:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
    5a0a:	6160      	str	r0, [r4, #20]
    5a0c:	dd0d      	ble.n	5a2a <d_expr_primary+0x10e>
    5a0e:	e9c3 7701 	strd	r7, r7, [r3, #4]
    5a12:	f80e 700c 	strb.w	r7, [lr, ip]
    5a16:	e9c3 2503 	strd	r2, r5, [r3, #12]
    5a1a:	4632      	mov	r2, r6
    5a1c:	4620      	mov	r0, r4
    5a1e:	f7fd ff1d 	bl	385c <d_make_comp>
    5a22:	68e3      	ldr	r3, [r4, #12]
    5a24:	4606      	mov	r6, r0
    5a26:	781a      	ldrb	r2, [r3, #0]
    5a28:	e793      	b.n	5952 <d_expr_primary+0x36>
    5a2a:	2300      	movs	r3, #0
    5a2c:	e7f5      	b.n	5a1a <d_expr_primary+0xfe>
    5a2e:	2500      	movs	r5, #0
    5a30:	e7da      	b.n	59e8 <d_expr_primary+0xcc>
    5a32:	3201      	adds	r2, #1
    5a34:	60e2      	str	r2, [r4, #12]
    5a36:	e7aa      	b.n	598e <d_expr_primary+0x72>
    5a38:	00018f60 	.word	0x00018f60

00005a3c <d_expression_1>:
    5a3c:	68c2      	ldr	r2, [r0, #12]
    5a3e:	7813      	ldrb	r3, [r2, #0]
    5a40:	2b4c      	cmp	r3, #76	; 0x4c
    5a42:	f000 80a4 	beq.w	5b8e <d_expression_1+0x152>
    5a46:	2b54      	cmp	r3, #84	; 0x54
    5a48:	f000 80a2 	beq.w	5b90 <d_expression_1+0x154>
    5a4c:	2b73      	cmp	r3, #115	; 0x73
    5a4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    5a52:	4604      	mov	r4, r0
    5a54:	d065      	beq.n	5b22 <d_expression_1+0xe6>
    5a56:	2b66      	cmp	r3, #102	; 0x66
    5a58:	d033      	beq.n	5ac2 <d_expression_1+0x86>
    5a5a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    5a5e:	2909      	cmp	r1, #9
    5a60:	d80e      	bhi.n	5a80 <d_expression_1+0x44>
    5a62:	4620      	mov	r0, r4
    5a64:	f7ff f8d4 	bl	4c10 <d_unqualified_name>
    5a68:	4605      	mov	r5, r0
    5a6a:	2800      	cmp	r0, #0
    5a6c:	f000 808b 	beq.w	5b86 <d_expression_1+0x14a>
    5a70:	68e3      	ldr	r3, [r4, #12]
    5a72:	781a      	ldrb	r2, [r3, #0]
    5a74:	2a49      	cmp	r2, #73	; 0x49
    5a76:	f000 808d 	beq.w	5b94 <d_expression_1+0x158>
    5a7a:	4628      	mov	r0, r5
    5a7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5a80:	2b6f      	cmp	r3, #111	; 0x6f
    5a82:	d05f      	beq.n	5b44 <d_expression_1+0x108>
    5a84:	2b69      	cmp	r3, #105	; 0x69
    5a86:	f040 8092 	bne.w	5bae <d_expression_1+0x172>
    5a8a:	7853      	ldrb	r3, [r2, #1]
    5a8c:	2b6c      	cmp	r3, #108	; 0x6c
    5a8e:	f000 80b1 	beq.w	5bf4 <d_expression_1+0x1b8>
    5a92:	4620      	mov	r0, r4
    5a94:	f7fe ffa0 	bl	49d8 <d_operator_name>
    5a98:	4605      	mov	r5, r0
    5a9a:	2800      	cmp	r0, #0
    5a9c:	d073      	beq.n	5b86 <d_expression_1+0x14a>
    5a9e:	7803      	ldrb	r3, [r0, #0]
    5aa0:	2b32      	cmp	r3, #50	; 0x32
    5aa2:	d055      	beq.n	5b50 <d_expression_1+0x114>
    5aa4:	2b34      	cmp	r3, #52	; 0x34
    5aa6:	f000 81a9 	beq.w	5dfc <d_expression_1+0x3c0>
    5aaa:	d86c      	bhi.n	5b86 <d_expression_1+0x14a>
    5aac:	2b33      	cmp	r3, #51	; 0x33
    5aae:	d16a      	bne.n	5b86 <d_expression_1+0x14a>
    5ab0:	68c3      	ldr	r3, [r0, #12]
    5ab2:	2b03      	cmp	r3, #3
    5ab4:	d867      	bhi.n	5b86 <d_expression_1+0x14a>
    5ab6:	e8df f013 	tbh	[pc, r3, lsl #1]
    5aba:	00e6      	.short	0x00e6
    5abc:	006600ee 	.word	0x006600ee
    5ac0:	0066      	.short	0x0066
    5ac2:	7853      	ldrb	r3, [r2, #1]
    5ac4:	2b70      	cmp	r3, #112	; 0x70
    5ac6:	d1e4      	bne.n	5a92 <d_expression_1+0x56>
    5ac8:	1c93      	adds	r3, r2, #2
    5aca:	60c3      	str	r3, [r0, #12]
    5acc:	7893      	ldrb	r3, [r2, #2]
    5ace:	2b54      	cmp	r3, #84	; 0x54
    5ad0:	f000 813a 	beq.w	5d48 <d_expression_1+0x30c>
    5ad4:	2b5f      	cmp	r3, #95	; 0x5f
    5ad6:	f000 80b6 	beq.w	5c46 <d_expression_1+0x20a>
    5ada:	2b6e      	cmp	r3, #110	; 0x6e
    5adc:	d053      	beq.n	5b86 <d_expression_1+0x14a>
    5ade:	f7fd ff07 	bl	38f0 <d_number>
    5ae2:	1c41      	adds	r1, r0, #1
    5ae4:	d44f      	bmi.n	5b86 <d_expression_1+0x14a>
    5ae6:	68e3      	ldr	r3, [r4, #12]
    5ae8:	781a      	ldrb	r2, [r3, #0]
    5aea:	2a5f      	cmp	r2, #95	; 0x5f
    5aec:	d14b      	bne.n	5b86 <d_expression_1+0x14a>
    5aee:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
    5af2:	3301      	adds	r3, #1
    5af4:	4291      	cmp	r1, r2
    5af6:	60e3      	str	r3, [r4, #12]
    5af8:	d045      	beq.n	5b86 <d_expression_1+0x14a>
    5afa:	3002      	adds	r0, #2
    5afc:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    5b00:	4293      	cmp	r3, r2
    5b02:	da40      	bge.n	5b86 <d_expression_1+0x14a>
    5b04:	2600      	movs	r6, #0
    5b06:	2706      	movs	r7, #6
    5b08:	6922      	ldr	r2, [r4, #16]
    5b0a:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    5b0e:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    5b12:	3301      	adds	r3, #1
    5b14:	e9c5 6601 	strd	r6, r6, [r5, #4]
    5b18:	6163      	str	r3, [r4, #20]
    5b1a:	f802 7021 	strb.w	r7, [r2, r1, lsl #2]
    5b1e:	60e8      	str	r0, [r5, #12]
    5b20:	e7ab      	b.n	5a7a <d_expression_1+0x3e>
    5b22:	7853      	ldrb	r3, [r2, #1]
    5b24:	2b72      	cmp	r3, #114	; 0x72
    5b26:	d050      	beq.n	5bca <d_expression_1+0x18e>
    5b28:	2b70      	cmp	r3, #112	; 0x70
    5b2a:	d1b2      	bne.n	5a92 <d_expression_1+0x56>
    5b2c:	3202      	adds	r2, #2
    5b2e:	60c2      	str	r2, [r0, #12]
    5b30:	f7ff ff84 	bl	5a3c <d_expression_1>
    5b34:	2300      	movs	r3, #0
    5b36:	4602      	mov	r2, r0
    5b38:	214b      	movs	r1, #75	; 0x4b
    5b3a:	4620      	mov	r0, r4
    5b3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5b40:	f7fd be8c 	b.w	385c <d_make_comp>
    5b44:	7853      	ldrb	r3, [r2, #1]
    5b46:	2b6e      	cmp	r3, #110	; 0x6e
    5b48:	d1a3      	bne.n	5a92 <d_expression_1+0x56>
    5b4a:	3202      	adds	r2, #2
    5b4c:	60c2      	str	r2, [r0, #12]
    5b4e:	e788      	b.n	5a62 <d_expression_1+0x26>
    5b50:	68c1      	ldr	r1, [r0, #12]
    5b52:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5b54:	688a      	ldr	r2, [r1, #8]
    5b56:	680e      	ldr	r6, [r1, #0]
    5b58:	3a02      	subs	r2, #2
    5b5a:	4413      	add	r3, r2
    5b5c:	62e3      	str	r3, [r4, #44]	; 0x2c
    5b5e:	7833      	ldrb	r3, [r6, #0]
    5b60:	2b73      	cmp	r3, #115	; 0x73
    5b62:	d15c      	bne.n	5c1e <d_expression_1+0x1e2>
    5b64:	7872      	ldrb	r2, [r6, #1]
    5b66:	2a74      	cmp	r2, #116	; 0x74
    5b68:	d159      	bne.n	5c1e <d_expression_1+0x1e2>
    5b6a:	78b2      	ldrb	r2, [r6, #2]
    5b6c:	2a00      	cmp	r2, #0
    5b6e:	d156      	bne.n	5c1e <d_expression_1+0x1e2>
    5b70:	4620      	mov	r0, r4
    5b72:	f7fe fb07 	bl	4184 <d_type>
    5b76:	4603      	mov	r3, r0
    5b78:	462a      	mov	r2, r5
    5b7a:	4620      	mov	r0, r4
    5b7c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5b80:	2137      	movs	r1, #55	; 0x37
    5b82:	f7fd be6b 	b.w	385c <d_make_comp>
    5b86:	2500      	movs	r5, #0
    5b88:	4628      	mov	r0, r5
    5b8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5b8e:	e6c5      	b.n	591c <d_expr_primary>
    5b90:	f7fe b8da 	b.w	3d48 <d_template_param>
    5b94:	3301      	adds	r3, #1
    5b96:	60e3      	str	r3, [r4, #12]
    5b98:	4620      	mov	r0, r4
    5b9a:	f000 fa81 	bl	60a0 <d_template_args_1>
    5b9e:	462a      	mov	r2, r5
    5ba0:	4603      	mov	r3, r0
    5ba2:	2104      	movs	r1, #4
    5ba4:	4620      	mov	r0, r4
    5ba6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5baa:	f7fd be57 	b.w	385c <d_make_comp>
    5bae:	2b74      	cmp	r3, #116	; 0x74
    5bb0:	f47f af6f 	bne.w	5a92 <d_expression_1+0x56>
    5bb4:	7853      	ldrb	r3, [r2, #1]
    5bb6:	2b6c      	cmp	r3, #108	; 0x6c
    5bb8:	f47f af6b 	bne.w	5a92 <d_expression_1+0x56>
    5bbc:	3202      	adds	r2, #2
    5bbe:	60e2      	str	r2, [r4, #12]
    5bc0:	f7fe fae0 	bl	4184 <d_type>
    5bc4:	68e2      	ldr	r2, [r4, #12]
    5bc6:	4605      	mov	r5, r0
    5bc8:	e017      	b.n	5bfa <d_expression_1+0x1be>
    5bca:	3202      	adds	r2, #2
    5bcc:	60c2      	str	r2, [r0, #12]
    5bce:	f7fe fad9 	bl	4184 <d_type>
    5bd2:	4605      	mov	r5, r0
    5bd4:	4620      	mov	r0, r4
    5bd6:	f7ff f81b 	bl	4c10 <d_unqualified_name>
    5bda:	68e3      	ldr	r3, [r4, #12]
    5bdc:	4606      	mov	r6, r0
    5bde:	781a      	ldrb	r2, [r3, #0]
    5be0:	2a49      	cmp	r2, #73	; 0x49
    5be2:	d023      	beq.n	5c2c <d_expression_1+0x1f0>
    5be4:	4603      	mov	r3, r0
    5be6:	462a      	mov	r2, r5
    5be8:	4620      	mov	r0, r4
    5bea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5bee:	2101      	movs	r1, #1
    5bf0:	f7fd be34 	b.w	385c <d_make_comp>
    5bf4:	2500      	movs	r5, #0
    5bf6:	3202      	adds	r2, #2
    5bf8:	60e2      	str	r2, [r4, #12]
    5bfa:	7811      	ldrb	r1, [r2, #0]
    5bfc:	2900      	cmp	r1, #0
    5bfe:	d0c2      	beq.n	5b86 <d_expression_1+0x14a>
    5c00:	7853      	ldrb	r3, [r2, #1]
    5c02:	2b00      	cmp	r3, #0
    5c04:	d0bf      	beq.n	5b86 <d_expression_1+0x14a>
    5c06:	2145      	movs	r1, #69	; 0x45
    5c08:	4620      	mov	r0, r4
    5c0a:	f000 f939 	bl	5e80 <d_exprlist>
    5c0e:	462a      	mov	r2, r5
    5c10:	4603      	mov	r3, r0
    5c12:	2131      	movs	r1, #49	; 0x31
    5c14:	4620      	mov	r0, r4
    5c16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5c1a:	f7fd be1f 	b.w	385c <d_make_comp>
    5c1e:	68cf      	ldr	r7, [r1, #12]
    5c20:	2f03      	cmp	r7, #3
    5c22:	d8b0      	bhi.n	5b86 <d_expression_1+0x14a>
    5c24:	e8df f007 	tbb	[pc, r7]
    5c28:	3c66132f 	.word	0x3c66132f
    5c2c:	3301      	adds	r3, #1
    5c2e:	60e3      	str	r3, [r4, #12]
    5c30:	4620      	mov	r0, r4
    5c32:	f000 fa35 	bl	60a0 <d_template_args_1>
    5c36:	4632      	mov	r2, r6
    5c38:	4603      	mov	r3, r0
    5c3a:	2104      	movs	r1, #4
    5c3c:	4620      	mov	r0, r4
    5c3e:	f7fd fe0d 	bl	385c <d_make_comp>
    5c42:	4603      	mov	r3, r0
    5c44:	e7cf      	b.n	5be6 <d_expression_1+0x1aa>
    5c46:	3203      	adds	r2, #3
    5c48:	2001      	movs	r0, #1
    5c4a:	60e2      	str	r2, [r4, #12]
    5c4c:	e756      	b.n	5afc <d_expression_1+0xc0>
    5c4e:	7832      	ldrb	r2, [r6, #0]
    5c50:	2a70      	cmp	r2, #112	; 0x70
    5c52:	f000 8082 	beq.w	5d5a <d_expression_1+0x31e>
    5c56:	2a6d      	cmp	r2, #109	; 0x6d
    5c58:	d07f      	beq.n	5d5a <d_expression_1+0x31e>
    5c5a:	2700      	movs	r7, #0
    5c5c:	2b73      	cmp	r3, #115	; 0x73
    5c5e:	d177      	bne.n	5d50 <d_expression_1+0x314>
    5c60:	7873      	ldrb	r3, [r6, #1]
    5c62:	2b50      	cmp	r3, #80	; 0x50
    5c64:	d174      	bne.n	5d50 <d_expression_1+0x314>
    5c66:	78b3      	ldrb	r3, [r6, #2]
    5c68:	2b00      	cmp	r3, #0
    5c6a:	d171      	bne.n	5d50 <d_expression_1+0x314>
    5c6c:	4620      	mov	r0, r4
    5c6e:	f000 fa17 	bl	60a0 <d_template_args_1>
    5c72:	4603      	mov	r3, r0
    5c74:	2f00      	cmp	r7, #0
    5c76:	f43f af7f 	beq.w	5b78 <d_expression_1+0x13c>
    5c7a:	461a      	mov	r2, r3
    5c7c:	2139      	movs	r1, #57	; 0x39
    5c7e:	4620      	mov	r0, r4
    5c80:	f7fd fdec 	bl	385c <d_make_comp>
    5c84:	e777      	b.n	5b76 <d_expression_1+0x13a>
    5c86:	462a      	mov	r2, r5
    5c88:	4620      	mov	r0, r4
    5c8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5c8e:	2300      	movs	r3, #0
    5c90:	2136      	movs	r1, #54	; 0x36
    5c92:	f7fd bde3 	b.w	385c <d_make_comp>
    5c96:	4620      	mov	r0, r4
    5c98:	f7ff fed0 	bl	5a3c <d_expression_1>
    5c9c:	4603      	mov	r3, r0
    5c9e:	e76b      	b.n	5b78 <d_expression_1+0x13c>
    5ca0:	2b71      	cmp	r3, #113	; 0x71
    5ca2:	d168      	bne.n	5d76 <d_expression_1+0x33a>
    5ca4:	7873      	ldrb	r3, [r6, #1]
    5ca6:	2b75      	cmp	r3, #117	; 0x75
    5ca8:	d165      	bne.n	5d76 <d_expression_1+0x33a>
    5caa:	78b3      	ldrb	r3, [r6, #2]
    5cac:	2b00      	cmp	r3, #0
    5cae:	d162      	bne.n	5d76 <d_expression_1+0x33a>
    5cb0:	4620      	mov	r0, r4
    5cb2:	f7ff fec3 	bl	5a3c <d_expression_1>
    5cb6:	4606      	mov	r6, r0
    5cb8:	4620      	mov	r0, r4
    5cba:	f7ff febf 	bl	5a3c <d_expression_1>
    5cbe:	4607      	mov	r7, r0
    5cc0:	4620      	mov	r0, r4
    5cc2:	f7ff febb 	bl	5a3c <d_expression_1>
    5cc6:	4603      	mov	r3, r0
    5cc8:	2800      	cmp	r0, #0
    5cca:	f43f af5c 	beq.w	5b86 <d_expression_1+0x14a>
    5cce:	463a      	mov	r2, r7
    5cd0:	213c      	movs	r1, #60	; 0x3c
    5cd2:	4620      	mov	r0, r4
    5cd4:	f7fd fdc2 	bl	385c <d_make_comp>
    5cd8:	4632      	mov	r2, r6
    5cda:	4603      	mov	r3, r0
    5cdc:	213b      	movs	r1, #59	; 0x3b
    5cde:	4620      	mov	r0, r4
    5ce0:	f7fd fdbc 	bl	385c <d_make_comp>
    5ce4:	462a      	mov	r2, r5
    5ce6:	4603      	mov	r3, r0
    5ce8:	213a      	movs	r1, #58	; 0x3a
    5cea:	4620      	mov	r0, r4
    5cec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5cf0:	f7fd bdb4 	b.w	385c <d_make_comp>
    5cf4:	68eb      	ldr	r3, [r5, #12]
    5cf6:	681b      	ldr	r3, [r3, #0]
    5cf8:	785a      	ldrb	r2, [r3, #1]
    5cfa:	2a63      	cmp	r2, #99	; 0x63
    5cfc:	f000 8092 	beq.w	5e24 <d_expression_1+0x3e8>
    5d00:	7833      	ldrb	r3, [r6, #0]
    5d02:	2b66      	cmp	r3, #102	; 0x66
    5d04:	f000 809c 	beq.w	5e40 <d_expression_1+0x404>
    5d08:	4620      	mov	r0, r4
    5d0a:	f7ff fe97 	bl	5a3c <d_expression_1>
    5d0e:	4607      	mov	r7, r0
    5d10:	7833      	ldrb	r3, [r6, #0]
    5d12:	2b63      	cmp	r3, #99	; 0x63
    5d14:	d156      	bne.n	5dc4 <d_expression_1+0x388>
    5d16:	7872      	ldrb	r2, [r6, #1]
    5d18:	2a6c      	cmp	r2, #108	; 0x6c
    5d1a:	d153      	bne.n	5dc4 <d_expression_1+0x388>
    5d1c:	78b2      	ldrb	r2, [r6, #2]
    5d1e:	2a00      	cmp	r2, #0
    5d20:	d150      	bne.n	5dc4 <d_expression_1+0x388>
    5d22:	2145      	movs	r1, #69	; 0x45
    5d24:	4620      	mov	r0, r4
    5d26:	f000 f8ab 	bl	5e80 <d_exprlist>
    5d2a:	4606      	mov	r6, r0
    5d2c:	4633      	mov	r3, r6
    5d2e:	463a      	mov	r2, r7
    5d30:	2139      	movs	r1, #57	; 0x39
    5d32:	4620      	mov	r0, r4
    5d34:	f7fd fd92 	bl	385c <d_make_comp>
    5d38:	462a      	mov	r2, r5
    5d3a:	4603      	mov	r3, r0
    5d3c:	2138      	movs	r1, #56	; 0x38
    5d3e:	4620      	mov	r0, r4
    5d40:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5d44:	f7fd bd8a 	b.w	385c <d_make_comp>
    5d48:	3203      	adds	r2, #3
    5d4a:	2000      	movs	r0, #0
    5d4c:	60e2      	str	r2, [r4, #12]
    5d4e:	e6d5      	b.n	5afc <d_expression_1+0xc0>
    5d50:	4620      	mov	r0, r4
    5d52:	f7ff fe73 	bl	5a3c <d_expression_1>
    5d56:	4603      	mov	r3, r0
    5d58:	e78c      	b.n	5c74 <d_expression_1+0x238>
    5d5a:	7871      	ldrb	r1, [r6, #1]
    5d5c:	4291      	cmp	r1, r2
    5d5e:	f47f af7c 	bne.w	5c5a <d_expression_1+0x21e>
    5d62:	68e2      	ldr	r2, [r4, #12]
    5d64:	7811      	ldrb	r1, [r2, #0]
    5d66:	295f      	cmp	r1, #95	; 0x5f
    5d68:	f47f af78 	bne.w	5c5c <d_expression_1+0x220>
    5d6c:	3201      	adds	r2, #1
    5d6e:	60e2      	str	r2, [r4, #12]
    5d70:	2700      	movs	r7, #0
    5d72:	7833      	ldrb	r3, [r6, #0]
    5d74:	e772      	b.n	5c5c <d_expression_1+0x220>
    5d76:	7833      	ldrb	r3, [r6, #0]
    5d78:	2b66      	cmp	r3, #102	; 0x66
    5d7a:	d06d      	beq.n	5e58 <d_expression_1+0x41c>
    5d7c:	2b6e      	cmp	r3, #110	; 0x6e
    5d7e:	f47f af02 	bne.w	5b86 <d_expression_1+0x14a>
    5d82:	7873      	ldrb	r3, [r6, #1]
    5d84:	2b77      	cmp	r3, #119	; 0x77
    5d86:	d002      	beq.n	5d8e <d_expression_1+0x352>
    5d88:	2b61      	cmp	r3, #97	; 0x61
    5d8a:	f47f aefc 	bne.w	5b86 <d_expression_1+0x14a>
    5d8e:	215f      	movs	r1, #95	; 0x5f
    5d90:	4620      	mov	r0, r4
    5d92:	f000 f875 	bl	5e80 <d_exprlist>
    5d96:	4606      	mov	r6, r0
    5d98:	4620      	mov	r0, r4
    5d9a:	f7fe f9f3 	bl	4184 <d_type>
    5d9e:	68e3      	ldr	r3, [r4, #12]
    5da0:	4607      	mov	r7, r0
    5da2:	781a      	ldrb	r2, [r3, #0]
    5da4:	2a45      	cmp	r2, #69	; 0x45
    5da6:	d067      	beq.n	5e78 <d_expression_1+0x43c>
    5da8:	2a70      	cmp	r2, #112	; 0x70
    5daa:	d059      	beq.n	5e60 <d_expression_1+0x424>
    5dac:	2a69      	cmp	r2, #105	; 0x69
    5dae:	f47f aeea 	bne.w	5b86 <d_expression_1+0x14a>
    5db2:	785b      	ldrb	r3, [r3, #1]
    5db4:	2b6c      	cmp	r3, #108	; 0x6c
    5db6:	f47f aee6 	bne.w	5b86 <d_expression_1+0x14a>
    5dba:	4620      	mov	r0, r4
    5dbc:	f7ff fe3e 	bl	5a3c <d_expression_1>
    5dc0:	4603      	mov	r3, r0
    5dc2:	e784      	b.n	5cce <d_expression_1+0x292>
    5dc4:	2b64      	cmp	r3, #100	; 0x64
    5dc6:	d126      	bne.n	5e16 <d_expression_1+0x3da>
    5dc8:	7872      	ldrb	r2, [r6, #1]
    5dca:	2a74      	cmp	r2, #116	; 0x74
    5dcc:	d123      	bne.n	5e16 <d_expression_1+0x3da>
    5dce:	78b2      	ldrb	r2, [r6, #2]
    5dd0:	bb0a      	cbnz	r2, 5e16 <d_expression_1+0x3da>
    5dd2:	4620      	mov	r0, r4
    5dd4:	f7fe ff1c 	bl	4c10 <d_unqualified_name>
    5dd8:	68e3      	ldr	r3, [r4, #12]
    5dda:	4606      	mov	r6, r0
    5ddc:	781a      	ldrb	r2, [r3, #0]
    5dde:	2a49      	cmp	r2, #73	; 0x49
    5de0:	d1a4      	bne.n	5d2c <d_expression_1+0x2f0>
    5de2:	3301      	adds	r3, #1
    5de4:	60e3      	str	r3, [r4, #12]
    5de6:	4620      	mov	r0, r4
    5de8:	f000 f95a 	bl	60a0 <d_template_args_1>
    5dec:	4632      	mov	r2, r6
    5dee:	4603      	mov	r3, r0
    5df0:	2104      	movs	r1, #4
    5df2:	4620      	mov	r0, r4
    5df4:	f7fd fd32 	bl	385c <d_make_comp>
    5df8:	4606      	mov	r6, r0
    5dfa:	e797      	b.n	5d2c <d_expression_1+0x2f0>
    5dfc:	68e3      	ldr	r3, [r4, #12]
    5dfe:	781a      	ldrb	r2, [r3, #0]
    5e00:	2a5f      	cmp	r2, #95	; 0x5f
    5e02:	f47f af48 	bne.w	5c96 <d_expression_1+0x25a>
    5e06:	3301      	adds	r3, #1
    5e08:	60e3      	str	r3, [r4, #12]
    5e0a:	2145      	movs	r1, #69	; 0x45
    5e0c:	4620      	mov	r0, r4
    5e0e:	f000 f837 	bl	5e80 <d_exprlist>
    5e12:	4603      	mov	r3, r0
    5e14:	e6b0      	b.n	5b78 <d_expression_1+0x13c>
    5e16:	2b70      	cmp	r3, #112	; 0x70
    5e18:	d017      	beq.n	5e4a <d_expression_1+0x40e>
    5e1a:	4620      	mov	r0, r4
    5e1c:	f7ff fe0e 	bl	5a3c <d_expression_1>
    5e20:	4606      	mov	r6, r0
    5e22:	e783      	b.n	5d2c <d_expression_1+0x2f0>
    5e24:	781b      	ldrb	r3, [r3, #0]
    5e26:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
    5e2a:	2a01      	cmp	r2, #1
    5e2c:	d903      	bls.n	5e36 <d_expression_1+0x3fa>
    5e2e:	3b72      	subs	r3, #114	; 0x72
    5e30:	2b01      	cmp	r3, #1
    5e32:	f63f af65 	bhi.w	5d00 <d_expression_1+0x2c4>
    5e36:	4620      	mov	r0, r4
    5e38:	f7fe f9a4 	bl	4184 <d_type>
    5e3c:	4607      	mov	r7, r0
    5e3e:	e767      	b.n	5d10 <d_expression_1+0x2d4>
    5e40:	4620      	mov	r0, r4
    5e42:	f7fe fdc9 	bl	49d8 <d_operator_name>
    5e46:	4607      	mov	r7, r0
    5e48:	e762      	b.n	5d10 <d_expression_1+0x2d4>
    5e4a:	7873      	ldrb	r3, [r6, #1]
    5e4c:	2b74      	cmp	r3, #116	; 0x74
    5e4e:	d1e4      	bne.n	5e1a <d_expression_1+0x3de>
    5e50:	78b3      	ldrb	r3, [r6, #2]
    5e52:	2b00      	cmp	r3, #0
    5e54:	d0bd      	beq.n	5dd2 <d_expression_1+0x396>
    5e56:	e7e0      	b.n	5e1a <d_expression_1+0x3de>
    5e58:	4620      	mov	r0, r4
    5e5a:	f7fe fdbd 	bl	49d8 <d_operator_name>
    5e5e:	e72a      	b.n	5cb6 <d_expression_1+0x27a>
    5e60:	785a      	ldrb	r2, [r3, #1]
    5e62:	2a69      	cmp	r2, #105	; 0x69
    5e64:	f47f ae8f 	bne.w	5b86 <d_expression_1+0x14a>
    5e68:	3302      	adds	r3, #2
    5e6a:	60e3      	str	r3, [r4, #12]
    5e6c:	2145      	movs	r1, #69	; 0x45
    5e6e:	4620      	mov	r0, r4
    5e70:	f000 f806 	bl	5e80 <d_exprlist>
    5e74:	4603      	mov	r3, r0
    5e76:	e72a      	b.n	5cce <d_expression_1+0x292>
    5e78:	3301      	adds	r3, #1
    5e7a:	60e3      	str	r3, [r4, #12]
    5e7c:	2300      	movs	r3, #0
    5e7e:	e726      	b.n	5cce <d_expression_1+0x292>

00005e80 <d_exprlist>:
    5e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    5e84:	460e      	mov	r6, r1
    5e86:	2300      	movs	r3, #0
    5e88:	68c2      	ldr	r2, [r0, #12]
    5e8a:	b082      	sub	sp, #8
    5e8c:	7811      	ldrb	r1, [r2, #0]
    5e8e:	4604      	mov	r4, r0
    5e90:	42b1      	cmp	r1, r6
    5e92:	9301      	str	r3, [sp, #4]
    5e94:	d024      	beq.n	5ee0 <d_exprlist+0x60>
    5e96:	2701      	movs	r7, #1
    5e98:	ad01      	add	r5, sp, #4
    5e9a:	e00c      	b.n	5eb6 <d_exprlist+0x36>
    5e9c:	2300      	movs	r3, #0
    5e9e:	212e      	movs	r1, #46	; 0x2e
    5ea0:	4620      	mov	r0, r4
    5ea2:	f7fd fcdb 	bl	385c <d_make_comp>
    5ea6:	6028      	str	r0, [r5, #0]
    5ea8:	f100 0510 	add.w	r5, r0, #16
    5eac:	b170      	cbz	r0, 5ecc <d_exprlist+0x4c>
    5eae:	68e3      	ldr	r3, [r4, #12]
    5eb0:	781a      	ldrb	r2, [r3, #0]
    5eb2:	42b2      	cmp	r2, r6
    5eb4:	d00e      	beq.n	5ed4 <d_exprlist+0x54>
    5eb6:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
    5eba:	4620      	mov	r0, r4
    5ebc:	6327      	str	r7, [r4, #48]	; 0x30
    5ebe:	f7ff fdbd 	bl	5a3c <d_expression_1>
    5ec2:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
    5ec6:	4602      	mov	r2, r0
    5ec8:	2800      	cmp	r0, #0
    5eca:	d1e7      	bne.n	5e9c <d_exprlist+0x1c>
    5ecc:	2000      	movs	r0, #0
    5ece:	b002      	add	sp, #8
    5ed0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5ed4:	9801      	ldr	r0, [sp, #4]
    5ed6:	3301      	adds	r3, #1
    5ed8:	60e3      	str	r3, [r4, #12]
    5eda:	b002      	add	sp, #8
    5edc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5ee0:	1c51      	adds	r1, r2, #1
    5ee2:	60c1      	str	r1, [r0, #12]
    5ee4:	461a      	mov	r2, r3
    5ee6:	212e      	movs	r1, #46	; 0x2e
    5ee8:	b002      	add	sp, #8
    5eea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5eee:	f7fd bcb5 	b.w	385c <d_make_comp>
    5ef2:	bf00      	nop

00005ef4 <d_cv_qualifiers>:
    5ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5ef8:	f1b2 0900 	subs.w	r9, r2, #0
    5efc:	68c2      	ldr	r2, [r0, #12]
    5efe:	460f      	mov	r7, r1
    5f00:	460d      	mov	r5, r1
    5f02:	f04f 0b01 	mov.w	fp, #1
    5f06:	4604      	mov	r4, r0
    5f08:	bf15      	itete	ne
    5f0a:	f04f 0a1e 	movne.w	sl, #30
    5f0e:	f04f 0a1b 	moveq.w	sl, #27
    5f12:	f04f 081d 	movne.w	r8, #29
    5f16:	f04f 081a 	moveq.w	r8, #26
    5f1a:	bf14      	ite	ne
    5f1c:	261c      	movne	r6, #28
    5f1e:	2619      	moveq	r6, #25
    5f20:	7811      	ldrb	r1, [r2, #0]
    5f22:	b083      	sub	sp, #12
    5f24:	e01b      	b.n	5f5e <d_cv_qualifiers+0x6a>
    5f26:	2956      	cmp	r1, #86	; 0x56
    5f28:	d034      	beq.n	5f94 <d_cv_qualifiers+0xa0>
    5f2a:	294b      	cmp	r1, #75	; 0x4b
    5f2c:	d039      	beq.n	5fa2 <d_cv_qualifiers+0xae>
    5f2e:	7853      	ldrb	r3, [r2, #1]
    5f30:	b35b      	cbz	r3, 5f8a <d_cv_qualifiers+0x96>
    5f32:	1c93      	adds	r3, r2, #2
    5f34:	60e3      	str	r3, [r4, #12]
    5f36:	7851      	ldrb	r1, [r2, #1]
    5f38:	2978      	cmp	r1, #120	; 0x78
    5f3a:	d052      	beq.n	5fe2 <d_cv_qualifiers+0xee>
    5f3c:	296f      	cmp	r1, #111	; 0x6f
    5f3e:	d136      	bne.n	5fae <d_cv_qualifiers+0xba>
    5f40:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5f42:	214f      	movs	r1, #79	; 0x4f
    5f44:	3309      	adds	r3, #9
    5f46:	62e3      	str	r3, [r4, #44]	; 0x2c
    5f48:	2300      	movs	r3, #0
    5f4a:	2200      	movs	r2, #0
    5f4c:	4620      	mov	r0, r4
    5f4e:	f7fd fc85 	bl	385c <d_make_comp>
    5f52:	6028      	str	r0, [r5, #0]
    5f54:	b1c8      	cbz	r0, 5f8a <d_cv_qualifiers+0x96>
    5f56:	68e2      	ldr	r2, [r4, #12]
    5f58:	f100 050c 	add.w	r5, r0, #12
    5f5c:	7811      	ldrb	r1, [r2, #0]
    5f5e:	4610      	mov	r0, r2
    5f60:	f7fd fe20 	bl	3ba4 <next_is_type_qual.isra.0>
    5f64:	2800      	cmp	r0, #0
    5f66:	d042      	beq.n	5fee <d_cv_qualifiers+0xfa>
    5f68:	1c53      	adds	r3, r2, #1
    5f6a:	2972      	cmp	r1, #114	; 0x72
    5f6c:	60e3      	str	r3, [r4, #12]
    5f6e:	d1da      	bne.n	5f26 <d_cv_qualifiers+0x32>
    5f70:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5f72:	4631      	mov	r1, r6
    5f74:	f103 0209 	add.w	r2, r3, #9
    5f78:	62e2      	str	r2, [r4, #44]	; 0x2c
    5f7a:	2300      	movs	r3, #0
    5f7c:	2200      	movs	r2, #0
    5f7e:	4620      	mov	r0, r4
    5f80:	f7fd fc6c 	bl	385c <d_make_comp>
    5f84:	6028      	str	r0, [r5, #0]
    5f86:	2800      	cmp	r0, #0
    5f88:	d1e5      	bne.n	5f56 <d_cv_qualifiers+0x62>
    5f8a:	2500      	movs	r5, #0
    5f8c:	4628      	mov	r0, r5
    5f8e:	b003      	add	sp, #12
    5f90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5f94:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5f96:	4641      	mov	r1, r8
    5f98:	f103 0209 	add.w	r2, r3, #9
    5f9c:	62e2      	str	r2, [r4, #44]	; 0x2c
    5f9e:	2300      	movs	r3, #0
    5fa0:	e7d3      	b.n	5f4a <d_cv_qualifiers+0x56>
    5fa2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5fa4:	4651      	mov	r1, sl
    5fa6:	1d9a      	adds	r2, r3, #6
    5fa8:	62e2      	str	r2, [r4, #44]	; 0x2c
    5faa:	2300      	movs	r3, #0
    5fac:	e7cd      	b.n	5f4a <d_cv_qualifiers+0x56>
    5fae:	294f      	cmp	r1, #79	; 0x4f
    5fb0:	d139      	bne.n	6026 <d_cv_qualifiers+0x132>
    5fb2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5fb4:	4620      	mov	r0, r4
    5fb6:	3309      	adds	r3, #9
    5fb8:	62e3      	str	r3, [r4, #44]	; 0x2c
    5fba:	6b23      	ldr	r3, [r4, #48]	; 0x30
    5fbc:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
    5fc0:	9101      	str	r1, [sp, #4]
    5fc2:	9300      	str	r3, [sp, #0]
    5fc4:	f7ff fd3a 	bl	5a3c <d_expression_1>
    5fc8:	9b00      	ldr	r3, [sp, #0]
    5fca:	9901      	ldr	r1, [sp, #4]
    5fcc:	6323      	str	r3, [r4, #48]	; 0x30
    5fce:	4603      	mov	r3, r0
    5fd0:	2800      	cmp	r0, #0
    5fd2:	d0da      	beq.n	5f8a <d_cv_qualifiers+0x96>
    5fd4:	68e2      	ldr	r2, [r4, #12]
    5fd6:	7810      	ldrb	r0, [r2, #0]
    5fd8:	2845      	cmp	r0, #69	; 0x45
    5fda:	d1d6      	bne.n	5f8a <d_cv_qualifiers+0x96>
    5fdc:	3201      	adds	r2, #1
    5fde:	60e2      	str	r2, [r4, #12]
    5fe0:	e7b3      	b.n	5f4a <d_cv_qualifiers+0x56>
    5fe2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5fe4:	214d      	movs	r1, #77	; 0x4d
    5fe6:	3311      	adds	r3, #17
    5fe8:	62e3      	str	r3, [r4, #44]	; 0x2c
    5fea:	2300      	movs	r3, #0
    5fec:	e7ad      	b.n	5f4a <d_cv_qualifiers+0x56>
    5fee:	f1b9 0f00 	cmp.w	r9, #0
    5ff2:	d1cb      	bne.n	5f8c <d_cv_qualifiers+0x98>
    5ff4:	2946      	cmp	r1, #70	; 0x46
    5ff6:	d1c9      	bne.n	5f8c <d_cv_qualifiers+0x98>
    5ff8:	42bd      	cmp	r5, r7
    5ffa:	d0c7      	beq.n	5f8c <d_cv_qualifiers+0x98>
    5ffc:	201d      	movs	r0, #29
    5ffe:	211e      	movs	r1, #30
    6000:	221c      	movs	r2, #28
    6002:	e004      	b.n	600e <d_cv_qualifiers+0x11a>
    6004:	2b19      	cmp	r3, #25
    6006:	d00c      	beq.n	6022 <d_cv_qualifiers+0x12e>
    6008:	370c      	adds	r7, #12
    600a:	42bd      	cmp	r5, r7
    600c:	d0be      	beq.n	5f8c <d_cv_qualifiers+0x98>
    600e:	683f      	ldr	r7, [r7, #0]
    6010:	783b      	ldrb	r3, [r7, #0]
    6012:	2b1a      	cmp	r3, #26
    6014:	d003      	beq.n	601e <d_cv_qualifiers+0x12a>
    6016:	2b1b      	cmp	r3, #27
    6018:	d1f4      	bne.n	6004 <d_cv_qualifiers+0x110>
    601a:	7039      	strb	r1, [r7, #0]
    601c:	e7f4      	b.n	6008 <d_cv_qualifiers+0x114>
    601e:	7038      	strb	r0, [r7, #0]
    6020:	e7f2      	b.n	6008 <d_cv_qualifiers+0x114>
    6022:	703a      	strb	r2, [r7, #0]
    6024:	e7f0      	b.n	6008 <d_cv_qualifiers+0x114>
    6026:	2977      	cmp	r1, #119	; 0x77
    6028:	d1af      	bne.n	5f8a <d_cv_qualifiers+0x96>
    602a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    602c:	4620      	mov	r0, r4
    602e:	3306      	adds	r3, #6
    6030:	62e3      	str	r3, [r4, #44]	; 0x2c
    6032:	f7fe fd55 	bl	4ae0 <d_parmlist>
    6036:	4603      	mov	r3, r0
    6038:	2800      	cmp	r0, #0
    603a:	d0a6      	beq.n	5f8a <d_cv_qualifiers+0x96>
    603c:	68e2      	ldr	r2, [r4, #12]
    603e:	7811      	ldrb	r1, [r2, #0]
    6040:	2945      	cmp	r1, #69	; 0x45
    6042:	d1a2      	bne.n	5f8a <d_cv_qualifiers+0x96>
    6044:	3201      	adds	r2, #1
    6046:	2150      	movs	r1, #80	; 0x50
    6048:	60e2      	str	r2, [r4, #12]
    604a:	e77e      	b.n	5f4a <d_cv_qualifiers+0x56>

0000604c <d_template_arg>:
    604c:	b538      	push	{r3, r4, r5, lr}
    604e:	68c2      	ldr	r2, [r0, #12]
    6050:	7813      	ldrb	r3, [r2, #0]
    6052:	2b4c      	cmp	r3, #76	; 0x4c
    6054:	d01f      	beq.n	6096 <d_template_arg+0x4a>
    6056:	4604      	mov	r4, r0
    6058:	d807      	bhi.n	606a <d_template_arg+0x1e>
    605a:	3b49      	subs	r3, #73	; 0x49
    605c:	2b01      	cmp	r3, #1
    605e:	d815      	bhi.n	608c <d_template_arg+0x40>
    6060:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    6064:	3201      	adds	r2, #1
    6066:	60c2      	str	r2, [r0, #12]
    6068:	e01a      	b.n	60a0 <d_template_args_1>
    606a:	2b58      	cmp	r3, #88	; 0x58
    606c:	d10e      	bne.n	608c <d_template_arg+0x40>
    606e:	2301      	movs	r3, #1
    6070:	441a      	add	r2, r3
    6072:	6b05      	ldr	r5, [r0, #48]	; 0x30
    6074:	60c2      	str	r2, [r0, #12]
    6076:	6303      	str	r3, [r0, #48]	; 0x30
    6078:	f7ff fce0 	bl	5a3c <d_expression_1>
    607c:	68e3      	ldr	r3, [r4, #12]
    607e:	6325      	str	r5, [r4, #48]	; 0x30
    6080:	781a      	ldrb	r2, [r3, #0]
    6082:	2a45      	cmp	r2, #69	; 0x45
    6084:	d10a      	bne.n	609c <d_template_arg+0x50>
    6086:	3301      	adds	r3, #1
    6088:	60e3      	str	r3, [r4, #12]
    608a:	bd38      	pop	{r3, r4, r5, pc}
    608c:	4620      	mov	r0, r4
    608e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    6092:	f7fe b877 	b.w	4184 <d_type>
    6096:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    609a:	e43f      	b.n	591c <d_expr_primary>
    609c:	2000      	movs	r0, #0
    609e:	bd38      	pop	{r3, r4, r5, pc}

000060a0 <d_template_args_1>:
    60a0:	b570      	push	{r4, r5, r6, lr}
    60a2:	68c2      	ldr	r2, [r0, #12]
    60a4:	4604      	mov	r4, r0
    60a6:	7813      	ldrb	r3, [r2, #0]
    60a8:	6a86      	ldr	r6, [r0, #40]	; 0x28
    60aa:	2b45      	cmp	r3, #69	; 0x45
    60ac:	b082      	sub	sp, #8
    60ae:	f04f 0300 	mov.w	r3, #0
    60b2:	d01e      	beq.n	60f2 <d_template_args_1+0x52>
    60b4:	ad01      	add	r5, sp, #4
    60b6:	9301      	str	r3, [sp, #4]
    60b8:	e00c      	b.n	60d4 <d_template_args_1+0x34>
    60ba:	2300      	movs	r3, #0
    60bc:	212f      	movs	r1, #47	; 0x2f
    60be:	4620      	mov	r0, r4
    60c0:	f7fd fbcc 	bl	385c <d_make_comp>
    60c4:	6028      	str	r0, [r5, #0]
    60c6:	f100 0510 	add.w	r5, r0, #16
    60ca:	b148      	cbz	r0, 60e0 <d_template_args_1+0x40>
    60cc:	68e3      	ldr	r3, [r4, #12]
    60ce:	781a      	ldrb	r2, [r3, #0]
    60d0:	2a45      	cmp	r2, #69	; 0x45
    60d2:	d008      	beq.n	60e6 <d_template_args_1+0x46>
    60d4:	4620      	mov	r0, r4
    60d6:	f7ff ffb9 	bl	604c <d_template_arg>
    60da:	4602      	mov	r2, r0
    60dc:	2800      	cmp	r0, #0
    60de:	d1ec      	bne.n	60ba <d_template_args_1+0x1a>
    60e0:	2000      	movs	r0, #0
    60e2:	b002      	add	sp, #8
    60e4:	bd70      	pop	{r4, r5, r6, pc}
    60e6:	9801      	ldr	r0, [sp, #4]
    60e8:	3301      	adds	r3, #1
    60ea:	60e3      	str	r3, [r4, #12]
    60ec:	62a6      	str	r6, [r4, #40]	; 0x28
    60ee:	b002      	add	sp, #8
    60f0:	bd70      	pop	{r4, r5, r6, pc}
    60f2:	3201      	adds	r2, #1
    60f4:	60c2      	str	r2, [r0, #12]
    60f6:	212f      	movs	r1, #47	; 0x2f
    60f8:	461a      	mov	r2, r3
    60fa:	b002      	add	sp, #8
    60fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    6100:	f7fd bbac 	b.w	385c <d_make_comp>

00006104 <d_print_comp_inner>:
    6104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6108:	4604      	mov	r4, r0
    610a:	b093      	sub	sp, #76	; 0x4c
    610c:	2a00      	cmp	r2, #0
    610e:	d05c      	beq.n	61ca <d_print_comp_inner+0xc6>
    6110:	f8d0 5118 	ldr.w	r5, [r0, #280]	; 0x118
    6114:	2d00      	cmp	r5, #0
    6116:	d15b      	bne.n	61d0 <d_print_comp_inner+0xcc>
    6118:	7813      	ldrb	r3, [r2, #0]
    611a:	4616      	mov	r6, r2
    611c:	2b50      	cmp	r3, #80	; 0x50
    611e:	d854      	bhi.n	61ca <d_print_comp_inner+0xc6>
    6120:	e8df f013 	tbh	[pc, r3, lsl #1]
    6124:	010509bf 	.word	0x010509bf
    6128:	018b0105 	.word	0x018b0105
    612c:	07930716 	.word	0x07930716
    6130:	01600651 	.word	0x01600651
    6134:	027d02b4 	.word	0x027d02b4
    6138:	022f0256 	.word	0x022f0256
    613c:	04d504fc 	.word	0x04d504fc
    6140:	047304ae 	.word	0x047304ae
    6144:	0337044c 	.word	0x0337044c
    6148:	02e90310 	.word	0x02e90310
    614c:	06c806ef 	.word	0x06c806ef
    6150:	067a06a1 	.word	0x067a06a1
    6154:	008005b8 	.word	0x008005b8
    6158:	00800080 	.word	0x00800080
    615c:	00590059 	.word	0x00590059
    6160:	00590059 	.word	0x00590059
    6164:	00590059 	.word	0x00590059
    6168:	00ad0059 	.word	0x00ad0059
    616c:	005900ad 	.word	0x005900ad
    6170:	09930059 	.word	0x09930059
    6174:	02c30078 	.word	0x02c30078
    6178:	0096055c 	.word	0x0096055c
    617c:	00960750 	.word	0x00960750
    6180:	00d000d0 	.word	0x00d000d0
    6184:	09180164 	.word	0x09180164
    6188:	08c708ee 	.word	0x08c708ee
    618c:	08a00053 	.word	0x08a00053
    6190:	093d0965 	.word	0x093d0965
    6194:	005305ec 	.word	0x005305ec
    6198:	005301ef 	.word	0x005301ef
    619c:	01300053 	.word	0x01300053
    61a0:	07bf0130 	.word	0x07bf0130
    61a4:	0523022a 	.word	0x0523022a
    61a8:	08220870 	.word	0x08220870
    61ac:	096c07e6 	.word	0x096c07e6
    61b0:	00530849 	.word	0x00530849
    61b4:	03fe0425 	.word	0x03fe0425
    61b8:	038903d7 	.word	0x038903d7
    61bc:	0059035e 	.word	0x0059035e
    61c0:	00590531 	.word	0x00590531
    61c4:	0059      	.short	0x0059
    61c6:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    61ca:	2301      	movs	r3, #1
    61cc:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    61d0:	b013      	add	sp, #76	; 0x4c
    61d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    61d6:	2200      	movs	r2, #0
    61d8:	2300      	movs	r3, #0
    61da:	9304      	str	r3, [sp, #16]
    61dc:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    61e0:	9603      	str	r6, [sp, #12]
    61e2:	9302      	str	r3, [sp, #8]
    61e4:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
    61e8:	9305      	str	r3, [sp, #20]
    61ea:	ab02      	add	r3, sp, #8
    61ec:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    61f0:	2a00      	cmp	r2, #0
    61f2:	d065      	beq.n	62c0 <d_print_comp_inner+0x1bc>
    61f4:	2111      	movs	r1, #17
    61f6:	4620      	mov	r0, r4
    61f8:	f002 f83c 	bl	8274 <d_print_comp>
    61fc:	9b04      	ldr	r3, [sp, #16]
    61fe:	2b00      	cmp	r3, #0
    6200:	f001 82fa 	beq.w	77f8 <d_print_comp_inner+0x16f4>
    6204:	9b02      	ldr	r3, [sp, #8]
    6206:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    620a:	2d00      	cmp	r5, #0
    620c:	d0e0      	beq.n	61d0 <d_print_comp_inner+0xcc>
    620e:	f8c4 7110 	str.w	r7, [r4, #272]	; 0x110
    6212:	e7dd      	b.n	61d0 <d_print_comp_inner+0xcc>
    6214:	2111      	movs	r1, #17
    6216:	4620      	mov	r0, r4
    6218:	68f2      	ldr	r2, [r6, #12]
    621a:	b013      	add	sp, #76	; 0x4c
    621c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6220:	f002 b828 	b.w	8274 <d_print_comp>
    6224:	f8d0 e114 	ldr.w	lr, [r0, #276]	; 0x114
    6228:	f1be 0f00 	cmp.w	lr, #0
    622c:	d03d      	beq.n	62aa <d_print_comp_inner+0x1a6>
    622e:	4672      	mov	r2, lr
    6230:	6891      	ldr	r1, [r2, #8]
    6232:	b949      	cbnz	r1, 6248 <d_print_comp_inner+0x144>
    6234:	6850      	ldr	r0, [r2, #4]
    6236:	7800      	ldrb	r0, [r0, #0]
    6238:	f1a0 0c19 	sub.w	ip, r0, #25
    623c:	f1bc 0f02 	cmp.w	ip, #2
    6240:	f201 850c 	bhi.w	7c5c <d_print_comp_inner+0x1b58>
    6244:	4283      	cmp	r3, r0
    6246:	d0e5      	beq.n	6214 <d_print_comp_inner+0x110>
    6248:	6812      	ldr	r2, [r2, #0]
    624a:	2a00      	cmp	r2, #0
    624c:	d1f0      	bne.n	6230 <d_print_comp_inner+0x12c>
    624e:	e02c      	b.n	62aa <d_print_comp_inner+0x1a6>
    6250:	2300      	movs	r3, #0
    6252:	e9d0 2144 	ldrd	r2, r1, [r0, #272]	; 0x110
    6256:	a802      	add	r0, sp, #8
    6258:	e9cd 1602 	strd	r1, r6, [sp, #8]
    625c:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
    6260:	9205      	str	r2, [sp, #20]
    6262:	2111      	movs	r1, #17
    6264:	4620      	mov	r0, r4
    6266:	6932      	ldr	r2, [r6, #16]
    6268:	9304      	str	r3, [sp, #16]
    626a:	f002 f803 	bl	8274 <d_print_comp>
    626e:	9b04      	ldr	r3, [sp, #16]
    6270:	2b00      	cmp	r3, #0
    6272:	f001 84da 	beq.w	7c2a <d_print_comp_inner+0x1b26>
    6276:	9b02      	ldr	r3, [sp, #8]
    6278:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    627c:	e7a8      	b.n	61d0 <d_print_comp_inner+0xcc>
    627e:	f8d0 5120 	ldr.w	r5, [r0, #288]	; 0x120
    6282:	68f1      	ldr	r1, [r6, #12]
    6284:	2d00      	cmp	r5, #0
    6286:	f041 83b5 	bne.w	79f4 <d_print_comp_inner+0x18f0>
    628a:	780b      	ldrb	r3, [r1, #0]
    628c:	2b05      	cmp	r3, #5
    628e:	f001 85fb 	beq.w	7e88 <d_print_comp_inner+0x1d84>
    6292:	2b23      	cmp	r3, #35	; 0x23
    6294:	f001 8306 	beq.w	78a4 <d_print_comp_inner+0x17a0>
    6298:	7832      	ldrb	r2, [r6, #0]
    629a:	429a      	cmp	r2, r3
    629c:	f001 8302 	beq.w	78a4 <d_print_comp_inner+0x17a0>
    62a0:	2b24      	cmp	r3, #36	; 0x24
    62a2:	f001 866f 	beq.w	7f84 <d_print_comp_inner+0x1e80>
    62a6:	f8d4 e114 	ldr.w	lr, [r4, #276]	; 0x114
    62aa:	ab02      	add	r3, sp, #8
    62ac:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    62b0:	2300      	movs	r3, #0
    62b2:	f8d4 2110 	ldr.w	r2, [r4, #272]	; 0x110
    62b6:	f8cd e008 	str.w	lr, [sp, #8]
    62ba:	e9cd 3204 	strd	r3, r2, [sp, #16]
    62be:	9603      	str	r6, [sp, #12]
    62c0:	68f2      	ldr	r2, [r6, #12]
    62c2:	e797      	b.n	61f4 <d_print_comp_inner+0xf0>
    62c4:	68f2      	ldr	r2, [r6, #12]
    62c6:	b112      	cbz	r2, 62ce <d_print_comp_inner+0x1ca>
    62c8:	2111      	movs	r1, #17
    62ca:	f001 ffd3 	bl	8274 <d_print_comp>
    62ce:	6933      	ldr	r3, [r6, #16]
    62d0:	2b00      	cmp	r3, #0
    62d2:	f43f af7d 	beq.w	61d0 <d_print_comp_inner+0xcc>
    62d6:	f8d4 5100 	ldr.w	r5, [r4, #256]	; 0x100
    62da:	2dfd      	cmp	r5, #253	; 0xfd
    62dc:	f201 84c1 	bhi.w	7c62 <d_print_comp_inner+0x1b5e>
    62e0:	f8df 834c 	ldr.w	r8, [pc, #844]	; 6630 <d_print_comp_inner+0x52c>
    62e4:	272c      	movs	r7, #44	; 0x2c
    62e6:	f04f 0900 	mov.w	r9, #0
    62ea:	4629      	mov	r1, r5
    62ec:	f108 0a01 	add.w	sl, r8, #1
    62f0:	e00b      	b.n	630a <d_print_comp_inner+0x206>
    62f2:	460b      	mov	r3, r1
    62f4:	3101      	adds	r1, #1
    62f6:	45d0      	cmp	r8, sl
    62f8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    62fc:	54e7      	strb	r7, [r4, r3]
    62fe:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    6302:	f001 8280 	beq.w	7806 <d_print_comp_inner+0x1702>
    6306:	f818 7f01 	ldrb.w	r7, [r8, #1]!
    630a:	29ff      	cmp	r1, #255	; 0xff
    630c:	d1f1      	bne.n	62f2 <d_print_comp_inner+0x1ee>
    630e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6312:	4620      	mov	r0, r4
    6314:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6318:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    631c:	4798      	blx	r3
    631e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6322:	2101      	movs	r1, #1
    6324:	3301      	adds	r3, #1
    6326:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    632a:	2300      	movs	r3, #0
    632c:	e7e3      	b.n	62f6 <d_print_comp_inner+0x1f2>
    632e:	4dc1      	ldr	r5, [pc, #772]	; (6634 <d_print_comp_inner+0x530>)
    6330:	2111      	movs	r1, #17
    6332:	68f2      	ldr	r2, [r6, #12]
    6334:	f001 ff9e 	bl	8274 <d_print_comp>
    6338:	273a      	movs	r7, #58	; 0x3a
    633a:	f04f 0900 	mov.w	r9, #0
    633e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6342:	f105 0801 	add.w	r8, r5, #1
    6346:	e00b      	b.n	6360 <d_print_comp_inner+0x25c>
    6348:	460b      	mov	r3, r1
    634a:	3101      	adds	r1, #1
    634c:	45a8      	cmp	r8, r5
    634e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6352:	54e7      	strb	r7, [r4, r3]
    6354:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    6358:	f001 818f 	beq.w	767a <d_print_comp_inner+0x1576>
    635c:	f815 7f01 	ldrb.w	r7, [r5, #1]!
    6360:	29ff      	cmp	r1, #255	; 0xff
    6362:	d1f1      	bne.n	6348 <d_print_comp_inner+0x244>
    6364:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6368:	4620      	mov	r0, r4
    636a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    636e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    6372:	4798      	blx	r3
    6374:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6378:	2101      	movs	r1, #1
    637a:	3301      	adds	r3, #1
    637c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6380:	2300      	movs	r3, #0
    6382:	e7e3      	b.n	634c <d_print_comp_inner+0x248>
    6384:	68f2      	ldr	r2, [r6, #12]
    6386:	7811      	ldrb	r1, [r2, #0]
    6388:	2927      	cmp	r1, #39	; 0x27
    638a:	f041 8380 	bne.w	7a8e <d_print_comp_inner+0x198a>
    638e:	68d1      	ldr	r1, [r2, #12]
    6390:	7c0d      	ldrb	r5, [r1, #16]
    6392:	2d06      	cmp	r5, #6
    6394:	f201 828b 	bhi.w	78ae <d_print_comp_inner+0x17aa>
    6398:	2d00      	cmp	r5, #0
    639a:	f041 8550 	bne.w	7e3e <d_print_comp_inner+0x1d3a>
    639e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    63a2:	29ff      	cmp	r1, #255	; 0xff
    63a4:	f001 853a 	beq.w	7e1c <d_print_comp_inner+0x1d18>
    63a8:	1c4b      	adds	r3, r1, #1
    63aa:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    63ae:	2328      	movs	r3, #40	; 0x28
    63b0:	4620      	mov	r0, r4
    63b2:	5463      	strb	r3, [r4, r1]
    63b4:	2111      	movs	r1, #17
    63b6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    63ba:	f001 ff5b 	bl	8274 <d_print_comp>
    63be:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    63c2:	29ff      	cmp	r1, #255	; 0xff
    63c4:	f001 851a 	beq.w	7dfc <d_print_comp_inner+0x1cf8>
    63c8:	1c4b      	adds	r3, r1, #1
    63ca:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    63ce:	2329      	movs	r3, #41	; 0x29
    63d0:	5463      	strb	r3, [r4, r1]
    63d2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    63d6:	7833      	ldrb	r3, [r6, #0]
    63d8:	2b3e      	cmp	r3, #62	; 0x3e
    63da:	f001 8509 	beq.w	7df0 <d_print_comp_inner+0x1cec>
    63de:	2d08      	cmp	r5, #8
    63e0:	f001 84fa 	beq.w	7dd8 <d_print_comp_inner+0x1cd4>
    63e4:	2111      	movs	r1, #17
    63e6:	4620      	mov	r0, r4
    63e8:	6932      	ldr	r2, [r6, #16]
    63ea:	e716      	b.n	621a <d_print_comp_inner+0x116>
    63ec:	4f92      	ldr	r7, [pc, #584]	; (6638 <d_print_comp_inner+0x534>)
    63ee:	2574      	movs	r5, #116	; 0x74
    63f0:	f04f 0800 	mov.w	r8, #0
    63f4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    63f8:	f107 091d 	add.w	r9, r7, #29
    63fc:	e00b      	b.n	6416 <d_print_comp_inner+0x312>
    63fe:	460b      	mov	r3, r1
    6400:	3101      	adds	r1, #1
    6402:	45b9      	cmp	r9, r7
    6404:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6408:	54e5      	strb	r5, [r4, r3]
    640a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    640e:	f43f af01 	beq.w	6214 <d_print_comp_inner+0x110>
    6412:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6416:	29ff      	cmp	r1, #255	; 0xff
    6418:	d1f1      	bne.n	63fe <d_print_comp_inner+0x2fa>
    641a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    641e:	4620      	mov	r0, r4
    6420:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6424:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6428:	4798      	blx	r3
    642a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    642e:	2101      	movs	r1, #1
    6430:	3301      	adds	r3, #1
    6432:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6436:	2300      	movs	r3, #0
    6438:	e7e3      	b.n	6402 <d_print_comp_inner+0x2fe>
    643a:	2300      	movs	r3, #0
    643c:	f8d6 900c 	ldr.w	r9, [r6, #12]
    6440:	f8d0 7114 	ldr.w	r7, [r0, #276]	; 0x114
    6444:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
    6448:	f1b9 0f00 	cmp.w	r9, #0
    644c:	f43f aebd 	beq.w	61ca <d_print_comp_inner+0xc6>
    6450:	f10d 0808 	add.w	r8, sp, #8
    6454:	f8d0 c110 	ldr.w	ip, [r0, #272]	; 0x110
    6458:	4642      	mov	r2, r8
    645a:	4618      	mov	r0, r3
    645c:	469a      	mov	sl, r3
    645e:	e9c2 3900 	strd	r3, r9, [r2]
    6462:	e9c2 ac02 	strd	sl, ip, [r2, #8]
    6466:	f899 1000 	ldrb.w	r1, [r9]
    646a:	4613      	mov	r3, r2
    646c:	294d      	cmp	r1, #77	; 0x4d
    646e:	f1a1 0b1c 	sub.w	fp, r1, #28
    6472:	f1a1 0e4f 	sub.w	lr, r1, #79	; 0x4f
    6476:	f100 0501 	add.w	r5, r0, #1
    647a:	f001 81ef 	beq.w	785c <d_print_comp_inner+0x1758>
    647e:	f201 805a 	bhi.w	7536 <d_print_comp_inner+0x1432>
    6482:	f1bb 0f04 	cmp.w	fp, #4
    6486:	f241 81e9 	bls.w	785c <d_print_comp_inner+0x1758>
    648a:	2902      	cmp	r1, #2
    648c:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    6490:	d116      	bne.n	64c0 <d_print_comp_inner+0x3bc>
    6492:	f8d9 9010 	ldr.w	r9, [r9, #16]
    6496:	f899 1000 	ldrb.w	r1, [r9]
    649a:	2947      	cmp	r1, #71	; 0x47
    649c:	f001 8618 	beq.w	80d0 <d_print_comp_inner+0x1fcc>
    64a0:	f04f 0a00 	mov.w	sl, #0
    64a4:	eb08 1000 	add.w	r0, r8, r0, lsl #4
    64a8:	294d      	cmp	r1, #77	; 0x4d
    64aa:	f1a1 034f 	sub.w	r3, r1, #79	; 0x4f
    64ae:	f1a1 021c 	sub.w	r2, r1, #28
    64b2:	f001 8398 	beq.w	7be6 <d_print_comp_inner+0x1ae2>
    64b6:	f201 8393 	bhi.w	7be0 <d_print_comp_inner+0x1adc>
    64ba:	2a04      	cmp	r2, #4
    64bc:	f241 8393 	bls.w	7be6 <d_print_comp_inner+0x1ae2>
    64c0:	2904      	cmp	r1, #4
    64c2:	bf04      	itt	eq
    64c4:	e9cd c900 	strdeq	ip, r9, [sp]
    64c8:	f8c4 d110 	streq.w	sp, [r4, #272]	; 0x110
    64cc:	2111      	movs	r1, #17
    64ce:	4620      	mov	r0, r4
    64d0:	6932      	ldr	r2, [r6, #16]
    64d2:	f001 fecf 	bl	8274 <d_print_comp>
    64d6:	f899 3000 	ldrb.w	r3, [r9]
    64da:	2b04      	cmp	r3, #4
    64dc:	d102      	bne.n	64e4 <d_print_comp_inner+0x3e0>
    64de:	9b00      	ldr	r3, [sp, #0]
    64e0:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    64e4:	f04f 0920 	mov.w	r9, #32
    64e8:	eb08 1505 	add.w	r5, r8, r5, lsl #4
    64ec:	f855 6c08 	ldr.w	r6, [r5, #-8]
    64f0:	2e00      	cmp	r6, #0
    64f2:	f001 819f 	beq.w	7834 <d_print_comp_inner+0x1730>
    64f6:	3d10      	subs	r5, #16
    64f8:	4545      	cmp	r5, r8
    64fa:	d1f7      	bne.n	64ec <d_print_comp_inner+0x3e8>
    64fc:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
    6500:	e666      	b.n	61d0 <d_print_comp_inner+0xcc>
    6502:	6933      	ldr	r3, [r6, #16]
    6504:	781a      	ldrb	r2, [r3, #0]
    6506:	2a3b      	cmp	r2, #59	; 0x3b
    6508:	f47f ae5f 	bne.w	61ca <d_print_comp_inner+0xc6>
    650c:	691b      	ldr	r3, [r3, #16]
    650e:	781b      	ldrb	r3, [r3, #0]
    6510:	2b3c      	cmp	r3, #60	; 0x3c
    6512:	f47f ae5a 	bne.w	61ca <d_print_comp_inner+0xc6>
    6516:	4632      	mov	r2, r6
    6518:	2111      	movs	r1, #17
    651a:	f002 ffed 	bl	94f8 <d_maybe_print_fold_expression>
    651e:	2800      	cmp	r0, #0
    6520:	f47f ae56 	bne.w	61d0 <d_print_comp_inner+0xcc>
    6524:	e9d6 8303 	ldrd	r8, r3, [r6, #12]
    6528:	e9d3 6303 	ldrd	r6, r3, [r3, #12]
    652c:	e9d3 7503 	ldrd	r7, r5, [r3, #12]
    6530:	f8d8 200c 	ldr.w	r2, [r8, #12]
    6534:	4941      	ldr	r1, [pc, #260]	; (663c <d_print_comp_inner+0x538>)
    6536:	6810      	ldr	r0, [r2, #0]
    6538:	f006 ff1e 	bl	d378 <strcmp>
    653c:	2800      	cmp	r0, #0
    653e:	f041 8609 	bne.w	8154 <d_print_comp_inner+0x2050>
    6542:	4632      	mov	r2, r6
    6544:	2111      	movs	r1, #17
    6546:	4620      	mov	r0, r4
    6548:	f002 ff68 	bl	941c <d_print_subexpr>
    654c:	4642      	mov	r2, r8
    654e:	2111      	movs	r1, #17
    6550:	4620      	mov	r0, r4
    6552:	f002 fd81 	bl	9058 <d_print_expr_op>
    6556:	2111      	movs	r1, #17
    6558:	4620      	mov	r0, r4
    655a:	463a      	mov	r2, r7
    655c:	f002 ff5e 	bl	941c <d_print_subexpr>
    6560:	4620      	mov	r0, r4
    6562:	4937      	ldr	r1, [pc, #220]	; (6640 <d_print_comp_inner+0x53c>)
    6564:	f7fd fbbc 	bl	3ce0 <d_append_string>
    6568:	462a      	mov	r2, r5
    656a:	2111      	movs	r1, #17
    656c:	4620      	mov	r0, r4
    656e:	b013      	add	sp, #76	; 0x4c
    6570:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6574:	f002 bf52 	b.w	941c <d_print_subexpr>
    6578:	2111      	movs	r1, #17
    657a:	68f2      	ldr	r2, [r6, #12]
    657c:	f001 fe7a 	bl	8274 <d_print_comp>
    6580:	e730      	b.n	63e4 <d_print_comp_inner+0x2e0>
    6582:	4f30      	ldr	r7, [pc, #192]	; (6644 <d_print_comp_inner+0x540>)
    6584:	2563      	movs	r5, #99	; 0x63
    6586:	f04f 0800 	mov.w	r8, #0
    658a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    658e:	f107 0917 	add.w	r9, r7, #23
    6592:	e00b      	b.n	65ac <d_print_comp_inner+0x4a8>
    6594:	460b      	mov	r3, r1
    6596:	3101      	adds	r1, #1
    6598:	45b9      	cmp	r9, r7
    659a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    659e:	54e5      	strb	r5, [r4, r3]
    65a0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    65a4:	f000 87cf 	beq.w	7546 <d_print_comp_inner+0x1442>
    65a8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    65ac:	29ff      	cmp	r1, #255	; 0xff
    65ae:	d1f1      	bne.n	6594 <d_print_comp_inner+0x490>
    65b0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    65b4:	4620      	mov	r0, r4
    65b6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    65ba:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    65be:	4798      	blx	r3
    65c0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    65c4:	2101      	movs	r1, #1
    65c6:	3301      	adds	r3, #1
    65c8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    65cc:	2300      	movs	r3, #0
    65ce:	e7e3      	b.n	6598 <d_print_comp_inner+0x494>
    65d0:	4f1d      	ldr	r7, [pc, #116]	; (6648 <d_print_comp_inner+0x544>)
    65d2:	2556      	movs	r5, #86	; 0x56
    65d4:	f04f 0800 	mov.w	r8, #0
    65d8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    65dc:	f107 0907 	add.w	r9, r7, #7
    65e0:	e00b      	b.n	65fa <d_print_comp_inner+0x4f6>
    65e2:	460b      	mov	r3, r1
    65e4:	3101      	adds	r1, #1
    65e6:	45b9      	cmp	r9, r7
    65e8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    65ec:	54e5      	strb	r5, [r4, r3]
    65ee:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    65f2:	f43f ae0f 	beq.w	6214 <d_print_comp_inner+0x110>
    65f6:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    65fa:	29ff      	cmp	r1, #255	; 0xff
    65fc:	d1f1      	bne.n	65e2 <d_print_comp_inner+0x4de>
    65fe:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6602:	4620      	mov	r0, r4
    6604:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6608:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    660c:	4798      	blx	r3
    660e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6612:	2101      	movs	r1, #1
    6614:	3301      	adds	r3, #1
    6616:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    661a:	2300      	movs	r3, #0
    661c:	e7e3      	b.n	65e6 <d_print_comp_inner+0x4e2>
    661e:	4f0b      	ldr	r7, [pc, #44]	; (664c <d_print_comp_inner+0x548>)
    6620:	2576      	movs	r5, #118	; 0x76
    6622:	f04f 0800 	mov.w	r8, #0
    6626:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    662a:	f107 090a 	add.w	r9, r7, #10
    662e:	e01b      	b.n	6668 <d_print_comp_inner+0x564>
    6630:	0001911c 	.word	0x0001911c
    6634:	00018f7c 	.word	0x00018f7c
    6638:	00018f9c 	.word	0x00018f9c
    663c:	0001913c 	.word	0x0001913c
    6640:	00019140 	.word	0x00019140
    6644:	00018fd4 	.word	0x00018fd4
    6648:	00018fc8 	.word	0x00018fc8
    664c:	00018fbc 	.word	0x00018fbc
    6650:	460b      	mov	r3, r1
    6652:	3101      	adds	r1, #1
    6654:	45b9      	cmp	r9, r7
    6656:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    665a:	54e5      	strb	r5, [r4, r3]
    665c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6660:	f43f add8 	beq.w	6214 <d_print_comp_inner+0x110>
    6664:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6668:	29ff      	cmp	r1, #255	; 0xff
    666a:	d1f1      	bne.n	6650 <d_print_comp_inner+0x54c>
    666c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6670:	4620      	mov	r0, r4
    6672:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6676:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    667a:	4798      	blx	r3
    667c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6680:	2101      	movs	r1, #1
    6682:	3301      	adds	r3, #1
    6684:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6688:	2300      	movs	r3, #0
    668a:	e7e3      	b.n	6654 <d_print_comp_inner+0x550>
    668c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    6690:	2bff      	cmp	r3, #255	; 0xff
    6692:	f001 8363 	beq.w	7d5c <d_print_comp_inner+0x1c58>
    6696:	1c59      	adds	r1, r3, #1
    6698:	227e      	movs	r2, #126	; 0x7e
    669a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    669e:	4620      	mov	r0, r4
    66a0:	54e2      	strb	r2, [r4, r3]
    66a2:	2111      	movs	r1, #17
    66a4:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    66a8:	e69e      	b.n	63e8 <d_print_comp_inner+0x2e4>
    66aa:	68f2      	ldr	r2, [r6, #12]
    66ac:	b1ca      	cbz	r2, 66e2 <d_print_comp_inner+0x5de>
    66ae:	2300      	movs	r3, #0
    66b0:	f8d0 1114 	ldr.w	r1, [r0, #276]	; 0x114
    66b4:	9304      	str	r3, [sp, #16]
    66b6:	9102      	str	r1, [sp, #8]
    66b8:	a902      	add	r1, sp, #8
    66ba:	f8c0 1114 	str.w	r1, [r0, #276]	; 0x114
    66be:	f8d0 1110 	ldr.w	r1, [r0, #272]	; 0x110
    66c2:	9603      	str	r6, [sp, #12]
    66c4:	9105      	str	r1, [sp, #20]
    66c6:	2111      	movs	r1, #17
    66c8:	f001 fdd4 	bl	8274 <d_print_comp>
    66cc:	9a02      	ldr	r2, [sp, #8]
    66ce:	9b04      	ldr	r3, [sp, #16]
    66d0:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    66d4:	2b00      	cmp	r3, #0
    66d6:	f47f ad7b 	bne.w	61d0 <d_print_comp_inner+0xcc>
    66da:	2120      	movs	r1, #32
    66dc:	4620      	mov	r0, r4
    66de:	f7fd fa79 	bl	3bd4 <d_append_char>
    66e2:	4632      	mov	r2, r6
    66e4:	2111      	movs	r1, #17
    66e6:	4620      	mov	r0, r4
    66e8:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    66ec:	b013      	add	sp, #76	; 0x4c
    66ee:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    66f2:	f002 b90f 	b.w	8914 <d_print_function_type>
    66f6:	4fc9      	ldr	r7, [pc, #804]	; (6a1c <d_print_comp_inner+0x918>)
    66f8:	2567      	movs	r5, #103	; 0x67
    66fa:	f04f 0800 	mov.w	r8, #0
    66fe:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6702:	f107 0912 	add.w	r9, r7, #18
    6706:	e00b      	b.n	6720 <d_print_comp_inner+0x61c>
    6708:	460b      	mov	r3, r1
    670a:	3101      	adds	r1, #1
    670c:	454f      	cmp	r7, r9
    670e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6712:	54e5      	strb	r5, [r4, r3]
    6714:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6718:	f43f ad7c 	beq.w	6214 <d_print_comp_inner+0x110>
    671c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6720:	29ff      	cmp	r1, #255	; 0xff
    6722:	d1f1      	bne.n	6708 <d_print_comp_inner+0x604>
    6724:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6728:	4620      	mov	r0, r4
    672a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    672e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6732:	4798      	blx	r3
    6734:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6738:	2101      	movs	r1, #1
    673a:	3301      	adds	r3, #1
    673c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6740:	2300      	movs	r3, #0
    6742:	e7e3      	b.n	670c <d_print_comp_inner+0x608>
    6744:	4fb6      	ldr	r7, [pc, #728]	; (6a20 <d_print_comp_inner+0x91c>)
    6746:	256a      	movs	r5, #106	; 0x6a
    6748:	f04f 0800 	mov.w	r8, #0
    674c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6750:	f107 090e 	add.w	r9, r7, #14
    6754:	e00b      	b.n	676e <d_print_comp_inner+0x66a>
    6756:	460b      	mov	r3, r1
    6758:	3101      	adds	r1, #1
    675a:	45b9      	cmp	r9, r7
    675c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6760:	54e5      	strb	r5, [r4, r3]
    6762:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6766:	f43f ad55 	beq.w	6214 <d_print_comp_inner+0x110>
    676a:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    676e:	29ff      	cmp	r1, #255	; 0xff
    6770:	d1f1      	bne.n	6756 <d_print_comp_inner+0x652>
    6772:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6776:	4620      	mov	r0, r4
    6778:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    677c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6780:	4798      	blx	r3
    6782:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6786:	2101      	movs	r1, #1
    6788:	3301      	adds	r3, #1
    678a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    678e:	2300      	movs	r3, #0
    6790:	e7e3      	b.n	675a <d_print_comp_inner+0x656>
    6792:	4fa4      	ldr	r7, [pc, #656]	; (6a24 <d_print_comp_inner+0x920>)
    6794:	2563      	movs	r5, #99	; 0x63
    6796:	f04f 0800 	mov.w	r8, #0
    679a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    679e:	f107 0919 	add.w	r9, r7, #25
    67a2:	e00b      	b.n	67bc <d_print_comp_inner+0x6b8>
    67a4:	460b      	mov	r3, r1
    67a6:	3101      	adds	r1, #1
    67a8:	454f      	cmp	r7, r9
    67aa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    67ae:	54e5      	strb	r5, [r4, r3]
    67b0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    67b4:	f43f ad2e 	beq.w	6214 <d_print_comp_inner+0x110>
    67b8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    67bc:	29ff      	cmp	r1, #255	; 0xff
    67be:	d1f1      	bne.n	67a4 <d_print_comp_inner+0x6a0>
    67c0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    67c4:	4620      	mov	r0, r4
    67c6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    67ca:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    67ce:	4798      	blx	r3
    67d0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    67d4:	2101      	movs	r1, #1
    67d6:	3301      	adds	r3, #1
    67d8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    67dc:	2300      	movs	r3, #0
    67de:	e7e3      	b.n	67a8 <d_print_comp_inner+0x6a4>
    67e0:	4f91      	ldr	r7, [pc, #580]	; (6a28 <d_print_comp_inner+0x924>)
    67e2:	2111      	movs	r1, #17
    67e4:	68f2      	ldr	r2, [r6, #12]
    67e6:	f001 fd45 	bl	8274 <d_print_comp>
    67ea:	255b      	movs	r5, #91	; 0x5b
    67ec:	f04f 0800 	mov.w	r8, #0
    67f0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    67f4:	f107 0904 	add.w	r9, r7, #4
    67f8:	e00b      	b.n	6812 <d_print_comp_inner+0x70e>
    67fa:	460b      	mov	r3, r1
    67fc:	3101      	adds	r1, #1
    67fe:	45b9      	cmp	r9, r7
    6800:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6804:	54e5      	strb	r5, [r4, r3]
    6806:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    680a:	f000 8681 	beq.w	7510 <d_print_comp_inner+0x140c>
    680e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6812:	29ff      	cmp	r1, #255	; 0xff
    6814:	d1f1      	bne.n	67fa <d_print_comp_inner+0x6f6>
    6816:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    681a:	4620      	mov	r0, r4
    681c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6820:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6824:	4798      	blx	r3
    6826:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    682a:	2101      	movs	r1, #1
    682c:	3301      	adds	r3, #1
    682e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6832:	2300      	movs	r3, #0
    6834:	e7e3      	b.n	67fe <d_print_comp_inner+0x6fa>
    6836:	68f1      	ldr	r1, [r6, #12]
    6838:	f7fd fa0a 	bl	3c50 <d_find_pack>
    683c:	f04f 0800 	mov.w	r8, #0
    6840:	b910      	cbnz	r0, 6848 <d_print_comp_inner+0x744>
    6842:	f001 bc10 	b.w	8066 <d_print_comp_inner+0x1f62>
    6846:	4690      	mov	r8, r2
    6848:	7803      	ldrb	r3, [r0, #0]
    684a:	f108 0201 	add.w	r2, r8, #1
    684e:	2b2f      	cmp	r3, #47	; 0x2f
    6850:	f041 8012 	bne.w	7878 <d_print_comp_inner+0x1774>
    6854:	68c3      	ldr	r3, [r0, #12]
    6856:	2b00      	cmp	r3, #0
    6858:	f001 800e 	beq.w	7878 <d_print_comp_inner+0x1774>
    685c:	6900      	ldr	r0, [r0, #16]
    685e:	2800      	cmp	r0, #0
    6860:	d1f1      	bne.n	6846 <d_print_comp_inner+0x742>
    6862:	46c2      	mov	sl, r8
    6864:	f8d6 900c 	ldr.w	r9, [r6, #12]
    6868:	4690      	mov	r8, r2
    686a:	e003      	b.n	6874 <d_print_comp_inner+0x770>
    686c:	3501      	adds	r5, #1
    686e:	4545      	cmp	r5, r8
    6870:	f6bf acae 	bge.w	61d0 <d_print_comp_inner+0xcc>
    6874:	464a      	mov	r2, r9
    6876:	2111      	movs	r1, #17
    6878:	4620      	mov	r0, r4
    687a:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
    687e:	f001 fcf9 	bl	8274 <d_print_comp>
    6882:	45aa      	cmp	sl, r5
    6884:	ddf2      	ble.n	686c <d_print_comp_inner+0x768>
    6886:	4e69      	ldr	r6, [pc, #420]	; (6a2c <d_print_comp_inner+0x928>)
    6888:	272c      	movs	r7, #44	; 0x2c
    688a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    688e:	f106 0b01 	add.w	fp, r6, #1
    6892:	e00a      	b.n	68aa <d_print_comp_inner+0x7a6>
    6894:	460b      	mov	r3, r1
    6896:	3101      	adds	r1, #1
    6898:	45b3      	cmp	fp, r6
    689a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    689e:	54e7      	strb	r7, [r4, r3]
    68a0:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    68a4:	d0e2      	beq.n	686c <d_print_comp_inner+0x768>
    68a6:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    68aa:	29ff      	cmp	r1, #255	; 0xff
    68ac:	d1f2      	bne.n	6894 <d_print_comp_inner+0x790>
    68ae:	f04f 0200 	mov.w	r2, #0
    68b2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    68b6:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    68ba:	4620      	mov	r0, r4
    68bc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    68c0:	4798      	blx	r3
    68c2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    68c6:	2101      	movs	r1, #1
    68c8:	3301      	adds	r3, #1
    68ca:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    68ce:	2300      	movs	r3, #0
    68d0:	e7e2      	b.n	6898 <d_print_comp_inner+0x794>
    68d2:	4f57      	ldr	r7, [pc, #348]	; (6a30 <d_print_comp_inner+0x92c>)
    68d4:	256e      	movs	r5, #110	; 0x6e
    68d6:	f04f 0800 	mov.w	r8, #0
    68da:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    68de:	f107 0919 	add.w	r9, r7, #25
    68e2:	e00b      	b.n	68fc <d_print_comp_inner+0x7f8>
    68e4:	460b      	mov	r3, r1
    68e6:	3101      	adds	r1, #1
    68e8:	45b9      	cmp	r9, r7
    68ea:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    68ee:	54e5      	strb	r5, [r4, r3]
    68f0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    68f4:	f43f ac8e 	beq.w	6214 <d_print_comp_inner+0x110>
    68f8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    68fc:	29ff      	cmp	r1, #255	; 0xff
    68fe:	d1f1      	bne.n	68e4 <d_print_comp_inner+0x7e0>
    6900:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6904:	4620      	mov	r0, r4
    6906:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    690a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    690e:	4798      	blx	r3
    6910:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6914:	2101      	movs	r1, #1
    6916:	3301      	adds	r3, #1
    6918:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    691c:	2300      	movs	r3, #0
    691e:	e7e3      	b.n	68e8 <d_print_comp_inner+0x7e4>
    6920:	4f44      	ldr	r7, [pc, #272]	; (6a34 <d_print_comp_inner+0x930>)
    6922:	2574      	movs	r5, #116	; 0x74
    6924:	f04f 0800 	mov.w	r8, #0
    6928:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    692c:	f107 0915 	add.w	r9, r7, #21
    6930:	e00b      	b.n	694a <d_print_comp_inner+0x846>
    6932:	460b      	mov	r3, r1
    6934:	3101      	adds	r1, #1
    6936:	45b9      	cmp	r9, r7
    6938:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    693c:	54e5      	strb	r5, [r4, r3]
    693e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6942:	f43f ac67 	beq.w	6214 <d_print_comp_inner+0x110>
    6946:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    694a:	29ff      	cmp	r1, #255	; 0xff
    694c:	d1f1      	bne.n	6932 <d_print_comp_inner+0x82e>
    694e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6952:	4620      	mov	r0, r4
    6954:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6958:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    695c:	4798      	blx	r3
    695e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6962:	2101      	movs	r1, #1
    6964:	3301      	adds	r3, #1
    6966:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    696a:	2300      	movs	r3, #0
    696c:	e7e3      	b.n	6936 <d_print_comp_inner+0x832>
    696e:	4f32      	ldr	r7, [pc, #200]	; (6a38 <d_print_comp_inner+0x934>)
    6970:	257b      	movs	r5, #123	; 0x7b
    6972:	f04f 0800 	mov.w	r8, #0
    6976:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    697a:	f107 090d 	add.w	r9, r7, #13
    697e:	e00b      	b.n	6998 <d_print_comp_inner+0x894>
    6980:	460b      	mov	r3, r1
    6982:	3101      	adds	r1, #1
    6984:	454f      	cmp	r7, r9
    6986:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    698a:	54e5      	strb	r5, [r4, r3]
    698c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6990:	f000 8631 	beq.w	75f6 <d_print_comp_inner+0x14f2>
    6994:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6998:	29ff      	cmp	r1, #255	; 0xff
    699a:	d1f1      	bne.n	6980 <d_print_comp_inner+0x87c>
    699c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    69a0:	4620      	mov	r0, r4
    69a2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    69a6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    69aa:	4798      	blx	r3
    69ac:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    69b0:	2101      	movs	r1, #1
    69b2:	3301      	adds	r3, #1
    69b4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    69b8:	2300      	movs	r3, #0
    69ba:	e7e3      	b.n	6984 <d_print_comp_inner+0x880>
    69bc:	4f1f      	ldr	r7, [pc, #124]	; (6a3c <d_print_comp_inner+0x938>)
    69be:	2576      	movs	r5, #118	; 0x76
    69c0:	f04f 0800 	mov.w	r8, #0
    69c4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    69c8:	f107 0910 	add.w	r9, r7, #16
    69cc:	e00b      	b.n	69e6 <d_print_comp_inner+0x8e2>
    69ce:	460b      	mov	r3, r1
    69d0:	3101      	adds	r1, #1
    69d2:	45b9      	cmp	r9, r7
    69d4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    69d8:	54e5      	strb	r5, [r4, r3]
    69da:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    69de:	f43f ac19 	beq.w	6214 <d_print_comp_inner+0x110>
    69e2:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    69e6:	29ff      	cmp	r1, #255	; 0xff
    69e8:	d1f1      	bne.n	69ce <d_print_comp_inner+0x8ca>
    69ea:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    69ee:	4620      	mov	r0, r4
    69f0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    69f4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    69f8:	4798      	blx	r3
    69fa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    69fe:	2101      	movs	r1, #1
    6a00:	3301      	adds	r3, #1
    6a02:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6a06:	2300      	movs	r3, #0
    6a08:	e7e3      	b.n	69d2 <d_print_comp_inner+0x8ce>
    6a0a:	4f0d      	ldr	r7, [pc, #52]	; (6a40 <d_print_comp_inner+0x93c>)
    6a0c:	256e      	movs	r5, #110	; 0x6e
    6a0e:	f04f 0800 	mov.w	r8, #0
    6a12:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6a16:	f107 0914 	add.w	r9, r7, #20
    6a1a:	e01f      	b.n	6a5c <d_print_comp_inner+0x958>
    6a1c:	00019074 	.word	0x00019074
    6a20:	00019064 	.word	0x00019064
    6a24:	00019048 	.word	0x00019048
    6a28:	00018f74 	.word	0x00018f74
    6a2c:	0001911c 	.word	0x0001911c
    6a30:	000190e8 	.word	0x000190e8
    6a34:	000190ec 	.word	0x000190ec
    6a38:	000191e8 	.word	0x000191e8
    6a3c:	00019034 	.word	0x00019034
    6a40:	00019030 	.word	0x00019030
    6a44:	460b      	mov	r3, r1
    6a46:	3101      	adds	r1, #1
    6a48:	454f      	cmp	r7, r9
    6a4a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6a4e:	54e5      	strb	r5, [r4, r3]
    6a50:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6a54:	f43f abde 	beq.w	6214 <d_print_comp_inner+0x110>
    6a58:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6a5c:	29ff      	cmp	r1, #255	; 0xff
    6a5e:	d1f1      	bne.n	6a44 <d_print_comp_inner+0x940>
    6a60:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6a64:	4620      	mov	r0, r4
    6a66:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6a6a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6a6e:	4798      	blx	r3
    6a70:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6a74:	2101      	movs	r1, #1
    6a76:	3301      	adds	r3, #1
    6a78:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6a7c:	2300      	movs	r3, #0
    6a7e:	e7e3      	b.n	6a48 <d_print_comp_inner+0x944>
    6a80:	4f9a      	ldr	r7, [pc, #616]	; (6cec <d_print_comp_inner+0xbe8>)
    6a82:	2574      	movs	r5, #116	; 0x74
    6a84:	f04f 0800 	mov.w	r8, #0
    6a88:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6a8c:	f107 090f 	add.w	r9, r7, #15
    6a90:	e00b      	b.n	6aaa <d_print_comp_inner+0x9a6>
    6a92:	460b      	mov	r3, r1
    6a94:	3101      	adds	r1, #1
    6a96:	45b9      	cmp	r9, r7
    6a98:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6a9c:	54e5      	strb	r5, [r4, r3]
    6a9e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6aa2:	f43f abb7 	beq.w	6214 <d_print_comp_inner+0x110>
    6aa6:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6aaa:	29ff      	cmp	r1, #255	; 0xff
    6aac:	d1f1      	bne.n	6a92 <d_print_comp_inner+0x98e>
    6aae:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6ab2:	4620      	mov	r0, r4
    6ab4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6ab8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6abc:	4798      	blx	r3
    6abe:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6ac2:	2101      	movs	r1, #1
    6ac4:	3301      	adds	r3, #1
    6ac6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6aca:	2300      	movs	r3, #0
    6acc:	e7e3      	b.n	6a96 <d_print_comp_inner+0x992>
    6ace:	4f88      	ldr	r7, [pc, #544]	; (6cf0 <d_print_comp_inner+0xbec>)
    6ad0:	2574      	movs	r5, #116	; 0x74
    6ad2:	f04f 0800 	mov.w	r8, #0
    6ad6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6ada:	f107 0911 	add.w	r9, r7, #17
    6ade:	e00b      	b.n	6af8 <d_print_comp_inner+0x9f4>
    6ae0:	460b      	mov	r3, r1
    6ae2:	3101      	adds	r1, #1
    6ae4:	45b9      	cmp	r9, r7
    6ae6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6aea:	54e5      	strb	r5, [r4, r3]
    6aec:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6af0:	f43f ab90 	beq.w	6214 <d_print_comp_inner+0x110>
    6af4:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6af8:	29ff      	cmp	r1, #255	; 0xff
    6afa:	d1f1      	bne.n	6ae0 <d_print_comp_inner+0x9dc>
    6afc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6b00:	4620      	mov	r0, r4
    6b02:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6b06:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6b0a:	4798      	blx	r3
    6b0c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6b10:	2101      	movs	r1, #1
    6b12:	3301      	adds	r3, #1
    6b14:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6b18:	2300      	movs	r3, #0
    6b1a:	e7e3      	b.n	6ae4 <d_print_comp_inner+0x9e0>
    6b1c:	4f75      	ldr	r7, [pc, #468]	; (6cf4 <d_print_comp_inner+0xbf0>)
    6b1e:	2574      	movs	r5, #116	; 0x74
    6b20:	f04f 0800 	mov.w	r8, #0
    6b24:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6b28:	f107 090c 	add.w	r9, r7, #12
    6b2c:	e00b      	b.n	6b46 <d_print_comp_inner+0xa42>
    6b2e:	460b      	mov	r3, r1
    6b30:	3101      	adds	r1, #1
    6b32:	45b9      	cmp	r9, r7
    6b34:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6b38:	54e5      	strb	r5, [r4, r3]
    6b3a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6b3e:	f43f ab69 	beq.w	6214 <d_print_comp_inner+0x110>
    6b42:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6b46:	29ff      	cmp	r1, #255	; 0xff
    6b48:	d1f1      	bne.n	6b2e <d_print_comp_inner+0xa2a>
    6b4a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6b4e:	4620      	mov	r0, r4
    6b50:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6b54:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6b58:	4798      	blx	r3
    6b5a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6b5e:	2101      	movs	r1, #1
    6b60:	3301      	adds	r3, #1
    6b62:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6b66:	2300      	movs	r3, #0
    6b68:	e7e3      	b.n	6b32 <d_print_comp_inner+0xa2e>
    6b6a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6b6e:	7b35      	ldrb	r5, [r6, #12]
    6b70:	29ff      	cmp	r1, #255	; 0xff
    6b72:	f001 8087 	beq.w	7c84 <d_print_comp_inner+0x1b80>
    6b76:	1c4b      	adds	r3, r1, #1
    6b78:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    6b7c:	5465      	strb	r5, [r4, r1]
    6b7e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6b82:	f7ff bb25 	b.w	61d0 <d_print_comp_inner+0xcc>
    6b86:	4f5c      	ldr	r7, [pc, #368]	; (6cf8 <d_print_comp_inner+0xbf4>)
    6b88:	2111      	movs	r1, #17
    6b8a:	68f2      	ldr	r2, [r6, #12]
    6b8c:	f001 fb72 	bl	8274 <d_print_comp>
    6b90:	2520      	movs	r5, #32
    6b92:	f04f 0800 	mov.w	r8, #0
    6b96:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6b9a:	f107 0907 	add.w	r9, r7, #7
    6b9e:	e00b      	b.n	6bb8 <d_print_comp_inner+0xab4>
    6ba0:	460b      	mov	r3, r1
    6ba2:	3101      	adds	r1, #1
    6ba4:	45b9      	cmp	r9, r7
    6ba6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6baa:	54e5      	strb	r5, [r4, r3]
    6bac:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6bb0:	f000 84ae 	beq.w	7510 <d_print_comp_inner+0x140c>
    6bb4:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6bb8:	29ff      	cmp	r1, #255	; 0xff
    6bba:	d1f1      	bne.n	6ba0 <d_print_comp_inner+0xa9c>
    6bbc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6bc0:	4620      	mov	r0, r4
    6bc2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6bc6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6bca:	4798      	blx	r3
    6bcc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6bd0:	2101      	movs	r1, #1
    6bd2:	3301      	adds	r3, #1
    6bd4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6bd8:	2300      	movs	r3, #0
    6bda:	e7e3      	b.n	6ba4 <d_print_comp_inner+0xaa0>
    6bdc:	2300      	movs	r3, #0
    6bde:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
    6be2:	9304      	str	r3, [sp, #16]
    6be4:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
    6be8:	f10d 0808 	add.w	r8, sp, #8
    6bec:	46e1      	mov	r9, ip
    6bee:	f8cd c008 	str.w	ip, [sp, #8]
    6bf2:	f8c0 8114 	str.w	r8, [r0, #276]	; 0x114
    6bf6:	9603      	str	r6, [sp, #12]
    6bf8:	9305      	str	r3, [sp, #20]
    6bfa:	f1bc 0f00 	cmp.w	ip, #0
    6bfe:	f001 82e6 	beq.w	81ce <d_print_comp_inner+0x20ca>
    6c02:	2701      	movs	r7, #1
    6c04:	4665      	mov	r5, ip
    6c06:	46be      	mov	lr, r7
    6c08:	46b4      	mov	ip, r6
    6c0a:	4646      	mov	r6, r8
    6c0c:	e018      	b.n	6c40 <d_print_comp_inner+0xb3c>
    6c0e:	68ab      	ldr	r3, [r5, #8]
    6c10:	b9a3      	cbnz	r3, 6c3c <d_print_comp_inner+0xb38>
    6c12:	2f03      	cmp	r7, #3
    6c14:	f63f aad9 	bhi.w	61ca <d_print_comp_inner+0xc6>
    6c18:	ab12      	add	r3, sp, #72	; 0x48
    6c1a:	eb03 1b07 	add.w	fp, r3, r7, lsl #4
    6c1e:	f1ab 0a40 	sub.w	sl, fp, #64	; 0x40
    6c22:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    6c26:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
    6c2a:	f84b 6c40 	str.w	r6, [fp, #-64]
    6c2e:	eb08 1607 	add.w	r6, r8, r7, lsl #4
    6c32:	f8c4 6114 	str.w	r6, [r4, #276]	; 0x114
    6c36:	3701      	adds	r7, #1
    6c38:	f8c5 e008 	str.w	lr, [r5, #8]
    6c3c:	682d      	ldr	r5, [r5, #0]
    6c3e:	b125      	cbz	r5, 6c4a <d_print_comp_inner+0xb46>
    6c40:	686b      	ldr	r3, [r5, #4]
    6c42:	781b      	ldrb	r3, [r3, #0]
    6c44:	3b19      	subs	r3, #25
    6c46:	2b02      	cmp	r3, #2
    6c48:	d9e1      	bls.n	6c0e <d_print_comp_inner+0xb0a>
    6c4a:	2111      	movs	r1, #17
    6c4c:	4620      	mov	r0, r4
    6c4e:	f8dc 2010 	ldr.w	r2, [ip, #16]
    6c52:	4666      	mov	r6, ip
    6c54:	f001 fb0e 	bl	8274 <d_print_comp>
    6c58:	9b04      	ldr	r3, [sp, #16]
    6c5a:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    6c5e:	2b00      	cmp	r3, #0
    6c60:	f47f aab6 	bne.w	61d0 <d_print_comp_inner+0xcc>
    6c64:	2f01      	cmp	r7, #1
    6c66:	d00c      	beq.n	6c82 <d_print_comp_inner+0xb7e>
    6c68:	eb08 1807 	add.w	r8, r8, r7, lsl #4
    6c6c:	f858 2c0c 	ldr.w	r2, [r8, #-12]
    6c70:	2111      	movs	r1, #17
    6c72:	4620      	mov	r0, r4
    6c74:	3f01      	subs	r7, #1
    6c76:	f001 fb2b 	bl	82d0 <d_print_mod>
    6c7a:	2f01      	cmp	r7, #1
    6c7c:	f1a8 0810 	sub.w	r8, r8, #16
    6c80:	d1f4      	bne.n	6c6c <d_print_comp_inner+0xb68>
    6c82:	4632      	mov	r2, r6
    6c84:	2111      	movs	r1, #17
    6c86:	4620      	mov	r0, r4
    6c88:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    6c8c:	f002 f858 	bl	8d40 <d_print_array_type>
    6c90:	f7ff ba9e 	b.w	61d0 <d_print_comp_inner+0xcc>
    6c94:	e9d6 5303 	ldrd	r5, r3, [r6, #12]
    6c98:	2b00      	cmp	r3, #0
    6c9a:	f43f aa99 	beq.w	61d0 <d_print_comp_inner+0xcc>
    6c9e:	442b      	add	r3, r5
    6ca0:	f04f 0800 	mov.w	r8, #0
    6ca4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6ca8:	3d01      	subs	r5, #1
    6caa:	1e5f      	subs	r7, r3, #1
    6cac:	e009      	b.n	6cc2 <d_print_comp_inner+0xbbe>
    6cae:	460b      	mov	r3, r1
    6cb0:	3101      	adds	r1, #1
    6cb2:	42af      	cmp	r7, r5
    6cb4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6cb8:	54e6      	strb	r6, [r4, r3]
    6cba:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6cbe:	f43f aa87 	beq.w	61d0 <d_print_comp_inner+0xcc>
    6cc2:	29ff      	cmp	r1, #255	; 0xff
    6cc4:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6cc8:	d1f1      	bne.n	6cae <d_print_comp_inner+0xbaa>
    6cca:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6cce:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6cd2:	4620      	mov	r0, r4
    6cd4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6cd8:	4798      	blx	r3
    6cda:	2101      	movs	r1, #1
    6cdc:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    6ce0:	2300      	movs	r3, #0
    6ce2:	440a      	add	r2, r1
    6ce4:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    6ce8:	e7e3      	b.n	6cb2 <d_print_comp_inner+0xbae>
    6cea:	bf00      	nop
    6cec:	0001901c 	.word	0x0001901c
    6cf0:	00019008 	.word	0x00019008
    6cf4:	00018ff8 	.word	0x00018ff8
    6cf8:	000191f8 	.word	0x000191f8
    6cfc:	6933      	ldr	r3, [r6, #16]
    6cfe:	781b      	ldrb	r3, [r3, #0]
    6d00:	2b39      	cmp	r3, #57	; 0x39
    6d02:	f47f aa62 	bne.w	61ca <d_print_comp_inner+0xc6>
    6d06:	68f2      	ldr	r2, [r6, #12]
    6d08:	68d3      	ldr	r3, [r2, #12]
    6d0a:	681b      	ldr	r3, [r3, #0]
    6d0c:	7859      	ldrb	r1, [r3, #1]
    6d0e:	2963      	cmp	r1, #99	; 0x63
    6d10:	f001 8103 	beq.w	7f1a <d_print_comp_inner+0x1e16>
    6d14:	4632      	mov	r2, r6
    6d16:	2111      	movs	r1, #17
    6d18:	4620      	mov	r0, r4
    6d1a:	f002 fbed 	bl	94f8 <d_maybe_print_fold_expression>
    6d1e:	2800      	cmp	r0, #0
    6d20:	f47f aa56 	bne.w	61d0 <d_print_comp_inner+0xcc>
    6d24:	68f3      	ldr	r3, [r6, #12]
    6d26:	781a      	ldrb	r2, [r3, #0]
    6d28:	2a32      	cmp	r2, #50	; 0x32
    6d2a:	f001 81b2 	beq.w	8092 <d_print_comp_inner+0x1f8e>
    6d2e:	68db      	ldr	r3, [r3, #12]
    6d30:	681b      	ldr	r3, [r3, #0]
    6d32:	781a      	ldrb	r2, [r3, #0]
    6d34:	2a63      	cmp	r2, #99	; 0x63
    6d36:	f041 80ed 	bne.w	7f14 <d_print_comp_inner+0x1e10>
    6d3a:	785a      	ldrb	r2, [r3, #1]
    6d3c:	2a6c      	cmp	r2, #108	; 0x6c
    6d3e:	f041 80e9 	bne.w	7f14 <d_print_comp_inner+0x1e10>
    6d42:	789b      	ldrb	r3, [r3, #2]
    6d44:	2b00      	cmp	r3, #0
    6d46:	f041 80e5 	bne.w	7f14 <d_print_comp_inner+0x1e10>
    6d4a:	6933      	ldr	r3, [r6, #16]
    6d4c:	68da      	ldr	r2, [r3, #12]
    6d4e:	7811      	ldrb	r1, [r2, #0]
    6d50:	2903      	cmp	r1, #3
    6d52:	f001 8223 	beq.w	819c <d_print_comp_inner+0x2098>
    6d56:	2111      	movs	r1, #17
    6d58:	4620      	mov	r0, r4
    6d5a:	68da      	ldr	r2, [r3, #12]
    6d5c:	f002 fb5e 	bl	941c <d_print_subexpr>
    6d60:	68f2      	ldr	r2, [r6, #12]
    6d62:	68d3      	ldr	r3, [r2, #12]
    6d64:	681b      	ldr	r3, [r3, #0]
    6d66:	7819      	ldrb	r1, [r3, #0]
    6d68:	2969      	cmp	r1, #105	; 0x69
    6d6a:	f041 810e 	bne.w	7f8a <d_print_comp_inner+0x1e86>
    6d6e:	7858      	ldrb	r0, [r3, #1]
    6d70:	2878      	cmp	r0, #120	; 0x78
    6d72:	f041 810a 	bne.w	7f8a <d_print_comp_inner+0x1e86>
    6d76:	7898      	ldrb	r0, [r3, #2]
    6d78:	2800      	cmp	r0, #0
    6d7a:	f041 8106 	bne.w	7f8a <d_print_comp_inner+0x1e86>
    6d7e:	4620      	mov	r0, r4
    6d80:	215b      	movs	r1, #91	; 0x5b
    6d82:	f7fc ff27 	bl	3bd4 <d_append_char>
    6d86:	6933      	ldr	r3, [r6, #16]
    6d88:	4620      	mov	r0, r4
    6d8a:	2111      	movs	r1, #17
    6d8c:	691a      	ldr	r2, [r3, #16]
    6d8e:	f001 fa71 	bl	8274 <d_print_comp>
    6d92:	215d      	movs	r1, #93	; 0x5d
    6d94:	4620      	mov	r0, r4
    6d96:	f7fc ff1d 	bl	3bd4 <d_append_char>
    6d9a:	68f3      	ldr	r3, [r6, #12]
    6d9c:	781a      	ldrb	r2, [r3, #0]
    6d9e:	2a32      	cmp	r2, #50	; 0x32
    6da0:	f47f aa16 	bne.w	61d0 <d_print_comp_inner+0xcc>
    6da4:	68db      	ldr	r3, [r3, #12]
    6da6:	689a      	ldr	r2, [r3, #8]
    6da8:	2a01      	cmp	r2, #1
    6daa:	f47f aa11 	bne.w	61d0 <d_print_comp_inner+0xcc>
    6dae:	685b      	ldr	r3, [r3, #4]
    6db0:	781b      	ldrb	r3, [r3, #0]
    6db2:	2b3e      	cmp	r3, #62	; 0x3e
    6db4:	f47f aa0c 	bne.w	61d0 <d_print_comp_inner+0xcc>
    6db8:	2129      	movs	r1, #41	; 0x29
    6dba:	4620      	mov	r0, r4
    6dbc:	b013      	add	sp, #76	; 0x4c
    6dbe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6dc2:	f7fc bf07 	b.w	3bd4 <d_append_char>
    6dc6:	68f7      	ldr	r7, [r6, #12]
    6dc8:	2f00      	cmp	r7, #0
    6dca:	f040 85b2 	bne.w	7932 <d_print_comp_inner+0x182e>
    6dce:	4dcd      	ldr	r5, [pc, #820]	; (7104 <d_print_comp_inner+0x1000>)
    6dd0:	2674      	movs	r6, #116	; 0x74
    6dd2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6dd6:	f105 0803 	add.w	r8, r5, #3
    6dda:	e00b      	b.n	6df4 <d_print_comp_inner+0xcf0>
    6ddc:	460b      	mov	r3, r1
    6dde:	3101      	adds	r1, #1
    6de0:	45a8      	cmp	r8, r5
    6de2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6de6:	54e6      	strb	r6, [r4, r3]
    6de8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6dec:	f43f a9f0 	beq.w	61d0 <d_print_comp_inner+0xcc>
    6df0:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6df4:	29ff      	cmp	r1, #255	; 0xff
    6df6:	d1f1      	bne.n	6ddc <d_print_comp_inner+0xcd8>
    6df8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6dfc:	4620      	mov	r0, r4
    6dfe:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6e02:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    6e06:	4798      	blx	r3
    6e08:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6e0c:	2101      	movs	r1, #1
    6e0e:	3301      	adds	r3, #1
    6e10:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6e14:	2300      	movs	r3, #0
    6e16:	e7e3      	b.n	6de0 <d_print_comp_inner+0xcdc>
    6e18:	4fbb      	ldr	r7, [pc, #748]	; (7108 <d_print_comp_inner+0x1004>)
    6e1a:	2568      	movs	r5, #104	; 0x68
    6e1c:	f04f 0800 	mov.w	r8, #0
    6e20:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6e24:	f107 0910 	add.w	r9, r7, #16
    6e28:	e00b      	b.n	6e42 <d_print_comp_inner+0xd3e>
    6e2a:	460b      	mov	r3, r1
    6e2c:	3101      	adds	r1, #1
    6e2e:	45b9      	cmp	r9, r7
    6e30:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6e34:	54e5      	strb	r5, [r4, r3]
    6e36:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6e3a:	f43f a9eb 	beq.w	6214 <d_print_comp_inner+0x110>
    6e3e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6e42:	29ff      	cmp	r1, #255	; 0xff
    6e44:	d1f1      	bne.n	6e2a <d_print_comp_inner+0xd26>
    6e46:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6e4a:	4620      	mov	r0, r4
    6e4c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6e50:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6e54:	4798      	blx	r3
    6e56:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6e5a:	2101      	movs	r1, #1
    6e5c:	3301      	adds	r3, #1
    6e5e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6e62:	2300      	movs	r3, #0
    6e64:	e7e3      	b.n	6e2e <d_print_comp_inner+0xd2a>
    6e66:	4fa9      	ldr	r7, [pc, #676]	; (710c <d_print_comp_inner+0x1008>)
    6e68:	2572      	movs	r5, #114	; 0x72
    6e6a:	f04f 0800 	mov.w	r8, #0
    6e6e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6e72:	f107 0914 	add.w	r9, r7, #20
    6e76:	e00b      	b.n	6e90 <d_print_comp_inner+0xd8c>
    6e78:	460b      	mov	r3, r1
    6e7a:	3101      	adds	r1, #1
    6e7c:	45b9      	cmp	r9, r7
    6e7e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6e82:	54e5      	strb	r5, [r4, r3]
    6e84:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6e88:	f000 8389 	beq.w	759e <d_print_comp_inner+0x149a>
    6e8c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6e90:	29ff      	cmp	r1, #255	; 0xff
    6e92:	d1f1      	bne.n	6e78 <d_print_comp_inner+0xd74>
    6e94:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6e98:	4620      	mov	r0, r4
    6e9a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6e9e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6ea2:	4798      	blx	r3
    6ea4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6ea8:	2101      	movs	r1, #1
    6eaa:	3301      	adds	r3, #1
    6eac:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6eb0:	2300      	movs	r3, #0
    6eb2:	e7e3      	b.n	6e7c <d_print_comp_inner+0xd78>
    6eb4:	4f96      	ldr	r7, [pc, #600]	; (7110 <d_print_comp_inner+0x100c>)
    6eb6:	2554      	movs	r5, #84	; 0x54
    6eb8:	f04f 0800 	mov.w	r8, #0
    6ebc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6ec0:	f107 0918 	add.w	r9, r7, #24
    6ec4:	e00b      	b.n	6ede <d_print_comp_inner+0xdda>
    6ec6:	460b      	mov	r3, r1
    6ec8:	3101      	adds	r1, #1
    6eca:	45b9      	cmp	r9, r7
    6ecc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6ed0:	54e5      	strb	r5, [r4, r3]
    6ed2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6ed6:	f43f a99d 	beq.w	6214 <d_print_comp_inner+0x110>
    6eda:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6ede:	29ff      	cmp	r1, #255	; 0xff
    6ee0:	d1f1      	bne.n	6ec6 <d_print_comp_inner+0xdc2>
    6ee2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6ee6:	4620      	mov	r0, r4
    6ee8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6eec:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6ef0:	4798      	blx	r3
    6ef2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6ef6:	2101      	movs	r1, #1
    6ef8:	3301      	adds	r3, #1
    6efa:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6efe:	2300      	movs	r3, #0
    6f00:	e7e3      	b.n	6eca <d_print_comp_inner+0xdc6>
    6f02:	4f84      	ldr	r7, [pc, #528]	; (7114 <d_print_comp_inner+0x1010>)
    6f04:	2554      	movs	r5, #84	; 0x54
    6f06:	f04f 0800 	mov.w	r8, #0
    6f0a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6f0e:	f107 0915 	add.w	r9, r7, #21
    6f12:	e00b      	b.n	6f2c <d_print_comp_inner+0xe28>
    6f14:	460b      	mov	r3, r1
    6f16:	3101      	adds	r1, #1
    6f18:	454f      	cmp	r7, r9
    6f1a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6f1e:	54e5      	strb	r5, [r4, r3]
    6f20:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6f24:	f43f a976 	beq.w	6214 <d_print_comp_inner+0x110>
    6f28:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6f2c:	29ff      	cmp	r1, #255	; 0xff
    6f2e:	d1f1      	bne.n	6f14 <d_print_comp_inner+0xe10>
    6f30:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6f34:	4620      	mov	r0, r4
    6f36:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6f3a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6f3e:	4798      	blx	r3
    6f40:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6f44:	2101      	movs	r1, #1
    6f46:	3301      	adds	r3, #1
    6f48:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6f4c:	2300      	movs	r3, #0
    6f4e:	e7e3      	b.n	6f18 <d_print_comp_inner+0xe14>
    6f50:	2300      	movs	r3, #0
    6f52:	f8d0 7148 	ldr.w	r7, [r0, #328]	; 0x148
    6f56:	f8d0 8114 	ldr.w	r8, [r0, #276]	; 0x114
    6f5a:	68f2      	ldr	r2, [r6, #12]
    6f5c:	2111      	movs	r1, #17
    6f5e:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
    6f62:	f8c0 6148 	str.w	r6, [r0, #328]	; 0x148
    6f66:	f001 f985 	bl	8274 <d_print_comp>
    6f6a:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    6f6e:	2b3c      	cmp	r3, #60	; 0x3c
    6f70:	f000 872c 	beq.w	7dcc <d_print_comp_inner+0x1cc8>
    6f74:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6f78:	29ff      	cmp	r1, #255	; 0xff
    6f7a:	f000 8717 	beq.w	7dac <d_print_comp_inner+0x1ca8>
    6f7e:	1c4b      	adds	r3, r1, #1
    6f80:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    6f84:	233c      	movs	r3, #60	; 0x3c
    6f86:	5463      	strb	r3, [r4, r1]
    6f88:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6f8c:	2111      	movs	r1, #17
    6f8e:	4620      	mov	r0, r4
    6f90:	6932      	ldr	r2, [r6, #16]
    6f92:	f001 f96f 	bl	8274 <d_print_comp>
    6f96:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    6f9a:	2b3e      	cmp	r3, #62	; 0x3e
    6f9c:	f000 8700 	beq.w	7da0 <d_print_comp_inner+0x1c9c>
    6fa0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6fa4:	29ff      	cmp	r1, #255	; 0xff
    6fa6:	f000 86eb 	beq.w	7d80 <d_print_comp_inner+0x1c7c>
    6faa:	1c4b      	adds	r3, r1, #1
    6fac:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    6fb0:	233e      	movs	r3, #62	; 0x3e
    6fb2:	5463      	strb	r3, [r4, r1]
    6fb4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6fb8:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
    6fbc:	f8c4 7148 	str.w	r7, [r4, #328]	; 0x148
    6fc0:	f7ff b906 	b.w	61d0 <d_print_comp_inner+0xcc>
    6fc4:	f9b6 3012 	ldrsh.w	r3, [r6, #18]
    6fc8:	2b00      	cmp	r3, #0
    6fca:	f040 8629 	bne.w	7c20 <d_print_comp_inner+0x1b1c>
    6fce:	68f2      	ldr	r2, [r6, #12]
    6fd0:	4b51      	ldr	r3, [pc, #324]	; (7118 <d_print_comp_inner+0x1014>)
    6fd2:	68d1      	ldr	r1, [r2, #12]
    6fd4:	4299      	cmp	r1, r3
    6fd6:	f000 855d 	beq.w	7a94 <d_print_comp_inner+0x1990>
    6fda:	2111      	movs	r1, #17
    6fdc:	4620      	mov	r0, r4
    6fde:	f001 f949 	bl	8274 <d_print_comp>
    6fe2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    6fe6:	2bff      	cmp	r3, #255	; 0xff
    6fe8:	f001 802b 	beq.w	8042 <d_print_comp_inner+0x1f3e>
    6fec:	2220      	movs	r2, #32
    6fee:	1c59      	adds	r1, r3, #1
    6ff0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6ff4:	54e2      	strb	r2, [r4, r3]
    6ff6:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    6ffa:	f9b6 8010 	ldrsh.w	r8, [r6, #16]
    6ffe:	f1b8 0f00 	cmp.w	r8, #0
    7002:	f040 8472 	bne.w	78ea <d_print_comp_inner+0x17e6>
    7006:	4e45      	ldr	r6, [pc, #276]	; (711c <d_print_comp_inner+0x1018>)
    7008:	255f      	movs	r5, #95	; 0x5f
    700a:	1d77      	adds	r7, r6, #5
    700c:	e00b      	b.n	7026 <d_print_comp_inner+0xf22>
    700e:	460b      	mov	r3, r1
    7010:	3101      	adds	r1, #1
    7012:	42b7      	cmp	r7, r6
    7014:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7018:	54e5      	strb	r5, [r4, r3]
    701a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    701e:	f43f a8d7 	beq.w	61d0 <d_print_comp_inner+0xcc>
    7022:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7026:	29ff      	cmp	r1, #255	; 0xff
    7028:	d1f1      	bne.n	700e <d_print_comp_inner+0xf0a>
    702a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    702e:	4620      	mov	r0, r4
    7030:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7034:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7038:	4798      	blx	r3
    703a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    703e:	2101      	movs	r1, #1
    7040:	3301      	adds	r3, #1
    7042:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7046:	2300      	movs	r3, #0
    7048:	e7e3      	b.n	7012 <d_print_comp_inner+0xf0e>
    704a:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
    704e:	2b00      	cmp	r3, #0
    7050:	f000 84d4 	beq.w	79fc <d_print_comp_inner+0x18f8>
    7054:	4d32      	ldr	r5, [pc, #200]	; (7120 <d_print_comp_inner+0x101c>)
    7056:	2761      	movs	r7, #97	; 0x61
    7058:	f04f 0800 	mov.w	r8, #0
    705c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7060:	f105 0904 	add.w	r9, r5, #4
    7064:	e00b      	b.n	707e <d_print_comp_inner+0xf7a>
    7066:	460b      	mov	r3, r1
    7068:	3101      	adds	r1, #1
    706a:	45a9      	cmp	r9, r5
    706c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7070:	54e7      	strb	r7, [r4, r3]
    7072:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    7076:	f000 84d9 	beq.w	7a2c <d_print_comp_inner+0x1928>
    707a:	f815 7f01 	ldrb.w	r7, [r5, #1]!
    707e:	29ff      	cmp	r1, #255	; 0xff
    7080:	d1f1      	bne.n	7066 <d_print_comp_inner+0xf62>
    7082:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7086:	4620      	mov	r0, r4
    7088:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    708c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7090:	4798      	blx	r3
    7092:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7096:	2101      	movs	r1, #1
    7098:	3301      	adds	r3, #1
    709a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    709e:	2300      	movs	r3, #0
    70a0:	e7e3      	b.n	706a <d_print_comp_inner+0xf66>
    70a2:	4f20      	ldr	r7, [pc, #128]	; (7124 <d_print_comp_inner+0x1020>)
    70a4:	256a      	movs	r5, #106	; 0x6a
    70a6:	f04f 0800 	mov.w	r8, #0
    70aa:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    70ae:	f107 090d 	add.w	r9, r7, #13
    70b2:	e00b      	b.n	70cc <d_print_comp_inner+0xfc8>
    70b4:	460b      	mov	r3, r1
    70b6:	3101      	adds	r1, #1
    70b8:	45b9      	cmp	r9, r7
    70ba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    70be:	54e5      	strb	r5, [r4, r3]
    70c0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    70c4:	f43f a8a6 	beq.w	6214 <d_print_comp_inner+0x110>
    70c8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    70cc:	29ff      	cmp	r1, #255	; 0xff
    70ce:	d1f1      	bne.n	70b4 <d_print_comp_inner+0xfb0>
    70d0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    70d4:	4620      	mov	r0, r4
    70d6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    70da:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    70de:	4798      	blx	r3
    70e0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    70e4:	2101      	movs	r1, #1
    70e6:	3301      	adds	r3, #1
    70e8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    70ec:	2300      	movs	r3, #0
    70ee:	e7e3      	b.n	70b8 <d_print_comp_inner+0xfb4>
    70f0:	4f0d      	ldr	r7, [pc, #52]	; (7128 <d_print_comp_inner+0x1024>)
    70f2:	2567      	movs	r5, #103	; 0x67
    70f4:	f04f 0800 	mov.w	r8, #0
    70f8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    70fc:	f107 091c 	add.w	r9, r7, #28
    7100:	e020      	b.n	7144 <d_print_comp_inner+0x1040>
    7102:	bf00      	nop
    7104:	00019188 	.word	0x00019188
    7108:	000190d4 	.word	0x000190d4
    710c:	000190bc 	.word	0x000190bc
    7110:	000190a0 	.word	0x000190a0
    7114:	00019088 	.word	0x00019088
    7118:	0001990c 	.word	0x0001990c
    711c:	0001910c 	.word	0x0001910c
    7120:	00018f94 	.word	0x00018f94
    7124:	00019168 	.word	0x00019168
    7128:	00019198 	.word	0x00019198
    712c:	460b      	mov	r3, r1
    712e:	3101      	adds	r1, #1
    7130:	45b9      	cmp	r9, r7
    7132:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7136:	54e5      	strb	r5, [r4, r3]
    7138:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    713c:	f43f a86a 	beq.w	6214 <d_print_comp_inner+0x110>
    7140:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7144:	29ff      	cmp	r1, #255	; 0xff
    7146:	d1f1      	bne.n	712c <d_print_comp_inner+0x1028>
    7148:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    714c:	4620      	mov	r0, r4
    714e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7152:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7156:	4798      	blx	r3
    7158:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    715c:	2101      	movs	r1, #1
    715e:	3301      	adds	r3, #1
    7160:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7164:	2300      	movs	r3, #0
    7166:	e7e3      	b.n	7130 <d_print_comp_inner+0x102c>
    7168:	4fd4      	ldr	r7, [pc, #848]	; (74bc <d_print_comp_inner+0x13b8>)
    716a:	2564      	movs	r5, #100	; 0x64
    716c:	f04f 0800 	mov.w	r8, #0
    7170:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7174:	f107 0909 	add.w	r9, r7, #9
    7178:	e00b      	b.n	7192 <d_print_comp_inner+0x108e>
    717a:	460b      	mov	r3, r1
    717c:	3101      	adds	r1, #1
    717e:	45b9      	cmp	r9, r7
    7180:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7184:	54e5      	strb	r5, [r4, r3]
    7186:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    718a:	f000 8322 	beq.w	77d2 <d_print_comp_inner+0x16ce>
    718e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7192:	29ff      	cmp	r1, #255	; 0xff
    7194:	d1f1      	bne.n	717a <d_print_comp_inner+0x1076>
    7196:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    719a:	4620      	mov	r0, r4
    719c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    71a0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    71a4:	4798      	blx	r3
    71a6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    71aa:	2101      	movs	r1, #1
    71ac:	3301      	adds	r3, #1
    71ae:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    71b2:	2300      	movs	r3, #0
    71b4:	e7e3      	b.n	717e <d_print_comp_inner+0x107a>
    71b6:	4fc2      	ldr	r7, [pc, #776]	; (74c0 <d_print_comp_inner+0x13bc>)
    71b8:	257b      	movs	r5, #123	; 0x7b
    71ba:	f04f 0800 	mov.w	r8, #0
    71be:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    71c2:	f107 0907 	add.w	r9, r7, #7
    71c6:	e00b      	b.n	71e0 <d_print_comp_inner+0x10dc>
    71c8:	460b      	mov	r3, r1
    71ca:	3101      	adds	r1, #1
    71cc:	45b9      	cmp	r9, r7
    71ce:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    71d2:	54e5      	strb	r5, [r4, r3]
    71d4:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    71d8:	f000 828d 	beq.w	76f6 <d_print_comp_inner+0x15f2>
    71dc:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    71e0:	29ff      	cmp	r1, #255	; 0xff
    71e2:	d1f1      	bne.n	71c8 <d_print_comp_inner+0x10c4>
    71e4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    71e8:	4620      	mov	r0, r4
    71ea:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    71ee:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    71f2:	4798      	blx	r3
    71f4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    71f8:	2101      	movs	r1, #1
    71fa:	3301      	adds	r3, #1
    71fc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7200:	2300      	movs	r3, #0
    7202:	e7e3      	b.n	71cc <d_print_comp_inner+0x10c8>
    7204:	68f2      	ldr	r2, [r6, #12]
    7206:	49af      	ldr	r1, [pc, #700]	; (74c4 <d_print_comp_inner+0x13c0>)
    7208:	a802      	add	r0, sp, #8
    720a:	f006 f893 	bl	d334 <sprintf>
    720e:	a802      	add	r0, sp, #8
    7210:	f006 f990 	bl	d534 <strlen>
    7214:	2800      	cmp	r0, #0
    7216:	f43e afdb 	beq.w	61d0 <d_print_comp_inner+0xcc>
    721a:	ad02      	add	r5, sp, #8
    721c:	f04f 0800 	mov.w	r8, #0
    7220:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7224:	182f      	adds	r7, r5, r0
    7226:	e009      	b.n	723c <d_print_comp_inner+0x1138>
    7228:	460b      	mov	r3, r1
    722a:	3101      	adds	r1, #1
    722c:	42af      	cmp	r7, r5
    722e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7232:	54e6      	strb	r6, [r4, r3]
    7234:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7238:	f43e afca 	beq.w	61d0 <d_print_comp_inner+0xcc>
    723c:	29ff      	cmp	r1, #255	; 0xff
    723e:	f815 6b01 	ldrb.w	r6, [r5], #1
    7242:	d1f1      	bne.n	7228 <d_print_comp_inner+0x1124>
    7244:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7248:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    724c:	4620      	mov	r0, r4
    724e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7252:	4798      	blx	r3
    7254:	2101      	movs	r1, #1
    7256:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    725a:	2300      	movs	r3, #0
    725c:	440a      	add	r2, r1
    725e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7262:	e7e3      	b.n	722c <d_print_comp_inner+0x1128>
    7264:	4f98      	ldr	r7, [pc, #608]	; (74c8 <d_print_comp_inner+0x13c4>)
    7266:	256f      	movs	r5, #111	; 0x6f
    7268:	f04f 0800 	mov.w	r8, #0
    726c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7270:	f107 0908 	add.w	r9, r7, #8
    7274:	e00b      	b.n	728e <d_print_comp_inner+0x118a>
    7276:	460b      	mov	r3, r1
    7278:	3101      	adds	r1, #1
    727a:	454f      	cmp	r7, r9
    727c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7280:	54e5      	strb	r5, [r4, r3]
    7282:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7286:	f000 829c 	beq.w	77c2 <d_print_comp_inner+0x16be>
    728a:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    728e:	29ff      	cmp	r1, #255	; 0xff
    7290:	d1f1      	bne.n	7276 <d_print_comp_inner+0x1172>
    7292:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7296:	4620      	mov	r0, r4
    7298:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    729c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    72a0:	4798      	blx	r3
    72a2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    72a6:	2101      	movs	r1, #1
    72a8:	3301      	adds	r3, #1
    72aa:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    72ae:	2300      	movs	r3, #0
    72b0:	e7e3      	b.n	727a <d_print_comp_inner+0x1176>
    72b2:	4f85      	ldr	r7, [pc, #532]	; (74c8 <d_print_comp_inner+0x13c4>)
    72b4:	256f      	movs	r5, #111	; 0x6f
    72b6:	f04f 0800 	mov.w	r8, #0
    72ba:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    72be:	f107 0908 	add.w	r9, r7, #8
    72c2:	e00b      	b.n	72dc <d_print_comp_inner+0x11d8>
    72c4:	460b      	mov	r3, r1
    72c6:	3101      	adds	r1, #1
    72c8:	454f      	cmp	r7, r9
    72ca:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    72ce:	54e5      	strb	r5, [r4, r3]
    72d0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    72d4:	f43f a886 	beq.w	63e4 <d_print_comp_inner+0x2e0>
    72d8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    72dc:	29ff      	cmp	r1, #255	; 0xff
    72de:	d1f1      	bne.n	72c4 <d_print_comp_inner+0x11c0>
    72e0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    72e4:	4620      	mov	r0, r4
    72e6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    72ea:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    72ee:	4798      	blx	r3
    72f0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    72f4:	2101      	movs	r1, #1
    72f6:	3301      	adds	r3, #1
    72f8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    72fc:	2300      	movs	r3, #0
    72fe:	e7e3      	b.n	72c8 <d_print_comp_inner+0x11c4>
    7300:	68f7      	ldr	r7, [r6, #12]
    7302:	4e72      	ldr	r6, [pc, #456]	; (74cc <d_print_comp_inner+0x13c8>)
    7304:	256f      	movs	r5, #111	; 0x6f
    7306:	f04f 0900 	mov.w	r9, #0
    730a:	f8d7 8008 	ldr.w	r8, [r7, #8]
    730e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7312:	f106 0a07 	add.w	sl, r6, #7
    7316:	e00b      	b.n	7330 <d_print_comp_inner+0x122c>
    7318:	460b      	mov	r3, r1
    731a:	3101      	adds	r1, #1
    731c:	45b2      	cmp	sl, r6
    731e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7322:	54e5      	strb	r5, [r4, r3]
    7324:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7328:	f000 81b1 	beq.w	768e <d_print_comp_inner+0x158a>
    732c:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7330:	29ff      	cmp	r1, #255	; 0xff
    7332:	d1f1      	bne.n	7318 <d_print_comp_inner+0x1214>
    7334:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7338:	4620      	mov	r0, r4
    733a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    733e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    7342:	4798      	blx	r3
    7344:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7348:	2101      	movs	r1, #1
    734a:	3301      	adds	r3, #1
    734c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7350:	2300      	movs	r3, #0
    7352:	e7e3      	b.n	731c <d_print_comp_inner+0x1218>
    7354:	e9d6 2603 	ldrd	r2, r6, [r6, #12]
    7358:	b112      	cbz	r2, 7360 <d_print_comp_inner+0x125c>
    735a:	2111      	movs	r1, #17
    735c:	f000 ff8a 	bl	8274 <d_print_comp>
    7360:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    7364:	2bff      	cmp	r3, #255	; 0xff
    7366:	f000 84e6 	beq.w	7d36 <d_print_comp_inner+0x1c32>
    736a:	1c5a      	adds	r2, r3, #1
    736c:	257b      	movs	r5, #123	; 0x7b
    736e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7372:	2111      	movs	r1, #17
    7374:	54e5      	strb	r5, [r4, r3]
    7376:	4632      	mov	r2, r6
    7378:	4620      	mov	r0, r4
    737a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    737e:	f000 ff79 	bl	8274 <d_print_comp>
    7382:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7386:	29ff      	cmp	r1, #255	; 0xff
    7388:	f000 8168 	beq.w	765c <d_print_comp_inner+0x1558>
    738c:	1c4a      	adds	r2, r1, #1
    738e:	237d      	movs	r3, #125	; 0x7d
    7390:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7394:	5463      	strb	r3, [r4, r1]
    7396:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    739a:	f7fe bf19 	b.w	61d0 <d_print_comp_inner+0xcc>
    739e:	e9d6 7503 	ldrd	r7, r5, [r6, #12]
    73a2:	783b      	ldrb	r3, [r7, #0]
    73a4:	2b32      	cmp	r3, #50	; 0x32
    73a6:	f000 8388 	beq.w	7aba <d_print_comp_inner+0x19b6>
    73aa:	2b34      	cmp	r3, #52	; 0x34
    73ac:	f040 8754 	bne.w	8258 <d_print_comp_inner+0x2154>
    73b0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    73b4:	2bff      	cmp	r3, #255	; 0xff
    73b6:	f000 86be 	beq.w	8136 <d_print_comp_inner+0x2032>
    73ba:	1c5a      	adds	r2, r3, #1
    73bc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    73c0:	2228      	movs	r2, #40	; 0x28
    73c2:	54e2      	strb	r2, [r4, r3]
    73c4:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    73c8:	2111      	movs	r1, #17
    73ca:	4620      	mov	r0, r4
    73cc:	68fa      	ldr	r2, [r7, #12]
    73ce:	f000 ff51 	bl	8274 <d_print_comp>
    73d2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    73d6:	29ff      	cmp	r1, #255	; 0xff
    73d8:	f000 869c 	beq.w	8114 <d_print_comp_inner+0x2010>
    73dc:	2329      	movs	r3, #41	; 0x29
    73de:	1c4a      	adds	r2, r1, #1
    73e0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    73e4:	5463      	strb	r3, [r4, r1]
    73e6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    73ea:	f7ff b8bd 	b.w	6568 <d_print_comp_inner+0x464>
    73ee:	2111      	movs	r1, #17
    73f0:	68f2      	ldr	r2, [r6, #12]
    73f2:	b013      	add	sp, #76	; 0x4c
    73f4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    73f8:	f001 be2e 	b.w	9058 <d_print_expr_op>
    73fc:	4f34      	ldr	r7, [pc, #208]	; (74d0 <d_print_comp_inner+0x13cc>)
    73fe:	2567      	movs	r5, #103	; 0x67
    7400:	f04f 0800 	mov.w	r8, #0
    7404:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7408:	f107 091b 	add.w	r9, r7, #27
    740c:	e00b      	b.n	7426 <d_print_comp_inner+0x1322>
    740e:	460b      	mov	r3, r1
    7410:	3101      	adds	r1, #1
    7412:	45b9      	cmp	r9, r7
    7414:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7418:	54e5      	strb	r5, [r4, r3]
    741a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    741e:	f43e aef9 	beq.w	6214 <d_print_comp_inner+0x110>
    7422:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7426:	29ff      	cmp	r1, #255	; 0xff
    7428:	d1f1      	bne.n	740e <d_print_comp_inner+0x130a>
    742a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    742e:	4620      	mov	r0, r4
    7430:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7434:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7438:	4798      	blx	r3
    743a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    743e:	2101      	movs	r1, #1
    7440:	3301      	adds	r3, #1
    7442:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7446:	2300      	movs	r3, #0
    7448:	e7e3      	b.n	7412 <d_print_comp_inner+0x130e>
    744a:	68f2      	ldr	r2, [r6, #12]
    744c:	e9d2 5300 	ldrd	r5, r3, [r2]
    7450:	2b00      	cmp	r3, #0
    7452:	f43e aebd 	beq.w	61d0 <d_print_comp_inner+0xcc>
    7456:	442b      	add	r3, r5
    7458:	f04f 0800 	mov.w	r8, #0
    745c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7460:	3d01      	subs	r5, #1
    7462:	1e5f      	subs	r7, r3, #1
    7464:	e009      	b.n	747a <d_print_comp_inner+0x1376>
    7466:	460b      	mov	r3, r1
    7468:	3101      	adds	r1, #1
    746a:	42af      	cmp	r7, r5
    746c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7470:	54e6      	strb	r6, [r4, r3]
    7472:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7476:	f43e aeab 	beq.w	61d0 <d_print_comp_inner+0xcc>
    747a:	29ff      	cmp	r1, #255	; 0xff
    747c:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    7480:	d1f1      	bne.n	7466 <d_print_comp_inner+0x1362>
    7482:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7486:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    748a:	4620      	mov	r0, r4
    748c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7490:	4798      	blx	r3
    7492:	2101      	movs	r1, #1
    7494:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7498:	2300      	movs	r3, #0
    749a:	440a      	add	r2, r1
    749c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    74a0:	e7e3      	b.n	746a <d_print_comp_inner+0x1366>
    74a2:	e9d6 5303 	ldrd	r5, r3, [r6, #12]
    74a6:	2b00      	cmp	r3, #0
    74a8:	f43e ae92 	beq.w	61d0 <d_print_comp_inner+0xcc>
    74ac:	442b      	add	r3, r5
    74ae:	f04f 0800 	mov.w	r8, #0
    74b2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    74b6:	3d01      	subs	r5, #1
    74b8:	1e5f      	subs	r7, r3, #1
    74ba:	e015      	b.n	74e8 <d_print_comp_inner+0x13e4>
    74bc:	00019178 	.word	0x00019178
    74c0:	000191d8 	.word	0x000191d8
    74c4:	00018f0c 	.word	0x00018f0c
    74c8:	0001912c 	.word	0x0001912c
    74cc:	00019120 	.word	0x00019120
    74d0:	000191b8 	.word	0x000191b8
    74d4:	460b      	mov	r3, r1
    74d6:	3101      	adds	r1, #1
    74d8:	42af      	cmp	r7, r5
    74da:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    74de:	54e6      	strb	r6, [r4, r3]
    74e0:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    74e4:	f43e ae74 	beq.w	61d0 <d_print_comp_inner+0xcc>
    74e8:	29ff      	cmp	r1, #255	; 0xff
    74ea:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    74ee:	d1f1      	bne.n	74d4 <d_print_comp_inner+0x13d0>
    74f0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    74f4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    74f8:	4620      	mov	r0, r4
    74fa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    74fe:	4798      	blx	r3
    7500:	2101      	movs	r1, #1
    7502:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7506:	2300      	movs	r3, #0
    7508:	440a      	add	r2, r1
    750a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    750e:	e7e3      	b.n	74d8 <d_print_comp_inner+0x13d4>
    7510:	2111      	movs	r1, #17
    7512:	4620      	mov	r0, r4
    7514:	6932      	ldr	r2, [r6, #16]
    7516:	f000 fead 	bl	8274 <d_print_comp>
    751a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    751e:	29ff      	cmp	r1, #255	; 0xff
    7520:	f000 82bc 	beq.w	7a9c <d_print_comp_inner+0x1998>
    7524:	1c4a      	adds	r2, r1, #1
    7526:	235d      	movs	r3, #93	; 0x5d
    7528:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    752c:	5463      	strb	r3, [r4, r1]
    752e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7532:	f7fe be4d 	b.w	61d0 <d_print_comp_inner+0xcc>
    7536:	f1be 0f01 	cmp.w	lr, #1
    753a:	f240 818f 	bls.w	785c <d_print_comp_inner+0x1758>
    753e:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    7542:	f7fe bfc3 	b.w	64cc <d_print_comp_inner+0x3c8>
    7546:	4fd1      	ldr	r7, [pc, #836]	; (788c <d_print_comp_inner+0x1788>)
    7548:	2111      	movs	r1, #17
    754a:	4620      	mov	r0, r4
    754c:	68f2      	ldr	r2, [r6, #12]
    754e:	f000 fe91 	bl	8274 <d_print_comp>
    7552:	252d      	movs	r5, #45	; 0x2d
    7554:	f04f 0800 	mov.w	r8, #0
    7558:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    755c:	f107 0903 	add.w	r9, r7, #3
    7560:	e00b      	b.n	757a <d_print_comp_inner+0x1476>
    7562:	460b      	mov	r3, r1
    7564:	3101      	adds	r1, #1
    7566:	454f      	cmp	r7, r9
    7568:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    756c:	54e5      	strb	r5, [r4, r3]
    756e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7572:	f43e af37 	beq.w	63e4 <d_print_comp_inner+0x2e0>
    7576:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    757a:	29ff      	cmp	r1, #255	; 0xff
    757c:	d1f1      	bne.n	7562 <d_print_comp_inner+0x145e>
    757e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7582:	4620      	mov	r0, r4
    7584:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7588:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    758c:	4798      	blx	r3
    758e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7592:	2101      	movs	r1, #1
    7594:	3301      	adds	r3, #1
    7596:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    759a:	2300      	movs	r3, #0
    759c:	e7e3      	b.n	7566 <d_print_comp_inner+0x1462>
    759e:	4fbc      	ldr	r7, [pc, #752]	; (7890 <d_print_comp_inner+0x178c>)
    75a0:	2111      	movs	r1, #17
    75a2:	4620      	mov	r0, r4
    75a4:	6932      	ldr	r2, [r6, #16]
    75a6:	f000 fe65 	bl	8274 <d_print_comp>
    75aa:	2520      	movs	r5, #32
    75ac:	f04f 0800 	mov.w	r8, #0
    75b0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    75b4:	f107 0904 	add.w	r9, r7, #4
    75b8:	e00b      	b.n	75d2 <d_print_comp_inner+0x14ce>
    75ba:	460b      	mov	r3, r1
    75bc:	3101      	adds	r1, #1
    75be:	454f      	cmp	r7, r9
    75c0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    75c4:	54e5      	strb	r5, [r4, r3]
    75c6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    75ca:	f43e ae23 	beq.w	6214 <d_print_comp_inner+0x110>
    75ce:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    75d2:	29ff      	cmp	r1, #255	; 0xff
    75d4:	d1f1      	bne.n	75ba <d_print_comp_inner+0x14b6>
    75d6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    75da:	4620      	mov	r0, r4
    75dc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    75e0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    75e4:	4798      	blx	r3
    75e6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    75ea:	2101      	movs	r1, #1
    75ec:	3301      	adds	r3, #1
    75ee:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    75f2:	2300      	movs	r3, #0
    75f4:	e7e3      	b.n	75be <d_print_comp_inner+0x14ba>
    75f6:	68f2      	ldr	r2, [r6, #12]
    75f8:	49a6      	ldr	r1, [pc, #664]	; (7894 <d_print_comp_inner+0x1790>)
    75fa:	3201      	adds	r2, #1
    75fc:	a802      	add	r0, sp, #8
    75fe:	f005 fe99 	bl	d334 <sprintf>
    7602:	a802      	add	r0, sp, #8
    7604:	f005 ff96 	bl	d534 <strlen>
    7608:	b318      	cbz	r0, 7652 <d_print_comp_inner+0x154e>
    760a:	ad02      	add	r5, sp, #8
    760c:	f04f 0800 	mov.w	r8, #0
    7610:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7614:	182f      	adds	r7, r5, r0
    7616:	e008      	b.n	762a <d_print_comp_inner+0x1526>
    7618:	460b      	mov	r3, r1
    761a:	3101      	adds	r1, #1
    761c:	42af      	cmp	r7, r5
    761e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7622:	54e6      	strb	r6, [r4, r3]
    7624:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7628:	d015      	beq.n	7656 <d_print_comp_inner+0x1552>
    762a:	29ff      	cmp	r1, #255	; 0xff
    762c:	f815 6b01 	ldrb.w	r6, [r5], #1
    7630:	d1f2      	bne.n	7618 <d_print_comp_inner+0x1514>
    7632:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7636:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    763a:	4620      	mov	r0, r4
    763c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7640:	4798      	blx	r3
    7642:	2101      	movs	r1, #1
    7644:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7648:	2300      	movs	r3, #0
    764a:	440a      	add	r2, r1
    764c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7650:	e7e4      	b.n	761c <d_print_comp_inner+0x1518>
    7652:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7656:	29ff      	cmp	r1, #255	; 0xff
    7658:	f47f ae98 	bne.w	738c <d_print_comp_inner+0x1288>
    765c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7660:	2500      	movs	r5, #0
    7662:	4620      	mov	r0, r4
    7664:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7668:	4798      	blx	r3
    766a:	2201      	movs	r2, #1
    766c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7670:	4629      	mov	r1, r5
    7672:	4413      	add	r3, r2
    7674:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7678:	e689      	b.n	738e <d_print_comp_inner+0x128a>
    767a:	6937      	ldr	r7, [r6, #16]
    767c:	783b      	ldrb	r3, [r7, #0]
    767e:	2b47      	cmp	r3, #71	; 0x47
    7680:	f000 8320 	beq.w	7cc4 <d_print_comp_inner+0x1bc0>
    7684:	463a      	mov	r2, r7
    7686:	2111      	movs	r1, #17
    7688:	4620      	mov	r0, r4
    768a:	f7fe bdc6 	b.w	621a <d_print_comp_inner+0x116>
    768e:	687d      	ldr	r5, [r7, #4]
    7690:	782b      	ldrb	r3, [r5, #0]
    7692:	3b61      	subs	r3, #97	; 0x61
    7694:	2b19      	cmp	r3, #25
    7696:	f240 82cf 	bls.w	7c38 <d_print_comp_inner+0x1b34>
    769a:	f108 37ff 	add.w	r7, r8, #4294967295	; 0xffffffff
    769e:	5deb      	ldrb	r3, [r5, r7]
    76a0:	2b20      	cmp	r3, #32
    76a2:	bf18      	it	ne
    76a4:	4647      	movne	r7, r8
    76a6:	2f00      	cmp	r7, #0
    76a8:	f43e ad92 	beq.w	61d0 <d_print_comp_inner+0xcc>
    76ac:	3d01      	subs	r5, #1
    76ae:	f04f 0800 	mov.w	r8, #0
    76b2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    76b6:	442f      	add	r7, r5
    76b8:	e009      	b.n	76ce <d_print_comp_inner+0x15ca>
    76ba:	460b      	mov	r3, r1
    76bc:	3101      	adds	r1, #1
    76be:	42af      	cmp	r7, r5
    76c0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    76c4:	54e6      	strb	r6, [r4, r3]
    76c6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    76ca:	f43e ad81 	beq.w	61d0 <d_print_comp_inner+0xcc>
    76ce:	29ff      	cmp	r1, #255	; 0xff
    76d0:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    76d4:	d1f1      	bne.n	76ba <d_print_comp_inner+0x15b6>
    76d6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    76da:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    76de:	4620      	mov	r0, r4
    76e0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    76e4:	4798      	blx	r3
    76e6:	2101      	movs	r1, #1
    76e8:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    76ec:	2300      	movs	r3, #0
    76ee:	440a      	add	r2, r1
    76f0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    76f4:	e7e3      	b.n	76be <d_print_comp_inner+0x15ba>
    76f6:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
    76fa:	2111      	movs	r1, #17
    76fc:	3301      	adds	r3, #1
    76fe:	68f2      	ldr	r2, [r6, #12]
    7700:	4620      	mov	r0, r4
    7702:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    7706:	f000 fdb5 	bl	8274 <d_print_comp>
    770a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
    770e:	4f62      	ldr	r7, [pc, #392]	; (7898 <d_print_comp_inner+0x1794>)
    7710:	3b01      	subs	r3, #1
    7712:	2529      	movs	r5, #41	; 0x29
    7714:	f04f 0800 	mov.w	r8, #0
    7718:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    771c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    7720:	f107 0901 	add.w	r9, r7, #1
    7724:	e00a      	b.n	773c <d_print_comp_inner+0x1638>
    7726:	460b      	mov	r3, r1
    7728:	3101      	adds	r1, #1
    772a:	45b9      	cmp	r9, r7
    772c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7730:	54e5      	strb	r5, [r4, r3]
    7732:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7736:	d013      	beq.n	7760 <d_print_comp_inner+0x165c>
    7738:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    773c:	29ff      	cmp	r1, #255	; 0xff
    773e:	d1f2      	bne.n	7726 <d_print_comp_inner+0x1622>
    7740:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7744:	4620      	mov	r0, r4
    7746:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    774a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    774e:	4798      	blx	r3
    7750:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7754:	2101      	movs	r1, #1
    7756:	3301      	adds	r3, #1
    7758:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    775c:	2300      	movs	r3, #0
    775e:	e7e4      	b.n	772a <d_print_comp_inner+0x1626>
    7760:	6932      	ldr	r2, [r6, #16]
    7762:	494c      	ldr	r1, [pc, #304]	; (7894 <d_print_comp_inner+0x1790>)
    7764:	3201      	adds	r2, #1
    7766:	a802      	add	r0, sp, #8
    7768:	f005 fde4 	bl	d334 <sprintf>
    776c:	a802      	add	r0, sp, #8
    776e:	f005 fee1 	bl	d534 <strlen>
    7772:	2800      	cmp	r0, #0
    7774:	f43f af6d 	beq.w	7652 <d_print_comp_inner+0x154e>
    7778:	ad02      	add	r5, sp, #8
    777a:	f04f 0800 	mov.w	r8, #0
    777e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7782:	182f      	adds	r7, r5, r0
    7784:	e009      	b.n	779a <d_print_comp_inner+0x1696>
    7786:	460b      	mov	r3, r1
    7788:	3101      	adds	r1, #1
    778a:	42af      	cmp	r7, r5
    778c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7790:	54e6      	strb	r6, [r4, r3]
    7792:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7796:	f43f af5e 	beq.w	7656 <d_print_comp_inner+0x1552>
    779a:	29ff      	cmp	r1, #255	; 0xff
    779c:	f815 6b01 	ldrb.w	r6, [r5], #1
    77a0:	d1f1      	bne.n	7786 <d_print_comp_inner+0x1682>
    77a2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    77a6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    77aa:	4620      	mov	r0, r4
    77ac:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    77b0:	4798      	blx	r3
    77b2:	2101      	movs	r1, #1
    77b4:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    77b8:	2300      	movs	r3, #0
    77ba:	440a      	add	r2, r1
    77bc:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    77c0:	e7e3      	b.n	778a <d_print_comp_inner+0x1686>
    77c2:	4632      	mov	r2, r6
    77c4:	2111      	movs	r1, #17
    77c6:	4620      	mov	r0, r4
    77c8:	b013      	add	sp, #76	; 0x4c
    77ca:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    77ce:	f001 bb9b 	b.w	8f08 <d_print_conversion>
    77d2:	2111      	movs	r1, #17
    77d4:	4620      	mov	r0, r4
    77d6:	68f2      	ldr	r2, [r6, #12]
    77d8:	f000 fd4c 	bl	8274 <d_print_comp>
    77dc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    77e0:	29ff      	cmp	r1, #255	; 0xff
    77e2:	f000 8260 	beq.w	7ca6 <d_print_comp_inner+0x1ba2>
    77e6:	1c4a      	adds	r2, r1, #1
    77e8:	2329      	movs	r3, #41	; 0x29
    77ea:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    77ee:	5463      	strb	r3, [r4, r1]
    77f0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    77f4:	f7fe bcec 	b.w	61d0 <d_print_comp_inner+0xcc>
    77f8:	4632      	mov	r2, r6
    77fa:	2111      	movs	r1, #17
    77fc:	4620      	mov	r0, r4
    77fe:	f000 fd67 	bl	82d0 <d_print_mod>
    7802:	f7fe bcff 	b.w	6204 <d_print_comp_inner+0x100>
    7806:	6932      	ldr	r2, [r6, #16]
    7808:	460d      	mov	r5, r1
    780a:	4620      	mov	r0, r4
    780c:	2111      	movs	r1, #17
    780e:	f8d4 6128 	ldr.w	r6, [r4, #296]	; 0x128
    7812:	f000 fd2f 	bl	8274 <d_print_comp>
    7816:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    781a:	42b3      	cmp	r3, r6
    781c:	f47e acd8 	bne.w	61d0 <d_print_comp_inner+0xcc>
    7820:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    7824:	42ab      	cmp	r3, r5
    7826:	f47e acd3 	bne.w	61d0 <d_print_comp_inner+0xcc>
    782a:	3d02      	subs	r5, #2
    782c:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
    7830:	f7fe bcce 	b.w	61d0 <d_print_comp_inner+0xcc>
    7834:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    7838:	2bff      	cmp	r3, #255	; 0xff
    783a:	f000 83b5 	beq.w	7fa8 <d_print_comp_inner+0x1ea4>
    783e:	1c58      	adds	r0, r3, #1
    7840:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
    7844:	2111      	movs	r1, #17
    7846:	f804 9003 	strb.w	r9, [r4, r3]
    784a:	4620      	mov	r0, r4
    784c:	f855 2c0c 	ldr.w	r2, [r5, #-12]
    7850:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    7854:	f000 fd3c 	bl	82d0 <d_print_mod>
    7858:	f7fe be4d 	b.w	64f6 <d_print_comp_inner+0x3f2>
    785c:	f8d9 900c 	ldr.w	r9, [r9, #12]
    7860:	f1b9 0f00 	cmp.w	r9, #0
    7864:	f43e acaf 	beq.w	61c6 <d_print_comp_inner+0xc2>
    7868:	2d04      	cmp	r5, #4
    786a:	f102 0210 	add.w	r2, r2, #16
    786e:	f000 81ee 	beq.w	7c4e <d_print_comp_inner+0x1b4a>
    7872:	4628      	mov	r0, r5
    7874:	f7fe bdf3 	b.w	645e <d_print_comp_inner+0x35a>
    7878:	f8d6 900c 	ldr.w	r9, [r6, #12]
    787c:	f1b8 0f00 	cmp.w	r8, #0
    7880:	f43e aca6 	beq.w	61d0 <d_print_comp_inner+0xcc>
    7884:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
    7888:	f7fe bff4 	b.w	6874 <d_print_comp_inner+0x770>
    788c:	00018ff0 	.word	0x00018ff0
    7890:	000190b4 	.word	0x000190b4
    7894:	00018f0c 	.word	0x00018f0c
    7898:	000191e4 	.word	0x000191e4
    789c:	7833      	ldrb	r3, [r6, #0]
    789e:	2b2f      	cmp	r3, #47	; 0x2f
    78a0:	f47e ad01 	bne.w	62a6 <d_print_comp_inner+0x1a2>
    78a4:	460e      	mov	r6, r1
    78a6:	f8d4 e114 	ldr.w	lr, [r4, #276]	; 0x114
    78aa:	f7fe bcfe 	b.w	62aa <d_print_comp_inner+0x1a6>
    78ae:	2d07      	cmp	r5, #7
    78b0:	f47e ad75 	bne.w	639e <d_print_comp_inner+0x29a>
    78b4:	6931      	ldr	r1, [r6, #16]
    78b6:	7808      	ldrb	r0, [r1, #0]
    78b8:	2800      	cmp	r0, #0
    78ba:	f47e ad70 	bne.w	639e <d_print_comp_inner+0x29a>
    78be:	6908      	ldr	r0, [r1, #16]
    78c0:	2801      	cmp	r0, #1
    78c2:	f47e ad6c 	bne.w	639e <d_print_comp_inner+0x29a>
    78c6:	2b3d      	cmp	r3, #61	; 0x3d
    78c8:	f47e ad69 	bne.w	639e <d_print_comp_inner+0x29a>
    78cc:	68cb      	ldr	r3, [r1, #12]
    78ce:	781b      	ldrb	r3, [r3, #0]
    78d0:	2b30      	cmp	r3, #48	; 0x30
    78d2:	f000 84bd 	beq.w	8250 <d_print_comp_inner+0x214c>
    78d6:	2b31      	cmp	r3, #49	; 0x31
    78d8:	f47e ad61 	bne.w	639e <d_print_comp_inner+0x29a>
    78dc:	4620      	mov	r0, r4
    78de:	49b7      	ldr	r1, [pc, #732]	; (7bbc <d_print_comp_inner+0x1ab8>)
    78e0:	b013      	add	sp, #76	; 0x4c
    78e2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    78e6:	f7fc b9fb 	b.w	3ce0 <d_append_string>
    78ea:	4db5      	ldr	r5, [pc, #724]	; (7bc0 <d_print_comp_inner+0x1abc>)
    78ec:	265f      	movs	r6, #95	; 0x5f
    78ee:	f04f 0800 	mov.w	r8, #0
    78f2:	1d6f      	adds	r7, r5, #5
    78f4:	e00b      	b.n	790e <d_print_comp_inner+0x180a>
    78f6:	460b      	mov	r3, r1
    78f8:	3101      	adds	r1, #1
    78fa:	42af      	cmp	r7, r5
    78fc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7900:	54e6      	strb	r6, [r4, r3]
    7902:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7906:	f43e ac63 	beq.w	61d0 <d_print_comp_inner+0xcc>
    790a:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    790e:	29ff      	cmp	r1, #255	; 0xff
    7910:	d1f1      	bne.n	78f6 <d_print_comp_inner+0x17f2>
    7912:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7916:	4620      	mov	r0, r4
    7918:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    791c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7920:	4798      	blx	r3
    7922:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7926:	2101      	movs	r1, #1
    7928:	3301      	adds	r3, #1
    792a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    792e:	2300      	movs	r3, #0
    7930:	e7e3      	b.n	78fa <d_print_comp_inner+0x17f6>
    7932:	4da4      	ldr	r5, [pc, #656]	; (7bc4 <d_print_comp_inner+0x1ac0>)
    7934:	267b      	movs	r6, #123	; 0x7b
    7936:	f04f 0800 	mov.w	r8, #0
    793a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    793e:	f105 0905 	add.w	r9, r5, #5
    7942:	e00a      	b.n	795a <d_print_comp_inner+0x1856>
    7944:	460b      	mov	r3, r1
    7946:	3101      	adds	r1, #1
    7948:	45a9      	cmp	r9, r5
    794a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    794e:	54e6      	strb	r6, [r4, r3]
    7950:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7954:	d013      	beq.n	797e <d_print_comp_inner+0x187a>
    7956:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    795a:	29ff      	cmp	r1, #255	; 0xff
    795c:	d1f2      	bne.n	7944 <d_print_comp_inner+0x1840>
    795e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7962:	4620      	mov	r0, r4
    7964:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7968:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    796c:	4798      	blx	r3
    796e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7972:	2101      	movs	r1, #1
    7974:	3301      	adds	r3, #1
    7976:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    797a:	2300      	movs	r3, #0
    797c:	e7e4      	b.n	7948 <d_print_comp_inner+0x1844>
    797e:	463a      	mov	r2, r7
    7980:	4991      	ldr	r1, [pc, #580]	; (7bc8 <d_print_comp_inner+0x1ac4>)
    7982:	a802      	add	r0, sp, #8
    7984:	f005 fcd6 	bl	d334 <sprintf>
    7988:	a802      	add	r0, sp, #8
    798a:	f005 fdd3 	bl	d534 <strlen>
    798e:	b318      	cbz	r0, 79d8 <d_print_comp_inner+0x18d4>
    7990:	ad02      	add	r5, sp, #8
    7992:	f04f 0800 	mov.w	r8, #0
    7996:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    799a:	182f      	adds	r7, r5, r0
    799c:	e008      	b.n	79b0 <d_print_comp_inner+0x18ac>
    799e:	460b      	mov	r3, r1
    79a0:	3101      	adds	r1, #1
    79a2:	42af      	cmp	r7, r5
    79a4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    79a8:	54e6      	strb	r6, [r4, r3]
    79aa:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    79ae:	d015      	beq.n	79dc <d_print_comp_inner+0x18d8>
    79b0:	29ff      	cmp	r1, #255	; 0xff
    79b2:	f815 6b01 	ldrb.w	r6, [r5], #1
    79b6:	d1f2      	bne.n	799e <d_print_comp_inner+0x189a>
    79b8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    79bc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    79c0:	4620      	mov	r0, r4
    79c2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    79c6:	4798      	blx	r3
    79c8:	2101      	movs	r1, #1
    79ca:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    79ce:	2300      	movs	r3, #0
    79d0:	440a      	add	r2, r1
    79d2:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    79d6:	e7e4      	b.n	79a2 <d_print_comp_inner+0x189e>
    79d8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    79dc:	29ff      	cmp	r1, #255	; 0xff
    79de:	f000 834a 	beq.w	8076 <d_print_comp_inner+0x1f72>
    79e2:	237d      	movs	r3, #125	; 0x7d
    79e4:	1c4a      	adds	r2, r1, #1
    79e6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    79ea:	5463      	strb	r3, [r4, r1]
    79ec:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    79f0:	f7fe bbee 	b.w	61d0 <d_print_comp_inner+0xcc>
    79f4:	2500      	movs	r5, #0
    79f6:	780b      	ldrb	r3, [r1, #0]
    79f8:	f7fe bc4b 	b.w	6292 <d_print_comp_inner+0x18e>
    79fc:	4631      	mov	r1, r6
    79fe:	f7fc f90b 	bl	3c18 <d_lookup_template_argument>
    7a02:	4602      	mov	r2, r0
    7a04:	2800      	cmp	r0, #0
    7a06:	f43e abe0 	beq.w	61ca <d_print_comp_inner+0xc6>
    7a0a:	7803      	ldrb	r3, [r0, #0]
    7a0c:	2b2f      	cmp	r3, #47	; 0x2f
    7a0e:	f000 830b 	beq.w	8028 <d_print_comp_inner+0x1f24>
    7a12:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
    7a16:	2111      	movs	r1, #17
    7a18:	682b      	ldr	r3, [r5, #0]
    7a1a:	4620      	mov	r0, r4
    7a1c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    7a20:	f000 fc28 	bl	8274 <d_print_comp>
    7a24:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
    7a28:	f7fe bbd2 	b.w	61d0 <d_print_comp_inner+0xcc>
    7a2c:	68f2      	ldr	r2, [r6, #12]
    7a2e:	4966      	ldr	r1, [pc, #408]	; (7bc8 <d_print_comp_inner+0x1ac4>)
    7a30:	3201      	adds	r2, #1
    7a32:	a802      	add	r0, sp, #8
    7a34:	f005 fc7e 	bl	d334 <sprintf>
    7a38:	a802      	add	r0, sp, #8
    7a3a:	f005 fd7b 	bl	d534 <strlen>
    7a3e:	2800      	cmp	r0, #0
    7a40:	f43e abc6 	beq.w	61d0 <d_print_comp_inner+0xcc>
    7a44:	ad02      	add	r5, sp, #8
    7a46:	f04f 0800 	mov.w	r8, #0
    7a4a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7a4e:	182f      	adds	r7, r5, r0
    7a50:	e009      	b.n	7a66 <d_print_comp_inner+0x1962>
    7a52:	460b      	mov	r3, r1
    7a54:	3101      	adds	r1, #1
    7a56:	42bd      	cmp	r5, r7
    7a58:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7a5c:	54e6      	strb	r6, [r4, r3]
    7a5e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7a62:	f43e abb5 	beq.w	61d0 <d_print_comp_inner+0xcc>
    7a66:	29ff      	cmp	r1, #255	; 0xff
    7a68:	f815 6b01 	ldrb.w	r6, [r5], #1
    7a6c:	d1f1      	bne.n	7a52 <d_print_comp_inner+0x194e>
    7a6e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7a72:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7a76:	4620      	mov	r0, r4
    7a78:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7a7c:	4798      	blx	r3
    7a7e:	2101      	movs	r1, #1
    7a80:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7a84:	2300      	movs	r3, #0
    7a86:	440a      	add	r2, r1
    7a88:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7a8c:	e7e3      	b.n	7a56 <d_print_comp_inner+0x1952>
    7a8e:	2500      	movs	r5, #0
    7a90:	f7fe bc85 	b.w	639e <d_print_comp_inner+0x29a>
    7a94:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7a98:	f7ff baaf 	b.w	6ffa <d_print_comp_inner+0xef6>
    7a9c:	2500      	movs	r5, #0
    7a9e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7aa2:	4620      	mov	r0, r4
    7aa4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7aa8:	4798      	blx	r3
    7aaa:	2201      	movs	r2, #1
    7aac:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7ab0:	4629      	mov	r1, r5
    7ab2:	4413      	add	r3, r2
    7ab4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7ab8:	e535      	b.n	7526 <d_print_comp_inner+0x1422>
    7aba:	68fb      	ldr	r3, [r7, #12]
    7abc:	681e      	ldr	r6, [r3, #0]
    7abe:	7833      	ldrb	r3, [r6, #0]
    7ac0:	2b61      	cmp	r3, #97	; 0x61
    7ac2:	f040 80c9 	bne.w	7c58 <d_print_comp_inner+0x1b54>
    7ac6:	7872      	ldrb	r2, [r6, #1]
    7ac8:	2a64      	cmp	r2, #100	; 0x64
    7aca:	f040 80c5 	bne.w	7c58 <d_print_comp_inner+0x1b54>
    7ace:	78b2      	ldrb	r2, [r6, #2]
    7ad0:	2a00      	cmp	r2, #0
    7ad2:	f040 80c1 	bne.w	7c58 <d_print_comp_inner+0x1b54>
    7ad6:	782a      	ldrb	r2, [r5, #0]
    7ad8:	2a03      	cmp	r2, #3
    7ada:	f000 8354 	beq.w	8186 <d_print_comp_inner+0x2082>
    7ade:	2a39      	cmp	r2, #57	; 0x39
    7ae0:	f000 836b 	beq.w	81ba <d_print_comp_inner+0x20b6>
    7ae4:	2b73      	cmp	r3, #115	; 0x73
    7ae6:	d11d      	bne.n	7b24 <d_print_comp_inner+0x1a20>
    7ae8:	7872      	ldrb	r2, [r6, #1]
    7aea:	2a5a      	cmp	r2, #90	; 0x5a
    7aec:	d143      	bne.n	7b76 <d_print_comp_inner+0x1a72>
    7aee:	f896 8002 	ldrb.w	r8, [r6, #2]
    7af2:	f1b8 0f00 	cmp.w	r8, #0
    7af6:	d13e      	bne.n	7b76 <d_print_comp_inner+0x1a72>
    7af8:	4629      	mov	r1, r5
    7afa:	4620      	mov	r0, r4
    7afc:	f7fc f8a8 	bl	3c50 <d_find_pack>
    7b00:	b930      	cbnz	r0, 7b10 <d_print_comp_inner+0x1a0c>
    7b02:	e008      	b.n	7b16 <d_print_comp_inner+0x1a12>
    7b04:	68c3      	ldr	r3, [r0, #12]
    7b06:	b133      	cbz	r3, 7b16 <d_print_comp_inner+0x1a12>
    7b08:	6900      	ldr	r0, [r0, #16]
    7b0a:	f108 0801 	add.w	r8, r8, #1
    7b0e:	b110      	cbz	r0, 7b16 <d_print_comp_inner+0x1a12>
    7b10:	7803      	ldrb	r3, [r0, #0]
    7b12:	2b2f      	cmp	r3, #47	; 0x2f
    7b14:	d0f6      	beq.n	7b04 <d_print_comp_inner+0x1a00>
    7b16:	4641      	mov	r1, r8
    7b18:	4620      	mov	r0, r4
    7b1a:	b013      	add	sp, #76	; 0x4c
    7b1c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7b20:	f7fc b944 	b.w	3dac <d_append_num>
    7b24:	463a      	mov	r2, r7
    7b26:	2111      	movs	r1, #17
    7b28:	4620      	mov	r0, r4
    7b2a:	f001 fa95 	bl	9058 <d_print_expr_op>
    7b2e:	7833      	ldrb	r3, [r6, #0]
    7b30:	2b67      	cmp	r3, #103	; 0x67
    7b32:	d109      	bne.n	7b48 <d_print_comp_inner+0x1a44>
    7b34:	7872      	ldrb	r2, [r6, #1]
    7b36:	2a73      	cmp	r2, #115	; 0x73
    7b38:	d106      	bne.n	7b48 <d_print_comp_inner+0x1a44>
    7b3a:	78b2      	ldrb	r2, [r6, #2]
    7b3c:	b922      	cbnz	r2, 7b48 <d_print_comp_inner+0x1a44>
    7b3e:	462a      	mov	r2, r5
    7b40:	2111      	movs	r1, #17
    7b42:	4620      	mov	r0, r4
    7b44:	f7fe bb69 	b.w	621a <d_print_comp_inner+0x116>
    7b48:	2b73      	cmp	r3, #115	; 0x73
    7b4a:	f47e ad0d 	bne.w	6568 <d_print_comp_inner+0x464>
    7b4e:	7873      	ldrb	r3, [r6, #1]
    7b50:	2b74      	cmp	r3, #116	; 0x74
    7b52:	f47e ad09 	bne.w	6568 <d_print_comp_inner+0x464>
    7b56:	78b3      	ldrb	r3, [r6, #2]
    7b58:	2b00      	cmp	r3, #0
    7b5a:	f47e ad05 	bne.w	6568 <d_print_comp_inner+0x464>
    7b5e:	2128      	movs	r1, #40	; 0x28
    7b60:	4620      	mov	r0, r4
    7b62:	f7fc f837 	bl	3bd4 <d_append_char>
    7b66:	2111      	movs	r1, #17
    7b68:	462a      	mov	r2, r5
    7b6a:	4620      	mov	r0, r4
    7b6c:	f000 fb82 	bl	8274 <d_print_comp>
    7b70:	2129      	movs	r1, #41	; 0x29
    7b72:	f7ff b922 	b.w	6dba <d_print_comp_inner+0xcb6>
    7b76:	2b73      	cmp	r3, #115	; 0x73
    7b78:	d1d4      	bne.n	7b24 <d_print_comp_inner+0x1a20>
    7b7a:	7873      	ldrb	r3, [r6, #1]
    7b7c:	2b50      	cmp	r3, #80	; 0x50
    7b7e:	d1d1      	bne.n	7b24 <d_print_comp_inner+0x1a20>
    7b80:	78b3      	ldrb	r3, [r6, #2]
    7b82:	2b00      	cmp	r3, #0
    7b84:	d1ce      	bne.n	7b24 <d_print_comp_inner+0x1a20>
    7b86:	461e      	mov	r6, r3
    7b88:	e004      	b.n	7b94 <d_print_comp_inner+0x1a90>
    7b8a:	3601      	adds	r6, #1
    7b8c:	692d      	ldr	r5, [r5, #16]
    7b8e:	2d00      	cmp	r5, #0
    7b90:	f000 8219 	beq.w	7fc6 <d_print_comp_inner+0x1ec2>
    7b94:	782b      	ldrb	r3, [r5, #0]
    7b96:	2b2f      	cmp	r3, #47	; 0x2f
    7b98:	f040 8215 	bne.w	7fc6 <d_print_comp_inner+0x1ec2>
    7b9c:	68eb      	ldr	r3, [r5, #12]
    7b9e:	2b00      	cmp	r3, #0
    7ba0:	f000 8211 	beq.w	7fc6 <d_print_comp_inner+0x1ec2>
    7ba4:	781a      	ldrb	r2, [r3, #0]
    7ba6:	2a4b      	cmp	r2, #75	; 0x4b
    7ba8:	d1ef      	bne.n	7b8a <d_print_comp_inner+0x1a86>
    7baa:	4620      	mov	r0, r4
    7bac:	68d9      	ldr	r1, [r3, #12]
    7bae:	f7fc f84f 	bl	3c50 <d_find_pack>
    7bb2:	4602      	mov	r2, r0
    7bb4:	b190      	cbz	r0, 7bdc <d_print_comp_inner+0x1ad8>
    7bb6:	2200      	movs	r2, #0
    7bb8:	e00d      	b.n	7bd6 <d_print_comp_inner+0x1ad2>
    7bba:	bf00      	nop
    7bbc:	00019160 	.word	0x00019160
    7bc0:	00019114 	.word	0x00019114
    7bc4:	00019190 	.word	0x00019190
    7bc8:	00018f0c 	.word	0x00018f0c
    7bcc:	68c1      	ldr	r1, [r0, #12]
    7bce:	b129      	cbz	r1, 7bdc <d_print_comp_inner+0x1ad8>
    7bd0:	6900      	ldr	r0, [r0, #16]
    7bd2:	3201      	adds	r2, #1
    7bd4:	b110      	cbz	r0, 7bdc <d_print_comp_inner+0x1ad8>
    7bd6:	7801      	ldrb	r1, [r0, #0]
    7bd8:	292f      	cmp	r1, #47	; 0x2f
    7bda:	d0f7      	beq.n	7bcc <d_print_comp_inner+0x1ac8>
    7bdc:	4416      	add	r6, r2
    7bde:	e7d5      	b.n	7b8c <d_print_comp_inner+0x1a88>
    7be0:	2b01      	cmp	r3, #1
    7be2:	f63e ac73 	bhi.w	64cc <d_print_comp_inner+0x3c8>
    7be6:	2d04      	cmp	r5, #4
    7be8:	f43e aaef 	beq.w	61ca <d_print_comp_inner+0xc6>
    7bec:	4686      	mov	lr, r0
    7bee:	f100 0b10 	add.w	fp, r0, #16
    7bf2:	c80f      	ldmia	r0, {r0, r1, r2, r3}
    7bf4:	e88b 000f 	stmia.w	fp, {r0, r1, r2, r3}
    7bf8:	e9ce 9a01 	strd	r9, sl, [lr, #4]
    7bfc:	f8d9 900c 	ldr.w	r9, [r9, #12]
    7c00:	4658      	mov	r0, fp
    7c02:	3501      	adds	r5, #1
    7c04:	f8ce e010 	str.w	lr, [lr, #16]
    7c08:	f8ce c00c 	str.w	ip, [lr, #12]
    7c0c:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
    7c10:	f1b9 0f00 	cmp.w	r9, #0
    7c14:	f43e aad9 	beq.w	61ca <d_print_comp_inner+0xc6>
    7c18:	f899 1000 	ldrb.w	r1, [r9]
    7c1c:	f7fe bc44 	b.w	64a8 <d_print_comp_inner+0x3a4>
    7c20:	49d0      	ldr	r1, [pc, #832]	; (7f64 <d_print_comp_inner+0x1e60>)
    7c22:	f7fc f85d 	bl	3ce0 <d_append_string>
    7c26:	f7ff b9d2 	b.w	6fce <d_print_comp_inner+0xeca>
    7c2a:	4632      	mov	r2, r6
    7c2c:	2111      	movs	r1, #17
    7c2e:	4620      	mov	r0, r4
    7c30:	f000 fb4e 	bl	82d0 <d_print_mod>
    7c34:	f7fe bb1f 	b.w	6276 <d_print_comp_inner+0x172>
    7c38:	29ff      	cmp	r1, #255	; 0xff
    7c3a:	f000 8253 	beq.w	80e4 <d_print_comp_inner+0x1fe0>
    7c3e:	1c4b      	adds	r3, r1, #1
    7c40:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    7c44:	2320      	movs	r3, #32
    7c46:	5463      	strb	r3, [r4, r1]
    7c48:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7c4c:	e525      	b.n	769a <d_print_comp_inner+0x1596>
    7c4e:	2201      	movs	r2, #1
    7c50:	e9c4 3245 	strd	r3, r2, [r4, #276]	; 0x114
    7c54:	f7fe babc 	b.w	61d0 <d_print_comp_inner+0xcc>
    7c58:	782a      	ldrb	r2, [r5, #0]
    7c5a:	e740      	b.n	7ade <d_print_comp_inner+0x19da>
    7c5c:	460d      	mov	r5, r1
    7c5e:	f7fe bb24 	b.w	62aa <d_print_comp_inner+0x1a6>
    7c62:	2700      	movs	r7, #0
    7c64:	5567      	strb	r7, [r4, r5]
    7c66:	4629      	mov	r1, r5
    7c68:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7c6c:	4620      	mov	r0, r4
    7c6e:	4798      	blx	r3
    7c70:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7c74:	463d      	mov	r5, r7
    7c76:	3301      	adds	r3, #1
    7c78:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
    7c7c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7c80:	f7fe bb2e 	b.w	62e0 <d_print_comp_inner+0x1dc>
    7c84:	2600      	movs	r6, #0
    7c86:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    7c8a:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    7c8e:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    7c92:	4798      	blx	r3
    7c94:	2301      	movs	r3, #1
    7c96:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7c9a:	4631      	mov	r1, r6
    7c9c:	441a      	add	r2, r3
    7c9e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7ca2:	f7fe bf69 	b.w	6b78 <d_print_comp_inner+0xa74>
    7ca6:	2500      	movs	r5, #0
    7ca8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7cac:	4620      	mov	r0, r4
    7cae:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7cb2:	4798      	blx	r3
    7cb4:	2201      	movs	r2, #1
    7cb6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7cba:	4629      	mov	r1, r5
    7cbc:	4413      	add	r3, r2
    7cbe:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7cc2:	e591      	b.n	77e8 <d_print_comp_inner+0x16e4>
    7cc4:	4620      	mov	r0, r4
    7cc6:	49a8      	ldr	r1, [pc, #672]	; (7f68 <d_print_comp_inner+0x1e64>)
    7cc8:	f7fc f80a 	bl	3ce0 <d_append_string>
    7ccc:	693a      	ldr	r2, [r7, #16]
    7cce:	49a7      	ldr	r1, [pc, #668]	; (7f6c <d_print_comp_inner+0x1e68>)
    7cd0:	3201      	adds	r2, #1
    7cd2:	a802      	add	r0, sp, #8
    7cd4:	f005 fb2e 	bl	d334 <sprintf>
    7cd8:	a802      	add	r0, sp, #8
    7cda:	f005 fc2b 	bl	d534 <strlen>
    7cde:	4681      	mov	r9, r0
    7ce0:	b318      	cbz	r0, 7d2a <d_print_comp_inner+0x1c26>
    7ce2:	ad02      	add	r5, sp, #8
    7ce4:	f04f 0800 	mov.w	r8, #0
    7ce8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7cec:	44a9      	add	r9, r5
    7cee:	e008      	b.n	7d02 <d_print_comp_inner+0x1bfe>
    7cf0:	460b      	mov	r3, r1
    7cf2:	3101      	adds	r1, #1
    7cf4:	45a9      	cmp	r9, r5
    7cf6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7cfa:	54e6      	strb	r6, [r4, r3]
    7cfc:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7d00:	d013      	beq.n	7d2a <d_print_comp_inner+0x1c26>
    7d02:	29ff      	cmp	r1, #255	; 0xff
    7d04:	f815 6b01 	ldrb.w	r6, [r5], #1
    7d08:	d1f2      	bne.n	7cf0 <d_print_comp_inner+0x1bec>
    7d0a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7d0e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7d12:	4620      	mov	r0, r4
    7d14:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7d18:	4798      	blx	r3
    7d1a:	2101      	movs	r1, #1
    7d1c:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7d20:	2300      	movs	r3, #0
    7d22:	440a      	add	r2, r1
    7d24:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7d28:	e7e4      	b.n	7cf4 <d_print_comp_inner+0x1bf0>
    7d2a:	4620      	mov	r0, r4
    7d2c:	4990      	ldr	r1, [pc, #576]	; (7f70 <d_print_comp_inner+0x1e6c>)
    7d2e:	f7fb ffd7 	bl	3ce0 <d_append_string>
    7d32:	68ff      	ldr	r7, [r7, #12]
    7d34:	e4a6      	b.n	7684 <d_print_comp_inner+0x1580>
    7d36:	2500      	movs	r5, #0
    7d38:	4619      	mov	r1, r3
    7d3a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7d3e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7d42:	4620      	mov	r0, r4
    7d44:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7d48:	4798      	blx	r3
    7d4a:	2201      	movs	r2, #1
    7d4c:	f8d4 1128 	ldr.w	r1, [r4, #296]	; 0x128
    7d50:	462b      	mov	r3, r5
    7d52:	4411      	add	r1, r2
    7d54:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
    7d58:	f7ff bb08 	b.w	736c <d_print_comp_inner+0x1268>
    7d5c:	2500      	movs	r5, #0
    7d5e:	4619      	mov	r1, r3
    7d60:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    7d64:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    7d68:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    7d6c:	4798      	blx	r3
    7d6e:	2101      	movs	r1, #1
    7d70:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7d74:	462b      	mov	r3, r5
    7d76:	440a      	add	r2, r1
    7d78:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7d7c:	f7fe bc8c 	b.w	6698 <d_print_comp_inner+0x594>
    7d80:	2500      	movs	r5, #0
    7d82:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7d86:	4620      	mov	r0, r4
    7d88:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7d8c:	4798      	blx	r3
    7d8e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7d92:	4629      	mov	r1, r5
    7d94:	3301      	adds	r3, #1
    7d96:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7d9a:	2301      	movs	r3, #1
    7d9c:	f7ff b906 	b.w	6fac <d_print_comp_inner+0xea8>
    7da0:	2120      	movs	r1, #32
    7da2:	4620      	mov	r0, r4
    7da4:	f7fb ff16 	bl	3bd4 <d_append_char>
    7da8:	f7ff b8fa 	b.w	6fa0 <d_print_comp_inner+0xe9c>
    7dac:	2500      	movs	r5, #0
    7dae:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7db2:	4620      	mov	r0, r4
    7db4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7db8:	4798      	blx	r3
    7dba:	2301      	movs	r3, #1
    7dbc:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7dc0:	4629      	mov	r1, r5
    7dc2:	441a      	add	r2, r3
    7dc4:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7dc8:	f7ff b8da 	b.w	6f80 <d_print_comp_inner+0xe7c>
    7dcc:	2120      	movs	r1, #32
    7dce:	4620      	mov	r0, r4
    7dd0:	f7fb ff00 	bl	3bd4 <d_append_char>
    7dd4:	f7ff b8ce 	b.w	6f74 <d_print_comp_inner+0xe70>
    7dd8:	215b      	movs	r1, #91	; 0x5b
    7dda:	4620      	mov	r0, r4
    7ddc:	f7fb fefa 	bl	3bd4 <d_append_char>
    7de0:	2111      	movs	r1, #17
    7de2:	4620      	mov	r0, r4
    7de4:	6932      	ldr	r2, [r6, #16]
    7de6:	f000 fa45 	bl	8274 <d_print_comp>
    7dea:	215d      	movs	r1, #93	; 0x5d
    7dec:	f7fe bfe5 	b.w	6dba <d_print_comp_inner+0xcb6>
    7df0:	212d      	movs	r1, #45	; 0x2d
    7df2:	4620      	mov	r0, r4
    7df4:	f7fb feee 	bl	3bd4 <d_append_char>
    7df8:	f7fe baf1 	b.w	63de <d_print_comp_inner+0x2da>
    7dfc:	2700      	movs	r7, #0
    7dfe:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7e02:	4620      	mov	r0, r4
    7e04:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    7e08:	4798      	blx	r3
    7e0a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7e0e:	4639      	mov	r1, r7
    7e10:	3301      	adds	r3, #1
    7e12:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7e16:	2301      	movs	r3, #1
    7e18:	f7fe bad7 	b.w	63ca <d_print_comp_inner+0x2c6>
    7e1c:	2700      	movs	r7, #0
    7e1e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7e22:	4620      	mov	r0, r4
    7e24:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    7e28:	4798      	blx	r3
    7e2a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7e2e:	4639      	mov	r1, r7
    7e30:	3301      	adds	r3, #1
    7e32:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7e36:	68f2      	ldr	r2, [r6, #12]
    7e38:	2301      	movs	r3, #1
    7e3a:	f7fe bab6 	b.w	63aa <d_print_comp_inner+0x2a6>
    7e3e:	6931      	ldr	r1, [r6, #16]
    7e40:	7809      	ldrb	r1, [r1, #0]
    7e42:	2900      	cmp	r1, #0
    7e44:	f47e aaab 	bne.w	639e <d_print_comp_inner+0x29a>
    7e48:	2b3e      	cmp	r3, #62	; 0x3e
    7e4a:	f000 81fa 	beq.w	8242 <d_print_comp_inner+0x213e>
    7e4e:	2111      	movs	r1, #17
    7e50:	4620      	mov	r0, r4
    7e52:	6932      	ldr	r2, [r6, #16]
    7e54:	3d02      	subs	r5, #2
    7e56:	f000 fa0d 	bl	8274 <d_print_comp>
    7e5a:	2d04      	cmp	r5, #4
    7e5c:	f63e a9b8 	bhi.w	61d0 <d_print_comp_inner+0xcc>
    7e60:	e8df f005 	tbb	[pc, r5]
    7e64:	06090c0f 	.word	0x06090c0f
    7e68:	03          	.byte	0x03
    7e69:	00          	.byte	0x00
    7e6a:	4620      	mov	r0, r4
    7e6c:	4941      	ldr	r1, [pc, #260]	; (7f74 <d_print_comp_inner+0x1e70>)
    7e6e:	e537      	b.n	78e0 <d_print_comp_inner+0x17dc>
    7e70:	4620      	mov	r0, r4
    7e72:	4941      	ldr	r1, [pc, #260]	; (7f78 <d_print_comp_inner+0x1e74>)
    7e74:	e534      	b.n	78e0 <d_print_comp_inner+0x17dc>
    7e76:	4620      	mov	r0, r4
    7e78:	4940      	ldr	r1, [pc, #256]	; (7f7c <d_print_comp_inner+0x1e78>)
    7e7a:	e531      	b.n	78e0 <d_print_comp_inner+0x17dc>
    7e7c:	216c      	movs	r1, #108	; 0x6c
    7e7e:	f7fe bf9c 	b.w	6dba <d_print_comp_inner+0xcb6>
    7e82:	2175      	movs	r1, #117	; 0x75
    7e84:	f7fe bf99 	b.w	6dba <d_print_comp_inner+0xcb6>
    7e88:	f8d0 c134 	ldr.w	ip, [r0, #308]	; 0x134
    7e8c:	f1bc 0f00 	cmp.w	ip, #0
    7e90:	f340 81a9 	ble.w	81e6 <d_print_comp_inner+0x20e2>
    7e94:	f8d0 e130 	ldr.w	lr, [r0, #304]	; 0x130
    7e98:	462b      	mov	r3, r5
    7e9a:	4670      	mov	r0, lr
    7e9c:	e004      	b.n	7ea8 <d_print_comp_inner+0x1da4>
    7e9e:	4563      	cmp	r3, ip
    7ea0:	f100 0008 	add.w	r0, r0, #8
    7ea4:	f000 819f 	beq.w	81e6 <d_print_comp_inner+0x20e2>
    7ea8:	f85e 2033 	ldr.w	r2, [lr, r3, lsl #3]
    7eac:	3301      	adds	r3, #1
    7eae:	4291      	cmp	r1, r2
    7eb0:	d1f5      	bne.n	7e9e <d_print_comp_inner+0x1d9a>
    7eb2:	f8d4 c12c 	ldr.w	ip, [r4, #300]	; 0x12c
    7eb6:	4663      	mov	r3, ip
    7eb8:	f1bc 0f00 	cmp.w	ip, #0
    7ebc:	d104      	bne.n	7ec8 <d_print_comp_inner+0x1dc4>
    7ebe:	e0f9      	b.n	80b4 <d_print_comp_inner+0x1fb0>
    7ec0:	685b      	ldr	r3, [r3, #4]
    7ec2:	2b00      	cmp	r3, #0
    7ec4:	f000 80f6 	beq.w	80b4 <d_print_comp_inner+0x1fb0>
    7ec8:	681a      	ldr	r2, [r3, #0]
    7eca:	428a      	cmp	r2, r1
    7ecc:	d003      	beq.n	7ed6 <d_print_comp_inner+0x1dd2>
    7ece:	42b2      	cmp	r2, r6
    7ed0:	d1f6      	bne.n	7ec0 <d_print_comp_inner+0x1dbc>
    7ed2:	459c      	cmp	ip, r3
    7ed4:	d0f4      	beq.n	7ec0 <d_print_comp_inner+0x1dbc>
    7ed6:	4620      	mov	r0, r4
    7ed8:	f7fb fe9e 	bl	3c18 <d_lookup_template_argument>
    7edc:	4601      	mov	r1, r0
    7ede:	2800      	cmp	r0, #0
    7ee0:	f43e a973 	beq.w	61ca <d_print_comp_inner+0xc6>
    7ee4:	780b      	ldrb	r3, [r1, #0]
    7ee6:	2b2f      	cmp	r3, #47	; 0x2f
    7ee8:	f47e a9d3 	bne.w	6292 <d_print_comp_inner+0x18e>
    7eec:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
    7ef0:	2b00      	cmp	r3, #0
    7ef2:	f6ff acd3 	blt.w	789c <d_print_comp_inner+0x1798>
    7ef6:	4608      	mov	r0, r1
    7ef8:	4619      	mov	r1, r3
    7efa:	f7fb fe05 	bl	3b08 <d_index_template_argument.part.0>
    7efe:	4601      	mov	r1, r0
    7f00:	2800      	cmp	r0, #0
    7f02:	f47f ad78 	bne.w	79f6 <d_print_comp_inner+0x18f2>
    7f06:	2d00      	cmp	r5, #0
    7f08:	f43e a95f 	beq.w	61ca <d_print_comp_inner+0xc6>
    7f0c:	f8c4 7110 	str.w	r7, [r4, #272]	; 0x110
    7f10:	f7fe b95b 	b.w	61ca <d_print_comp_inner+0xc6>
    7f14:	6933      	ldr	r3, [r6, #16]
    7f16:	f7fe bf1e 	b.w	6d56 <d_print_comp_inner+0xc52>
    7f1a:	781b      	ldrb	r3, [r3, #0]
    7f1c:	f1a3 0163 	sub.w	r1, r3, #99	; 0x63
    7f20:	2901      	cmp	r1, #1
    7f22:	d903      	bls.n	7f2c <d_print_comp_inner+0x1e28>
    7f24:	3b72      	subs	r3, #114	; 0x72
    7f26:	2b01      	cmp	r3, #1
    7f28:	f63e aef4 	bhi.w	6d14 <d_print_comp_inner+0xc10>
    7f2c:	2111      	movs	r1, #17
    7f2e:	4620      	mov	r0, r4
    7f30:	f001 f892 	bl	9058 <d_print_expr_op>
    7f34:	213c      	movs	r1, #60	; 0x3c
    7f36:	4620      	mov	r0, r4
    7f38:	f7fb fe4c 	bl	3bd4 <d_append_char>
    7f3c:	6933      	ldr	r3, [r6, #16]
    7f3e:	2111      	movs	r1, #17
    7f40:	68da      	ldr	r2, [r3, #12]
    7f42:	4620      	mov	r0, r4
    7f44:	f000 f996 	bl	8274 <d_print_comp>
    7f48:	4620      	mov	r0, r4
    7f4a:	490d      	ldr	r1, [pc, #52]	; (7f80 <d_print_comp_inner+0x1e7c>)
    7f4c:	f7fb fec8 	bl	3ce0 <d_append_string>
    7f50:	6933      	ldr	r3, [r6, #16]
    7f52:	2111      	movs	r1, #17
    7f54:	4620      	mov	r0, r4
    7f56:	691a      	ldr	r2, [r3, #16]
    7f58:	f000 f98c 	bl	8274 <d_print_comp>
    7f5c:	2129      	movs	r1, #41	; 0x29
    7f5e:	f7fe bf2c 	b.w	6dba <d_print_comp_inner+0xcb6>
    7f62:	bf00      	nop
    7f64:	00019104 	.word	0x00019104
    7f68:	00018f80 	.word	0x00018f80
    7f6c:	00018f0c 	.word	0x00018f0c
    7f70:	00018f90 	.word	0x00018f90
    7f74:	00019154 	.word	0x00019154
    7f78:	00019150 	.word	0x00019150
    7f7c:	0001914c 	.word	0x0001914c
    7f80:	00019138 	.word	0x00019138
    7f84:	68ca      	ldr	r2, [r1, #12]
    7f86:	f7fe b927 	b.w	61d8 <d_print_comp_inner+0xd4>
    7f8a:	2963      	cmp	r1, #99	; 0x63
    7f8c:	f000 80b9 	beq.w	8102 <d_print_comp_inner+0x1ffe>
    7f90:	2111      	movs	r1, #17
    7f92:	4620      	mov	r0, r4
    7f94:	f001 f860 	bl	9058 <d_print_expr_op>
    7f98:	6933      	ldr	r3, [r6, #16]
    7f9a:	2111      	movs	r1, #17
    7f9c:	4620      	mov	r0, r4
    7f9e:	691a      	ldr	r2, [r3, #16]
    7fa0:	f001 fa3c 	bl	941c <d_print_subexpr>
    7fa4:	f7fe bef9 	b.w	6d9a <d_print_comp_inner+0xc96>
    7fa8:	4619      	mov	r1, r3
    7faa:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7fae:	4620      	mov	r0, r4
    7fb0:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    7fb4:	4798      	blx	r3
    7fb6:	2001      	movs	r0, #1
    7fb8:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    7fbc:	4633      	mov	r3, r6
    7fbe:	4402      	add	r2, r0
    7fc0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    7fc4:	e43c      	b.n	7840 <d_print_comp_inner+0x173c>
    7fc6:	4632      	mov	r2, r6
    7fc8:	49a6      	ldr	r1, [pc, #664]	; (8264 <d_print_comp_inner+0x2160>)
    7fca:	a802      	add	r0, sp, #8
    7fcc:	f005 f9b2 	bl	d334 <sprintf>
    7fd0:	a802      	add	r0, sp, #8
    7fd2:	f005 faaf 	bl	d534 <strlen>
    7fd6:	4607      	mov	r7, r0
    7fd8:	2800      	cmp	r0, #0
    7fda:	f43e a8f9 	beq.w	61d0 <d_print_comp_inner+0xcc>
    7fde:	ad02      	add	r5, sp, #8
    7fe0:	f04f 0800 	mov.w	r8, #0
    7fe4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7fe8:	442f      	add	r7, r5
    7fea:	e009      	b.n	8000 <d_print_comp_inner+0x1efc>
    7fec:	460b      	mov	r3, r1
    7fee:	3101      	adds	r1, #1
    7ff0:	42af      	cmp	r7, r5
    7ff2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7ff6:	54e6      	strb	r6, [r4, r3]
    7ff8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7ffc:	f43e a8e8 	beq.w	61d0 <d_print_comp_inner+0xcc>
    8000:	29ff      	cmp	r1, #255	; 0xff
    8002:	f815 6b01 	ldrb.w	r6, [r5], #1
    8006:	d1f1      	bne.n	7fec <d_print_comp_inner+0x1ee8>
    8008:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    800c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8010:	4620      	mov	r0, r4
    8012:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8016:	4798      	blx	r3
    8018:	2101      	movs	r1, #1
    801a:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    801e:	2300      	movs	r3, #0
    8020:	440a      	add	r2, r1
    8022:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8026:	e7e3      	b.n	7ff0 <d_print_comp_inner+0x1eec>
    8028:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
    802c:	2900      	cmp	r1, #0
    802e:	f6ff acf0 	blt.w	7a12 <d_print_comp_inner+0x190e>
    8032:	f7fb fd69 	bl	3b08 <d_index_template_argument.part.0>
    8036:	4602      	mov	r2, r0
    8038:	2800      	cmp	r0, #0
    803a:	f47f acea 	bne.w	7a12 <d_print_comp_inner+0x190e>
    803e:	f7fe b8c4 	b.w	61ca <d_print_comp_inner+0xc6>
    8042:	2500      	movs	r5, #0
    8044:	4619      	mov	r1, r3
    8046:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    804a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    804e:	4620      	mov	r0, r4
    8050:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8054:	4798      	blx	r3
    8056:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    805a:	462b      	mov	r3, r5
    805c:	3201      	adds	r2, #1
    805e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8062:	f7fe bfc3 	b.w	6fec <d_print_comp_inner+0xee8>
    8066:	2111      	movs	r1, #17
    8068:	4620      	mov	r0, r4
    806a:	68f2      	ldr	r2, [r6, #12]
    806c:	f001 f9d6 	bl	941c <d_print_subexpr>
    8070:	4620      	mov	r0, r4
    8072:	497d      	ldr	r1, [pc, #500]	; (8268 <d_print_comp_inner+0x2164>)
    8074:	e434      	b.n	78e0 <d_print_comp_inner+0x17dc>
    8076:	2500      	movs	r5, #0
    8078:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    807c:	4620      	mov	r0, r4
    807e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8082:	4798      	blx	r3
    8084:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8088:	4629      	mov	r1, r5
    808a:	3301      	adds	r3, #1
    808c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8090:	e4a7      	b.n	79e2 <d_print_comp_inner+0x18de>
    8092:	68da      	ldr	r2, [r3, #12]
    8094:	6891      	ldr	r1, [r2, #8]
    8096:	2901      	cmp	r1, #1
    8098:	f47e ae49 	bne.w	6d2e <d_print_comp_inner+0xc2a>
    809c:	6852      	ldr	r2, [r2, #4]
    809e:	7812      	ldrb	r2, [r2, #0]
    80a0:	2a3e      	cmp	r2, #62	; 0x3e
    80a2:	f47e ae44 	bne.w	6d2e <d_print_comp_inner+0xc2a>
    80a6:	2128      	movs	r1, #40	; 0x28
    80a8:	4620      	mov	r0, r4
    80aa:	f7fb fd93 	bl	3bd4 <d_append_char>
    80ae:	68f3      	ldr	r3, [r6, #12]
    80b0:	f7fe be3d 	b.w	6d2e <d_print_comp_inner+0xc2a>
    80b4:	6843      	ldr	r3, [r0, #4]
    80b6:	f8d4 7110 	ldr.w	r7, [r4, #272]	; 0x110
    80ba:	4620      	mov	r0, r4
    80bc:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    80c0:	f7fb fdaa 	bl	3c18 <d_lookup_template_argument>
    80c4:	4601      	mov	r1, r0
    80c6:	2800      	cmp	r0, #0
    80c8:	f43f af20 	beq.w	7f0c <d_print_comp_inner+0x1e08>
    80cc:	2501      	movs	r5, #1
    80ce:	e709      	b.n	7ee4 <d_print_comp_inner+0x1de0>
    80d0:	f8d9 900c 	ldr.w	r9, [r9, #12]
    80d4:	f1b9 0f00 	cmp.w	r9, #0
    80d8:	f43e a877 	beq.w	61ca <d_print_comp_inner+0xc6>
    80dc:	f899 1000 	ldrb.w	r1, [r9]
    80e0:	f7fe b9de 	b.w	64a0 <d_print_comp_inner+0x39c>
    80e4:	2500      	movs	r5, #0
    80e6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    80ea:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    80ee:	4620      	mov	r0, r4
    80f0:	4798      	blx	r3
    80f2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    80f6:	4629      	mov	r1, r5
    80f8:	3301      	adds	r3, #1
    80fa:	687d      	ldr	r5, [r7, #4]
    80fc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8100:	e59d      	b.n	7c3e <d_print_comp_inner+0x1b3a>
    8102:	7859      	ldrb	r1, [r3, #1]
    8104:	296c      	cmp	r1, #108	; 0x6c
    8106:	f47f af43 	bne.w	7f90 <d_print_comp_inner+0x1e8c>
    810a:	789b      	ldrb	r3, [r3, #2]
    810c:	2b00      	cmp	r3, #0
    810e:	f43f af43 	beq.w	7f98 <d_print_comp_inner+0x1e94>
    8112:	e73d      	b.n	7f90 <d_print_comp_inner+0x1e8c>
    8114:	2600      	movs	r6, #0
    8116:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    811a:	4620      	mov	r0, r4
    811c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8120:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    8124:	4798      	blx	r3
    8126:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    812a:	4631      	mov	r1, r6
    812c:	3301      	adds	r3, #1
    812e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8132:	f7ff b953 	b.w	73dc <d_print_comp_inner+0x12d8>
    8136:	2600      	movs	r6, #0
    8138:	4619      	mov	r1, r3
    813a:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    813e:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    8142:	4798      	blx	r3
    8144:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8148:	4633      	mov	r3, r6
    814a:	3201      	adds	r2, #1
    814c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8150:	f7ff b933 	b.w	73ba <d_print_comp_inner+0x12b6>
    8154:	4620      	mov	r0, r4
    8156:	4945      	ldr	r1, [pc, #276]	; (826c <d_print_comp_inner+0x2168>)
    8158:	f7fb fdc2 	bl	3ce0 <d_append_string>
    815c:	68f3      	ldr	r3, [r6, #12]
    815e:	b143      	cbz	r3, 8172 <d_print_comp_inner+0x206e>
    8160:	2111      	movs	r1, #17
    8162:	4620      	mov	r0, r4
    8164:	4632      	mov	r2, r6
    8166:	f001 f959 	bl	941c <d_print_subexpr>
    816a:	2120      	movs	r1, #32
    816c:	4620      	mov	r0, r4
    816e:	f7fb fd31 	bl	3bd4 <d_append_char>
    8172:	463a      	mov	r2, r7
    8174:	2111      	movs	r1, #17
    8176:	4620      	mov	r0, r4
    8178:	f000 f87c 	bl	8274 <d_print_comp>
    817c:	2d00      	cmp	r5, #0
    817e:	f47e a9f3 	bne.w	6568 <d_print_comp_inner+0x464>
    8182:	f7fe b825 	b.w	61d0 <d_print_comp_inner+0xcc>
    8186:	68ea      	ldr	r2, [r5, #12]
    8188:	7811      	ldrb	r1, [r2, #0]
    818a:	2901      	cmp	r1, #1
    818c:	f47f acaa 	bne.w	7ae4 <d_print_comp_inner+0x19e0>
    8190:	6929      	ldr	r1, [r5, #16]
    8192:	7809      	ldrb	r1, [r1, #0]
    8194:	2929      	cmp	r1, #41	; 0x29
    8196:	bf08      	it	eq
    8198:	4615      	moveq	r5, r2
    819a:	e4a3      	b.n	7ae4 <d_print_comp_inner+0x19e0>
    819c:	6913      	ldr	r3, [r2, #16]
    819e:	2111      	movs	r1, #17
    81a0:	781b      	ldrb	r3, [r3, #0]
    81a2:	4620      	mov	r0, r4
    81a4:	2b29      	cmp	r3, #41	; 0x29
    81a6:	bf18      	it	ne
    81a8:	2301      	movne	r3, #1
    81aa:	68d2      	ldr	r2, [r2, #12]
    81ac:	bf18      	it	ne
    81ae:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
    81b2:	f001 f933 	bl	941c <d_print_subexpr>
    81b6:	f7fe bdd3 	b.w	6d60 <d_print_comp_inner+0xc5c>
    81ba:	2111      	movs	r1, #17
    81bc:	4620      	mov	r0, r4
    81be:	68ea      	ldr	r2, [r5, #12]
    81c0:	f001 f92c 	bl	941c <d_print_subexpr>
    81c4:	463a      	mov	r2, r7
    81c6:	2111      	movs	r1, #17
    81c8:	4620      	mov	r0, r4
    81ca:	f7ff b912 	b.w	73f2 <d_print_comp_inner+0x12ee>
    81ce:	2111      	movs	r1, #17
    81d0:	6932      	ldr	r2, [r6, #16]
    81d2:	f000 f84f 	bl	8274 <d_print_comp>
    81d6:	9b04      	ldr	r3, [sp, #16]
    81d8:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    81dc:	2b00      	cmp	r3, #0
    81de:	f43e ad50 	beq.w	6c82 <d_print_comp_inner+0xb7e>
    81e2:	f7fd bff5 	b.w	61d0 <d_print_comp_inner+0xcc>
    81e6:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
    81ea:	4563      	cmp	r3, ip
    81ec:	f77d afed 	ble.w	61ca <d_print_comp_inner+0xc6>
    81f0:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
    81f4:	f8d4 e110 	ldr.w	lr, [r4, #272]	; 0x110
    81f8:	eb02 03cc 	add.w	r3, r2, ip, lsl #3
    81fc:	f10c 0001 	add.w	r0, ip, #1
    8200:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
    8204:	3304      	adds	r3, #4
    8206:	f842 103c 	str.w	r1, [r2, ip, lsl #3]
    820a:	f1be 0f00 	cmp.w	lr, #0
    820e:	d01c      	beq.n	824a <d_print_comp_inner+0x2146>
    8210:	e9d4 2c50 	ldrd	r2, ip, [r4, #320]	; 0x140
    8214:	e011      	b.n	823a <d_print_comp_inner+0x2136>
    8216:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
    821a:	f8de 8004 	ldr.w	r8, [lr, #4]
    821e:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
    8222:	3201      	adds	r2, #1
    8224:	f8c4 2140 	str.w	r2, [r4, #320]	; 0x140
    8228:	f8c0 8004 	str.w	r8, [r0, #4]
    822c:	6018      	str	r0, [r3, #0]
    822e:	f8de e000 	ldr.w	lr, [lr]
    8232:	4603      	mov	r3, r0
    8234:	f1be 0f00 	cmp.w	lr, #0
    8238:	d007      	beq.n	824a <d_print_comp_inner+0x2146>
    823a:	4562      	cmp	r2, ip
    823c:	dbeb      	blt.n	8216 <d_print_comp_inner+0x2112>
    823e:	f7fd bfc4 	b.w	61ca <d_print_comp_inner+0xc6>
    8242:	212d      	movs	r1, #45	; 0x2d
    8244:	f7fb fcc6 	bl	3bd4 <d_append_char>
    8248:	e601      	b.n	7e4e <d_print_comp_inner+0x1d4a>
    824a:	2200      	movs	r2, #0
    824c:	601a      	str	r2, [r3, #0]
    824e:	e642      	b.n	7ed6 <d_print_comp_inner+0x1dd2>
    8250:	4620      	mov	r0, r4
    8252:	4907      	ldr	r1, [pc, #28]	; (8270 <d_print_comp_inner+0x216c>)
    8254:	f7ff bb44 	b.w	78e0 <d_print_comp_inner+0x17dc>
    8258:	463a      	mov	r2, r7
    825a:	2111      	movs	r1, #17
    825c:	f000 fefc 	bl	9058 <d_print_expr_op>
    8260:	f7fe b982 	b.w	6568 <d_print_comp_inner+0x464>
    8264:	00018f0c 	.word	0x00018f0c
    8268:	00019184 	.word	0x00019184
    826c:	00019144 	.word	0x00019144
    8270:	00019158 	.word	0x00019158

00008274 <d_print_comp>:
    8274:	b530      	push	{r4, r5, lr}
    8276:	4605      	mov	r5, r0
    8278:	b083      	sub	sp, #12
    827a:	b31a      	cbz	r2, 82c4 <d_print_comp+0x50>
    827c:	6853      	ldr	r3, [r2, #4]
    827e:	4614      	mov	r4, r2
    8280:	2b01      	cmp	r3, #1
    8282:	dc1f      	bgt.n	82c4 <d_print_comp+0x50>
    8284:	f8d0 111c 	ldr.w	r1, [r0, #284]	; 0x11c
    8288:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    828c:	dc1a      	bgt.n	82c4 <d_print_comp+0x50>
    828e:	3301      	adds	r3, #1
    8290:	6053      	str	r3, [r2, #4]
    8292:	3101      	adds	r1, #1
    8294:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
    8298:	f8c0 111c 	str.w	r1, [r0, #284]	; 0x11c
    829c:	f8c0 d12c 	str.w	sp, [r0, #300]	; 0x12c
    82a0:	2111      	movs	r1, #17
    82a2:	e9cd 2300 	strd	r2, r3, [sp]
    82a6:	f7fd ff2d 	bl	6104 <d_print_comp_inner>
    82aa:	6862      	ldr	r2, [r4, #4]
    82ac:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
    82b0:	9901      	ldr	r1, [sp, #4]
    82b2:	3a01      	subs	r2, #1
    82b4:	3b01      	subs	r3, #1
    82b6:	f8c5 112c 	str.w	r1, [r5, #300]	; 0x12c
    82ba:	6062      	str	r2, [r4, #4]
    82bc:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
    82c0:	b003      	add	sp, #12
    82c2:	bd30      	pop	{r4, r5, pc}
    82c4:	2301      	movs	r3, #1
    82c6:	f8c5 3118 	str.w	r3, [r5, #280]	; 0x118
    82ca:	b003      	add	sp, #12
    82cc:	bd30      	pop	{r4, r5, pc}
    82ce:	bf00      	nop

000082d0 <d_print_mod>:
    82d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    82d4:	7813      	ldrb	r3, [r2, #0]
    82d6:	4615      	mov	r5, r2
    82d8:	3b03      	subs	r3, #3
    82da:	4604      	mov	r4, r0
    82dc:	2b4d      	cmp	r3, #77	; 0x4d
    82de:	d84f      	bhi.n	8380 <d_print_mod+0xb0>
    82e0:	e8df f013 	tbh	[pc, r3, lsl #1]
    82e4:	004e011a 	.word	0x004e011a
    82e8:	004e004e 	.word	0x004e004e
    82ec:	004e004e 	.word	0x004e004e
    82f0:	004e004e 	.word	0x004e004e
    82f4:	004e004e 	.word	0x004e004e
    82f8:	004e004e 	.word	0x004e004e
    82fc:	004e004e 	.word	0x004e004e
    8300:	004e004e 	.word	0x004e004e
    8304:	004e004e 	.word	0x004e004e
    8308:	004e004e 	.word	0x004e004e
    830c:	004e004e 	.word	0x004e004e
    8310:	007a0053 	.word	0x007a0053
    8314:	005300a1 	.word	0x005300a1
    8318:	00a1007a 	.word	0x00a1007a
    831c:	00fb00ee 	.word	0x00fb00ee
    8320:	02990108 	.word	0x02990108
    8324:	012d011f 	.word	0x012d011f
    8328:	01780152 	.word	0x01780152
    832c:	004e004e 	.word	0x004e004e
    8330:	004e004e 	.word	0x004e004e
    8334:	004e019e 	.word	0x004e019e
    8338:	004e01ce 	.word	0x004e01ce
    833c:	004e004e 	.word	0x004e004e
    8340:	004e004e 	.word	0x004e004e
    8344:	004e004e 	.word	0x004e004e
    8348:	004e004e 	.word	0x004e004e
    834c:	004e004e 	.word	0x004e004e
    8350:	004e004e 	.word	0x004e004e
    8354:	004e004e 	.word	0x004e004e
    8358:	004e004e 	.word	0x004e004e
    835c:	004e004e 	.word	0x004e004e
    8360:	004e004e 	.word	0x004e004e
    8364:	004e004e 	.word	0x004e004e
    8368:	004e004e 	.word	0x004e004e
    836c:	004e004e 	.word	0x004e004e
    8370:	004e004e 	.word	0x004e004e
    8374:	004e004e 	.word	0x004e004e
    8378:	004e01f5 	.word	0x004e01f5
    837c:	00c60230 	.word	0x00c60230
    8380:	462a      	mov	r2, r5
    8382:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8386:	2111      	movs	r1, #17
    8388:	e774      	b.n	8274 <d_print_comp>
    838a:	4dd5      	ldr	r5, [pc, #852]	; (86e0 <d_print_mod+0x410>)
    838c:	2620      	movs	r6, #32
    838e:	f04f 0800 	mov.w	r8, #0
    8392:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8396:	f105 0708 	add.w	r7, r5, #8
    839a:	e00b      	b.n	83b4 <d_print_mod+0xe4>
    839c:	460b      	mov	r3, r1
    839e:	3101      	adds	r1, #1
    83a0:	42af      	cmp	r7, r5
    83a2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    83a6:	54e6      	strb	r6, [r4, r3]
    83a8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    83ac:	f000 80c5 	beq.w	853a <d_print_mod+0x26a>
    83b0:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    83b4:	29ff      	cmp	r1, #255	; 0xff
    83b6:	d1f1      	bne.n	839c <d_print_mod+0xcc>
    83b8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    83bc:	4620      	mov	r0, r4
    83be:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    83c2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    83c6:	4798      	blx	r3
    83c8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    83cc:	2101      	movs	r1, #1
    83ce:	3301      	adds	r3, #1
    83d0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    83d4:	2300      	movs	r3, #0
    83d6:	e7e3      	b.n	83a0 <d_print_mod+0xd0>
    83d8:	4dc2      	ldr	r5, [pc, #776]	; (86e4 <d_print_mod+0x414>)
    83da:	2620      	movs	r6, #32
    83dc:	f04f 0800 	mov.w	r8, #0
    83e0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    83e4:	f105 0708 	add.w	r7, r5, #8
    83e8:	e00b      	b.n	8402 <d_print_mod+0x132>
    83ea:	460b      	mov	r3, r1
    83ec:	3101      	adds	r1, #1
    83ee:	42af      	cmp	r7, r5
    83f0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    83f4:	54e6      	strb	r6, [r4, r3]
    83f6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    83fa:	f000 809e 	beq.w	853a <d_print_mod+0x26a>
    83fe:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8402:	29ff      	cmp	r1, #255	; 0xff
    8404:	d1f1      	bne.n	83ea <d_print_mod+0x11a>
    8406:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    840a:	4620      	mov	r0, r4
    840c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8410:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8414:	4798      	blx	r3
    8416:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    841a:	2101      	movs	r1, #1
    841c:	3301      	adds	r3, #1
    841e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8422:	2300      	movs	r3, #0
    8424:	e7e3      	b.n	83ee <d_print_mod+0x11e>
    8426:	4db0      	ldr	r5, [pc, #704]	; (86e8 <d_print_mod+0x418>)
    8428:	2620      	movs	r6, #32
    842a:	f04f 0800 	mov.w	r8, #0
    842e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8432:	1d6f      	adds	r7, r5, #5
    8434:	e00a      	b.n	844c <d_print_mod+0x17c>
    8436:	460b      	mov	r3, r1
    8438:	3101      	adds	r1, #1
    843a:	42bd      	cmp	r5, r7
    843c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8440:	54e6      	strb	r6, [r4, r3]
    8442:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8446:	d078      	beq.n	853a <d_print_mod+0x26a>
    8448:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    844c:	29ff      	cmp	r1, #255	; 0xff
    844e:	d1f2      	bne.n	8436 <d_print_mod+0x166>
    8450:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8454:	4620      	mov	r0, r4
    8456:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    845a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    845e:	4798      	blx	r3
    8460:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8464:	2101      	movs	r1, #1
    8466:	3301      	adds	r3, #1
    8468:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    846c:	2300      	movs	r3, #0
    846e:	e7e4      	b.n	843a <d_print_mod+0x16a>
    8470:	4e9e      	ldr	r6, [pc, #632]	; (86ec <d_print_mod+0x41c>)
    8472:	2720      	movs	r7, #32
    8474:	f04f 0800 	mov.w	r8, #0
    8478:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    847c:	f106 0905 	add.w	r9, r6, #5
    8480:	e00b      	b.n	849a <d_print_mod+0x1ca>
    8482:	461a      	mov	r2, r3
    8484:	3301      	adds	r3, #1
    8486:	45b1      	cmp	r9, r6
    8488:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    848c:	54a7      	strb	r7, [r4, r2]
    848e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    8492:	f000 817e 	beq.w	8792 <d_print_mod+0x4c2>
    8496:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    849a:	2bff      	cmp	r3, #255	; 0xff
    849c:	d1f1      	bne.n	8482 <d_print_mod+0x1b2>
    849e:	4619      	mov	r1, r3
    84a0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    84a4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    84a8:	4620      	mov	r0, r4
    84aa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    84ae:	4798      	blx	r3
    84b0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    84b4:	2200      	movs	r2, #0
    84b6:	3301      	adds	r3, #1
    84b8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    84bc:	2301      	movs	r3, #1
    84be:	e7e2      	b.n	8486 <d_print_mod+0x1b6>
    84c0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    84c4:	2bff      	cmp	r3, #255	; 0xff
    84c6:	f000 81e5 	beq.w	8894 <d_print_mod+0x5c4>
    84ca:	2220      	movs	r2, #32
    84cc:	1c59      	adds	r1, r3, #1
    84ce:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
    84d2:	54c2      	strb	r2, [r0, r3]
    84d4:	f880 2104 	strb.w	r2, [r0, #260]	; 0x104
    84d8:	e025      	b.n	8526 <d_print_mod+0x256>
    84da:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    84de:	2bff      	cmp	r3, #255	; 0xff
    84e0:	f000 81b8 	beq.w	8854 <d_print_mod+0x584>
    84e4:	1c59      	adds	r1, r3, #1
    84e6:	2220      	movs	r2, #32
    84e8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    84ec:	54e2      	strb	r2, [r4, r3]
    84ee:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    84f2:	e026      	b.n	8542 <d_print_mod+0x272>
    84f4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    84f8:	2bff      	cmp	r3, #255	; 0xff
    84fa:	f000 81ba 	beq.w	8872 <d_print_mod+0x5a2>
    84fe:	1c59      	adds	r1, r3, #1
    8500:	2220      	movs	r2, #32
    8502:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8506:	54e2      	strb	r2, [r4, r3]
    8508:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    850c:	4620      	mov	r0, r4
    850e:	692a      	ldr	r2, [r5, #16]
    8510:	2111      	movs	r1, #17
    8512:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8516:	e6ad      	b.n	8274 <d_print_comp>
    8518:	68ea      	ldr	r2, [r5, #12]
    851a:	2111      	movs	r1, #17
    851c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8520:	e6a8      	b.n	8274 <d_print_comp>
    8522:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8526:	29ff      	cmp	r1, #255	; 0xff
    8528:	f000 81c4 	beq.w	88b4 <d_print_mod+0x5e4>
    852c:	1c4a      	adds	r2, r1, #1
    852e:	2326      	movs	r3, #38	; 0x26
    8530:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8534:	5463      	strb	r3, [r4, r1]
    8536:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    853a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    853e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8542:	4d6b      	ldr	r5, [pc, #428]	; (86f0 <d_print_mod+0x420>)
    8544:	2626      	movs	r6, #38	; 0x26
    8546:	f04f 0800 	mov.w	r8, #0
    854a:	1c6f      	adds	r7, r5, #1
    854c:	e00a      	b.n	8564 <d_print_mod+0x294>
    854e:	460b      	mov	r3, r1
    8550:	3101      	adds	r1, #1
    8552:	42bd      	cmp	r5, r7
    8554:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8558:	54e6      	strb	r6, [r4, r3]
    855a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    855e:	d0ec      	beq.n	853a <d_print_mod+0x26a>
    8560:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8564:	29ff      	cmp	r1, #255	; 0xff
    8566:	d1f2      	bne.n	854e <d_print_mod+0x27e>
    8568:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    856c:	4620      	mov	r0, r4
    856e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8572:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8576:	4798      	blx	r3
    8578:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    857c:	2101      	movs	r1, #1
    857e:	3301      	adds	r3, #1
    8580:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8584:	2300      	movs	r3, #0
    8586:	e7e4      	b.n	8552 <d_print_mod+0x282>
    8588:	4d5a      	ldr	r5, [pc, #360]	; (86f4 <d_print_mod+0x424>)
    858a:	2620      	movs	r6, #32
    858c:	f04f 0800 	mov.w	r8, #0
    8590:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8594:	f105 0708 	add.w	r7, r5, #8
    8598:	e00a      	b.n	85b0 <d_print_mod+0x2e0>
    859a:	460b      	mov	r3, r1
    859c:	3101      	adds	r1, #1
    859e:	42bd      	cmp	r5, r7
    85a0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    85a4:	54e6      	strb	r6, [r4, r3]
    85a6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    85aa:	d0c6      	beq.n	853a <d_print_mod+0x26a>
    85ac:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    85b0:	29ff      	cmp	r1, #255	; 0xff
    85b2:	d1f2      	bne.n	859a <d_print_mod+0x2ca>
    85b4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    85b8:	4620      	mov	r0, r4
    85ba:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    85be:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    85c2:	4798      	blx	r3
    85c4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    85c8:	2101      	movs	r1, #1
    85ca:	3301      	adds	r3, #1
    85cc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    85d0:	2300      	movs	r3, #0
    85d2:	e7e4      	b.n	859e <d_print_mod+0x2ce>
    85d4:	4d48      	ldr	r5, [pc, #288]	; (86f8 <d_print_mod+0x428>)
    85d6:	2620      	movs	r6, #32
    85d8:	f04f 0800 	mov.w	r8, #0
    85dc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    85e0:	f105 070a 	add.w	r7, r5, #10
    85e4:	e00a      	b.n	85fc <d_print_mod+0x32c>
    85e6:	460b      	mov	r3, r1
    85e8:	3101      	adds	r1, #1
    85ea:	42bd      	cmp	r5, r7
    85ec:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    85f0:	54e6      	strb	r6, [r4, r3]
    85f2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    85f6:	d0a0      	beq.n	853a <d_print_mod+0x26a>
    85f8:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    85fc:	29ff      	cmp	r1, #255	; 0xff
    85fe:	d1f2      	bne.n	85e6 <d_print_mod+0x316>
    8600:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8604:	4620      	mov	r0, r4
    8606:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    860a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    860e:	4798      	blx	r3
    8610:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8614:	2101      	movs	r1, #1
    8616:	3301      	adds	r3, #1
    8618:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    861c:	2300      	movs	r3, #0
    861e:	e7e4      	b.n	85ea <d_print_mod+0x31a>
    8620:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
    8624:	2b28      	cmp	r3, #40	; 0x28
    8626:	f040 80ea 	bne.w	87fe <d_print_mod+0x52e>
    862a:	68ea      	ldr	r2, [r5, #12]
    862c:	4d33      	ldr	r5, [pc, #204]	; (86fc <d_print_mod+0x42c>)
    862e:	2111      	movs	r1, #17
    8630:	4620      	mov	r0, r4
    8632:	f7ff fe1f 	bl	8274 <d_print_comp>
    8636:	263a      	movs	r6, #58	; 0x3a
    8638:	2700      	movs	r7, #0
    863a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    863e:	f105 0802 	add.w	r8, r5, #2
    8642:	e00b      	b.n	865c <d_print_mod+0x38c>
    8644:	460b      	mov	r3, r1
    8646:	3101      	adds	r1, #1
    8648:	45a8      	cmp	r8, r5
    864a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    864e:	54e6      	strb	r6, [r4, r3]
    8650:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8654:	f43f af71 	beq.w	853a <d_print_mod+0x26a>
    8658:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    865c:	29ff      	cmp	r1, #255	; 0xff
    865e:	d1f1      	bne.n	8644 <d_print_mod+0x374>
    8660:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8664:	4620      	mov	r0, r4
    8666:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    866a:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    866e:	4798      	blx	r3
    8670:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8674:	2101      	movs	r1, #1
    8676:	3301      	adds	r3, #1
    8678:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    867c:	2300      	movs	r3, #0
    867e:	e7e3      	b.n	8648 <d_print_mod+0x378>
    8680:	4e1f      	ldr	r6, [pc, #124]	; (8700 <d_print_mod+0x430>)
    8682:	2720      	movs	r7, #32
    8684:	f04f 0800 	mov.w	r8, #0
    8688:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    868c:	f106 0909 	add.w	r9, r6, #9
    8690:	e00b      	b.n	86aa <d_print_mod+0x3da>
    8692:	460b      	mov	r3, r1
    8694:	3101      	adds	r1, #1
    8696:	45b1      	cmp	r9, r6
    8698:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    869c:	54e7      	strb	r7, [r4, r3]
    869e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    86a2:	f000 809a 	beq.w	87da <d_print_mod+0x50a>
    86a6:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    86aa:	29ff      	cmp	r1, #255	; 0xff
    86ac:	d1f1      	bne.n	8692 <d_print_mod+0x3c2>
    86ae:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    86b2:	4620      	mov	r0, r4
    86b4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    86b8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    86bc:	4798      	blx	r3
    86be:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    86c2:	2101      	movs	r1, #1
    86c4:	3301      	adds	r3, #1
    86c6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    86ca:	2300      	movs	r3, #0
    86cc:	e7e3      	b.n	8696 <d_print_mod+0x3c6>
    86ce:	4d0d      	ldr	r5, [pc, #52]	; (8704 <d_print_mod+0x434>)
    86d0:	2620      	movs	r6, #32
    86d2:	f04f 0800 	mov.w	r8, #0
    86d6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    86da:	f105 0710 	add.w	r7, r5, #16
    86de:	e01f      	b.n	8720 <d_print_mod+0x450>
    86e0:	00019204 	.word	0x00019204
    86e4:	00019210 	.word	0x00019210
    86e8:	0001921c 	.word	0x0001921c
    86ec:	00019244 	.word	0x00019244
    86f0:	0001924c 	.word	0x0001924c
    86f4:	00019250 	.word	0x00019250
    86f8:	0001925c 	.word	0x0001925c
    86fc:	00019268 	.word	0x00019268
    8700:	0001926c 	.word	0x0001926c
    8704:	00019224 	.word	0x00019224
    8708:	460b      	mov	r3, r1
    870a:	3101      	adds	r1, #1
    870c:	42af      	cmp	r7, r5
    870e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8712:	54e6      	strb	r6, [r4, r3]
    8714:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8718:	f43f af0f 	beq.w	853a <d_print_mod+0x26a>
    871c:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8720:	29ff      	cmp	r1, #255	; 0xff
    8722:	d1f1      	bne.n	8708 <d_print_mod+0x438>
    8724:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8728:	4620      	mov	r0, r4
    872a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    872e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8732:	4798      	blx	r3
    8734:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8738:	2101      	movs	r1, #1
    873a:	3301      	adds	r3, #1
    873c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8740:	2300      	movs	r3, #0
    8742:	e7e3      	b.n	870c <d_print_mod+0x43c>
    8744:	4e72      	ldr	r6, [pc, #456]	; (8910 <d_print_mod+0x640>)
    8746:	2720      	movs	r7, #32
    8748:	f04f 0800 	mov.w	r8, #0
    874c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    8750:	f106 0908 	add.w	r9, r6, #8
    8754:	e00a      	b.n	876c <d_print_mod+0x49c>
    8756:	461a      	mov	r2, r3
    8758:	3301      	adds	r3, #1
    875a:	454e      	cmp	r6, r9
    875c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8760:	54a7      	strb	r7, [r4, r2]
    8762:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    8766:	d014      	beq.n	8792 <d_print_mod+0x4c2>
    8768:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    876c:	2bff      	cmp	r3, #255	; 0xff
    876e:	d1f2      	bne.n	8756 <d_print_mod+0x486>
    8770:	4619      	mov	r1, r3
    8772:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8776:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    877a:	4620      	mov	r0, r4
    877c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8780:	4798      	blx	r3
    8782:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8786:	2200      	movs	r2, #0
    8788:	3301      	adds	r3, #1
    878a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    878e:	2301      	movs	r3, #1
    8790:	e7e3      	b.n	875a <d_print_mod+0x48a>
    8792:	692a      	ldr	r2, [r5, #16]
    8794:	2a00      	cmp	r2, #0
    8796:	f43f aed0 	beq.w	853a <d_print_mod+0x26a>
    879a:	2bff      	cmp	r3, #255	; 0xff
    879c:	d047      	beq.n	882e <d_print_mod+0x55e>
    879e:	1c59      	adds	r1, r3, #1
    87a0:	2528      	movs	r5, #40	; 0x28
    87a2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    87a6:	4620      	mov	r0, r4
    87a8:	2111      	movs	r1, #17
    87aa:	54e5      	strb	r5, [r4, r3]
    87ac:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    87b0:	f7ff fd60 	bl	8274 <d_print_comp>
    87b4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    87b8:	29ff      	cmp	r1, #255	; 0xff
    87ba:	d117      	bne.n	87ec <d_print_mod+0x51c>
    87bc:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    87c0:	2500      	movs	r5, #0
    87c2:	4620      	mov	r0, r4
    87c4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    87c8:	4798      	blx	r3
    87ca:	2201      	movs	r2, #1
    87cc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    87d0:	4629      	mov	r1, r5
    87d2:	4413      	add	r3, r2
    87d4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    87d8:	e009      	b.n	87ee <d_print_mod+0x51e>
    87da:	2111      	movs	r1, #17
    87dc:	4620      	mov	r0, r4
    87de:	68ea      	ldr	r2, [r5, #12]
    87e0:	f7ff fd48 	bl	8274 <d_print_comp>
    87e4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    87e8:	29ff      	cmp	r1, #255	; 0xff
    87ea:	d0e7      	beq.n	87bc <d_print_mod+0x4ec>
    87ec:	1c4a      	adds	r2, r1, #1
    87ee:	2329      	movs	r3, #41	; 0x29
    87f0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    87f4:	5463      	strb	r3, [r4, r1]
    87f6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    87fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    87fe:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8802:	29ff      	cmp	r1, #255	; 0xff
    8804:	d065      	beq.n	88d2 <d_print_mod+0x602>
    8806:	1c4a      	adds	r2, r1, #1
    8808:	2320      	movs	r3, #32
    880a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    880e:	5463      	strb	r3, [r4, r1]
    8810:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8814:	e709      	b.n	862a <d_print_mod+0x35a>
    8816:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    881a:	29ff      	cmp	r1, #255	; 0xff
    881c:	d069      	beq.n	88f2 <d_print_mod+0x622>
    881e:	1c4a      	adds	r2, r1, #1
    8820:	232a      	movs	r3, #42	; 0x2a
    8822:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8826:	5463      	strb	r3, [r4, r1]
    8828:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    882c:	e685      	b.n	853a <d_print_mod+0x26a>
    882e:	2600      	movs	r6, #0
    8830:	4619      	mov	r1, r3
    8832:	4620      	mov	r0, r4
    8834:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8838:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    883c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    8840:	4798      	blx	r3
    8842:	2101      	movs	r1, #1
    8844:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
    8848:	692a      	ldr	r2, [r5, #16]
    884a:	4408      	add	r0, r1
    884c:	4633      	mov	r3, r6
    884e:	f8c4 0128 	str.w	r0, [r4, #296]	; 0x128
    8852:	e7a5      	b.n	87a0 <d_print_mod+0x4d0>
    8854:	2500      	movs	r5, #0
    8856:	4619      	mov	r1, r3
    8858:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    885c:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    8860:	4798      	blx	r3
    8862:	2101      	movs	r1, #1
    8864:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8868:	462b      	mov	r3, r5
    886a:	440a      	add	r2, r1
    886c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8870:	e639      	b.n	84e6 <d_print_mod+0x216>
    8872:	2600      	movs	r6, #0
    8874:	4619      	mov	r1, r3
    8876:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    887a:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    887e:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    8882:	4798      	blx	r3
    8884:	2101      	movs	r1, #1
    8886:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    888a:	4633      	mov	r3, r6
    888c:	440a      	add	r2, r1
    888e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8892:	e635      	b.n	8500 <d_print_mod+0x230>
    8894:	2500      	movs	r5, #0
    8896:	4619      	mov	r1, r3
    8898:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    889c:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    88a0:	4798      	blx	r3
    88a2:	2101      	movs	r1, #1
    88a4:	2220      	movs	r2, #32
    88a6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    88aa:	7022      	strb	r2, [r4, #0]
    88ac:	440b      	add	r3, r1
    88ae:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    88b2:	e63b      	b.n	852c <d_print_mod+0x25c>
    88b4:	2500      	movs	r5, #0
    88b6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    88ba:	4620      	mov	r0, r4
    88bc:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    88c0:	4798      	blx	r3
    88c2:	2201      	movs	r2, #1
    88c4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    88c8:	4629      	mov	r1, r5
    88ca:	4413      	add	r3, r2
    88cc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    88d0:	e62d      	b.n	852e <d_print_mod+0x25e>
    88d2:	2600      	movs	r6, #0
    88d4:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    88d8:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    88dc:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    88e0:	4798      	blx	r3
    88e2:	2201      	movs	r2, #1
    88e4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    88e8:	4631      	mov	r1, r6
    88ea:	4413      	add	r3, r2
    88ec:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    88f0:	e78a      	b.n	8808 <d_print_mod+0x538>
    88f2:	2500      	movs	r5, #0
    88f4:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    88f8:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    88fc:	4798      	blx	r3
    88fe:	2201      	movs	r2, #1
    8900:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8904:	4629      	mov	r1, r5
    8906:	4413      	add	r3, r2
    8908:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    890c:	e788      	b.n	8820 <d_print_mod+0x550>
    890e:	bf00      	nop
    8910:	00019238 	.word	0x00019238

00008914 <d_print_function_type>:
    8914:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8918:	4604      	mov	r4, r0
    891a:	4617      	mov	r7, r2
    891c:	461d      	mov	r5, r3
    891e:	2b00      	cmp	r3, #0
    8920:	d064      	beq.n	89ec <d_print_function_type+0xd8>
    8922:	689a      	ldr	r2, [r3, #8]
    8924:	2a00      	cmp	r2, #0
    8926:	d161      	bne.n	89ec <d_print_function_type+0xd8>
    8928:	685a      	ldr	r2, [r3, #4]
    892a:	7811      	ldrb	r1, [r2, #0]
    892c:	3919      	subs	r1, #25
    892e:	2912      	cmp	r1, #18
    8930:	d859      	bhi.n	89e6 <d_print_function_type+0xd2>
    8932:	e8df f001 	tbb	[pc, r1]
    8936:	0a0a      	.short	0x0a0a
    8938:	5858580a 	.word	0x5858580a
    893c:	800a5858 	.word	0x800a5858
    8940:	0a0a8080 	.word	0x0a0a8080
    8944:	58585858 	.word	0x58585858
    8948:	0a          	.byte	0x0a
    8949:	00          	.byte	0x00
    894a:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    894e:	2b20      	cmp	r3, #32
    8950:	d179      	bne.n	8a46 <d_print_function_type+0x132>
    8952:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
    8956:	2eff      	cmp	r6, #255	; 0xff
    8958:	f000 8083 	beq.w	8a62 <d_print_function_type+0x14e>
    895c:	1c73      	adds	r3, r6, #1
    895e:	f04f 0928 	mov.w	r9, #40	; 0x28
    8962:	f04f 0a00 	mov.w	sl, #0
    8966:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    896a:	f804 9006 	strb.w	r9, [r4, r6]
    896e:	462a      	mov	r2, r5
    8970:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
    8974:	2111      	movs	r1, #17
    8976:	4620      	mov	r0, r4
    8978:	4653      	mov	r3, sl
    897a:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    897e:	f8c4 a114 	str.w	sl, [r4, #276]	; 0x114
    8982:	f000 f8b9 	bl	8af8 <d_print_mod_list>
    8986:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
    898a:	2aff      	cmp	r2, #255	; 0xff
    898c:	f000 808a 	beq.w	8aa4 <d_print_function_type+0x190>
    8990:	2329      	movs	r3, #41	; 0x29
    8992:	1c51      	adds	r1, r2, #1
    8994:	29ff      	cmp	r1, #255	; 0xff
    8996:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    899a:	54a3      	strb	r3, [r4, r2]
    899c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    89a0:	d032      	beq.n	8a08 <d_print_function_type+0xf4>
    89a2:	2328      	movs	r3, #40	; 0x28
    89a4:	1c4e      	adds	r6, r1, #1
    89a6:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
    89aa:	5463      	strb	r3, [r4, r1]
    89ac:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    89b0:	693a      	ldr	r2, [r7, #16]
    89b2:	b12a      	cbz	r2, 89c0 <d_print_function_type+0xac>
    89b4:	2111      	movs	r1, #17
    89b6:	4620      	mov	r0, r4
    89b8:	f7ff fc5c 	bl	8274 <d_print_comp>
    89bc:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
    89c0:	2eff      	cmp	r6, #255	; 0xff
    89c2:	d05f      	beq.n	8a84 <d_print_function_type+0x170>
    89c4:	1c73      	adds	r3, r6, #1
    89c6:	2729      	movs	r7, #41	; 0x29
    89c8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    89cc:	462a      	mov	r2, r5
    89ce:	55a7      	strb	r7, [r4, r6]
    89d0:	2301      	movs	r3, #1
    89d2:	2111      	movs	r1, #17
    89d4:	4620      	mov	r0, r4
    89d6:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    89da:	f000 f88d 	bl	8af8 <d_print_mod_list>
    89de:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
    89e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    89e6:	681b      	ldr	r3, [r3, #0]
    89e8:	2b00      	cmp	r3, #0
    89ea:	d19a      	bne.n	8922 <d_print_function_type+0xe>
    89ec:	2300      	movs	r3, #0
    89ee:	2111      	movs	r1, #17
    89f0:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
    89f4:	462a      	mov	r2, r5
    89f6:	4620      	mov	r0, r4
    89f8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    89fc:	f000 f87c 	bl	8af8 <d_print_mod_list>
    8a00:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8a04:	29ff      	cmp	r1, #255	; 0xff
    8a06:	d1cc      	bne.n	89a2 <d_print_function_type+0x8e>
    8a08:	2300      	movs	r3, #0
    8a0a:	4620      	mov	r0, r4
    8a0c:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
    8a10:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8a14:	4798      	blx	r3
    8a16:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8a1a:	2601      	movs	r6, #1
    8a1c:	3301      	adds	r3, #1
    8a1e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8a22:	2328      	movs	r3, #40	; 0x28
    8a24:	7023      	strb	r3, [r4, #0]
    8a26:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8a2a:	693a      	ldr	r2, [r7, #16]
    8a2c:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
    8a30:	2a00      	cmp	r2, #0
    8a32:	d1bf      	bne.n	89b4 <d_print_function_type+0xa0>
    8a34:	e7c6      	b.n	89c4 <d_print_function_type+0xb0>
    8a36:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    8a3a:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
    8a3e:	2a28      	cmp	r2, #40	; 0x28
    8a40:	d087      	beq.n	8952 <d_print_function_type+0x3e>
    8a42:	2b20      	cmp	r3, #32
    8a44:	d085      	beq.n	8952 <d_print_function_type+0x3e>
    8a46:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8a4a:	29ff      	cmp	r1, #255	; 0xff
    8a4c:	d043      	beq.n	8ad6 <d_print_function_type+0x1c2>
    8a4e:	2320      	movs	r3, #32
    8a50:	1c4e      	adds	r6, r1, #1
    8a52:	2eff      	cmp	r6, #255	; 0xff
    8a54:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
    8a58:	5463      	strb	r3, [r4, r1]
    8a5a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8a5e:	f47f af7d 	bne.w	895c <d_print_function_type+0x48>
    8a62:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8a66:	f04f 0800 	mov.w	r8, #0
    8a6a:	4631      	mov	r1, r6
    8a6c:	4620      	mov	r0, r4
    8a6e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8a72:	4798      	blx	r3
    8a74:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8a78:	4646      	mov	r6, r8
    8a7a:	3301      	adds	r3, #1
    8a7c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8a80:	2301      	movs	r3, #1
    8a82:	e76c      	b.n	895e <d_print_function_type+0x4a>
    8a84:	2700      	movs	r7, #0
    8a86:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8a8a:	4631      	mov	r1, r6
    8a8c:	4620      	mov	r0, r4
    8a8e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    8a92:	4798      	blx	r3
    8a94:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8a98:	463e      	mov	r6, r7
    8a9a:	3301      	adds	r3, #1
    8a9c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8aa0:	2301      	movs	r3, #1
    8aa2:	e790      	b.n	89c6 <d_print_function_type+0xb2>
    8aa4:	4611      	mov	r1, r2
    8aa6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8aaa:	4620      	mov	r0, r4
    8aac:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
    8ab0:	4798      	blx	r3
    8ab2:	f642 0229 	movw	r2, #10281	; 0x2829
    8ab6:	2602      	movs	r6, #2
    8ab8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8abc:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    8ac0:	8022      	strh	r2, [r4, #0]
    8ac2:	693a      	ldr	r2, [r7, #16]
    8ac4:	3301      	adds	r3, #1
    8ac6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8aca:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
    8ace:	2a00      	cmp	r2, #0
    8ad0:	f47f af70 	bne.w	89b4 <d_print_function_type+0xa0>
    8ad4:	e776      	b.n	89c4 <d_print_function_type+0xb0>
    8ad6:	2600      	movs	r6, #0
    8ad8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8adc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    8ae0:	4620      	mov	r0, r4
    8ae2:	4798      	blx	r3
    8ae4:	2220      	movs	r2, #32
    8ae6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8aea:	2601      	movs	r6, #1
    8aec:	3301      	adds	r3, #1
    8aee:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8af2:	7022      	strb	r2, [r4, #0]
    8af4:	e732      	b.n	895c <d_print_function_type+0x48>
    8af6:	bf00      	nop

00008af8 <d_print_mod_list>:
    8af8:	2a00      	cmp	r2, #0
    8afa:	f000 80c2 	beq.w	8c82 <d_print_mod_list+0x18a>
    8afe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8b02:	4605      	mov	r5, r0
    8b04:	4614      	mov	r4, r2
    8b06:	461e      	mov	r6, r3
    8b08:	2701      	movs	r7, #1
    8b0a:	b089      	sub	sp, #36	; 0x24
    8b0c:	f8d5 2118 	ldr.w	r2, [r5, #280]	; 0x118
    8b10:	b9ca      	cbnz	r2, 8b46 <d_print_mod_list+0x4e>
    8b12:	68a2      	ldr	r2, [r4, #8]
    8b14:	bb0a      	cbnz	r2, 8b5a <d_print_mod_list+0x62>
    8b16:	6862      	ldr	r2, [r4, #4]
    8b18:	7811      	ldrb	r1, [r2, #0]
    8b1a:	b1be      	cbz	r6, 8b4c <d_print_mod_list+0x54>
    8b1c:	68e3      	ldr	r3, [r4, #12]
    8b1e:	2929      	cmp	r1, #41	; 0x29
    8b20:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
    8b24:	60a7      	str	r7, [r4, #8]
    8b26:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
    8b2a:	d024      	beq.n	8b76 <d_print_mod_list+0x7e>
    8b2c:	292a      	cmp	r1, #42	; 0x2a
    8b2e:	d02c      	beq.n	8b8a <d_print_mod_list+0x92>
    8b30:	2902      	cmp	r1, #2
    8b32:	d034      	beq.n	8b9e <d_print_mod_list+0xa6>
    8b34:	2111      	movs	r1, #17
    8b36:	4628      	mov	r0, r5
    8b38:	f7ff fbca 	bl	82d0 <d_print_mod>
    8b3c:	6824      	ldr	r4, [r4, #0]
    8b3e:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    8b42:	2c00      	cmp	r4, #0
    8b44:	d1e2      	bne.n	8b0c <d_print_mod_list+0x14>
    8b46:	b009      	add	sp, #36	; 0x24
    8b48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b4c:	294d      	cmp	r1, #77	; 0x4d
    8b4e:	d004      	beq.n	8b5a <d_print_mod_list+0x62>
    8b50:	d807      	bhi.n	8b62 <d_print_mod_list+0x6a>
    8b52:	f1a1 031c 	sub.w	r3, r1, #28
    8b56:	2b04      	cmp	r3, #4
    8b58:	d8e0      	bhi.n	8b1c <d_print_mod_list+0x24>
    8b5a:	6824      	ldr	r4, [r4, #0]
    8b5c:	2c00      	cmp	r4, #0
    8b5e:	d1d5      	bne.n	8b0c <d_print_mod_list+0x14>
    8b60:	e7f1      	b.n	8b46 <d_print_mod_list+0x4e>
    8b62:	394f      	subs	r1, #79	; 0x4f
    8b64:	2901      	cmp	r1, #1
    8b66:	d9f8      	bls.n	8b5a <d_print_mod_list+0x62>
    8b68:	68e3      	ldr	r3, [r4, #12]
    8b6a:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
    8b6e:	60a7      	str	r7, [r4, #8]
    8b70:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
    8b74:	e7de      	b.n	8b34 <d_print_mod_list+0x3c>
    8b76:	2111      	movs	r1, #17
    8b78:	4628      	mov	r0, r5
    8b7a:	6823      	ldr	r3, [r4, #0]
    8b7c:	f7ff feca 	bl	8914 <d_print_function_type>
    8b80:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    8b84:	b009      	add	sp, #36	; 0x24
    8b86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b8a:	2111      	movs	r1, #17
    8b8c:	4628      	mov	r0, r5
    8b8e:	6823      	ldr	r3, [r4, #0]
    8b90:	f000 f8d6 	bl	8d40 <d_print_array_type>
    8b94:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    8b98:	b009      	add	sp, #36	; 0x24
    8b9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b9e:	f04f 0900 	mov.w	r9, #0
    8ba2:	f8d5 b114 	ldr.w	fp, [r5, #276]	; 0x114
    8ba6:	4e62      	ldr	r6, [pc, #392]	; (8d30 <d_print_mod_list+0x238>)
    8ba8:	2111      	movs	r1, #17
    8baa:	68d2      	ldr	r2, [r2, #12]
    8bac:	4628      	mov	r0, r5
    8bae:	f8c5 9114 	str.w	r9, [r5, #276]	; 0x114
    8bb2:	f7ff fb5f 	bl	8274 <d_print_comp>
    8bb6:	273a      	movs	r7, #58	; 0x3a
    8bb8:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    8bbc:	f106 0a01 	add.w	sl, r6, #1
    8bc0:	f8c5 b114 	str.w	fp, [r5, #276]	; 0x114
    8bc4:	e00a      	b.n	8bdc <d_print_mod_list+0xe4>
    8bc6:	460b      	mov	r3, r1
    8bc8:	3101      	adds	r1, #1
    8bca:	4556      	cmp	r6, sl
    8bcc:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8bd0:	54ef      	strb	r7, [r5, r3]
    8bd2:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
    8bd6:	d013      	beq.n	8c00 <d_print_mod_list+0x108>
    8bd8:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    8bdc:	29ff      	cmp	r1, #255	; 0xff
    8bde:	d1f2      	bne.n	8bc6 <d_print_mod_list+0xce>
    8be0:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8be4:	4628      	mov	r0, r5
    8be6:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8bea:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8bee:	4798      	blx	r3
    8bf0:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8bf4:	2101      	movs	r1, #1
    8bf6:	3301      	adds	r3, #1
    8bf8:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8bfc:	2300      	movs	r3, #0
    8bfe:	e7e4      	b.n	8bca <d_print_mod_list+0xd2>
    8c00:	6863      	ldr	r3, [r4, #4]
    8c02:	691c      	ldr	r4, [r3, #16]
    8c04:	7823      	ldrb	r3, [r4, #0]
    8c06:	2b47      	cmp	r3, #71	; 0x47
    8c08:	d017      	beq.n	8c3a <d_print_mod_list+0x142>
    8c0a:	2b4d      	cmp	r3, #77	; 0x4d
    8c0c:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
    8c10:	f1a3 011c 	sub.w	r1, r3, #28
    8c14:	d00e      	beq.n	8c34 <d_print_mod_list+0x13c>
    8c16:	d80b      	bhi.n	8c30 <d_print_mod_list+0x138>
    8c18:	2904      	cmp	r1, #4
    8c1a:	d90b      	bls.n	8c34 <d_print_mod_list+0x13c>
    8c1c:	4622      	mov	r2, r4
    8c1e:	2111      	movs	r1, #17
    8c20:	4628      	mov	r0, r5
    8c22:	f7ff fb27 	bl	8274 <d_print_comp>
    8c26:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    8c2a:	b009      	add	sp, #36	; 0x24
    8c2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8c30:	2a01      	cmp	r2, #1
    8c32:	d8f3      	bhi.n	8c1c <d_print_mod_list+0x124>
    8c34:	68e4      	ldr	r4, [r4, #12]
    8c36:	7823      	ldrb	r3, [r4, #0]
    8c38:	e7e7      	b.n	8c0a <d_print_mod_list+0x112>
    8c3a:	4f3e      	ldr	r7, [pc, #248]	; (8d34 <d_print_mod_list+0x23c>)
    8c3c:	267b      	movs	r6, #123	; 0x7b
    8c3e:	f04f 0900 	mov.w	r9, #0
    8c42:	f107 0a0c 	add.w	sl, r7, #12
    8c46:	e00a      	b.n	8c5e <d_print_mod_list+0x166>
    8c48:	460b      	mov	r3, r1
    8c4a:	3101      	adds	r1, #1
    8c4c:	4557      	cmp	r7, sl
    8c4e:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8c52:	54ee      	strb	r6, [r5, r3]
    8c54:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    8c58:	d014      	beq.n	8c84 <d_print_mod_list+0x18c>
    8c5a:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    8c5e:	29ff      	cmp	r1, #255	; 0xff
    8c60:	d1f2      	bne.n	8c48 <d_print_mod_list+0x150>
    8c62:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8c66:	4628      	mov	r0, r5
    8c68:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8c6c:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8c70:	4798      	blx	r3
    8c72:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8c76:	2101      	movs	r1, #1
    8c78:	3301      	adds	r3, #1
    8c7a:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8c7e:	2300      	movs	r3, #0
    8c80:	e7e4      	b.n	8c4c <d_print_mod_list+0x154>
    8c82:	4770      	bx	lr
    8c84:	6922      	ldr	r2, [r4, #16]
    8c86:	492c      	ldr	r1, [pc, #176]	; (8d38 <d_print_mod_list+0x240>)
    8c88:	3201      	adds	r2, #1
    8c8a:	a801      	add	r0, sp, #4
    8c8c:	f004 fb52 	bl	d334 <sprintf>
    8c90:	a801      	add	r0, sp, #4
    8c92:	f004 fc4f 	bl	d534 <strlen>
    8c96:	4682      	mov	sl, r0
    8c98:	b318      	cbz	r0, 8ce2 <d_print_mod_list+0x1ea>
    8c9a:	ae01      	add	r6, sp, #4
    8c9c:	f04f 0900 	mov.w	r9, #0
    8ca0:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    8ca4:	44b2      	add	sl, r6
    8ca6:	e008      	b.n	8cba <d_print_mod_list+0x1c2>
    8ca8:	460b      	mov	r3, r1
    8caa:	3101      	adds	r1, #1
    8cac:	4556      	cmp	r6, sl
    8cae:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8cb2:	54ef      	strb	r7, [r5, r3]
    8cb4:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
    8cb8:	d015      	beq.n	8ce6 <d_print_mod_list+0x1ee>
    8cba:	29ff      	cmp	r1, #255	; 0xff
    8cbc:	f816 7b01 	ldrb.w	r7, [r6], #1
    8cc0:	d1f2      	bne.n	8ca8 <d_print_mod_list+0x1b0>
    8cc2:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8cc6:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8cca:	4628      	mov	r0, r5
    8ccc:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8cd0:	4798      	blx	r3
    8cd2:	2101      	movs	r1, #1
    8cd4:	f8d5 2128 	ldr.w	r2, [r5, #296]	; 0x128
    8cd8:	2300      	movs	r3, #0
    8cda:	440a      	add	r2, r1
    8cdc:	f8c5 2128 	str.w	r2, [r5, #296]	; 0x128
    8ce0:	e7e4      	b.n	8cac <d_print_mod_list+0x1b4>
    8ce2:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    8ce6:	4f15      	ldr	r7, [pc, #84]	; (8d3c <d_print_mod_list+0x244>)
    8ce8:	267d      	movs	r6, #125	; 0x7d
    8cea:	f04f 0900 	mov.w	r9, #0
    8cee:	f107 0a02 	add.w	sl, r7, #2
    8cf2:	e00a      	b.n	8d0a <d_print_mod_list+0x212>
    8cf4:	460b      	mov	r3, r1
    8cf6:	3101      	adds	r1, #1
    8cf8:	45ba      	cmp	sl, r7
    8cfa:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8cfe:	54ee      	strb	r6, [r5, r3]
    8d00:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    8d04:	d096      	beq.n	8c34 <d_print_mod_list+0x13c>
    8d06:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    8d0a:	29ff      	cmp	r1, #255	; 0xff
    8d0c:	d1f2      	bne.n	8cf4 <d_print_mod_list+0x1fc>
    8d0e:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8d12:	4628      	mov	r0, r5
    8d14:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8d18:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8d1c:	4798      	blx	r3
    8d1e:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8d22:	2101      	movs	r1, #1
    8d24:	3301      	adds	r3, #1
    8d26:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8d2a:	2300      	movs	r3, #0
    8d2c:	e7e4      	b.n	8cf8 <d_print_mod_list+0x200>
    8d2e:	bf00      	nop
    8d30:	00018f7c 	.word	0x00018f7c
    8d34:	00018f80 	.word	0x00018f80
    8d38:	00018f0c 	.word	0x00018f0c
    8d3c:	00018f90 	.word	0x00018f90

00008d40 <d_print_array_type>:
    8d40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8d44:	4604      	mov	r4, r0
    8d46:	4616      	mov	r6, r2
    8d48:	b153      	cbz	r3, 8d60 <d_print_array_type+0x20>
    8d4a:	461f      	mov	r7, r3
    8d4c:	689d      	ldr	r5, [r3, #8]
    8d4e:	b37d      	cbz	r5, 8db0 <d_print_array_type+0x70>
    8d50:	681b      	ldr	r3, [r3, #0]
    8d52:	2b00      	cmp	r3, #0
    8d54:	d1fa      	bne.n	8d4c <d_print_array_type+0xc>
    8d56:	463a      	mov	r2, r7
    8d58:	2111      	movs	r1, #17
    8d5a:	4620      	mov	r0, r4
    8d5c:	f7ff fecc 	bl	8af8 <d_print_mod_list>
    8d60:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    8d64:	2bff      	cmp	r3, #255	; 0xff
    8d66:	f000 809d 	beq.w	8ea4 <d_print_array_type+0x164>
    8d6a:	2220      	movs	r2, #32
    8d6c:	1c59      	adds	r1, r3, #1
    8d6e:	29ff      	cmp	r1, #255	; 0xff
    8d70:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8d74:	54e2      	strb	r2, [r4, r3]
    8d76:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8d7a:	d027      	beq.n	8dcc <d_print_array_type+0x8c>
    8d7c:	225b      	movs	r2, #91	; 0x5b
    8d7e:	1c4b      	adds	r3, r1, #1
    8d80:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8d84:	5462      	strb	r2, [r4, r1]
    8d86:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8d8a:	68f2      	ldr	r2, [r6, #12]
    8d8c:	b12a      	cbz	r2, 8d9a <d_print_array_type+0x5a>
    8d8e:	2111      	movs	r1, #17
    8d90:	4620      	mov	r0, r4
    8d92:	f7ff fa6f 	bl	8274 <d_print_comp>
    8d96:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    8d9a:	2bff      	cmp	r3, #255	; 0xff
    8d9c:	d02f      	beq.n	8dfe <d_print_array_type+0xbe>
    8d9e:	1c59      	adds	r1, r3, #1
    8da0:	225d      	movs	r2, #93	; 0x5d
    8da2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8da6:	54e2      	strb	r2, [r4, r3]
    8da8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8dac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8db0:	685b      	ldr	r3, [r3, #4]
    8db2:	781b      	ldrb	r3, [r3, #0]
    8db4:	2b2a      	cmp	r3, #42	; 0x2a
    8db6:	d132      	bne.n	8e1e <d_print_array_type+0xde>
    8db8:	2111      	movs	r1, #17
    8dba:	462b      	mov	r3, r5
    8dbc:	463a      	mov	r2, r7
    8dbe:	4620      	mov	r0, r4
    8dc0:	f7ff fe9a 	bl	8af8 <d_print_mod_list>
    8dc4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8dc8:	29ff      	cmp	r1, #255	; 0xff
    8dca:	d1d7      	bne.n	8d7c <d_print_array_type+0x3c>
    8dcc:	2500      	movs	r5, #0
    8dce:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8dd2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8dd6:	4620      	mov	r0, r4
    8dd8:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8ddc:	4798      	blx	r3
    8dde:	215b      	movs	r1, #91	; 0x5b
    8de0:	2301      	movs	r3, #1
    8de2:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8de6:	7021      	strb	r1, [r4, #0]
    8de8:	441a      	add	r2, r3
    8dea:	f884 1104 	strb.w	r1, [r4, #260]	; 0x104
    8dee:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8df2:	68f2      	ldr	r2, [r6, #12]
    8df4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8df8:	2a00      	cmp	r2, #0
    8dfa:	d1c8      	bne.n	8d8e <d_print_array_type+0x4e>
    8dfc:	e7cf      	b.n	8d9e <d_print_array_type+0x5e>
    8dfe:	2500      	movs	r5, #0
    8e00:	4619      	mov	r1, r3
    8e02:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8e06:	4620      	mov	r0, r4
    8e08:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8e0c:	4798      	blx	r3
    8e0e:	2101      	movs	r1, #1
    8e10:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8e14:	462b      	mov	r3, r5
    8e16:	440a      	add	r2, r1
    8e18:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8e1c:	e7c0      	b.n	8da0 <d_print_array_type+0x60>
    8e1e:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 8f04 <d_print_array_type+0x1c4>
    8e22:	f04f 0920 	mov.w	r9, #32
    8e26:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8e2a:	f108 0a01 	add.w	sl, r8, #1
    8e2e:	e00c      	b.n	8e4a <d_print_array_type+0x10a>
    8e30:	460b      	mov	r3, r1
    8e32:	45d0      	cmp	r8, sl
    8e34:	f101 0101 	add.w	r1, r1, #1
    8e38:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8e3c:	f804 9003 	strb.w	r9, [r4, r3]
    8e40:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    8e44:	d01a      	beq.n	8e7c <d_print_array_type+0x13c>
    8e46:	f818 9f01 	ldrb.w	r9, [r8, #1]!
    8e4a:	29ff      	cmp	r1, #255	; 0xff
    8e4c:	d1f0      	bne.n	8e30 <d_print_array_type+0xf0>
    8e4e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8e52:	4620      	mov	r0, r4
    8e54:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8e58:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8e5c:	4798      	blx	r3
    8e5e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8e62:	2101      	movs	r1, #1
    8e64:	3301      	adds	r3, #1
    8e66:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8e6a:	2300      	movs	r3, #0
    8e6c:	45d0      	cmp	r8, sl
    8e6e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8e72:	f804 9003 	strb.w	r9, [r4, r3]
    8e76:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    8e7a:	d1e4      	bne.n	8e46 <d_print_array_type+0x106>
    8e7c:	2111      	movs	r1, #17
    8e7e:	2300      	movs	r3, #0
    8e80:	463a      	mov	r2, r7
    8e82:	4620      	mov	r0, r4
    8e84:	f7ff fe38 	bl	8af8 <d_print_mod_list>
    8e88:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8e8c:	29ff      	cmp	r1, #255	; 0xff
    8e8e:	d026      	beq.n	8ede <d_print_array_type+0x19e>
    8e90:	2229      	movs	r2, #41	; 0x29
    8e92:	1c4b      	adds	r3, r1, #1
    8e94:	2bff      	cmp	r3, #255	; 0xff
    8e96:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8e9a:	5462      	strb	r2, [r4, r1]
    8e9c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8ea0:	f47f af63 	bne.w	8d6a <d_print_array_type+0x2a>
    8ea4:	2500      	movs	r5, #0
    8ea6:	4619      	mov	r1, r3
    8ea8:	4620      	mov	r0, r4
    8eaa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8eae:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8eb2:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8eb6:	4798      	blx	r3
    8eb8:	f645 3020 	movw	r0, #23328	; 0x5b20
    8ebc:	215b      	movs	r1, #91	; 0x5b
    8ebe:	2302      	movs	r3, #2
    8ec0:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8ec4:	8020      	strh	r0, [r4, #0]
    8ec6:	3201      	adds	r2, #1
    8ec8:	f884 1104 	strb.w	r1, [r4, #260]	; 0x104
    8ecc:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8ed0:	68f2      	ldr	r2, [r6, #12]
    8ed2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8ed6:	2a00      	cmp	r2, #0
    8ed8:	f47f af59 	bne.w	8d8e <d_print_array_type+0x4e>
    8edc:	e75f      	b.n	8d9e <d_print_array_type+0x5e>
    8ede:	2500      	movs	r5, #0
    8ee0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8ee4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8ee8:	4620      	mov	r0, r4
    8eea:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8eee:	4798      	blx	r3
    8ef0:	2301      	movs	r3, #1
    8ef2:	2129      	movs	r1, #41	; 0x29
    8ef4:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    8ef8:	7021      	strb	r1, [r4, #0]
    8efa:	441a      	add	r2, r3
    8efc:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    8f00:	e733      	b.n	8d6a <d_print_array_type+0x2a>
    8f02:	bf00      	nop
    8f04:	00019180 	.word	0x00019180

00008f08 <d_print_conversion>:
    8f08:	b570      	push	{r4, r5, r6, lr}
    8f0a:	f8d0 3148 	ldr.w	r3, [r0, #328]	; 0x148
    8f0e:	4604      	mov	r4, r0
    8f10:	4615      	mov	r5, r2
    8f12:	b082      	sub	sp, #8
    8f14:	b12b      	cbz	r3, 8f22 <d_print_conversion+0x1a>
    8f16:	f8d0 2110 	ldr.w	r2, [r0, #272]	; 0x110
    8f1a:	9301      	str	r3, [sp, #4]
    8f1c:	9200      	str	r2, [sp, #0]
    8f1e:	f8c0 d110 	str.w	sp, [r0, #272]	; 0x110
    8f22:	68ea      	ldr	r2, [r5, #12]
    8f24:	2111      	movs	r1, #17
    8f26:	7813      	ldrb	r3, [r2, #0]
    8f28:	4620      	mov	r0, r4
    8f2a:	2b04      	cmp	r3, #4
    8f2c:	d009      	beq.n	8f42 <d_print_conversion+0x3a>
    8f2e:	f7ff f9a1 	bl	8274 <d_print_comp>
    8f32:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    8f36:	b113      	cbz	r3, 8f3e <d_print_conversion+0x36>
    8f38:	9b00      	ldr	r3, [sp, #0]
    8f3a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    8f3e:	b002      	add	sp, #8
    8f40:	bd70      	pop	{r4, r5, r6, pc}
    8f42:	68d2      	ldr	r2, [r2, #12]
    8f44:	f7ff f996 	bl	8274 <d_print_comp>
    8f48:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    8f4c:	b113      	cbz	r3, 8f54 <d_print_conversion+0x4c>
    8f4e:	9b00      	ldr	r3, [sp, #0]
    8f50:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    8f54:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    8f58:	2b3c      	cmp	r3, #60	; 0x3c
    8f5a:	d021      	beq.n	8fa0 <d_print_conversion+0x98>
    8f5c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    8f60:	2bff      	cmp	r3, #255	; 0xff
    8f62:	d044      	beq.n	8fee <d_print_conversion+0xe6>
    8f64:	1c59      	adds	r1, r3, #1
    8f66:	223c      	movs	r2, #60	; 0x3c
    8f68:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8f6c:	54e2      	strb	r2, [r4, r3]
    8f6e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8f72:	68eb      	ldr	r3, [r5, #12]
    8f74:	2111      	movs	r1, #17
    8f76:	691a      	ldr	r2, [r3, #16]
    8f78:	4620      	mov	r0, r4
    8f7a:	f7ff f97b 	bl	8274 <d_print_comp>
    8f7e:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    8f82:	2b3e      	cmp	r3, #62	; 0x3e
    8f84:	d027      	beq.n	8fd6 <d_print_conversion+0xce>
    8f86:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8f8a:	29ff      	cmp	r1, #255	; 0xff
    8f8c:	d014      	beq.n	8fb8 <d_print_conversion+0xb0>
    8f8e:	1c4a      	adds	r2, r1, #1
    8f90:	233e      	movs	r3, #62	; 0x3e
    8f92:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8f96:	5463      	strb	r3, [r4, r1]
    8f98:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8f9c:	b002      	add	sp, #8
    8f9e:	bd70      	pop	{r4, r5, r6, pc}
    8fa0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8fa4:	29ff      	cmp	r1, #255	; 0xff
    8fa6:	d034      	beq.n	9012 <d_print_conversion+0x10a>
    8fa8:	2220      	movs	r2, #32
    8faa:	1c4b      	adds	r3, r1, #1
    8fac:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8fb0:	5462      	strb	r2, [r4, r1]
    8fb2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8fb6:	e7d3      	b.n	8f60 <d_print_conversion+0x58>
    8fb8:	2500      	movs	r5, #0
    8fba:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8fbe:	4620      	mov	r0, r4
    8fc0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8fc4:	4798      	blx	r3
    8fc6:	2201      	movs	r2, #1
    8fc8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8fcc:	4629      	mov	r1, r5
    8fce:	4413      	add	r3, r2
    8fd0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8fd4:	e7dc      	b.n	8f90 <d_print_conversion+0x88>
    8fd6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    8fda:	2bff      	cmp	r3, #255	; 0xff
    8fdc:	d02b      	beq.n	9036 <d_print_conversion+0x12e>
    8fde:	2220      	movs	r2, #32
    8fe0:	1c59      	adds	r1, r3, #1
    8fe2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8fe6:	54e2      	strb	r2, [r4, r3]
    8fe8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8fec:	e7cd      	b.n	8f8a <d_print_conversion+0x82>
    8fee:	2600      	movs	r6, #0
    8ff0:	4619      	mov	r1, r3
    8ff2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8ff6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8ffa:	4620      	mov	r0, r4
    8ffc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    9000:	4798      	blx	r3
    9002:	2101      	movs	r1, #1
    9004:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    9008:	4633      	mov	r3, r6
    900a:	440a      	add	r2, r1
    900c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    9010:	e7a9      	b.n	8f66 <d_print_conversion+0x5e>
    9012:	2600      	movs	r6, #0
    9014:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    9018:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    901c:	4620      	mov	r0, r4
    901e:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    9022:	4798      	blx	r3
    9024:	2301      	movs	r3, #1
    9026:	2120      	movs	r1, #32
    9028:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    902c:	7021      	strb	r1, [r4, #0]
    902e:	441a      	add	r2, r3
    9030:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    9034:	e796      	b.n	8f64 <d_print_conversion+0x5c>
    9036:	2500      	movs	r5, #0
    9038:	4619      	mov	r1, r3
    903a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    903e:	4620      	mov	r0, r4
    9040:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    9044:	4798      	blx	r3
    9046:	2101      	movs	r1, #1
    9048:	2220      	movs	r2, #32
    904a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    904e:	7022      	strb	r2, [r4, #0]
    9050:	440b      	add	r3, r1
    9052:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9056:	e79a      	b.n	8f8e <d_print_conversion+0x86>

00009058 <d_print_expr_op>:
    9058:	7811      	ldrb	r1, [r2, #0]
    905a:	2932      	cmp	r1, #50	; 0x32
    905c:	d002      	beq.n	9064 <d_print_expr_op+0xc>
    905e:	2111      	movs	r1, #17
    9060:	f7ff b908 	b.w	8274 <d_print_comp>
    9064:	68d3      	ldr	r3, [r2, #12]
    9066:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    906a:	e9d3 5701 	ldrd	r5, r7, [r3, #4]
    906e:	b367      	cbz	r7, 90ca <d_print_expr_op+0x72>
    9070:	442f      	add	r7, r5
    9072:	4604      	mov	r4, r0
    9074:	f04f 0800 	mov.w	r8, #0
    9078:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    907c:	3d01      	subs	r5, #1
    907e:	3f01      	subs	r7, #1
    9080:	e009      	b.n	9096 <d_print_expr_op+0x3e>
    9082:	460b      	mov	r3, r1
    9084:	42bd      	cmp	r5, r7
    9086:	f101 0101 	add.w	r1, r1, #1
    908a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    908e:	54e6      	strb	r6, [r4, r3]
    9090:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    9094:	d019      	beq.n	90ca <d_print_expr_op+0x72>
    9096:	29ff      	cmp	r1, #255	; 0xff
    9098:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    909c:	d1f1      	bne.n	9082 <d_print_expr_op+0x2a>
    909e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    90a2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    90a6:	4620      	mov	r0, r4
    90a8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    90ac:	4798      	blx	r3
    90ae:	2101      	movs	r1, #1
    90b0:	2300      	movs	r3, #0
    90b2:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    90b6:	42bd      	cmp	r5, r7
    90b8:	440a      	add	r2, r1
    90ba:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    90be:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    90c2:	54e6      	strb	r6, [r4, r3]
    90c4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    90c8:	d1e5      	bne.n	9096 <d_print_expr_op+0x3e>
    90ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    90ce:	bf00      	nop

000090d0 <d_demangle_callback.constprop.0>:
    90d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    90d4:	b0e5      	sub	sp, #404	; 0x194
    90d6:	f890 9000 	ldrb.w	r9, [r0]
    90da:	4604      	mov	r4, r0
    90dc:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
    90e0:	460d      	mov	r5, r1
    90e2:	4616      	mov	r6, r2
    90e4:	af00      	add	r7, sp, #0
    90e6:	f000 80f2 	beq.w	92ce <d_demangle_callback.constprop.0+0x1fe>
    90ea:	2208      	movs	r2, #8
    90ec:	4620      	mov	r0, r4
    90ee:	49c3      	ldr	r1, [pc, #780]	; (93fc <d_demangle_callback.constprop.0+0x32c>)
    90f0:	f004 fa4e 	bl	d590 <strncmp>
    90f4:	b948      	cbnz	r0, 910a <d_demangle_callback.constprop.0+0x3a>
    90f6:	7a23      	ldrb	r3, [r4, #8]
    90f8:	2b2e      	cmp	r3, #46	; 0x2e
    90fa:	f000 80d7 	beq.w	92ac <d_demangle_callback.constprop.0+0x1dc>
    90fe:	2b5f      	cmp	r3, #95	; 0x5f
    9100:	f000 80d4 	beq.w	92ac <d_demangle_callback.constprop.0+0x1dc>
    9104:	2b24      	cmp	r3, #36	; 0x24
    9106:	f000 80d1 	beq.w	92ac <d_demangle_callback.constprop.0+0x1dc>
    910a:	f04f 0a00 	mov.w	sl, #0
    910e:	4620      	mov	r0, r4
    9110:	f004 fa10 	bl	d534 <strlen>
    9114:	2311      	movs	r3, #17
    9116:	2100      	movs	r1, #0
    9118:	0042      	lsls	r2, r0, #1
    911a:	e9c7 3404 	strd	r3, r4, [r7, #16]
    911e:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    9122:	eb04 0300 	add.w	r3, r4, r0
    9126:	e9c7 110c 	strd	r1, r1, [r7, #48]	; 0x30
    912a:	e9c7 110e 	strd	r1, r1, [r7, #56]	; 0x38
    912e:	60bc      	str	r4, [r7, #8]
    9130:	61f9      	str	r1, [r7, #28]
    9132:	62b9      	str	r1, [r7, #40]	; 0x28
    9134:	6439      	str	r1, [r7, #64]	; 0x40
    9136:	62f8      	str	r0, [r7, #44]	; 0x2c
    9138:	60fb      	str	r3, [r7, #12]
    913a:	623a      	str	r2, [r7, #32]
    913c:	f200 80b0 	bhi.w	92a0 <d_demangle_callback.constprop.0+0x1d0>
    9140:	46e8      	mov	r8, sp
    9142:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
    9146:	0083      	lsls	r3, r0, #2
    9148:	eba8 00cc 	sub.w	r0, r8, ip, lsl #3
    914c:	4685      	mov	sp, r0
    914e:	46eb      	mov	fp, sp
    9150:	3307      	adds	r3, #7
    9152:	f023 0307 	bic.w	r3, r3, #7
    9156:	ebad 0d03 	sub.w	sp, sp, r3
    915a:	f1ba 0f01 	cmp.w	sl, #1
    915e:	f8c7 d024 	str.w	sp, [r7, #36]	; 0x24
    9162:	f8c7 b018 	str.w	fp, [r7, #24]
    9166:	f000 80b9 	beq.w	92dc <d_demangle_callback.constprop.0+0x20c>
    916a:	f1aa 0302 	sub.w	r3, sl, #2
    916e:	2b01      	cmp	r3, #1
    9170:	f200 80ba 	bhi.w	92e8 <d_demangle_callback.constprop.0+0x218>
    9174:	7ae3      	ldrb	r3, [r4, #11]
    9176:	f1ba 0f02 	cmp.w	sl, #2
    917a:	bf0c      	ite	eq
    917c:	f04f 0944 	moveq.w	r9, #68	; 0x44
    9180:	f04f 0945 	movne.w	r9, #69	; 0x45
    9184:	f104 0a0b 	add.w	sl, r4, #11
    9188:	2b5f      	cmp	r3, #95	; 0x5f
    918a:	f8c7 a014 	str.w	sl, [r7, #20]
    918e:	d103      	bne.n	9198 <d_demangle_callback.constprop.0+0xc8>
    9190:	7b23      	ldrb	r3, [r4, #12]
    9192:	2b5a      	cmp	r3, #90	; 0x5a
    9194:	f000 8125 	beq.w	93e2 <d_demangle_callback.constprop.0+0x312>
    9198:	2a00      	cmp	r2, #0
    919a:	f340 80ad 	ble.w	92f8 <d_demangle_callback.constprop.0+0x228>
    919e:	4650      	mov	r0, sl
    91a0:	f004 f9c8 	bl	d534 <strlen>
    91a4:	2300      	movs	r3, #0
    91a6:	2201      	movs	r2, #1
    91a8:	e9cb 3301 	strd	r3, r3, [fp, #4]
    91ac:	61fa      	str	r2, [r7, #28]
    91ae:	2800      	cmp	r0, #0
    91b0:	f000 80a2 	beq.w	92f8 <d_demangle_callback.constprop.0+0x228>
    91b4:	e9cb a003 	strd	sl, r0, [fp, #12]
    91b8:	f88b 3000 	strb.w	r3, [fp]
    91bc:	4649      	mov	r1, r9
    91be:	2300      	movs	r3, #0
    91c0:	465a      	mov	r2, fp
    91c2:	f107 0008 	add.w	r0, r7, #8
    91c6:	f7fa fb49 	bl	385c <d_make_comp>
    91ca:	697c      	ldr	r4, [r7, #20]
    91cc:	4681      	mov	r9, r0
    91ce:	4620      	mov	r0, r4
    91d0:	f004 f9b0 	bl	d534 <strlen>
    91d4:	1823      	adds	r3, r4, r0
    91d6:	617b      	str	r3, [r7, #20]
    91d8:	5c23      	ldrb	r3, [r4, r0]
    91da:	2b00      	cmp	r3, #0
    91dc:	f040 8081 	bne.w	92e2 <d_demangle_callback.constprop.0+0x212>
    91e0:	f1b9 0f00 	cmp.w	r9, #0
    91e4:	d07d      	beq.n	92e2 <d_demangle_callback.constprop.0+0x212>
    91e6:	f107 0444 	add.w	r4, r7, #68	; 0x44
    91ea:	4649      	mov	r1, r9
    91ec:	4620      	mov	r0, r4
    91ee:	e9c4 3344 	strd	r3, r3, [r4, #272]	; 0x110
    91f2:	e9c4 3349 	strd	r3, r3, [r4, #292]	; 0x124
    91f6:	e9c4 3346 	strd	r3, r3, [r4, #280]	; 0x118
    91fa:	e9c4 334b 	strd	r3, r3, [r4, #300]	; 0x12c
    91fe:	e9c4 334d 	strd	r3, r3, [r4, #308]	; 0x134
    9202:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
    9206:	607b      	str	r3, [r7, #4]
    9208:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    920c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    9210:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    9214:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
    9218:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
    921c:	f8c4 610c 	str.w	r6, [r4, #268]	; 0x10c
    9220:	f7fa fbe2 	bl	39e8 <d_count_templates_scopes>
    9224:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    9228:	f8d4 1138 	ldr.w	r1, [r4, #312]	; 0x138
    922c:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    9230:	bfb8      	it	lt
    9232:	687b      	ldrlt	r3, [r7, #4]
    9234:	466e      	mov	r6, sp
    9236:	bfb8      	it	lt
    9238:	f8c4 311c 	strlt.w	r3, [r4, #284]	; 0x11c
    923c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
    9240:	2901      	cmp	r1, #1
    9242:	fb01 f303 	mul.w	r3, r1, r3
    9246:	bfb8      	it	lt
    9248:	2101      	movlt	r1, #1
    924a:	2b01      	cmp	r3, #1
    924c:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
    9250:	eba6 01c1 	sub.w	r1, r6, r1, lsl #3
    9254:	bfb8      	it	lt
    9256:	2301      	movlt	r3, #1
    9258:	468d      	mov	sp, r1
    925a:	eba1 03c3 	sub.w	r3, r1, r3, lsl #3
    925e:	46ec      	mov	ip, sp
    9260:	2500      	movs	r5, #0
    9262:	469d      	mov	sp, r3
    9264:	464a      	mov	r2, r9
    9266:	2111      	movs	r1, #17
    9268:	4620      	mov	r0, r4
    926a:	f8c4 d13c 	str.w	sp, [r4, #316]	; 0x13c
    926e:	f8c4 c130 	str.w	ip, [r4, #304]	; 0x130
    9272:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
    9276:	f7fe fffd 	bl	8274 <d_print_comp>
    927a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    927e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    9282:	46b5      	mov	sp, r6
    9284:	4620      	mov	r0, r4
    9286:	5465      	strb	r5, [r4, r1]
    9288:	4798      	blx	r3
    928a:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
    928e:	46c5      	mov	sp, r8
    9290:	fab0 f080 	clz	r0, r0
    9294:	0940      	lsrs	r0, r0, #5
    9296:	f507 77ca 	add.w	r7, r7, #404	; 0x194
    929a:	46bd      	mov	sp, r7
    929c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    92a0:	4608      	mov	r0, r1
    92a2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
    92a6:	46bd      	mov	sp, r7
    92a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    92ac:	7a63      	ldrb	r3, [r4, #9]
    92ae:	2b44      	cmp	r3, #68	; 0x44
    92b0:	d002      	beq.n	92b8 <d_demangle_callback.constprop.0+0x1e8>
    92b2:	2b49      	cmp	r3, #73	; 0x49
    92b4:	f47f af29 	bne.w	910a <d_demangle_callback.constprop.0+0x3a>
    92b8:	7aa2      	ldrb	r2, [r4, #10]
    92ba:	2a5f      	cmp	r2, #95	; 0x5f
    92bc:	f47f af25 	bne.w	910a <d_demangle_callback.constprop.0+0x3a>
    92c0:	2b49      	cmp	r3, #73	; 0x49
    92c2:	bf0c      	ite	eq
    92c4:	f04f 0a02 	moveq.w	sl, #2
    92c8:	f04f 0a03 	movne.w	sl, #3
    92cc:	e71f      	b.n	910e <d_demangle_callback.constprop.0+0x3e>
    92ce:	7843      	ldrb	r3, [r0, #1]
    92d0:	2b5a      	cmp	r3, #90	; 0x5a
    92d2:	f47f af0a 	bne.w	90ea <d_demangle_callback.constprop.0+0x1a>
    92d6:	f04f 0a01 	mov.w	sl, #1
    92da:	e718      	b.n	910e <d_demangle_callback.constprop.0+0x3e>
    92dc:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
    92e0:	d00d      	beq.n	92fe <d_demangle_callback.constprop.0+0x22e>
    92e2:	2000      	movs	r0, #0
    92e4:	46c5      	mov	sp, r8
    92e6:	e7d6      	b.n	9296 <d_demangle_callback.constprop.0+0x1c6>
    92e8:	f107 0008 	add.w	r0, r7, #8
    92ec:	f7fa ff4a 	bl	4184 <d_type>
    92f0:	697b      	ldr	r3, [r7, #20]
    92f2:	4681      	mov	r9, r0
    92f4:	781b      	ldrb	r3, [r3, #0]
    92f6:	e770      	b.n	91da <d_demangle_callback.constprop.0+0x10a>
    92f8:	f04f 0b00 	mov.w	fp, #0
    92fc:	e75e      	b.n	91bc <d_demangle_callback.constprop.0+0xec>
    92fe:	7863      	ldrb	r3, [r4, #1]
    9300:	2b5a      	cmp	r3, #90	; 0x5a
    9302:	d1ee      	bne.n	92e2 <d_demangle_callback.constprop.0+0x212>
    9304:	78a3      	ldrb	r3, [r4, #2]
    9306:	3402      	adds	r4, #2
    9308:	2b47      	cmp	r3, #71	; 0x47
    930a:	617c      	str	r4, [r7, #20]
    930c:	d07f      	beq.n	940e <d_demangle_callback.constprop.0+0x33e>
    930e:	2b54      	cmp	r3, #84	; 0x54
    9310:	d07d      	beq.n	940e <d_demangle_callback.constprop.0+0x33e>
    9312:	4651      	mov	r1, sl
    9314:	f107 0008 	add.w	r0, r7, #8
    9318:	f7fc f802 	bl	5320 <d_encoding.part.0>
    931c:	4681      	mov	r9, r0
    931e:	693b      	ldr	r3, [r7, #16]
    9320:	07db      	lsls	r3, r3, #31
    9322:	d571      	bpl.n	9408 <d_demangle_callback.constprop.0+0x338>
    9324:	6979      	ldr	r1, [r7, #20]
    9326:	780b      	ldrb	r3, [r1, #0]
    9328:	2b2e      	cmp	r3, #46	; 0x2e
    932a:	f47f af56 	bne.w	91da <d_demangle_callback.constprop.0+0x10a>
    932e:	2400      	movs	r4, #0
    9330:	784b      	ldrb	r3, [r1, #1]
    9332:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
    9336:	2a19      	cmp	r2, #25
    9338:	d947      	bls.n	93ca <d_demangle_callback.constprop.0+0x2fa>
    933a:	2b5f      	cmp	r3, #95	; 0x5f
    933c:	d045      	beq.n	93ca <d_demangle_callback.constprop.0+0x2fa>
    933e:	3b30      	subs	r3, #48	; 0x30
    9340:	2b09      	cmp	r3, #9
    9342:	d861      	bhi.n	9408 <d_demangle_callback.constprop.0+0x338>
    9344:	460b      	mov	r3, r1
    9346:	7808      	ldrb	r0, [r1, #0]
    9348:	282e      	cmp	r0, #46	; 0x2e
    934a:	d117      	bne.n	937c <d_demangle_callback.constprop.0+0x2ac>
    934c:	f893 c001 	ldrb.w	ip, [r3, #1]
    9350:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
    9354:	f1bc 0f09 	cmp.w	ip, #9
    9358:	d810      	bhi.n	937c <d_demangle_callback.constprop.0+0x2ac>
    935a:	f893 c002 	ldrb.w	ip, [r3, #2]
    935e:	3302      	adds	r3, #2
    9360:	f1ac 0230 	sub.w	r2, ip, #48	; 0x30
    9364:	2a09      	cmp	r2, #9
    9366:	d806      	bhi.n	9376 <d_demangle_callback.constprop.0+0x2a6>
    9368:	f813 cf01 	ldrb.w	ip, [r3, #1]!
    936c:	f1ac 0e30 	sub.w	lr, ip, #48	; 0x30
    9370:	f1be 0f09 	cmp.w	lr, #9
    9374:	d9f8      	bls.n	9368 <d_demangle_callback.constprop.0+0x298>
    9376:	f1bc 0f2e 	cmp.w	ip, #46	; 0x2e
    937a:	d0e7      	beq.n	934c <d_demangle_callback.constprop.0+0x27c>
    937c:	e9d7 2007 	ldrd	r2, r0, [r7, #28]
    9380:	4282      	cmp	r2, r0
    9382:	617b      	str	r3, [r7, #20]
    9384:	eba3 0c01 	sub.w	ip, r3, r1
    9388:	da1d      	bge.n	93c6 <d_demangle_callback.constprop.0+0x2f6>
    938a:	69b8      	ldr	r0, [r7, #24]
    938c:	eb02 0e82 	add.w	lr, r2, r2, lsl #2
    9390:	eb00 038e 	add.w	r3, r0, lr, lsl #2
    9394:	3201      	adds	r2, #1
    9396:	f1bc 0f00 	cmp.w	ip, #0
    939a:	e9c3 4401 	strd	r4, r4, [r3, #4]
    939e:	61fa      	str	r2, [r7, #28]
    93a0:	dd11      	ble.n	93c6 <d_demangle_callback.constprop.0+0x2f6>
    93a2:	e9c3 4401 	strd	r4, r4, [r3, #4]
    93a6:	f800 402e 	strb.w	r4, [r0, lr, lsl #2]
    93aa:	e9c3 1c03 	strd	r1, ip, [r3, #12]
    93ae:	464a      	mov	r2, r9
    93b0:	214e      	movs	r1, #78	; 0x4e
    93b2:	f107 0008 	add.w	r0, r7, #8
    93b6:	f7fa fa51 	bl	385c <d_make_comp>
    93ba:	6979      	ldr	r1, [r7, #20]
    93bc:	4681      	mov	r9, r0
    93be:	780b      	ldrb	r3, [r1, #0]
    93c0:	2b2e      	cmp	r3, #46	; 0x2e
    93c2:	d0b5      	beq.n	9330 <d_demangle_callback.constprop.0+0x260>
    93c4:	e709      	b.n	91da <d_demangle_callback.constprop.0+0x10a>
    93c6:	2300      	movs	r3, #0
    93c8:	e7f1      	b.n	93ae <d_demangle_callback.constprop.0+0x2de>
    93ca:	1c8a      	adds	r2, r1, #2
    93cc:	4613      	mov	r3, r2
    93ce:	f812 0b01 	ldrb.w	r0, [r2], #1
    93d2:	f1a0 0c61 	sub.w	ip, r0, #97	; 0x61
    93d6:	f1bc 0f19 	cmp.w	ip, #25
    93da:	d9f7      	bls.n	93cc <d_demangle_callback.constprop.0+0x2fc>
    93dc:	285f      	cmp	r0, #95	; 0x5f
    93de:	d0f5      	beq.n	93cc <d_demangle_callback.constprop.0+0x2fc>
    93e0:	e7b2      	b.n	9348 <d_demangle_callback.constprop.0+0x278>
    93e2:	7b63      	ldrb	r3, [r4, #13]
    93e4:	340d      	adds	r4, #13
    93e6:	2b47      	cmp	r3, #71	; 0x47
    93e8:	617c      	str	r4, [r7, #20]
    93ea:	f107 0008 	add.w	r0, r7, #8
    93ee:	d007      	beq.n	9400 <d_demangle_callback.constprop.0+0x330>
    93f0:	2b54      	cmp	r3, #84	; 0x54
    93f2:	d005      	beq.n	9400 <d_demangle_callback.constprop.0+0x330>
    93f4:	f7fb ff94 	bl	5320 <d_encoding.part.0>
    93f8:	4683      	mov	fp, r0
    93fa:	e6df      	b.n	91bc <d_demangle_callback.constprop.0+0xec>
    93fc:	00018f10 	.word	0x00018f10
    9400:	f7fc f80c 	bl	541c <d_special_name>
    9404:	4683      	mov	fp, r0
    9406:	e6d9      	b.n	91bc <d_demangle_callback.constprop.0+0xec>
    9408:	697b      	ldr	r3, [r7, #20]
    940a:	781b      	ldrb	r3, [r3, #0]
    940c:	e6e5      	b.n	91da <d_demangle_callback.constprop.0+0x10a>
    940e:	f107 0008 	add.w	r0, r7, #8
    9412:	f7fc f803 	bl	541c <d_special_name>
    9416:	4681      	mov	r9, r0
    9418:	e781      	b.n	931e <d_demangle_callback.constprop.0+0x24e>
    941a:	bf00      	nop

0000941c <d_print_subexpr>:
    941c:	b570      	push	{r4, r5, r6, lr}
    941e:	7813      	ldrb	r3, [r2, #0]
    9420:	4615      	mov	r5, r2
    9422:	2b01      	cmp	r3, #1
    9424:	4604      	mov	r4, r0
    9426:	b082      	sub	sp, #8
    9428:	d903      	bls.n	9432 <d_print_subexpr+0x16>
    942a:	2b31      	cmp	r3, #49	; 0x31
    942c:	d001      	beq.n	9432 <d_print_subexpr+0x16>
    942e:	2b06      	cmp	r3, #6
    9430:	d138      	bne.n	94a4 <d_print_subexpr+0x88>
    9432:	2601      	movs	r6, #1
    9434:	686b      	ldr	r3, [r5, #4]
    9436:	2b01      	cmp	r3, #1
    9438:	dc22      	bgt.n	9480 <d_print_subexpr+0x64>
    943a:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    943e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    9442:	dc1d      	bgt.n	9480 <d_print_subexpr+0x64>
    9444:	3301      	adds	r3, #1
    9446:	606b      	str	r3, [r5, #4]
    9448:	3201      	adds	r2, #1
    944a:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
    944e:	2111      	movs	r1, #17
    9450:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
    9454:	4620      	mov	r0, r4
    9456:	462a      	mov	r2, r5
    9458:	f8c4 d12c 	str.w	sp, [r4, #300]	; 0x12c
    945c:	e9cd 5300 	strd	r5, r3, [sp]
    9460:	f7fc fe50 	bl	6104 <d_print_comp_inner>
    9464:	686a      	ldr	r2, [r5, #4]
    9466:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
    946a:	9901      	ldr	r1, [sp, #4]
    946c:	3a01      	subs	r2, #1
    946e:	3b01      	subs	r3, #1
    9470:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
    9474:	606a      	str	r2, [r5, #4]
    9476:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
    947a:	b136      	cbz	r6, 948a <d_print_subexpr+0x6e>
    947c:	b002      	add	sp, #8
    947e:	bd70      	pop	{r4, r5, r6, pc}
    9480:	2301      	movs	r3, #1
    9482:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    9486:	2e00      	cmp	r6, #0
    9488:	d1f8      	bne.n	947c <d_print_subexpr+0x60>
    948a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    948e:	29ff      	cmp	r1, #255	; 0xff
    9490:	d015      	beq.n	94be <d_print_subexpr+0xa2>
    9492:	1c4a      	adds	r2, r1, #1
    9494:	2329      	movs	r3, #41	; 0x29
    9496:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    949a:	5463      	strb	r3, [r4, r1]
    949c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    94a0:	b002      	add	sp, #8
    94a2:	bd70      	pop	{r4, r5, r6, pc}
    94a4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    94a8:	29ff      	cmp	r1, #255	; 0xff
    94aa:	d016      	beq.n	94da <d_print_subexpr+0xbe>
    94ac:	1c4a      	adds	r2, r1, #1
    94ae:	2328      	movs	r3, #40	; 0x28
    94b0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    94b4:	2600      	movs	r6, #0
    94b6:	5463      	strb	r3, [r4, r1]
    94b8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    94bc:	e7ba      	b.n	9434 <d_print_subexpr+0x18>
    94be:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    94c2:	4620      	mov	r0, r4
    94c4:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    94c8:	4798      	blx	r3
    94ca:	2201      	movs	r2, #1
    94cc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    94d0:	4631      	mov	r1, r6
    94d2:	4413      	add	r3, r2
    94d4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    94d8:	e7dc      	b.n	9494 <d_print_subexpr+0x78>
    94da:	2600      	movs	r6, #0
    94dc:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    94e0:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    94e4:	4798      	blx	r3
    94e6:	2201      	movs	r2, #1
    94e8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    94ec:	4631      	mov	r1, r6
    94ee:	4413      	add	r3, r2
    94f0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    94f4:	e7db      	b.n	94ae <d_print_subexpr+0x92>
    94f6:	bf00      	nop

000094f8 <d_maybe_print_fold_expression>:
    94f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    94fc:	68d3      	ldr	r3, [r2, #12]
    94fe:	68db      	ldr	r3, [r3, #12]
    9500:	681b      	ldr	r3, [r3, #0]
    9502:	7819      	ldrb	r1, [r3, #0]
    9504:	2966      	cmp	r1, #102	; 0x66
    9506:	d178      	bne.n	95fa <d_maybe_print_fold_expression+0x102>
    9508:	6912      	ldr	r2, [r2, #16]
    950a:	f8d0 7124 	ldr.w	r7, [r0, #292]	; 0x124
    950e:	e9d2 8a03 	ldrd	r8, sl, [r2, #12]
    9512:	f89a 2000 	ldrb.w	r2, [sl]
    9516:	4604      	mov	r4, r0
    9518:	2a3c      	cmp	r2, #60	; 0x3c
    951a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    951e:	bf08      	it	eq
    9520:	e9da a903 	ldrdeq	sl, r9, [sl, #12]
    9524:	f8c0 2124 	str.w	r2, [r0, #292]	; 0x124
    9528:	785b      	ldrb	r3, [r3, #1]
    952a:	bf18      	it	ne
    952c:	f04f 0900 	movne.w	r9, #0
    9530:	2b6c      	cmp	r3, #108	; 0x6c
    9532:	f000 80a2 	beq.w	967a <d_maybe_print_fold_expression+0x182>
    9536:	d863      	bhi.n	9600 <d_maybe_print_fold_expression+0x108>
    9538:	2b4c      	cmp	r3, #76	; 0x4c
    953a:	d001      	beq.n	9540 <d_maybe_print_fold_expression+0x48>
    953c:	2b52      	cmp	r3, #82	; 0x52
    953e:	d157      	bne.n	95f0 <d_maybe_print_fold_expression+0xf8>
    9540:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    9544:	29ff      	cmp	r1, #255	; 0xff
    9546:	f000 80eb 	beq.w	9720 <d_maybe_print_fold_expression+0x228>
    954a:	1c4b      	adds	r3, r1, #1
    954c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    9550:	2328      	movs	r3, #40	; 0x28
    9552:	4652      	mov	r2, sl
    9554:	5463      	strb	r3, [r4, r1]
    9556:	4620      	mov	r0, r4
    9558:	2111      	movs	r1, #17
    955a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    955e:	4d78      	ldr	r5, [pc, #480]	; (9740 <d_maybe_print_fold_expression+0x248>)
    9560:	f7ff ff5c 	bl	941c <d_print_subexpr>
    9564:	2111      	movs	r1, #17
    9566:	4642      	mov	r2, r8
    9568:	4620      	mov	r0, r4
    956a:	f7ff fd75 	bl	9058 <d_print_expr_op>
    956e:	262e      	movs	r6, #46	; 0x2e
    9570:	f04f 0a00 	mov.w	sl, #0
    9574:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    9578:	f105 0b02 	add.w	fp, r5, #2
    957c:	e00b      	b.n	9596 <d_maybe_print_fold_expression+0x9e>
    957e:	460b      	mov	r3, r1
    9580:	45ab      	cmp	fp, r5
    9582:	f101 0101 	add.w	r1, r1, #1
    9586:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    958a:	54e6      	strb	r6, [r4, r3]
    958c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    9590:	d019      	beq.n	95c6 <d_maybe_print_fold_expression+0xce>
    9592:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    9596:	29ff      	cmp	r1, #255	; 0xff
    9598:	d1f1      	bne.n	957e <d_maybe_print_fold_expression+0x86>
    959a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    959e:	4620      	mov	r0, r4
    95a0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    95a4:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
    95a8:	4798      	blx	r3
    95aa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    95ae:	2101      	movs	r1, #1
    95b0:	3301      	adds	r3, #1
    95b2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    95b6:	2300      	movs	r3, #0
    95b8:	45ab      	cmp	fp, r5
    95ba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    95be:	54e6      	strb	r6, [r4, r3]
    95c0:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    95c4:	d1e5      	bne.n	9592 <d_maybe_print_fold_expression+0x9a>
    95c6:	4642      	mov	r2, r8
    95c8:	2111      	movs	r1, #17
    95ca:	4620      	mov	r0, r4
    95cc:	f7ff fd44 	bl	9058 <d_print_expr_op>
    95d0:	464a      	mov	r2, r9
    95d2:	2111      	movs	r1, #17
    95d4:	4620      	mov	r0, r4
    95d6:	f7ff ff21 	bl	941c <d_print_subexpr>
    95da:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    95de:	29ff      	cmp	r1, #255	; 0xff
    95e0:	d07f      	beq.n	96e2 <d_maybe_print_fold_expression+0x1ea>
    95e2:	1c4a      	adds	r2, r1, #1
    95e4:	2329      	movs	r3, #41	; 0x29
    95e6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    95ea:	5463      	strb	r3, [r4, r1]
    95ec:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    95f0:	2001      	movs	r0, #1
    95f2:	f8c4 7124 	str.w	r7, [r4, #292]	; 0x124
    95f6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    95fa:	2000      	movs	r0, #0
    95fc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9600:	2b72      	cmp	r3, #114	; 0x72
    9602:	d1f5      	bne.n	95f0 <d_maybe_print_fold_expression+0xf8>
    9604:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    9608:	29ff      	cmp	r1, #255	; 0xff
    960a:	d07b      	beq.n	9704 <d_maybe_print_fold_expression+0x20c>
    960c:	1c4b      	adds	r3, r1, #1
    960e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    9612:	2328      	movs	r3, #40	; 0x28
    9614:	4652      	mov	r2, sl
    9616:	5463      	strb	r3, [r4, r1]
    9618:	4620      	mov	r0, r4
    961a:	2111      	movs	r1, #17
    961c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    9620:	4d48      	ldr	r5, [pc, #288]	; (9744 <d_maybe_print_fold_expression+0x24c>)
    9622:	f7ff fefb 	bl	941c <d_print_subexpr>
    9626:	4642      	mov	r2, r8
    9628:	2111      	movs	r1, #17
    962a:	4620      	mov	r0, r4
    962c:	f7ff fd14 	bl	9058 <d_print_expr_op>
    9630:	262e      	movs	r6, #46	; 0x2e
    9632:	f04f 0900 	mov.w	r9, #0
    9636:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    963a:	f105 0803 	add.w	r8, r5, #3
    963e:	e00a      	b.n	9656 <d_maybe_print_fold_expression+0x15e>
    9640:	460b      	mov	r3, r1
    9642:	3101      	adds	r1, #1
    9644:	4545      	cmp	r5, r8
    9646:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    964a:	54e6      	strb	r6, [r4, r3]
    964c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    9650:	d0ce      	beq.n	95f0 <d_maybe_print_fold_expression+0xf8>
    9652:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    9656:	29ff      	cmp	r1, #255	; 0xff
    9658:	d1f2      	bne.n	9640 <d_maybe_print_fold_expression+0x148>
    965a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    965e:	4620      	mov	r0, r4
    9660:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    9664:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    9668:	4798      	blx	r3
    966a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    966e:	2101      	movs	r1, #1
    9670:	3301      	adds	r3, #1
    9672:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9676:	2300      	movs	r3, #0
    9678:	e7e4      	b.n	9644 <d_maybe_print_fold_expression+0x14c>
    967a:	4d33      	ldr	r5, [pc, #204]	; (9748 <d_maybe_print_fold_expression+0x250>)
    967c:	2628      	movs	r6, #40	; 0x28
    967e:	f04f 0900 	mov.w	r9, #0
    9682:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    9686:	f105 0b03 	add.w	fp, r5, #3
    968a:	e00b      	b.n	96a4 <d_maybe_print_fold_expression+0x1ac>
    968c:	460b      	mov	r3, r1
    968e:	45ab      	cmp	fp, r5
    9690:	f101 0101 	add.w	r1, r1, #1
    9694:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    9698:	54e6      	strb	r6, [r4, r3]
    969a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    969e:	d019      	beq.n	96d4 <d_maybe_print_fold_expression+0x1dc>
    96a0:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    96a4:	29ff      	cmp	r1, #255	; 0xff
    96a6:	d1f1      	bne.n	968c <d_maybe_print_fold_expression+0x194>
    96a8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    96ac:	4620      	mov	r0, r4
    96ae:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    96b2:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    96b6:	4798      	blx	r3
    96b8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    96bc:	2101      	movs	r1, #1
    96be:	3301      	adds	r3, #1
    96c0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    96c4:	2300      	movs	r3, #0
    96c6:	45ab      	cmp	fp, r5
    96c8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    96cc:	54e6      	strb	r6, [r4, r3]
    96ce:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    96d2:	d1e5      	bne.n	96a0 <d_maybe_print_fold_expression+0x1a8>
    96d4:	4642      	mov	r2, r8
    96d6:	2111      	movs	r1, #17
    96d8:	4620      	mov	r0, r4
    96da:	f7ff fcbd 	bl	9058 <d_print_expr_op>
    96de:	4652      	mov	r2, sl
    96e0:	e777      	b.n	95d2 <d_maybe_print_fold_expression+0xda>
    96e2:	2500      	movs	r5, #0
    96e4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    96e8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    96ec:	4620      	mov	r0, r4
    96ee:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    96f2:	4798      	blx	r3
    96f4:	2201      	movs	r2, #1
    96f6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    96fa:	4629      	mov	r1, r5
    96fc:	4413      	add	r3, r2
    96fe:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9702:	e76f      	b.n	95e4 <d_maybe_print_fold_expression+0xec>
    9704:	2500      	movs	r5, #0
    9706:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    970a:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    970e:	4798      	blx	r3
    9710:	2301      	movs	r3, #1
    9712:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    9716:	4629      	mov	r1, r5
    9718:	441a      	add	r2, r3
    971a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    971e:	e776      	b.n	960e <d_maybe_print_fold_expression+0x116>
    9720:	2500      	movs	r5, #0
    9722:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    9726:	4620      	mov	r0, r4
    9728:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    972c:	4798      	blx	r3
    972e:	2301      	movs	r3, #1
    9730:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    9734:	4629      	mov	r1, r5
    9736:	441a      	add	r2, r3
    9738:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    973c:	e706      	b.n	954c <d_maybe_print_fold_expression+0x54>
    973e:	bf00      	nop
    9740:	00019184 	.word	0x00019184
    9744:	00019280 	.word	0x00019280
    9748:	00019278 	.word	0x00019278

0000974c <__cxa_demangle>:
    974c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9750:	461e      	mov	r6, r3
    9752:	b084      	sub	sp, #16
    9754:	2800      	cmp	r0, #0
    9756:	d040      	beq.n	97da <__cxa_demangle+0x8e>
    9758:	460c      	mov	r4, r1
    975a:	4615      	mov	r5, r2
    975c:	b109      	cbz	r1, 9762 <__cxa_demangle+0x16>
    975e:	2a00      	cmp	r2, #0
    9760:	d03b      	beq.n	97da <__cxa_demangle+0x8e>
    9762:	2300      	movs	r3, #0
    9764:	466a      	mov	r2, sp
    9766:	4929      	ldr	r1, [pc, #164]	; (980c <__cxa_demangle+0xc0>)
    9768:	e9cd 3300 	strd	r3, r3, [sp]
    976c:	e9cd 3302 	strd	r3, r3, [sp, #8]
    9770:	f7ff fcae 	bl	90d0 <d_demangle_callback.constprop.0>
    9774:	2800      	cmp	r0, #0
    9776:	d039      	beq.n	97ec <__cxa_demangle+0xa0>
    9778:	9b03      	ldr	r3, [sp, #12]
    977a:	9f00      	ldr	r7, [sp, #0]
    977c:	b9d3      	cbnz	r3, 97b4 <__cxa_demangle+0x68>
    977e:	f8dd 8008 	ldr.w	r8, [sp, #8]
    9782:	2f00      	cmp	r7, #0
    9784:	d038      	beq.n	97f8 <__cxa_demangle+0xac>
    9786:	b32c      	cbz	r4, 97d4 <__cxa_demangle+0x88>
    9788:	4638      	mov	r0, r7
    978a:	f003 fed3 	bl	d534 <strlen>
    978e:	682b      	ldr	r3, [r5, #0]
    9790:	4298      	cmp	r0, r3
    9792:	d219      	bcs.n	97c8 <__cxa_demangle+0x7c>
    9794:	4639      	mov	r1, r7
    9796:	1c42      	adds	r2, r0, #1
    9798:	4620      	mov	r0, r4
    979a:	f003 f805 	bl	c7a8 <memcpy>
    979e:	4638      	mov	r0, r7
    97a0:	f002 fcd2 	bl	c148 <free>
    97a4:	4627      	mov	r7, r4
    97a6:	b10e      	cbz	r6, 97ac <__cxa_demangle+0x60>
    97a8:	2300      	movs	r3, #0
    97aa:	6033      	str	r3, [r6, #0]
    97ac:	4638      	mov	r0, r7
    97ae:	b004      	add	sp, #16
    97b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    97b4:	f04f 0801 	mov.w	r8, #1
    97b8:	2f00      	cmp	r7, #0
    97ba:	d1e4      	bne.n	9786 <__cxa_demangle+0x3a>
    97bc:	b1d6      	cbz	r6, 97f4 <__cxa_demangle+0xa8>
    97be:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    97c2:	2700      	movs	r7, #0
    97c4:	6033      	str	r3, [r6, #0]
    97c6:	e7f1      	b.n	97ac <__cxa_demangle+0x60>
    97c8:	4620      	mov	r0, r4
    97ca:	f002 fcbd 	bl	c148 <free>
    97ce:	f8c5 8000 	str.w	r8, [r5]
    97d2:	e7e8      	b.n	97a6 <__cxa_demangle+0x5a>
    97d4:	2d00      	cmp	r5, #0
    97d6:	d1fa      	bne.n	97ce <__cxa_demangle+0x82>
    97d8:	e7e5      	b.n	97a6 <__cxa_demangle+0x5a>
    97da:	b15e      	cbz	r6, 97f4 <__cxa_demangle+0xa8>
    97dc:	2700      	movs	r7, #0
    97de:	f06f 0302 	mvn.w	r3, #2
    97e2:	4638      	mov	r0, r7
    97e4:	6033      	str	r3, [r6, #0]
    97e6:	b004      	add	sp, #16
    97e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    97ec:	9800      	ldr	r0, [sp, #0]
    97ee:	f002 fcab 	bl	c148 <free>
    97f2:	b936      	cbnz	r6, 9802 <__cxa_demangle+0xb6>
    97f4:	2700      	movs	r7, #0
    97f6:	e7d9      	b.n	97ac <__cxa_demangle+0x60>
    97f8:	2e00      	cmp	r6, #0
    97fa:	d0fb      	beq.n	97f4 <__cxa_demangle+0xa8>
    97fc:	f1b8 0f01 	cmp.w	r8, #1
    9800:	d0dd      	beq.n	97be <__cxa_demangle+0x72>
    9802:	f06f 0301 	mvn.w	r3, #1
    9806:	2700      	movs	r7, #0
    9808:	6033      	str	r3, [r6, #0]
    980a:	e7cf      	b.n	97ac <__cxa_demangle+0x60>
    980c:	00003b2d 	.word	0x00003b2d

00009810 <__gcclibcxx_demangle_callback>:
    9810:	b160      	cbz	r0, 982c <__gcclibcxx_demangle_callback+0x1c>
    9812:	b508      	push	{r3, lr}
    9814:	b139      	cbz	r1, 9826 <__gcclibcxx_demangle_callback+0x16>
    9816:	f7ff fc5b 	bl	90d0 <d_demangle_callback.constprop.0>
    981a:	2800      	cmp	r0, #0
    981c:	bf14      	ite	ne
    981e:	2000      	movne	r0, #0
    9820:	f06f 0001 	mvneq.w	r0, #1
    9824:	bd08      	pop	{r3, pc}
    9826:	f06f 0002 	mvn.w	r0, #2
    982a:	bd08      	pop	{r3, pc}
    982c:	f06f 0002 	mvn.w	r0, #2
    9830:	4770      	bx	lr
    9832:	bf00      	nop

00009834 <__cxa_end_cleanup>:
    9834:	b41e      	push	{r1, r2, r3, r4}
    9836:	f000 f88f 	bl	9958 <__gnu_end_cleanup>
    983a:	bc1e      	pop	{r1, r2, r3, r4}
    983c:	f001 ff2c 	bl	b698 <_Unwind_Resume>

00009840 <__cxa_type_match>:
    9840:	b5f0      	push	{r4, r5, r6, r7, lr}
    9842:	461c      	mov	r4, r3
    9844:	7803      	ldrb	r3, [r0, #0]
    9846:	460d      	mov	r5, r1
    9848:	2b47      	cmp	r3, #71	; 0x47
    984a:	b083      	sub	sp, #12
    984c:	d019      	beq.n	9882 <__cxa_type_match+0x42>
    984e:	2300      	movs	r3, #0
    9850:	4e26      	ldr	r6, [pc, #152]	; (98ec <__cxa_type_match+0xac>)
    9852:	9301      	str	r3, [sp, #4]
    9854:	6833      	ldr	r3, [r6, #0]
    9856:	4630      	mov	r0, r6
    9858:	689b      	ldr	r3, [r3, #8]
    985a:	4798      	blx	r3
    985c:	b178      	cbz	r0, 987e <__cxa_type_match+0x3e>
    985e:	2702      	movs	r7, #2
    9860:	9b01      	ldr	r3, [sp, #4]
    9862:	681b      	ldr	r3, [r3, #0]
    9864:	9301      	str	r3, [sp, #4]
    9866:	682b      	ldr	r3, [r5, #0]
    9868:	4628      	mov	r0, r5
    986a:	4631      	mov	r1, r6
    986c:	691d      	ldr	r5, [r3, #16]
    986e:	aa01      	add	r2, sp, #4
    9870:	2301      	movs	r3, #1
    9872:	47a8      	blx	r5
    9874:	bb18      	cbnz	r0, 98be <__cxa_type_match+0x7e>
    9876:	4607      	mov	r7, r0
    9878:	4638      	mov	r0, r7
    987a:	b003      	add	sp, #12
    987c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    987e:	2701      	movs	r7, #1
    9880:	e7f1      	b.n	9866 <__cxa_type_match+0x26>
    9882:	7843      	ldrb	r3, [r0, #1]
    9884:	2b4e      	cmp	r3, #78	; 0x4e
    9886:	d1e2      	bne.n	984e <__cxa_type_match+0xe>
    9888:	7883      	ldrb	r3, [r0, #2]
    988a:	2b55      	cmp	r3, #85	; 0x55
    988c:	d1df      	bne.n	984e <__cxa_type_match+0xe>
    988e:	78c3      	ldrb	r3, [r0, #3]
    9890:	2b43      	cmp	r3, #67	; 0x43
    9892:	d1dc      	bne.n	984e <__cxa_type_match+0xe>
    9894:	7903      	ldrb	r3, [r0, #4]
    9896:	2b46      	cmp	r3, #70	; 0x46
    9898:	d01b      	beq.n	98d2 <__cxa_type_match+0x92>
    989a:	7903      	ldrb	r3, [r0, #4]
    989c:	2b43      	cmp	r3, #67	; 0x43
    989e:	d1d6      	bne.n	984e <__cxa_type_match+0xe>
    98a0:	7943      	ldrb	r3, [r0, #5]
    98a2:	2b2b      	cmp	r3, #43	; 0x2b
    98a4:	d1d3      	bne.n	984e <__cxa_type_match+0xe>
    98a6:	7983      	ldrb	r3, [r0, #6]
    98a8:	2b2b      	cmp	r3, #43	; 0x2b
    98aa:	d1d0      	bne.n	984e <__cxa_type_match+0xe>
    98ac:	79c3      	ldrb	r3, [r0, #7]
    98ae:	2b01      	cmp	r3, #1
    98b0:	d8cd      	bhi.n	984e <__cxa_type_match+0xe>
    98b2:	d009      	beq.n	98c8 <__cxa_type_match+0x88>
    98b4:	f850 6c20 	ldr.w	r6, [r0, #-32]
    98b8:	3058      	adds	r0, #88	; 0x58
    98ba:	9001      	str	r0, [sp, #4]
    98bc:	e7ca      	b.n	9854 <__cxa_type_match+0x14>
    98be:	4638      	mov	r0, r7
    98c0:	9b01      	ldr	r3, [sp, #4]
    98c2:	6023      	str	r3, [r4, #0]
    98c4:	b003      	add	sp, #12
    98c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    98c8:	f850 0c20 	ldr.w	r0, [r0, #-32]
    98cc:	f850 6c78 	ldr.w	r6, [r0, #-120]
    98d0:	e7f3      	b.n	98ba <__cxa_type_match+0x7a>
    98d2:	7943      	ldrb	r3, [r0, #5]
    98d4:	2b4f      	cmp	r3, #79	; 0x4f
    98d6:	d1e0      	bne.n	989a <__cxa_type_match+0x5a>
    98d8:	7983      	ldrb	r3, [r0, #6]
    98da:	2b52      	cmp	r3, #82	; 0x52
    98dc:	d1dd      	bne.n	989a <__cxa_type_match+0x5a>
    98de:	79c3      	ldrb	r3, [r0, #7]
    98e0:	2b00      	cmp	r3, #0
    98e2:	d1da      	bne.n	989a <__cxa_type_match+0x5a>
    98e4:	4e02      	ldr	r6, [pc, #8]	; (98f0 <__cxa_type_match+0xb0>)
    98e6:	9301      	str	r3, [sp, #4]
    98e8:	e7b4      	b.n	9854 <__cxa_type_match+0x14>
    98ea:	bf00      	nop
    98ec:	00018d64 	.word	0x00018d64
    98f0:	00018d5c 	.word	0x00018d5c

000098f4 <__cxa_begin_cleanup>:
    98f4:	b510      	push	{r4, lr}
    98f6:	4604      	mov	r4, r0
    98f8:	f000 f9a0 	bl	9c3c <__cxa_get_globals>
    98fc:	4622      	mov	r2, r4
    98fe:	f812 3920 	ldrb.w	r3, [r2], #-32
    9902:	2b47      	cmp	r3, #71	; 0x47
    9904:	d004      	beq.n	9910 <__cxa_begin_cleanup+0x1c>
    9906:	6883      	ldr	r3, [r0, #8]
    9908:	bb23      	cbnz	r3, 9954 <__cxa_begin_cleanup+0x60>
    990a:	6082      	str	r2, [r0, #8]
    990c:	2001      	movs	r0, #1
    990e:	bd10      	pop	{r4, pc}
    9910:	7863      	ldrb	r3, [r4, #1]
    9912:	2b4e      	cmp	r3, #78	; 0x4e
    9914:	d1f7      	bne.n	9906 <__cxa_begin_cleanup+0x12>
    9916:	78a3      	ldrb	r3, [r4, #2]
    9918:	2b55      	cmp	r3, #85	; 0x55
    991a:	d1f4      	bne.n	9906 <__cxa_begin_cleanup+0x12>
    991c:	78e3      	ldrb	r3, [r4, #3]
    991e:	2b43      	cmp	r3, #67	; 0x43
    9920:	d1f1      	bne.n	9906 <__cxa_begin_cleanup+0x12>
    9922:	7923      	ldrb	r3, [r4, #4]
    9924:	2b43      	cmp	r3, #67	; 0x43
    9926:	d1ee      	bne.n	9906 <__cxa_begin_cleanup+0x12>
    9928:	7963      	ldrb	r3, [r4, #5]
    992a:	2b2b      	cmp	r3, #43	; 0x2b
    992c:	d1eb      	bne.n	9906 <__cxa_begin_cleanup+0x12>
    992e:	79a3      	ldrb	r3, [r4, #6]
    9930:	2b2b      	cmp	r3, #43	; 0x2b
    9932:	d1e8      	bne.n	9906 <__cxa_begin_cleanup+0x12>
    9934:	79e3      	ldrb	r3, [r4, #7]
    9936:	2b01      	cmp	r3, #1
    9938:	d8e5      	bhi.n	9906 <__cxa_begin_cleanup+0x12>
    993a:	f854 3c04 	ldr.w	r3, [r4, #-4]
    993e:	3301      	adds	r3, #1
    9940:	2b01      	cmp	r3, #1
    9942:	f844 3c04 	str.w	r3, [r4, #-4]
    9946:	d1e1      	bne.n	990c <__cxa_begin_cleanup+0x18>
    9948:	6883      	ldr	r3, [r0, #8]
    994a:	f844 3c08 	str.w	r3, [r4, #-8]
    994e:	6082      	str	r2, [r0, #8]
    9950:	2001      	movs	r0, #1
    9952:	bd10      	pop	{r4, pc}
    9954:	f7f9 fdde 	bl	3514 <std::terminate()>

00009958 <__gnu_end_cleanup>:
    9958:	b508      	push	{r3, lr}
    995a:	f000 f96f 	bl	9c3c <__cxa_get_globals>
    995e:	6883      	ldr	r3, [r0, #8]
    9960:	b383      	cbz	r3, 99c4 <__gnu_end_cleanup+0x6c>
    9962:	f893 2020 	ldrb.w	r2, [r3, #32]
    9966:	2a47      	cmp	r2, #71	; 0x47
    9968:	d004      	beq.n	9974 <__gnu_end_cleanup+0x1c>
    996a:	2200      	movs	r2, #0
    996c:	6082      	str	r2, [r0, #8]
    996e:	f103 0020 	add.w	r0, r3, #32
    9972:	bd08      	pop	{r3, pc}
    9974:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
    9978:	2a4e      	cmp	r2, #78	; 0x4e
    997a:	d1f6      	bne.n	996a <__gnu_end_cleanup+0x12>
    997c:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
    9980:	2a55      	cmp	r2, #85	; 0x55
    9982:	d1f2      	bne.n	996a <__gnu_end_cleanup+0x12>
    9984:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
    9988:	2a43      	cmp	r2, #67	; 0x43
    998a:	d1ee      	bne.n	996a <__gnu_end_cleanup+0x12>
    998c:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
    9990:	2a43      	cmp	r2, #67	; 0x43
    9992:	d1ea      	bne.n	996a <__gnu_end_cleanup+0x12>
    9994:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
    9998:	2a2b      	cmp	r2, #43	; 0x2b
    999a:	d1e6      	bne.n	996a <__gnu_end_cleanup+0x12>
    999c:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
    99a0:	2a2b      	cmp	r2, #43	; 0x2b
    99a2:	d1e2      	bne.n	996a <__gnu_end_cleanup+0x12>
    99a4:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
    99a8:	2a01      	cmp	r2, #1
    99aa:	d8de      	bhi.n	996a <__gnu_end_cleanup+0x12>
    99ac:	69da      	ldr	r2, [r3, #28]
    99ae:	3a01      	subs	r2, #1
    99b0:	61da      	str	r2, [r3, #28]
    99b2:	2a00      	cmp	r2, #0
    99b4:	d1db      	bne.n	996e <__gnu_end_cleanup+0x16>
    99b6:	2200      	movs	r2, #0
    99b8:	6999      	ldr	r1, [r3, #24]
    99ba:	6081      	str	r1, [r0, #8]
    99bc:	619a      	str	r2, [r3, #24]
    99be:	f103 0020 	add.w	r0, r3, #32
    99c2:	bd08      	pop	{r3, pc}
    99c4:	f7f9 fda6 	bl	3514 <std::terminate()>

000099c8 <__cxxabiv1::__is_gxx_exception_class(char*)>:
    99c8:	7803      	ldrb	r3, [r0, #0]
    99ca:	2b47      	cmp	r3, #71	; 0x47
    99cc:	d001      	beq.n	99d2 <__cxxabiv1::__is_gxx_exception_class(char*)+0xa>
    99ce:	2000      	movs	r0, #0
    99d0:	4770      	bx	lr
    99d2:	7843      	ldrb	r3, [r0, #1]
    99d4:	2b4e      	cmp	r3, #78	; 0x4e
    99d6:	d1fa      	bne.n	99ce <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    99d8:	7883      	ldrb	r3, [r0, #2]
    99da:	2b55      	cmp	r3, #85	; 0x55
    99dc:	d1f7      	bne.n	99ce <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    99de:	78c3      	ldrb	r3, [r0, #3]
    99e0:	2b43      	cmp	r3, #67	; 0x43
    99e2:	d1f4      	bne.n	99ce <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    99e4:	7903      	ldrb	r3, [r0, #4]
    99e6:	2b43      	cmp	r3, #67	; 0x43
    99e8:	d1f1      	bne.n	99ce <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    99ea:	7943      	ldrb	r3, [r0, #5]
    99ec:	2b2b      	cmp	r3, #43	; 0x2b
    99ee:	d1ee      	bne.n	99ce <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    99f0:	7983      	ldrb	r3, [r0, #6]
    99f2:	2b2b      	cmp	r3, #43	; 0x2b
    99f4:	d1eb      	bne.n	99ce <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    99f6:	79c0      	ldrb	r0, [r0, #7]
    99f8:	2801      	cmp	r0, #1
    99fa:	bf8c      	ite	hi
    99fc:	2000      	movhi	r0, #0
    99fe:	2001      	movls	r0, #1
    9a00:	4770      	bx	lr
    9a02:	bf00      	nop

00009a04 <__cxa_call_terminate>:
    9a04:	b510      	push	{r4, lr}
    9a06:	b130      	cbz	r0, 9a16 <__cxa_call_terminate+0x12>
    9a08:	4604      	mov	r4, r0
    9a0a:	f000 f881 	bl	9b10 <__cxa_begin_catch>
    9a0e:	4620      	mov	r0, r4
    9a10:	f7ff ffda 	bl	99c8 <__cxxabiv1::__is_gxx_exception_class(char*)>
    9a14:	b908      	cbnz	r0, 9a1a <__cxa_call_terminate+0x16>
    9a16:	f7f9 fd7d 	bl	3514 <std::terminate()>
    9a1a:	f854 0c14 	ldr.w	r0, [r4, #-20]
    9a1e:	f7f9 fd65 	bl	34ec <__cxxabiv1::__terminate(void (*)())>
    9a22:	bf00      	nop

00009a24 <__cxa_call_unexpected>:
    9a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9a28:	b085      	sub	sp, #20
    9a2a:	4602      	mov	r2, r0
    9a2c:	f7ff ffcc 	bl	99c8 <__cxxabiv1::__is_gxx_exception_class(char*)>
    9a30:	b140      	cbz	r0, 9a44 <__cxa_call_unexpected+0x20>
    9a32:	e952 7406 	ldrd	r7, r4, [r2, #-24]
    9a36:	2600      	movs	r6, #0
    9a38:	f8d2 a028 	ldr.w	sl, [r2, #40]	; 0x28
    9a3c:	f8d2 8030 	ldr.w	r8, [r2, #48]	; 0x30
    9a40:	6b55      	ldr	r5, [r2, #52]	; 0x34
    9a42:	e005      	b.n	9a50 <__cxa_call_unexpected+0x2c>
    9a44:	4604      	mov	r4, r0
    9a46:	2601      	movs	r6, #1
    9a48:	4607      	mov	r7, r0
    9a4a:	4605      	mov	r5, r0
    9a4c:	4680      	mov	r8, r0
    9a4e:	4682      	mov	sl, r0
    9a50:	4610      	mov	r0, r2
    9a52:	f000 f85d 	bl	9b10 <__cxa_begin_catch>
    9a56:	b10e      	cbz	r6, 9a5c <__cxa_call_unexpected+0x38>
    9a58:	f7f9 fd6a 	bl	3530 <std::unexpected()>
    9a5c:	4638      	mov	r0, r7
    9a5e:	f7f9 fd63 	bl	3528 <__cxxabiv1::__unexpected(void (*)())>
    9a62:	f000 f855 	bl	9b10 <__cxa_begin_catch>
    9a66:	b10e      	cbz	r6, 9a6c <__cxa_call_unexpected+0x48>
    9a68:	f7f9 fd54 	bl	3514 <std::terminate()>
    9a6c:	f000 f8e2 	bl	9c34 <__cxa_get_globals_fast>
    9a70:	f04f 0900 	mov.w	r9, #0
    9a74:	6807      	ldr	r7, [r0, #0]
    9a76:	f8df b088 	ldr.w	fp, [pc, #136]	; 9b00 <__cxa_call_unexpected+0xdc>
    9a7a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
    9a7e:	2b01      	cmp	r3, #1
    9a80:	bf0c      	ite	eq
    9a82:	683b      	ldreq	r3, [r7, #0]
    9a84:	f107 0378 	addne.w	r3, r7, #120	; 0x78
    9a88:	9302      	str	r3, [sp, #8]
    9a8a:	f028 0303 	bic.w	r3, r8, #3
    9a8e:	9301      	str	r3, [sp, #4]
    9a90:	3720      	adds	r7, #32
    9a92:	45ca      	cmp	sl, r9
    9a94:	dd20      	ble.n	9ad8 <__cxa_call_unexpected+0xb4>
    9a96:	f8d5 8000 	ldr.w	r8, [r5]
    9a9a:	f1b8 0f00 	cmp.w	r8, #0
    9a9e:	d000      	beq.n	9aa2 <__cxa_call_unexpected+0x7e>
    9aa0:	44a8      	add	r8, r5
    9aa2:	2200      	movs	r2, #0
    9aa4:	4641      	mov	r1, r8
    9aa6:	4638      	mov	r0, r7
    9aa8:	ab02      	add	r3, sp, #8
    9aaa:	f7ff fec9 	bl	9840 <__cxa_type_match>
    9aae:	b108      	cbz	r0, 9ab4 <__cxa_call_unexpected+0x90>
    9ab0:	f7f9 fdea 	bl	3688 <__cxa_rethrow>
    9ab4:	f8d8 3000 	ldr.w	r3, [r8]
    9ab8:	9003      	str	r0, [sp, #12]
    9aba:	4659      	mov	r1, fp
    9abc:	4640      	mov	r0, r8
    9abe:	aa03      	add	r2, sp, #12
    9ac0:	f8d3 8010 	ldr.w	r8, [r3, #16]
    9ac4:	2301      	movs	r3, #1
    9ac6:	47c0      	blx	r8
    9ac8:	9b01      	ldr	r3, [sp, #4]
    9aca:	2800      	cmp	r0, #0
    9acc:	bf18      	it	ne
    9ace:	4606      	movne	r6, r0
    9ad0:	f109 0901 	add.w	r9, r9, #1
    9ad4:	441d      	add	r5, r3
    9ad6:	e7dc      	b.n	9a92 <__cxa_call_unexpected+0x6e>
    9ad8:	b146      	cbz	r6, 9aec <__cxa_call_unexpected+0xc8>
    9ada:	2004      	movs	r0, #4
    9adc:	f7f9 fc72 	bl	33c4 <__cxa_allocate_exception>
    9ae0:	4b08      	ldr	r3, [pc, #32]	; (9b04 <__cxa_call_unexpected+0xe0>)
    9ae2:	4a09      	ldr	r2, [pc, #36]	; (9b08 <__cxa_call_unexpected+0xe4>)
    9ae4:	4906      	ldr	r1, [pc, #24]	; (9b00 <__cxa_call_unexpected+0xdc>)
    9ae6:	6003      	str	r3, [r0, #0]
    9ae8:	f7f9 fdb2 	bl	3650 <__cxa_throw>
    9aec:	4620      	mov	r0, r4
    9aee:	f7f9 fcfd 	bl	34ec <__cxxabiv1::__terminate(void (*)())>
    9af2:	f000 f84d 	bl	9b90 <__cxa_end_catch>
    9af6:	f000 f84b 	bl	9b90 <__cxa_end_catch>
    9afa:	f7ff fe9b 	bl	9834 <__cxa_end_cleanup>
    9afe:	bf00      	nop
    9b00:	00018d6c 	.word	0x00018d6c
    9b04:	00018e18 	.word	0x00018e18
    9b08:	00003489 	.word	0x00003489

00009b0c <__cxa_get_exception_ptr>:
    9b0c:	6a40      	ldr	r0, [r0, #36]	; 0x24
    9b0e:	4770      	bx	lr

00009b10 <__cxa_begin_catch>:
    9b10:	b538      	push	{r3, r4, r5, lr}
    9b12:	4604      	mov	r4, r0
    9b14:	f000 f892 	bl	9c3c <__cxa_get_globals>
    9b18:	4622      	mov	r2, r4
    9b1a:	f812 3920 	ldrb.w	r3, [r2], #-32
    9b1e:	6805      	ldr	r5, [r0, #0]
    9b20:	2b47      	cmp	r3, #71	; 0x47
    9b22:	d003      	beq.n	9b2c <__cxa_begin_catch+0x1c>
    9b24:	bb8d      	cbnz	r5, 9b8a <__cxa_begin_catch+0x7a>
    9b26:	6002      	str	r2, [r0, #0]
    9b28:	4628      	mov	r0, r5
    9b2a:	bd38      	pop	{r3, r4, r5, pc}
    9b2c:	7863      	ldrb	r3, [r4, #1]
    9b2e:	2b4e      	cmp	r3, #78	; 0x4e
    9b30:	d1f8      	bne.n	9b24 <__cxa_begin_catch+0x14>
    9b32:	78a3      	ldrb	r3, [r4, #2]
    9b34:	2b55      	cmp	r3, #85	; 0x55
    9b36:	d1f5      	bne.n	9b24 <__cxa_begin_catch+0x14>
    9b38:	78e3      	ldrb	r3, [r4, #3]
    9b3a:	2b43      	cmp	r3, #67	; 0x43
    9b3c:	d1f2      	bne.n	9b24 <__cxa_begin_catch+0x14>
    9b3e:	7923      	ldrb	r3, [r4, #4]
    9b40:	2b43      	cmp	r3, #67	; 0x43
    9b42:	d1ef      	bne.n	9b24 <__cxa_begin_catch+0x14>
    9b44:	7963      	ldrb	r3, [r4, #5]
    9b46:	2b2b      	cmp	r3, #43	; 0x2b
    9b48:	d1ec      	bne.n	9b24 <__cxa_begin_catch+0x14>
    9b4a:	79a3      	ldrb	r3, [r4, #6]
    9b4c:	2b2b      	cmp	r3, #43	; 0x2b
    9b4e:	d1e9      	bne.n	9b24 <__cxa_begin_catch+0x14>
    9b50:	79e3      	ldrb	r3, [r4, #7]
    9b52:	2b01      	cmp	r3, #1
    9b54:	d8e6      	bhi.n	9b24 <__cxa_begin_catch+0x14>
    9b56:	f854 3c0c 	ldr.w	r3, [r4, #-12]
    9b5a:	2b00      	cmp	r3, #0
    9b5c:	db12      	blt.n	9b84 <__cxa_begin_catch+0x74>
    9b5e:	3301      	adds	r3, #1
    9b60:	f844 3c0c 	str.w	r3, [r4, #-12]
    9b64:	6843      	ldr	r3, [r0, #4]
    9b66:	4295      	cmp	r5, r2
    9b68:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    9b6c:	6043      	str	r3, [r0, #4]
    9b6e:	bf18      	it	ne
    9b70:	f844 5c10 	strne.w	r5, [r4, #-16]
    9b74:	6a65      	ldr	r5, [r4, #36]	; 0x24
    9b76:	bf18      	it	ne
    9b78:	6002      	strne	r2, [r0, #0]
    9b7a:	4620      	mov	r0, r4
    9b7c:	f001 f9d8 	bl	af30 <_Unwind_Complete>
    9b80:	4628      	mov	r0, r5
    9b82:	bd38      	pop	{r3, r4, r5, pc}
    9b84:	f1c3 0301 	rsb	r3, r3, #1
    9b88:	e7ea      	b.n	9b60 <__cxa_begin_catch+0x50>
    9b8a:	f7f9 fcc3 	bl	3514 <std::terminate()>
    9b8e:	bf00      	nop

00009b90 <__cxa_end_catch>:
    9b90:	b508      	push	{r3, lr}
    9b92:	f000 f84f 	bl	9c34 <__cxa_get_globals_fast>
    9b96:	4602      	mov	r2, r0
    9b98:	6800      	ldr	r0, [r0, #0]
    9b9a:	b370      	cbz	r0, 9bfa <__cxa_end_catch+0x6a>
    9b9c:	f890 1020 	ldrb.w	r1, [r0, #32]
    9ba0:	2947      	cmp	r1, #71	; 0x47
    9ba2:	d006      	beq.n	9bb2 <__cxa_end_catch+0x22>
    9ba4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9ba8:	2100      	movs	r1, #0
    9baa:	3020      	adds	r0, #32
    9bac:	6011      	str	r1, [r2, #0]
    9bae:	f001 b9c1 	b.w	af34 <_Unwind_DeleteException>
    9bb2:	f890 1021 	ldrb.w	r1, [r0, #33]	; 0x21
    9bb6:	294e      	cmp	r1, #78	; 0x4e
    9bb8:	d1f4      	bne.n	9ba4 <__cxa_end_catch+0x14>
    9bba:	f890 1022 	ldrb.w	r1, [r0, #34]	; 0x22
    9bbe:	2955      	cmp	r1, #85	; 0x55
    9bc0:	d1f0      	bne.n	9ba4 <__cxa_end_catch+0x14>
    9bc2:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
    9bc6:	2943      	cmp	r1, #67	; 0x43
    9bc8:	d1ec      	bne.n	9ba4 <__cxa_end_catch+0x14>
    9bca:	f890 1024 	ldrb.w	r1, [r0, #36]	; 0x24
    9bce:	2943      	cmp	r1, #67	; 0x43
    9bd0:	d1e8      	bne.n	9ba4 <__cxa_end_catch+0x14>
    9bd2:	f890 1025 	ldrb.w	r1, [r0, #37]	; 0x25
    9bd6:	292b      	cmp	r1, #43	; 0x2b
    9bd8:	d1e4      	bne.n	9ba4 <__cxa_end_catch+0x14>
    9bda:	f890 1026 	ldrb.w	r1, [r0, #38]	; 0x26
    9bde:	292b      	cmp	r1, #43	; 0x2b
    9be0:	d1e0      	bne.n	9ba4 <__cxa_end_catch+0x14>
    9be2:	f890 1027 	ldrb.w	r1, [r0, #39]	; 0x27
    9be6:	2901      	cmp	r1, #1
    9be8:	d8dc      	bhi.n	9ba4 <__cxa_end_catch+0x14>
    9bea:	6941      	ldr	r1, [r0, #20]
    9bec:	2900      	cmp	r1, #0
    9bee:	db05      	blt.n	9bfc <__cxa_end_catch+0x6c>
    9bf0:	3901      	subs	r1, #1
    9bf2:	d008      	beq.n	9c06 <__cxa_end_catch+0x76>
    9bf4:	1c4b      	adds	r3, r1, #1
    9bf6:	d00d      	beq.n	9c14 <__cxa_end_catch+0x84>
    9bf8:	6141      	str	r1, [r0, #20]
    9bfa:	bd08      	pop	{r3, pc}
    9bfc:	3101      	adds	r1, #1
    9bfe:	d1fb      	bne.n	9bf8 <__cxa_end_catch+0x68>
    9c00:	6903      	ldr	r3, [r0, #16]
    9c02:	6013      	str	r3, [r2, #0]
    9c04:	e7f8      	b.n	9bf8 <__cxa_end_catch+0x68>
    9c06:	6901      	ldr	r1, [r0, #16]
    9c08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9c0c:	3020      	adds	r0, #32
    9c0e:	6011      	str	r1, [r2, #0]
    9c10:	f001 b990 	b.w	af34 <_Unwind_DeleteException>
    9c14:	f7f9 fc7e 	bl	3514 <std::terminate()>

00009c18 <std::uncaught_exception()>:
    9c18:	b508      	push	{r3, lr}
    9c1a:	f000 f80f 	bl	9c3c <__cxa_get_globals>
    9c1e:	6840      	ldr	r0, [r0, #4]
    9c20:	3800      	subs	r0, #0
    9c22:	bf18      	it	ne
    9c24:	2001      	movne	r0, #1
    9c26:	bd08      	pop	{r3, pc}

00009c28 <std::uncaught_exceptions()>:
    9c28:	b508      	push	{r3, lr}
    9c2a:	f000 f807 	bl	9c3c <__cxa_get_globals>
    9c2e:	6840      	ldr	r0, [r0, #4]
    9c30:	bd08      	pop	{r3, pc}
    9c32:	bf00      	nop

00009c34 <__cxa_get_globals_fast>:
    9c34:	4800      	ldr	r0, [pc, #0]	; (9c38 <__cxa_get_globals_fast+0x4>)
    9c36:	4770      	bx	lr
    9c38:	20001f40 	.word	0x20001f40

00009c3c <__cxa_get_globals>:
    9c3c:	4800      	ldr	r0, [pc, #0]	; (9c40 <__cxa_get_globals+0x4>)
    9c3e:	4770      	bx	lr
    9c40:	20001f40 	.word	0x20001f40

00009c44 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>:
    9c44:	2850      	cmp	r0, #80	; 0x50
    9c46:	b570      	push	{r4, r5, r6, lr}
    9c48:	d01d      	beq.n	9c86 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x42>
    9c4a:	4684      	mov	ip, r0
    9c4c:	f000 000f 	and.w	r0, r0, #15
    9c50:	280c      	cmp	r0, #12
    9c52:	d855      	bhi.n	9d00 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xbc>
    9c54:	e8df f000 	tbb	[pc, r0]
    9c58:	07264407 	.word	0x07264407
    9c5c:	5454541e 	.word	0x5454541e
    9c60:	07222a54 	.word	0x07222a54
    9c64:	1e          	.byte	0x1e
    9c65:	00          	.byte	0x00
    9c66:	4610      	mov	r0, r2
    9c68:	f850 6b04 	ldr.w	r6, [r0], #4
    9c6c:	b14e      	cbz	r6, 9c82 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x3e>
    9c6e:	f00c 0470 	and.w	r4, ip, #112	; 0x70
    9c72:	2c10      	cmp	r4, #16
    9c74:	bf08      	it	eq
    9c76:	4611      	moveq	r1, r2
    9c78:	f01c 0f80 	tst.w	ip, #128	; 0x80
    9c7c:	440e      	add	r6, r1
    9c7e:	bf18      	it	ne
    9c80:	6836      	ldrne	r6, [r6, #0]
    9c82:	601e      	str	r6, [r3, #0]
    9c84:	bd70      	pop	{r4, r5, r6, pc}
    9c86:	3203      	adds	r2, #3
    9c88:	f022 0003 	bic.w	r0, r2, #3
    9c8c:	f850 6b04 	ldr.w	r6, [r0], #4
    9c90:	601e      	str	r6, [r3, #0]
    9c92:	bd70      	pop	{r4, r5, r6, pc}
    9c94:	4610      	mov	r0, r2
    9c96:	f850 6b08 	ldr.w	r6, [r0], #8
    9c9a:	e7e7      	b.n	9c6c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9c9c:	4610      	mov	r0, r2
    9c9e:	f930 6b02 	ldrsh.w	r6, [r0], #2
    9ca2:	e7e3      	b.n	9c6c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9ca4:	4610      	mov	r0, r2
    9ca6:	f830 6b02 	ldrh.w	r6, [r0], #2
    9caa:	e7df      	b.n	9c6c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9cac:	2600      	movs	r6, #0
    9cae:	4610      	mov	r0, r2
    9cb0:	4634      	mov	r4, r6
    9cb2:	f810 5b01 	ldrb.w	r5, [r0], #1
    9cb6:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
    9cba:	fa0e fe04 	lsl.w	lr, lr, r4
    9cbe:	f015 0f80 	tst.w	r5, #128	; 0x80
    9cc2:	ea46 060e 	orr.w	r6, r6, lr
    9cc6:	f104 0407 	add.w	r4, r4, #7
    9cca:	d1f2      	bne.n	9cb2 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x6e>
    9ccc:	2c1f      	cmp	r4, #31
    9cce:	d8cd      	bhi.n	9c6c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9cd0:	066d      	lsls	r5, r5, #25
    9cd2:	d5cb      	bpl.n	9c6c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9cd4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    9cd8:	fa05 f404 	lsl.w	r4, r5, r4
    9cdc:	4326      	orrs	r6, r4
    9cde:	e7c6      	b.n	9c6e <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x2a>
    9ce0:	2600      	movs	r6, #0
    9ce2:	4610      	mov	r0, r2
    9ce4:	4634      	mov	r4, r6
    9ce6:	f810 5b01 	ldrb.w	r5, [r0], #1
    9cea:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
    9cee:	fa0e fe04 	lsl.w	lr, lr, r4
    9cf2:	062d      	lsls	r5, r5, #24
    9cf4:	ea46 060e 	orr.w	r6, r6, lr
    9cf8:	f104 0407 	add.w	r4, r4, #7
    9cfc:	d4f3      	bmi.n	9ce6 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xa2>
    9cfe:	e7b5      	b.n	9c6c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    9d00:	f001 fede 	bl	bac0 <abort>

00009d04 <base_of_encoded_value(unsigned char, _Unwind_Context*)>:
    9d04:	28ff      	cmp	r0, #255	; 0xff
    9d06:	b508      	push	{r3, lr}
    9d08:	4603      	mov	r3, r0
    9d0a:	d019      	beq.n	9d40 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x3c>
    9d0c:	f003 0270 	and.w	r2, r3, #112	; 0x70
    9d10:	2a30      	cmp	r2, #48	; 0x30
    9d12:	4608      	mov	r0, r1
    9d14:	d016      	beq.n	9d44 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x40>
    9d16:	d805      	bhi.n	9d24 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x20>
    9d18:	2a20      	cmp	r2, #32
    9d1a:	d109      	bne.n	9d30 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x2c>
    9d1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9d20:	f001 becb 	b.w	baba <_Unwind_GetTextRelBase>
    9d24:	2a40      	cmp	r2, #64	; 0x40
    9d26:	d109      	bne.n	9d3c <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x38>
    9d28:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9d2c:	f001 beb2 	b.w	ba94 <_Unwind_GetRegionStart>
    9d30:	d802      	bhi.n	9d38 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x34>
    9d32:	f013 0f60 	tst.w	r3, #96	; 0x60
    9d36:	d003      	beq.n	9d40 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x3c>
    9d38:	f001 fec2 	bl	bac0 <abort>
    9d3c:	2a50      	cmp	r2, #80	; 0x50
    9d3e:	d1fb      	bne.n	9d38 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x34>
    9d40:	2000      	movs	r0, #0
    9d42:	bd08      	pop	{r3, pc}
    9d44:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9d48:	f001 beb4 	b.w	bab4 <_Unwind_GetDataRelBase>

00009d4c <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>:
    9d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9d4e:	4606      	mov	r6, r0
    9d50:	460c      	mov	r4, r1
    9d52:	4615      	mov	r5, r2
    9d54:	b108      	cbz	r0, 9d5a <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0xe>
    9d56:	f001 fe9d 	bl	ba94 <_Unwind_GetRegionStart>
    9d5a:	6028      	str	r0, [r5, #0]
    9d5c:	f814 7b01 	ldrb.w	r7, [r4], #1
    9d60:	2fff      	cmp	r7, #255	; 0xff
    9d62:	d129      	bne.n	9db8 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x6c>
    9d64:	6068      	str	r0, [r5, #4]
    9d66:	4620      	mov	r0, r4
    9d68:	f810 3b01 	ldrb.w	r3, [r0], #1
    9d6c:	2bff      	cmp	r3, #255	; 0xff
    9d6e:	752b      	strb	r3, [r5, #20]
    9d70:	d033      	beq.n	9dda <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x8e>
    9d72:	2400      	movs	r4, #0
    9d74:	2310      	movs	r3, #16
    9d76:	4622      	mov	r2, r4
    9d78:	752b      	strb	r3, [r5, #20]
    9d7a:	f810 1b01 	ldrb.w	r1, [r0], #1
    9d7e:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    9d82:	4093      	lsls	r3, r2
    9d84:	0609      	lsls	r1, r1, #24
    9d86:	ea44 0403 	orr.w	r4, r4, r3
    9d8a:	f102 0207 	add.w	r2, r2, #7
    9d8e:	d4f4      	bmi.n	9d7a <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x2e>
    9d90:	4404      	add	r4, r0
    9d92:	60ec      	str	r4, [r5, #12]
    9d94:	2400      	movs	r4, #0
    9d96:	4622      	mov	r2, r4
    9d98:	f810 3b01 	ldrb.w	r3, [r0], #1
    9d9c:	756b      	strb	r3, [r5, #21]
    9d9e:	f810 1b01 	ldrb.w	r1, [r0], #1
    9da2:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    9da6:	4093      	lsls	r3, r2
    9da8:	431c      	orrs	r4, r3
    9daa:	060b      	lsls	r3, r1, #24
    9dac:	f102 0207 	add.w	r2, r2, #7
    9db0:	d4f5      	bmi.n	9d9e <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x52>
    9db2:	4404      	add	r4, r0
    9db4:	612c      	str	r4, [r5, #16]
    9db6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9db8:	4631      	mov	r1, r6
    9dba:	4638      	mov	r0, r7
    9dbc:	f7ff ffa2 	bl	9d04 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9dc0:	4622      	mov	r2, r4
    9dc2:	4601      	mov	r1, r0
    9dc4:	1d2b      	adds	r3, r5, #4
    9dc6:	4638      	mov	r0, r7
    9dc8:	f7ff ff3c 	bl	9c44 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    9dcc:	4604      	mov	r4, r0
    9dce:	4620      	mov	r0, r4
    9dd0:	f810 3b01 	ldrb.w	r3, [r0], #1
    9dd4:	2bff      	cmp	r3, #255	; 0xff
    9dd6:	752b      	strb	r3, [r5, #20]
    9dd8:	d1cb      	bne.n	9d72 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x26>
    9dda:	2300      	movs	r3, #0
    9ddc:	60eb      	str	r3, [r5, #12]
    9dde:	e7d9      	b.n	9d94 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x48>

00009de0 <__gxx_personality_v0>:
    9de0:	2300      	movs	r3, #0
    9de2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9de6:	4617      	mov	r7, r2
    9de8:	f000 0203 	and.w	r2, r0, #3
    9dec:	b093      	sub	sp, #76	; 0x4c
    9dee:	2a01      	cmp	r2, #1
    9df0:	4688      	mov	r8, r1
    9df2:	9308      	str	r3, [sp, #32]
    9df4:	d013      	beq.n	9e1e <__gxx_personality_v0+0x3e>
    9df6:	2a02      	cmp	r2, #2
    9df8:	d108      	bne.n	9e0c <__gxx_personality_v0+0x2c>
    9dfa:	4639      	mov	r1, r7
    9dfc:	4640      	mov	r0, r8
    9dfe:	f001 fe31 	bl	ba64 <__gnu_unwind_frame>
    9e02:	b940      	cbnz	r0, 9e16 <__gxx_personality_v0+0x36>
    9e04:	2008      	movs	r0, #8
    9e06:	b013      	add	sp, #76	; 0x4c
    9e08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9e0c:	2a00      	cmp	r2, #0
    9e0e:	f000 8097 	beq.w	9f40 <__gxx_personality_v0+0x160>
    9e12:	f001 fe55 	bl	bac0 <abort>
    9e16:	2009      	movs	r0, #9
    9e18:	b013      	add	sp, #76	; 0x4c
    9e1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9e1e:	f010 0408 	ands.w	r4, r0, #8
    9e22:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
    9e26:	f000 80a2 	beq.w	9f6e <__gxx_personality_v0+0x18e>
    9e2a:	f044 0202 	orr.w	r2, r4, #2
    9e2e:	9202      	str	r2, [sp, #8]
    9e30:	910c      	str	r1, [sp, #48]	; 0x30
    9e32:	220c      	movs	r2, #12
    9e34:	4619      	mov	r1, r3
    9e36:	4638      	mov	r0, r7
    9e38:	f8cd b000 	str.w	fp, [sp]
    9e3c:	f001 f8a6 	bl	af8c <_Unwind_VRS_Set>
    9e40:	4638      	mov	r0, r7
    9e42:	f001 fe2d 	bl	baa0 <_Unwind_GetLanguageSpecificData>
    9e46:	9003      	str	r0, [sp, #12]
    9e48:	2800      	cmp	r0, #0
    9e4a:	d0d6      	beq.n	9dfa <__gxx_personality_v0+0x1a>
    9e4c:	465a      	mov	r2, fp
    9e4e:	9903      	ldr	r1, [sp, #12]
    9e50:	4638      	mov	r0, r7
    9e52:	f7ff ff7b 	bl	9d4c <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
    9e56:	4639      	mov	r1, r7
    9e58:	4605      	mov	r5, r0
    9e5a:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    9e5e:	f7ff ff51 	bl	9d04 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9e62:	2300      	movs	r3, #0
    9e64:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
    9e68:	4619      	mov	r1, r3
    9e6a:	900e      	str	r0, [sp, #56]	; 0x38
    9e6c:	220f      	movs	r2, #15
    9e6e:	4638      	mov	r0, r7
    9e70:	f8cd 9000 	str.w	r9, [sp]
    9e74:	f001 f864 	bl	af40 <_Unwind_VRS_Get>
    9e78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9e7a:	f023 0301 	bic.w	r3, r3, #1
    9e7e:	1e5e      	subs	r6, r3, #1
    9e80:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9e82:	429d      	cmp	r5, r3
    9e84:	d237      	bcs.n	9ef6 <__gxx_personality_v0+0x116>
    9e86:	f89d 4045 	ldrb.w	r4, [sp, #69]	; 0x45
    9e8a:	2100      	movs	r1, #0
    9e8c:	4620      	mov	r0, r4
    9e8e:	f7ff ff39 	bl	9d04 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9e92:	462a      	mov	r2, r5
    9e94:	4601      	mov	r1, r0
    9e96:	ab09      	add	r3, sp, #36	; 0x24
    9e98:	4620      	mov	r0, r4
    9e9a:	f7ff fed3 	bl	9c44 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    9e9e:	2100      	movs	r1, #0
    9ea0:	f89d a045 	ldrb.w	sl, [sp, #69]	; 0x45
    9ea4:	4605      	mov	r5, r0
    9ea6:	4650      	mov	r0, sl
    9ea8:	460c      	mov	r4, r1
    9eaa:	f7ff ff2b 	bl	9d04 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9eae:	462a      	mov	r2, r5
    9eb0:	4601      	mov	r1, r0
    9eb2:	ab0a      	add	r3, sp, #40	; 0x28
    9eb4:	4650      	mov	r0, sl
    9eb6:	f7ff fec5 	bl	9c44 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    9eba:	f89d a045 	ldrb.w	sl, [sp, #69]	; 0x45
    9ebe:	4605      	mov	r5, r0
    9ec0:	4621      	mov	r1, r4
    9ec2:	4650      	mov	r0, sl
    9ec4:	f7ff ff1e 	bl	9d04 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    9ec8:	462a      	mov	r2, r5
    9eca:	4601      	mov	r1, r0
    9ecc:	464b      	mov	r3, r9
    9ece:	4650      	mov	r0, sl
    9ed0:	f7ff feb8 	bl	9c44 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    9ed4:	4622      	mov	r2, r4
    9ed6:	4605      	mov	r5, r0
    9ed8:	f815 1b01 	ldrb.w	r1, [r5], #1
    9edc:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    9ee0:	4093      	lsls	r3, r2
    9ee2:	431c      	orrs	r4, r3
    9ee4:	060b      	lsls	r3, r1, #24
    9ee6:	f102 0207 	add.w	r2, r2, #7
    9eea:	d4f5      	bmi.n	9ed8 <__gxx_personality_v0+0xf8>
    9eec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9eee:	9a09      	ldr	r2, [sp, #36]	; 0x24
    9ef0:	4413      	add	r3, r2
    9ef2:	42b3      	cmp	r3, r6
    9ef4:	d91c      	bls.n	9f30 <__gxx_personality_v0+0x150>
    9ef6:	9b02      	ldr	r3, [sp, #8]
    9ef8:	07d8      	lsls	r0, r3, #31
    9efa:	d533      	bpl.n	9f64 <__gxx_personality_v0+0x184>
    9efc:	2400      	movs	r4, #0
    9efe:	9404      	str	r4, [sp, #16]
    9f00:	2300      	movs	r3, #0
    9f02:	4638      	mov	r0, r7
    9f04:	4619      	mov	r1, r3
    9f06:	220d      	movs	r2, #13
    9f08:	f8cd 9000 	str.w	r9, [sp]
    9f0c:	9d08      	ldr	r5, [sp, #32]
    9f0e:	f001 f817 	bl	af40 <_Unwind_VRS_Get>
    9f12:	9b03      	ldr	r3, [sp, #12]
    9f14:	2006      	movs	r0, #6
    9f16:	f8c8 302c 	str.w	r3, [r8, #44]	; 0x2c
    9f1a:	9b04      	ldr	r3, [sp, #16]
    9f1c:	f8c8 5024 	str.w	r5, [r8, #36]	; 0x24
    9f20:	f8c8 3030 	str.w	r3, [r8, #48]	; 0x30
    9f24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9f26:	f8c8 4028 	str.w	r4, [r8, #40]	; 0x28
    9f2a:	f8c8 3020 	str.w	r3, [r8, #32]
    9f2e:	e76a      	b.n	9e06 <__gxx_personality_v0+0x26>
    9f30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9f32:	4413      	add	r3, r2
    9f34:	42b3      	cmp	r3, r6
    9f36:	d871      	bhi.n	a01c <__gxx_personality_v0+0x23c>
    9f38:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9f3a:	42ab      	cmp	r3, r5
    9f3c:	d8a3      	bhi.n	9e86 <__gxx_personality_v0+0xa6>
    9f3e:	e7da      	b.n	9ef6 <__gxx_personality_v0+0x116>
    9f40:	0702      	lsls	r2, r0, #28
    9f42:	f53f af5a 	bmi.w	9dfa <__gxx_personality_v0+0x1a>
    9f46:	2301      	movs	r3, #1
    9f48:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
    9f4c:	9302      	str	r3, [sp, #8]
    9f4e:	2300      	movs	r3, #0
    9f50:	220c      	movs	r2, #12
    9f52:	4638      	mov	r0, r7
    9f54:	4619      	mov	r1, r3
    9f56:	f8cd b000 	str.w	fp, [sp]
    9f5a:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    9f5e:	f001 f815 	bl	af8c <_Unwind_VRS_Set>
    9f62:	e76d      	b.n	9e40 <__gxx_personality_v0+0x60>
    9f64:	9b02      	ldr	r3, [sp, #8]
    9f66:	071a      	lsls	r2, r3, #28
    9f68:	d555      	bpl.n	a016 <__gxx_personality_v0+0x236>
    9f6a:	f7f9 fad3 	bl	3514 <std::terminate()>
    9f6e:	f8cd b000 	str.w	fp, [sp]
    9f72:	6a0d      	ldr	r5, [r1, #32]
    9f74:	4623      	mov	r3, r4
    9f76:	220d      	movs	r2, #13
    9f78:	4621      	mov	r1, r4
    9f7a:	4638      	mov	r0, r7
    9f7c:	f000 ffe0 	bl	af40 <_Unwind_VRS_Get>
    9f80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9f82:	429d      	cmp	r5, r3
    9f84:	d002      	beq.n	9f8c <__gxx_personality_v0+0x1ac>
    9f86:	2302      	movs	r3, #2
    9f88:	9302      	str	r3, [sp, #8]
    9f8a:	e7e0      	b.n	9f4e <__gxx_personality_v0+0x16e>
    9f8c:	4623      	mov	r3, r4
    9f8e:	4621      	mov	r1, r4
    9f90:	220c      	movs	r2, #12
    9f92:	4638      	mov	r0, r7
    9f94:	f8cd b000 	str.w	fp, [sp]
    9f98:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    9f9c:	f000 fff6 	bl	af8c <_Unwind_VRS_Set>
    9fa0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
    9fa4:	9304      	str	r3, [sp, #16]
    9fa6:	b3b3      	cbz	r3, a016 <__gxx_personality_v0+0x236>
    9fa8:	e9d8 430a 	ldrd	r4, r3, [r8, #40]	; 0x28
    9fac:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
    9fb0:	9303      	str	r3, [sp, #12]
    9fb2:	2c00      	cmp	r4, #0
    9fb4:	db4e      	blt.n	a054 <__gxx_personality_v0+0x274>
    9fb6:	2503      	movs	r5, #3
    9fb8:	2300      	movs	r3, #0
    9fba:	4638      	mov	r0, r7
    9fbc:	461a      	mov	r2, r3
    9fbe:	4619      	mov	r1, r3
    9fc0:	f8cd 9000 	str.w	r9, [sp]
    9fc4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
    9fc8:	f000 ffe0 	bl	af8c <_Unwind_VRS_Set>
    9fcc:	2300      	movs	r3, #0
    9fce:	2201      	movs	r2, #1
    9fd0:	4619      	mov	r1, r3
    9fd2:	4638      	mov	r0, r7
    9fd4:	f8cd 9000 	str.w	r9, [sp]
    9fd8:	940b      	str	r4, [sp, #44]	; 0x2c
    9fda:	f000 ffd7 	bl	af8c <_Unwind_VRS_Set>
    9fde:	2300      	movs	r3, #0
    9fe0:	220f      	movs	r2, #15
    9fe2:	4619      	mov	r1, r3
    9fe4:	4638      	mov	r0, r7
    9fe6:	f8cd 9000 	str.w	r9, [sp]
    9fea:	f000 ffa9 	bl	af40 <_Unwind_VRS_Get>
    9fee:	2300      	movs	r3, #0
    9ff0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    9ff2:	9904      	ldr	r1, [sp, #16]
    9ff4:	f002 0201 	and.w	r2, r2, #1
    9ff8:	430a      	orrs	r2, r1
    9ffa:	920b      	str	r2, [sp, #44]	; 0x2c
    9ffc:	4638      	mov	r0, r7
    9ffe:	220f      	movs	r2, #15
    a000:	4619      	mov	r1, r3
    a002:	f8cd 9000 	str.w	r9, [sp]
    a006:	f000 ffc1 	bl	af8c <_Unwind_VRS_Set>
    a00a:	2d02      	cmp	r5, #2
    a00c:	d01d      	beq.n	a04a <__gxx_personality_v0+0x26a>
    a00e:	2007      	movs	r0, #7
    a010:	b013      	add	sp, #76	; 0x4c
    a012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a016:	4640      	mov	r0, r8
    a018:	f7ff fcf4 	bl	9a04 <__cxa_call_terminate>
    a01c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a01e:	2b00      	cmp	r3, #0
    a020:	f43f aeeb 	beq.w	9dfa <__gxx_personality_v0+0x1a>
    a024:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    a026:	4413      	add	r3, r2
    a028:	9304      	str	r3, [sp, #16]
    a02a:	2c00      	cmp	r4, #0
    a02c:	d138      	bne.n	a0a0 <__gxx_personality_v0+0x2c0>
    a02e:	2b00      	cmp	r3, #0
    a030:	f43f aee3 	beq.w	9dfa <__gxx_personality_v0+0x1a>
    a034:	9b02      	ldr	r3, [sp, #8]
    a036:	07dd      	lsls	r5, r3, #31
    a038:	f53f aedf 	bmi.w	9dfa <__gxx_personality_v0+0x1a>
    a03c:	9b02      	ldr	r3, [sp, #8]
    a03e:	071b      	lsls	r3, r3, #28
    a040:	f140 811b 	bpl.w	a27a <__gxx_personality_v0+0x49a>
    a044:	2400      	movs	r4, #0
    a046:	2502      	movs	r5, #2
    a048:	e7b6      	b.n	9fb8 <__gxx_personality_v0+0x1d8>
    a04a:	4640      	mov	r0, r8
    a04c:	f7ff fc52 	bl	98f4 <__cxa_begin_cleanup>
    a050:	2007      	movs	r0, #7
    a052:	e6d8      	b.n	9e06 <__gxx_personality_v0+0x26>
    a054:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
    a058:	1b1b      	subs	r3, r3, r4
    a05a:	461d      	mov	r5, r3
    a05c:	465a      	mov	r2, fp
    a05e:	9903      	ldr	r1, [sp, #12]
    a060:	4638      	mov	r0, r7
    a062:	f7ff fe73 	bl	9d4c <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
    a066:	4639      	mov	r1, r7
    a068:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    a06c:	f7ff fe4a 	bl	9d04 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    a070:	462a      	mov	r2, r5
    a072:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a074:	900e      	str	r0, [sp, #56]	; 0x38
    a076:	eb03 0585 	add.w	r5, r3, r5, lsl #2
    a07a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    a07e:	b133      	cbz	r3, a08e <__gxx_personality_v0+0x2ae>
    a080:	462a      	mov	r2, r5
    a082:	2300      	movs	r3, #0
    a084:	f852 1f04 	ldr.w	r1, [r2, #4]!
    a088:	3301      	adds	r3, #1
    a08a:	2900      	cmp	r1, #0
    a08c:	d1fa      	bne.n	a084 <__gxx_personality_v0+0x2a4>
    a08e:	e9c8 300a 	strd	r3, r0, [r8, #40]	; 0x28
    a092:	2304      	movs	r3, #4
    a094:	f8c8 5034 	str.w	r5, [r8, #52]	; 0x34
    a098:	f8c8 3030 	str.w	r3, [r8, #48]	; 0x30
    a09c:	2503      	movs	r5, #3
    a09e:	e78b      	b.n	9fb8 <__gxx_personality_v0+0x1d8>
    a0a0:	9e10      	ldr	r6, [sp, #64]	; 0x40
    a0a2:	9b04      	ldr	r3, [sp, #16]
    a0a4:	3c01      	subs	r4, #1
    a0a6:	4426      	add	r6, r4
    a0a8:	2b00      	cmp	r3, #0
    a0aa:	f43f aea6 	beq.w	9dfa <__gxx_personality_v0+0x1a>
    a0ae:	9b02      	ldr	r3, [sp, #8]
    a0b0:	2e00      	cmp	r6, #0
    a0b2:	f000 80da 	beq.w	a26a <__gxx_personality_v0+0x48a>
    a0b6:	f013 0308 	ands.w	r3, r3, #8
    a0ba:	9305      	str	r3, [sp, #20]
    a0bc:	f000 80c1 	beq.w	a242 <__gxx_personality_v0+0x462>
    a0c0:	2347      	movs	r3, #71	; 0x47
    a0c2:	f888 3000 	strb.w	r3, [r8]
    a0c6:	234e      	movs	r3, #78	; 0x4e
    a0c8:	f888 3001 	strb.w	r3, [r8, #1]
    a0cc:	2355      	movs	r3, #85	; 0x55
    a0ce:	f888 3002 	strb.w	r3, [r8, #2]
    a0d2:	2343      	movs	r3, #67	; 0x43
    a0d4:	f888 3003 	strb.w	r3, [r8, #3]
    a0d8:	2346      	movs	r3, #70	; 0x46
    a0da:	f888 3004 	strb.w	r3, [r8, #4]
    a0de:	234f      	movs	r3, #79	; 0x4f
    a0e0:	f888 3005 	strb.w	r3, [r8, #5]
    a0e4:	2352      	movs	r3, #82	; 0x52
    a0e6:	f888 3006 	strb.w	r3, [r8, #6]
    a0ea:	2300      	movs	r3, #0
    a0ec:	f888 3007 	strb.w	r3, [r8, #7]
    a0f0:	2300      	movs	r3, #0
    a0f2:	e9cd 7b06 	strd	r7, fp, [sp, #24]
    a0f6:	469b      	mov	fp, r3
    a0f8:	2400      	movs	r4, #0
    a0fa:	4622      	mov	r2, r4
    a0fc:	f816 1b01 	ldrb.w	r1, [r6], #1
    a100:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    a104:	4093      	lsls	r3, r2
    a106:	0608      	lsls	r0, r1, #24
    a108:	ea44 0403 	orr.w	r4, r4, r3
    a10c:	f102 0207 	add.w	r2, r2, #7
    a110:	d4f4      	bmi.n	a0fc <__gxx_personality_v0+0x31c>
    a112:	2a1f      	cmp	r2, #31
    a114:	d805      	bhi.n	a122 <__gxx_personality_v0+0x342>
    a116:	064b      	lsls	r3, r1, #25
    a118:	d503      	bpl.n	a122 <__gxx_personality_v0+0x342>
    a11a:	2301      	movs	r3, #1
    a11c:	4093      	lsls	r3, r2
    a11e:	425b      	negs	r3, r3
    a120:	431c      	orrs	r4, r3
    a122:	2500      	movs	r5, #0
    a124:	4630      	mov	r0, r6
    a126:	462a      	mov	r2, r5
    a128:	f810 1b01 	ldrb.w	r1, [r0], #1
    a12c:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    a130:	4093      	lsls	r3, r2
    a132:	060f      	lsls	r7, r1, #24
    a134:	ea45 0503 	orr.w	r5, r5, r3
    a138:	f102 0207 	add.w	r2, r2, #7
    a13c:	d4f4      	bmi.n	a128 <__gxx_personality_v0+0x348>
    a13e:	2a1f      	cmp	r2, #31
    a140:	d805      	bhi.n	a14e <__gxx_personality_v0+0x36e>
    a142:	0649      	lsls	r1, r1, #25
    a144:	d503      	bpl.n	a14e <__gxx_personality_v0+0x36e>
    a146:	2301      	movs	r3, #1
    a148:	4093      	lsls	r3, r2
    a14a:	425b      	negs	r3, r3
    a14c:	431d      	orrs	r5, r3
    a14e:	2c00      	cmp	r4, #0
    a150:	d035      	beq.n	a1be <__gxx_personality_v0+0x3de>
    a152:	dc37      	bgt.n	a1c4 <__gxx_personality_v0+0x3e4>
    a154:	f1b8 0f00 	cmp.w	r8, #0
    a158:	d002      	beq.n	a160 <__gxx_personality_v0+0x380>
    a15a:	9b05      	ldr	r3, [sp, #20]
    a15c:	2b00      	cmp	r3, #0
    a15e:	d04d      	beq.n	a1fc <__gxx_personality_v0+0x41c>
    a160:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
    a164:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a166:	ebaa 0a04 	sub.w	sl, sl, r4
    a16a:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
    a16e:	b1bb      	cbz	r3, a1a0 <__gxx_personality_v0+0x3c0>
    a170:	2d00      	cmp	r5, #0
    a172:	d070      	beq.n	a256 <__gxx_personality_v0+0x476>
    a174:	442e      	add	r6, r5
    a176:	e7bf      	b.n	a0f8 <__gxx_personality_v0+0x318>
    a178:	00a3      	lsls	r3, r4, #2
    a17a:	425b      	negs	r3, r3
    a17c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    a17e:	990e      	ldr	r1, [sp, #56]	; 0x38
    a180:	441a      	add	r2, r3
    a182:	464b      	mov	r3, r9
    a184:	f7ff fd5e 	bl	9c44 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    a188:	990b      	ldr	r1, [sp, #44]	; 0x2c
    a18a:	b149      	cbz	r1, a1a0 <__gxx_personality_v0+0x3c0>
    a18c:	f1b8 0f00 	cmp.w	r8, #0
    a190:	d0ee      	beq.n	a170 <__gxx_personality_v0+0x390>
    a192:	2200      	movs	r2, #0
    a194:	4640      	mov	r0, r8
    a196:	ab08      	add	r3, sp, #32
    a198:	f7ff fb52 	bl	9840 <__cxa_type_match>
    a19c:	2800      	cmp	r0, #0
    a19e:	d0e7      	beq.n	a170 <__gxx_personality_v0+0x390>
    a1a0:	9b02      	ldr	r3, [sp, #8]
    a1a2:	e9dd 7b06 	ldrd	r7, fp, [sp, #24]
    a1a6:	07d9      	lsls	r1, r3, #31
    a1a8:	f53f aeaa 	bmi.w	9f00 <__gxx_personality_v0+0x120>
    a1ac:	9b05      	ldr	r3, [sp, #20]
    a1ae:	2b00      	cmp	r3, #0
    a1b0:	f43f aeff 	beq.w	9fb2 <__gxx_personality_v0+0x1d2>
    a1b4:	2c00      	cmp	r4, #0
    a1b6:	f6bf aefe 	bge.w	9fb6 <__gxx_personality_v0+0x1d6>
    a1ba:	f7f9 f9b9 	bl	3530 <std::unexpected()>
    a1be:	f04f 0b01 	mov.w	fp, #1
    a1c2:	e7d5      	b.n	a170 <__gxx_personality_v0+0x390>
    a1c4:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    a1c8:	28ff      	cmp	r0, #255	; 0xff
    a1ca:	d030      	beq.n	a22e <__gxx_personality_v0+0x44e>
    a1cc:	f000 0307 	and.w	r3, r0, #7
    a1d0:	2b04      	cmp	r3, #4
    a1d2:	f63f ae1e 	bhi.w	9e12 <__gxx_personality_v0+0x32>
    a1d6:	a201      	add	r2, pc, #4	; (adr r2, a1dc <__gxx_personality_v0+0x3fc>)
    a1d8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    a1dc:	0000a179 	.word	0x0000a179
    a1e0:	00009e13 	.word	0x00009e13
    a1e4:	0000a1f7 	.word	0x0000a1f7
    a1e8:	0000a179 	.word	0x0000a179
    a1ec:	0000a1f1 	.word	0x0000a1f1
    a1f0:	00e3      	lsls	r3, r4, #3
    a1f2:	425b      	negs	r3, r3
    a1f4:	e7c2      	b.n	a17c <__gxx_personality_v0+0x39c>
    a1f6:	0063      	lsls	r3, r4, #1
    a1f8:	425b      	negs	r3, r3
    a1fa:	e7bf      	b.n	a17c <__gxx_personality_v0+0x39c>
    a1fc:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
    a200:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    a202:	ebaa 0a04 	sub.w	sl, sl, r4
    a206:	9b08      	ldr	r3, [sp, #32]
    a208:	f857 102a 	ldr.w	r1, [r7, sl, lsl #2]
    a20c:	930b      	str	r3, [sp, #44]	; 0x2c
    a20e:	eb07 078a 	add.w	r7, r7, sl, lsl #2
    a212:	b919      	cbnz	r1, a21c <__gxx_personality_v0+0x43c>
    a214:	e00d      	b.n	a232 <__gxx_personality_v0+0x452>
    a216:	f857 1f04 	ldr.w	r1, [r7, #4]!
    a21a:	b151      	cbz	r1, a232 <__gxx_personality_v0+0x452>
    a21c:	464b      	mov	r3, r9
    a21e:	2200      	movs	r2, #0
    a220:	4640      	mov	r0, r8
    a222:	4439      	add	r1, r7
    a224:	f7ff fb0c 	bl	9840 <__cxa_type_match>
    a228:	2800      	cmp	r0, #0
    a22a:	d0f4      	beq.n	a216 <__gxx_personality_v0+0x436>
    a22c:	e7a0      	b.n	a170 <__gxx_personality_v0+0x390>
    a22e:	2300      	movs	r3, #0
    a230:	e7a4      	b.n	a17c <__gxx_personality_v0+0x39c>
    a232:	9b02      	ldr	r3, [sp, #8]
    a234:	4655      	mov	r5, sl
    a236:	e9dd 7b06 	ldrd	r7, fp, [sp, #24]
    a23a:	07da      	lsls	r2, r3, #31
    a23c:	f53f ae60 	bmi.w	9f00 <__gxx_personality_v0+0x120>
    a240:	e70c      	b.n	a05c <__gxx_personality_v0+0x27c>
    a242:	f898 3007 	ldrb.w	r3, [r8, #7]
    a246:	2b01      	cmp	r3, #1
    a248:	bf0c      	ite	eq
    a24a:	f858 3c20 	ldreq.w	r3, [r8, #-32]
    a24e:	f108 0358 	addne.w	r3, r8, #88	; 0x58
    a252:	9308      	str	r3, [sp, #32]
    a254:	e74c      	b.n	a0f0 <__gxx_personality_v0+0x310>
    a256:	465b      	mov	r3, fp
    a258:	9f06      	ldr	r7, [sp, #24]
    a25a:	2b00      	cmp	r3, #0
    a25c:	f43f adcd 	beq.w	9dfa <__gxx_personality_v0+0x1a>
    a260:	9b02      	ldr	r3, [sp, #8]
    a262:	07db      	lsls	r3, r3, #31
    a264:	f53f adc9 	bmi.w	9dfa <__gxx_personality_v0+0x1a>
    a268:	e6ec      	b.n	a044 <__gxx_personality_v0+0x264>
    a26a:	07de      	lsls	r6, r3, #31
    a26c:	f53f adc5 	bmi.w	9dfa <__gxx_personality_v0+0x1a>
    a270:	9b02      	ldr	r3, [sp, #8]
    a272:	f013 0408 	ands.w	r4, r3, #8
    a276:	f47f aee5 	bne.w	a044 <__gxx_personality_v0+0x264>
    a27a:	2502      	movs	r5, #2
    a27c:	e69c      	b.n	9fb8 <__gxx_personality_v0+0x1d8>
    a27e:	f7ff fc47 	bl	9b10 <__cxa_begin_catch>
    a282:	e672      	b.n	9f6a <__gxx_personality_v0+0x18a>

0000a284 <__cxa_current_exception_type>:
    a284:	b508      	push	{r3, lr}
    a286:	f7ff fcd9 	bl	9c3c <__cxa_get_globals>
    a28a:	6800      	ldr	r0, [r0, #0]
    a28c:	b130      	cbz	r0, a29c <__cxa_current_exception_type+0x18>
    a28e:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
    a292:	2b01      	cmp	r3, #1
    a294:	bf04      	itt	eq
    a296:	6800      	ldreq	r0, [r0, #0]
    a298:	3878      	subeq	r0, #120	; 0x78
    a29a:	6800      	ldr	r0, [r0, #0]
    a29c:	bd08      	pop	{r3, pc}
    a29e:	bf00      	nop

0000a2a0 <ceilf>:
    a2a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a2a2:	f3c0 55c7 	ubfx	r5, r0, #23, #8
    a2a6:	3d7f      	subs	r5, #127	; 0x7f
    a2a8:	2d16      	cmp	r5, #22
    a2aa:	4604      	mov	r4, r0
    a2ac:	f020 4700 	bic.w	r7, r0, #2147483648	; 0x80000000
    a2b0:	dc26      	bgt.n	a300 <ceilf+0x60>
    a2b2:	2d00      	cmp	r5, #0
    a2b4:	4606      	mov	r6, r0
    a2b6:	db14      	blt.n	a2e2 <ceilf+0x42>
    a2b8:	4f16      	ldr	r7, [pc, #88]	; (a314 <ceilf+0x74>)
    a2ba:	412f      	asrs	r7, r5
    a2bc:	4238      	tst	r0, r7
    a2be:	d01d      	beq.n	a2fc <ceilf+0x5c>
    a2c0:	4915      	ldr	r1, [pc, #84]	; (a318 <ceilf+0x78>)
    a2c2:	f000 f95f 	bl	a584 <__addsf3>
    a2c6:	2100      	movs	r1, #0
    a2c8:	f000 fc20 	bl	ab0c <__aeabi_fcmpgt>
    a2cc:	b1b0      	cbz	r0, a2fc <ceilf+0x5c>
    a2ce:	2c00      	cmp	r4, #0
    a2d0:	dd04      	ble.n	a2dc <ceilf+0x3c>
    a2d2:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
    a2d6:	fa43 f505 	asr.w	r5, r3, r5
    a2da:	442e      	add	r6, r5
    a2dc:	ea26 0007 	bic.w	r0, r6, r7
    a2e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a2e2:	490d      	ldr	r1, [pc, #52]	; (a318 <ceilf+0x78>)
    a2e4:	f000 f94e 	bl	a584 <__addsf3>
    a2e8:	2100      	movs	r1, #0
    a2ea:	f000 fc0f 	bl	ab0c <__aeabi_fcmpgt>
    a2ee:	b128      	cbz	r0, a2fc <ceilf+0x5c>
    a2f0:	2c00      	cmp	r4, #0
    a2f2:	db0c      	blt.n	a30e <ceilf+0x6e>
    a2f4:	b117      	cbz	r7, a2fc <ceilf+0x5c>
    a2f6:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
    a2fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a2fc:	4620      	mov	r0, r4
    a2fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a300:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
    a304:	d3fa      	bcc.n	a2fc <ceilf+0x5c>
    a306:	4601      	mov	r1, r0
    a308:	f000 f93c 	bl	a584 <__addsf3>
    a30c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a30e:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
    a312:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a314:	007fffff 	.word	0x007fffff
    a318:	7149f2ca 	.word	0x7149f2ca

0000a31c <floorf>:
    a31c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a31e:	f3c0 55c7 	ubfx	r5, r0, #23, #8
    a322:	3d7f      	subs	r5, #127	; 0x7f
    a324:	2d16      	cmp	r5, #22
    a326:	4604      	mov	r4, r0
    a328:	f020 4700 	bic.w	r7, r0, #2147483648	; 0x80000000
    a32c:	dc24      	bgt.n	a378 <floorf+0x5c>
    a32e:	2d00      	cmp	r5, #0
    a330:	4606      	mov	r6, r0
    a332:	db14      	blt.n	a35e <floorf+0x42>
    a334:	4f16      	ldr	r7, [pc, #88]	; (a390 <floorf+0x74>)
    a336:	412f      	asrs	r7, r5
    a338:	4238      	tst	r0, r7
    a33a:	d01b      	beq.n	a374 <floorf+0x58>
    a33c:	4915      	ldr	r1, [pc, #84]	; (a394 <floorf+0x78>)
    a33e:	f000 f921 	bl	a584 <__addsf3>
    a342:	2100      	movs	r1, #0
    a344:	f000 fbe2 	bl	ab0c <__aeabi_fcmpgt>
    a348:	b1a0      	cbz	r0, a374 <floorf+0x58>
    a34a:	2c00      	cmp	r4, #0
    a34c:	da04      	bge.n	a358 <floorf+0x3c>
    a34e:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
    a352:	fa43 f505 	asr.w	r5, r3, r5
    a356:	442e      	add	r6, r5
    a358:	ea26 0007 	bic.w	r0, r6, r7
    a35c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a35e:	490d      	ldr	r1, [pc, #52]	; (a394 <floorf+0x78>)
    a360:	f000 f910 	bl	a584 <__addsf3>
    a364:	2100      	movs	r1, #0
    a366:	f000 fbd1 	bl	ab0c <__aeabi_fcmpgt>
    a36a:	b118      	cbz	r0, a374 <floorf+0x58>
    a36c:	2c00      	cmp	r4, #0
    a36e:	db0a      	blt.n	a386 <floorf+0x6a>
    a370:	2000      	movs	r0, #0
    a372:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a374:	4620      	mov	r0, r4
    a376:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a378:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
    a37c:	d3fa      	bcc.n	a374 <floorf+0x58>
    a37e:	4601      	mov	r1, r0
    a380:	f000 f900 	bl	a584 <__addsf3>
    a384:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a386:	2f00      	cmp	r7, #0
    a388:	d0f4      	beq.n	a374 <floorf+0x58>
    a38a:	4803      	ldr	r0, [pc, #12]	; (a398 <floorf+0x7c>)
    a38c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a38e:	bf00      	nop
    a390:	007fffff 	.word	0x007fffff
    a394:	7149f2ca 	.word	0x7149f2ca
    a398:	bf800000 	.word	0xbf800000

0000a39c <roundf>:
    a39c:	b508      	push	{r3, lr}
    a39e:	f3c0 53c7 	ubfx	r3, r0, #23, #8
    a3a2:	3b7f      	subs	r3, #127	; 0x7f
    a3a4:	2b16      	cmp	r3, #22
    a3a6:	4601      	mov	r1, r0
    a3a8:	dc15      	bgt.n	a3d6 <roundf+0x3a>
    a3aa:	2b00      	cmp	r3, #0
    a3ac:	4602      	mov	r2, r0
    a3ae:	db0b      	blt.n	a3c8 <roundf+0x2c>
    a3b0:	480b      	ldr	r0, [pc, #44]	; (a3e0 <roundf+0x44>)
    a3b2:	4118      	asrs	r0, r3
    a3b4:	4201      	tst	r1, r0
    a3b6:	d005      	beq.n	a3c4 <roundf+0x28>
    a3b8:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
    a3bc:	4119      	asrs	r1, r3
    a3be:	4411      	add	r1, r2
    a3c0:	ea21 0100 	bic.w	r1, r1, r0
    a3c4:	4608      	mov	r0, r1
    a3c6:	bd08      	pop	{r3, pc}
    a3c8:	3301      	adds	r3, #1
    a3ca:	f000 4100 	and.w	r1, r0, #2147483648	; 0x80000000
    a3ce:	d1f9      	bne.n	a3c4 <roundf+0x28>
    a3d0:	f041 517e 	orr.w	r1, r1, #1065353216	; 0x3f800000
    a3d4:	e7f6      	b.n	a3c4 <roundf+0x28>
    a3d6:	2b80      	cmp	r3, #128	; 0x80
    a3d8:	d1f4      	bne.n	a3c4 <roundf+0x28>
    a3da:	f000 f8d3 	bl	a584 <__addsf3>
    a3de:	bd08      	pop	{r3, pc}
    a3e0:	007fffff 	.word	0x007fffff
    a3e4:	f04f 0cff 	mov.w	ip, #255	; 0xff
    a3e8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    a3ec:	bf1e      	ittt	ne
    a3ee:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    a3f2:	ea92 0f0c 	teqne	r2, ip
    a3f6:	ea93 0f0c 	teqne	r3, ip
    a3fa:	d06f      	beq.n	a4dc <roundf+0x140>
    a3fc:	441a      	add	r2, r3
    a3fe:	ea80 0c01 	eor.w	ip, r0, r1
    a402:	0240      	lsls	r0, r0, #9
    a404:	bf18      	it	ne
    a406:	ea5f 2141 	movsne.w	r1, r1, lsl #9
    a40a:	d01e      	beq.n	a44a <roundf+0xae>
    a40c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
    a410:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
    a414:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
    a418:	fba0 3101 	umull	r3, r1, r0, r1
    a41c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    a420:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
    a424:	bf3e      	ittt	cc
    a426:	0049      	lslcc	r1, r1, #1
    a428:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
    a42c:	005b      	lslcc	r3, r3, #1
    a42e:	ea40 0001 	orr.w	r0, r0, r1
    a432:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
    a436:	2afd      	cmp	r2, #253	; 0xfd
    a438:	d81d      	bhi.n	a476 <roundf+0xda>
    a43a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
    a43e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    a442:	bf08      	it	eq
    a444:	f020 0001 	biceq.w	r0, r0, #1
    a448:	4770      	bx	lr
    a44a:	f090 0f00 	teq	r0, #0
    a44e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    a452:	bf08      	it	eq
    a454:	0249      	lsleq	r1, r1, #9
    a456:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    a45a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
    a45e:	3a7f      	subs	r2, #127	; 0x7f
    a460:	bfc2      	ittt	gt
    a462:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    a466:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    a46a:	4770      	bxgt	lr
    a46c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a470:	f04f 0300 	mov.w	r3, #0
    a474:	3a01      	subs	r2, #1
    a476:	dc5d      	bgt.n	a534 <roundf+0x198>
    a478:	f112 0f19 	cmn.w	r2, #25
    a47c:	bfdc      	itt	le
    a47e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
    a482:	4770      	bxle	lr
    a484:	f1c2 0200 	rsb	r2, r2, #0
    a488:	0041      	lsls	r1, r0, #1
    a48a:	fa21 f102 	lsr.w	r1, r1, r2
    a48e:	f1c2 0220 	rsb	r2, r2, #32
    a492:	fa00 fc02 	lsl.w	ip, r0, r2
    a496:	ea5f 0031 	movs.w	r0, r1, rrx
    a49a:	f140 0000 	adc.w	r0, r0, #0
    a49e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
    a4a2:	bf08      	it	eq
    a4a4:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    a4a8:	4770      	bx	lr
    a4aa:	f092 0f00 	teq	r2, #0
    a4ae:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    a4b2:	bf02      	ittt	eq
    a4b4:	0040      	lsleq	r0, r0, #1
    a4b6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    a4ba:	3a01      	subeq	r2, #1
    a4bc:	d0f9      	beq.n	a4b2 <roundf+0x116>
    a4be:	ea40 000c 	orr.w	r0, r0, ip
    a4c2:	f093 0f00 	teq	r3, #0
    a4c6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    a4ca:	bf02      	ittt	eq
    a4cc:	0049      	lsleq	r1, r1, #1
    a4ce:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    a4d2:	3b01      	subeq	r3, #1
    a4d4:	d0f9      	beq.n	a4ca <roundf+0x12e>
    a4d6:	ea41 010c 	orr.w	r1, r1, ip
    a4da:	e78f      	b.n	a3fc <roundf+0x60>
    a4dc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    a4e0:	ea92 0f0c 	teq	r2, ip
    a4e4:	bf18      	it	ne
    a4e6:	ea93 0f0c 	teqne	r3, ip
    a4ea:	d00a      	beq.n	a502 <roundf+0x166>
    a4ec:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    a4f0:	bf18      	it	ne
    a4f2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    a4f6:	d1d8      	bne.n	a4aa <roundf+0x10e>
    a4f8:	ea80 0001 	eor.w	r0, r0, r1
    a4fc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    a500:	4770      	bx	lr
    a502:	f090 0f00 	teq	r0, #0
    a506:	bf17      	itett	ne
    a508:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
    a50c:	4608      	moveq	r0, r1
    a50e:	f091 0f00 	teqne	r1, #0
    a512:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
    a516:	d014      	beq.n	a542 <roundf+0x1a6>
    a518:	ea92 0f0c 	teq	r2, ip
    a51c:	d101      	bne.n	a522 <roundf+0x186>
    a51e:	0242      	lsls	r2, r0, #9
    a520:	d10f      	bne.n	a542 <roundf+0x1a6>
    a522:	ea93 0f0c 	teq	r3, ip
    a526:	d103      	bne.n	a530 <roundf+0x194>
    a528:	024b      	lsls	r3, r1, #9
    a52a:	bf18      	it	ne
    a52c:	4608      	movne	r0, r1
    a52e:	d108      	bne.n	a542 <roundf+0x1a6>
    a530:	ea80 0001 	eor.w	r0, r0, r1
    a534:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    a538:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    a53c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a540:	4770      	bx	lr
    a542:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    a546:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
    a54a:	4770      	bx	lr

0000a54c <__aeabi_dcmpun>:
    a54c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a550:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a554:	d102      	bne.n	a55c <__aeabi_dcmpun+0x10>
    a556:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    a55a:	d10a      	bne.n	a572 <__aeabi_dcmpun+0x26>
    a55c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a560:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a564:	d102      	bne.n	a56c <__aeabi_dcmpun+0x20>
    a566:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    a56a:	d102      	bne.n	a572 <__aeabi_dcmpun+0x26>
    a56c:	f04f 0000 	mov.w	r0, #0
    a570:	4770      	bx	lr
    a572:	f04f 0001 	mov.w	r0, #1
    a576:	4770      	bx	lr

0000a578 <__aeabi_frsub>:
    a578:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
    a57c:	e002      	b.n	a584 <__addsf3>
    a57e:	bf00      	nop

0000a580 <__aeabi_fsub>:
    a580:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0000a584 <__addsf3>:
    a584:	0042      	lsls	r2, r0, #1
    a586:	bf1f      	itttt	ne
    a588:	ea5f 0341 	movsne.w	r3, r1, lsl #1
    a58c:	ea92 0f03 	teqne	r2, r3
    a590:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
    a594:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    a598:	d06a      	beq.n	a670 <__addsf3+0xec>
    a59a:	ea4f 6212 	mov.w	r2, r2, lsr #24
    a59e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
    a5a2:	bfc1      	itttt	gt
    a5a4:	18d2      	addgt	r2, r2, r3
    a5a6:	4041      	eorgt	r1, r0
    a5a8:	4048      	eorgt	r0, r1
    a5aa:	4041      	eorgt	r1, r0
    a5ac:	bfb8      	it	lt
    a5ae:	425b      	neglt	r3, r3
    a5b0:	2b19      	cmp	r3, #25
    a5b2:	bf88      	it	hi
    a5b4:	4770      	bxhi	lr
    a5b6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
    a5ba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a5be:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    a5c2:	bf18      	it	ne
    a5c4:	4240      	negne	r0, r0
    a5c6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    a5ca:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
    a5ce:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
    a5d2:	bf18      	it	ne
    a5d4:	4249      	negne	r1, r1
    a5d6:	ea92 0f03 	teq	r2, r3
    a5da:	d03f      	beq.n	a65c <__addsf3+0xd8>
    a5dc:	f1a2 0201 	sub.w	r2, r2, #1
    a5e0:	fa41 fc03 	asr.w	ip, r1, r3
    a5e4:	eb10 000c 	adds.w	r0, r0, ip
    a5e8:	f1c3 0320 	rsb	r3, r3, #32
    a5ec:	fa01 f103 	lsl.w	r1, r1, r3
    a5f0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
    a5f4:	d502      	bpl.n	a5fc <__addsf3+0x78>
    a5f6:	4249      	negs	r1, r1
    a5f8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
    a5fc:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
    a600:	d313      	bcc.n	a62a <__addsf3+0xa6>
    a602:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
    a606:	d306      	bcc.n	a616 <__addsf3+0x92>
    a608:	0840      	lsrs	r0, r0, #1
    a60a:	ea4f 0131 	mov.w	r1, r1, rrx
    a60e:	f102 0201 	add.w	r2, r2, #1
    a612:	2afe      	cmp	r2, #254	; 0xfe
    a614:	d251      	bcs.n	a6ba <__addsf3+0x136>
    a616:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
    a61a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    a61e:	bf08      	it	eq
    a620:	f020 0001 	biceq.w	r0, r0, #1
    a624:	ea40 0003 	orr.w	r0, r0, r3
    a628:	4770      	bx	lr
    a62a:	0049      	lsls	r1, r1, #1
    a62c:	eb40 0000 	adc.w	r0, r0, r0
    a630:	3a01      	subs	r2, #1
    a632:	bf28      	it	cs
    a634:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
    a638:	d2ed      	bcs.n	a616 <__addsf3+0x92>
    a63a:	fab0 fc80 	clz	ip, r0
    a63e:	f1ac 0c08 	sub.w	ip, ip, #8
    a642:	ebb2 020c 	subs.w	r2, r2, ip
    a646:	fa00 f00c 	lsl.w	r0, r0, ip
    a64a:	bfaa      	itet	ge
    a64c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
    a650:	4252      	neglt	r2, r2
    a652:	4318      	orrge	r0, r3
    a654:	bfbc      	itt	lt
    a656:	40d0      	lsrlt	r0, r2
    a658:	4318      	orrlt	r0, r3
    a65a:	4770      	bx	lr
    a65c:	f092 0f00 	teq	r2, #0
    a660:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
    a664:	bf06      	itte	eq
    a666:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
    a66a:	3201      	addeq	r2, #1
    a66c:	3b01      	subne	r3, #1
    a66e:	e7b5      	b.n	a5dc <__addsf3+0x58>
    a670:	ea4f 0341 	mov.w	r3, r1, lsl #1
    a674:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    a678:	bf18      	it	ne
    a67a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    a67e:	d021      	beq.n	a6c4 <__addsf3+0x140>
    a680:	ea92 0f03 	teq	r2, r3
    a684:	d004      	beq.n	a690 <__addsf3+0x10c>
    a686:	f092 0f00 	teq	r2, #0
    a68a:	bf08      	it	eq
    a68c:	4608      	moveq	r0, r1
    a68e:	4770      	bx	lr
    a690:	ea90 0f01 	teq	r0, r1
    a694:	bf1c      	itt	ne
    a696:	2000      	movne	r0, #0
    a698:	4770      	bxne	lr
    a69a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
    a69e:	d104      	bne.n	a6aa <__addsf3+0x126>
    a6a0:	0040      	lsls	r0, r0, #1
    a6a2:	bf28      	it	cs
    a6a4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
    a6a8:	4770      	bx	lr
    a6aa:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
    a6ae:	bf3c      	itt	cc
    a6b0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
    a6b4:	4770      	bxcc	lr
    a6b6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
    a6ba:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
    a6be:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a6c2:	4770      	bx	lr
    a6c4:	ea7f 6222 	mvns.w	r2, r2, asr #24
    a6c8:	bf16      	itet	ne
    a6ca:	4608      	movne	r0, r1
    a6cc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
    a6d0:	4601      	movne	r1, r0
    a6d2:	0242      	lsls	r2, r0, #9
    a6d4:	bf06      	itte	eq
    a6d6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
    a6da:	ea90 0f01 	teqeq	r0, r1
    a6de:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
    a6e2:	4770      	bx	lr

0000a6e4 <__aeabi_ui2f>:
    a6e4:	f04f 0300 	mov.w	r3, #0
    a6e8:	e004      	b.n	a6f4 <__aeabi_i2f+0x8>
    a6ea:	bf00      	nop

0000a6ec <__aeabi_i2f>:
    a6ec:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
    a6f0:	bf48      	it	mi
    a6f2:	4240      	negmi	r0, r0
    a6f4:	ea5f 0c00 	movs.w	ip, r0
    a6f8:	bf08      	it	eq
    a6fa:	4770      	bxeq	lr
    a6fc:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
    a700:	4601      	mov	r1, r0
    a702:	f04f 0000 	mov.w	r0, #0
    a706:	e01c      	b.n	a742 <__aeabi_l2f+0x2a>

0000a708 <__aeabi_ul2f>:
    a708:	ea50 0201 	orrs.w	r2, r0, r1
    a70c:	bf08      	it	eq
    a70e:	4770      	bxeq	lr
    a710:	f04f 0300 	mov.w	r3, #0
    a714:	e00a      	b.n	a72c <__aeabi_l2f+0x14>
    a716:	bf00      	nop

0000a718 <__aeabi_l2f>:
    a718:	ea50 0201 	orrs.w	r2, r0, r1
    a71c:	bf08      	it	eq
    a71e:	4770      	bxeq	lr
    a720:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
    a724:	d502      	bpl.n	a72c <__aeabi_l2f+0x14>
    a726:	4240      	negs	r0, r0
    a728:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    a72c:	ea5f 0c01 	movs.w	ip, r1
    a730:	bf02      	ittt	eq
    a732:	4684      	moveq	ip, r0
    a734:	4601      	moveq	r1, r0
    a736:	2000      	moveq	r0, #0
    a738:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
    a73c:	bf08      	it	eq
    a73e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
    a742:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
    a746:	fabc f28c 	clz	r2, ip
    a74a:	3a08      	subs	r2, #8
    a74c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
    a750:	db10      	blt.n	a774 <__aeabi_l2f+0x5c>
    a752:	fa01 fc02 	lsl.w	ip, r1, r2
    a756:	4463      	add	r3, ip
    a758:	fa00 fc02 	lsl.w	ip, r0, r2
    a75c:	f1c2 0220 	rsb	r2, r2, #32
    a760:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    a764:	fa20 f202 	lsr.w	r2, r0, r2
    a768:	eb43 0002 	adc.w	r0, r3, r2
    a76c:	bf08      	it	eq
    a76e:	f020 0001 	biceq.w	r0, r0, #1
    a772:	4770      	bx	lr
    a774:	f102 0220 	add.w	r2, r2, #32
    a778:	fa01 fc02 	lsl.w	ip, r1, r2
    a77c:	f1c2 0220 	rsb	r2, r2, #32
    a780:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
    a784:	fa21 f202 	lsr.w	r2, r1, r2
    a788:	eb43 0002 	adc.w	r0, r3, r2
    a78c:	bf08      	it	eq
    a78e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    a792:	4770      	bx	lr

0000a794 <__aeabi_fmul>:
    a794:	f04f 0cff 	mov.w	ip, #255	; 0xff
    a798:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    a79c:	bf1e      	ittt	ne
    a79e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    a7a2:	ea92 0f0c 	teqne	r2, ip
    a7a6:	ea93 0f0c 	teqne	r3, ip
    a7aa:	d06f      	beq.n	a88c <__aeabi_fmul+0xf8>
    a7ac:	441a      	add	r2, r3
    a7ae:	ea80 0c01 	eor.w	ip, r0, r1
    a7b2:	0240      	lsls	r0, r0, #9
    a7b4:	bf18      	it	ne
    a7b6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
    a7ba:	d01e      	beq.n	a7fa <__aeabi_fmul+0x66>
    a7bc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
    a7c0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
    a7c4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
    a7c8:	fba0 3101 	umull	r3, r1, r0, r1
    a7cc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    a7d0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
    a7d4:	bf3e      	ittt	cc
    a7d6:	0049      	lslcc	r1, r1, #1
    a7d8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
    a7dc:	005b      	lslcc	r3, r3, #1
    a7de:	ea40 0001 	orr.w	r0, r0, r1
    a7e2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
    a7e6:	2afd      	cmp	r2, #253	; 0xfd
    a7e8:	d81d      	bhi.n	a826 <__aeabi_fmul+0x92>
    a7ea:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
    a7ee:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    a7f2:	bf08      	it	eq
    a7f4:	f020 0001 	biceq.w	r0, r0, #1
    a7f8:	4770      	bx	lr
    a7fa:	f090 0f00 	teq	r0, #0
    a7fe:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    a802:	bf08      	it	eq
    a804:	0249      	lsleq	r1, r1, #9
    a806:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    a80a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
    a80e:	3a7f      	subs	r2, #127	; 0x7f
    a810:	bfc2      	ittt	gt
    a812:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    a816:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    a81a:	4770      	bxgt	lr
    a81c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a820:	f04f 0300 	mov.w	r3, #0
    a824:	3a01      	subs	r2, #1
    a826:	dc5d      	bgt.n	a8e4 <__aeabi_fmul+0x150>
    a828:	f112 0f19 	cmn.w	r2, #25
    a82c:	bfdc      	itt	le
    a82e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
    a832:	4770      	bxle	lr
    a834:	f1c2 0200 	rsb	r2, r2, #0
    a838:	0041      	lsls	r1, r0, #1
    a83a:	fa21 f102 	lsr.w	r1, r1, r2
    a83e:	f1c2 0220 	rsb	r2, r2, #32
    a842:	fa00 fc02 	lsl.w	ip, r0, r2
    a846:	ea5f 0031 	movs.w	r0, r1, rrx
    a84a:	f140 0000 	adc.w	r0, r0, #0
    a84e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
    a852:	bf08      	it	eq
    a854:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    a858:	4770      	bx	lr
    a85a:	f092 0f00 	teq	r2, #0
    a85e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    a862:	bf02      	ittt	eq
    a864:	0040      	lsleq	r0, r0, #1
    a866:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    a86a:	3a01      	subeq	r2, #1
    a86c:	d0f9      	beq.n	a862 <__aeabi_fmul+0xce>
    a86e:	ea40 000c 	orr.w	r0, r0, ip
    a872:	f093 0f00 	teq	r3, #0
    a876:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    a87a:	bf02      	ittt	eq
    a87c:	0049      	lsleq	r1, r1, #1
    a87e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    a882:	3b01      	subeq	r3, #1
    a884:	d0f9      	beq.n	a87a <__aeabi_fmul+0xe6>
    a886:	ea41 010c 	orr.w	r1, r1, ip
    a88a:	e78f      	b.n	a7ac <__aeabi_fmul+0x18>
    a88c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    a890:	ea92 0f0c 	teq	r2, ip
    a894:	bf18      	it	ne
    a896:	ea93 0f0c 	teqne	r3, ip
    a89a:	d00a      	beq.n	a8b2 <__aeabi_fmul+0x11e>
    a89c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    a8a0:	bf18      	it	ne
    a8a2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    a8a6:	d1d8      	bne.n	a85a <__aeabi_fmul+0xc6>
    a8a8:	ea80 0001 	eor.w	r0, r0, r1
    a8ac:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    a8b0:	4770      	bx	lr
    a8b2:	f090 0f00 	teq	r0, #0
    a8b6:	bf17      	itett	ne
    a8b8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
    a8bc:	4608      	moveq	r0, r1
    a8be:	f091 0f00 	teqne	r1, #0
    a8c2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
    a8c6:	d014      	beq.n	a8f2 <__aeabi_fmul+0x15e>
    a8c8:	ea92 0f0c 	teq	r2, ip
    a8cc:	d101      	bne.n	a8d2 <__aeabi_fmul+0x13e>
    a8ce:	0242      	lsls	r2, r0, #9
    a8d0:	d10f      	bne.n	a8f2 <__aeabi_fmul+0x15e>
    a8d2:	ea93 0f0c 	teq	r3, ip
    a8d6:	d103      	bne.n	a8e0 <__aeabi_fmul+0x14c>
    a8d8:	024b      	lsls	r3, r1, #9
    a8da:	bf18      	it	ne
    a8dc:	4608      	movne	r0, r1
    a8de:	d108      	bne.n	a8f2 <__aeabi_fmul+0x15e>
    a8e0:	ea80 0001 	eor.w	r0, r0, r1
    a8e4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    a8e8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    a8ec:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a8f0:	4770      	bx	lr
    a8f2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    a8f6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
    a8fa:	4770      	bx	lr

0000a8fc <__aeabi_fdiv>:
    a8fc:	f04f 0cff 	mov.w	ip, #255	; 0xff
    a900:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    a904:	bf1e      	ittt	ne
    a906:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    a90a:	ea92 0f0c 	teqne	r2, ip
    a90e:	ea93 0f0c 	teqne	r3, ip
    a912:	d069      	beq.n	a9e8 <__aeabi_fdiv+0xec>
    a914:	eba2 0203 	sub.w	r2, r2, r3
    a918:	ea80 0c01 	eor.w	ip, r0, r1
    a91c:	0249      	lsls	r1, r1, #9
    a91e:	ea4f 2040 	mov.w	r0, r0, lsl #9
    a922:	d037      	beq.n	a994 <__aeabi_fdiv+0x98>
    a924:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    a928:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
    a92c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
    a930:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    a934:	428b      	cmp	r3, r1
    a936:	bf38      	it	cc
    a938:	005b      	lslcc	r3, r3, #1
    a93a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
    a93e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
    a942:	428b      	cmp	r3, r1
    a944:	bf24      	itt	cs
    a946:	1a5b      	subcs	r3, r3, r1
    a948:	ea40 000c 	orrcs.w	r0, r0, ip
    a94c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
    a950:	bf24      	itt	cs
    a952:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
    a956:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    a95a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
    a95e:	bf24      	itt	cs
    a960:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
    a964:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    a968:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
    a96c:	bf24      	itt	cs
    a96e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
    a972:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    a976:	011b      	lsls	r3, r3, #4
    a978:	bf18      	it	ne
    a97a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
    a97e:	d1e0      	bne.n	a942 <__aeabi_fdiv+0x46>
    a980:	2afd      	cmp	r2, #253	; 0xfd
    a982:	f63f af50 	bhi.w	a826 <__aeabi_fmul+0x92>
    a986:	428b      	cmp	r3, r1
    a988:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    a98c:	bf08      	it	eq
    a98e:	f020 0001 	biceq.w	r0, r0, #1
    a992:	4770      	bx	lr
    a994:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    a998:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    a99c:	327f      	adds	r2, #127	; 0x7f
    a99e:	bfc2      	ittt	gt
    a9a0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    a9a4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    a9a8:	4770      	bxgt	lr
    a9aa:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a9ae:	f04f 0300 	mov.w	r3, #0
    a9b2:	3a01      	subs	r2, #1
    a9b4:	e737      	b.n	a826 <__aeabi_fmul+0x92>
    a9b6:	f092 0f00 	teq	r2, #0
    a9ba:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    a9be:	bf02      	ittt	eq
    a9c0:	0040      	lsleq	r0, r0, #1
    a9c2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    a9c6:	3a01      	subeq	r2, #1
    a9c8:	d0f9      	beq.n	a9be <__aeabi_fdiv+0xc2>
    a9ca:	ea40 000c 	orr.w	r0, r0, ip
    a9ce:	f093 0f00 	teq	r3, #0
    a9d2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    a9d6:	bf02      	ittt	eq
    a9d8:	0049      	lsleq	r1, r1, #1
    a9da:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    a9de:	3b01      	subeq	r3, #1
    a9e0:	d0f9      	beq.n	a9d6 <__aeabi_fdiv+0xda>
    a9e2:	ea41 010c 	orr.w	r1, r1, ip
    a9e6:	e795      	b.n	a914 <__aeabi_fdiv+0x18>
    a9e8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    a9ec:	ea92 0f0c 	teq	r2, ip
    a9f0:	d108      	bne.n	aa04 <__aeabi_fdiv+0x108>
    a9f2:	0242      	lsls	r2, r0, #9
    a9f4:	f47f af7d 	bne.w	a8f2 <__aeabi_fmul+0x15e>
    a9f8:	ea93 0f0c 	teq	r3, ip
    a9fc:	f47f af70 	bne.w	a8e0 <__aeabi_fmul+0x14c>
    aa00:	4608      	mov	r0, r1
    aa02:	e776      	b.n	a8f2 <__aeabi_fmul+0x15e>
    aa04:	ea93 0f0c 	teq	r3, ip
    aa08:	d104      	bne.n	aa14 <__aeabi_fdiv+0x118>
    aa0a:	024b      	lsls	r3, r1, #9
    aa0c:	f43f af4c 	beq.w	a8a8 <__aeabi_fmul+0x114>
    aa10:	4608      	mov	r0, r1
    aa12:	e76e      	b.n	a8f2 <__aeabi_fmul+0x15e>
    aa14:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    aa18:	bf18      	it	ne
    aa1a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    aa1e:	d1ca      	bne.n	a9b6 <__aeabi_fdiv+0xba>
    aa20:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
    aa24:	f47f af5c 	bne.w	a8e0 <__aeabi_fmul+0x14c>
    aa28:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
    aa2c:	f47f af3c 	bne.w	a8a8 <__aeabi_fmul+0x114>
    aa30:	e75f      	b.n	a8f2 <__aeabi_fmul+0x15e>
    aa32:	bf00      	nop

0000aa34 <__gesf2>:
    aa34:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    aa38:	e006      	b.n	aa48 <__cmpsf2+0x4>
    aa3a:	bf00      	nop

0000aa3c <__lesf2>:
    aa3c:	f04f 0c01 	mov.w	ip, #1
    aa40:	e002      	b.n	aa48 <__cmpsf2+0x4>
    aa42:	bf00      	nop

0000aa44 <__cmpsf2>:
    aa44:	f04f 0c01 	mov.w	ip, #1
    aa48:	f84d cd04 	str.w	ip, [sp, #-4]!
    aa4c:	ea4f 0240 	mov.w	r2, r0, lsl #1
    aa50:	ea4f 0341 	mov.w	r3, r1, lsl #1
    aa54:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    aa58:	bf18      	it	ne
    aa5a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    aa5e:	d011      	beq.n	aa84 <__cmpsf2+0x40>
    aa60:	b001      	add	sp, #4
    aa62:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
    aa66:	bf18      	it	ne
    aa68:	ea90 0f01 	teqne	r0, r1
    aa6c:	bf58      	it	pl
    aa6e:	ebb2 0003 	subspl.w	r0, r2, r3
    aa72:	bf88      	it	hi
    aa74:	17c8      	asrhi	r0, r1, #31
    aa76:	bf38      	it	cc
    aa78:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
    aa7c:	bf18      	it	ne
    aa7e:	f040 0001 	orrne.w	r0, r0, #1
    aa82:	4770      	bx	lr
    aa84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    aa88:	d102      	bne.n	aa90 <__cmpsf2+0x4c>
    aa8a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
    aa8e:	d105      	bne.n	aa9c <__cmpsf2+0x58>
    aa90:	ea7f 6c23 	mvns.w	ip, r3, asr #24
    aa94:	d1e4      	bne.n	aa60 <__cmpsf2+0x1c>
    aa96:	ea5f 2c41 	movs.w	ip, r1, lsl #9
    aa9a:	d0e1      	beq.n	aa60 <__cmpsf2+0x1c>
    aa9c:	f85d 0b04 	ldr.w	r0, [sp], #4
    aaa0:	4770      	bx	lr
    aaa2:	bf00      	nop

0000aaa4 <__aeabi_cfrcmple>:
    aaa4:	4684      	mov	ip, r0
    aaa6:	4608      	mov	r0, r1
    aaa8:	4661      	mov	r1, ip
    aaaa:	e7ff      	b.n	aaac <__aeabi_cfcmpeq>

0000aaac <__aeabi_cfcmpeq>:
    aaac:	b50f      	push	{r0, r1, r2, r3, lr}
    aaae:	f7ff ffc9 	bl	aa44 <__cmpsf2>
    aab2:	2800      	cmp	r0, #0
    aab4:	bf48      	it	mi
    aab6:	f110 0f00 	cmnmi.w	r0, #0
    aaba:	bd0f      	pop	{r0, r1, r2, r3, pc}

0000aabc <__aeabi_fcmpeq>:
    aabc:	f84d ed08 	str.w	lr, [sp, #-8]!
    aac0:	f7ff fff4 	bl	aaac <__aeabi_cfcmpeq>
    aac4:	bf0c      	ite	eq
    aac6:	2001      	moveq	r0, #1
    aac8:	2000      	movne	r0, #0
    aaca:	f85d fb08 	ldr.w	pc, [sp], #8
    aace:	bf00      	nop

0000aad0 <__aeabi_fcmplt>:
    aad0:	f84d ed08 	str.w	lr, [sp, #-8]!
    aad4:	f7ff ffea 	bl	aaac <__aeabi_cfcmpeq>
    aad8:	bf34      	ite	cc
    aada:	2001      	movcc	r0, #1
    aadc:	2000      	movcs	r0, #0
    aade:	f85d fb08 	ldr.w	pc, [sp], #8
    aae2:	bf00      	nop

0000aae4 <__aeabi_fcmple>:
    aae4:	f84d ed08 	str.w	lr, [sp, #-8]!
    aae8:	f7ff ffe0 	bl	aaac <__aeabi_cfcmpeq>
    aaec:	bf94      	ite	ls
    aaee:	2001      	movls	r0, #1
    aaf0:	2000      	movhi	r0, #0
    aaf2:	f85d fb08 	ldr.w	pc, [sp], #8
    aaf6:	bf00      	nop

0000aaf8 <__aeabi_fcmpge>:
    aaf8:	f84d ed08 	str.w	lr, [sp, #-8]!
    aafc:	f7ff ffd2 	bl	aaa4 <__aeabi_cfrcmple>
    ab00:	bf94      	ite	ls
    ab02:	2001      	movls	r0, #1
    ab04:	2000      	movhi	r0, #0
    ab06:	f85d fb08 	ldr.w	pc, [sp], #8
    ab0a:	bf00      	nop

0000ab0c <__aeabi_fcmpgt>:
    ab0c:	f84d ed08 	str.w	lr, [sp, #-8]!
    ab10:	f7ff ffc8 	bl	aaa4 <__aeabi_cfrcmple>
    ab14:	bf34      	ite	cc
    ab16:	2001      	movcc	r0, #1
    ab18:	2000      	movcs	r0, #0
    ab1a:	f85d fb08 	ldr.w	pc, [sp], #8
    ab1e:	bf00      	nop

0000ab20 <__aeabi_fcmpun>:
    ab20:	ea4f 0240 	mov.w	r2, r0, lsl #1
    ab24:	ea4f 0341 	mov.w	r3, r1, lsl #1
    ab28:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    ab2c:	d102      	bne.n	ab34 <__aeabi_fcmpun+0x14>
    ab2e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
    ab32:	d108      	bne.n	ab46 <__aeabi_fcmpun+0x26>
    ab34:	ea7f 6c23 	mvns.w	ip, r3, asr #24
    ab38:	d102      	bne.n	ab40 <__aeabi_fcmpun+0x20>
    ab3a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
    ab3e:	d102      	bne.n	ab46 <__aeabi_fcmpun+0x26>
    ab40:	f04f 0000 	mov.w	r0, #0
    ab44:	4770      	bx	lr
    ab46:	f04f 0001 	mov.w	r0, #1
    ab4a:	4770      	bx	lr

0000ab4c <__aeabi_f2iz>:
    ab4c:	ea4f 0240 	mov.w	r2, r0, lsl #1
    ab50:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
    ab54:	d30f      	bcc.n	ab76 <__aeabi_f2iz+0x2a>
    ab56:	f04f 039e 	mov.w	r3, #158	; 0x9e
    ab5a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
    ab5e:	d90d      	bls.n	ab7c <__aeabi_f2iz+0x30>
    ab60:	ea4f 2300 	mov.w	r3, r0, lsl #8
    ab64:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    ab68:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
    ab6c:	fa23 f002 	lsr.w	r0, r3, r2
    ab70:	bf18      	it	ne
    ab72:	4240      	negne	r0, r0
    ab74:	4770      	bx	lr
    ab76:	f04f 0000 	mov.w	r0, #0
    ab7a:	4770      	bx	lr
    ab7c:	f112 0f61 	cmn.w	r2, #97	; 0x61
    ab80:	d101      	bne.n	ab86 <__aeabi_f2iz+0x3a>
    ab82:	0242      	lsls	r2, r0, #9
    ab84:	d105      	bne.n	ab92 <__aeabi_f2iz+0x46>
    ab86:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
    ab8a:	bf08      	it	eq
    ab8c:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    ab90:	4770      	bx	lr
    ab92:	f04f 0000 	mov.w	r0, #0
    ab96:	4770      	bx	lr

0000ab98 <selfrel_offset31>:
    ab98:	6803      	ldr	r3, [r0, #0]
    ab9a:	005a      	lsls	r2, r3, #1
    ab9c:	bf4c      	ite	mi
    ab9e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
    aba2:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
    aba6:	4418      	add	r0, r3
    aba8:	4770      	bx	lr
    abaa:	bf00      	nop

0000abac <search_EIT_table>:
    abac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    abb0:	b339      	cbz	r1, ac02 <search_EIT_table+0x56>
    abb2:	1e4f      	subs	r7, r1, #1
    abb4:	4604      	mov	r4, r0
    abb6:	4615      	mov	r5, r2
    abb8:	463e      	mov	r6, r7
    abba:	f04f 0800 	mov.w	r8, #0
    abbe:	eb08 0106 	add.w	r1, r8, r6
    abc2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
    abc6:	1049      	asrs	r1, r1, #1
    abc8:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
    abcc:	4648      	mov	r0, r9
    abce:	f7ff ffe3 	bl	ab98 <selfrel_offset31>
    abd2:	4603      	mov	r3, r0
    abd4:	00c8      	lsls	r0, r1, #3
    abd6:	3008      	adds	r0, #8
    abd8:	428f      	cmp	r7, r1
    abda:	4420      	add	r0, r4
    abdc:	d00b      	beq.n	abf6 <search_EIT_table+0x4a>
    abde:	42ab      	cmp	r3, r5
    abe0:	d80b      	bhi.n	abfa <search_EIT_table+0x4e>
    abe2:	f7ff ffd9 	bl	ab98 <selfrel_offset31>
    abe6:	3801      	subs	r0, #1
    abe8:	42a8      	cmp	r0, r5
    abea:	f101 0801 	add.w	r8, r1, #1
    abee:	d3e6      	bcc.n	abbe <search_EIT_table+0x12>
    abf0:	4648      	mov	r0, r9
    abf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    abf6:	42ab      	cmp	r3, r5
    abf8:	d9fa      	bls.n	abf0 <search_EIT_table+0x44>
    abfa:	4588      	cmp	r8, r1
    abfc:	d001      	beq.n	ac02 <search_EIT_table+0x56>
    abfe:	1e4e      	subs	r6, r1, #1
    ac00:	e7dd      	b.n	abbe <search_EIT_table+0x12>
    ac02:	f04f 0900 	mov.w	r9, #0
    ac06:	4648      	mov	r0, r9
    ac08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0000ac0c <__gnu_unwind_get_pr_addr>:
    ac0c:	2801      	cmp	r0, #1
    ac0e:	d007      	beq.n	ac20 <__gnu_unwind_get_pr_addr+0x14>
    ac10:	2802      	cmp	r0, #2
    ac12:	d007      	beq.n	ac24 <__gnu_unwind_get_pr_addr+0x18>
    ac14:	4b04      	ldr	r3, [pc, #16]	; (ac28 <__gnu_unwind_get_pr_addr+0x1c>)
    ac16:	2800      	cmp	r0, #0
    ac18:	bf0c      	ite	eq
    ac1a:	4618      	moveq	r0, r3
    ac1c:	2000      	movne	r0, #0
    ac1e:	4770      	bx	lr
    ac20:	4802      	ldr	r0, [pc, #8]	; (ac2c <__gnu_unwind_get_pr_addr+0x20>)
    ac22:	4770      	bx	lr
    ac24:	4802      	ldr	r0, [pc, #8]	; (ac30 <__gnu_unwind_get_pr_addr+0x24>)
    ac26:	4770      	bx	lr
    ac28:	0000b2fd 	.word	0x0000b2fd
    ac2c:	0000b301 	.word	0x0000b301
    ac30:	0000b305 	.word	0x0000b305

0000ac34 <get_eit_entry>:
    ac34:	b530      	push	{r4, r5, lr}
    ac36:	4b24      	ldr	r3, [pc, #144]	; (acc8 <get_eit_entry+0x94>)
    ac38:	4604      	mov	r4, r0
    ac3a:	b083      	sub	sp, #12
    ac3c:	1e8d      	subs	r5, r1, #2
    ac3e:	b33b      	cbz	r3, ac90 <get_eit_entry+0x5c>
    ac40:	4628      	mov	r0, r5
    ac42:	a901      	add	r1, sp, #4
    ac44:	f3af 8000 	nop.w
    ac48:	b1e8      	cbz	r0, ac86 <get_eit_entry+0x52>
    ac4a:	9901      	ldr	r1, [sp, #4]
    ac4c:	462a      	mov	r2, r5
    ac4e:	f7ff ffad 	bl	abac <search_EIT_table>
    ac52:	4601      	mov	r1, r0
    ac54:	b1b8      	cbz	r0, ac86 <get_eit_entry+0x52>
    ac56:	f7ff ff9f 	bl	ab98 <selfrel_offset31>
    ac5a:	684b      	ldr	r3, [r1, #4]
    ac5c:	64a0      	str	r0, [r4, #72]	; 0x48
    ac5e:	2b01      	cmp	r3, #1
    ac60:	d02e      	beq.n	acc0 <get_eit_entry+0x8c>
    ac62:	2b00      	cmp	r3, #0
    ac64:	db27      	blt.n	acb6 <get_eit_entry+0x82>
    ac66:	1d08      	adds	r0, r1, #4
    ac68:	f7ff ff96 	bl	ab98 <selfrel_offset31>
    ac6c:	2300      	movs	r3, #0
    ac6e:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
    ac72:	6803      	ldr	r3, [r0, #0]
    ac74:	2b00      	cmp	r3, #0
    ac76:	db12      	blt.n	ac9e <get_eit_entry+0x6a>
    ac78:	f7ff ff8e 	bl	ab98 <selfrel_offset31>
    ac7c:	4603      	mov	r3, r0
    ac7e:	2000      	movs	r0, #0
    ac80:	6123      	str	r3, [r4, #16]
    ac82:	b003      	add	sp, #12
    ac84:	bd30      	pop	{r4, r5, pc}
    ac86:	2300      	movs	r3, #0
    ac88:	2009      	movs	r0, #9
    ac8a:	6123      	str	r3, [r4, #16]
    ac8c:	b003      	add	sp, #12
    ac8e:	bd30      	pop	{r4, r5, pc}
    ac90:	4b0e      	ldr	r3, [pc, #56]	; (accc <get_eit_entry+0x98>)
    ac92:	490f      	ldr	r1, [pc, #60]	; (acd0 <get_eit_entry+0x9c>)
    ac94:	4618      	mov	r0, r3
    ac96:	1ac9      	subs	r1, r1, r3
    ac98:	10c9      	asrs	r1, r1, #3
    ac9a:	9101      	str	r1, [sp, #4]
    ac9c:	e7d6      	b.n	ac4c <get_eit_entry+0x18>
    ac9e:	f3c3 6003 	ubfx	r0, r3, #24, #4
    aca2:	f7ff ffb3 	bl	ac0c <__gnu_unwind_get_pr_addr>
    aca6:	2800      	cmp	r0, #0
    aca8:	4603      	mov	r3, r0
    acaa:	bf14      	ite	ne
    acac:	2000      	movne	r0, #0
    acae:	2009      	moveq	r0, #9
    acb0:	6123      	str	r3, [r4, #16]
    acb2:	b003      	add	sp, #12
    acb4:	bd30      	pop	{r4, r5, pc}
    acb6:	2301      	movs	r3, #1
    acb8:	1d08      	adds	r0, r1, #4
    acba:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
    acbe:	e7d8      	b.n	ac72 <get_eit_entry+0x3e>
    acc0:	2300      	movs	r3, #0
    acc2:	2005      	movs	r0, #5
    acc4:	6123      	str	r3, [r4, #16]
    acc6:	e7dc      	b.n	ac82 <get_eit_entry+0x4e>
    acc8:	00000000 	.word	0x00000000
    accc:	0001a614 	.word	0x0001a614
    acd0:	0001a924 	.word	0x0001a924

0000acd4 <restore_non_core_regs>:
    acd4:	6803      	ldr	r3, [r0, #0]
    acd6:	b510      	push	{r4, lr}
    acd8:	07da      	lsls	r2, r3, #31
    acda:	4604      	mov	r4, r0
    acdc:	d406      	bmi.n	acec <restore_non_core_regs+0x18>
    acde:	079b      	lsls	r3, r3, #30
    ace0:	f100 0048 	add.w	r0, r0, #72	; 0x48
    ace4:	d509      	bpl.n	acfa <restore_non_core_regs+0x26>
    ace6:	f000 fc5d 	bl	b5a4 <__gnu_Unwind_Restore_VFP_D>
    acea:	6823      	ldr	r3, [r4, #0]
    acec:	0759      	lsls	r1, r3, #29
    acee:	d509      	bpl.n	ad04 <restore_non_core_regs+0x30>
    acf0:	071a      	lsls	r2, r3, #28
    acf2:	d50e      	bpl.n	ad12 <restore_non_core_regs+0x3e>
    acf4:	06db      	lsls	r3, r3, #27
    acf6:	d513      	bpl.n	ad20 <restore_non_core_regs+0x4c>
    acf8:	bd10      	pop	{r4, pc}
    acfa:	f000 fc4b 	bl	b594 <__gnu_Unwind_Restore_VFP>
    acfe:	6823      	ldr	r3, [r4, #0]
    ad00:	0759      	lsls	r1, r3, #29
    ad02:	d4f5      	bmi.n	acf0 <restore_non_core_regs+0x1c>
    ad04:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
    ad08:	f000 fc54 	bl	b5b4 <__gnu_Unwind_Restore_VFP_D_16_to_31>
    ad0c:	6823      	ldr	r3, [r4, #0]
    ad0e:	071a      	lsls	r2, r3, #28
    ad10:	d4f0      	bmi.n	acf4 <restore_non_core_regs+0x20>
    ad12:	f504 70a8 	add.w	r0, r4, #336	; 0x150
    ad16:	f000 fc55 	bl	b5c4 <__gnu_Unwind_Restore_WMMXD>
    ad1a:	6823      	ldr	r3, [r4, #0]
    ad1c:	06db      	lsls	r3, r3, #27
    ad1e:	d4eb      	bmi.n	acf8 <restore_non_core_regs+0x24>
    ad20:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
    ad24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ad28:	f000 bc90 	b.w	b64c <__gnu_Unwind_Restore_WMMXC>

0000ad2c <__gnu_unwind_24bit.constprop.0>:
    ad2c:	2009      	movs	r0, #9
    ad2e:	4770      	bx	lr

0000ad30 <_Unwind_decode_typeinfo_ptr.constprop.0>:
    ad30:	4603      	mov	r3, r0
    ad32:	6800      	ldr	r0, [r0, #0]
    ad34:	b100      	cbz	r0, ad38 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
    ad36:	4418      	add	r0, r3
    ad38:	4770      	bx	lr
    ad3a:	bf00      	nop

0000ad3c <_Unwind_DebugHook>:
    ad3c:	4770      	bx	lr
    ad3e:	bf00      	nop

0000ad40 <unwind_phase2>:
    ad40:	b570      	push	{r4, r5, r6, lr}
    ad42:	4604      	mov	r4, r0
    ad44:	460e      	mov	r6, r1
    ad46:	4620      	mov	r0, r4
    ad48:	6c31      	ldr	r1, [r6, #64]	; 0x40
    ad4a:	f7ff ff73 	bl	ac34 <get_eit_entry>
    ad4e:	4605      	mov	r5, r0
    ad50:	b998      	cbnz	r0, ad7a <unwind_phase2+0x3a>
    ad52:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
    ad56:	4632      	mov	r2, r6
    ad58:	4621      	mov	r1, r4
    ad5a:	2001      	movs	r0, #1
    ad5c:	6923      	ldr	r3, [r4, #16]
    ad5e:	f8c4 c014 	str.w	ip, [r4, #20]
    ad62:	4798      	blx	r3
    ad64:	2808      	cmp	r0, #8
    ad66:	d0ee      	beq.n	ad46 <unwind_phase2+0x6>
    ad68:	2807      	cmp	r0, #7
    ad6a:	d106      	bne.n	ad7a <unwind_phase2+0x3a>
    ad6c:	4628      	mov	r0, r5
    ad6e:	6c31      	ldr	r1, [r6, #64]	; 0x40
    ad70:	f7ff ffe4 	bl	ad3c <_Unwind_DebugHook>
    ad74:	1d30      	adds	r0, r6, #4
    ad76:	f000 fc01 	bl	b57c <__restore_core_regs>
    ad7a:	f000 fea1 	bl	bac0 <abort>
    ad7e:	bf00      	nop

0000ad80 <unwind_phase2_forced>:
    ad80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ad84:	f04f 0a00 	mov.w	sl, #0
    ad88:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
    ad8c:	f10d 0e0c 	add.w	lr, sp, #12
    ad90:	f101 0c04 	add.w	ip, r1, #4
    ad94:	68c7      	ldr	r7, [r0, #12]
    ad96:	f8d0 8018 	ldr.w	r8, [r0, #24]
    ad9a:	4606      	mov	r6, r0
    ad9c:	4614      	mov	r4, r2
    ad9e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    ada2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    ada6:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    adaa:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    adae:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    adb2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    adb6:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    adba:	ad02      	add	r5, sp, #8
    adbc:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
    adc0:	f8c5 a000 	str.w	sl, [r5]
    adc4:	e021      	b.n	ae0a <unwind_phase2_forced+0x8a>
    adc6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
    adc8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
    adcc:	4629      	mov	r1, r5
    adce:	6173      	str	r3, [r6, #20]
    add0:	a87a      	add	r0, sp, #488	; 0x1e8
    add2:	f001 fce9 	bl	c7a8 <memcpy>
    add6:	4631      	mov	r1, r6
    add8:	4650      	mov	r0, sl
    adda:	6933      	ldr	r3, [r6, #16]
    addc:	aa7a      	add	r2, sp, #488	; 0x1e8
    adde:	4798      	blx	r3
    ade0:	9c88      	ldr	r4, [sp, #544]	; 0x220
    ade2:	4682      	mov	sl, r0
    ade4:	646c      	str	r4, [r5, #68]	; 0x44
    ade6:	4633      	mov	r3, r6
    ade8:	4632      	mov	r2, r6
    adea:	4649      	mov	r1, r9
    adec:	2001      	movs	r0, #1
    adee:	e9cd 5800 	strd	r5, r8, [sp]
    adf2:	47b8      	blx	r7
    adf4:	4604      	mov	r4, r0
    adf6:	b9f0      	cbnz	r0, ae36 <unwind_phase2_forced+0xb6>
    adf8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
    adfc:	4628      	mov	r0, r5
    adfe:	a97a      	add	r1, sp, #488	; 0x1e8
    ae00:	f001 fcd2 	bl	c7a8 <memcpy>
    ae04:	f1ba 0f08 	cmp.w	sl, #8
    ae08:	d11b      	bne.n	ae42 <unwind_phase2_forced+0xc2>
    ae0a:	4630      	mov	r0, r6
    ae0c:	6c29      	ldr	r1, [r5, #64]	; 0x40
    ae0e:	f7ff ff11 	bl	ac34 <get_eit_entry>
    ae12:	f104 0909 	add.w	r9, r4, #9
    ae16:	fa5f fa89 	uxtb.w	sl, r9
    ae1a:	4604      	mov	r4, r0
    ae1c:	2800      	cmp	r0, #0
    ae1e:	d0d2      	beq.n	adc6 <unwind_phase2_forced+0x46>
    ae20:	6ba9      	ldr	r1, [r5, #56]	; 0x38
    ae22:	4633      	mov	r3, r6
    ae24:	6469      	str	r1, [r5, #68]	; 0x44
    ae26:	4632      	mov	r2, r6
    ae28:	2001      	movs	r0, #1
    ae2a:	e9cd 5800 	strd	r5, r8, [sp]
    ae2e:	f04a 0110 	orr.w	r1, sl, #16
    ae32:	47b8      	blx	r7
    ae34:	b100      	cbz	r0, ae38 <unwind_phase2_forced+0xb8>
    ae36:	2409      	movs	r4, #9
    ae38:	4620      	mov	r0, r4
    ae3a:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
    ae3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    ae42:	f1ba 0f07 	cmp.w	sl, #7
    ae46:	d1f6      	bne.n	ae36 <unwind_phase2_forced+0xb6>
    ae48:	4620      	mov	r0, r4
    ae4a:	6c29      	ldr	r1, [r5, #64]	; 0x40
    ae4c:	f7ff ff76 	bl	ad3c <_Unwind_DebugHook>
    ae50:	a803      	add	r0, sp, #12
    ae52:	f000 fb93 	bl	b57c <__restore_core_regs>
    ae56:	bf00      	nop

0000ae58 <_Unwind_GetCFA>:
    ae58:	6c40      	ldr	r0, [r0, #68]	; 0x44
    ae5a:	4770      	bx	lr

0000ae5c <__gnu_Unwind_RaiseException>:
    ae5c:	b5f0      	push	{r4, r5, r6, r7, lr}
    ae5e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    ae62:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
    ae64:	b0f9      	sub	sp, #484	; 0x1e4
    ae66:	640b      	str	r3, [r1, #64]	; 0x40
    ae68:	ac01      	add	r4, sp, #4
    ae6a:	f101 0c04 	add.w	ip, r1, #4
    ae6e:	460e      	mov	r6, r1
    ae70:	4605      	mov	r5, r0
    ae72:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    ae76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    ae78:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    ae7c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    ae7e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    ae82:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    ae84:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    ae88:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    ae8c:	9700      	str	r7, [sp, #0]
    ae8e:	e006      	b.n	ae9e <__gnu_Unwind_RaiseException+0x42>
    ae90:	466a      	mov	r2, sp
    ae92:	4629      	mov	r1, r5
    ae94:	692b      	ldr	r3, [r5, #16]
    ae96:	4798      	blx	r3
    ae98:	2808      	cmp	r0, #8
    ae9a:	4604      	mov	r4, r0
    ae9c:	d108      	bne.n	aeb0 <__gnu_Unwind_RaiseException+0x54>
    ae9e:	4628      	mov	r0, r5
    aea0:	9910      	ldr	r1, [sp, #64]	; 0x40
    aea2:	f7ff fec7 	bl	ac34 <get_eit_entry>
    aea6:	2800      	cmp	r0, #0
    aea8:	d0f2      	beq.n	ae90 <__gnu_Unwind_RaiseException+0x34>
    aeaa:	2009      	movs	r0, #9
    aeac:	b079      	add	sp, #484	; 0x1e4
    aeae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    aeb0:	4668      	mov	r0, sp
    aeb2:	f7ff ff0f 	bl	acd4 <restore_non_core_regs>
    aeb6:	2c06      	cmp	r4, #6
    aeb8:	d1f7      	bne.n	aeaa <__gnu_Unwind_RaiseException+0x4e>
    aeba:	4631      	mov	r1, r6
    aebc:	4628      	mov	r0, r5
    aebe:	f7ff ff3f 	bl	ad40 <unwind_phase2>
    aec2:	bf00      	nop

0000aec4 <__gnu_Unwind_ForcedUnwind>:
    aec4:	b410      	push	{r4}
    aec6:	4614      	mov	r4, r2
    aec8:	6184      	str	r4, [r0, #24]
    aeca:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
    aecc:	60c1      	str	r1, [r0, #12]
    aece:	2200      	movs	r2, #0
    aed0:	641c      	str	r4, [r3, #64]	; 0x40
    aed2:	4619      	mov	r1, r3
    aed4:	bc10      	pop	{r4}
    aed6:	e753      	b.n	ad80 <unwind_phase2_forced>

0000aed8 <__gnu_Unwind_Resume>:
    aed8:	b570      	push	{r4, r5, r6, lr}
    aeda:	6943      	ldr	r3, [r0, #20]
    aedc:	68c6      	ldr	r6, [r0, #12]
    aede:	640b      	str	r3, [r1, #64]	; 0x40
    aee0:	b9ae      	cbnz	r6, af0e <__gnu_Unwind_Resume+0x36>
    aee2:	460a      	mov	r2, r1
    aee4:	6903      	ldr	r3, [r0, #16]
    aee6:	4604      	mov	r4, r0
    aee8:	460d      	mov	r5, r1
    aeea:	4601      	mov	r1, r0
    aeec:	2002      	movs	r0, #2
    aeee:	4798      	blx	r3
    aef0:	2807      	cmp	r0, #7
    aef2:	d005      	beq.n	af00 <__gnu_Unwind_Resume+0x28>
    aef4:	2808      	cmp	r0, #8
    aef6:	d10f      	bne.n	af18 <__gnu_Unwind_Resume+0x40>
    aef8:	4629      	mov	r1, r5
    aefa:	4620      	mov	r0, r4
    aefc:	f7ff ff20 	bl	ad40 <unwind_phase2>
    af00:	4630      	mov	r0, r6
    af02:	6c29      	ldr	r1, [r5, #64]	; 0x40
    af04:	f7ff ff1a 	bl	ad3c <_Unwind_DebugHook>
    af08:	1d28      	adds	r0, r5, #4
    af0a:	f000 fb37 	bl	b57c <__restore_core_regs>
    af0e:	2201      	movs	r2, #1
    af10:	f7ff ff36 	bl	ad80 <unwind_phase2_forced>
    af14:	f000 fdd4 	bl	bac0 <abort>
    af18:	f000 fdd2 	bl	bac0 <abort>

0000af1c <__gnu_Unwind_Resume_or_Rethrow>:
    af1c:	68c2      	ldr	r2, [r0, #12]
    af1e:	b12a      	cbz	r2, af2c <__gnu_Unwind_Resume_or_Rethrow+0x10>
    af20:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
    af24:	2200      	movs	r2, #0
    af26:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
    af2a:	e729      	b.n	ad80 <unwind_phase2_forced>
    af2c:	e796      	b.n	ae5c <__gnu_Unwind_RaiseException>
    af2e:	bf00      	nop

0000af30 <_Unwind_Complete>:
    af30:	4770      	bx	lr
    af32:	bf00      	nop

0000af34 <_Unwind_DeleteException>:
    af34:	6883      	ldr	r3, [r0, #8]
    af36:	4601      	mov	r1, r0
    af38:	b10b      	cbz	r3, af3e <_Unwind_DeleteException+0xa>
    af3a:	2001      	movs	r0, #1
    af3c:	4718      	bx	r3
    af3e:	4770      	bx	lr

0000af40 <_Unwind_VRS_Get>:
    af40:	2901      	cmp	r1, #1
    af42:	d012      	beq.n	af6a <_Unwind_VRS_Get+0x2a>
    af44:	d809      	bhi.n	af5a <_Unwind_VRS_Get+0x1a>
    af46:	b973      	cbnz	r3, af66 <_Unwind_VRS_Get+0x26>
    af48:	2a0f      	cmp	r2, #15
    af4a:	d80c      	bhi.n	af66 <_Unwind_VRS_Get+0x26>
    af4c:	eb00 0082 	add.w	r0, r0, r2, lsl #2
    af50:	6842      	ldr	r2, [r0, #4]
    af52:	4618      	mov	r0, r3
    af54:	9b00      	ldr	r3, [sp, #0]
    af56:	601a      	str	r2, [r3, #0]
    af58:	4770      	bx	lr
    af5a:	3903      	subs	r1, #3
    af5c:	2901      	cmp	r1, #1
    af5e:	bf94      	ite	ls
    af60:	2001      	movls	r0, #1
    af62:	2002      	movhi	r0, #2
    af64:	4770      	bx	lr
    af66:	2002      	movs	r0, #2
    af68:	4770      	bx	lr
    af6a:	4608      	mov	r0, r1
    af6c:	4770      	bx	lr
    af6e:	bf00      	nop

0000af70 <_Unwind_GetGR>:
    af70:	2300      	movs	r3, #0
    af72:	b500      	push	{lr}
    af74:	b085      	sub	sp, #20
    af76:	460a      	mov	r2, r1
    af78:	a903      	add	r1, sp, #12
    af7a:	9100      	str	r1, [sp, #0]
    af7c:	4619      	mov	r1, r3
    af7e:	f7ff ffdf 	bl	af40 <_Unwind_VRS_Get>
    af82:	9803      	ldr	r0, [sp, #12]
    af84:	b005      	add	sp, #20
    af86:	f85d fb04 	ldr.w	pc, [sp], #4
    af8a:	bf00      	nop

0000af8c <_Unwind_VRS_Set>:
    af8c:	2901      	cmp	r1, #1
    af8e:	d012      	beq.n	afb6 <_Unwind_VRS_Set+0x2a>
    af90:	d809      	bhi.n	afa6 <_Unwind_VRS_Set+0x1a>
    af92:	b973      	cbnz	r3, afb2 <_Unwind_VRS_Set+0x26>
    af94:	2a0f      	cmp	r2, #15
    af96:	d80c      	bhi.n	afb2 <_Unwind_VRS_Set+0x26>
    af98:	9900      	ldr	r1, [sp, #0]
    af9a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
    af9e:	6809      	ldr	r1, [r1, #0]
    afa0:	4618      	mov	r0, r3
    afa2:	6051      	str	r1, [r2, #4]
    afa4:	4770      	bx	lr
    afa6:	3903      	subs	r1, #3
    afa8:	2901      	cmp	r1, #1
    afaa:	bf94      	ite	ls
    afac:	2001      	movls	r0, #1
    afae:	2002      	movhi	r0, #2
    afb0:	4770      	bx	lr
    afb2:	2002      	movs	r0, #2
    afb4:	4770      	bx	lr
    afb6:	4608      	mov	r0, r1
    afb8:	4770      	bx	lr
    afba:	bf00      	nop

0000afbc <_Unwind_SetGR>:
    afbc:	2300      	movs	r3, #0
    afbe:	b510      	push	{r4, lr}
    afc0:	b084      	sub	sp, #16
    afc2:	ac03      	add	r4, sp, #12
    afc4:	9203      	str	r2, [sp, #12]
    afc6:	9400      	str	r4, [sp, #0]
    afc8:	460a      	mov	r2, r1
    afca:	4619      	mov	r1, r3
    afcc:	f7ff ffde 	bl	af8c <_Unwind_VRS_Set>
    afd0:	b004      	add	sp, #16
    afd2:	bd10      	pop	{r4, pc}

0000afd4 <__gnu_Unwind_Backtrace>:
    afd4:	b570      	push	{r4, r5, r6, lr}
    afd6:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    afda:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
    afdc:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
    afe0:	6413      	str	r3, [r2, #64]	; 0x40
    afe2:	f10d 0e5c 	add.w	lr, sp, #92	; 0x5c
    afe6:	f102 0c04 	add.w	ip, r2, #4
    afea:	4605      	mov	r5, r0
    afec:	460c      	mov	r4, r1
    afee:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    aff2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    aff6:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    affa:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    affe:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    b002:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    b006:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    b00a:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
    b00e:	9616      	str	r6, [sp, #88]	; 0x58
    b010:	e012      	b.n	b038 <__gnu_Unwind_Backtrace+0x64>
    b012:	210c      	movs	r1, #12
    b014:	a816      	add	r0, sp, #88	; 0x58
    b016:	466a      	mov	r2, sp
    b018:	f7ff ffd0 	bl	afbc <_Unwind_SetGR>
    b01c:	4621      	mov	r1, r4
    b01e:	a816      	add	r0, sp, #88	; 0x58
    b020:	47a8      	blx	r5
    b022:	b978      	cbnz	r0, b044 <__gnu_Unwind_Backtrace+0x70>
    b024:	4669      	mov	r1, sp
    b026:	2008      	movs	r0, #8
    b028:	9b04      	ldr	r3, [sp, #16]
    b02a:	aa16      	add	r2, sp, #88	; 0x58
    b02c:	4798      	blx	r3
    b02e:	2805      	cmp	r0, #5
    b030:	4606      	mov	r6, r0
    b032:	d008      	beq.n	b046 <__gnu_Unwind_Backtrace+0x72>
    b034:	2809      	cmp	r0, #9
    b036:	d005      	beq.n	b044 <__gnu_Unwind_Backtrace+0x70>
    b038:	4668      	mov	r0, sp
    b03a:	9926      	ldr	r1, [sp, #152]	; 0x98
    b03c:	f7ff fdfa 	bl	ac34 <get_eit_entry>
    b040:	2800      	cmp	r0, #0
    b042:	d0e6      	beq.n	b012 <__gnu_Unwind_Backtrace+0x3e>
    b044:	2609      	movs	r6, #9
    b046:	a816      	add	r0, sp, #88	; 0x58
    b048:	f7ff fe44 	bl	acd4 <restore_non_core_regs>
    b04c:	4630      	mov	r0, r6
    b04e:	f50d 7d0e 	add.w	sp, sp, #568	; 0x238
    b052:	bd70      	pop	{r4, r5, r6, pc}

0000b054 <__gnu_unwind_pr_common>:
    b054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b058:	461e      	mov	r6, r3
    b05a:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
    b05c:	b089      	sub	sp, #36	; 0x24
    b05e:	f854 3b04 	ldr.w	r3, [r4], #4
    b062:	460d      	mov	r5, r1
    b064:	4617      	mov	r7, r2
    b066:	f000 0803 	and.w	r8, r0, #3
    b06a:	9406      	str	r4, [sp, #24]
    b06c:	2e00      	cmp	r6, #0
    b06e:	d079      	beq.n	b164 <__gnu_unwind_pr_common+0x110>
    b070:	2202      	movs	r2, #2
    b072:	f88d 201c 	strb.w	r2, [sp, #28]
    b076:	0c1a      	lsrs	r2, r3, #16
    b078:	f88d 201d 	strb.w	r2, [sp, #29]
    b07c:	041b      	lsls	r3, r3, #16
    b07e:	b2d2      	uxtb	r2, r2
    b080:	9305      	str	r3, [sp, #20]
    b082:	eb04 0482 	add.w	r4, r4, r2, lsl #2
    b086:	6d2b      	ldr	r3, [r5, #80]	; 0x50
    b088:	f1b8 0f02 	cmp.w	r8, #2
    b08c:	bf08      	it	eq
    b08e:	6bac      	ldreq	r4, [r5, #56]	; 0x38
    b090:	f013 0301 	ands.w	r3, r3, #1
    b094:	d00c      	beq.n	b0b0 <__gnu_unwind_pr_common+0x5c>
    b096:	4638      	mov	r0, r7
    b098:	a905      	add	r1, sp, #20
    b09a:	f000 fb71 	bl	b780 <__gnu_unwind_execute>
    b09e:	b918      	cbnz	r0, b0a8 <__gnu_unwind_pr_common+0x54>
    b0a0:	2008      	movs	r0, #8
    b0a2:	b009      	add	sp, #36	; 0x24
    b0a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b0a8:	2009      	movs	r0, #9
    b0aa:	b009      	add	sp, #36	; 0x24
    b0ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b0b0:	f8d4 a000 	ldr.w	sl, [r4]
    b0b4:	f1ba 0f00 	cmp.w	sl, #0
    b0b8:	d0ed      	beq.n	b096 <__gnu_unwind_pr_common+0x42>
    b0ba:	9301      	str	r3, [sp, #4]
    b0bc:	f000 0308 	and.w	r3, r0, #8
    b0c0:	9302      	str	r3, [sp, #8]
    b0c2:	2e02      	cmp	r6, #2
    b0c4:	d04a      	beq.n	b15c <__gnu_unwind_pr_common+0x108>
    b0c6:	f8b4 a000 	ldrh.w	sl, [r4]
    b0ca:	f8b4 9002 	ldrh.w	r9, [r4, #2]
    b0ce:	3404      	adds	r4, #4
    b0d0:	6caa      	ldr	r2, [r5, #72]	; 0x48
    b0d2:	210f      	movs	r1, #15
    b0d4:	4638      	mov	r0, r7
    b0d6:	f029 0b01 	bic.w	fp, r9, #1
    b0da:	4493      	add	fp, r2
    b0dc:	f7ff ff48 	bl	af70 <_Unwind_GetGR>
    b0e0:	4583      	cmp	fp, r0
    b0e2:	d839      	bhi.n	b158 <__gnu_unwind_pr_common+0x104>
    b0e4:	f02a 0201 	bic.w	r2, sl, #1
    b0e8:	445a      	add	r2, fp
    b0ea:	4282      	cmp	r2, r0
    b0ec:	bf94      	ite	ls
    b0ee:	2000      	movls	r0, #0
    b0f0:	2001      	movhi	r0, #1
    b0f2:	ea4f 0349 	mov.w	r3, r9, lsl #1
    b0f6:	f003 0302 	and.w	r3, r3, #2
    b0fa:	f00a 0a01 	and.w	sl, sl, #1
    b0fe:	ea43 030a 	orr.w	r3, r3, sl
    b102:	2b01      	cmp	r3, #1
    b104:	d049      	beq.n	b19a <__gnu_unwind_pr_common+0x146>
    b106:	2b02      	cmp	r3, #2
    b108:	d032      	beq.n	b170 <__gnu_unwind_pr_common+0x11c>
    b10a:	2b00      	cmp	r3, #0
    b10c:	d1cc      	bne.n	b0a8 <__gnu_unwind_pr_common+0x54>
    b10e:	f1b8 0f00 	cmp.w	r8, #0
    b112:	d002      	beq.n	b11a <__gnu_unwind_pr_common+0xc6>
    b114:	2800      	cmp	r0, #0
    b116:	f040 80ce 	bne.w	b2b6 <__gnu_unwind_pr_common+0x262>
    b11a:	3404      	adds	r4, #4
    b11c:	f8d4 a000 	ldr.w	sl, [r4]
    b120:	f1ba 0f00 	cmp.w	sl, #0
    b124:	d1cd      	bne.n	b0c2 <__gnu_unwind_pr_common+0x6e>
    b126:	4638      	mov	r0, r7
    b128:	a905      	add	r1, sp, #20
    b12a:	f000 fb29 	bl	b780 <__gnu_unwind_execute>
    b12e:	2800      	cmp	r0, #0
    b130:	d1ba      	bne.n	b0a8 <__gnu_unwind_pr_common+0x54>
    b132:	9b01      	ldr	r3, [sp, #4]
    b134:	2b00      	cmp	r3, #0
    b136:	d0b3      	beq.n	b0a0 <__gnu_unwind_pr_common+0x4c>
    b138:	210f      	movs	r1, #15
    b13a:	4638      	mov	r0, r7
    b13c:	f7ff ff18 	bl	af70 <_Unwind_GetGR>
    b140:	210e      	movs	r1, #14
    b142:	4602      	mov	r2, r0
    b144:	4638      	mov	r0, r7
    b146:	f7ff ff39 	bl	afbc <_Unwind_SetGR>
    b14a:	4638      	mov	r0, r7
    b14c:	210f      	movs	r1, #15
    b14e:	4a6a      	ldr	r2, [pc, #424]	; (b2f8 <__gnu_unwind_pr_common+0x2a4>)
    b150:	f7ff ff34 	bl	afbc <_Unwind_SetGR>
    b154:	2007      	movs	r0, #7
    b156:	e7a8      	b.n	b0aa <__gnu_unwind_pr_common+0x56>
    b158:	2000      	movs	r0, #0
    b15a:	e7ca      	b.n	b0f2 <__gnu_unwind_pr_common+0x9e>
    b15c:	f8d4 9004 	ldr.w	r9, [r4, #4]
    b160:	3408      	adds	r4, #8
    b162:	e7b5      	b.n	b0d0 <__gnu_unwind_pr_common+0x7c>
    b164:	021b      	lsls	r3, r3, #8
    b166:	9305      	str	r3, [sp, #20]
    b168:	2303      	movs	r3, #3
    b16a:	f8ad 301c 	strh.w	r3, [sp, #28]
    b16e:	e78a      	b.n	b086 <__gnu_unwind_pr_common+0x32>
    b170:	6823      	ldr	r3, [r4, #0]
    b172:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
    b176:	f1b8 0f00 	cmp.w	r8, #0
    b17a:	d145      	bne.n	b208 <__gnu_unwind_pr_common+0x1b4>
    b17c:	b128      	cbz	r0, b18a <__gnu_unwind_pr_common+0x136>
    b17e:	9a02      	ldr	r2, [sp, #8]
    b180:	2a00      	cmp	r2, #0
    b182:	d05c      	beq.n	b23e <__gnu_unwind_pr_common+0x1ea>
    b184:	f1bb 0f00 	cmp.w	fp, #0
    b188:	d074      	beq.n	b274 <__gnu_unwind_pr_common+0x220>
    b18a:	2b00      	cmp	r3, #0
    b18c:	da00      	bge.n	b190 <__gnu_unwind_pr_common+0x13c>
    b18e:	3404      	adds	r4, #4
    b190:	f10b 0b01 	add.w	fp, fp, #1
    b194:	eb04 048b 	add.w	r4, r4, fp, lsl #2
    b198:	e7c0      	b.n	b11c <__gnu_unwind_pr_common+0xc8>
    b19a:	f1b8 0f00 	cmp.w	r8, #0
    b19e:	d119      	bne.n	b1d4 <__gnu_unwind_pr_common+0x180>
    b1a0:	b1b0      	cbz	r0, b1d0 <__gnu_unwind_pr_common+0x17c>
    b1a2:	6863      	ldr	r3, [r4, #4]
    b1a4:	6822      	ldr	r2, [r4, #0]
    b1a6:	1c99      	adds	r1, r3, #2
    b1a8:	ea4f 72d2 	mov.w	r2, r2, lsr #31
    b1ac:	f43f af7c 	beq.w	b0a8 <__gnu_unwind_pr_common+0x54>
    b1b0:	f105 0158 	add.w	r1, r5, #88	; 0x58
    b1b4:	3301      	adds	r3, #1
    b1b6:	9104      	str	r1, [sp, #16]
    b1b8:	f000 8091 	beq.w	b2de <__gnu_unwind_pr_common+0x28a>
    b1bc:	1d20      	adds	r0, r4, #4
    b1be:	f7ff fdb7 	bl	ad30 <_Unwind_decode_typeinfo_ptr.constprop.0>
    b1c2:	ab04      	add	r3, sp, #16
    b1c4:	4601      	mov	r1, r0
    b1c6:	4628      	mov	r0, r5
    b1c8:	f7fe fb3a 	bl	9840 <__cxa_type_match>
    b1cc:	2800      	cmp	r0, #0
    b1ce:	d15c      	bne.n	b28a <__gnu_unwind_pr_common+0x236>
    b1d0:	3408      	adds	r4, #8
    b1d2:	e7a3      	b.n	b11c <__gnu_unwind_pr_common+0xc8>
    b1d4:	210d      	movs	r1, #13
    b1d6:	4638      	mov	r0, r7
    b1d8:	f8d5 9020 	ldr.w	r9, [r5, #32]
    b1dc:	f7ff fec8 	bl	af70 <_Unwind_GetGR>
    b1e0:	4581      	cmp	r9, r0
    b1e2:	d1f5      	bne.n	b1d0 <__gnu_unwind_pr_common+0x17c>
    b1e4:	6aab      	ldr	r3, [r5, #40]	; 0x28
    b1e6:	429c      	cmp	r4, r3
    b1e8:	d1f2      	bne.n	b1d0 <__gnu_unwind_pr_common+0x17c>
    b1ea:	4620      	mov	r0, r4
    b1ec:	f7ff fcd4 	bl	ab98 <selfrel_offset31>
    b1f0:	210f      	movs	r1, #15
    b1f2:	4602      	mov	r2, r0
    b1f4:	4638      	mov	r0, r7
    b1f6:	f7ff fee1 	bl	afbc <_Unwind_SetGR>
    b1fa:	4638      	mov	r0, r7
    b1fc:	462a      	mov	r2, r5
    b1fe:	2100      	movs	r1, #0
    b200:	f7ff fedc 	bl	afbc <_Unwind_SetGR>
    b204:	2007      	movs	r0, #7
    b206:	e750      	b.n	b0aa <__gnu_unwind_pr_common+0x56>
    b208:	210d      	movs	r1, #13
    b20a:	4638      	mov	r0, r7
    b20c:	f8d5 9020 	ldr.w	r9, [r5, #32]
    b210:	f7ff feae 	bl	af70 <_Unwind_GetGR>
    b214:	4581      	cmp	r9, r0
    b216:	d001      	beq.n	b21c <__gnu_unwind_pr_common+0x1c8>
    b218:	6823      	ldr	r3, [r4, #0]
    b21a:	e7b6      	b.n	b18a <__gnu_unwind_pr_common+0x136>
    b21c:	6aab      	ldr	r3, [r5, #40]	; 0x28
    b21e:	429c      	cmp	r4, r3
    b220:	d1fa      	bne.n	b218 <__gnu_unwind_pr_common+0x1c4>
    b222:	2304      	movs	r3, #4
    b224:	2200      	movs	r2, #0
    b226:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
    b22a:	18e3      	adds	r3, r4, r3
    b22c:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
    b230:	636b      	str	r3, [r5, #52]	; 0x34
    b232:	6823      	ldr	r3, [r4, #0]
    b234:	2b00      	cmp	r3, #0
    b236:	db5a      	blt.n	b2ee <__gnu_unwind_pr_common+0x29a>
    b238:	2301      	movs	r3, #1
    b23a:	9301      	str	r3, [sp, #4]
    b23c:	e7a8      	b.n	b190 <__gnu_unwind_pr_common+0x13c>
    b23e:	f105 0358 	add.w	r3, r5, #88	; 0x58
    b242:	f8cd 800c 	str.w	r8, [sp, #12]
    b246:	4691      	mov	r9, r2
    b248:	46b0      	mov	r8, r6
    b24a:	f104 0a04 	add.w	sl, r4, #4
    b24e:	461e      	mov	r6, r3
    b250:	e00e      	b.n	b270 <__gnu_unwind_pr_common+0x21c>
    b252:	4650      	mov	r0, sl
    b254:	9604      	str	r6, [sp, #16]
    b256:	f7ff fd6b 	bl	ad30 <_Unwind_decode_typeinfo_ptr.constprop.0>
    b25a:	2200      	movs	r2, #0
    b25c:	4601      	mov	r1, r0
    b25e:	ab04      	add	r3, sp, #16
    b260:	4628      	mov	r0, r5
    b262:	f109 0901 	add.w	r9, r9, #1
    b266:	f10a 0a04 	add.w	sl, sl, #4
    b26a:	f7fe fae9 	bl	9840 <__cxa_type_match>
    b26e:	b9e8      	cbnz	r0, b2ac <__gnu_unwind_pr_common+0x258>
    b270:	45d9      	cmp	r9, fp
    b272:	d1ee      	bne.n	b252 <__gnu_unwind_pr_common+0x1fe>
    b274:	210d      	movs	r1, #13
    b276:	4638      	mov	r0, r7
    b278:	f7ff fe7a 	bl	af70 <_Unwind_GetGR>
    b27c:	4603      	mov	r3, r0
    b27e:	9a04      	ldr	r2, [sp, #16]
    b280:	2006      	movs	r0, #6
    b282:	e9c5 2409 	strd	r2, r4, [r5, #36]	; 0x24
    b286:	622b      	str	r3, [r5, #32]
    b288:	e70f      	b.n	b0aa <__gnu_unwind_pr_common+0x56>
    b28a:	4681      	mov	r9, r0
    b28c:	210d      	movs	r1, #13
    b28e:	4638      	mov	r0, r7
    b290:	f7ff fe6e 	bl	af70 <_Unwind_GetGR>
    b294:	f1b9 0f02 	cmp.w	r9, #2
    b298:	6228      	str	r0, [r5, #32]
    b29a:	d125      	bne.n	b2e8 <__gnu_unwind_pr_common+0x294>
    b29c:	462b      	mov	r3, r5
    b29e:	9a04      	ldr	r2, [sp, #16]
    b2a0:	f843 2f2c 	str.w	r2, [r3, #44]!
    b2a4:	626b      	str	r3, [r5, #36]	; 0x24
    b2a6:	2006      	movs	r0, #6
    b2a8:	62ac      	str	r4, [r5, #40]	; 0x28
    b2aa:	e6fe      	b.n	b0aa <__gnu_unwind_pr_common+0x56>
    b2ac:	4646      	mov	r6, r8
    b2ae:	6823      	ldr	r3, [r4, #0]
    b2b0:	f8dd 800c 	ldr.w	r8, [sp, #12]
    b2b4:	e769      	b.n	b18a <__gnu_unwind_pr_common+0x136>
    b2b6:	4620      	mov	r0, r4
    b2b8:	f7ff fc6e 	bl	ab98 <selfrel_offset31>
    b2bc:	4602      	mov	r2, r0
    b2be:	3404      	adds	r4, #4
    b2c0:	63ac      	str	r4, [r5, #56]	; 0x38
    b2c2:	4628      	mov	r0, r5
    b2c4:	4614      	mov	r4, r2
    b2c6:	f7fe fb15 	bl	98f4 <__cxa_begin_cleanup>
    b2ca:	2800      	cmp	r0, #0
    b2cc:	f43f aeec 	beq.w	b0a8 <__gnu_unwind_pr_common+0x54>
    b2d0:	4638      	mov	r0, r7
    b2d2:	4622      	mov	r2, r4
    b2d4:	210f      	movs	r1, #15
    b2d6:	f7ff fe71 	bl	afbc <_Unwind_SetGR>
    b2da:	2007      	movs	r0, #7
    b2dc:	e6e5      	b.n	b0aa <__gnu_unwind_pr_common+0x56>
    b2de:	210d      	movs	r1, #13
    b2e0:	4638      	mov	r0, r7
    b2e2:	f7ff fe45 	bl	af70 <_Unwind_GetGR>
    b2e6:	6228      	str	r0, [r5, #32]
    b2e8:	9b04      	ldr	r3, [sp, #16]
    b2ea:	626b      	str	r3, [r5, #36]	; 0x24
    b2ec:	e7db      	b.n	b2a6 <__gnu_unwind_pr_common+0x252>
    b2ee:	f10b 0001 	add.w	r0, fp, #1
    b2f2:	eb04 0080 	add.w	r0, r4, r0, lsl #2
    b2f6:	e779      	b.n	b1ec <__gnu_unwind_pr_common+0x198>
    b2f8:	00009a25 	.word	0x00009a25

0000b2fc <__aeabi_unwind_cpp_pr0>:
    b2fc:	2300      	movs	r3, #0
    b2fe:	e6a9      	b.n	b054 <__gnu_unwind_pr_common>

0000b300 <__aeabi_unwind_cpp_pr1>:
    b300:	2301      	movs	r3, #1
    b302:	e6a7      	b.n	b054 <__gnu_unwind_pr_common>

0000b304 <__aeabi_unwind_cpp_pr2>:
    b304:	2302      	movs	r3, #2
    b306:	e6a5      	b.n	b054 <__gnu_unwind_pr_common>

0000b308 <_Unwind_VRS_Pop>:
    b308:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b30c:	4606      	mov	r6, r0
    b30e:	4615      	mov	r5, r2
    b310:	461c      	mov	r4, r3
    b312:	b0c3      	sub	sp, #268	; 0x10c
    b314:	2904      	cmp	r1, #4
    b316:	f200 80b8 	bhi.w	b48a <_Unwind_VRS_Pop+0x182>
    b31a:	e8df f001 	tbb	[pc, r1]
    b31e:	569c      	.short	0x569c
    b320:	2db6      	.short	0x2db6
    b322:	03          	.byte	0x03
    b323:	00          	.byte	0x00
    b324:	2c00      	cmp	r4, #0
    b326:	f040 80b0 	bne.w	b48a <_Unwind_VRS_Pop+0x182>
    b32a:	2a10      	cmp	r2, #16
    b32c:	f200 80ad 	bhi.w	b48a <_Unwind_VRS_Pop+0x182>
    b330:	6803      	ldr	r3, [r0, #0]
    b332:	06d8      	lsls	r0, r3, #27
    b334:	f100 80f1 	bmi.w	b51a <_Unwind_VRS_Pop+0x212>
    b338:	af20      	add	r7, sp, #128	; 0x80
    b33a:	4638      	mov	r0, r7
    b33c:	f000 f990 	bl	b660 <__gnu_Unwind_Save_WMMXC>
    b340:	2401      	movs	r4, #1
    b342:	4638      	mov	r0, r7
    b344:	2300      	movs	r3, #0
    b346:	6bb1      	ldr	r1, [r6, #56]	; 0x38
    b348:	fa04 f203 	lsl.w	r2, r4, r3
    b34c:	422a      	tst	r2, r5
    b34e:	f103 0301 	add.w	r3, r3, #1
    b352:	d005      	beq.n	b360 <_Unwind_VRS_Pop+0x58>
    b354:	460a      	mov	r2, r1
    b356:	f852 cb04 	ldr.w	ip, [r2], #4
    b35a:	4611      	mov	r1, r2
    b35c:	f8c0 c000 	str.w	ip, [r0]
    b360:	2b04      	cmp	r3, #4
    b362:	f100 0004 	add.w	r0, r0, #4
    b366:	d1ef      	bne.n	b348 <_Unwind_VRS_Pop+0x40>
    b368:	4638      	mov	r0, r7
    b36a:	63b1      	str	r1, [r6, #56]	; 0x38
    b36c:	f000 f96e 	bl	b64c <__gnu_Unwind_Restore_WMMXC>
    b370:	2000      	movs	r0, #0
    b372:	b043      	add	sp, #268	; 0x10c
    b374:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b378:	2c03      	cmp	r4, #3
    b37a:	f040 8086 	bne.w	b48a <_Unwind_VRS_Pop+0x182>
    b37e:	b294      	uxth	r4, r2
    b380:	eb04 4312 	add.w	r3, r4, r2, lsr #16
    b384:	2b10      	cmp	r3, #16
    b386:	ea4f 4512 	mov.w	r5, r2, lsr #16
    b38a:	d87e      	bhi.n	b48a <_Unwind_VRS_Pop+0x182>
    b38c:	6803      	ldr	r3, [r0, #0]
    b38e:	071f      	lsls	r7, r3, #28
    b390:	f100 80cb 	bmi.w	b52a <_Unwind_VRS_Pop+0x222>
    b394:	af20      	add	r7, sp, #128	; 0x80
    b396:	4638      	mov	r0, r7
    b398:	f000 f936 	bl	b608 <__gnu_Unwind_Save_WMMXD>
    b39c:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    b39e:	eb07 01c5 	add.w	r1, r7, r5, lsl #3
    b3a2:	b154      	cbz	r4, b3ba <_Unwind_VRS_Pop+0xb2>
    b3a4:	460b      	mov	r3, r1
    b3a6:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
    b3aa:	1ad0      	subs	r0, r2, r3
    b3ac:	00e4      	lsls	r4, r4, #3
    b3ae:	581d      	ldr	r5, [r3, r0]
    b3b0:	f843 5b04 	str.w	r5, [r3], #4
    b3b4:	428b      	cmp	r3, r1
    b3b6:	d1fa      	bne.n	b3ae <_Unwind_VRS_Pop+0xa6>
    b3b8:	4422      	add	r2, r4
    b3ba:	4638      	mov	r0, r7
    b3bc:	63b2      	str	r2, [r6, #56]	; 0x38
    b3be:	f000 f901 	bl	b5c4 <__gnu_Unwind_Restore_WMMXD>
    b3c2:	2000      	movs	r0, #0
    b3c4:	b043      	add	sp, #268	; 0x10c
    b3c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b3ca:	2c01      	cmp	r4, #1
    b3cc:	ea4f 4812 	mov.w	r8, r2, lsr #16
    b3d0:	b295      	uxth	r5, r2
    b3d2:	d056      	beq.n	b482 <_Unwind_VRS_Pop+0x17a>
    b3d4:	2c05      	cmp	r4, #5
    b3d6:	d158      	bne.n	b48a <_Unwind_VRS_Pop+0x182>
    b3d8:	eb08 0905 	add.w	r9, r8, r5
    b3dc:	f1b9 0f20 	cmp.w	r9, #32
    b3e0:	d853      	bhi.n	b48a <_Unwind_VRS_Pop+0x182>
    b3e2:	f1b8 0f0f 	cmp.w	r8, #15
    b3e6:	d973      	bls.n	b4d0 <_Unwind_VRS_Pop+0x1c8>
    b3e8:	46a9      	mov	r9, r5
    b3ea:	2d00      	cmp	r5, #0
    b3ec:	f040 8084 	bne.w	b4f8 <_Unwind_VRS_Pop+0x1f0>
    b3f0:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    b3f2:	b365      	cbz	r5, b44e <_Unwind_VRS_Pop+0x146>
    b3f4:	af20      	add	r7, sp, #128	; 0x80
    b3f6:	f04f 0900 	mov.w	r9, #0
    b3fa:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
    b3fe:	3f04      	subs	r7, #4
    b400:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
    b404:	f853 1b04 	ldr.w	r1, [r3], #4
    b408:	42ab      	cmp	r3, r5
    b40a:	f847 1f04 	str.w	r1, [r7, #4]!
    b40e:	d1f9      	bne.n	b404 <_Unwind_VRS_Pop+0xfc>
    b410:	f1b9 0f00 	cmp.w	r9, #0
    b414:	d00f      	beq.n	b436 <_Unwind_VRS_Pop+0x12e>
    b416:	466f      	mov	r7, sp
    b418:	4641      	mov	r1, r8
    b41a:	2910      	cmp	r1, #16
    b41c:	bf38      	it	cc
    b41e:	2110      	movcc	r1, #16
    b420:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
    b424:	3984      	subs	r1, #132	; 0x84
    b426:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
    b42a:	f853 0b04 	ldr.w	r0, [r3], #4
    b42e:	42ab      	cmp	r3, r5
    b430:	f841 0f04 	str.w	r0, [r1, #4]!
    b434:	d1f9      	bne.n	b42a <_Unwind_VRS_Pop+0x122>
    b436:	2c01      	cmp	r4, #1
    b438:	d07f      	beq.n	b53a <_Unwind_VRS_Pop+0x232>
    b43a:	f1b8 0f0f 	cmp.w	r8, #15
    b43e:	63b5      	str	r5, [r6, #56]	; 0x38
    b440:	d942      	bls.n	b4c8 <_Unwind_VRS_Pop+0x1c0>
    b442:	f1b9 0f00 	cmp.w	r9, #0
    b446:	d002      	beq.n	b44e <_Unwind_VRS_Pop+0x146>
    b448:	4668      	mov	r0, sp
    b44a:	f000 f8b3 	bl	b5b4 <__gnu_Unwind_Restore_VFP_D_16_to_31>
    b44e:	2000      	movs	r0, #0
    b450:	b043      	add	sp, #268	; 0x10c
    b452:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b456:	b9c4      	cbnz	r4, b48a <_Unwind_VRS_Pop+0x182>
    b458:	4623      	mov	r3, r4
    b45a:	2401      	movs	r4, #1
    b45c:	6b82      	ldr	r2, [r0, #56]	; 0x38
    b45e:	1d37      	adds	r7, r6, #4
    b460:	b2a8      	uxth	r0, r5
    b462:	fa04 f103 	lsl.w	r1, r4, r3
    b466:	4201      	tst	r1, r0
    b468:	bf1c      	itt	ne
    b46a:	f852 1b04 	ldrne.w	r1, [r2], #4
    b46e:	f847 1023 	strne.w	r1, [r7, r3, lsl #2]
    b472:	3301      	adds	r3, #1
    b474:	2b10      	cmp	r3, #16
    b476:	d1f4      	bne.n	b462 <_Unwind_VRS_Pop+0x15a>
    b478:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
    b47c:	d1e7      	bne.n	b44e <_Unwind_VRS_Pop+0x146>
    b47e:	63b2      	str	r2, [r6, #56]	; 0x38
    b480:	e004      	b.n	b48c <_Unwind_VRS_Pop+0x184>
    b482:	eb08 0305 	add.w	r3, r8, r5
    b486:	2b10      	cmp	r3, #16
    b488:	d903      	bls.n	b492 <_Unwind_VRS_Pop+0x18a>
    b48a:	2002      	movs	r0, #2
    b48c:	b043      	add	sp, #268	; 0x10c
    b48e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b492:	f1b8 0f0f 	cmp.w	r8, #15
    b496:	d8f8      	bhi.n	b48a <_Unwind_VRS_Pop+0x182>
    b498:	6833      	ldr	r3, [r6, #0]
    b49a:	07da      	lsls	r2, r3, #31
    b49c:	d506      	bpl.n	b4ac <_Unwind_VRS_Pop+0x1a4>
    b49e:	4630      	mov	r0, r6
    b4a0:	f023 0303 	bic.w	r3, r3, #3
    b4a4:	f840 3b48 	str.w	r3, [r0], #72
    b4a8:	f000 f878 	bl	b59c <__gnu_Unwind_Save_VFP>
    b4ac:	af20      	add	r7, sp, #128	; 0x80
    b4ae:	4638      	mov	r0, r7
    b4b0:	f000 f874 	bl	b59c <__gnu_Unwind_Save_VFP>
    b4b4:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    b4b6:	2d00      	cmp	r5, #0
    b4b8:	d19d      	bne.n	b3f6 <_Unwind_VRS_Pop+0xee>
    b4ba:	461d      	mov	r5, r3
    b4bc:	3504      	adds	r5, #4
    b4be:	4638      	mov	r0, r7
    b4c0:	63b5      	str	r5, [r6, #56]	; 0x38
    b4c2:	f000 f867 	bl	b594 <__gnu_Unwind_Restore_VFP>
    b4c6:	e7c2      	b.n	b44e <_Unwind_VRS_Pop+0x146>
    b4c8:	a820      	add	r0, sp, #128	; 0x80
    b4ca:	f000 f86b 	bl	b5a4 <__gnu_Unwind_Restore_VFP_D>
    b4ce:	e7b8      	b.n	b442 <_Unwind_VRS_Pop+0x13a>
    b4d0:	f1b9 0f10 	cmp.w	r9, #16
    b4d4:	d93f      	bls.n	b556 <_Unwind_VRS_Pop+0x24e>
    b4d6:	f1a9 0910 	sub.w	r9, r9, #16
    b4da:	6833      	ldr	r3, [r6, #0]
    b4dc:	07d9      	lsls	r1, r3, #31
    b4de:	d508      	bpl.n	b4f2 <_Unwind_VRS_Pop+0x1ea>
    b4e0:	4630      	mov	r0, r6
    b4e2:	f023 0301 	bic.w	r3, r3, #1
    b4e6:	f043 0302 	orr.w	r3, r3, #2
    b4ea:	f840 3b48 	str.w	r3, [r0], #72
    b4ee:	f000 f85d 	bl	b5ac <__gnu_Unwind_Save_VFP_D>
    b4f2:	f1b9 0f00 	cmp.w	r9, #0
    b4f6:	d031      	beq.n	b55c <_Unwind_VRS_Pop+0x254>
    b4f8:	6833      	ldr	r3, [r6, #0]
    b4fa:	075a      	lsls	r2, r3, #29
    b4fc:	d41f      	bmi.n	b53e <_Unwind_VRS_Pop+0x236>
    b4fe:	f1b8 0f0f 	cmp.w	r8, #15
    b502:	d924      	bls.n	b54e <_Unwind_VRS_Pop+0x246>
    b504:	466f      	mov	r7, sp
    b506:	f1c8 0510 	rsb	r5, r8, #16
    b50a:	4638      	mov	r0, r7
    b50c:	f000 f856 	bl	b5bc <__gnu_Unwind_Save_VFP_D_16_to_31>
    b510:	2d00      	cmp	r5, #0
    b512:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    b514:	dd80      	ble.n	b418 <_Unwind_VRS_Pop+0x110>
    b516:	af20      	add	r7, sp, #128	; 0x80
    b518:	e76f      	b.n	b3fa <_Unwind_VRS_Pop+0xf2>
    b51a:	f023 0310 	bic.w	r3, r3, #16
    b51e:	6033      	str	r3, [r6, #0]
    b520:	f506 70e8 	add.w	r0, r6, #464	; 0x1d0
    b524:	f000 f89c 	bl	b660 <__gnu_Unwind_Save_WMMXC>
    b528:	e706      	b.n	b338 <_Unwind_VRS_Pop+0x30>
    b52a:	f023 0308 	bic.w	r3, r3, #8
    b52e:	6003      	str	r3, [r0, #0]
    b530:	f500 70a8 	add.w	r0, r0, #336	; 0x150
    b534:	f000 f868 	bl	b608 <__gnu_Unwind_Save_WMMXD>
    b538:	e72c      	b.n	b394 <_Unwind_VRS_Pop+0x8c>
    b53a:	af20      	add	r7, sp, #128	; 0x80
    b53c:	e7be      	b.n	b4bc <_Unwind_VRS_Pop+0x1b4>
    b53e:	4630      	mov	r0, r6
    b540:	f023 0304 	bic.w	r3, r3, #4
    b544:	f840 3bd0 	str.w	r3, [r0], #208
    b548:	f000 f838 	bl	b5bc <__gnu_Unwind_Save_VFP_D_16_to_31>
    b54c:	e7d7      	b.n	b4fe <_Unwind_VRS_Pop+0x1f6>
    b54e:	a820      	add	r0, sp, #128	; 0x80
    b550:	f000 f82c 	bl	b5ac <__gnu_Unwind_Save_VFP_D>
    b554:	e7d6      	b.n	b504 <_Unwind_VRS_Pop+0x1fc>
    b556:	f04f 0900 	mov.w	r9, #0
    b55a:	e7be      	b.n	b4da <_Unwind_VRS_Pop+0x1d2>
    b55c:	f1b8 0f0f 	cmp.w	r8, #15
    b560:	f63f af46 	bhi.w	b3f0 <_Unwind_VRS_Pop+0xe8>
    b564:	af20      	add	r7, sp, #128	; 0x80
    b566:	4638      	mov	r0, r7
    b568:	f000 f820 	bl	b5ac <__gnu_Unwind_Save_VFP_D>
    b56c:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    b56e:	2d00      	cmp	r5, #0
    b570:	f47f af41 	bne.w	b3f6 <_Unwind_VRS_Pop+0xee>
    b574:	4638      	mov	r0, r7
    b576:	f000 f815 	bl	b5a4 <__gnu_Unwind_Restore_VFP_D>
    b57a:	e768      	b.n	b44e <_Unwind_VRS_Pop+0x146>

0000b57c <__restore_core_regs>:
    b57c:	f100 0134 	add.w	r1, r0, #52	; 0x34
    b580:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
    b584:	469c      	mov	ip, r3
    b586:	46a6      	mov	lr, r4
    b588:	f84c 5d04 	str.w	r5, [ip, #-4]!
    b58c:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    b590:	46e5      	mov	sp, ip
    b592:	bd00      	pop	{pc}

0000b594 <__gnu_Unwind_Restore_VFP>:
    b594:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
    b598:	4770      	bx	lr
    b59a:	bf00      	nop

0000b59c <__gnu_Unwind_Save_VFP>:
    b59c:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
    b5a0:	4770      	bx	lr
    b5a2:	bf00      	nop

0000b5a4 <__gnu_Unwind_Restore_VFP_D>:
    b5a4:	ec90 0b20 	vldmia	r0, {d0-d15}
    b5a8:	4770      	bx	lr
    b5aa:	bf00      	nop

0000b5ac <__gnu_Unwind_Save_VFP_D>:
    b5ac:	ec80 0b20 	vstmia	r0, {d0-d15}
    b5b0:	4770      	bx	lr
    b5b2:	bf00      	nop

0000b5b4 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
    b5b4:	ecd0 0b20 	vldmia	r0, {d16-d31}
    b5b8:	4770      	bx	lr
    b5ba:	bf00      	nop

0000b5bc <__gnu_Unwind_Save_VFP_D_16_to_31>:
    b5bc:	ecc0 0b20 	vstmia	r0, {d16-d31}
    b5c0:	4770      	bx	lr
    b5c2:	bf00      	nop

0000b5c4 <__gnu_Unwind_Restore_WMMXD>:
    b5c4:	ecf0 0102 	ldfe	f0, [r0], #8
    b5c8:	ecf0 1102 	ldfe	f1, [r0], #8
    b5cc:	ecf0 2102 	ldfe	f2, [r0], #8
    b5d0:	ecf0 3102 	ldfe	f3, [r0], #8
    b5d4:	ecf0 4102 	ldfe	f4, [r0], #8
    b5d8:	ecf0 5102 	ldfe	f5, [r0], #8
    b5dc:	ecf0 6102 	ldfe	f6, [r0], #8
    b5e0:	ecf0 7102 	ldfe	f7, [r0], #8
    b5e4:	ecf0 8102 	ldfp	f0, [r0], #8
    b5e8:	ecf0 9102 	ldfp	f1, [r0], #8
    b5ec:	ecf0 a102 	ldfp	f2, [r0], #8
    b5f0:	ecf0 b102 	ldfp	f3, [r0], #8
    b5f4:	ecf0 c102 	ldfp	f4, [r0], #8
    b5f8:	ecf0 d102 	ldfp	f5, [r0], #8
    b5fc:	ecf0 e102 	ldfp	f6, [r0], #8
    b600:	ecf0 f102 	ldfp	f7, [r0], #8
    b604:	4770      	bx	lr
    b606:	bf00      	nop

0000b608 <__gnu_Unwind_Save_WMMXD>:
    b608:	ece0 0102 	stfe	f0, [r0], #8
    b60c:	ece0 1102 	stfe	f1, [r0], #8
    b610:	ece0 2102 	stfe	f2, [r0], #8
    b614:	ece0 3102 	stfe	f3, [r0], #8
    b618:	ece0 4102 	stfe	f4, [r0], #8
    b61c:	ece0 5102 	stfe	f5, [r0], #8
    b620:	ece0 6102 	stfe	f6, [r0], #8
    b624:	ece0 7102 	stfe	f7, [r0], #8
    b628:	ece0 8102 	stfp	f0, [r0], #8
    b62c:	ece0 9102 	stfp	f1, [r0], #8
    b630:	ece0 a102 	stfp	f2, [r0], #8
    b634:	ece0 b102 	stfp	f3, [r0], #8
    b638:	ece0 c102 	stfp	f4, [r0], #8
    b63c:	ece0 d102 	stfp	f5, [r0], #8
    b640:	ece0 e102 	stfp	f6, [r0], #8
    b644:	ece0 f102 	stfp	f7, [r0], #8
    b648:	4770      	bx	lr
    b64a:	bf00      	nop

0000b64c <__gnu_Unwind_Restore_WMMXC>:
    b64c:	fcb0 8101 	ldc2	1, cr8, [r0], #4
    b650:	fcb0 9101 	ldc2	1, cr9, [r0], #4
    b654:	fcb0 a101 	ldc2	1, cr10, [r0], #4
    b658:	fcb0 b101 	ldc2	1, cr11, [r0], #4
    b65c:	4770      	bx	lr
    b65e:	bf00      	nop

0000b660 <__gnu_Unwind_Save_WMMXC>:
    b660:	fca0 8101 	stc2	1, cr8, [r0], #4
    b664:	fca0 9101 	stc2	1, cr9, [r0], #4
    b668:	fca0 a101 	stc2	1, cr10, [r0], #4
    b66c:	fca0 b101 	stc2	1, cr11, [r0], #4
    b670:	4770      	bx	lr
    b672:	bf00      	nop

0000b674 <_Unwind_RaiseException>:
    b674:	46ec      	mov	ip, sp
    b676:	b500      	push	{lr}
    b678:	e92d 5000 	stmdb	sp!, {ip, lr}
    b67c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b680:	f04f 0300 	mov.w	r3, #0
    b684:	e92d 000c 	stmdb	sp!, {r2, r3}
    b688:	a901      	add	r1, sp, #4
    b68a:	f7ff fbe7 	bl	ae5c <__gnu_Unwind_RaiseException>
    b68e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b692:	b012      	add	sp, #72	; 0x48
    b694:	4770      	bx	lr
    b696:	bf00      	nop

0000b698 <_Unwind_Resume>:
    b698:	46ec      	mov	ip, sp
    b69a:	b500      	push	{lr}
    b69c:	e92d 5000 	stmdb	sp!, {ip, lr}
    b6a0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b6a4:	f04f 0300 	mov.w	r3, #0
    b6a8:	e92d 000c 	stmdb	sp!, {r2, r3}
    b6ac:	a901      	add	r1, sp, #4
    b6ae:	f7ff fc13 	bl	aed8 <__gnu_Unwind_Resume>
    b6b2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b6b6:	b012      	add	sp, #72	; 0x48
    b6b8:	4770      	bx	lr
    b6ba:	bf00      	nop

0000b6bc <_Unwind_Resume_or_Rethrow>:
    b6bc:	46ec      	mov	ip, sp
    b6be:	b500      	push	{lr}
    b6c0:	e92d 5000 	stmdb	sp!, {ip, lr}
    b6c4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b6c8:	f04f 0300 	mov.w	r3, #0
    b6cc:	e92d 000c 	stmdb	sp!, {r2, r3}
    b6d0:	a901      	add	r1, sp, #4
    b6d2:	f7ff fc23 	bl	af1c <__gnu_Unwind_Resume_or_Rethrow>
    b6d6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b6da:	b012      	add	sp, #72	; 0x48
    b6dc:	4770      	bx	lr
    b6de:	bf00      	nop

0000b6e0 <_Unwind_ForcedUnwind>:
    b6e0:	46ec      	mov	ip, sp
    b6e2:	b500      	push	{lr}
    b6e4:	e92d 5000 	stmdb	sp!, {ip, lr}
    b6e8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b6ec:	f04f 0300 	mov.w	r3, #0
    b6f0:	e92d 000c 	stmdb	sp!, {r2, r3}
    b6f4:	ab01      	add	r3, sp, #4
    b6f6:	f7ff fbe5 	bl	aec4 <__gnu_Unwind_ForcedUnwind>
    b6fa:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b6fe:	b012      	add	sp, #72	; 0x48
    b700:	4770      	bx	lr
    b702:	bf00      	nop

0000b704 <_Unwind_Backtrace>:
    b704:	46ec      	mov	ip, sp
    b706:	b500      	push	{lr}
    b708:	e92d 5000 	stmdb	sp!, {ip, lr}
    b70c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b710:	f04f 0300 	mov.w	r3, #0
    b714:	e92d 000c 	stmdb	sp!, {r2, r3}
    b718:	aa01      	add	r2, sp, #4
    b71a:	f7ff fc5b 	bl	afd4 <__gnu_Unwind_Backtrace>
    b71e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    b722:	b012      	add	sp, #72	; 0x48
    b724:	4770      	bx	lr
    b726:	bf00      	nop

0000b728 <next_unwind_byte>:
    b728:	7a02      	ldrb	r2, [r0, #8]
    b72a:	4603      	mov	r3, r0
    b72c:	b97a      	cbnz	r2, b74e <next_unwind_byte+0x26>
    b72e:	7a42      	ldrb	r2, [r0, #9]
    b730:	b1a2      	cbz	r2, b75c <next_unwind_byte+0x34>
    b732:	f04f 0c03 	mov.w	ip, #3
    b736:	6841      	ldr	r1, [r0, #4]
    b738:	3a01      	subs	r2, #1
    b73a:	7242      	strb	r2, [r0, #9]
    b73c:	6808      	ldr	r0, [r1, #0]
    b73e:	1d0a      	adds	r2, r1, #4
    b740:	605a      	str	r2, [r3, #4]
    b742:	0202      	lsls	r2, r0, #8
    b744:	f883 c008 	strb.w	ip, [r3, #8]
    b748:	0e00      	lsrs	r0, r0, #24
    b74a:	601a      	str	r2, [r3, #0]
    b74c:	4770      	bx	lr
    b74e:	6800      	ldr	r0, [r0, #0]
    b750:	3a01      	subs	r2, #1
    b752:	721a      	strb	r2, [r3, #8]
    b754:	0202      	lsls	r2, r0, #8
    b756:	601a      	str	r2, [r3, #0]
    b758:	0e00      	lsrs	r0, r0, #24
    b75a:	4770      	bx	lr
    b75c:	20b0      	movs	r0, #176	; 0xb0
    b75e:	4770      	bx	lr

0000b760 <_Unwind_GetGR.constprop.0>:
    b760:	2300      	movs	r3, #0
    b762:	b500      	push	{lr}
    b764:	b085      	sub	sp, #20
    b766:	a903      	add	r1, sp, #12
    b768:	9100      	str	r1, [sp, #0]
    b76a:	220c      	movs	r2, #12
    b76c:	4619      	mov	r1, r3
    b76e:	f7ff fbe7 	bl	af40 <_Unwind_VRS_Get>
    b772:	9803      	ldr	r0, [sp, #12]
    b774:	b005      	add	sp, #20
    b776:	f85d fb04 	ldr.w	pc, [sp], #4
    b77a:	bf00      	nop

0000b77c <unwind_UCB_from_context>:
    b77c:	e7f0      	b.n	b760 <_Unwind_GetGR.constprop.0>
    b77e:	bf00      	nop

0000b780 <__gnu_unwind_execute>:
    b780:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b784:	f04f 0800 	mov.w	r8, #0
    b788:	4605      	mov	r5, r0
    b78a:	460e      	mov	r6, r1
    b78c:	b085      	sub	sp, #20
    b78e:	4630      	mov	r0, r6
    b790:	f7ff ffca 	bl	b728 <next_unwind_byte>
    b794:	28b0      	cmp	r0, #176	; 0xb0
    b796:	4604      	mov	r4, r0
    b798:	f000 80ba 	beq.w	b910 <__gnu_unwind_execute+0x190>
    b79c:	0607      	lsls	r7, r0, #24
    b79e:	d520      	bpl.n	b7e2 <__gnu_unwind_execute+0x62>
    b7a0:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
    b7a4:	2b80      	cmp	r3, #128	; 0x80
    b7a6:	d04d      	beq.n	b844 <__gnu_unwind_execute+0xc4>
    b7a8:	2b90      	cmp	r3, #144	; 0x90
    b7aa:	d036      	beq.n	b81a <__gnu_unwind_execute+0x9a>
    b7ac:	2ba0      	cmp	r3, #160	; 0xa0
    b7ae:	d060      	beq.n	b872 <__gnu_unwind_execute+0xf2>
    b7b0:	2bb0      	cmp	r3, #176	; 0xb0
    b7b2:	d073      	beq.n	b89c <__gnu_unwind_execute+0x11c>
    b7b4:	2bc0      	cmp	r3, #192	; 0xc0
    b7b6:	f000 808a 	beq.w	b8ce <__gnu_unwind_execute+0x14e>
    b7ba:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
    b7be:	2bd0      	cmp	r3, #208	; 0xd0
    b7c0:	d10b      	bne.n	b7da <__gnu_unwind_execute+0x5a>
    b7c2:	f000 0207 	and.w	r2, r0, #7
    b7c6:	3201      	adds	r2, #1
    b7c8:	2305      	movs	r3, #5
    b7ca:	2101      	movs	r1, #1
    b7cc:	4628      	mov	r0, r5
    b7ce:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    b7d2:	f7ff fd99 	bl	b308 <_Unwind_VRS_Pop>
    b7d6:	2800      	cmp	r0, #0
    b7d8:	d0d9      	beq.n	b78e <__gnu_unwind_execute+0xe>
    b7da:	2009      	movs	r0, #9
    b7dc:	b005      	add	sp, #20
    b7de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b7e2:	0083      	lsls	r3, r0, #2
    b7e4:	b2db      	uxtb	r3, r3
    b7e6:	1d1f      	adds	r7, r3, #4
    b7e8:	2300      	movs	r3, #0
    b7ea:	f10d 090c 	add.w	r9, sp, #12
    b7ee:	4619      	mov	r1, r3
    b7f0:	220d      	movs	r2, #13
    b7f2:	4628      	mov	r0, r5
    b7f4:	f8cd 9000 	str.w	r9, [sp]
    b7f8:	f7ff fba2 	bl	af40 <_Unwind_VRS_Get>
    b7fc:	9b03      	ldr	r3, [sp, #12]
    b7fe:	0660      	lsls	r0, r4, #25
    b800:	bf4c      	ite	mi
    b802:	1bdf      	submi	r7, r3, r7
    b804:	18ff      	addpl	r7, r7, r3
    b806:	2300      	movs	r3, #0
    b808:	220d      	movs	r2, #13
    b80a:	4628      	mov	r0, r5
    b80c:	4619      	mov	r1, r3
    b80e:	f8cd 9000 	str.w	r9, [sp]
    b812:	9703      	str	r7, [sp, #12]
    b814:	f7ff fbba 	bl	af8c <_Unwind_VRS_Set>
    b818:	e7b9      	b.n	b78e <__gnu_unwind_execute+0xe>
    b81a:	f000 030d 	and.w	r3, r0, #13
    b81e:	2b0d      	cmp	r3, #13
    b820:	d0db      	beq.n	b7da <__gnu_unwind_execute+0x5a>
    b822:	2300      	movs	r3, #0
    b824:	af03      	add	r7, sp, #12
    b826:	4619      	mov	r1, r3
    b828:	f000 020f 	and.w	r2, r0, #15
    b82c:	9700      	str	r7, [sp, #0]
    b82e:	4628      	mov	r0, r5
    b830:	f7ff fb86 	bl	af40 <_Unwind_VRS_Get>
    b834:	2300      	movs	r3, #0
    b836:	220d      	movs	r2, #13
    b838:	4628      	mov	r0, r5
    b83a:	4619      	mov	r1, r3
    b83c:	9700      	str	r7, [sp, #0]
    b83e:	f7ff fba5 	bl	af8c <_Unwind_VRS_Set>
    b842:	e7a4      	b.n	b78e <__gnu_unwind_execute+0xe>
    b844:	4630      	mov	r0, r6
    b846:	f7ff ff6f 	bl	b728 <next_unwind_byte>
    b84a:	0224      	lsls	r4, r4, #8
    b84c:	4320      	orrs	r0, r4
    b84e:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
    b852:	d0c2      	beq.n	b7da <__gnu_unwind_execute+0x5a>
    b854:	2300      	movs	r3, #0
    b856:	0104      	lsls	r4, r0, #4
    b858:	4619      	mov	r1, r3
    b85a:	4628      	mov	r0, r5
    b85c:	b2a2      	uxth	r2, r4
    b85e:	f7ff fd53 	bl	b308 <_Unwind_VRS_Pop>
    b862:	2800      	cmp	r0, #0
    b864:	d1b9      	bne.n	b7da <__gnu_unwind_execute+0x5a>
    b866:	f414 4f00 	tst.w	r4, #32768	; 0x8000
    b86a:	bf18      	it	ne
    b86c:	f04f 0801 	movne.w	r8, #1
    b870:	e78d      	b.n	b78e <__gnu_unwind_execute+0xe>
    b872:	43c3      	mvns	r3, r0
    b874:	f44f 627f 	mov.w	r2, #4080	; 0xff0
    b878:	f003 0307 	and.w	r3, r3, #7
    b87c:	411a      	asrs	r2, r3
    b87e:	2300      	movs	r3, #0
    b880:	0701      	lsls	r1, r0, #28
    b882:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
    b886:	bf48      	it	mi
    b888:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
    b88c:	4628      	mov	r0, r5
    b88e:	4619      	mov	r1, r3
    b890:	f7ff fd3a 	bl	b308 <_Unwind_VRS_Pop>
    b894:	2800      	cmp	r0, #0
    b896:	f43f af7a 	beq.w	b78e <__gnu_unwind_execute+0xe>
    b89a:	e79e      	b.n	b7da <__gnu_unwind_execute+0x5a>
    b89c:	28b1      	cmp	r0, #177	; 0xb1
    b89e:	d03c      	beq.n	b91a <__gnu_unwind_execute+0x19a>
    b8a0:	28b2      	cmp	r0, #178	; 0xb2
    b8a2:	f000 80b0 	beq.w	ba06 <__gnu_unwind_execute+0x286>
    b8a6:	28b3      	cmp	r0, #179	; 0xb3
    b8a8:	d04a      	beq.n	b940 <__gnu_unwind_execute+0x1c0>
    b8aa:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
    b8ae:	2bb4      	cmp	r3, #180	; 0xb4
    b8b0:	d093      	beq.n	b7da <__gnu_unwind_execute+0x5a>
    b8b2:	2301      	movs	r3, #1
    b8b4:	f000 0207 	and.w	r2, r0, #7
    b8b8:	441a      	add	r2, r3
    b8ba:	4628      	mov	r0, r5
    b8bc:	4619      	mov	r1, r3
    b8be:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    b8c2:	f7ff fd21 	bl	b308 <_Unwind_VRS_Pop>
    b8c6:	2800      	cmp	r0, #0
    b8c8:	f43f af61 	beq.w	b78e <__gnu_unwind_execute+0xe>
    b8cc:	e785      	b.n	b7da <__gnu_unwind_execute+0x5a>
    b8ce:	28c6      	cmp	r0, #198	; 0xc6
    b8d0:	d04f      	beq.n	b972 <__gnu_unwind_execute+0x1f2>
    b8d2:	28c7      	cmp	r0, #199	; 0xc7
    b8d4:	d061      	beq.n	b99a <__gnu_unwind_execute+0x21a>
    b8d6:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
    b8da:	2bc0      	cmp	r3, #192	; 0xc0
    b8dc:	d070      	beq.n	b9c0 <__gnu_unwind_execute+0x240>
    b8de:	28c8      	cmp	r0, #200	; 0xc8
    b8e0:	d07c      	beq.n	b9dc <__gnu_unwind_execute+0x25c>
    b8e2:	28c9      	cmp	r0, #201	; 0xc9
    b8e4:	f47f af79 	bne.w	b7da <__gnu_unwind_execute+0x5a>
    b8e8:	4630      	mov	r0, r6
    b8ea:	f7ff ff1d 	bl	b728 <next_unwind_byte>
    b8ee:	2305      	movs	r3, #5
    b8f0:	4602      	mov	r2, r0
    b8f2:	2101      	movs	r1, #1
    b8f4:	4628      	mov	r0, r5
    b8f6:	0314      	lsls	r4, r2, #12
    b8f8:	f002 020f 	and.w	r2, r2, #15
    b8fc:	f404 2470 	and.w	r4, r4, #983040	; 0xf0000
    b900:	440a      	add	r2, r1
    b902:	4322      	orrs	r2, r4
    b904:	f7ff fd00 	bl	b308 <_Unwind_VRS_Pop>
    b908:	2800      	cmp	r0, #0
    b90a:	f43f af40 	beq.w	b78e <__gnu_unwind_execute+0xe>
    b90e:	e764      	b.n	b7da <__gnu_unwind_execute+0x5a>
    b910:	f1b8 0f00 	cmp.w	r8, #0
    b914:	d01c      	beq.n	b950 <__gnu_unwind_execute+0x1d0>
    b916:	2000      	movs	r0, #0
    b918:	e760      	b.n	b7dc <__gnu_unwind_execute+0x5c>
    b91a:	4630      	mov	r0, r6
    b91c:	f7ff ff04 	bl	b728 <next_unwind_byte>
    b920:	4602      	mov	r2, r0
    b922:	2800      	cmp	r0, #0
    b924:	f43f af59 	beq.w	b7da <__gnu_unwind_execute+0x5a>
    b928:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
    b92c:	f47f af55 	bne.w	b7da <__gnu_unwind_execute+0x5a>
    b930:	4619      	mov	r1, r3
    b932:	4628      	mov	r0, r5
    b934:	f7ff fce8 	bl	b308 <_Unwind_VRS_Pop>
    b938:	2800      	cmp	r0, #0
    b93a:	f43f af28 	beq.w	b78e <__gnu_unwind_execute+0xe>
    b93e:	e74c      	b.n	b7da <__gnu_unwind_execute+0x5a>
    b940:	4630      	mov	r0, r6
    b942:	f7ff fef1 	bl	b728 <next_unwind_byte>
    b946:	2301      	movs	r3, #1
    b948:	4602      	mov	r2, r0
    b94a:	4619      	mov	r1, r3
    b94c:	4628      	mov	r0, r5
    b94e:	e7d2      	b.n	b8f6 <__gnu_unwind_execute+0x176>
    b950:	ac03      	add	r4, sp, #12
    b952:	4643      	mov	r3, r8
    b954:	220e      	movs	r2, #14
    b956:	4641      	mov	r1, r8
    b958:	4628      	mov	r0, r5
    b95a:	9400      	str	r4, [sp, #0]
    b95c:	f7ff faf0 	bl	af40 <_Unwind_VRS_Get>
    b960:	4643      	mov	r3, r8
    b962:	220f      	movs	r2, #15
    b964:	4628      	mov	r0, r5
    b966:	4641      	mov	r1, r8
    b968:	9400      	str	r4, [sp, #0]
    b96a:	f7ff fb0f 	bl	af8c <_Unwind_VRS_Set>
    b96e:	4640      	mov	r0, r8
    b970:	e734      	b.n	b7dc <__gnu_unwind_execute+0x5c>
    b972:	4630      	mov	r0, r6
    b974:	f7ff fed8 	bl	b728 <next_unwind_byte>
    b978:	4602      	mov	r2, r0
    b97a:	2303      	movs	r3, #3
    b97c:	0314      	lsls	r4, r2, #12
    b97e:	f002 020f 	and.w	r2, r2, #15
    b982:	f404 2470 	and.w	r4, r4, #983040	; 0xf0000
    b986:	3201      	adds	r2, #1
    b988:	4628      	mov	r0, r5
    b98a:	4619      	mov	r1, r3
    b98c:	4322      	orrs	r2, r4
    b98e:	f7ff fcbb 	bl	b308 <_Unwind_VRS_Pop>
    b992:	2800      	cmp	r0, #0
    b994:	f43f aefb 	beq.w	b78e <__gnu_unwind_execute+0xe>
    b998:	e71f      	b.n	b7da <__gnu_unwind_execute+0x5a>
    b99a:	4630      	mov	r0, r6
    b99c:	f7ff fec4 	bl	b728 <next_unwind_byte>
    b9a0:	4602      	mov	r2, r0
    b9a2:	2800      	cmp	r0, #0
    b9a4:	f43f af19 	beq.w	b7da <__gnu_unwind_execute+0x5a>
    b9a8:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
    b9ac:	f47f af15 	bne.w	b7da <__gnu_unwind_execute+0x5a>
    b9b0:	2104      	movs	r1, #4
    b9b2:	4628      	mov	r0, r5
    b9b4:	f7ff fca8 	bl	b308 <_Unwind_VRS_Pop>
    b9b8:	2800      	cmp	r0, #0
    b9ba:	f43f aee8 	beq.w	b78e <__gnu_unwind_execute+0xe>
    b9be:	e70c      	b.n	b7da <__gnu_unwind_execute+0x5a>
    b9c0:	2303      	movs	r3, #3
    b9c2:	f000 020f 	and.w	r2, r0, #15
    b9c6:	3201      	adds	r2, #1
    b9c8:	4628      	mov	r0, r5
    b9ca:	4619      	mov	r1, r3
    b9cc:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
    b9d0:	f7ff fc9a 	bl	b308 <_Unwind_VRS_Pop>
    b9d4:	2800      	cmp	r0, #0
    b9d6:	f43f aeda 	beq.w	b78e <__gnu_unwind_execute+0xe>
    b9da:	e6fe      	b.n	b7da <__gnu_unwind_execute+0x5a>
    b9dc:	4630      	mov	r0, r6
    b9de:	f7ff fea3 	bl	b728 <next_unwind_byte>
    b9e2:	4602      	mov	r2, r0
    b9e4:	2101      	movs	r1, #1
    b9e6:	f002 04f0 	and.w	r4, r2, #240	; 0xf0
    b9ea:	f002 020f 	and.w	r2, r2, #15
    b9ee:	3410      	adds	r4, #16
    b9f0:	440a      	add	r2, r1
    b9f2:	2305      	movs	r3, #5
    b9f4:	4628      	mov	r0, r5
    b9f6:	ea42 3204 	orr.w	r2, r2, r4, lsl #12
    b9fa:	f7ff fc85 	bl	b308 <_Unwind_VRS_Pop>
    b9fe:	2800      	cmp	r0, #0
    ba00:	f43f aec5 	beq.w	b78e <__gnu_unwind_execute+0xe>
    ba04:	e6e9      	b.n	b7da <__gnu_unwind_execute+0x5a>
    ba06:	2300      	movs	r3, #0
    ba08:	f10d 090c 	add.w	r9, sp, #12
    ba0c:	220d      	movs	r2, #13
    ba0e:	4619      	mov	r1, r3
    ba10:	4628      	mov	r0, r5
    ba12:	f8cd 9000 	str.w	r9, [sp]
    ba16:	f7ff fa93 	bl	af40 <_Unwind_VRS_Get>
    ba1a:	4630      	mov	r0, r6
    ba1c:	f7ff fe84 	bl	b728 <next_unwind_byte>
    ba20:	0602      	lsls	r2, r0, #24
    ba22:	f04f 0402 	mov.w	r4, #2
    ba26:	d50c      	bpl.n	ba42 <__gnu_unwind_execute+0x2c2>
    ba28:	9b03      	ldr	r3, [sp, #12]
    ba2a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    ba2e:	40a0      	lsls	r0, r4
    ba30:	4418      	add	r0, r3
    ba32:	9003      	str	r0, [sp, #12]
    ba34:	4630      	mov	r0, r6
    ba36:	f7ff fe77 	bl	b728 <next_unwind_byte>
    ba3a:	0603      	lsls	r3, r0, #24
    ba3c:	f104 0407 	add.w	r4, r4, #7
    ba40:	d4f2      	bmi.n	ba28 <__gnu_unwind_execute+0x2a8>
    ba42:	9b03      	ldr	r3, [sp, #12]
    ba44:	f000 027f 	and.w	r2, r0, #127	; 0x7f
    ba48:	40a2      	lsls	r2, r4
    ba4a:	f503 7301 	add.w	r3, r3, #516	; 0x204
    ba4e:	441a      	add	r2, r3
    ba50:	2300      	movs	r3, #0
    ba52:	9203      	str	r2, [sp, #12]
    ba54:	4628      	mov	r0, r5
    ba56:	220d      	movs	r2, #13
    ba58:	4619      	mov	r1, r3
    ba5a:	f8cd 9000 	str.w	r9, [sp]
    ba5e:	f7ff fa95 	bl	af8c <_Unwind_VRS_Set>
    ba62:	e694      	b.n	b78e <__gnu_unwind_execute+0xe>

0000ba64 <__gnu_unwind_frame>:
    ba64:	460b      	mov	r3, r1
    ba66:	f04f 0c03 	mov.w	ip, #3
    ba6a:	b500      	push	{lr}
    ba6c:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
    ba6e:	4618      	mov	r0, r3
    ba70:	6853      	ldr	r3, [r2, #4]
    ba72:	b085      	sub	sp, #20
    ba74:	3208      	adds	r2, #8
    ba76:	9202      	str	r2, [sp, #8]
    ba78:	a901      	add	r1, sp, #4
    ba7a:	0e1a      	lsrs	r2, r3, #24
    ba7c:	021b      	lsls	r3, r3, #8
    ba7e:	f88d c00c 	strb.w	ip, [sp, #12]
    ba82:	9301      	str	r3, [sp, #4]
    ba84:	f88d 200d 	strb.w	r2, [sp, #13]
    ba88:	f7ff fe7a 	bl	b780 <__gnu_unwind_execute>
    ba8c:	b005      	add	sp, #20
    ba8e:	f85d fb04 	ldr.w	pc, [sp], #4
    ba92:	bf00      	nop

0000ba94 <_Unwind_GetRegionStart>:
    ba94:	b508      	push	{r3, lr}
    ba96:	f7ff fe71 	bl	b77c <unwind_UCB_from_context>
    ba9a:	6c80      	ldr	r0, [r0, #72]	; 0x48
    ba9c:	bd08      	pop	{r3, pc}
    ba9e:	bf00      	nop

0000baa0 <_Unwind_GetLanguageSpecificData>:
    baa0:	b508      	push	{r3, lr}
    baa2:	f7ff fe6b 	bl	b77c <unwind_UCB_from_context>
    baa6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    baa8:	79c3      	ldrb	r3, [r0, #7]
    baaa:	3302      	adds	r3, #2
    baac:	eb00 0083 	add.w	r0, r0, r3, lsl #2
    bab0:	bd08      	pop	{r3, pc}
    bab2:	bf00      	nop

0000bab4 <_Unwind_GetDataRelBase>:
    bab4:	b508      	push	{r3, lr}
    bab6:	f000 f803 	bl	bac0 <abort>

0000baba <_Unwind_GetTextRelBase>:
    baba:	b508      	push	{r3, lr}
    babc:	f7ff fffa 	bl	bab4 <_Unwind_GetDataRelBase>

0000bac0 <abort>:
    bac0:	2006      	movs	r0, #6
    bac2:	b508      	push	{r3, lr}
    bac4:	f001 fb5a 	bl	d17c <raise>
    bac8:	2001      	movs	r0, #1
    baca:	f00b fa07 	bl	16edc <_exit>
    bace:	bf00      	nop

0000bad0 <__assert_func>:
    bad0:	4614      	mov	r4, r2
    bad2:	b500      	push	{lr}
    bad4:	461a      	mov	r2, r3
    bad6:	4b0a      	ldr	r3, [pc, #40]	; (bb00 <__assert_func+0x30>)
    bad8:	460d      	mov	r5, r1
    bada:	681b      	ldr	r3, [r3, #0]
    badc:	b085      	sub	sp, #20
    bade:	68de      	ldr	r6, [r3, #12]
    bae0:	4603      	mov	r3, r0
    bae2:	b14c      	cbz	r4, baf8 <__assert_func+0x28>
    bae4:	4907      	ldr	r1, [pc, #28]	; (bb04 <__assert_func+0x34>)
    bae6:	9101      	str	r1, [sp, #4]
    bae8:	4630      	mov	r0, r6
    baea:	4907      	ldr	r1, [pc, #28]	; (bb08 <__assert_func+0x38>)
    baec:	9402      	str	r4, [sp, #8]
    baee:	9500      	str	r5, [sp, #0]
    baf0:	f000 f832 	bl	bb58 <fiprintf>
    baf4:	f7ff ffe4 	bl	bac0 <abort>
    baf8:	4904      	ldr	r1, [pc, #16]	; (bb0c <__assert_func+0x3c>)
    bafa:	460c      	mov	r4, r1
    bafc:	e7f3      	b.n	bae6 <__assert_func+0x16>
    bafe:	bf00      	nop
    bb00:	20000124 	.word	0x20000124
    bb04:	00019f74 	.word	0x00019f74
    bb08:	00019f84 	.word	0x00019f84
    bb0c:	00019f80 	.word	0x00019f80

0000bb10 <__assert>:
    bb10:	b508      	push	{r3, lr}
    bb12:	4613      	mov	r3, r2
    bb14:	2200      	movs	r2, #0
    bb16:	f7ff ffdb 	bl	bad0 <__assert_func>
    bb1a:	bf00      	nop

0000bb1c <exit>:
    bb1c:	b508      	push	{r3, lr}
    bb1e:	2100      	movs	r1, #0
    bb20:	4604      	mov	r4, r0
    bb22:	f006 f91d 	bl	11d60 <__call_exitprocs>
    bb26:	4b04      	ldr	r3, [pc, #16]	; (bb38 <exit+0x1c>)
    bb28:	6818      	ldr	r0, [r3, #0]
    bb2a:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
    bb2c:	b103      	cbz	r3, bb30 <exit+0x14>
    bb2e:	4798      	blx	r3
    bb30:	4620      	mov	r0, r4
    bb32:	f00b f9d3 	bl	16edc <_exit>
    bb36:	bf00      	nop
    bb38:	00019fb4 	.word	0x00019fb4

0000bb3c <_fiprintf_r>:
    bb3c:	b40c      	push	{r2, r3}
    bb3e:	b500      	push	{lr}
    bb40:	b083      	sub	sp, #12
    bb42:	ab04      	add	r3, sp, #16
    bb44:	f853 2b04 	ldr.w	r2, [r3], #4
    bb48:	9301      	str	r3, [sp, #4]
    bb4a:	f003 fb05 	bl	f158 <_vfiprintf_r>
    bb4e:	b003      	add	sp, #12
    bb50:	f85d eb04 	ldr.w	lr, [sp], #4
    bb54:	b002      	add	sp, #8
    bb56:	4770      	bx	lr

0000bb58 <fiprintf>:
    bb58:	b40e      	push	{r1, r2, r3}
    bb5a:	b500      	push	{lr}
    bb5c:	4a07      	ldr	r2, [pc, #28]	; (bb7c <fiprintf+0x24>)
    bb5e:	b082      	sub	sp, #8
    bb60:	ab03      	add	r3, sp, #12
    bb62:	4601      	mov	r1, r0
    bb64:	6810      	ldr	r0, [r2, #0]
    bb66:	f853 2b04 	ldr.w	r2, [r3], #4
    bb6a:	9301      	str	r3, [sp, #4]
    bb6c:	f003 faf4 	bl	f158 <_vfiprintf_r>
    bb70:	b002      	add	sp, #8
    bb72:	f85d eb04 	ldr.w	lr, [sp], #4
    bb76:	b003      	add	sp, #12
    bb78:	4770      	bx	lr
    bb7a:	bf00      	nop
    bb7c:	20000124 	.word	0x20000124

0000bb80 <_fputc_r>:
    bb80:	b570      	push	{r4, r5, r6, lr}
    bb82:	4605      	mov	r5, r0
    bb84:	460e      	mov	r6, r1
    bb86:	4614      	mov	r4, r2
    bb88:	b108      	cbz	r0, bb8e <_fputc_r+0xe>
    bb8a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    bb8c:	b19b      	cbz	r3, bbb6 <_fputc_r+0x36>
    bb8e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bb90:	07d8      	lsls	r0, r3, #31
    bb92:	d402      	bmi.n	bb9a <_fputc_r+0x1a>
    bb94:	89a3      	ldrh	r3, [r4, #12]
    bb96:	0599      	lsls	r1, r3, #22
    bb98:	d515      	bpl.n	bbc6 <_fputc_r+0x46>
    bb9a:	4622      	mov	r2, r4
    bb9c:	4628      	mov	r0, r5
    bb9e:	4631      	mov	r1, r6
    bba0:	f000 ff76 	bl	ca90 <_putc_r>
    bba4:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bba6:	4605      	mov	r5, r0
    bba8:	07da      	lsls	r2, r3, #31
    bbaa:	d402      	bmi.n	bbb2 <_fputc_r+0x32>
    bbac:	89a3      	ldrh	r3, [r4, #12]
    bbae:	059b      	lsls	r3, r3, #22
    bbb0:	d504      	bpl.n	bbbc <_fputc_r+0x3c>
    bbb2:	4628      	mov	r0, r5
    bbb4:	bd70      	pop	{r4, r5, r6, pc}
    bbb6:	f007 fa77 	bl	130a8 <__sinit>
    bbba:	e7e8      	b.n	bb8e <_fputc_r+0xe>
    bbbc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bbbe:	f000 fab9 	bl	c134 <__retarget_lock_release_recursive>
    bbc2:	4628      	mov	r0, r5
    bbc4:	bd70      	pop	{r4, r5, r6, pc}
    bbc6:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bbc8:	f000 faac 	bl	c124 <__retarget_lock_acquire_recursive>
    bbcc:	e7e5      	b.n	bb9a <_fputc_r+0x1a>
    bbce:	bf00      	nop

0000bbd0 <fputc>:
    bbd0:	4b14      	ldr	r3, [pc, #80]	; (bc24 <fputc+0x54>)
    bbd2:	b570      	push	{r4, r5, r6, lr}
    bbd4:	681e      	ldr	r6, [r3, #0]
    bbd6:	4605      	mov	r5, r0
    bbd8:	460c      	mov	r4, r1
    bbda:	b10e      	cbz	r6, bbe0 <fputc+0x10>
    bbdc:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    bbde:	b19b      	cbz	r3, bc08 <fputc+0x38>
    bbe0:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bbe2:	07d8      	lsls	r0, r3, #31
    bbe4:	d402      	bmi.n	bbec <fputc+0x1c>
    bbe6:	89a3      	ldrh	r3, [r4, #12]
    bbe8:	0599      	lsls	r1, r3, #22
    bbea:	d516      	bpl.n	bc1a <fputc+0x4a>
    bbec:	4622      	mov	r2, r4
    bbee:	4629      	mov	r1, r5
    bbf0:	4630      	mov	r0, r6
    bbf2:	f000 ff4d 	bl	ca90 <_putc_r>
    bbf6:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bbf8:	4605      	mov	r5, r0
    bbfa:	07da      	lsls	r2, r3, #31
    bbfc:	d402      	bmi.n	bc04 <fputc+0x34>
    bbfe:	89a3      	ldrh	r3, [r4, #12]
    bc00:	059b      	lsls	r3, r3, #22
    bc02:	d505      	bpl.n	bc10 <fputc+0x40>
    bc04:	4628      	mov	r0, r5
    bc06:	bd70      	pop	{r4, r5, r6, pc}
    bc08:	4630      	mov	r0, r6
    bc0a:	f007 fa4d 	bl	130a8 <__sinit>
    bc0e:	e7e7      	b.n	bbe0 <fputc+0x10>
    bc10:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bc12:	f000 fa8f 	bl	c134 <__retarget_lock_release_recursive>
    bc16:	4628      	mov	r0, r5
    bc18:	bd70      	pop	{r4, r5, r6, pc}
    bc1a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bc1c:	f000 fa82 	bl	c124 <__retarget_lock_acquire_recursive>
    bc20:	e7e4      	b.n	bbec <fputc+0x1c>
    bc22:	bf00      	nop
    bc24:	20000124 	.word	0x20000124

0000bc28 <_fputs_r>:
    bc28:	b530      	push	{r4, r5, lr}
    bc2a:	4605      	mov	r5, r0
    bc2c:	b087      	sub	sp, #28
    bc2e:	4608      	mov	r0, r1
    bc30:	4614      	mov	r4, r2
    bc32:	9101      	str	r1, [sp, #4]
    bc34:	f001 fc7e 	bl	d534 <strlen>
    bc38:	2301      	movs	r3, #1
    bc3a:	aa01      	add	r2, sp, #4
    bc3c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    bc40:	9005      	str	r0, [sp, #20]
    bc42:	9002      	str	r0, [sp, #8]
    bc44:	b10d      	cbz	r5, bc4a <_fputs_r+0x22>
    bc46:	6bab      	ldr	r3, [r5, #56]	; 0x38
    bc48:	b303      	cbz	r3, bc8c <_fputs_r+0x64>
    bc4a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bc4c:	f013 0f01 	tst.w	r3, #1
    bc50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bc54:	b29a      	uxth	r2, r3
    bc56:	d101      	bne.n	bc5c <_fputs_r+0x34>
    bc58:	0598      	lsls	r0, r3, #22
    bc5a:	d521      	bpl.n	bca0 <_fputs_r+0x78>
    bc5c:	0491      	lsls	r1, r2, #18
    bc5e:	d406      	bmi.n	bc6e <_fputs_r+0x46>
    bc60:	6e62      	ldr	r2, [r4, #100]	; 0x64
    bc62:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    bc66:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    bc6a:	81a3      	strh	r3, [r4, #12]
    bc6c:	6662      	str	r2, [r4, #100]	; 0x64
    bc6e:	4628      	mov	r0, r5
    bc70:	aa03      	add	r2, sp, #12
    bc72:	4621      	mov	r1, r4
    bc74:	f000 f826 	bl	bcc4 <__sfvwrite_r>
    bc78:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bc7a:	4605      	mov	r5, r0
    bc7c:	07da      	lsls	r2, r3, #31
    bc7e:	d402      	bmi.n	bc86 <_fputs_r+0x5e>
    bc80:	89a3      	ldrh	r3, [r4, #12]
    bc82:	059b      	lsls	r3, r3, #22
    bc84:	d506      	bpl.n	bc94 <_fputs_r+0x6c>
    bc86:	4628      	mov	r0, r5
    bc88:	b007      	add	sp, #28
    bc8a:	bd30      	pop	{r4, r5, pc}
    bc8c:	4628      	mov	r0, r5
    bc8e:	f007 fa0b 	bl	130a8 <__sinit>
    bc92:	e7da      	b.n	bc4a <_fputs_r+0x22>
    bc94:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bc96:	f000 fa4d 	bl	c134 <__retarget_lock_release_recursive>
    bc9a:	4628      	mov	r0, r5
    bc9c:	b007      	add	sp, #28
    bc9e:	bd30      	pop	{r4, r5, pc}
    bca0:	6da0      	ldr	r0, [r4, #88]	; 0x58
    bca2:	f000 fa3f 	bl	c124 <__retarget_lock_acquire_recursive>
    bca6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bcaa:	b29a      	uxth	r2, r3
    bcac:	e7d6      	b.n	bc5c <_fputs_r+0x34>
    bcae:	bf00      	nop

0000bcb0 <fputs>:
    bcb0:	4603      	mov	r3, r0
    bcb2:	460a      	mov	r2, r1
    bcb4:	4902      	ldr	r1, [pc, #8]	; (bcc0 <fputs+0x10>)
    bcb6:	6808      	ldr	r0, [r1, #0]
    bcb8:	4619      	mov	r1, r3
    bcba:	f7ff bfb5 	b.w	bc28 <_fputs_r>
    bcbe:	bf00      	nop
    bcc0:	20000124 	.word	0x20000124

0000bcc4 <__sfvwrite_r>:
    bcc4:	6893      	ldr	r3, [r2, #8]
    bcc6:	2b00      	cmp	r3, #0
    bcc8:	f000 80b7 	beq.w	be3a <__sfvwrite_r+0x176>
    bccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bcd0:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
    bcd4:	460c      	mov	r4, r1
    bcd6:	0719      	lsls	r1, r3, #28
    bcd8:	4680      	mov	r8, r0
    bcda:	4617      	mov	r7, r2
    bcdc:	b083      	sub	sp, #12
    bcde:	b298      	uxth	r0, r3
    bce0:	d525      	bpl.n	bd2e <__sfvwrite_r+0x6a>
    bce2:	6923      	ldr	r3, [r4, #16]
    bce4:	b31b      	cbz	r3, bd2e <__sfvwrite_r+0x6a>
    bce6:	f010 0302 	ands.w	r3, r0, #2
    bcea:	683d      	ldr	r5, [r7, #0]
    bcec:	d02d      	beq.n	bd4a <__sfvwrite_r+0x86>
    bcee:	f04f 0b00 	mov.w	fp, #0
    bcf2:	465e      	mov	r6, fp
    bcf4:	f8df a2b8 	ldr.w	sl, [pc, #696]	; bfb0 <__sfvwrite_r+0x2ec>
    bcf8:	2e00      	cmp	r6, #0
    bcfa:	f000 808b 	beq.w	be14 <__sfvwrite_r+0x150>
    bcfe:	4556      	cmp	r6, sl
    bd00:	4633      	mov	r3, r6
    bd02:	465a      	mov	r2, fp
    bd04:	bf28      	it	cs
    bd06:	4653      	movcs	r3, sl
    bd08:	4640      	mov	r0, r8
    bd0a:	69e1      	ldr	r1, [r4, #28]
    bd0c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
    bd10:	47e0      	blx	ip
    bd12:	2800      	cmp	r0, #0
    bd14:	f340 8087 	ble.w	be26 <__sfvwrite_r+0x162>
    bd18:	68bb      	ldr	r3, [r7, #8]
    bd1a:	4483      	add	fp, r0
    bd1c:	1a1b      	subs	r3, r3, r0
    bd1e:	1a36      	subs	r6, r6, r0
    bd20:	60bb      	str	r3, [r7, #8]
    bd22:	2b00      	cmp	r3, #0
    bd24:	d1e8      	bne.n	bcf8 <__sfvwrite_r+0x34>
    bd26:	2000      	movs	r0, #0
    bd28:	b003      	add	sp, #12
    bd2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bd2e:	4621      	mov	r1, r4
    bd30:	4640      	mov	r0, r8
    bd32:	f005 ffa1 	bl	11c78 <__swsetup_r>
    bd36:	2800      	cmp	r0, #0
    bd38:	f040 8136 	bne.w	bfa8 <__sfvwrite_r+0x2e4>
    bd3c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bd40:	683d      	ldr	r5, [r7, #0]
    bd42:	b298      	uxth	r0, r3
    bd44:	f010 0302 	ands.w	r3, r0, #2
    bd48:	d1d1      	bne.n	bcee <__sfvwrite_r+0x2a>
    bd4a:	f010 0901 	ands.w	r9, r0, #1
    bd4e:	d176      	bne.n	be3e <__sfvwrite_r+0x17a>
    bd50:	464e      	mov	r6, r9
    bd52:	2e00      	cmp	r6, #0
    bd54:	d05a      	beq.n	be0c <__sfvwrite_r+0x148>
    bd56:	0582      	lsls	r2, r0, #22
    bd58:	f8d4 b008 	ldr.w	fp, [r4, #8]
    bd5c:	f140 80b5 	bpl.w	beca <__sfvwrite_r+0x206>
    bd60:	45b3      	cmp	fp, r6
    bd62:	465a      	mov	r2, fp
    bd64:	f200 80cd 	bhi.w	bf02 <__sfvwrite_r+0x23e>
    bd68:	f410 6f90 	tst.w	r0, #1152	; 0x480
    bd6c:	f000 80cb 	beq.w	bf06 <__sfvwrite_r+0x242>
    bd70:	6823      	ldr	r3, [r4, #0]
    bd72:	6921      	ldr	r1, [r4, #16]
    bd74:	eba3 0b01 	sub.w	fp, r3, r1
    bd78:	6963      	ldr	r3, [r4, #20]
    bd7a:	eb03 0a43 	add.w	sl, r3, r3, lsl #1
    bd7e:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
    bd82:	f10b 0301 	add.w	r3, fp, #1
    bd86:	ea4f 0a6a 	mov.w	sl, sl, asr #1
    bd8a:	4433      	add	r3, r6
    bd8c:	4553      	cmp	r3, sl
    bd8e:	4652      	mov	r2, sl
    bd90:	bf84      	itt	hi
    bd92:	469a      	movhi	sl, r3
    bd94:	4652      	movhi	r2, sl
    bd96:	0543      	lsls	r3, r0, #21
    bd98:	f140 80ea 	bpl.w	bf70 <__sfvwrite_r+0x2ac>
    bd9c:	4611      	mov	r1, r2
    bd9e:	4640      	mov	r0, r8
    bda0:	f000 f9da 	bl	c158 <_malloc_r>
    bda4:	2800      	cmp	r0, #0
    bda6:	f000 80f9 	beq.w	bf9c <__sfvwrite_r+0x2d8>
    bdaa:	465a      	mov	r2, fp
    bdac:	6921      	ldr	r1, [r4, #16]
    bdae:	9001      	str	r0, [sp, #4]
    bdb0:	f000 fcfa 	bl	c7a8 <memcpy>
    bdb4:	89a2      	ldrh	r2, [r4, #12]
    bdb6:	9b01      	ldr	r3, [sp, #4]
    bdb8:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
    bdbc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    bdc0:	81a2      	strh	r2, [r4, #12]
    bdc2:	eb03 000b 	add.w	r0, r3, fp
    bdc6:	6123      	str	r3, [r4, #16]
    bdc8:	4632      	mov	r2, r6
    bdca:	ebaa 030b 	sub.w	r3, sl, fp
    bdce:	46b3      	mov	fp, r6
    bdd0:	f8c4 a014 	str.w	sl, [r4, #20]
    bdd4:	60a3      	str	r3, [r4, #8]
    bdd6:	6020      	str	r0, [r4, #0]
    bdd8:	46b2      	mov	sl, r6
    bdda:	2600      	movs	r6, #0
    bddc:	4649      	mov	r1, r9
    bdde:	9201      	str	r2, [sp, #4]
    bde0:	f000 fd58 	bl	c894 <memmove>
    bde4:	68a3      	ldr	r3, [r4, #8]
    bde6:	6821      	ldr	r1, [r4, #0]
    bde8:	9a01      	ldr	r2, [sp, #4]
    bdea:	eba3 030b 	sub.w	r3, r3, fp
    bdee:	440a      	add	r2, r1
    bdf0:	60a3      	str	r3, [r4, #8]
    bdf2:	6022      	str	r2, [r4, #0]
    bdf4:	68b8      	ldr	r0, [r7, #8]
    bdf6:	44d1      	add	r9, sl
    bdf8:	eba0 000a 	sub.w	r0, r0, sl
    bdfc:	60b8      	str	r0, [r7, #8]
    bdfe:	2800      	cmp	r0, #0
    be00:	d091      	beq.n	bd26 <__sfvwrite_r+0x62>
    be02:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
    be06:	b280      	uxth	r0, r0
    be08:	2e00      	cmp	r6, #0
    be0a:	d1a4      	bne.n	bd56 <__sfvwrite_r+0x92>
    be0c:	e9d5 9600 	ldrd	r9, r6, [r5]
    be10:	3508      	adds	r5, #8
    be12:	e79e      	b.n	bd52 <__sfvwrite_r+0x8e>
    be14:	e9d5 b600 	ldrd	fp, r6, [r5]
    be18:	3508      	adds	r5, #8
    be1a:	e76d      	b.n	bcf8 <__sfvwrite_r+0x34>
    be1c:	4621      	mov	r1, r4
    be1e:	4640      	mov	r0, r8
    be20:	f007 f896 	bl	12f50 <_fflush_r>
    be24:	b380      	cbz	r0, be88 <__sfvwrite_r+0x1c4>
    be26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    be2a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    be2e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    be32:	81a3      	strh	r3, [r4, #12]
    be34:	b003      	add	sp, #12
    be36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    be3a:	2000      	movs	r0, #0
    be3c:	4770      	bx	lr
    be3e:	461e      	mov	r6, r3
    be40:	46aa      	mov	sl, r5
    be42:	4699      	mov	r9, r3
    be44:	4618      	mov	r0, r3
    be46:	461d      	mov	r5, r3
    be48:	b356      	cbz	r6, bea0 <__sfvwrite_r+0x1dc>
    be4a:	2800      	cmp	r0, #0
    be4c:	d032      	beq.n	beb4 <__sfvwrite_r+0x1f0>
    be4e:	464a      	mov	r2, r9
    be50:	6820      	ldr	r0, [r4, #0]
    be52:	6921      	ldr	r1, [r4, #16]
    be54:	42b2      	cmp	r2, r6
    be56:	bf28      	it	cs
    be58:	4632      	movcs	r2, r6
    be5a:	4288      	cmp	r0, r1
    be5c:	6963      	ldr	r3, [r4, #20]
    be5e:	d904      	bls.n	be6a <__sfvwrite_r+0x1a6>
    be60:	68a1      	ldr	r1, [r4, #8]
    be62:	eb03 0b01 	add.w	fp, r3, r1
    be66:	455a      	cmp	r2, fp
    be68:	dc74      	bgt.n	bf54 <__sfvwrite_r+0x290>
    be6a:	4293      	cmp	r3, r2
    be6c:	dc65      	bgt.n	bf3a <__sfvwrite_r+0x276>
    be6e:	462a      	mov	r2, r5
    be70:	4640      	mov	r0, r8
    be72:	69e1      	ldr	r1, [r4, #28]
    be74:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
    be78:	47e0      	blx	ip
    be7a:	f1b0 0b00 	subs.w	fp, r0, #0
    be7e:	ddd2      	ble.n	be26 <__sfvwrite_r+0x162>
    be80:	ebb9 090b 	subs.w	r9, r9, fp
    be84:	d0ca      	beq.n	be1c <__sfvwrite_r+0x158>
    be86:	2001      	movs	r0, #1
    be88:	68bb      	ldr	r3, [r7, #8]
    be8a:	445d      	add	r5, fp
    be8c:	eba3 030b 	sub.w	r3, r3, fp
    be90:	eba6 060b 	sub.w	r6, r6, fp
    be94:	60bb      	str	r3, [r7, #8]
    be96:	2b00      	cmp	r3, #0
    be98:	f43f af45 	beq.w	bd26 <__sfvwrite_r+0x62>
    be9c:	2e00      	cmp	r6, #0
    be9e:	d1d4      	bne.n	be4a <__sfvwrite_r+0x186>
    bea0:	f10a 0308 	add.w	r3, sl, #8
    bea4:	f853 6c04 	ldr.w	r6, [r3, #-4]
    bea8:	469a      	mov	sl, r3
    beaa:	f853 5c08 	ldr.w	r5, [r3, #-8]
    beae:	3308      	adds	r3, #8
    beb0:	2e00      	cmp	r6, #0
    beb2:	d0f7      	beq.n	bea4 <__sfvwrite_r+0x1e0>
    beb4:	4632      	mov	r2, r6
    beb6:	210a      	movs	r1, #10
    beb8:	4628      	mov	r0, r5
    beba:	f000 fbf9 	bl	c6b0 <memchr>
    bebe:	2800      	cmp	r0, #0
    bec0:	d069      	beq.n	bf96 <__sfvwrite_r+0x2d2>
    bec2:	3001      	adds	r0, #1
    bec4:	eba0 0905 	sub.w	r9, r0, r5
    bec8:	e7c1      	b.n	be4e <__sfvwrite_r+0x18a>
    beca:	6820      	ldr	r0, [r4, #0]
    becc:	6923      	ldr	r3, [r4, #16]
    bece:	4298      	cmp	r0, r3
    bed0:	d81b      	bhi.n	bf0a <__sfvwrite_r+0x246>
    bed2:	6963      	ldr	r3, [r4, #20]
    bed4:	42b3      	cmp	r3, r6
    bed6:	d818      	bhi.n	bf0a <__sfvwrite_r+0x246>
    bed8:	f06f 4c00 	mvn.w	ip, #2147483648	; 0x80000000
    bedc:	45b4      	cmp	ip, r6
    bede:	bf28      	it	cs
    bee0:	46b4      	movcs	ip, r6
    bee2:	fb9c fcf3 	sdiv	ip, ip, r3
    bee6:	464a      	mov	r2, r9
    bee8:	fb03 f30c 	mul.w	r3, r3, ip
    beec:	4640      	mov	r0, r8
    beee:	69e1      	ldr	r1, [r4, #28]
    bef0:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
    bef4:	47e0      	blx	ip
    bef6:	f1b0 0a00 	subs.w	sl, r0, #0
    befa:	dd94      	ble.n	be26 <__sfvwrite_r+0x162>
    befc:	eba6 060a 	sub.w	r6, r6, sl
    bf00:	e778      	b.n	bdf4 <__sfvwrite_r+0x130>
    bf02:	46b3      	mov	fp, r6
    bf04:	4632      	mov	r2, r6
    bf06:	6820      	ldr	r0, [r4, #0]
    bf08:	e766      	b.n	bdd8 <__sfvwrite_r+0x114>
    bf0a:	45b3      	cmp	fp, r6
    bf0c:	46da      	mov	sl, fp
    bf0e:	bf28      	it	cs
    bf10:	46b2      	movcs	sl, r6
    bf12:	4649      	mov	r1, r9
    bf14:	4652      	mov	r2, sl
    bf16:	f000 fcbd 	bl	c894 <memmove>
    bf1a:	68a3      	ldr	r3, [r4, #8]
    bf1c:	6822      	ldr	r2, [r4, #0]
    bf1e:	eba3 030a 	sub.w	r3, r3, sl
    bf22:	4452      	add	r2, sl
    bf24:	60a3      	str	r3, [r4, #8]
    bf26:	6022      	str	r2, [r4, #0]
    bf28:	2b00      	cmp	r3, #0
    bf2a:	d1e7      	bne.n	befc <__sfvwrite_r+0x238>
    bf2c:	4621      	mov	r1, r4
    bf2e:	4640      	mov	r0, r8
    bf30:	f007 f80e 	bl	12f50 <_fflush_r>
    bf34:	2800      	cmp	r0, #0
    bf36:	d0e1      	beq.n	befc <__sfvwrite_r+0x238>
    bf38:	e775      	b.n	be26 <__sfvwrite_r+0x162>
    bf3a:	4629      	mov	r1, r5
    bf3c:	4693      	mov	fp, r2
    bf3e:	9201      	str	r2, [sp, #4]
    bf40:	f000 fca8 	bl	c894 <memmove>
    bf44:	68a3      	ldr	r3, [r4, #8]
    bf46:	9a01      	ldr	r2, [sp, #4]
    bf48:	1a9b      	subs	r3, r3, r2
    bf4a:	60a3      	str	r3, [r4, #8]
    bf4c:	6823      	ldr	r3, [r4, #0]
    bf4e:	441a      	add	r2, r3
    bf50:	6022      	str	r2, [r4, #0]
    bf52:	e795      	b.n	be80 <__sfvwrite_r+0x1bc>
    bf54:	4629      	mov	r1, r5
    bf56:	465a      	mov	r2, fp
    bf58:	f000 fc9c 	bl	c894 <memmove>
    bf5c:	6823      	ldr	r3, [r4, #0]
    bf5e:	4621      	mov	r1, r4
    bf60:	445b      	add	r3, fp
    bf62:	4640      	mov	r0, r8
    bf64:	6023      	str	r3, [r4, #0]
    bf66:	f006 fff3 	bl	12f50 <_fflush_r>
    bf6a:	2800      	cmp	r0, #0
    bf6c:	d088      	beq.n	be80 <__sfvwrite_r+0x1bc>
    bf6e:	e75a      	b.n	be26 <__sfvwrite_r+0x162>
    bf70:	4640      	mov	r0, r8
    bf72:	f000 fe65 	bl	cc40 <_realloc_r>
    bf76:	4603      	mov	r3, r0
    bf78:	2800      	cmp	r0, #0
    bf7a:	f47f af22 	bne.w	bdc2 <__sfvwrite_r+0xfe>
    bf7e:	4640      	mov	r0, r8
    bf80:	6921      	ldr	r1, [r4, #16]
    bf82:	f007 fadb 	bl	1353c <_free_r>
    bf86:	220c      	movs	r2, #12
    bf88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bf8c:	f8c8 2000 	str.w	r2, [r8]
    bf90:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    bf94:	e749      	b.n	be2a <__sfvwrite_r+0x166>
    bf96:	1c72      	adds	r2, r6, #1
    bf98:	4691      	mov	r9, r2
    bf9a:	e759      	b.n	be50 <__sfvwrite_r+0x18c>
    bf9c:	220c      	movs	r2, #12
    bf9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bfa2:	f8c8 2000 	str.w	r2, [r8]
    bfa6:	e740      	b.n	be2a <__sfvwrite_r+0x166>
    bfa8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    bfac:	e6bc      	b.n	bd28 <__sfvwrite_r+0x64>
    bfae:	bf00      	nop
    bfb0:	7ffffc00 	.word	0x7ffffc00

0000bfb4 <_fwrite_r>:
    bfb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    bfb8:	4690      	mov	r8, r2
    bfba:	461d      	mov	r5, r3
    bfbc:	2301      	movs	r3, #1
    bfbe:	fb08 f705 	mul.w	r7, r8, r5
    bfc2:	b086      	sub	sp, #24
    bfc4:	aa01      	add	r2, sp, #4
    bfc6:	4606      	mov	r6, r0
    bfc8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    bfca:	9101      	str	r1, [sp, #4]
    bfcc:	9203      	str	r2, [sp, #12]
    bfce:	9304      	str	r3, [sp, #16]
    bfd0:	9702      	str	r7, [sp, #8]
    bfd2:	9705      	str	r7, [sp, #20]
    bfd4:	b108      	cbz	r0, bfda <_fwrite_r+0x26>
    bfd6:	6b83      	ldr	r3, [r0, #56]	; 0x38
    bfd8:	b343      	cbz	r3, c02c <_fwrite_r+0x78>
    bfda:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bfdc:	f013 0f01 	tst.w	r3, #1
    bfe0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bfe4:	b29a      	uxth	r2, r3
    bfe6:	d101      	bne.n	bfec <_fwrite_r+0x38>
    bfe8:	0599      	lsls	r1, r3, #22
    bfea:	d530      	bpl.n	c04e <_fwrite_r+0x9a>
    bfec:	0492      	lsls	r2, r2, #18
    bfee:	d406      	bmi.n	bffe <_fwrite_r+0x4a>
    bff0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    bff4:	81a3      	strh	r3, [r4, #12]
    bff6:	6e63      	ldr	r3, [r4, #100]	; 0x64
    bff8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    bffc:	6663      	str	r3, [r4, #100]	; 0x64
    bffe:	4630      	mov	r0, r6
    c000:	4621      	mov	r1, r4
    c002:	aa03      	add	r2, sp, #12
    c004:	f7ff fe5e 	bl	bcc4 <__sfvwrite_r>
    c008:	6e63      	ldr	r3, [r4, #100]	; 0x64
    c00a:	b190      	cbz	r0, c032 <_fwrite_r+0x7e>
    c00c:	07da      	lsls	r2, r3, #31
    c00e:	d506      	bpl.n	c01e <_fwrite_r+0x6a>
    c010:	9805      	ldr	r0, [sp, #20]
    c012:	1a3f      	subs	r7, r7, r0
    c014:	fbb7 f0f8 	udiv	r0, r7, r8
    c018:	b006      	add	sp, #24
    c01a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c01e:	89a3      	ldrh	r3, [r4, #12]
    c020:	059b      	lsls	r3, r3, #22
    c022:	d4f5      	bmi.n	c010 <_fwrite_r+0x5c>
    c024:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c026:	f000 f885 	bl	c134 <__retarget_lock_release_recursive>
    c02a:	e7f1      	b.n	c010 <_fwrite_r+0x5c>
    c02c:	f007 f83c 	bl	130a8 <__sinit>
    c030:	e7d3      	b.n	bfda <_fwrite_r+0x26>
    c032:	07d8      	lsls	r0, r3, #31
    c034:	d407      	bmi.n	c046 <_fwrite_r+0x92>
    c036:	89a3      	ldrh	r3, [r4, #12]
    c038:	0599      	lsls	r1, r3, #22
    c03a:	d404      	bmi.n	c046 <_fwrite_r+0x92>
    c03c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c03e:	f000 f879 	bl	c134 <__retarget_lock_release_recursive>
    c042:	4628      	mov	r0, r5
    c044:	e7e8      	b.n	c018 <_fwrite_r+0x64>
    c046:	4628      	mov	r0, r5
    c048:	b006      	add	sp, #24
    c04a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c04e:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c050:	f000 f868 	bl	c124 <__retarget_lock_acquire_recursive>
    c054:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    c058:	b29a      	uxth	r2, r3
    c05a:	e7c7      	b.n	bfec <_fwrite_r+0x38>

0000c05c <fwrite>:
    c05c:	b530      	push	{r4, r5, lr}
    c05e:	4694      	mov	ip, r2
    c060:	468e      	mov	lr, r1
    c062:	4605      	mov	r5, r0
    c064:	461c      	mov	r4, r3
    c066:	4b05      	ldr	r3, [pc, #20]	; (c07c <fwrite+0x20>)
    c068:	b083      	sub	sp, #12
    c06a:	6818      	ldr	r0, [r3, #0]
    c06c:	4629      	mov	r1, r5
    c06e:	4672      	mov	r2, lr
    c070:	4663      	mov	r3, ip
    c072:	9400      	str	r4, [sp, #0]
    c074:	f7ff ff9e 	bl	bfb4 <_fwrite_r>
    c078:	b003      	add	sp, #12
    c07a:	bd30      	pop	{r4, r5, pc}
    c07c:	20000124 	.word	0x20000124

0000c080 <__libc_init_array>:
    c080:	b570      	push	{r4, r5, r6, lr}
    c082:	4e0d      	ldr	r6, [pc, #52]	; (c0b8 <__libc_init_array+0x38>)
    c084:	4d0d      	ldr	r5, [pc, #52]	; (c0bc <__libc_init_array+0x3c>)
    c086:	1b76      	subs	r6, r6, r5
    c088:	10b6      	asrs	r6, r6, #2
    c08a:	d006      	beq.n	c09a <__libc_init_array+0x1a>
    c08c:	2400      	movs	r4, #0
    c08e:	f855 3b04 	ldr.w	r3, [r5], #4
    c092:	3401      	adds	r4, #1
    c094:	4798      	blx	r3
    c096:	42a6      	cmp	r6, r4
    c098:	d1f9      	bne.n	c08e <__libc_init_array+0xe>
    c09a:	4e09      	ldr	r6, [pc, #36]	; (c0c0 <__libc_init_array+0x40>)
    c09c:	4d09      	ldr	r5, [pc, #36]	; (c0c4 <__libc_init_array+0x44>)
    c09e:	f00a ff4d 	bl	16f3c <_init>
    c0a2:	1b76      	subs	r6, r6, r5
    c0a4:	10b6      	asrs	r6, r6, #2
    c0a6:	d006      	beq.n	c0b6 <__libc_init_array+0x36>
    c0a8:	2400      	movs	r4, #0
    c0aa:	f855 3b04 	ldr.w	r3, [r5], #4
    c0ae:	3401      	adds	r4, #1
    c0b0:	4798      	blx	r3
    c0b2:	42a6      	cmp	r6, r4
    c0b4:	d1f9      	bne.n	c0aa <__libc_init_array+0x2a>
    c0b6:	bd70      	pop	{r4, r5, r6, pc}
    c0b8:	20000adc 	.word	0x20000adc
    c0bc:	20000adc 	.word	0x20000adc
    c0c0:	20000ae8 	.word	0x20000ae8
    c0c4:	20000adc 	.word	0x20000adc

0000c0c8 <iprintf>:
    c0c8:	b40f      	push	{r0, r1, r2, r3}
    c0ca:	b500      	push	{lr}
    c0cc:	4a07      	ldr	r2, [pc, #28]	; (c0ec <iprintf+0x24>)
    c0ce:	b083      	sub	sp, #12
    c0d0:	ab04      	add	r3, sp, #16
    c0d2:	6810      	ldr	r0, [r2, #0]
    c0d4:	f853 2b04 	ldr.w	r2, [r3], #4
    c0d8:	6881      	ldr	r1, [r0, #8]
    c0da:	9301      	str	r3, [sp, #4]
    c0dc:	f003 f83c 	bl	f158 <_vfiprintf_r>
    c0e0:	b003      	add	sp, #12
    c0e2:	f85d eb04 	ldr.w	lr, [sp], #4
    c0e6:	b004      	add	sp, #16
    c0e8:	4770      	bx	lr
    c0ea:	bf00      	nop
    c0ec:	20000124 	.word	0x20000124

0000c0f0 <_iprintf_r>:
    c0f0:	b40e      	push	{r1, r2, r3}
    c0f2:	b500      	push	{lr}
    c0f4:	b082      	sub	sp, #8
    c0f6:	ab03      	add	r3, sp, #12
    c0f8:	f853 2b04 	ldr.w	r2, [r3], #4
    c0fc:	6881      	ldr	r1, [r0, #8]
    c0fe:	9301      	str	r3, [sp, #4]
    c100:	f003 f82a 	bl	f158 <_vfiprintf_r>
    c104:	b002      	add	sp, #8
    c106:	f85d eb04 	ldr.w	lr, [sp], #4
    c10a:	b003      	add	sp, #12
    c10c:	4770      	bx	lr
    c10e:	bf00      	nop

0000c110 <__retarget_lock_init>:
    c110:	4770      	bx	lr
    c112:	bf00      	nop

0000c114 <__retarget_lock_init_recursive>:
    c114:	4770      	bx	lr
    c116:	bf00      	nop

0000c118 <__retarget_lock_close>:
    c118:	4770      	bx	lr
    c11a:	bf00      	nop

0000c11c <__retarget_lock_close_recursive>:
    c11c:	4770      	bx	lr
    c11e:	bf00      	nop

0000c120 <__retarget_lock_acquire>:
    c120:	4770      	bx	lr
    c122:	bf00      	nop

0000c124 <__retarget_lock_acquire_recursive>:
    c124:	4770      	bx	lr
    c126:	bf00      	nop

0000c128 <__retarget_lock_try_acquire>:
    c128:	2001      	movs	r0, #1
    c12a:	4770      	bx	lr

0000c12c <__retarget_lock_try_acquire_recursive>:
    c12c:	2001      	movs	r0, #1
    c12e:	4770      	bx	lr

0000c130 <__retarget_lock_release>:
    c130:	4770      	bx	lr
    c132:	bf00      	nop

0000c134 <__retarget_lock_release_recursive>:
    c134:	4770      	bx	lr
    c136:	bf00      	nop

0000c138 <malloc>:
    c138:	4b02      	ldr	r3, [pc, #8]	; (c144 <malloc+0xc>)
    c13a:	4601      	mov	r1, r0
    c13c:	6818      	ldr	r0, [r3, #0]
    c13e:	f000 b80b 	b.w	c158 <_malloc_r>
    c142:	bf00      	nop
    c144:	20000124 	.word	0x20000124

0000c148 <free>:
    c148:	4b02      	ldr	r3, [pc, #8]	; (c154 <free+0xc>)
    c14a:	4601      	mov	r1, r0
    c14c:	6818      	ldr	r0, [r3, #0]
    c14e:	f007 b9f5 	b.w	1353c <_free_r>
    c152:	bf00      	nop
    c154:	20000124 	.word	0x20000124

0000c158 <_malloc_r>:
    c158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c15c:	f101 050b 	add.w	r5, r1, #11
    c160:	2d16      	cmp	r5, #22
    c162:	4606      	mov	r6, r0
    c164:	b083      	sub	sp, #12
    c166:	d825      	bhi.n	c1b4 <_malloc_r+0x5c>
    c168:	2910      	cmp	r1, #16
    c16a:	f200 80b8 	bhi.w	c2de <_malloc_r+0x186>
    c16e:	f000 fc5f 	bl	ca30 <__malloc_lock>
    c172:	2510      	movs	r5, #16
    c174:	2218      	movs	r2, #24
    c176:	f04f 0c02 	mov.w	ip, #2
    c17a:	4fb5      	ldr	r7, [pc, #724]	; (c450 <_malloc_r+0x2f8>)
    c17c:	443a      	add	r2, r7
    c17e:	6853      	ldr	r3, [r2, #4]
    c180:	f1a2 0108 	sub.w	r1, r2, #8
    c184:	428b      	cmp	r3, r1
    c186:	f000 80b7 	beq.w	c2f8 <_malloc_r+0x1a0>
    c18a:	685a      	ldr	r2, [r3, #4]
    c18c:	68d9      	ldr	r1, [r3, #12]
    c18e:	f022 0203 	bic.w	r2, r2, #3
    c192:	441a      	add	r2, r3
    c194:	689c      	ldr	r4, [r3, #8]
    c196:	4630      	mov	r0, r6
    c198:	60e1      	str	r1, [r4, #12]
    c19a:	608c      	str	r4, [r1, #8]
    c19c:	6851      	ldr	r1, [r2, #4]
    c19e:	f103 0408 	add.w	r4, r3, #8
    c1a2:	f041 0101 	orr.w	r1, r1, #1
    c1a6:	6051      	str	r1, [r2, #4]
    c1a8:	f000 fc48 	bl	ca3c <__malloc_unlock>
    c1ac:	4620      	mov	r0, r4
    c1ae:	b003      	add	sp, #12
    c1b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c1b4:	f035 0507 	bics.w	r5, r5, #7
    c1b8:	f100 8091 	bmi.w	c2de <_malloc_r+0x186>
    c1bc:	42a9      	cmp	r1, r5
    c1be:	f200 808e 	bhi.w	c2de <_malloc_r+0x186>
    c1c2:	f000 fc35 	bl	ca30 <__malloc_lock>
    c1c6:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
    c1ca:	f0c0 8194 	bcc.w	c4f6 <_malloc_r+0x39e>
    c1ce:	0a6b      	lsrs	r3, r5, #9
    c1d0:	f000 808c 	beq.w	c2ec <_malloc_r+0x194>
    c1d4:	2b04      	cmp	r3, #4
    c1d6:	f200 816a 	bhi.w	c4ae <_malloc_r+0x356>
    c1da:	09ab      	lsrs	r3, r5, #6
    c1dc:	f103 0c39 	add.w	ip, r3, #57	; 0x39
    c1e0:	f103 0438 	add.w	r4, r3, #56	; 0x38
    c1e4:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c1e8:	4f99      	ldr	r7, [pc, #612]	; (c450 <_malloc_r+0x2f8>)
    c1ea:	4438      	add	r0, r7
    c1ec:	6843      	ldr	r3, [r0, #4]
    c1ee:	3808      	subs	r0, #8
    c1f0:	4298      	cmp	r0, r3
    c1f2:	d106      	bne.n	c202 <_malloc_r+0xaa>
    c1f4:	e00c      	b.n	c210 <_malloc_r+0xb8>
    c1f6:	2900      	cmp	r1, #0
    c1f8:	f280 8126 	bge.w	c448 <_malloc_r+0x2f0>
    c1fc:	68db      	ldr	r3, [r3, #12]
    c1fe:	4298      	cmp	r0, r3
    c200:	d006      	beq.n	c210 <_malloc_r+0xb8>
    c202:	685a      	ldr	r2, [r3, #4]
    c204:	f022 0203 	bic.w	r2, r2, #3
    c208:	1b51      	subs	r1, r2, r5
    c20a:	290f      	cmp	r1, #15
    c20c:	ddf3      	ble.n	c1f6 <_malloc_r+0x9e>
    c20e:	46a4      	mov	ip, r4
    c210:	693c      	ldr	r4, [r7, #16]
    c212:	f8df e240 	ldr.w	lr, [pc, #576]	; c454 <_malloc_r+0x2fc>
    c216:	4574      	cmp	r4, lr
    c218:	d07a      	beq.n	c310 <_malloc_r+0x1b8>
    c21a:	6862      	ldr	r2, [r4, #4]
    c21c:	f022 0203 	bic.w	r2, r2, #3
    c220:	1b53      	subs	r3, r2, r5
    c222:	2b0f      	cmp	r3, #15
    c224:	f300 8176 	bgt.w	c514 <_malloc_r+0x3bc>
    c228:	2b00      	cmp	r3, #0
    c22a:	e9c7 ee04 	strd	lr, lr, [r7, #16]
    c22e:	f280 8167 	bge.w	c500 <_malloc_r+0x3a8>
    c232:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
    c236:	f080 8119 	bcs.w	c46c <_malloc_r+0x314>
    c23a:	2101      	movs	r1, #1
    c23c:	08d3      	lsrs	r3, r2, #3
    c23e:	0952      	lsrs	r2, r2, #5
    c240:	440b      	add	r3, r1
    c242:	4091      	lsls	r1, r2
    c244:	687a      	ldr	r2, [r7, #4]
    c246:	f857 0033 	ldr.w	r0, [r7, r3, lsl #3]
    c24a:	430a      	orrs	r2, r1
    c24c:	eb07 01c3 	add.w	r1, r7, r3, lsl #3
    c250:	3908      	subs	r1, #8
    c252:	60a0      	str	r0, [r4, #8]
    c254:	60e1      	str	r1, [r4, #12]
    c256:	607a      	str	r2, [r7, #4]
    c258:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
    c25c:	60c4      	str	r4, [r0, #12]
    c25e:	2101      	movs	r1, #1
    c260:	ea4f 03ac 	mov.w	r3, ip, asr #2
    c264:	4099      	lsls	r1, r3
    c266:	4291      	cmp	r1, r2
    c268:	d859      	bhi.n	c31e <_malloc_r+0x1c6>
    c26a:	4211      	tst	r1, r2
    c26c:	d106      	bne.n	c27c <_malloc_r+0x124>
    c26e:	f02c 0c03 	bic.w	ip, ip, #3
    c272:	0049      	lsls	r1, r1, #1
    c274:	4211      	tst	r1, r2
    c276:	f10c 0c04 	add.w	ip, ip, #4
    c27a:	d0fa      	beq.n	c272 <_malloc_r+0x11a>
    c27c:	eb07 09cc 	add.w	r9, r7, ip, lsl #3
    c280:	4648      	mov	r0, r9
    c282:	4664      	mov	r4, ip
    c284:	f8d0 800c 	ldr.w	r8, [r0, #12]
    c288:	4540      	cmp	r0, r8
    c28a:	d108      	bne.n	c29e <_malloc_r+0x146>
    c28c:	e11c      	b.n	c4c8 <_malloc_r+0x370>
    c28e:	2b00      	cmp	r3, #0
    c290:	f280 8121 	bge.w	c4d6 <_malloc_r+0x37e>
    c294:	f8d8 800c 	ldr.w	r8, [r8, #12]
    c298:	4540      	cmp	r0, r8
    c29a:	f000 8115 	beq.w	c4c8 <_malloc_r+0x370>
    c29e:	f8d8 2004 	ldr.w	r2, [r8, #4]
    c2a2:	f022 0203 	bic.w	r2, r2, #3
    c2a6:	1b53      	subs	r3, r2, r5
    c2a8:	2b0f      	cmp	r3, #15
    c2aa:	ddf0      	ble.n	c28e <_malloc_r+0x136>
    c2ac:	eb08 0105 	add.w	r1, r8, r5
    c2b0:	f045 0501 	orr.w	r5, r5, #1
    c2b4:	f8c8 5004 	str.w	r5, [r8, #4]
    c2b8:	4630      	mov	r0, r6
    c2ba:	e9d8 6402 	ldrd	r6, r4, [r8, #8]
    c2be:	60f4      	str	r4, [r6, #12]
    c2c0:	60a6      	str	r6, [r4, #8]
    c2c2:	f043 0401 	orr.w	r4, r3, #1
    c2c6:	e9c7 1104 	strd	r1, r1, [r7, #16]
    c2ca:	604c      	str	r4, [r1, #4]
    c2cc:	e9c1 ee02 	strd	lr, lr, [r1, #8]
    c2d0:	f848 3002 	str.w	r3, [r8, r2]
    c2d4:	f000 fbb2 	bl	ca3c <__malloc_unlock>
    c2d8:	f108 0408 	add.w	r4, r8, #8
    c2dc:	e002      	b.n	c2e4 <_malloc_r+0x18c>
    c2de:	230c      	movs	r3, #12
    c2e0:	2400      	movs	r4, #0
    c2e2:	6033      	str	r3, [r6, #0]
    c2e4:	4620      	mov	r0, r4
    c2e6:	b003      	add	sp, #12
    c2e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c2ec:	f44f 7000 	mov.w	r0, #512	; 0x200
    c2f0:	f04f 0c40 	mov.w	ip, #64	; 0x40
    c2f4:	243f      	movs	r4, #63	; 0x3f
    c2f6:	e777      	b.n	c1e8 <_malloc_r+0x90>
    c2f8:	68d3      	ldr	r3, [r2, #12]
    c2fa:	429a      	cmp	r2, r3
    c2fc:	bf08      	it	eq
    c2fe:	f10c 0c02 	addeq.w	ip, ip, #2
    c302:	f47f af42 	bne.w	c18a <_malloc_r+0x32>
    c306:	693c      	ldr	r4, [r7, #16]
    c308:	f8df e148 	ldr.w	lr, [pc, #328]	; c454 <_malloc_r+0x2fc>
    c30c:	4574      	cmp	r4, lr
    c30e:	d184      	bne.n	c21a <_malloc_r+0xc2>
    c310:	2101      	movs	r1, #1
    c312:	687a      	ldr	r2, [r7, #4]
    c314:	ea4f 03ac 	mov.w	r3, ip, asr #2
    c318:	4099      	lsls	r1, r3
    c31a:	4291      	cmp	r1, r2
    c31c:	d9a5      	bls.n	c26a <_malloc_r+0x112>
    c31e:	68bc      	ldr	r4, [r7, #8]
    c320:	6863      	ldr	r3, [r4, #4]
    c322:	f023 0903 	bic.w	r9, r3, #3
    c326:	454d      	cmp	r5, r9
    c328:	d803      	bhi.n	c332 <_malloc_r+0x1da>
    c32a:	eba9 0305 	sub.w	r3, r9, r5
    c32e:	2b0f      	cmp	r3, #15
    c330:	dc7a      	bgt.n	c428 <_malloc_r+0x2d0>
    c332:	f8df b124 	ldr.w	fp, [pc, #292]	; c458 <_malloc_r+0x300>
    c336:	4b49      	ldr	r3, [pc, #292]	; (c45c <_malloc_r+0x304>)
    c338:	f8db 2000 	ldr.w	r2, [fp]
    c33c:	681b      	ldr	r3, [r3, #0]
    c33e:	3201      	adds	r2, #1
    c340:	442b      	add	r3, r5
    c342:	eb04 0a09 	add.w	sl, r4, r9
    c346:	f000 812f 	beq.w	c5a8 <_malloc_r+0x450>
    c34a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    c34e:	330f      	adds	r3, #15
    c350:	f423 687f 	bic.w	r8, r3, #4080	; 0xff0
    c354:	f028 080f 	bic.w	r8, r8, #15
    c358:	4641      	mov	r1, r8
    c35a:	4630      	mov	r0, r6
    c35c:	f000 fe5e 	bl	d01c <_sbrk_r>
    c360:	1c41      	adds	r1, r0, #1
    c362:	4602      	mov	r2, r0
    c364:	f000 80ef 	beq.w	c546 <_malloc_r+0x3ee>
    c368:	4582      	cmp	sl, r0
    c36a:	f200 80ea 	bhi.w	c542 <_malloc_r+0x3ea>
    c36e:	4b3c      	ldr	r3, [pc, #240]	; (c460 <_malloc_r+0x308>)
    c370:	6819      	ldr	r1, [r3, #0]
    c372:	4441      	add	r1, r8
    c374:	4608      	mov	r0, r1
    c376:	6019      	str	r1, [r3, #0]
    c378:	f000 8149 	beq.w	c60e <_malloc_r+0x4b6>
    c37c:	f8db 1000 	ldr.w	r1, [fp]
    c380:	9301      	str	r3, [sp, #4]
    c382:	3101      	adds	r1, #1
    c384:	bf1b      	ittet	ne
    c386:	eba2 0a0a 	subne.w	sl, r2, sl
    c38a:	4450      	addne	r0, sl
    c38c:	f8cb 2000 	streq.w	r2, [fp]
    c390:	6018      	strne	r0, [r3, #0]
    c392:	f012 0b07 	ands.w	fp, r2, #7
    c396:	f000 8111 	beq.w	c5bc <_malloc_r+0x464>
    c39a:	f1cb 0108 	rsb	r1, fp, #8
    c39e:	440a      	add	r2, r1
    c3a0:	f5cb 5180 	rsb	r1, fp, #4096	; 0x1000
    c3a4:	4490      	add	r8, r2
    c3a6:	3108      	adds	r1, #8
    c3a8:	eba1 0108 	sub.w	r1, r1, r8
    c3ac:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    c3b0:	4651      	mov	r1, sl
    c3b2:	4630      	mov	r0, r6
    c3b4:	9200      	str	r2, [sp, #0]
    c3b6:	f000 fe31 	bl	d01c <_sbrk_r>
    c3ba:	1c42      	adds	r2, r0, #1
    c3bc:	e9dd 2300 	ldrd	r2, r3, [sp]
    c3c0:	f000 814b 	beq.w	c65a <_malloc_r+0x502>
    c3c4:	1a80      	subs	r0, r0, r2
    c3c6:	eb00 080a 	add.w	r8, r0, sl
    c3ca:	6819      	ldr	r1, [r3, #0]
    c3cc:	f048 0001 	orr.w	r0, r8, #1
    c3d0:	4451      	add	r1, sl
    c3d2:	42bc      	cmp	r4, r7
    c3d4:	60ba      	str	r2, [r7, #8]
    c3d6:	6019      	str	r1, [r3, #0]
    c3d8:	6050      	str	r0, [r2, #4]
    c3da:	f000 8124 	beq.w	c626 <_malloc_r+0x4ce>
    c3de:	f1b9 0f0f 	cmp.w	r9, #15
    c3e2:	f240 8122 	bls.w	c62a <_malloc_r+0x4d2>
    c3e6:	f04f 0e05 	mov.w	lr, #5
    c3ea:	6860      	ldr	r0, [r4, #4]
    c3ec:	f1a9 0c0c 	sub.w	ip, r9, #12
    c3f0:	f02c 0c07 	bic.w	ip, ip, #7
    c3f4:	f000 0001 	and.w	r0, r0, #1
    c3f8:	ea40 000c 	orr.w	r0, r0, ip
    c3fc:	6060      	str	r0, [r4, #4]
    c3fe:	f1bc 0f0f 	cmp.w	ip, #15
    c402:	eb04 000c 	add.w	r0, r4, ip
    c406:	e9c0 ee01 	strd	lr, lr, [r0, #4]
    c40a:	f200 812e 	bhi.w	c66a <_malloc_r+0x512>
    c40e:	4614      	mov	r4, r2
    c410:	6850      	ldr	r0, [r2, #4]
    c412:	4b14      	ldr	r3, [pc, #80]	; (c464 <_malloc_r+0x30c>)
    c414:	681a      	ldr	r2, [r3, #0]
    c416:	428a      	cmp	r2, r1
    c418:	bf38      	it	cc
    c41a:	6019      	strcc	r1, [r3, #0]
    c41c:	4b12      	ldr	r3, [pc, #72]	; (c468 <_malloc_r+0x310>)
    c41e:	681a      	ldr	r2, [r3, #0]
    c420:	428a      	cmp	r2, r1
    c422:	bf38      	it	cc
    c424:	6019      	strcc	r1, [r3, #0]
    c426:	e090      	b.n	c54a <_malloc_r+0x3f2>
    c428:	1962      	adds	r2, r4, r5
    c42a:	f043 0301 	orr.w	r3, r3, #1
    c42e:	f045 0501 	orr.w	r5, r5, #1
    c432:	6065      	str	r5, [r4, #4]
    c434:	4630      	mov	r0, r6
    c436:	60ba      	str	r2, [r7, #8]
    c438:	3408      	adds	r4, #8
    c43a:	6053      	str	r3, [r2, #4]
    c43c:	f000 fafe 	bl	ca3c <__malloc_unlock>
    c440:	4620      	mov	r0, r4
    c442:	b003      	add	sp, #12
    c444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c448:	68d9      	ldr	r1, [r3, #12]
    c44a:	441a      	add	r2, r3
    c44c:	e6a2      	b.n	c194 <_malloc_r+0x3c>
    c44e:	bf00      	nop
    c450:	20000550 	.word	0x20000550
    c454:	20000558 	.word	0x20000558
    c458:	20000958 	.word	0x20000958
    c45c:	20001fa0 	.word	0x20001fa0
    c460:	20001f70 	.word	0x20001f70
    c464:	20001f98 	.word	0x20001f98
    c468:	20001f9c 	.word	0x20001f9c
    c46c:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
    c470:	ea4f 2352 	mov.w	r3, r2, lsr #9
    c474:	d35f      	bcc.n	c536 <_malloc_r+0x3de>
    c476:	2b14      	cmp	r3, #20
    c478:	f200 80b1 	bhi.w	c5de <_malloc_r+0x486>
    c47c:	f103 015c 	add.w	r1, r3, #92	; 0x5c
    c480:	00c9      	lsls	r1, r1, #3
    c482:	335b      	adds	r3, #91	; 0x5b
    c484:	1878      	adds	r0, r7, r1
    c486:	5879      	ldr	r1, [r7, r1]
    c488:	3808      	subs	r0, #8
    c48a:	4288      	cmp	r0, r1
    c48c:	f000 808f 	beq.w	c5ae <_malloc_r+0x456>
    c490:	684b      	ldr	r3, [r1, #4]
    c492:	f023 0303 	bic.w	r3, r3, #3
    c496:	4293      	cmp	r3, r2
    c498:	d902      	bls.n	c4a0 <_malloc_r+0x348>
    c49a:	6889      	ldr	r1, [r1, #8]
    c49c:	4288      	cmp	r0, r1
    c49e:	d1f7      	bne.n	c490 <_malloc_r+0x338>
    c4a0:	68c8      	ldr	r0, [r1, #12]
    c4a2:	687a      	ldr	r2, [r7, #4]
    c4a4:	e9c4 1002 	strd	r1, r0, [r4, #8]
    c4a8:	6084      	str	r4, [r0, #8]
    c4aa:	60cc      	str	r4, [r1, #12]
    c4ac:	e6d7      	b.n	c25e <_malloc_r+0x106>
    c4ae:	2b14      	cmp	r3, #20
    c4b0:	d959      	bls.n	c566 <_malloc_r+0x40e>
    c4b2:	2b54      	cmp	r3, #84	; 0x54
    c4b4:	f200 809b 	bhi.w	c5ee <_malloc_r+0x496>
    c4b8:	0b2b      	lsrs	r3, r5, #12
    c4ba:	f103 0c6f 	add.w	ip, r3, #111	; 0x6f
    c4be:	f103 046e 	add.w	r4, r3, #110	; 0x6e
    c4c2:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c4c6:	e68f      	b.n	c1e8 <_malloc_r+0x90>
    c4c8:	3401      	adds	r4, #1
    c4ca:	07a3      	lsls	r3, r4, #30
    c4cc:	f100 0008 	add.w	r0, r0, #8
    c4d0:	f47f aed8 	bne.w	c284 <_malloc_r+0x12c>
    c4d4:	e053      	b.n	c57e <_malloc_r+0x426>
    c4d6:	4644      	mov	r4, r8
    c4d8:	4442      	add	r2, r8
    c4da:	6853      	ldr	r3, [r2, #4]
    c4dc:	f8d8 100c 	ldr.w	r1, [r8, #12]
    c4e0:	f043 0301 	orr.w	r3, r3, #1
    c4e4:	6053      	str	r3, [r2, #4]
    c4e6:	f854 3f08 	ldr.w	r3, [r4, #8]!
    c4ea:	4630      	mov	r0, r6
    c4ec:	60d9      	str	r1, [r3, #12]
    c4ee:	608b      	str	r3, [r1, #8]
    c4f0:	f000 faa4 	bl	ca3c <__malloc_unlock>
    c4f4:	e6f6      	b.n	c2e4 <_malloc_r+0x18c>
    c4f6:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
    c4fa:	f105 0208 	add.w	r2, r5, #8
    c4fe:	e63c      	b.n	c17a <_malloc_r+0x22>
    c500:	4422      	add	r2, r4
    c502:	6853      	ldr	r3, [r2, #4]
    c504:	4630      	mov	r0, r6
    c506:	f043 0301 	orr.w	r3, r3, #1
    c50a:	6053      	str	r3, [r2, #4]
    c50c:	f000 fa96 	bl	ca3c <__malloc_unlock>
    c510:	3408      	adds	r4, #8
    c512:	e6e7      	b.n	c2e4 <_malloc_r+0x18c>
    c514:	1961      	adds	r1, r4, r5
    c516:	f045 0501 	orr.w	r5, r5, #1
    c51a:	6065      	str	r5, [r4, #4]
    c51c:	f043 0501 	orr.w	r5, r3, #1
    c520:	e9c7 1104 	strd	r1, r1, [r7, #16]
    c524:	4630      	mov	r0, r6
    c526:	e9c1 ee02 	strd	lr, lr, [r1, #8]
    c52a:	604d      	str	r5, [r1, #4]
    c52c:	50a3      	str	r3, [r4, r2]
    c52e:	f000 fa85 	bl	ca3c <__malloc_unlock>
    c532:	3408      	adds	r4, #8
    c534:	e6d6      	b.n	c2e4 <_malloc_r+0x18c>
    c536:	0993      	lsrs	r3, r2, #6
    c538:	f103 0139 	add.w	r1, r3, #57	; 0x39
    c53c:	00c9      	lsls	r1, r1, #3
    c53e:	3338      	adds	r3, #56	; 0x38
    c540:	e7a0      	b.n	c484 <_malloc_r+0x32c>
    c542:	42bc      	cmp	r4, r7
    c544:	d05e      	beq.n	c604 <_malloc_r+0x4ac>
    c546:	68bc      	ldr	r4, [r7, #8]
    c548:	6860      	ldr	r0, [r4, #4]
    c54a:	f020 0803 	bic.w	r8, r0, #3
    c54e:	4545      	cmp	r5, r8
    c550:	eba8 0305 	sub.w	r3, r8, r5
    c554:	d802      	bhi.n	c55c <_malloc_r+0x404>
    c556:	2b0f      	cmp	r3, #15
    c558:	f73f af66 	bgt.w	c428 <_malloc_r+0x2d0>
    c55c:	4630      	mov	r0, r6
    c55e:	f000 fa6d 	bl	ca3c <__malloc_unlock>
    c562:	2400      	movs	r4, #0
    c564:	e6be      	b.n	c2e4 <_malloc_r+0x18c>
    c566:	f103 0c5c 	add.w	ip, r3, #92	; 0x5c
    c56a:	f103 045b 	add.w	r4, r3, #91	; 0x5b
    c56e:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c572:	e639      	b.n	c1e8 <_malloc_r+0x90>
    c574:	f859 3908 	ldr.w	r3, [r9], #-8
    c578:	454b      	cmp	r3, r9
    c57a:	f040 8095 	bne.w	c6a8 <_malloc_r+0x550>
    c57e:	f01c 0f03 	tst.w	ip, #3
    c582:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
    c586:	d1f5      	bne.n	c574 <_malloc_r+0x41c>
    c588:	687b      	ldr	r3, [r7, #4]
    c58a:	ea23 0301 	bic.w	r3, r3, r1
    c58e:	607b      	str	r3, [r7, #4]
    c590:	0049      	lsls	r1, r1, #1
    c592:	4299      	cmp	r1, r3
    c594:	f63f aec3 	bhi.w	c31e <_malloc_r+0x1c6>
    c598:	b911      	cbnz	r1, c5a0 <_malloc_r+0x448>
    c59a:	e6c0      	b.n	c31e <_malloc_r+0x1c6>
    c59c:	0049      	lsls	r1, r1, #1
    c59e:	3404      	adds	r4, #4
    c5a0:	4219      	tst	r1, r3
    c5a2:	d0fb      	beq.n	c59c <_malloc_r+0x444>
    c5a4:	46a4      	mov	ip, r4
    c5a6:	e669      	b.n	c27c <_malloc_r+0x124>
    c5a8:	f103 0810 	add.w	r8, r3, #16
    c5ac:	e6d4      	b.n	c358 <_malloc_r+0x200>
    c5ae:	2201      	movs	r2, #1
    c5b0:	109b      	asrs	r3, r3, #2
    c5b2:	409a      	lsls	r2, r3
    c5b4:	687b      	ldr	r3, [r7, #4]
    c5b6:	431a      	orrs	r2, r3
    c5b8:	607a      	str	r2, [r7, #4]
    c5ba:	e773      	b.n	c4a4 <_malloc_r+0x34c>
    c5bc:	eb02 0108 	add.w	r1, r2, r8
    c5c0:	4249      	negs	r1, r1
    c5c2:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    c5c6:	4651      	mov	r1, sl
    c5c8:	4630      	mov	r0, r6
    c5ca:	9200      	str	r2, [sp, #0]
    c5cc:	f000 fd26 	bl	d01c <_sbrk_r>
    c5d0:	1c43      	adds	r3, r0, #1
    c5d2:	e9dd 2300 	ldrd	r2, r3, [sp]
    c5d6:	f47f aef5 	bne.w	c3c4 <_malloc_r+0x26c>
    c5da:	46da      	mov	sl, fp
    c5dc:	e6f5      	b.n	c3ca <_malloc_r+0x272>
    c5de:	2b54      	cmp	r3, #84	; 0x54
    c5e0:	d826      	bhi.n	c630 <_malloc_r+0x4d8>
    c5e2:	0b13      	lsrs	r3, r2, #12
    c5e4:	f103 016f 	add.w	r1, r3, #111	; 0x6f
    c5e8:	00c9      	lsls	r1, r1, #3
    c5ea:	336e      	adds	r3, #110	; 0x6e
    c5ec:	e74a      	b.n	c484 <_malloc_r+0x32c>
    c5ee:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    c5f2:	d826      	bhi.n	c642 <_malloc_r+0x4ea>
    c5f4:	0beb      	lsrs	r3, r5, #15
    c5f6:	f103 0c78 	add.w	ip, r3, #120	; 0x78
    c5fa:	f103 0477 	add.w	r4, r3, #119	; 0x77
    c5fe:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c602:	e5f1      	b.n	c1e8 <_malloc_r+0x90>
    c604:	4b29      	ldr	r3, [pc, #164]	; (c6ac <_malloc_r+0x554>)
    c606:	6818      	ldr	r0, [r3, #0]
    c608:	4440      	add	r0, r8
    c60a:	6018      	str	r0, [r3, #0]
    c60c:	e6b6      	b.n	c37c <_malloc_r+0x224>
    c60e:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
    c612:	f1bc 0f00 	cmp.w	ip, #0
    c616:	f47f aeb1 	bne.w	c37c <_malloc_r+0x224>
    c61a:	68bc      	ldr	r4, [r7, #8]
    c61c:	44c8      	add	r8, r9
    c61e:	f048 0001 	orr.w	r0, r8, #1
    c622:	6060      	str	r0, [r4, #4]
    c624:	e6f5      	b.n	c412 <_malloc_r+0x2ba>
    c626:	4614      	mov	r4, r2
    c628:	e6f3      	b.n	c412 <_malloc_r+0x2ba>
    c62a:	2301      	movs	r3, #1
    c62c:	6053      	str	r3, [r2, #4]
    c62e:	e795      	b.n	c55c <_malloc_r+0x404>
    c630:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    c634:	d824      	bhi.n	c680 <_malloc_r+0x528>
    c636:	0bd3      	lsrs	r3, r2, #15
    c638:	f103 0178 	add.w	r1, r3, #120	; 0x78
    c63c:	00c9      	lsls	r1, r1, #3
    c63e:	3377      	adds	r3, #119	; 0x77
    c640:	e720      	b.n	c484 <_malloc_r+0x32c>
    c642:	f240 5254 	movw	r2, #1364	; 0x554
    c646:	4293      	cmp	r3, r2
    c648:	d824      	bhi.n	c694 <_malloc_r+0x53c>
    c64a:	0cab      	lsrs	r3, r5, #18
    c64c:	f103 0c7d 	add.w	ip, r3, #125	; 0x7d
    c650:	f103 047c 	add.w	r4, r3, #124	; 0x7c
    c654:	ea4f 00cc 	mov.w	r0, ip, lsl #3
    c658:	e5c6      	b.n	c1e8 <_malloc_r+0x90>
    c65a:	f1ab 0b08 	sub.w	fp, fp, #8
    c65e:	44d8      	add	r8, fp
    c660:	f04f 0a00 	mov.w	sl, #0
    c664:	eba8 0802 	sub.w	r8, r8, r2
    c668:	e6af      	b.n	c3ca <_malloc_r+0x272>
    c66a:	f104 0108 	add.w	r1, r4, #8
    c66e:	4630      	mov	r0, r6
    c670:	9300      	str	r3, [sp, #0]
    c672:	f006 ff63 	bl	1353c <_free_r>
    c676:	68bc      	ldr	r4, [r7, #8]
    c678:	9b00      	ldr	r3, [sp, #0]
    c67a:	6860      	ldr	r0, [r4, #4]
    c67c:	6819      	ldr	r1, [r3, #0]
    c67e:	e6c8      	b.n	c412 <_malloc_r+0x2ba>
    c680:	f240 5154 	movw	r1, #1364	; 0x554
    c684:	428b      	cmp	r3, r1
    c686:	d80b      	bhi.n	c6a0 <_malloc_r+0x548>
    c688:	0c93      	lsrs	r3, r2, #18
    c68a:	f103 017d 	add.w	r1, r3, #125	; 0x7d
    c68e:	00c9      	lsls	r1, r1, #3
    c690:	337c      	adds	r3, #124	; 0x7c
    c692:	e6f7      	b.n	c484 <_malloc_r+0x32c>
    c694:	f44f 707e 	mov.w	r0, #1016	; 0x3f8
    c698:	f04f 0c7f 	mov.w	ip, #127	; 0x7f
    c69c:	247e      	movs	r4, #126	; 0x7e
    c69e:	e5a3      	b.n	c1e8 <_malloc_r+0x90>
    c6a0:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
    c6a4:	237e      	movs	r3, #126	; 0x7e
    c6a6:	e6ed      	b.n	c484 <_malloc_r+0x32c>
    c6a8:	687b      	ldr	r3, [r7, #4]
    c6aa:	e771      	b.n	c590 <_malloc_r+0x438>
    c6ac:	20001f70 	.word	0x20001f70

0000c6b0 <memchr>:
    c6b0:	fa5f fc81 	uxtb.w	ip, r1
    c6b4:	0781      	lsls	r1, r0, #30
    c6b6:	d010      	beq.n	c6da <memchr+0x2a>
    c6b8:	4603      	mov	r3, r0
    c6ba:	1e51      	subs	r1, r2, #1
    c6bc:	b92a      	cbnz	r2, c6ca <memchr+0x1a>
    c6be:	e00a      	b.n	c6d6 <memchr+0x26>
    c6c0:	079a      	lsls	r2, r3, #30
    c6c2:	4618      	mov	r0, r3
    c6c4:	d00a      	beq.n	c6dc <memchr+0x2c>
    c6c6:	3901      	subs	r1, #1
    c6c8:	d305      	bcc.n	c6d6 <memchr+0x26>
    c6ca:	4618      	mov	r0, r3
    c6cc:	f813 2b01 	ldrb.w	r2, [r3], #1
    c6d0:	4562      	cmp	r2, ip
    c6d2:	d1f5      	bne.n	c6c0 <memchr+0x10>
    c6d4:	4770      	bx	lr
    c6d6:	2000      	movs	r0, #0
    c6d8:	4770      	bx	lr
    c6da:	4611      	mov	r1, r2
    c6dc:	2903      	cmp	r1, #3
    c6de:	d80c      	bhi.n	c6fa <memchr+0x4a>
    c6e0:	2900      	cmp	r1, #0
    c6e2:	d0f8      	beq.n	c6d6 <memchr+0x26>
    c6e4:	4603      	mov	r3, r0
    c6e6:	4401      	add	r1, r0
    c6e8:	e001      	b.n	c6ee <memchr+0x3e>
    c6ea:	428b      	cmp	r3, r1
    c6ec:	d0f3      	beq.n	c6d6 <memchr+0x26>
    c6ee:	4618      	mov	r0, r3
    c6f0:	f813 2b01 	ldrb.w	r2, [r3], #1
    c6f4:	4562      	cmp	r2, ip
    c6f6:	d1f8      	bne.n	c6ea <memchr+0x3a>
    c6f8:	e7ec      	b.n	c6d4 <memchr+0x24>
    c6fa:	4602      	mov	r2, r0
    c6fc:	b510      	push	{r4, lr}
    c6fe:	ea4c 240c 	orr.w	r4, ip, ip, lsl #8
    c702:	ea44 4404 	orr.w	r4, r4, r4, lsl #16
    c706:	4610      	mov	r0, r2
    c708:	6803      	ldr	r3, [r0, #0]
    c70a:	3204      	adds	r2, #4
    c70c:	4063      	eors	r3, r4
    c70e:	f1a3 3e01 	sub.w	lr, r3, #16843009	; 0x1010101
    c712:	ea2e 0303 	bic.w	r3, lr, r3
    c716:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
    c71a:	d104      	bne.n	c726 <memchr+0x76>
    c71c:	3904      	subs	r1, #4
    c71e:	2903      	cmp	r1, #3
    c720:	4610      	mov	r0, r2
    c722:	d8f0      	bhi.n	c706 <memchr+0x56>
    c724:	b151      	cbz	r1, c73c <memchr+0x8c>
    c726:	4603      	mov	r3, r0
    c728:	4401      	add	r1, r0
    c72a:	e001      	b.n	c730 <memchr+0x80>
    c72c:	428b      	cmp	r3, r1
    c72e:	d005      	beq.n	c73c <memchr+0x8c>
    c730:	4618      	mov	r0, r3
    c732:	f813 2b01 	ldrb.w	r2, [r3], #1
    c736:	4562      	cmp	r2, ip
    c738:	d1f8      	bne.n	c72c <memchr+0x7c>
    c73a:	bd10      	pop	{r4, pc}
    c73c:	2000      	movs	r0, #0
    c73e:	bd10      	pop	{r4, pc}

0000c740 <memcmp>:
    c740:	2a03      	cmp	r2, #3
    c742:	b510      	push	{r4, lr}
    c744:	d916      	bls.n	c774 <memcmp+0x34>
    c746:	ea40 0c01 	orr.w	ip, r0, r1
    c74a:	f01c 0f03 	tst.w	ip, #3
    c74e:	4604      	mov	r4, r0
    c750:	460b      	mov	r3, r1
    c752:	d122      	bne.n	c79a <memcmp+0x5a>
    c754:	4619      	mov	r1, r3
    c756:	4620      	mov	r0, r4
    c758:	f8d1 e000 	ldr.w	lr, [r1]
    c75c:	f8d0 c000 	ldr.w	ip, [r0]
    c760:	3304      	adds	r3, #4
    c762:	45f4      	cmp	ip, lr
    c764:	f104 0404 	add.w	r4, r4, #4
    c768:	d117      	bne.n	c79a <memcmp+0x5a>
    c76a:	3a04      	subs	r2, #4
    c76c:	2a03      	cmp	r2, #3
    c76e:	4620      	mov	r0, r4
    c770:	4619      	mov	r1, r3
    c772:	d8ef      	bhi.n	c754 <memcmp+0x14>
    c774:	1e54      	subs	r4, r2, #1
    c776:	b1a2      	cbz	r2, c7a2 <memcmp+0x62>
    c778:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
    c77c:	3901      	subs	r1, #1
    c77e:	e001      	b.n	c784 <memcmp+0x44>
    c780:	18c3      	adds	r3, r0, r3
    c782:	d00c      	beq.n	c79e <memcmp+0x5e>
    c784:	f81c ef01 	ldrb.w	lr, [ip, #1]!
    c788:	f811 2f01 	ldrb.w	r2, [r1, #1]!
    c78c:	eba4 030c 	sub.w	r3, r4, ip
    c790:	4596      	cmp	lr, r2
    c792:	d0f5      	beq.n	c780 <memcmp+0x40>
    c794:	ebae 0002 	sub.w	r0, lr, r2
    c798:	bd10      	pop	{r4, pc}
    c79a:	1e54      	subs	r4, r2, #1
    c79c:	e7ec      	b.n	c778 <memcmp+0x38>
    c79e:	4618      	mov	r0, r3
    c7a0:	bd10      	pop	{r4, pc}
    c7a2:	4610      	mov	r0, r2
    c7a4:	bd10      	pop	{r4, pc}
    c7a6:	bf00      	nop

0000c7a8 <memcpy>:
    c7a8:	4684      	mov	ip, r0
    c7aa:	ea41 0300 	orr.w	r3, r1, r0
    c7ae:	f013 0303 	ands.w	r3, r3, #3
    c7b2:	d149      	bne.n	c848 <memcpy+0xa0>
    c7b4:	3a40      	subs	r2, #64	; 0x40
    c7b6:	d323      	bcc.n	c800 <memcpy+0x58>
    c7b8:	680b      	ldr	r3, [r1, #0]
    c7ba:	6003      	str	r3, [r0, #0]
    c7bc:	684b      	ldr	r3, [r1, #4]
    c7be:	6043      	str	r3, [r0, #4]
    c7c0:	688b      	ldr	r3, [r1, #8]
    c7c2:	6083      	str	r3, [r0, #8]
    c7c4:	68cb      	ldr	r3, [r1, #12]
    c7c6:	60c3      	str	r3, [r0, #12]
    c7c8:	690b      	ldr	r3, [r1, #16]
    c7ca:	6103      	str	r3, [r0, #16]
    c7cc:	694b      	ldr	r3, [r1, #20]
    c7ce:	6143      	str	r3, [r0, #20]
    c7d0:	698b      	ldr	r3, [r1, #24]
    c7d2:	6183      	str	r3, [r0, #24]
    c7d4:	69cb      	ldr	r3, [r1, #28]
    c7d6:	61c3      	str	r3, [r0, #28]
    c7d8:	6a0b      	ldr	r3, [r1, #32]
    c7da:	6203      	str	r3, [r0, #32]
    c7dc:	6a4b      	ldr	r3, [r1, #36]	; 0x24
    c7de:	6243      	str	r3, [r0, #36]	; 0x24
    c7e0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
    c7e2:	6283      	str	r3, [r0, #40]	; 0x28
    c7e4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
    c7e6:	62c3      	str	r3, [r0, #44]	; 0x2c
    c7e8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
    c7ea:	6303      	str	r3, [r0, #48]	; 0x30
    c7ec:	6b4b      	ldr	r3, [r1, #52]	; 0x34
    c7ee:	6343      	str	r3, [r0, #52]	; 0x34
    c7f0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
    c7f2:	6383      	str	r3, [r0, #56]	; 0x38
    c7f4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
    c7f6:	63c3      	str	r3, [r0, #60]	; 0x3c
    c7f8:	3040      	adds	r0, #64	; 0x40
    c7fa:	3140      	adds	r1, #64	; 0x40
    c7fc:	3a40      	subs	r2, #64	; 0x40
    c7fe:	d2db      	bcs.n	c7b8 <memcpy+0x10>
    c800:	3230      	adds	r2, #48	; 0x30
    c802:	d30b      	bcc.n	c81c <memcpy+0x74>
    c804:	680b      	ldr	r3, [r1, #0]
    c806:	6003      	str	r3, [r0, #0]
    c808:	684b      	ldr	r3, [r1, #4]
    c80a:	6043      	str	r3, [r0, #4]
    c80c:	688b      	ldr	r3, [r1, #8]
    c80e:	6083      	str	r3, [r0, #8]
    c810:	68cb      	ldr	r3, [r1, #12]
    c812:	60c3      	str	r3, [r0, #12]
    c814:	3010      	adds	r0, #16
    c816:	3110      	adds	r1, #16
    c818:	3a10      	subs	r2, #16
    c81a:	d2f3      	bcs.n	c804 <memcpy+0x5c>
    c81c:	320c      	adds	r2, #12
    c81e:	d305      	bcc.n	c82c <memcpy+0x84>
    c820:	f851 3b04 	ldr.w	r3, [r1], #4
    c824:	f840 3b04 	str.w	r3, [r0], #4
    c828:	3a04      	subs	r2, #4
    c82a:	d2f9      	bcs.n	c820 <memcpy+0x78>
    c82c:	3204      	adds	r2, #4
    c82e:	d008      	beq.n	c842 <memcpy+0x9a>
    c830:	07d2      	lsls	r2, r2, #31
    c832:	bf1c      	itt	ne
    c834:	f811 3b01 	ldrbne.w	r3, [r1], #1
    c838:	f800 3b01 	strbne.w	r3, [r0], #1
    c83c:	d301      	bcc.n	c842 <memcpy+0x9a>
    c83e:	880b      	ldrh	r3, [r1, #0]
    c840:	8003      	strh	r3, [r0, #0]
    c842:	4660      	mov	r0, ip
    c844:	4770      	bx	lr
    c846:	bf00      	nop
    c848:	2a08      	cmp	r2, #8
    c84a:	d313      	bcc.n	c874 <memcpy+0xcc>
    c84c:	078b      	lsls	r3, r1, #30
    c84e:	d0b1      	beq.n	c7b4 <memcpy+0xc>
    c850:	f010 0303 	ands.w	r3, r0, #3
    c854:	d0ae      	beq.n	c7b4 <memcpy+0xc>
    c856:	f1c3 0304 	rsb	r3, r3, #4
    c85a:	1ad2      	subs	r2, r2, r3
    c85c:	07db      	lsls	r3, r3, #31
    c85e:	bf1c      	itt	ne
    c860:	f811 3b01 	ldrbne.w	r3, [r1], #1
    c864:	f800 3b01 	strbne.w	r3, [r0], #1
    c868:	d3a4      	bcc.n	c7b4 <memcpy+0xc>
    c86a:	f831 3b02 	ldrh.w	r3, [r1], #2
    c86e:	f820 3b02 	strh.w	r3, [r0], #2
    c872:	e79f      	b.n	c7b4 <memcpy+0xc>
    c874:	3a04      	subs	r2, #4
    c876:	d3d9      	bcc.n	c82c <memcpy+0x84>
    c878:	3a01      	subs	r2, #1
    c87a:	f811 3b01 	ldrb.w	r3, [r1], #1
    c87e:	f800 3b01 	strb.w	r3, [r0], #1
    c882:	d2f9      	bcs.n	c878 <memcpy+0xd0>
    c884:	780b      	ldrb	r3, [r1, #0]
    c886:	7003      	strb	r3, [r0, #0]
    c888:	784b      	ldrb	r3, [r1, #1]
    c88a:	7043      	strb	r3, [r0, #1]
    c88c:	788b      	ldrb	r3, [r1, #2]
    c88e:	7083      	strb	r3, [r0, #2]
    c890:	4660      	mov	r0, ip
    c892:	4770      	bx	lr

0000c894 <memmove>:
    c894:	4288      	cmp	r0, r1
    c896:	d90d      	bls.n	c8b4 <memmove+0x20>
    c898:	188b      	adds	r3, r1, r2
    c89a:	4283      	cmp	r3, r0
    c89c:	d90a      	bls.n	c8b4 <memmove+0x20>
    c89e:	eb00 0c02 	add.w	ip, r0, r2
    c8a2:	b1ba      	cbz	r2, c8d4 <memmove+0x40>
    c8a4:	4662      	mov	r2, ip
    c8a6:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
    c8aa:	4299      	cmp	r1, r3
    c8ac:	f802 cd01 	strb.w	ip, [r2, #-1]!
    c8b0:	d1f9      	bne.n	c8a6 <memmove+0x12>
    c8b2:	4770      	bx	lr
    c8b4:	2a0f      	cmp	r2, #15
    c8b6:	d80e      	bhi.n	c8d6 <memmove+0x42>
    c8b8:	4603      	mov	r3, r0
    c8ba:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    c8be:	b14a      	cbz	r2, c8d4 <memmove+0x40>
    c8c0:	f10c 0c01 	add.w	ip, ip, #1
    c8c4:	3b01      	subs	r3, #1
    c8c6:	448c      	add	ip, r1
    c8c8:	f811 2b01 	ldrb.w	r2, [r1], #1
    c8cc:	4561      	cmp	r1, ip
    c8ce:	f803 2f01 	strb.w	r2, [r3, #1]!
    c8d2:	d1f9      	bne.n	c8c8 <memmove+0x34>
    c8d4:	4770      	bx	lr
    c8d6:	ea40 0301 	orr.w	r3, r0, r1
    c8da:	079b      	lsls	r3, r3, #30
    c8dc:	d14f      	bne.n	c97e <memmove+0xea>
    c8de:	f1a2 0310 	sub.w	r3, r2, #16
    c8e2:	b570      	push	{r4, r5, r6, lr}
    c8e4:	f101 0c20 	add.w	ip, r1, #32
    c8e8:	f023 050f 	bic.w	r5, r3, #15
    c8ec:	f101 0e10 	add.w	lr, r1, #16
    c8f0:	f100 0410 	add.w	r4, r0, #16
    c8f4:	44ac      	add	ip, r5
    c8f6:	091b      	lsrs	r3, r3, #4
    c8f8:	f85e 5c10 	ldr.w	r5, [lr, #-16]
    c8fc:	f10e 0e10 	add.w	lr, lr, #16
    c900:	f844 5c10 	str.w	r5, [r4, #-16]
    c904:	f85e 5c1c 	ldr.w	r5, [lr, #-28]
    c908:	3410      	adds	r4, #16
    c90a:	f844 5c1c 	str.w	r5, [r4, #-28]
    c90e:	f85e 5c18 	ldr.w	r5, [lr, #-24]
    c912:	f844 5c18 	str.w	r5, [r4, #-24]
    c916:	f85e 5c14 	ldr.w	r5, [lr, #-20]
    c91a:	45e6      	cmp	lr, ip
    c91c:	f844 5c14 	str.w	r5, [r4, #-20]
    c920:	d1ea      	bne.n	c8f8 <memmove+0x64>
    c922:	3301      	adds	r3, #1
    c924:	f012 0f0c 	tst.w	r2, #12
    c928:	eb01 1103 	add.w	r1, r1, r3, lsl #4
    c92c:	f002 040f 	and.w	r4, r2, #15
    c930:	eb00 1303 	add.w	r3, r0, r3, lsl #4
    c934:	d027      	beq.n	c986 <memmove+0xf2>
    c936:	468e      	mov	lr, r1
    c938:	3c04      	subs	r4, #4
    c93a:	f024 0603 	bic.w	r6, r4, #3
    c93e:	ea4f 0c94 	mov.w	ip, r4, lsr #2
    c942:	441e      	add	r6, r3
    c944:	1f1c      	subs	r4, r3, #4
    c946:	f85e 5b04 	ldr.w	r5, [lr], #4
    c94a:	f844 5f04 	str.w	r5, [r4, #4]!
    c94e:	42b4      	cmp	r4, r6
    c950:	d1f9      	bne.n	c946 <memmove+0xb2>
    c952:	f10c 0401 	add.w	r4, ip, #1
    c956:	f002 0203 	and.w	r2, r2, #3
    c95a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
    c95e:	eb01 0184 	add.w	r1, r1, r4, lsl #2
    c962:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    c966:	b14a      	cbz	r2, c97c <memmove+0xe8>
    c968:	f10c 0c01 	add.w	ip, ip, #1
    c96c:	3b01      	subs	r3, #1
    c96e:	448c      	add	ip, r1
    c970:	f811 2b01 	ldrb.w	r2, [r1], #1
    c974:	4561      	cmp	r1, ip
    c976:	f803 2f01 	strb.w	r2, [r3, #1]!
    c97a:	d1f9      	bne.n	c970 <memmove+0xdc>
    c97c:	bd70      	pop	{r4, r5, r6, pc}
    c97e:	4603      	mov	r3, r0
    c980:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    c984:	e79c      	b.n	c8c0 <memmove+0x2c>
    c986:	4622      	mov	r2, r4
    c988:	e7eb      	b.n	c962 <memmove+0xce>
    c98a:	bf00      	nop

0000c98c <memset>:
    c98c:	0783      	lsls	r3, r0, #30
    c98e:	b530      	push	{r4, r5, lr}
    c990:	d048      	beq.n	ca24 <memset+0x98>
    c992:	1e54      	subs	r4, r2, #1
    c994:	2a00      	cmp	r2, #0
    c996:	d03f      	beq.n	ca18 <memset+0x8c>
    c998:	4603      	mov	r3, r0
    c99a:	b2ca      	uxtb	r2, r1
    c99c:	e001      	b.n	c9a2 <memset+0x16>
    c99e:	3c01      	subs	r4, #1
    c9a0:	d33a      	bcc.n	ca18 <memset+0x8c>
    c9a2:	f803 2b01 	strb.w	r2, [r3], #1
    c9a6:	079d      	lsls	r5, r3, #30
    c9a8:	d1f9      	bne.n	c99e <memset+0x12>
    c9aa:	2c03      	cmp	r4, #3
    c9ac:	d92d      	bls.n	ca0a <memset+0x7e>
    c9ae:	b2cd      	uxtb	r5, r1
    c9b0:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
    c9b4:	2c0f      	cmp	r4, #15
    c9b6:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
    c9ba:	d936      	bls.n	ca2a <memset+0x9e>
    c9bc:	f1a4 0210 	sub.w	r2, r4, #16
    c9c0:	f022 0c0f 	bic.w	ip, r2, #15
    c9c4:	f103 0e20 	add.w	lr, r3, #32
    c9c8:	44e6      	add	lr, ip
    c9ca:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    c9ce:	f103 0210 	add.w	r2, r3, #16
    c9d2:	e942 5504 	strd	r5, r5, [r2, #-16]
    c9d6:	e942 5502 	strd	r5, r5, [r2, #-8]
    c9da:	3210      	adds	r2, #16
    c9dc:	4572      	cmp	r2, lr
    c9de:	d1f8      	bne.n	c9d2 <memset+0x46>
    c9e0:	f10c 0201 	add.w	r2, ip, #1
    c9e4:	f014 0f0c 	tst.w	r4, #12
    c9e8:	eb03 1202 	add.w	r2, r3, r2, lsl #4
    c9ec:	f004 0c0f 	and.w	ip, r4, #15
    c9f0:	d013      	beq.n	ca1a <memset+0x8e>
    c9f2:	f1ac 0304 	sub.w	r3, ip, #4
    c9f6:	f023 0303 	bic.w	r3, r3, #3
    c9fa:	3304      	adds	r3, #4
    c9fc:	4413      	add	r3, r2
    c9fe:	f842 5b04 	str.w	r5, [r2], #4
    ca02:	4293      	cmp	r3, r2
    ca04:	d1fb      	bne.n	c9fe <memset+0x72>
    ca06:	f00c 0403 	and.w	r4, ip, #3
    ca0a:	b12c      	cbz	r4, ca18 <memset+0x8c>
    ca0c:	b2ca      	uxtb	r2, r1
    ca0e:	441c      	add	r4, r3
    ca10:	f803 2b01 	strb.w	r2, [r3], #1
    ca14:	429c      	cmp	r4, r3
    ca16:	d1fb      	bne.n	ca10 <memset+0x84>
    ca18:	bd30      	pop	{r4, r5, pc}
    ca1a:	4664      	mov	r4, ip
    ca1c:	4613      	mov	r3, r2
    ca1e:	2c00      	cmp	r4, #0
    ca20:	d1f4      	bne.n	ca0c <memset+0x80>
    ca22:	e7f9      	b.n	ca18 <memset+0x8c>
    ca24:	4603      	mov	r3, r0
    ca26:	4614      	mov	r4, r2
    ca28:	e7bf      	b.n	c9aa <memset+0x1e>
    ca2a:	461a      	mov	r2, r3
    ca2c:	46a4      	mov	ip, r4
    ca2e:	e7e0      	b.n	c9f2 <memset+0x66>

0000ca30 <__malloc_lock>:
    ca30:	4801      	ldr	r0, [pc, #4]	; (ca38 <__malloc_lock+0x8>)
    ca32:	f7ff bb77 	b.w	c124 <__retarget_lock_acquire_recursive>
    ca36:	bf00      	nop
    ca38:	20001f60 	.word	0x20001f60

0000ca3c <__malloc_unlock>:
    ca3c:	4801      	ldr	r0, [pc, #4]	; (ca44 <__malloc_unlock+0x8>)
    ca3e:	f7ff bb79 	b.w	c134 <__retarget_lock_release_recursive>
    ca42:	bf00      	nop
    ca44:	20001f60 	.word	0x20001f60

0000ca48 <_printf_r>:
    ca48:	b40e      	push	{r1, r2, r3}
    ca4a:	b500      	push	{lr}
    ca4c:	b082      	sub	sp, #8
    ca4e:	ab03      	add	r3, sp, #12
    ca50:	f853 2b04 	ldr.w	r2, [r3], #4
    ca54:	6881      	ldr	r1, [r0, #8]
    ca56:	9301      	str	r3, [sp, #4]
    ca58:	f003 fa9a 	bl	ff90 <_vfprintf_r>
    ca5c:	b002      	add	sp, #8
    ca5e:	f85d eb04 	ldr.w	lr, [sp], #4
    ca62:	b003      	add	sp, #12
    ca64:	4770      	bx	lr
    ca66:	bf00      	nop

0000ca68 <printf>:
    ca68:	b40f      	push	{r0, r1, r2, r3}
    ca6a:	b500      	push	{lr}
    ca6c:	4a07      	ldr	r2, [pc, #28]	; (ca8c <printf+0x24>)
    ca6e:	b083      	sub	sp, #12
    ca70:	ab04      	add	r3, sp, #16
    ca72:	6810      	ldr	r0, [r2, #0]
    ca74:	f853 2b04 	ldr.w	r2, [r3], #4
    ca78:	6881      	ldr	r1, [r0, #8]
    ca7a:	9301      	str	r3, [sp, #4]
    ca7c:	f003 fa88 	bl	ff90 <_vfprintf_r>
    ca80:	b003      	add	sp, #12
    ca82:	f85d eb04 	ldr.w	lr, [sp], #4
    ca86:	b004      	add	sp, #16
    ca88:	4770      	bx	lr
    ca8a:	bf00      	nop
    ca8c:	20000124 	.word	0x20000124

0000ca90 <_putc_r>:
    ca90:	b570      	push	{r4, r5, r6, lr}
    ca92:	4605      	mov	r5, r0
    ca94:	460e      	mov	r6, r1
    ca96:	4614      	mov	r4, r2
    ca98:	b108      	cbz	r0, ca9e <_putc_r+0xe>
    ca9a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    ca9c:	b1eb      	cbz	r3, cada <_putc_r+0x4a>
    ca9e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    caa0:	07d8      	lsls	r0, r3, #31
    caa2:	d402      	bmi.n	caaa <_putc_r+0x1a>
    caa4:	89a3      	ldrh	r3, [r4, #12]
    caa6:	0599      	lsls	r1, r3, #22
    caa8:	d523      	bpl.n	caf2 <_putc_r+0x62>
    caaa:	68a3      	ldr	r3, [r4, #8]
    caac:	3b01      	subs	r3, #1
    caae:	2b00      	cmp	r3, #0
    cab0:	60a3      	str	r3, [r4, #8]
    cab2:	da1c      	bge.n	caee <_putc_r+0x5e>
    cab4:	69a2      	ldr	r2, [r4, #24]
    cab6:	4293      	cmp	r3, r2
    cab8:	db12      	blt.n	cae0 <_putc_r+0x50>
    caba:	b2f0      	uxtb	r0, r6
    cabc:	280a      	cmp	r0, #10
    cabe:	d00f      	beq.n	cae0 <_putc_r+0x50>
    cac0:	4605      	mov	r5, r0
    cac2:	6823      	ldr	r3, [r4, #0]
    cac4:	1c5a      	adds	r2, r3, #1
    cac6:	6022      	str	r2, [r4, #0]
    cac8:	701e      	strb	r6, [r3, #0]
    caca:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cacc:	07da      	lsls	r2, r3, #31
    cace:	d402      	bmi.n	cad6 <_putc_r+0x46>
    cad0:	89a3      	ldrh	r3, [r4, #12]
    cad2:	059b      	lsls	r3, r3, #22
    cad4:	d511      	bpl.n	cafa <_putc_r+0x6a>
    cad6:	4628      	mov	r0, r5
    cad8:	bd70      	pop	{r4, r5, r6, pc}
    cada:	f006 fae5 	bl	130a8 <__sinit>
    cade:	e7de      	b.n	ca9e <_putc_r+0xe>
    cae0:	4628      	mov	r0, r5
    cae2:	4622      	mov	r2, r4
    cae4:	4631      	mov	r1, r6
    cae6:	f005 f84f 	bl	11b88 <__swbuf_r>
    caea:	4605      	mov	r5, r0
    caec:	e7ed      	b.n	caca <_putc_r+0x3a>
    caee:	b2f0      	uxtb	r0, r6
    caf0:	e7e6      	b.n	cac0 <_putc_r+0x30>
    caf2:	6da0      	ldr	r0, [r4, #88]	; 0x58
    caf4:	f7ff fb16 	bl	c124 <__retarget_lock_acquire_recursive>
    caf8:	e7d7      	b.n	caaa <_putc_r+0x1a>
    cafa:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cafc:	f7ff fb1a 	bl	c134 <__retarget_lock_release_recursive>
    cb00:	4628      	mov	r0, r5
    cb02:	bd70      	pop	{r4, r5, r6, pc}

0000cb04 <putc>:
    cb04:	4b1d      	ldr	r3, [pc, #116]	; (cb7c <putc+0x78>)
    cb06:	b570      	push	{r4, r5, r6, lr}
    cb08:	681e      	ldr	r6, [r3, #0]
    cb0a:	4605      	mov	r5, r0
    cb0c:	460c      	mov	r4, r1
    cb0e:	b10e      	cbz	r6, cb14 <putc+0x10>
    cb10:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    cb12:	b1eb      	cbz	r3, cb50 <putc+0x4c>
    cb14:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cb16:	07d8      	lsls	r0, r3, #31
    cb18:	d402      	bmi.n	cb20 <putc+0x1c>
    cb1a:	89a3      	ldrh	r3, [r4, #12]
    cb1c:	0599      	lsls	r1, r3, #22
    cb1e:	d524      	bpl.n	cb6a <putc+0x66>
    cb20:	68a3      	ldr	r3, [r4, #8]
    cb22:	3b01      	subs	r3, #1
    cb24:	2b00      	cmp	r3, #0
    cb26:	60a3      	str	r3, [r4, #8]
    cb28:	da1d      	bge.n	cb66 <putc+0x62>
    cb2a:	69a2      	ldr	r2, [r4, #24]
    cb2c:	4293      	cmp	r3, r2
    cb2e:	db13      	blt.n	cb58 <putc+0x54>
    cb30:	b2e8      	uxtb	r0, r5
    cb32:	280a      	cmp	r0, #10
    cb34:	d010      	beq.n	cb58 <putc+0x54>
    cb36:	4606      	mov	r6, r0
    cb38:	6823      	ldr	r3, [r4, #0]
    cb3a:	1c5a      	adds	r2, r3, #1
    cb3c:	6022      	str	r2, [r4, #0]
    cb3e:	701d      	strb	r5, [r3, #0]
    cb40:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cb42:	07da      	lsls	r2, r3, #31
    cb44:	d402      	bmi.n	cb4c <putc+0x48>
    cb46:	89a3      	ldrh	r3, [r4, #12]
    cb48:	059b      	lsls	r3, r3, #22
    cb4a:	d512      	bpl.n	cb72 <putc+0x6e>
    cb4c:	4630      	mov	r0, r6
    cb4e:	bd70      	pop	{r4, r5, r6, pc}
    cb50:	4630      	mov	r0, r6
    cb52:	f006 faa9 	bl	130a8 <__sinit>
    cb56:	e7dd      	b.n	cb14 <putc+0x10>
    cb58:	4630      	mov	r0, r6
    cb5a:	4622      	mov	r2, r4
    cb5c:	4629      	mov	r1, r5
    cb5e:	f005 f813 	bl	11b88 <__swbuf_r>
    cb62:	4606      	mov	r6, r0
    cb64:	e7ec      	b.n	cb40 <putc+0x3c>
    cb66:	b2e8      	uxtb	r0, r5
    cb68:	e7e5      	b.n	cb36 <putc+0x32>
    cb6a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cb6c:	f7ff fada 	bl	c124 <__retarget_lock_acquire_recursive>
    cb70:	e7d6      	b.n	cb20 <putc+0x1c>
    cb72:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cb74:	f7ff fade 	bl	c134 <__retarget_lock_release_recursive>
    cb78:	4630      	mov	r0, r6
    cb7a:	bd70      	pop	{r4, r5, r6, pc}
    cb7c:	20000124 	.word	0x20000124

0000cb80 <_puts_r>:
    cb80:	b530      	push	{r4, r5, lr}
    cb82:	4605      	mov	r5, r0
    cb84:	b089      	sub	sp, #36	; 0x24
    cb86:	4608      	mov	r0, r1
    cb88:	460c      	mov	r4, r1
    cb8a:	f000 fcd3 	bl	d534 <strlen>
    cb8e:	2101      	movs	r1, #1
    cb90:	2302      	movs	r3, #2
    cb92:	4a21      	ldr	r2, [pc, #132]	; (cc18 <_puts_r+0x98>)
    cb94:	9404      	str	r4, [sp, #16]
    cb96:	9206      	str	r2, [sp, #24]
    cb98:	6baa      	ldr	r2, [r5, #56]	; 0x38
    cb9a:	ac04      	add	r4, sp, #16
    cb9c:	9005      	str	r0, [sp, #20]
    cb9e:	4408      	add	r0, r1
    cba0:	9401      	str	r4, [sp, #4]
    cba2:	9107      	str	r1, [sp, #28]
    cba4:	68ac      	ldr	r4, [r5, #8]
    cba6:	9302      	str	r3, [sp, #8]
    cba8:	9003      	str	r0, [sp, #12]
    cbaa:	b322      	cbz	r2, cbf6 <_puts_r+0x76>
    cbac:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cbae:	f013 0f01 	tst.w	r3, #1
    cbb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    cbb6:	b29a      	uxth	r2, r3
    cbb8:	d101      	bne.n	cbbe <_puts_r+0x3e>
    cbba:	0598      	lsls	r0, r3, #22
    cbbc:	d525      	bpl.n	cc0a <_puts_r+0x8a>
    cbbe:	0491      	lsls	r1, r2, #18
    cbc0:	d406      	bmi.n	cbd0 <_puts_r+0x50>
    cbc2:	6e62      	ldr	r2, [r4, #100]	; 0x64
    cbc4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    cbc8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    cbcc:	81a3      	strh	r3, [r4, #12]
    cbce:	6662      	str	r2, [r4, #100]	; 0x64
    cbd0:	4628      	mov	r0, r5
    cbd2:	aa01      	add	r2, sp, #4
    cbd4:	4621      	mov	r1, r4
    cbd6:	f7ff f875 	bl	bcc4 <__sfvwrite_r>
    cbda:	6e63      	ldr	r3, [r4, #100]	; 0x64
    cbdc:	2800      	cmp	r0, #0
    cbde:	bf14      	ite	ne
    cbe0:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
    cbe4:	250a      	moveq	r5, #10
    cbe6:	07da      	lsls	r2, r3, #31
    cbe8:	d402      	bmi.n	cbf0 <_puts_r+0x70>
    cbea:	89a3      	ldrh	r3, [r4, #12]
    cbec:	059b      	lsls	r3, r3, #22
    cbee:	d506      	bpl.n	cbfe <_puts_r+0x7e>
    cbf0:	4628      	mov	r0, r5
    cbf2:	b009      	add	sp, #36	; 0x24
    cbf4:	bd30      	pop	{r4, r5, pc}
    cbf6:	4628      	mov	r0, r5
    cbf8:	f006 fa56 	bl	130a8 <__sinit>
    cbfc:	e7d6      	b.n	cbac <_puts_r+0x2c>
    cbfe:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cc00:	f7ff fa98 	bl	c134 <__retarget_lock_release_recursive>
    cc04:	4628      	mov	r0, r5
    cc06:	b009      	add	sp, #36	; 0x24
    cc08:	bd30      	pop	{r4, r5, pc}
    cc0a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    cc0c:	f7ff fa8a 	bl	c124 <__retarget_lock_acquire_recursive>
    cc10:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    cc14:	b29a      	uxth	r2, r3
    cc16:	e7d2      	b.n	cbbe <_puts_r+0x3e>
    cc18:	00018efc 	.word	0x00018efc

0000cc1c <puts>:
    cc1c:	4b02      	ldr	r3, [pc, #8]	; (cc28 <puts+0xc>)
    cc1e:	4601      	mov	r1, r0
    cc20:	6818      	ldr	r0, [r3, #0]
    cc22:	f7ff bfad 	b.w	cb80 <_puts_r>
    cc26:	bf00      	nop
    cc28:	20000124 	.word	0x20000124

0000cc2c <realloc>:
    cc2c:	4603      	mov	r3, r0
    cc2e:	460a      	mov	r2, r1
    cc30:	4902      	ldr	r1, [pc, #8]	; (cc3c <realloc+0x10>)
    cc32:	6808      	ldr	r0, [r1, #0]
    cc34:	4619      	mov	r1, r3
    cc36:	f000 b803 	b.w	cc40 <_realloc_r>
    cc3a:	bf00      	nop
    cc3c:	20000124 	.word	0x20000124

0000cc40 <_realloc_r>:
    cc40:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cc44:	4616      	mov	r6, r2
    cc46:	2900      	cmp	r1, #0
    cc48:	f000 8098 	beq.w	cd7c <_realloc_r+0x13c>
    cc4c:	f106 050b 	add.w	r5, r6, #11
    cc50:	4680      	mov	r8, r0
    cc52:	460c      	mov	r4, r1
    cc54:	f7ff feec 	bl	ca30 <__malloc_lock>
    cc58:	2d16      	cmp	r5, #22
    cc5a:	d85d      	bhi.n	cd18 <_realloc_r+0xd8>
    cc5c:	2510      	movs	r5, #16
    cc5e:	462a      	mov	r2, r5
    cc60:	42ae      	cmp	r6, r5
    cc62:	d85e      	bhi.n	cd22 <_realloc_r+0xe2>
    cc64:	f854 1c04 	ldr.w	r1, [r4, #-4]
    cc68:	f1a4 0908 	sub.w	r9, r4, #8
    cc6c:	f021 0703 	bic.w	r7, r1, #3
    cc70:	4297      	cmp	r7, r2
    cc72:	da62      	bge.n	cd3a <_realloc_r+0xfa>
    cc74:	4bbc      	ldr	r3, [pc, #752]	; (cf68 <_realloc_r+0x328>)
    cc76:	eb09 0007 	add.w	r0, r9, r7
    cc7a:	f8d3 c008 	ldr.w	ip, [r3, #8]
    cc7e:	4584      	cmp	ip, r0
    cc80:	f000 8097 	beq.w	cdb2 <_realloc_r+0x172>
    cc84:	f8d0 c004 	ldr.w	ip, [r0, #4]
    cc88:	f02c 0301 	bic.w	r3, ip, #1
    cc8c:	4403      	add	r3, r0
    cc8e:	685b      	ldr	r3, [r3, #4]
    cc90:	07db      	lsls	r3, r3, #31
    cc92:	d468      	bmi.n	cd66 <_realloc_r+0x126>
    cc94:	f02c 0c03 	bic.w	ip, ip, #3
    cc98:	eb07 030c 	add.w	r3, r7, ip
    cc9c:	4293      	cmp	r3, r2
    cc9e:	da47      	bge.n	cd30 <_realloc_r+0xf0>
    cca0:	07cb      	lsls	r3, r1, #31
    cca2:	d410      	bmi.n	ccc6 <_realloc_r+0x86>
    cca4:	f854 3c08 	ldr.w	r3, [r4, #-8]
    cca8:	eba9 0a03 	sub.w	sl, r9, r3
    ccac:	f8da 3004 	ldr.w	r3, [sl, #4]
    ccb0:	f023 0103 	bic.w	r1, r3, #3
    ccb4:	448c      	add	ip, r1
    ccb6:	44bc      	add	ip, r7
    ccb8:	4594      	cmp	ip, r2
    ccba:	f280 8111 	bge.w	cee0 <_realloc_r+0x2a0>
    ccbe:	187b      	adds	r3, r7, r1
    ccc0:	4293      	cmp	r3, r2
    ccc2:	f280 80e8 	bge.w	ce96 <_realloc_r+0x256>
    ccc6:	4631      	mov	r1, r6
    ccc8:	4640      	mov	r0, r8
    ccca:	f7ff fa45 	bl	c158 <_malloc_r>
    ccce:	4606      	mov	r6, r0
    ccd0:	b1e0      	cbz	r0, cd0c <_realloc_r+0xcc>
    ccd2:	f854 3c04 	ldr.w	r3, [r4, #-4]
    ccd6:	f1a0 0208 	sub.w	r2, r0, #8
    ccda:	f023 0301 	bic.w	r3, r3, #1
    ccde:	444b      	add	r3, r9
    cce0:	4293      	cmp	r3, r2
    cce2:	f000 80d2 	beq.w	ce8a <_realloc_r+0x24a>
    cce6:	1f3a      	subs	r2, r7, #4
    cce8:	2a24      	cmp	r2, #36	; 0x24
    ccea:	f200 80f5 	bhi.w	ced8 <_realloc_r+0x298>
    ccee:	2a13      	cmp	r2, #19
    ccf0:	f200 80ac 	bhi.w	ce4c <_realloc_r+0x20c>
    ccf4:	4603      	mov	r3, r0
    ccf6:	4622      	mov	r2, r4
    ccf8:	6811      	ldr	r1, [r2, #0]
    ccfa:	6019      	str	r1, [r3, #0]
    ccfc:	6851      	ldr	r1, [r2, #4]
    ccfe:	6059      	str	r1, [r3, #4]
    cd00:	6892      	ldr	r2, [r2, #8]
    cd02:	609a      	str	r2, [r3, #8]
    cd04:	4621      	mov	r1, r4
    cd06:	4640      	mov	r0, r8
    cd08:	f006 fc18 	bl	1353c <_free_r>
    cd0c:	4640      	mov	r0, r8
    cd0e:	f7ff fe95 	bl	ca3c <__malloc_unlock>
    cd12:	4630      	mov	r0, r6
    cd14:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd18:	f025 0507 	bic.w	r5, r5, #7
    cd1c:	2d00      	cmp	r5, #0
    cd1e:	462a      	mov	r2, r5
    cd20:	da9e      	bge.n	cc60 <_realloc_r+0x20>
    cd22:	230c      	movs	r3, #12
    cd24:	2600      	movs	r6, #0
    cd26:	f8c8 3000 	str.w	r3, [r8]
    cd2a:	4630      	mov	r0, r6
    cd2c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd30:	461f      	mov	r7, r3
    cd32:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
    cd36:	60d3      	str	r3, [r2, #12]
    cd38:	609a      	str	r2, [r3, #8]
    cd3a:	1b7b      	subs	r3, r7, r5
    cd3c:	2b0f      	cmp	r3, #15
    cd3e:	d822      	bhi.n	cd86 <_realloc_r+0x146>
    cd40:	f8d9 3004 	ldr.w	r3, [r9, #4]
    cd44:	f003 0301 	and.w	r3, r3, #1
    cd48:	433b      	orrs	r3, r7
    cd4a:	f8c9 3004 	str.w	r3, [r9, #4]
    cd4e:	444f      	add	r7, r9
    cd50:	687b      	ldr	r3, [r7, #4]
    cd52:	f043 0301 	orr.w	r3, r3, #1
    cd56:	607b      	str	r3, [r7, #4]
    cd58:	4626      	mov	r6, r4
    cd5a:	4640      	mov	r0, r8
    cd5c:	f7ff fe6e 	bl	ca3c <__malloc_unlock>
    cd60:	4630      	mov	r0, r6
    cd62:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd66:	07c9      	lsls	r1, r1, #31
    cd68:	d4ad      	bmi.n	ccc6 <_realloc_r+0x86>
    cd6a:	f854 3c08 	ldr.w	r3, [r4, #-8]
    cd6e:	eba9 0a03 	sub.w	sl, r9, r3
    cd72:	f8da 1004 	ldr.w	r1, [sl, #4]
    cd76:	f021 0103 	bic.w	r1, r1, #3
    cd7a:	e7a0      	b.n	ccbe <_realloc_r+0x7e>
    cd7c:	4611      	mov	r1, r2
    cd7e:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cd82:	f7ff b9e9 	b.w	c158 <_malloc_r>
    cd86:	f8d9 1004 	ldr.w	r1, [r9, #4]
    cd8a:	f043 0301 	orr.w	r3, r3, #1
    cd8e:	f001 0101 	and.w	r1, r1, #1
    cd92:	4329      	orrs	r1, r5
    cd94:	f8c9 1004 	str.w	r1, [r9, #4]
    cd98:	eb09 0105 	add.w	r1, r9, r5
    cd9c:	604b      	str	r3, [r1, #4]
    cd9e:	444f      	add	r7, r9
    cda0:	687b      	ldr	r3, [r7, #4]
    cda2:	4640      	mov	r0, r8
    cda4:	f043 0301 	orr.w	r3, r3, #1
    cda8:	3108      	adds	r1, #8
    cdaa:	607b      	str	r3, [r7, #4]
    cdac:	f006 fbc6 	bl	1353c <_free_r>
    cdb0:	e7d2      	b.n	cd58 <_realloc_r+0x118>
    cdb2:	f8dc 0004 	ldr.w	r0, [ip, #4]
    cdb6:	f020 0b03 	bic.w	fp, r0, #3
    cdba:	eb07 0c0b 	add.w	ip, r7, fp
    cdbe:	f105 0010 	add.w	r0, r5, #16
    cdc2:	4584      	cmp	ip, r0
    cdc4:	da4d      	bge.n	ce62 <_realloc_r+0x222>
    cdc6:	07c9      	lsls	r1, r1, #31
    cdc8:	f53f af7d 	bmi.w	ccc6 <_realloc_r+0x86>
    cdcc:	f854 1c08 	ldr.w	r1, [r4, #-8]
    cdd0:	eba9 0a01 	sub.w	sl, r9, r1
    cdd4:	f8da 1004 	ldr.w	r1, [sl, #4]
    cdd8:	f021 0103 	bic.w	r1, r1, #3
    cddc:	448b      	add	fp, r1
    cdde:	44bb      	add	fp, r7
    cde0:	4558      	cmp	r0, fp
    cde2:	f73f af6c 	bgt.w	ccbe <_realloc_r+0x7e>
    cde6:	4656      	mov	r6, sl
    cde8:	f8da 100c 	ldr.w	r1, [sl, #12]
    cdec:	f856 0f08 	ldr.w	r0, [r6, #8]!
    cdf0:	1f3a      	subs	r2, r7, #4
    cdf2:	2a24      	cmp	r2, #36	; 0x24
    cdf4:	60c1      	str	r1, [r0, #12]
    cdf6:	6088      	str	r0, [r1, #8]
    cdf8:	f200 80db 	bhi.w	cfb2 <_realloc_r+0x372>
    cdfc:	2a13      	cmp	r2, #19
    cdfe:	f240 80d6 	bls.w	cfae <_realloc_r+0x36e>
    ce02:	6821      	ldr	r1, [r4, #0]
    ce04:	2a1b      	cmp	r2, #27
    ce06:	f8ca 1008 	str.w	r1, [sl, #8]
    ce0a:	6861      	ldr	r1, [r4, #4]
    ce0c:	f8ca 100c 	str.w	r1, [sl, #12]
    ce10:	f200 80e0 	bhi.w	cfd4 <_realloc_r+0x394>
    ce14:	3408      	adds	r4, #8
    ce16:	f10a 0210 	add.w	r2, sl, #16
    ce1a:	6821      	ldr	r1, [r4, #0]
    ce1c:	6011      	str	r1, [r2, #0]
    ce1e:	6861      	ldr	r1, [r4, #4]
    ce20:	6051      	str	r1, [r2, #4]
    ce22:	68a1      	ldr	r1, [r4, #8]
    ce24:	6091      	str	r1, [r2, #8]
    ce26:	ebab 0205 	sub.w	r2, fp, r5
    ce2a:	eb0a 0105 	add.w	r1, sl, r5
    ce2e:	f042 0201 	orr.w	r2, r2, #1
    ce32:	6099      	str	r1, [r3, #8]
    ce34:	604a      	str	r2, [r1, #4]
    ce36:	f8da 3004 	ldr.w	r3, [sl, #4]
    ce3a:	4640      	mov	r0, r8
    ce3c:	f003 0301 	and.w	r3, r3, #1
    ce40:	431d      	orrs	r5, r3
    ce42:	f8ca 5004 	str.w	r5, [sl, #4]
    ce46:	f7ff fdf9 	bl	ca3c <__malloc_unlock>
    ce4a:	e76e      	b.n	cd2a <_realloc_r+0xea>
    ce4c:	6823      	ldr	r3, [r4, #0]
    ce4e:	2a1b      	cmp	r2, #27
    ce50:	6003      	str	r3, [r0, #0]
    ce52:	6863      	ldr	r3, [r4, #4]
    ce54:	6043      	str	r3, [r0, #4]
    ce56:	d868      	bhi.n	cf2a <_realloc_r+0x2ea>
    ce58:	f104 0208 	add.w	r2, r4, #8
    ce5c:	f100 0308 	add.w	r3, r0, #8
    ce60:	e74a      	b.n	ccf8 <_realloc_r+0xb8>
    ce62:	eb09 0205 	add.w	r2, r9, r5
    ce66:	ebac 0c05 	sub.w	ip, ip, r5
    ce6a:	609a      	str	r2, [r3, #8]
    ce6c:	f04c 0301 	orr.w	r3, ip, #1
    ce70:	6053      	str	r3, [r2, #4]
    ce72:	f854 3c04 	ldr.w	r3, [r4, #-4]
    ce76:	4640      	mov	r0, r8
    ce78:	f003 0301 	and.w	r3, r3, #1
    ce7c:	431d      	orrs	r5, r3
    ce7e:	f844 5c04 	str.w	r5, [r4, #-4]
    ce82:	f7ff fddb 	bl	ca3c <__malloc_unlock>
    ce86:	4626      	mov	r6, r4
    ce88:	e74f      	b.n	cd2a <_realloc_r+0xea>
    ce8a:	f850 3c04 	ldr.w	r3, [r0, #-4]
    ce8e:	f023 0303 	bic.w	r3, r3, #3
    ce92:	441f      	add	r7, r3
    ce94:	e751      	b.n	cd3a <_realloc_r+0xfa>
    ce96:	4656      	mov	r6, sl
    ce98:	f8da 100c 	ldr.w	r1, [sl, #12]
    ce9c:	f856 0f08 	ldr.w	r0, [r6, #8]!
    cea0:	1f3a      	subs	r2, r7, #4
    cea2:	2a24      	cmp	r2, #36	; 0x24
    cea4:	60c1      	str	r1, [r0, #12]
    cea6:	6088      	str	r0, [r1, #8]
    cea8:	d84c      	bhi.n	cf44 <_realloc_r+0x304>
    ceaa:	2a13      	cmp	r2, #19
    ceac:	d948      	bls.n	cf40 <_realloc_r+0x300>
    ceae:	6821      	ldr	r1, [r4, #0]
    ceb0:	2a1b      	cmp	r2, #27
    ceb2:	f8ca 1008 	str.w	r1, [sl, #8]
    ceb6:	6861      	ldr	r1, [r4, #4]
    ceb8:	f8ca 100c 	str.w	r1, [sl, #12]
    cebc:	d856      	bhi.n	cf6c <_realloc_r+0x32c>
    cebe:	3408      	adds	r4, #8
    cec0:	f10a 0210 	add.w	r2, sl, #16
    cec4:	461f      	mov	r7, r3
    cec6:	6823      	ldr	r3, [r4, #0]
    cec8:	46d1      	mov	r9, sl
    ceca:	6013      	str	r3, [r2, #0]
    cecc:	6863      	ldr	r3, [r4, #4]
    cece:	6053      	str	r3, [r2, #4]
    ced0:	68a3      	ldr	r3, [r4, #8]
    ced2:	4634      	mov	r4, r6
    ced4:	6093      	str	r3, [r2, #8]
    ced6:	e730      	b.n	cd3a <_realloc_r+0xfa>
    ced8:	4621      	mov	r1, r4
    ceda:	f7ff fcdb 	bl	c894 <memmove>
    cede:	e711      	b.n	cd04 <_realloc_r+0xc4>
    cee0:	4656      	mov	r6, sl
    cee2:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
    cee6:	60cb      	str	r3, [r1, #12]
    cee8:	6099      	str	r1, [r3, #8]
    ceea:	f856 1f08 	ldr.w	r1, [r6, #8]!
    ceee:	f8da 300c 	ldr.w	r3, [sl, #12]
    cef2:	1f3a      	subs	r2, r7, #4
    cef4:	2a24      	cmp	r2, #36	; 0x24
    cef6:	60cb      	str	r3, [r1, #12]
    cef8:	6099      	str	r1, [r3, #8]
    cefa:	d82d      	bhi.n	cf58 <_realloc_r+0x318>
    cefc:	2a13      	cmp	r2, #19
    cefe:	d929      	bls.n	cf54 <_realloc_r+0x314>
    cf00:	6823      	ldr	r3, [r4, #0]
    cf02:	2a1b      	cmp	r2, #27
    cf04:	f8ca 3008 	str.w	r3, [sl, #8]
    cf08:	6863      	ldr	r3, [r4, #4]
    cf0a:	f8ca 300c 	str.w	r3, [sl, #12]
    cf0e:	d842      	bhi.n	cf96 <_realloc_r+0x356>
    cf10:	3408      	adds	r4, #8
    cf12:	f10a 0310 	add.w	r3, sl, #16
    cf16:	6822      	ldr	r2, [r4, #0]
    cf18:	4667      	mov	r7, ip
    cf1a:	601a      	str	r2, [r3, #0]
    cf1c:	6862      	ldr	r2, [r4, #4]
    cf1e:	46d1      	mov	r9, sl
    cf20:	605a      	str	r2, [r3, #4]
    cf22:	68a2      	ldr	r2, [r4, #8]
    cf24:	4634      	mov	r4, r6
    cf26:	609a      	str	r2, [r3, #8]
    cf28:	e707      	b.n	cd3a <_realloc_r+0xfa>
    cf2a:	68a3      	ldr	r3, [r4, #8]
    cf2c:	2a24      	cmp	r2, #36	; 0x24
    cf2e:	6083      	str	r3, [r0, #8]
    cf30:	68e3      	ldr	r3, [r4, #12]
    cf32:	60c3      	str	r3, [r0, #12]
    cf34:	d026      	beq.n	cf84 <_realloc_r+0x344>
    cf36:	f104 0210 	add.w	r2, r4, #16
    cf3a:	f100 0310 	add.w	r3, r0, #16
    cf3e:	e6db      	b.n	ccf8 <_realloc_r+0xb8>
    cf40:	4632      	mov	r2, r6
    cf42:	e7bf      	b.n	cec4 <_realloc_r+0x284>
    cf44:	4621      	mov	r1, r4
    cf46:	4630      	mov	r0, r6
    cf48:	461f      	mov	r7, r3
    cf4a:	46d1      	mov	r9, sl
    cf4c:	f7ff fca2 	bl	c894 <memmove>
    cf50:	4634      	mov	r4, r6
    cf52:	e6f2      	b.n	cd3a <_realloc_r+0xfa>
    cf54:	4633      	mov	r3, r6
    cf56:	e7de      	b.n	cf16 <_realloc_r+0x2d6>
    cf58:	4621      	mov	r1, r4
    cf5a:	4630      	mov	r0, r6
    cf5c:	4667      	mov	r7, ip
    cf5e:	46d1      	mov	r9, sl
    cf60:	f7ff fc98 	bl	c894 <memmove>
    cf64:	4634      	mov	r4, r6
    cf66:	e6e8      	b.n	cd3a <_realloc_r+0xfa>
    cf68:	20000550 	.word	0x20000550
    cf6c:	68a1      	ldr	r1, [r4, #8]
    cf6e:	2a24      	cmp	r2, #36	; 0x24
    cf70:	f8ca 1010 	str.w	r1, [sl, #16]
    cf74:	68e1      	ldr	r1, [r4, #12]
    cf76:	f8ca 1014 	str.w	r1, [sl, #20]
    cf7a:	d020      	beq.n	cfbe <_realloc_r+0x37e>
    cf7c:	3410      	adds	r4, #16
    cf7e:	f10a 0218 	add.w	r2, sl, #24
    cf82:	e79f      	b.n	cec4 <_realloc_r+0x284>
    cf84:	6923      	ldr	r3, [r4, #16]
    cf86:	f104 0218 	add.w	r2, r4, #24
    cf8a:	6103      	str	r3, [r0, #16]
    cf8c:	6963      	ldr	r3, [r4, #20]
    cf8e:	6143      	str	r3, [r0, #20]
    cf90:	f100 0318 	add.w	r3, r0, #24
    cf94:	e6b0      	b.n	ccf8 <_realloc_r+0xb8>
    cf96:	68a3      	ldr	r3, [r4, #8]
    cf98:	2a24      	cmp	r2, #36	; 0x24
    cf9a:	f8ca 3010 	str.w	r3, [sl, #16]
    cf9e:	68e3      	ldr	r3, [r4, #12]
    cfa0:	f8ca 3014 	str.w	r3, [sl, #20]
    cfa4:	d022      	beq.n	cfec <_realloc_r+0x3ac>
    cfa6:	3410      	adds	r4, #16
    cfa8:	f10a 0318 	add.w	r3, sl, #24
    cfac:	e7b3      	b.n	cf16 <_realloc_r+0x2d6>
    cfae:	4632      	mov	r2, r6
    cfb0:	e733      	b.n	ce1a <_realloc_r+0x1da>
    cfb2:	4621      	mov	r1, r4
    cfb4:	4630      	mov	r0, r6
    cfb6:	f7ff fc6d 	bl	c894 <memmove>
    cfba:	4b17      	ldr	r3, [pc, #92]	; (d018 <_realloc_r+0x3d8>)
    cfbc:	e733      	b.n	ce26 <_realloc_r+0x1e6>
    cfbe:	6922      	ldr	r2, [r4, #16]
    cfc0:	3418      	adds	r4, #24
    cfc2:	f8ca 2018 	str.w	r2, [sl, #24]
    cfc6:	f854 2c04 	ldr.w	r2, [r4, #-4]
    cfca:	f8ca 201c 	str.w	r2, [sl, #28]
    cfce:	f10a 0220 	add.w	r2, sl, #32
    cfd2:	e777      	b.n	cec4 <_realloc_r+0x284>
    cfd4:	68a1      	ldr	r1, [r4, #8]
    cfd6:	2a24      	cmp	r2, #36	; 0x24
    cfd8:	f8ca 1010 	str.w	r1, [sl, #16]
    cfdc:	68e1      	ldr	r1, [r4, #12]
    cfde:	f8ca 1014 	str.w	r1, [sl, #20]
    cfe2:	d00e      	beq.n	d002 <_realloc_r+0x3c2>
    cfe4:	3410      	adds	r4, #16
    cfe6:	f10a 0218 	add.w	r2, sl, #24
    cfea:	e716      	b.n	ce1a <_realloc_r+0x1da>
    cfec:	6923      	ldr	r3, [r4, #16]
    cfee:	3418      	adds	r4, #24
    cff0:	f8ca 3018 	str.w	r3, [sl, #24]
    cff4:	f854 3c04 	ldr.w	r3, [r4, #-4]
    cff8:	f8ca 301c 	str.w	r3, [sl, #28]
    cffc:	f10a 0320 	add.w	r3, sl, #32
    d000:	e789      	b.n	cf16 <_realloc_r+0x2d6>
    d002:	6922      	ldr	r2, [r4, #16]
    d004:	3418      	adds	r4, #24
    d006:	f8ca 2018 	str.w	r2, [sl, #24]
    d00a:	f854 2c04 	ldr.w	r2, [r4, #-4]
    d00e:	f8ca 201c 	str.w	r2, [sl, #28]
    d012:	f10a 0220 	add.w	r2, sl, #32
    d016:	e700      	b.n	ce1a <_realloc_r+0x1da>
    d018:	20000550 	.word	0x20000550

0000d01c <_sbrk_r>:
    d01c:	2200      	movs	r2, #0
    d01e:	b538      	push	{r3, r4, r5, lr}
    d020:	4d06      	ldr	r5, [pc, #24]	; (d03c <_sbrk_r+0x20>)
    d022:	4604      	mov	r4, r0
    d024:	4608      	mov	r0, r1
    d026:	602a      	str	r2, [r5, #0]
    d028:	f009 fbf6 	bl	16818 <_sbrk>
    d02c:	1c43      	adds	r3, r0, #1
    d02e:	d000      	beq.n	d032 <_sbrk_r+0x16>
    d030:	bd38      	pop	{r3, r4, r5, pc}
    d032:	682b      	ldr	r3, [r5, #0]
    d034:	2b00      	cmp	r3, #0
    d036:	d0fb      	beq.n	d030 <_sbrk_r+0x14>
    d038:	6023      	str	r3, [r4, #0]
    d03a:	bd38      	pop	{r3, r4, r5, pc}
    d03c:	20001fa8 	.word	0x20001fa8

0000d040 <_init_signal_r>:
    d040:	b538      	push	{r3, r4, r5, lr}
    d042:	f8d0 42dc 	ldr.w	r4, [r0, #732]	; 0x2dc
    d046:	b10c      	cbz	r4, d04c <_init_signal_r+0xc>
    d048:	2000      	movs	r0, #0
    d04a:	bd38      	pop	{r3, r4, r5, pc}
    d04c:	2180      	movs	r1, #128	; 0x80
    d04e:	4605      	mov	r5, r0
    d050:	f7ff f882 	bl	c158 <_malloc_r>
    d054:	4602      	mov	r2, r0
    d056:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d05a:	b130      	cbz	r0, d06a <_init_signal_r+0x2a>
    d05c:	1f03      	subs	r3, r0, #4
    d05e:	327c      	adds	r2, #124	; 0x7c
    d060:	f843 4f04 	str.w	r4, [r3, #4]!
    d064:	4293      	cmp	r3, r2
    d066:	d1fb      	bne.n	d060 <_init_signal_r+0x20>
    d068:	e7ee      	b.n	d048 <_init_signal_r+0x8>
    d06a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d06e:	bd38      	pop	{r3, r4, r5, pc}

0000d070 <_signal_r>:
    d070:	291f      	cmp	r1, #31
    d072:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d074:	4605      	mov	r5, r0
    d076:	d809      	bhi.n	d08c <_signal_r+0x1c>
    d078:	f8d0 62dc 	ldr.w	r6, [r0, #732]	; 0x2dc
    d07c:	460c      	mov	r4, r1
    d07e:	4617      	mov	r7, r2
    d080:	b14e      	cbz	r6, d096 <_signal_r+0x26>
    d082:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    d086:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
    d08a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d08c:	2316      	movs	r3, #22
    d08e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d092:	602b      	str	r3, [r5, #0]
    d094:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d096:	2180      	movs	r1, #128	; 0x80
    d098:	f7ff f85e 	bl	c158 <_malloc_r>
    d09c:	4606      	mov	r6, r0
    d09e:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d0a2:	b140      	cbz	r0, d0b6 <_signal_r+0x46>
    d0a4:	2100      	movs	r1, #0
    d0a6:	1f03      	subs	r3, r0, #4
    d0a8:	f100 057c 	add.w	r5, r0, #124	; 0x7c
    d0ac:	f843 1f04 	str.w	r1, [r3, #4]!
    d0b0:	429d      	cmp	r5, r3
    d0b2:	d1fb      	bne.n	d0ac <_signal_r+0x3c>
    d0b4:	e7e5      	b.n	d082 <_signal_r+0x12>
    d0b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d0ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000d0bc <_raise_r>:
    d0bc:	291f      	cmp	r1, #31
    d0be:	b538      	push	{r3, r4, r5, lr}
    d0c0:	4605      	mov	r5, r0
    d0c2:	d821      	bhi.n	d108 <_raise_r+0x4c>
    d0c4:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
    d0c8:	460c      	mov	r4, r1
    d0ca:	b16a      	cbz	r2, d0e8 <_raise_r+0x2c>
    d0cc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
    d0d0:	b153      	cbz	r3, d0e8 <_raise_r+0x2c>
    d0d2:	2b01      	cmp	r3, #1
    d0d4:	d016      	beq.n	d104 <_raise_r+0x48>
    d0d6:	1c59      	adds	r1, r3, #1
    d0d8:	d010      	beq.n	d0fc <_raise_r+0x40>
    d0da:	2500      	movs	r5, #0
    d0dc:	4620      	mov	r0, r4
    d0de:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
    d0e2:	4798      	blx	r3
    d0e4:	4628      	mov	r0, r5
    d0e6:	bd38      	pop	{r3, r4, r5, pc}
    d0e8:	4628      	mov	r0, r5
    d0ea:	f000 f903 	bl	d2f4 <_getpid_r>
    d0ee:	4622      	mov	r2, r4
    d0f0:	4601      	mov	r1, r0
    d0f2:	4628      	mov	r0, r5
    d0f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    d0f8:	f000 b8e8 	b.w	d2cc <_kill_r>
    d0fc:	2316      	movs	r3, #22
    d0fe:	2001      	movs	r0, #1
    d100:	602b      	str	r3, [r5, #0]
    d102:	bd38      	pop	{r3, r4, r5, pc}
    d104:	2000      	movs	r0, #0
    d106:	bd38      	pop	{r3, r4, r5, pc}
    d108:	2316      	movs	r3, #22
    d10a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d10e:	602b      	str	r3, [r5, #0]
    d110:	bd38      	pop	{r3, r4, r5, pc}
    d112:	bf00      	nop

0000d114 <__sigtramp_r>:
    d114:	291f      	cmp	r1, #31
    d116:	d82d      	bhi.n	d174 <__sigtramp_r+0x60>
    d118:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
    d11c:	b538      	push	{r3, r4, r5, lr}
    d11e:	460c      	mov	r4, r1
    d120:	4605      	mov	r5, r0
    d122:	b182      	cbz	r2, d146 <__sigtramp_r+0x32>
    d124:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
    d128:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    d12c:	b14b      	cbz	r3, d142 <__sigtramp_r+0x2e>
    d12e:	1c59      	adds	r1, r3, #1
    d130:	d01b      	beq.n	d16a <__sigtramp_r+0x56>
    d132:	2b01      	cmp	r3, #1
    d134:	d017      	beq.n	d166 <__sigtramp_r+0x52>
    d136:	2500      	movs	r5, #0
    d138:	4620      	mov	r0, r4
    d13a:	6015      	str	r5, [r2, #0]
    d13c:	4798      	blx	r3
    d13e:	4628      	mov	r0, r5
    d140:	bd38      	pop	{r3, r4, r5, pc}
    d142:	2001      	movs	r0, #1
    d144:	bd38      	pop	{r3, r4, r5, pc}
    d146:	2180      	movs	r1, #128	; 0x80
    d148:	f7ff f806 	bl	c158 <_malloc_r>
    d14c:	4602      	mov	r2, r0
    d14e:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d152:	b160      	cbz	r0, d16e <__sigtramp_r+0x5a>
    d154:	2000      	movs	r0, #0
    d156:	1f13      	subs	r3, r2, #4
    d158:	f102 017c 	add.w	r1, r2, #124	; 0x7c
    d15c:	f843 0f04 	str.w	r0, [r3, #4]!
    d160:	4299      	cmp	r1, r3
    d162:	d1fb      	bne.n	d15c <__sigtramp_r+0x48>
    d164:	e7de      	b.n	d124 <__sigtramp_r+0x10>
    d166:	2003      	movs	r0, #3
    d168:	bd38      	pop	{r3, r4, r5, pc}
    d16a:	2002      	movs	r0, #2
    d16c:	bd38      	pop	{r3, r4, r5, pc}
    d16e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d172:	bd38      	pop	{r3, r4, r5, pc}
    d174:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d178:	4770      	bx	lr
    d17a:	bf00      	nop

0000d17c <raise>:
    d17c:	b538      	push	{r3, r4, r5, lr}
    d17e:	4b15      	ldr	r3, [pc, #84]	; (d1d4 <raise+0x58>)
    d180:	281f      	cmp	r0, #31
    d182:	681d      	ldr	r5, [r3, #0]
    d184:	d820      	bhi.n	d1c8 <raise+0x4c>
    d186:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
    d18a:	4604      	mov	r4, r0
    d18c:	b162      	cbz	r2, d1a8 <raise+0x2c>
    d18e:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
    d192:	b14b      	cbz	r3, d1a8 <raise+0x2c>
    d194:	2b01      	cmp	r3, #1
    d196:	d015      	beq.n	d1c4 <raise+0x48>
    d198:	1c59      	adds	r1, r3, #1
    d19a:	d00f      	beq.n	d1bc <raise+0x40>
    d19c:	2500      	movs	r5, #0
    d19e:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
    d1a2:	4798      	blx	r3
    d1a4:	4628      	mov	r0, r5
    d1a6:	bd38      	pop	{r3, r4, r5, pc}
    d1a8:	4628      	mov	r0, r5
    d1aa:	f000 f8a3 	bl	d2f4 <_getpid_r>
    d1ae:	4622      	mov	r2, r4
    d1b0:	4601      	mov	r1, r0
    d1b2:	4628      	mov	r0, r5
    d1b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    d1b8:	f000 b888 	b.w	d2cc <_kill_r>
    d1bc:	2316      	movs	r3, #22
    d1be:	2001      	movs	r0, #1
    d1c0:	602b      	str	r3, [r5, #0]
    d1c2:	bd38      	pop	{r3, r4, r5, pc}
    d1c4:	2000      	movs	r0, #0
    d1c6:	bd38      	pop	{r3, r4, r5, pc}
    d1c8:	2316      	movs	r3, #22
    d1ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d1ce:	602b      	str	r3, [r5, #0]
    d1d0:	bd38      	pop	{r3, r4, r5, pc}
    d1d2:	bf00      	nop
    d1d4:	20000124 	.word	0x20000124

0000d1d8 <signal>:
    d1d8:	4b13      	ldr	r3, [pc, #76]	; (d228 <signal+0x50>)
    d1da:	281f      	cmp	r0, #31
    d1dc:	b570      	push	{r4, r5, r6, lr}
    d1de:	681e      	ldr	r6, [r3, #0]
    d1e0:	d809      	bhi.n	d1f6 <signal+0x1e>
    d1e2:	460d      	mov	r5, r1
    d1e4:	f8d6 12dc 	ldr.w	r1, [r6, #732]	; 0x2dc
    d1e8:	4604      	mov	r4, r0
    d1ea:	b149      	cbz	r1, d200 <signal+0x28>
    d1ec:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
    d1f0:	f841 5024 	str.w	r5, [r1, r4, lsl #2]
    d1f4:	bd70      	pop	{r4, r5, r6, pc}
    d1f6:	2316      	movs	r3, #22
    d1f8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d1fc:	6033      	str	r3, [r6, #0]
    d1fe:	bd70      	pop	{r4, r5, r6, pc}
    d200:	2180      	movs	r1, #128	; 0x80
    d202:	4630      	mov	r0, r6
    d204:	f7fe ffa8 	bl	c158 <_malloc_r>
    d208:	4601      	mov	r1, r0
    d20a:	f8c6 02dc 	str.w	r0, [r6, #732]	; 0x2dc
    d20e:	b140      	cbz	r0, d222 <signal+0x4a>
    d210:	2200      	movs	r2, #0
    d212:	1f03      	subs	r3, r0, #4
    d214:	f100 0c7c 	add.w	ip, r0, #124	; 0x7c
    d218:	f843 2f04 	str.w	r2, [r3, #4]!
    d21c:	4563      	cmp	r3, ip
    d21e:	d1fb      	bne.n	d218 <signal+0x40>
    d220:	e7e4      	b.n	d1ec <signal+0x14>
    d222:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d226:	bd70      	pop	{r4, r5, r6, pc}
    d228:	20000124 	.word	0x20000124

0000d22c <_init_signal>:
    d22c:	b538      	push	{r3, r4, r5, lr}
    d22e:	4b0c      	ldr	r3, [pc, #48]	; (d260 <_init_signal+0x34>)
    d230:	681d      	ldr	r5, [r3, #0]
    d232:	f8d5 42dc 	ldr.w	r4, [r5, #732]	; 0x2dc
    d236:	b10c      	cbz	r4, d23c <_init_signal+0x10>
    d238:	2000      	movs	r0, #0
    d23a:	bd38      	pop	{r3, r4, r5, pc}
    d23c:	2180      	movs	r1, #128	; 0x80
    d23e:	4628      	mov	r0, r5
    d240:	f7fe ff8a 	bl	c158 <_malloc_r>
    d244:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d248:	b138      	cbz	r0, d25a <_init_signal+0x2e>
    d24a:	1f03      	subs	r3, r0, #4
    d24c:	f100 027c 	add.w	r2, r0, #124	; 0x7c
    d250:	f843 4f04 	str.w	r4, [r3, #4]!
    d254:	4293      	cmp	r3, r2
    d256:	d1fb      	bne.n	d250 <_init_signal+0x24>
    d258:	e7ee      	b.n	d238 <_init_signal+0xc>
    d25a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d25e:	bd38      	pop	{r3, r4, r5, pc}
    d260:	20000124 	.word	0x20000124

0000d264 <__sigtramp>:
    d264:	b538      	push	{r3, r4, r5, lr}
    d266:	4b18      	ldr	r3, [pc, #96]	; (d2c8 <__sigtramp+0x64>)
    d268:	281f      	cmp	r0, #31
    d26a:	681d      	ldr	r5, [r3, #0]
    d26c:	d829      	bhi.n	d2c2 <__sigtramp+0x5e>
    d26e:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
    d272:	4604      	mov	r4, r0
    d274:	b182      	cbz	r2, d298 <__sigtramp+0x34>
    d276:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
    d27a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    d27e:	b14b      	cbz	r3, d294 <__sigtramp+0x30>
    d280:	1c59      	adds	r1, r3, #1
    d282:	d01c      	beq.n	d2be <__sigtramp+0x5a>
    d284:	2b01      	cmp	r3, #1
    d286:	d018      	beq.n	d2ba <__sigtramp+0x56>
    d288:	2500      	movs	r5, #0
    d28a:	4620      	mov	r0, r4
    d28c:	6015      	str	r5, [r2, #0]
    d28e:	4798      	blx	r3
    d290:	4628      	mov	r0, r5
    d292:	bd38      	pop	{r3, r4, r5, pc}
    d294:	2001      	movs	r0, #1
    d296:	bd38      	pop	{r3, r4, r5, pc}
    d298:	2180      	movs	r1, #128	; 0x80
    d29a:	4628      	mov	r0, r5
    d29c:	f7fe ff5c 	bl	c158 <_malloc_r>
    d2a0:	4602      	mov	r2, r0
    d2a2:	f8c5 02dc 	str.w	r0, [r5, #732]	; 0x2dc
    d2a6:	b160      	cbz	r0, d2c2 <__sigtramp+0x5e>
    d2a8:	2000      	movs	r0, #0
    d2aa:	1f13      	subs	r3, r2, #4
    d2ac:	f102 017c 	add.w	r1, r2, #124	; 0x7c
    d2b0:	f843 0f04 	str.w	r0, [r3, #4]!
    d2b4:	428b      	cmp	r3, r1
    d2b6:	d1fb      	bne.n	d2b0 <__sigtramp+0x4c>
    d2b8:	e7dd      	b.n	d276 <__sigtramp+0x12>
    d2ba:	2003      	movs	r0, #3
    d2bc:	bd38      	pop	{r3, r4, r5, pc}
    d2be:	2002      	movs	r0, #2
    d2c0:	bd38      	pop	{r3, r4, r5, pc}
    d2c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d2c6:	bd38      	pop	{r3, r4, r5, pc}
    d2c8:	20000124 	.word	0x20000124

0000d2cc <_kill_r>:
    d2cc:	b570      	push	{r4, r5, r6, lr}
    d2ce:	2600      	movs	r6, #0
    d2d0:	4d07      	ldr	r5, [pc, #28]	; (d2f0 <_kill_r+0x24>)
    d2d2:	4604      	mov	r4, r0
    d2d4:	4608      	mov	r0, r1
    d2d6:	4611      	mov	r1, r2
    d2d8:	602e      	str	r6, [r5, #0]
    d2da:	f009 fe21 	bl	16f20 <_kill>
    d2de:	1c43      	adds	r3, r0, #1
    d2e0:	d000      	beq.n	d2e4 <_kill_r+0x18>
    d2e2:	bd70      	pop	{r4, r5, r6, pc}
    d2e4:	682b      	ldr	r3, [r5, #0]
    d2e6:	2b00      	cmp	r3, #0
    d2e8:	d0fb      	beq.n	d2e2 <_kill_r+0x16>
    d2ea:	6023      	str	r3, [r4, #0]
    d2ec:	bd70      	pop	{r4, r5, r6, pc}
    d2ee:	bf00      	nop
    d2f0:	20001fa8 	.word	0x20001fa8

0000d2f4 <_getpid_r>:
    d2f4:	f009 ba8e 	b.w	16814 <_getpid>

0000d2f8 <_sprintf_r>:
    d2f8:	b40c      	push	{r2, r3}
    d2fa:	b530      	push	{r4, r5, lr}
    d2fc:	460c      	mov	r4, r1
    d2fe:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
    d302:	b09d      	sub	sp, #116	; 0x74
    d304:	4a0a      	ldr	r2, [pc, #40]	; (d330 <_sprintf_r+0x38>)
    d306:	ab20      	add	r3, sp, #128	; 0x80
    d308:	9205      	str	r2, [sp, #20]
    d30a:	f853 2b04 	ldr.w	r2, [r3], #4
    d30e:	a902      	add	r1, sp, #8
    d310:	e9cd 3401 	strd	r3, r4, [sp, #4]
    d314:	9507      	str	r5, [sp, #28]
    d316:	9504      	str	r5, [sp, #16]
    d318:	9406      	str	r4, [sp, #24]
    d31a:	f000 f977 	bl	d60c <_svfprintf_r>
    d31e:	2200      	movs	r2, #0
    d320:	9b02      	ldr	r3, [sp, #8]
    d322:	701a      	strb	r2, [r3, #0]
    d324:	b01d      	add	sp, #116	; 0x74
    d326:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    d32a:	b002      	add	sp, #8
    d32c:	4770      	bx	lr
    d32e:	bf00      	nop
    d330:	ffff0208 	.word	0xffff0208

0000d334 <sprintf>:
    d334:	b40e      	push	{r1, r2, r3}
    d336:	b530      	push	{r4, r5, lr}
    d338:	4604      	mov	r4, r0
    d33a:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
    d33e:	b09c      	sub	sp, #112	; 0x70
    d340:	4a0b      	ldr	r2, [pc, #44]	; (d370 <sprintf+0x3c>)
    d342:	ab1f      	add	r3, sp, #124	; 0x7c
    d344:	490b      	ldr	r1, [pc, #44]	; (d374 <sprintf+0x40>)
    d346:	9205      	str	r2, [sp, #20]
    d348:	f853 2b04 	ldr.w	r2, [r3], #4
    d34c:	6808      	ldr	r0, [r1, #0]
    d34e:	a902      	add	r1, sp, #8
    d350:	e9cd 3401 	strd	r3, r4, [sp, #4]
    d354:	9507      	str	r5, [sp, #28]
    d356:	9504      	str	r5, [sp, #16]
    d358:	9406      	str	r4, [sp, #24]
    d35a:	f000 f957 	bl	d60c <_svfprintf_r>
    d35e:	2200      	movs	r2, #0
    d360:	9b02      	ldr	r3, [sp, #8]
    d362:	701a      	strb	r2, [r3, #0]
    d364:	b01c      	add	sp, #112	; 0x70
    d366:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    d36a:	b003      	add	sp, #12
    d36c:	4770      	bx	lr
    d36e:	bf00      	nop
    d370:	ffff0208 	.word	0xffff0208
    d374:	20000124 	.word	0x20000124

0000d378 <strcmp>:
    d378:	ea80 0c01 	eor.w	ip, r0, r1
    d37c:	f01c 0f03 	tst.w	ip, #3
    d380:	d137      	bne.n	d3f2 <strcmp+0x7a>
    d382:	f010 0c03 	ands.w	ip, r0, #3
    d386:	f020 0003 	bic.w	r0, r0, #3
    d38a:	f021 0103 	bic.w	r1, r1, #3
    d38e:	f850 2b04 	ldr.w	r2, [r0], #4
    d392:	bf08      	it	eq
    d394:	f851 3b04 	ldreq.w	r3, [r1], #4
    d398:	d00e      	beq.n	d3b8 <strcmp+0x40>
    d39a:	f08c 0c03 	eor.w	ip, ip, #3
    d39e:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
    d3a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
    d3a6:	fa23 fc0c 	lsr.w	ip, r3, ip
    d3aa:	f851 3b04 	ldr.w	r3, [r1], #4
    d3ae:	ea42 020c 	orr.w	r2, r2, ip
    d3b2:	ea43 030c 	orr.w	r3, r3, ip
    d3b6:	bf00      	nop
    d3b8:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
    d3bc:	429a      	cmp	r2, r3
    d3be:	bf01      	itttt	eq
    d3c0:	ea2c 0c02 	biceq.w	ip, ip, r2
    d3c4:	f01c 3f80 	tsteq.w	ip, #2155905152	; 0x80808080
    d3c8:	f850 2b04 	ldreq.w	r2, [r0], #4
    d3cc:	f851 3b04 	ldreq.w	r3, [r1], #4
    d3d0:	d0f2      	beq.n	d3b8 <strcmp+0x40>
    d3d2:	ea4f 6002 	mov.w	r0, r2, lsl #24
    d3d6:	ea4f 2212 	mov.w	r2, r2, lsr #8
    d3da:	2801      	cmp	r0, #1
    d3dc:	bf28      	it	cs
    d3de:	ebb0 6f03 	cmpcs.w	r0, r3, lsl #24
    d3e2:	bf08      	it	eq
    d3e4:	0a1b      	lsreq	r3, r3, #8
    d3e6:	d0f4      	beq.n	d3d2 <strcmp+0x5a>
    d3e8:	f003 03ff 	and.w	r3, r3, #255	; 0xff
    d3ec:	0e00      	lsrs	r0, r0, #24
    d3ee:	1ac0      	subs	r0, r0, r3
    d3f0:	4770      	bx	lr
    d3f2:	f010 0f03 	tst.w	r0, #3
    d3f6:	d00a      	beq.n	d40e <strcmp+0x96>
    d3f8:	f810 2b01 	ldrb.w	r2, [r0], #1
    d3fc:	f811 3b01 	ldrb.w	r3, [r1], #1
    d400:	2a01      	cmp	r2, #1
    d402:	bf28      	it	cs
    d404:	429a      	cmpcs	r2, r3
    d406:	d0f4      	beq.n	d3f2 <strcmp+0x7a>
    d408:	eba2 0003 	sub.w	r0, r2, r3
    d40c:	4770      	bx	lr
    d40e:	f84d 5d04 	str.w	r5, [sp, #-4]!
    d412:	f850 2b04 	ldr.w	r2, [r0], #4
    d416:	f001 0503 	and.w	r5, r1, #3
    d41a:	f021 0103 	bic.w	r1, r1, #3
    d41e:	f851 3b04 	ldr.w	r3, [r1], #4
    d422:	2d02      	cmp	r5, #2
    d424:	d026      	beq.n	d474 <strcmp+0xfc>
    d426:	d84d      	bhi.n	d4c4 <strcmp+0x14c>
    d428:	f022 457f 	bic.w	r5, r2, #4278190080	; 0xff000000
    d42c:	ebb5 2f13 	cmp.w	r5, r3, lsr #8
    d430:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
    d434:	ea2c 0c02 	bic.w	ip, ip, r2
    d438:	d10d      	bne.n	d456 <strcmp+0xde>
    d43a:	f01c 3c80 	ands.w	ip, ip, #2155905152	; 0x80808080
    d43e:	bf08      	it	eq
    d440:	f851 3b04 	ldreq.w	r3, [r1], #4
    d444:	d10a      	bne.n	d45c <strcmp+0xe4>
    d446:	ea85 0502 	eor.w	r5, r5, r2
    d44a:	ebb5 6f03 	cmp.w	r5, r3, lsl #24
    d44e:	d10c      	bne.n	d46a <strcmp+0xf2>
    d450:	f850 2b04 	ldr.w	r2, [r0], #4
    d454:	e7e8      	b.n	d428 <strcmp+0xb0>
    d456:	ea4f 2313 	mov.w	r3, r3, lsr #8
    d45a:	e05b      	b.n	d514 <strcmp+0x19c>
    d45c:	f03c 4c7f 	bics.w	ip, ip, #4278190080	; 0xff000000
    d460:	d154      	bne.n	d50c <strcmp+0x194>
    d462:	780b      	ldrb	r3, [r1, #0]
    d464:	ea4f 6512 	mov.w	r5, r2, lsr #24
    d468:	e054      	b.n	d514 <strcmp+0x19c>
    d46a:	ea4f 6512 	mov.w	r5, r2, lsr #24
    d46e:	f003 03ff 	and.w	r3, r3, #255	; 0xff
    d472:	e04f      	b.n	d514 <strcmp+0x19c>
    d474:	ea4f 4502 	mov.w	r5, r2, lsl #16
    d478:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
    d47c:	ea4f 4515 	mov.w	r5, r5, lsr #16
    d480:	ea2c 0c02 	bic.w	ip, ip, r2
    d484:	ebb5 4f13 	cmp.w	r5, r3, lsr #16
    d488:	d118      	bne.n	d4bc <strcmp+0x144>
    d48a:	f01c 3c80 	ands.w	ip, ip, #2155905152	; 0x80808080
    d48e:	bf08      	it	eq
    d490:	f851 3b04 	ldreq.w	r3, [r1], #4
    d494:	d107      	bne.n	d4a6 <strcmp+0x12e>
    d496:	ea85 0502 	eor.w	r5, r5, r2
    d49a:	ebb5 4f03 	cmp.w	r5, r3, lsl #16
    d49e:	d109      	bne.n	d4b4 <strcmp+0x13c>
    d4a0:	f850 2b04 	ldr.w	r2, [r0], #4
    d4a4:	e7e6      	b.n	d474 <strcmp+0xfc>
    d4a6:	ea5f 4c0c 	movs.w	ip, ip, lsl #16
    d4aa:	d12f      	bne.n	d50c <strcmp+0x194>
    d4ac:	880b      	ldrh	r3, [r1, #0]
    d4ae:	ea4f 4512 	mov.w	r5, r2, lsr #16
    d4b2:	e02f      	b.n	d514 <strcmp+0x19c>
    d4b4:	ea4f 4303 	mov.w	r3, r3, lsl #16
    d4b8:	ea4f 4512 	mov.w	r5, r2, lsr #16
    d4bc:	ea4f 4313 	mov.w	r3, r3, lsr #16
    d4c0:	e028      	b.n	d514 <strcmp+0x19c>
    d4c2:	bf00      	nop
    d4c4:	f002 05ff 	and.w	r5, r2, #255	; 0xff
    d4c8:	ebb5 6f13 	cmp.w	r5, r3, lsr #24
    d4cc:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
    d4d0:	ea2c 0c02 	bic.w	ip, ip, r2
    d4d4:	d10d      	bne.n	d4f2 <strcmp+0x17a>
    d4d6:	f01c 3c80 	ands.w	ip, ip, #2155905152	; 0x80808080
    d4da:	bf08      	it	eq
    d4dc:	f851 3b04 	ldreq.w	r3, [r1], #4
    d4e0:	d10a      	bne.n	d4f8 <strcmp+0x180>
    d4e2:	ea85 0502 	eor.w	r5, r5, r2
    d4e6:	ebb5 2f03 	cmp.w	r5, r3, lsl #8
    d4ea:	d10a      	bne.n	d502 <strcmp+0x18a>
    d4ec:	f850 2b04 	ldr.w	r2, [r0], #4
    d4f0:	e7e8      	b.n	d4c4 <strcmp+0x14c>
    d4f2:	ea4f 6313 	mov.w	r3, r3, lsr #24
    d4f6:	e00d      	b.n	d514 <strcmp+0x19c>
    d4f8:	f012 0fff 	tst.w	r2, #255	; 0xff
    d4fc:	d006      	beq.n	d50c <strcmp+0x194>
    d4fe:	f851 3b04 	ldr.w	r3, [r1], #4
    d502:	ea4f 2512 	mov.w	r5, r2, lsr #8
    d506:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
    d50a:	e003      	b.n	d514 <strcmp+0x19c>
    d50c:	f04f 0000 	mov.w	r0, #0
    d510:	bc20      	pop	{r5}
    d512:	4770      	bx	lr
    d514:	f005 02ff 	and.w	r2, r5, #255	; 0xff
    d518:	f003 00ff 	and.w	r0, r3, #255	; 0xff
    d51c:	2801      	cmp	r0, #1
    d51e:	bf28      	it	cs
    d520:	4290      	cmpcs	r0, r2
    d522:	bf04      	itt	eq
    d524:	0a2d      	lsreq	r5, r5, #8
    d526:	0a1b      	lsreq	r3, r3, #8
    d528:	d0f4      	beq.n	d514 <strcmp+0x19c>
    d52a:	eba2 0000 	sub.w	r0, r2, r0
    d52e:	bc20      	pop	{r5}
    d530:	4770      	bx	lr
    d532:	bf00      	nop

0000d534 <strlen>:
    d534:	f020 0103 	bic.w	r1, r0, #3
    d538:	f010 0003 	ands.w	r0, r0, #3
    d53c:	f1c0 0000 	rsb	r0, r0, #0
    d540:	f851 3b04 	ldr.w	r3, [r1], #4
    d544:	f100 0c04 	add.w	ip, r0, #4
    d548:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
    d54c:	f06f 0200 	mvn.w	r2, #0
    d550:	bf1c      	itt	ne
    d552:	fa22 f20c 	lsrne.w	r2, r2, ip
    d556:	4313      	orrne	r3, r2
    d558:	f04f 0c01 	mov.w	ip, #1
    d55c:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
    d560:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
    d564:	eba3 020c 	sub.w	r2, r3, ip
    d568:	ea22 0203 	bic.w	r2, r2, r3
    d56c:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
    d570:	bf04      	itt	eq
    d572:	f851 3b04 	ldreq.w	r3, [r1], #4
    d576:	3004      	addeq	r0, #4
    d578:	d0f4      	beq.n	d564 <strlen+0x30>
    d57a:	f1c2 0100 	rsb	r1, r2, #0
    d57e:	ea02 0201 	and.w	r2, r2, r1
    d582:	fab2 f282 	clz	r2, r2
    d586:	f1c2 021f 	rsb	r2, r2, #31
    d58a:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
    d58e:	4770      	bx	lr

0000d590 <strncmp>:
    d590:	b3a2      	cbz	r2, d5fc <strncmp+0x6c>
    d592:	b530      	push	{r4, r5, lr}
    d594:	ea40 0401 	orr.w	r4, r0, r1
    d598:	07a4      	lsls	r4, r4, #30
    d59a:	4686      	mov	lr, r0
    d59c:	460b      	mov	r3, r1
    d59e:	d02a      	beq.n	d5f6 <strncmp+0x66>
    d5a0:	7804      	ldrb	r4, [r0, #0]
    d5a2:	780b      	ldrb	r3, [r1, #0]
    d5a4:	42a3      	cmp	r3, r4
    d5a6:	d12f      	bne.n	d608 <strncmp+0x78>
    d5a8:	2a01      	cmp	r2, #1
    d5aa:	d00c      	beq.n	d5c6 <strncmp+0x36>
    d5ac:	4684      	mov	ip, r0
    d5ae:	b154      	cbz	r4, d5c6 <strncmp+0x36>
    d5b0:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
    d5b4:	f811 3f01 	ldrb.w	r3, [r1, #1]!
    d5b8:	429c      	cmp	r4, r3
    d5ba:	d125      	bne.n	d608 <strncmp+0x78>
    d5bc:	ea6f 030c 	mvn.w	r3, ip
    d5c0:	4413      	add	r3, r2
    d5c2:	18c3      	adds	r3, r0, r3
    d5c4:	d1f3      	bne.n	d5ae <strncmp+0x1e>
    d5c6:	2000      	movs	r0, #0
    d5c8:	bd30      	pop	{r4, r5, pc}
    d5ca:	4619      	mov	r1, r3
    d5cc:	f8de 4000 	ldr.w	r4, [lr]
    d5d0:	4670      	mov	r0, lr
    d5d2:	f1a4 3301 	sub.w	r3, r4, #16843009	; 0x1010101
    d5d6:	ea23 0c04 	bic.w	ip, r3, r4
    d5da:	460b      	mov	r3, r1
    d5dc:	f853 5b04 	ldr.w	r5, [r3], #4
    d5e0:	f10e 0e04 	add.w	lr, lr, #4
    d5e4:	42ac      	cmp	r4, r5
    d5e6:	d10b      	bne.n	d600 <strncmp+0x70>
    d5e8:	3a04      	subs	r2, #4
    d5ea:	d0ec      	beq.n	d5c6 <strncmp+0x36>
    d5ec:	f01c 3f80 	tst.w	ip, #2155905152	; 0x80808080
    d5f0:	d1e9      	bne.n	d5c6 <strncmp+0x36>
    d5f2:	4670      	mov	r0, lr
    d5f4:	4619      	mov	r1, r3
    d5f6:	2a03      	cmp	r2, #3
    d5f8:	d8e7      	bhi.n	d5ca <strncmp+0x3a>
    d5fa:	e7d1      	b.n	d5a0 <strncmp+0x10>
    d5fc:	4610      	mov	r0, r2
    d5fe:	4770      	bx	lr
    d600:	7804      	ldrb	r4, [r0, #0]
    d602:	780b      	ldrb	r3, [r1, #0]
    d604:	429c      	cmp	r4, r3
    d606:	d0d1      	beq.n	d5ac <strncmp+0x1c>
    d608:	1ae0      	subs	r0, r4, r3
    d60a:	bd30      	pop	{r4, r5, pc}

0000d60c <_svfprintf_r>:
    d60c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d610:	b0d5      	sub	sp, #340	; 0x154
    d612:	460c      	mov	r4, r1
    d614:	910c      	str	r1, [sp, #48]	; 0x30
    d616:	4691      	mov	r9, r2
    d618:	930e      	str	r3, [sp, #56]	; 0x38
    d61a:	900a      	str	r0, [sp, #40]	; 0x28
    d61c:	f006 f91a 	bl	13854 <_localeconv_r>
    d620:	6803      	ldr	r3, [r0, #0]
    d622:	4618      	mov	r0, r3
    d624:	9317      	str	r3, [sp, #92]	; 0x5c
    d626:	f7ff ff85 	bl	d534 <strlen>
    d62a:	89a3      	ldrh	r3, [r4, #12]
    d62c:	9016      	str	r0, [sp, #88]	; 0x58
    d62e:	0619      	lsls	r1, r3, #24
    d630:	d503      	bpl.n	d63a <_svfprintf_r+0x2e>
    d632:	6923      	ldr	r3, [r4, #16]
    d634:	2b00      	cmp	r3, #0
    d636:	f000 878f 	beq.w	e558 <_svfprintf_r+0xf4c>
    d63a:	2400      	movs	r4, #0
    d63c:	ab2b      	add	r3, sp, #172	; 0xac
    d63e:	4622      	mov	r2, r4
    d640:	4698      	mov	r8, r3
    d642:	464d      	mov	r5, r9
    d644:	e9cd 4429 	strd	r4, r4, [sp, #164]	; 0xa4
    d648:	9328      	str	r3, [sp, #160]	; 0xa0
    d64a:	9412      	str	r4, [sp, #72]	; 0x48
    d64c:	2300      	movs	r3, #0
    d64e:	2400      	movs	r4, #0
    d650:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
    d654:	782b      	ldrb	r3, [r5, #0]
    d656:	e9cd 2219 	strd	r2, r2, [sp, #100]	; 0x64
    d65a:	e9cd 221b 	strd	r2, r2, [sp, #108]	; 0x6c
    d65e:	9218      	str	r2, [sp, #96]	; 0x60
    d660:	9208      	str	r2, [sp, #32]
    d662:	2b00      	cmp	r3, #0
    d664:	f000 81ce 	beq.w	da04 <_svfprintf_r+0x3f8>
    d668:	46aa      	mov	sl, r5
    d66a:	e004      	b.n	d676 <_svfprintf_r+0x6a>
    d66c:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
    d670:	2b00      	cmp	r3, #0
    d672:	f000 8109 	beq.w	d888 <_svfprintf_r+0x27c>
    d676:	2b25      	cmp	r3, #37	; 0x25
    d678:	d1f8      	bne.n	d66c <_svfprintf_r+0x60>
    d67a:	ebba 0605 	subs.w	r6, sl, r5
    d67e:	f040 8107 	bne.w	d890 <_svfprintf_r+0x284>
    d682:	f89a 3000 	ldrb.w	r3, [sl]
    d686:	2b00      	cmp	r3, #0
    d688:	f000 81bc 	beq.w	da04 <_svfprintf_r+0x3f8>
    d68c:	2300      	movs	r3, #0
    d68e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    d692:	f04f 092b 	mov.w	r9, #43	; 0x2b
    d696:	2420      	movs	r4, #32
    d698:	461f      	mov	r7, r3
    d69a:	f89a 6001 	ldrb.w	r6, [sl, #1]
    d69e:	9207      	str	r2, [sp, #28]
    d6a0:	f10a 0a01 	add.w	sl, sl, #1
    d6a4:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
    d6a8:	9309      	str	r3, [sp, #36]	; 0x24
    d6aa:	f10a 0a01 	add.w	sl, sl, #1
    d6ae:	f1a6 0320 	sub.w	r3, r6, #32
    d6b2:	2b5a      	cmp	r3, #90	; 0x5a
    d6b4:	f200 8120 	bhi.w	d8f8 <_svfprintf_r+0x2ec>
    d6b8:	e8df f013 	tbh	[pc, r3, lsl #1]
    d6bc:	011e02ca 	.word	0x011e02ca
    d6c0:	02c5011e 	.word	0x02c5011e
    d6c4:	011e011e 	.word	0x011e011e
    d6c8:	02a3011e 	.word	0x02a3011e
    d6cc:	011e011e 	.word	0x011e011e
    d6d0:	02f3006a 	.word	0x02f3006a
    d6d4:	0247011e 	.word	0x0247011e
    d6d8:	011e02d9 	.word	0x011e02d9
    d6dc:	005b02d4 	.word	0x005b02d4
    d6e0:	005b005b 	.word	0x005b005b
    d6e4:	005b005b 	.word	0x005b005b
    d6e8:	005b005b 	.word	0x005b005b
    d6ec:	005b005b 	.word	0x005b005b
    d6f0:	011e011e 	.word	0x011e011e
    d6f4:	011e011e 	.word	0x011e011e
    d6f8:	011e011e 	.word	0x011e011e
    d6fc:	01b0011e 	.word	0x01b0011e
    d700:	020b011e 	.word	0x020b011e
    d704:	01b0007a 	.word	0x01b0007a
    d708:	01b001b0 	.word	0x01b001b0
    d70c:	011e011e 	.word	0x011e011e
    d710:	011e011e 	.word	0x011e011e
    d714:	011e029e 	.word	0x011e029e
    d718:	00b6011e 	.word	0x00b6011e
    d71c:	011e011e 	.word	0x011e011e
    d720:	0219011e 	.word	0x0219011e
    d724:	024c011e 	.word	0x024c011e
    d728:	011e011e 	.word	0x011e011e
    d72c:	011e073f 	.word	0x011e073f
    d730:	011e011e 	.word	0x011e011e
    d734:	011e011e 	.word	0x011e011e
    d738:	011e011e 	.word	0x011e011e
    d73c:	01b0011e 	.word	0x01b0011e
    d740:	020b011e 	.word	0x020b011e
    d744:	01b0007c 	.word	0x01b0007c
    d748:	01b001b0 	.word	0x01b001b0
    d74c:	007c0291 	.word	0x007c0291
    d750:	011e0075 	.word	0x011e0075
    d754:	011e0284 	.word	0x011e0284
    d758:	00b80270 	.word	0x00b80270
    d75c:	0075025e 	.word	0x0075025e
    d760:	0219011e 	.word	0x0219011e
    d764:	071c0072 	.word	0x071c0072
    d768:	011e011e 	.word	0x011e011e
    d76c:	011e071f 	.word	0x011e071f
    d770:	0072      	.short	0x0072
    d772:	2200      	movs	r2, #0
    d774:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    d778:	f81a 6b01 	ldrb.w	r6, [sl], #1
    d77c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
    d780:	eb03 0242 	add.w	r2, r3, r2, lsl #1
    d784:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    d788:	2b09      	cmp	r3, #9
    d78a:	d9f5      	bls.n	d778 <_svfprintf_r+0x16c>
    d78c:	9209      	str	r2, [sp, #36]	; 0x24
    d78e:	e78e      	b.n	d6ae <_svfprintf_r+0xa2>
    d790:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d792:	f853 2b04 	ldr.w	r2, [r3], #4
    d796:	2a00      	cmp	r2, #0
    d798:	9209      	str	r2, [sp, #36]	; 0x24
    d79a:	930e      	str	r3, [sp, #56]	; 0x38
    d79c:	f2c0 81d2 	blt.w	db44 <_svfprintf_r+0x538>
    d7a0:	f89a 6000 	ldrb.w	r6, [sl]
    d7a4:	e781      	b.n	d6aa <_svfprintf_r+0x9e>
    d7a6:	f89a 6000 	ldrb.w	r6, [sl]
    d7aa:	f047 0720 	orr.w	r7, r7, #32
    d7ae:	e77c      	b.n	d6aa <_svfprintf_r+0x9e>
    d7b0:	f047 0710 	orr.w	r7, r7, #16
    d7b4:	06ba      	lsls	r2, r7, #26
    d7b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d7b8:	f140 817d 	bpl.w	dab6 <_svfprintf_r+0x4aa>
    d7bc:	3307      	adds	r3, #7
    d7be:	f023 0307 	bic.w	r3, r3, #7
    d7c2:	461a      	mov	r2, r3
    d7c4:	685b      	ldr	r3, [r3, #4]
    d7c6:	f852 4b08 	ldr.w	r4, [r2], #8
    d7ca:	4699      	mov	r9, r3
    d7cc:	920e      	str	r2, [sp, #56]	; 0x38
    d7ce:	2b00      	cmp	r3, #0
    d7d0:	f2c0 857f 	blt.w	e2d2 <_svfprintf_r+0xcc6>
    d7d4:	9b07      	ldr	r3, [sp, #28]
    d7d6:	3301      	adds	r3, #1
    d7d8:	f001 8039 	beq.w	e84e <_svfprintf_r+0x1242>
    d7dc:	ea54 0309 	orrs.w	r3, r4, r9
    d7e0:	f027 0b80 	bic.w	fp, r7, #128	; 0x80
    d7e4:	f000 8505 	beq.w	e1f2 <_svfprintf_r+0xbe6>
    d7e8:	2c0a      	cmp	r4, #10
    d7ea:	f179 0300 	sbcs.w	r3, r9, #0
    d7ee:	f080 8793 	bcs.w	e718 <_svfprintf_r+0x110c>
    d7f2:	2301      	movs	r3, #1
    d7f4:	465f      	mov	r7, fp
    d7f6:	3430      	adds	r4, #48	; 0x30
    d7f8:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
    d7fc:	930b      	str	r3, [sp, #44]	; 0x2c
    d7fe:	f20d 154f 	addw	r5, sp, #335	; 0x14f
    d802:	9a07      	ldr	r2, [sp, #28]
    d804:	990b      	ldr	r1, [sp, #44]	; 0x2c
    d806:	2300      	movs	r3, #0
    d808:	428a      	cmp	r2, r1
    d80a:	bfb8      	it	lt
    d80c:	460a      	movlt	r2, r1
    d80e:	9206      	str	r2, [sp, #24]
    d810:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    d814:	930d      	str	r3, [sp, #52]	; 0x34
    d816:	930f      	str	r3, [sp, #60]	; 0x3c
    d818:	9313      	str	r3, [sp, #76]	; 0x4c
    d81a:	9310      	str	r3, [sp, #64]	; 0x40
    d81c:	2a00      	cmp	r2, #0
    d81e:	d07c      	beq.n	d91a <_svfprintf_r+0x30e>
    d820:	9b06      	ldr	r3, [sp, #24]
    d822:	3301      	adds	r3, #1
    d824:	9306      	str	r3, [sp, #24]
    d826:	e078      	b.n	d91a <_svfprintf_r+0x30e>
    d828:	f047 0710 	orr.w	r7, r7, #16
    d82c:	f017 0920 	ands.w	r9, r7, #32
    d830:	f000 8132 	beq.w	da98 <_svfprintf_r+0x48c>
    d834:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d836:	3307      	adds	r3, #7
    d838:	f023 0307 	bic.w	r3, r3, #7
    d83c:	f8d3 9004 	ldr.w	r9, [r3, #4]
    d840:	f853 4b08 	ldr.w	r4, [r3], #8
    d844:	930e      	str	r3, [sp, #56]	; 0x38
    d846:	2300      	movs	r3, #0
    d848:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
    d84c:	2200      	movs	r2, #0
    d84e:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    d852:	9a07      	ldr	r2, [sp, #28]
    d854:	1c51      	adds	r1, r2, #1
    d856:	f000 822a 	beq.w	dcae <_svfprintf_r+0x6a2>
    d85a:	ea54 0109 	orrs.w	r1, r4, r9
    d85e:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
    d862:	f040 8223 	bne.w	dcac <_svfprintf_r+0x6a0>
    d866:	2a00      	cmp	r2, #0
    d868:	f041 802b 	bne.w	e8c2 <_svfprintf_r+0x12b6>
    d86c:	2b00      	cmp	r3, #0
    d86e:	f040 84c5 	bne.w	e1fc <_svfprintf_r+0xbf0>
    d872:	f01b 0301 	ands.w	r3, fp, #1
    d876:	930b      	str	r3, [sp, #44]	; 0x2c
    d878:	f000 8554 	beq.w	e324 <_svfprintf_r+0xd18>
    d87c:	2330      	movs	r3, #48	; 0x30
    d87e:	f20d 154f 	addw	r5, sp, #335	; 0x14f
    d882:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
    d886:	e7bc      	b.n	d802 <_svfprintf_r+0x1f6>
    d888:	ebba 0605 	subs.w	r6, sl, r5
    d88c:	f000 80ba 	beq.w	da04 <_svfprintf_r+0x3f8>
    d890:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
    d892:	e9c8 5600 	strd	r5, r6, [r8]
    d896:	4433      	add	r3, r6
    d898:	932a      	str	r3, [sp, #168]	; 0xa8
    d89a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    d89c:	3301      	adds	r3, #1
    d89e:	2b07      	cmp	r3, #7
    d8a0:	9329      	str	r3, [sp, #164]	; 0xa4
    d8a2:	dc05      	bgt.n	d8b0 <_svfprintf_r+0x2a4>
    d8a4:	f108 0808 	add.w	r8, r8, #8
    d8a8:	9b08      	ldr	r3, [sp, #32]
    d8aa:	4433      	add	r3, r6
    d8ac:	9308      	str	r3, [sp, #32]
    d8ae:	e6e8      	b.n	d682 <_svfprintf_r+0x76>
    d8b0:	990c      	ldr	r1, [sp, #48]	; 0x30
    d8b2:	980a      	ldr	r0, [sp, #40]	; 0x28
    d8b4:	aa28      	add	r2, sp, #160	; 0xa0
    d8b6:	f006 fee9 	bl	1468c <__ssprint_r>
    d8ba:	b980      	cbnz	r0, d8de <_svfprintf_r+0x2d2>
    d8bc:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    d8c0:	e7f2      	b.n	d8a8 <_svfprintf_r+0x29c>
    d8c2:	990c      	ldr	r1, [sp, #48]	; 0x30
    d8c4:	980a      	ldr	r0, [sp, #40]	; 0x28
    d8c6:	aa28      	add	r2, sp, #160	; 0xa0
    d8c8:	f006 fee0 	bl	1468c <__ssprint_r>
    d8cc:	2800      	cmp	r0, #0
    d8ce:	f000 808a 	beq.w	d9e6 <_svfprintf_r+0x3da>
    d8d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    d8d4:	b11b      	cbz	r3, d8de <_svfprintf_r+0x2d2>
    d8d6:	990d      	ldr	r1, [sp, #52]	; 0x34
    d8d8:	980a      	ldr	r0, [sp, #40]	; 0x28
    d8da:	f005 fe2f 	bl	1353c <_free_r>
    d8de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    d8e0:	899b      	ldrh	r3, [r3, #12]
    d8e2:	f013 0f40 	tst.w	r3, #64	; 0x40
    d8e6:	9b08      	ldr	r3, [sp, #32]
    d8e8:	bf18      	it	ne
    d8ea:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
    d8ee:	9308      	str	r3, [sp, #32]
    d8f0:	9808      	ldr	r0, [sp, #32]
    d8f2:	b055      	add	sp, #340	; 0x154
    d8f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d8f8:	2e00      	cmp	r6, #0
    d8fa:	f000 8083 	beq.w	da04 <_svfprintf_r+0x3f8>
    d8fe:	2301      	movs	r3, #1
    d900:	2200      	movs	r2, #0
    d902:	f88d 60ec 	strb.w	r6, [sp, #236]	; 0xec
    d906:	9306      	str	r3, [sp, #24]
    d908:	ad3b      	add	r5, sp, #236	; 0xec
    d90a:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    d90e:	930b      	str	r3, [sp, #44]	; 0x2c
    d910:	920d      	str	r2, [sp, #52]	; 0x34
    d912:	9207      	str	r2, [sp, #28]
    d914:	920f      	str	r2, [sp, #60]	; 0x3c
    d916:	9213      	str	r2, [sp, #76]	; 0x4c
    d918:	9210      	str	r2, [sp, #64]	; 0x40
    d91a:	f017 0302 	ands.w	r3, r7, #2
    d91e:	d002      	beq.n	d926 <_svfprintf_r+0x31a>
    d920:	9906      	ldr	r1, [sp, #24]
    d922:	3102      	adds	r1, #2
    d924:	9106      	str	r1, [sp, #24]
    d926:	f017 0b84 	ands.w	fp, r7, #132	; 0x84
    d92a:	d107      	bne.n	d93c <_svfprintf_r+0x330>
    d92c:	9909      	ldr	r1, [sp, #36]	; 0x24
    d92e:	9806      	ldr	r0, [sp, #24]
    d930:	eba1 0900 	sub.w	r9, r1, r0
    d934:	f1b9 0f00 	cmp.w	r9, #0
    d938:	f300 8336 	bgt.w	dfa8 <_svfprintf_r+0x99c>
    d93c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    d93e:	b182      	cbz	r2, d962 <_svfprintf_r+0x356>
    d940:	2201      	movs	r2, #1
    d942:	f8c8 2004 	str.w	r2, [r8, #4]
    d946:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    d948:	3401      	adds	r4, #1
    d94a:	3201      	adds	r2, #1
    d94c:	f10d 0183 	add.w	r1, sp, #131	; 0x83
    d950:	2a07      	cmp	r2, #7
    d952:	942a      	str	r4, [sp, #168]	; 0xa8
    d954:	9229      	str	r2, [sp, #164]	; 0xa4
    d956:	f8c8 1000 	str.w	r1, [r8]
    d95a:	f300 8369 	bgt.w	e030 <_svfprintf_r+0xa24>
    d95e:	f108 0808 	add.w	r8, r8, #8
    d962:	b17b      	cbz	r3, d984 <_svfprintf_r+0x378>
    d964:	2302      	movs	r3, #2
    d966:	f8c8 3004 	str.w	r3, [r8, #4]
    d96a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    d96c:	3402      	adds	r4, #2
    d96e:	3301      	adds	r3, #1
    d970:	aa21      	add	r2, sp, #132	; 0x84
    d972:	2b07      	cmp	r3, #7
    d974:	942a      	str	r4, [sp, #168]	; 0xa8
    d976:	9329      	str	r3, [sp, #164]	; 0xa4
    d978:	f8c8 2000 	str.w	r2, [r8]
    d97c:	f300 836c 	bgt.w	e058 <_svfprintf_r+0xa4c>
    d980:	f108 0808 	add.w	r8, r8, #8
    d984:	f1bb 0f80 	cmp.w	fp, #128	; 0x80
    d988:	f000 822e 	beq.w	dde8 <_svfprintf_r+0x7dc>
    d98c:	9b07      	ldr	r3, [sp, #28]
    d98e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    d990:	eba3 0b02 	sub.w	fp, r3, r2
    d994:	f1bb 0f00 	cmp.w	fp, #0
    d998:	f300 8271 	bgt.w	de7e <_svfprintf_r+0x872>
    d99c:	05fb      	lsls	r3, r7, #23
    d99e:	f100 81c5 	bmi.w	dd2c <_svfprintf_r+0x720>
    d9a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    d9a4:	f8c8 5000 	str.w	r5, [r8]
    d9a8:	441c      	add	r4, r3
    d9aa:	f8c8 3004 	str.w	r3, [r8, #4]
    d9ae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    d9b0:	942a      	str	r4, [sp, #168]	; 0xa8
    d9b2:	3301      	adds	r3, #1
    d9b4:	2b07      	cmp	r3, #7
    d9b6:	9329      	str	r3, [sp, #164]	; 0xa4
    d9b8:	f300 82ea 	bgt.w	df90 <_svfprintf_r+0x984>
    d9bc:	f108 0808 	add.w	r8, r8, #8
    d9c0:	077b      	lsls	r3, r7, #29
    d9c2:	d505      	bpl.n	d9d0 <_svfprintf_r+0x3c4>
    d9c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d9c6:	9a06      	ldr	r2, [sp, #24]
    d9c8:	1a9d      	subs	r5, r3, r2
    d9ca:	2d00      	cmp	r5, #0
    d9cc:	f300 8350 	bgt.w	e070 <_svfprintf_r+0xa64>
    d9d0:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
    d9d4:	9906      	ldr	r1, [sp, #24]
    d9d6:	428a      	cmp	r2, r1
    d9d8:	bfac      	ite	ge
    d9da:	189b      	addge	r3, r3, r2
    d9dc:	185b      	addlt	r3, r3, r1
    d9de:	9308      	str	r3, [sp, #32]
    d9e0:	2c00      	cmp	r4, #0
    d9e2:	f47f af6e 	bne.w	d8c2 <_svfprintf_r+0x2b6>
    d9e6:	2300      	movs	r3, #0
    d9e8:	9329      	str	r3, [sp, #164]	; 0xa4
    d9ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    d9ec:	b11b      	cbz	r3, d9f6 <_svfprintf_r+0x3ea>
    d9ee:	990d      	ldr	r1, [sp, #52]	; 0x34
    d9f0:	980a      	ldr	r0, [sp, #40]	; 0x28
    d9f2:	f005 fda3 	bl	1353c <_free_r>
    d9f6:	4655      	mov	r5, sl
    d9f8:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    d9fc:	782b      	ldrb	r3, [r5, #0]
    d9fe:	2b00      	cmp	r3, #0
    da00:	f47f ae32 	bne.w	d668 <_svfprintf_r+0x5c>
    da04:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
    da06:	2b00      	cmp	r3, #0
    da08:	f43f af69 	beq.w	d8de <_svfprintf_r+0x2d2>
    da0c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    da0e:	980a      	ldr	r0, [sp, #40]	; 0x28
    da10:	4621      	mov	r1, r4
    da12:	aa28      	add	r2, sp, #160	; 0xa0
    da14:	f006 fe3a 	bl	1468c <__ssprint_r>
    da18:	89a3      	ldrh	r3, [r4, #12]
    da1a:	e762      	b.n	d8e2 <_svfprintf_r+0x2d6>
    da1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    da1e:	3307      	adds	r3, #7
    da20:	f023 0207 	bic.w	r2, r3, #7
    da24:	e8f2 3402 	ldrd	r3, r4, [r2], #8
    da28:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
    da2c:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
    da30:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
    da34:	4699      	mov	r9, r3
    da36:	4618      	mov	r0, r3
    da38:	920e      	str	r2, [sp, #56]	; 0x38
    da3a:	4621      	mov	r1, r4
    da3c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    da40:	4bb6      	ldr	r3, [pc, #728]	; (dd1c <_svfprintf_r+0x710>)
    da42:	f7fc fd83 	bl	a54c <__aeabi_dcmpun>
    da46:	2800      	cmp	r0, #0
    da48:	f040 8496 	bne.w	e378 <_svfprintf_r+0xd6c>
    da4c:	4648      	mov	r0, r9
    da4e:	4621      	mov	r1, r4
    da50:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    da54:	4bb1      	ldr	r3, [pc, #708]	; (dd1c <_svfprintf_r+0x710>)
    da56:	f008 fb55 	bl	16104 <__aeabi_dcmple>
    da5a:	2800      	cmp	r0, #0
    da5c:	f040 848c 	bne.w	e378 <_svfprintf_r+0xd6c>
    da60:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
    da64:	2200      	movs	r2, #0
    da66:	2300      	movs	r3, #0
    da68:	f008 fb42 	bl	160f0 <__aeabi_dcmplt>
    da6c:	2800      	cmp	r0, #0
    da6e:	f040 87a6 	bne.w	e9be <_svfprintf_r+0x13b2>
    da72:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    da76:	2100      	movs	r1, #0
    da78:	2003      	movs	r0, #3
    da7a:	4da9      	ldr	r5, [pc, #676]	; (dd20 <_svfprintf_r+0x714>)
    da7c:	4ba9      	ldr	r3, [pc, #676]	; (dd24 <_svfprintf_r+0x718>)
    da7e:	f027 0780 	bic.w	r7, r7, #128	; 0x80
    da82:	910d      	str	r1, [sp, #52]	; 0x34
    da84:	9006      	str	r0, [sp, #24]
    da86:	2e47      	cmp	r6, #71	; 0x47
    da88:	bfc8      	it	gt
    da8a:	461d      	movgt	r5, r3
    da8c:	9107      	str	r1, [sp, #28]
    da8e:	900b      	str	r0, [sp, #44]	; 0x2c
    da90:	910f      	str	r1, [sp, #60]	; 0x3c
    da92:	9113      	str	r1, [sp, #76]	; 0x4c
    da94:	9110      	str	r1, [sp, #64]	; 0x40
    da96:	e6c1      	b.n	d81c <_svfprintf_r+0x210>
    da98:	f017 0310 	ands.w	r3, r7, #16
    da9c:	f040 8462 	bne.w	e364 <_svfprintf_r+0xd58>
    daa0:	f017 0240 	ands.w	r2, r7, #64	; 0x40
    daa4:	f000 877b 	beq.w	e99e <_svfprintf_r+0x1392>
    daa8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    daaa:	4699      	mov	r9, r3
    daac:	f852 4b04 	ldr.w	r4, [r2], #4
    dab0:	920e      	str	r2, [sp, #56]	; 0x38
    dab2:	b2a4      	uxth	r4, r4
    dab4:	e6c7      	b.n	d846 <_svfprintf_r+0x23a>
    dab6:	f853 4b04 	ldr.w	r4, [r3], #4
    daba:	930e      	str	r3, [sp, #56]	; 0x38
    dabc:	06fb      	lsls	r3, r7, #27
    dabe:	f100 8441 	bmi.w	e344 <_svfprintf_r+0xd38>
    dac2:	067d      	lsls	r5, r7, #25
    dac4:	f140 843b 	bpl.w	e33e <_svfprintf_r+0xd32>
    dac8:	f344 39c0 	sbfx	r9, r4, #15, #1
    dacc:	464b      	mov	r3, r9
    dace:	b224      	sxth	r4, r4
    dad0:	e67d      	b.n	d7ce <_svfprintf_r+0x1c2>
    dad2:	2001      	movs	r0, #1
    dad4:	2200      	movs	r2, #0
    dad6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    dad8:	9006      	str	r0, [sp, #24]
    dada:	f853 1b04 	ldr.w	r1, [r3], #4
    dade:	ad3b      	add	r5, sp, #236	; 0xec
    dae0:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    dae4:	f88d 10ec 	strb.w	r1, [sp, #236]	; 0xec
    dae8:	930e      	str	r3, [sp, #56]	; 0x38
    daea:	900b      	str	r0, [sp, #44]	; 0x2c
    daec:	e710      	b.n	d910 <_svfprintf_r+0x304>
    daee:	f04f 0900 	mov.w	r9, #0
    daf2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    daf4:	9b07      	ldr	r3, [sp, #28]
    daf6:	f854 5b04 	ldr.w	r5, [r4], #4
    dafa:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
    dafe:	2d00      	cmp	r5, #0
    db00:	f000 86ee 	beq.w	e8e0 <_svfprintf_r+0x12d4>
    db04:	1c5a      	adds	r2, r3, #1
    db06:	f000 8560 	beq.w	e5ca <_svfprintf_r+0xfbe>
    db0a:	461a      	mov	r2, r3
    db0c:	4649      	mov	r1, r9
    db0e:	4628      	mov	r0, r5
    db10:	f7fe fdce 	bl	c6b0 <memchr>
    db14:	900d      	str	r0, [sp, #52]	; 0x34
    db16:	2800      	cmp	r0, #0
    db18:	f001 809e 	beq.w	ec58 <_svfprintf_r+0x164c>
    db1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    db1e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    db22:	1b5b      	subs	r3, r3, r5
    db24:	930b      	str	r3, [sp, #44]	; 0x2c
    db26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    db2a:	f8cd 901c 	str.w	r9, [sp, #28]
    db2e:	940e      	str	r4, [sp, #56]	; 0x38
    db30:	9306      	str	r3, [sp, #24]
    db32:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
    db36:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
    db3a:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
    db3e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
    db42:	e66b      	b.n	d81c <_svfprintf_r+0x210>
    db44:	9b09      	ldr	r3, [sp, #36]	; 0x24
    db46:	425b      	negs	r3, r3
    db48:	9309      	str	r3, [sp, #36]	; 0x24
    db4a:	f89a 6000 	ldrb.w	r6, [sl]
    db4e:	f047 0704 	orr.w	r7, r7, #4
    db52:	e5aa      	b.n	d6aa <_svfprintf_r+0x9e>
    db54:	f047 0b10 	orr.w	fp, r7, #16
    db58:	f01b 0920 	ands.w	r9, fp, #32
    db5c:	f000 83aa 	beq.w	e2b4 <_svfprintf_r+0xca8>
    db60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    db62:	3307      	adds	r3, #7
    db64:	f023 0307 	bic.w	r3, r3, #7
    db68:	461a      	mov	r2, r3
    db6a:	f852 4b08 	ldr.w	r4, [r2], #8
    db6e:	f8d3 9004 	ldr.w	r9, [r3, #4]
    db72:	920e      	str	r2, [sp, #56]	; 0x38
    db74:	2301      	movs	r3, #1
    db76:	e669      	b.n	d84c <_svfprintf_r+0x240>
    db78:	2230      	movs	r2, #48	; 0x30
    db7a:	2678      	movs	r6, #120	; 0x78
    db7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    db7e:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
    db82:	f853 4b04 	ldr.w	r4, [r3], #4
    db86:	4a68      	ldr	r2, [pc, #416]	; (dd28 <_svfprintf_r+0x71c>)
    db88:	930e      	str	r3, [sp, #56]	; 0x38
    db8a:	f04f 0900 	mov.w	r9, #0
    db8e:	2302      	movs	r3, #2
    db90:	f047 0b02 	orr.w	fp, r7, #2
    db94:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
    db98:	9218      	str	r2, [sp, #96]	; 0x60
    db9a:	e657      	b.n	d84c <_svfprintf_r+0x240>
    db9c:	06bd      	lsls	r5, r7, #26
    db9e:	f100 83d6 	bmi.w	e34e <_svfprintf_r+0xd42>
    dba2:	06fc      	lsls	r4, r7, #27
    dba4:	f100 8693 	bmi.w	e8ce <_svfprintf_r+0x12c2>
    dba8:	0678      	lsls	r0, r7, #25
    dbaa:	f100 875d 	bmi.w	ea68 <_svfprintf_r+0x145c>
    dbae:	05b9      	lsls	r1, r7, #22
    dbb0:	f140 868d 	bpl.w	e8ce <_svfprintf_r+0x12c2>
    dbb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    dbb6:	9908      	ldr	r1, [sp, #32]
    dbb8:	f853 2b04 	ldr.w	r2, [r3], #4
    dbbc:	4655      	mov	r5, sl
    dbbe:	7011      	strb	r1, [r2, #0]
    dbc0:	930e      	str	r3, [sp, #56]	; 0x38
    dbc2:	e71b      	b.n	d9fc <_svfprintf_r+0x3f0>
    dbc4:	f89a 6000 	ldrb.w	r6, [sl]
    dbc8:	2e6c      	cmp	r6, #108	; 0x6c
    dbca:	bf03      	ittte	eq
    dbcc:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
    dbd0:	f047 0720 	orreq.w	r7, r7, #32
    dbd4:	f10a 0a01 	addeq.w	sl, sl, #1
    dbd8:	f047 0710 	orrne.w	r7, r7, #16
    dbdc:	e565      	b.n	d6aa <_svfprintf_r+0x9e>
    dbde:	f89a 6000 	ldrb.w	r6, [sl]
    dbe2:	2e68      	cmp	r6, #104	; 0x68
    dbe4:	bf03      	ittte	eq
    dbe6:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
    dbea:	f447 7700 	orreq.w	r7, r7, #512	; 0x200
    dbee:	f10a 0a01 	addeq.w	sl, sl, #1
    dbf2:	f047 0740 	orrne.w	r7, r7, #64	; 0x40
    dbf6:	e558      	b.n	d6aa <_svfprintf_r+0x9e>
    dbf8:	f89a 6000 	ldrb.w	r6, [sl]
    dbfc:	f047 0708 	orr.w	r7, r7, #8
    dc00:	e553      	b.n	d6aa <_svfprintf_r+0x9e>
    dc02:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    dc04:	4630      	mov	r0, r6
    dc06:	f005 fe25 	bl	13854 <_localeconv_r>
    dc0a:	6843      	ldr	r3, [r0, #4]
    dc0c:	4618      	mov	r0, r3
    dc0e:	931b      	str	r3, [sp, #108]	; 0x6c
    dc10:	f7ff fc90 	bl	d534 <strlen>
    dc14:	4603      	mov	r3, r0
    dc16:	4630      	mov	r0, r6
    dc18:	931c      	str	r3, [sp, #112]	; 0x70
    dc1a:	461e      	mov	r6, r3
    dc1c:	f005 fe1a 	bl	13854 <_localeconv_r>
    dc20:	6883      	ldr	r3, [r0, #8]
    dc22:	9319      	str	r3, [sp, #100]	; 0x64
    dc24:	2e00      	cmp	r6, #0
    dc26:	f43f adbb 	beq.w	d7a0 <_svfprintf_r+0x194>
    dc2a:	9b19      	ldr	r3, [sp, #100]	; 0x64
    dc2c:	2b00      	cmp	r3, #0
    dc2e:	f43f adb7 	beq.w	d7a0 <_svfprintf_r+0x194>
    dc32:	9b19      	ldr	r3, [sp, #100]	; 0x64
    dc34:	781b      	ldrb	r3, [r3, #0]
    dc36:	2b00      	cmp	r3, #0
    dc38:	f43f adb2 	beq.w	d7a0 <_svfprintf_r+0x194>
    dc3c:	f89a 6000 	ldrb.w	r6, [sl]
    dc40:	f447 6780 	orr.w	r7, r7, #1024	; 0x400
    dc44:	e531      	b.n	d6aa <_svfprintf_r+0x9e>
    dc46:	f89a 6000 	ldrb.w	r6, [sl]
    dc4a:	f047 0701 	orr.w	r7, r7, #1
    dc4e:	e52c      	b.n	d6aa <_svfprintf_r+0x9e>
    dc50:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
    dc54:	2b00      	cmp	r3, #0
    dc56:	f47f ada3 	bne.w	d7a0 <_svfprintf_r+0x194>
    dc5a:	f89a 6000 	ldrb.w	r6, [sl]
    dc5e:	f88d 4083 	strb.w	r4, [sp, #131]	; 0x83
    dc62:	e522      	b.n	d6aa <_svfprintf_r+0x9e>
    dc64:	f89a 6000 	ldrb.w	r6, [sl]
    dc68:	f047 0780 	orr.w	r7, r7, #128	; 0x80
    dc6c:	e51d      	b.n	d6aa <_svfprintf_r+0x9e>
    dc6e:	4652      	mov	r2, sl
    dc70:	f812 6b01 	ldrb.w	r6, [r2], #1
    dc74:	2e2a      	cmp	r6, #42	; 0x2a
    dc76:	f001 81eb 	beq.w	f050 <_svfprintf_r+0x1a44>
    dc7a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    dc7e:	2b09      	cmp	r3, #9
    dc80:	4692      	mov	sl, r2
    dc82:	bf98      	it	ls
    dc84:	2200      	movls	r2, #0
    dc86:	f201 8003 	bhi.w	ec90 <_svfprintf_r+0x1684>
    dc8a:	f81a 6b01 	ldrb.w	r6, [sl], #1
    dc8e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
    dc92:	eb03 0242 	add.w	r2, r3, r2, lsl #1
    dc96:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
    dc9a:	2b09      	cmp	r3, #9
    dc9c:	d9f5      	bls.n	dc8a <_svfprintf_r+0x67e>
    dc9e:	9207      	str	r2, [sp, #28]
    dca0:	e505      	b.n	d6ae <_svfprintf_r+0xa2>
    dca2:	f89a 6000 	ldrb.w	r6, [sl]
    dca6:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
    dcaa:	e4fe      	b.n	d6aa <_svfprintf_r+0x9e>
    dcac:	46bb      	mov	fp, r7
    dcae:	2b01      	cmp	r3, #1
    dcb0:	f43f ad9a 	beq.w	d7e8 <_svfprintf_r+0x1dc>
    dcb4:	2b02      	cmp	r3, #2
    dcb6:	ad54      	add	r5, sp, #336	; 0x150
    dcb8:	d112      	bne.n	dce0 <_svfprintf_r+0x6d4>
    dcba:	9a18      	ldr	r2, [sp, #96]	; 0x60
    dcbc:	f004 030f 	and.w	r3, r4, #15
    dcc0:	5cd3      	ldrb	r3, [r2, r3]
    dcc2:	0924      	lsrs	r4, r4, #4
    dcc4:	ea44 7409 	orr.w	r4, r4, r9, lsl #28
    dcc8:	ea4f 1919 	mov.w	r9, r9, lsr #4
    dccc:	f805 3d01 	strb.w	r3, [r5, #-1]!
    dcd0:	ea54 0309 	orrs.w	r3, r4, r9
    dcd4:	d1f2      	bne.n	dcbc <_svfprintf_r+0x6b0>
    dcd6:	ab54      	add	r3, sp, #336	; 0x150
    dcd8:	1b5b      	subs	r3, r3, r5
    dcda:	465f      	mov	r7, fp
    dcdc:	930b      	str	r3, [sp, #44]	; 0x2c
    dcde:	e590      	b.n	d802 <_svfprintf_r+0x1f6>
    dce0:	f004 0307 	and.w	r3, r4, #7
    dce4:	08e4      	lsrs	r4, r4, #3
    dce6:	ea44 7449 	orr.w	r4, r4, r9, lsl #29
    dcea:	ea4f 09d9 	mov.w	r9, r9, lsr #3
    dcee:	3330      	adds	r3, #48	; 0x30
    dcf0:	ea54 0109 	orrs.w	r1, r4, r9
    dcf4:	462a      	mov	r2, r5
    dcf6:	f805 3d01 	strb.w	r3, [r5, #-1]!
    dcfa:	d1f1      	bne.n	dce0 <_svfprintf_r+0x6d4>
    dcfc:	f01b 0f01 	tst.w	fp, #1
    dd00:	d0e9      	beq.n	dcd6 <_svfprintf_r+0x6ca>
    dd02:	2b30      	cmp	r3, #48	; 0x30
    dd04:	d0e7      	beq.n	dcd6 <_svfprintf_r+0x6ca>
    dd06:	2330      	movs	r3, #48	; 0x30
    dd08:	3a02      	subs	r2, #2
    dd0a:	f805 3c01 	strb.w	r3, [r5, #-1]
    dd0e:	ab54      	add	r3, sp, #336	; 0x150
    dd10:	1a9b      	subs	r3, r3, r2
    dd12:	465f      	mov	r7, fp
    dd14:	4615      	mov	r5, r2
    dd16:	930b      	str	r3, [sp, #44]	; 0x2c
    dd18:	e573      	b.n	d802 <_svfprintf_r+0x1f6>
    dd1a:	bf00      	nop
    dd1c:	7fefffff 	.word	0x7fefffff
    dd20:	00019fb8 	.word	0x00019fb8
    dd24:	00019fbc 	.word	0x00019fbc
    dd28:	00019fc8 	.word	0x00019fc8
    dd2c:	2e65      	cmp	r6, #101	; 0x65
    dd2e:	f340 80e9 	ble.w	df04 <_svfprintf_r+0x8f8>
    dd32:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
    dd36:	2200      	movs	r2, #0
    dd38:	2300      	movs	r3, #0
    dd3a:	f008 f9cf 	bl	160dc <__aeabi_dcmpeq>
    dd3e:	2800      	cmp	r0, #0
    dd40:	f000 81d2 	beq.w	e0e8 <_svfprintf_r+0xadc>
    dd44:	2301      	movs	r3, #1
    dd46:	f8c8 3004 	str.w	r3, [r8, #4]
    dd4a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    dd4c:	4abf      	ldr	r2, [pc, #764]	; (e04c <_svfprintf_r+0xa40>)
    dd4e:	3301      	adds	r3, #1
    dd50:	3401      	adds	r4, #1
    dd52:	2b07      	cmp	r3, #7
    dd54:	942a      	str	r4, [sp, #168]	; 0xa8
    dd56:	9329      	str	r3, [sp, #164]	; 0xa4
    dd58:	f8c8 2000 	str.w	r2, [r8]
    dd5c:	f300 857a 	bgt.w	e854 <_svfprintf_r+0x1248>
    dd60:	f108 0808 	add.w	r8, r8, #8
    dd64:	9b22      	ldr	r3, [sp, #136]	; 0x88
    dd66:	9a12      	ldr	r2, [sp, #72]	; 0x48
    dd68:	4293      	cmp	r3, r2
    dd6a:	f280 82d7 	bge.w	e31c <_svfprintf_r+0xd10>
    dd6e:	9b16      	ldr	r3, [sp, #88]	; 0x58
    dd70:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    dd72:	441c      	add	r4, r3
    dd74:	e9c8 2300 	strd	r2, r3, [r8]
    dd78:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    dd7a:	942a      	str	r4, [sp, #168]	; 0xa8
    dd7c:	3301      	adds	r3, #1
    dd7e:	2b07      	cmp	r3, #7
    dd80:	9329      	str	r3, [sp, #164]	; 0xa4
    dd82:	f300 83dd 	bgt.w	e540 <_svfprintf_r+0xf34>
    dd86:	f108 0808 	add.w	r8, r8, #8
    dd8a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    dd8c:	1e5d      	subs	r5, r3, #1
    dd8e:	2d00      	cmp	r5, #0
    dd90:	f77f ae16 	ble.w	d9c0 <_svfprintf_r+0x3b4>
    dd94:	2d10      	cmp	r5, #16
    dd96:	f341 8141 	ble.w	f01c <_svfprintf_r+0x1a10>
    dd9a:	f8df 92b4 	ldr.w	r9, [pc, #692]	; e050 <_svfprintf_r+0xa44>
    dd9e:	4622      	mov	r2, r4
    dda0:	4649      	mov	r1, r9
    dda2:	2610      	movs	r6, #16
    dda4:	46b9      	mov	r9, r7
    dda6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    dda8:	460f      	mov	r7, r1
    ddaa:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
    ddae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    ddb0:	e005      	b.n	ddbe <_svfprintf_r+0x7b2>
    ddb2:	f108 0808 	add.w	r8, r8, #8
    ddb6:	3d10      	subs	r5, #16
    ddb8:	2d10      	cmp	r5, #16
    ddba:	f340 8558 	ble.w	e86e <_svfprintf_r+0x1262>
    ddbe:	3301      	adds	r3, #1
    ddc0:	3210      	adds	r2, #16
    ddc2:	2b07      	cmp	r3, #7
    ddc4:	e9c8 7600 	strd	r7, r6, [r8]
    ddc8:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
    ddcc:	ddf1      	ble.n	ddb2 <_svfprintf_r+0x7a6>
    ddce:	4621      	mov	r1, r4
    ddd0:	4658      	mov	r0, fp
    ddd2:	aa28      	add	r2, sp, #160	; 0xa0
    ddd4:	f006 fc5a 	bl	1468c <__ssprint_r>
    ddd8:	2800      	cmp	r0, #0
    ddda:	f47f ad7a 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    ddde:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    dde2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    dde6:	e7e6      	b.n	ddb6 <_svfprintf_r+0x7aa>
    dde8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ddea:	9a06      	ldr	r2, [sp, #24]
    ddec:	eba3 0b02 	sub.w	fp, r3, r2
    ddf0:	f1bb 0f00 	cmp.w	fp, #0
    ddf4:	f77f adca 	ble.w	d98c <_svfprintf_r+0x380>
    ddf8:	f1bb 0f10 	cmp.w	fp, #16
    ddfc:	f341 8005 	ble.w	ee0a <_svfprintf_r+0x17fe>
    de00:	f8df 924c 	ldr.w	r9, [pc, #588]	; e050 <_svfprintf_r+0xa44>
    de04:	4641      	mov	r1, r8
    de06:	4620      	mov	r0, r4
    de08:	46a8      	mov	r8, r5
    de0a:	464c      	mov	r4, r9
    de0c:	2310      	movs	r3, #16
    de0e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    de10:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    de12:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    de16:	e006      	b.n	de26 <_svfprintf_r+0x81a>
    de18:	f1ab 0b10 	sub.w	fp, fp, #16
    de1c:	f1bb 0f10 	cmp.w	fp, #16
    de20:	f101 0108 	add.w	r1, r1, #8
    de24:	dd19      	ble.n	de5a <_svfprintf_r+0x84e>
    de26:	3201      	adds	r2, #1
    de28:	3010      	adds	r0, #16
    de2a:	2a07      	cmp	r2, #7
    de2c:	e9c1 4300 	strd	r4, r3, [r1]
    de30:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
    de34:	ddf0      	ble.n	de18 <_svfprintf_r+0x80c>
    de36:	4629      	mov	r1, r5
    de38:	4648      	mov	r0, r9
    de3a:	aa28      	add	r2, sp, #160	; 0xa0
    de3c:	f006 fc26 	bl	1468c <__ssprint_r>
    de40:	2800      	cmp	r0, #0
    de42:	f47f ad46 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    de46:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
    de4a:	f1ab 0b10 	sub.w	fp, fp, #16
    de4e:	f1bb 0f10 	cmp.w	fp, #16
    de52:	f04f 0310 	mov.w	r3, #16
    de56:	a92b      	add	r1, sp, #172	; 0xac
    de58:	dce5      	bgt.n	de26 <_svfprintf_r+0x81a>
    de5a:	4645      	mov	r5, r8
    de5c:	46a1      	mov	r9, r4
    de5e:	4688      	mov	r8, r1
    de60:	4604      	mov	r4, r0
    de62:	3201      	adds	r2, #1
    de64:	445c      	add	r4, fp
    de66:	2a07      	cmp	r2, #7
    de68:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
    de6c:	f8c8 9000 	str.w	r9, [r8]
    de70:	f8c8 b004 	str.w	fp, [r8, #4]
    de74:	f300 8518 	bgt.w	e8a8 <_svfprintf_r+0x129c>
    de78:	f108 0808 	add.w	r8, r8, #8
    de7c:	e586      	b.n	d98c <_svfprintf_r+0x380>
    de7e:	f1bb 0f10 	cmp.w	fp, #16
    de82:	f340 8597 	ble.w	e9b4 <_svfprintf_r+0x13a8>
    de86:	f8df 91c8 	ldr.w	r9, [pc, #456]	; e050 <_svfprintf_r+0xa44>
    de8a:	4641      	mov	r1, r8
    de8c:	4620      	mov	r0, r4
    de8e:	46a8      	mov	r8, r5
    de90:	464c      	mov	r4, r9
    de92:	2310      	movs	r3, #16
    de94:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    de96:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    de98:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    de9c:	e006      	b.n	deac <_svfprintf_r+0x8a0>
    de9e:	f1ab 0b10 	sub.w	fp, fp, #16
    dea2:	f1bb 0f10 	cmp.w	fp, #16
    dea6:	f101 0108 	add.w	r1, r1, #8
    deaa:	dd19      	ble.n	dee0 <_svfprintf_r+0x8d4>
    deac:	3201      	adds	r2, #1
    deae:	3010      	adds	r0, #16
    deb0:	2a07      	cmp	r2, #7
    deb2:	e9c1 4300 	strd	r4, r3, [r1]
    deb6:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
    deba:	ddf0      	ble.n	de9e <_svfprintf_r+0x892>
    debc:	4629      	mov	r1, r5
    debe:	4648      	mov	r0, r9
    dec0:	aa28      	add	r2, sp, #160	; 0xa0
    dec2:	f006 fbe3 	bl	1468c <__ssprint_r>
    dec6:	2800      	cmp	r0, #0
    dec8:	f47f ad03 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    decc:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
    ded0:	f1ab 0b10 	sub.w	fp, fp, #16
    ded4:	f1bb 0f10 	cmp.w	fp, #16
    ded8:	f04f 0310 	mov.w	r3, #16
    dedc:	a92b      	add	r1, sp, #172	; 0xac
    dede:	dce5      	bgt.n	deac <_svfprintf_r+0x8a0>
    dee0:	4645      	mov	r5, r8
    dee2:	46a1      	mov	r9, r4
    dee4:	4688      	mov	r8, r1
    dee6:	4604      	mov	r4, r0
    dee8:	3201      	adds	r2, #1
    deea:	445c      	add	r4, fp
    deec:	2a07      	cmp	r2, #7
    deee:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
    def2:	f8c8 9000 	str.w	r9, [r8]
    def6:	f8c8 b004 	str.w	fp, [r8, #4]
    defa:	f300 81ce 	bgt.w	e29a <_svfprintf_r+0xc8e>
    defe:	f108 0808 	add.w	r8, r8, #8
    df02:	e54b      	b.n	d99c <_svfprintf_r+0x390>
    df04:	9b12      	ldr	r3, [sp, #72]	; 0x48
    df06:	2b01      	cmp	r3, #1
    df08:	f340 817e 	ble.w	e208 <_svfprintf_r+0xbfc>
    df0c:	2301      	movs	r3, #1
    df0e:	9e29      	ldr	r6, [sp, #164]	; 0xa4
    df10:	3401      	adds	r4, #1
    df12:	441e      	add	r6, r3
    df14:	2e07      	cmp	r6, #7
    df16:	f8c8 5000 	str.w	r5, [r8]
    df1a:	942a      	str	r4, [sp, #168]	; 0xa8
    df1c:	f8c8 3004 	str.w	r3, [r8, #4]
    df20:	9629      	str	r6, [sp, #164]	; 0xa4
    df22:	f300 81e1 	bgt.w	e2e8 <_svfprintf_r+0xcdc>
    df26:	f108 0808 	add.w	r8, r8, #8
    df2a:	9b16      	ldr	r3, [sp, #88]	; 0x58
    df2c:	3601      	adds	r6, #1
    df2e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    df30:	441c      	add	r4, r3
    df32:	2e07      	cmp	r6, #7
    df34:	e9c8 2300 	strd	r2, r3, [r8]
    df38:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
    df3c:	f300 81e1 	bgt.w	e302 <_svfprintf_r+0xcf6>
    df40:	f108 0808 	add.w	r8, r8, #8
    df44:	2200      	movs	r2, #0
    df46:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
    df4a:	2300      	movs	r3, #0
    df4c:	f008 f8c6 	bl	160dc <__aeabi_dcmpeq>
    df50:	2800      	cmp	r0, #0
    df52:	f040 8176 	bne.w	e242 <_svfprintf_r+0xc36>
    df56:	9b12      	ldr	r3, [sp, #72]	; 0x48
    df58:	3601      	adds	r6, #1
    df5a:	3b01      	subs	r3, #1
    df5c:	3501      	adds	r5, #1
    df5e:	441c      	add	r4, r3
    df60:	2e07      	cmp	r6, #7
    df62:	f8c8 5000 	str.w	r5, [r8]
    df66:	9629      	str	r6, [sp, #164]	; 0xa4
    df68:	f8c8 3004 	str.w	r3, [r8, #4]
    df6c:	942a      	str	r4, [sp, #168]	; 0xa8
    df6e:	f300 815b 	bgt.w	e228 <_svfprintf_r+0xc1c>
    df72:	f108 0808 	add.w	r8, r8, #8
    df76:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    df78:	3601      	adds	r6, #1
    df7a:	441c      	add	r4, r3
    df7c:	f8c8 3004 	str.w	r3, [r8, #4]
    df80:	2e07      	cmp	r6, #7
    df82:	ab24      	add	r3, sp, #144	; 0x90
    df84:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
    df88:	f8c8 3000 	str.w	r3, [r8]
    df8c:	f77f ad16 	ble.w	d9bc <_svfprintf_r+0x3b0>
    df90:	990c      	ldr	r1, [sp, #48]	; 0x30
    df92:	980a      	ldr	r0, [sp, #40]	; 0x28
    df94:	aa28      	add	r2, sp, #160	; 0xa0
    df96:	f006 fb79 	bl	1468c <__ssprint_r>
    df9a:	2800      	cmp	r0, #0
    df9c:	f47f ac99 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    dfa0:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    dfa2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    dfa6:	e50b      	b.n	d9c0 <_svfprintf_r+0x3b4>
    dfa8:	f1b9 0f10 	cmp.w	r9, #16
    dfac:	f340 8650 	ble.w	ec50 <_svfprintf_r+0x1644>
    dfb0:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
    dfb4:	4640      	mov	r0, r8
    dfb6:	e9cd 361d 	strd	r3, r6, [sp, #116]	; 0x74
    dfba:	46b8      	mov	r8, r7
    dfbc:	2410      	movs	r4, #16
    dfbe:	464f      	mov	r7, r9
    dfc0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    dfc2:	46a9      	mov	r9, r5
    dfc4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    dfc6:	e004      	b.n	dfd2 <_svfprintf_r+0x9c6>
    dfc8:	3f10      	subs	r7, #16
    dfca:	2f10      	cmp	r7, #16
    dfcc:	f100 0008 	add.w	r0, r0, #8
    dfd0:	dd16      	ble.n	e000 <_svfprintf_r+0x9f4>
    dfd2:	3201      	adds	r2, #1
    dfd4:	4b1f      	ldr	r3, [pc, #124]	; (e054 <_svfprintf_r+0xa48>)
    dfd6:	3110      	adds	r1, #16
    dfd8:	2a07      	cmp	r2, #7
    dfda:	e9c0 3400 	strd	r3, r4, [r0]
    dfde:	e9cd 2129 	strd	r2, r1, [sp, #164]	; 0xa4
    dfe2:	ddf1      	ble.n	dfc8 <_svfprintf_r+0x9bc>
    dfe4:	4631      	mov	r1, r6
    dfe6:	4628      	mov	r0, r5
    dfe8:	aa28      	add	r2, sp, #160	; 0xa0
    dfea:	f006 fb4f 	bl	1468c <__ssprint_r>
    dfee:	2800      	cmp	r0, #0
    dff0:	f47f ac6f 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    dff4:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
    dff8:	3f10      	subs	r7, #16
    dffa:	2f10      	cmp	r7, #16
    dffc:	a82b      	add	r0, sp, #172	; 0xac
    dffe:	dce8      	bgt.n	dfd2 <_svfprintf_r+0x9c6>
    e000:	464d      	mov	r5, r9
    e002:	e9dd 361d 	ldrd	r3, r6, [sp, #116]	; 0x74
    e006:	46b9      	mov	r9, r7
    e008:	4647      	mov	r7, r8
    e00a:	4680      	mov	r8, r0
    e00c:	eb09 0401 	add.w	r4, r9, r1
    e010:	3201      	adds	r2, #1
    e012:	4910      	ldr	r1, [pc, #64]	; (e054 <_svfprintf_r+0xa48>)
    e014:	2a07      	cmp	r2, #7
    e016:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
    e01a:	f8c8 9004 	str.w	r9, [r8, #4]
    e01e:	f8c8 1000 	str.w	r1, [r8]
    e022:	f300 83c3 	bgt.w	e7ac <_svfprintf_r+0x11a0>
    e026:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    e02a:	f108 0808 	add.w	r8, r8, #8
    e02e:	e486      	b.n	d93e <_svfprintf_r+0x332>
    e030:	990c      	ldr	r1, [sp, #48]	; 0x30
    e032:	980a      	ldr	r0, [sp, #40]	; 0x28
    e034:	aa28      	add	r2, sp, #160	; 0xa0
    e036:	931d      	str	r3, [sp, #116]	; 0x74
    e038:	f006 fb28 	bl	1468c <__ssprint_r>
    e03c:	2800      	cmp	r0, #0
    e03e:	f47f ac48 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e042:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e044:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    e046:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e04a:	e48a      	b.n	d962 <_svfprintf_r+0x356>
    e04c:	00019ff8 	.word	0x00019ff8
    e050:	0001a00c 	.word	0x0001a00c
    e054:	00019ffc 	.word	0x00019ffc
    e058:	990c      	ldr	r1, [sp, #48]	; 0x30
    e05a:	980a      	ldr	r0, [sp, #40]	; 0x28
    e05c:	aa28      	add	r2, sp, #160	; 0xa0
    e05e:	f006 fb15 	bl	1468c <__ssprint_r>
    e062:	2800      	cmp	r0, #0
    e064:	f47f ac35 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e068:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e06a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e06e:	e489      	b.n	d984 <_svfprintf_r+0x378>
    e070:	2d10      	cmp	r5, #16
    e072:	f340 86c4 	ble.w	edfe <_svfprintf_r+0x17f2>
    e076:	2610      	movs	r6, #16
    e078:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e07a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
    e07c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
    e080:	e004      	b.n	e08c <_svfprintf_r+0xa80>
    e082:	3d10      	subs	r5, #16
    e084:	2d10      	cmp	r5, #16
    e086:	f108 0808 	add.w	r8, r8, #8
    e08a:	dd17      	ble.n	e0bc <_svfprintf_r+0xab0>
    e08c:	3301      	adds	r3, #1
    e08e:	4ab8      	ldr	r2, [pc, #736]	; (e370 <_svfprintf_r+0xd64>)
    e090:	3410      	adds	r4, #16
    e092:	2b07      	cmp	r3, #7
    e094:	e9c8 2600 	strd	r2, r6, [r8]
    e098:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    e09c:	ddf1      	ble.n	e082 <_svfprintf_r+0xa76>
    e09e:	4649      	mov	r1, r9
    e0a0:	4638      	mov	r0, r7
    e0a2:	aa28      	add	r2, sp, #160	; 0xa0
    e0a4:	f006 faf2 	bl	1468c <__ssprint_r>
    e0a8:	2800      	cmp	r0, #0
    e0aa:	f47f ac12 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e0ae:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
    e0b2:	3d10      	subs	r5, #16
    e0b4:	2d10      	cmp	r5, #16
    e0b6:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e0ba:	dce7      	bgt.n	e08c <_svfprintf_r+0xa80>
    e0bc:	3301      	adds	r3, #1
    e0be:	4aac      	ldr	r2, [pc, #688]	; (e370 <_svfprintf_r+0xd64>)
    e0c0:	442c      	add	r4, r5
    e0c2:	2b07      	cmp	r3, #7
    e0c4:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    e0c8:	f8c8 5004 	str.w	r5, [r8, #4]
    e0cc:	f8c8 2000 	str.w	r2, [r8]
    e0d0:	f77f ac7e 	ble.w	d9d0 <_svfprintf_r+0x3c4>
    e0d4:	990c      	ldr	r1, [sp, #48]	; 0x30
    e0d6:	980a      	ldr	r0, [sp, #40]	; 0x28
    e0d8:	aa28      	add	r2, sp, #160	; 0xa0
    e0da:	f006 fad7 	bl	1468c <__ssprint_r>
    e0de:	2800      	cmp	r0, #0
    e0e0:	f47f abf7 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e0e4:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e0e6:	e473      	b.n	d9d0 <_svfprintf_r+0x3c4>
    e0e8:	9922      	ldr	r1, [sp, #136]	; 0x88
    e0ea:	2900      	cmp	r1, #0
    e0ec:	f340 836f 	ble.w	e7ce <_svfprintf_r+0x11c2>
    e0f0:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
    e0f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e0f6:	4599      	cmp	r9, r3
    e0f8:	bfa8      	it	ge
    e0fa:	4699      	movge	r9, r3
    e0fc:	f1b9 0f00 	cmp.w	r9, #0
    e100:	dd0b      	ble.n	e11a <_svfprintf_r+0xb0e>
    e102:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e104:	444c      	add	r4, r9
    e106:	3301      	adds	r3, #1
    e108:	2b07      	cmp	r3, #7
    e10a:	e9c8 5900 	strd	r5, r9, [r8]
    e10e:	942a      	str	r4, [sp, #168]	; 0xa8
    e110:	9329      	str	r3, [sp, #164]	; 0xa4
    e112:	f300 851d 	bgt.w	eb50 <_svfprintf_r+0x1544>
    e116:	f108 0808 	add.w	r8, r8, #8
    e11a:	9e10      	ldr	r6, [sp, #64]	; 0x40
    e11c:	f1b9 0f00 	cmp.w	r9, #0
    e120:	bfa8      	it	ge
    e122:	eba6 0609 	subge.w	r6, r6, r9
    e126:	2e00      	cmp	r6, #0
    e128:	f300 8225 	bgt.w	e576 <_svfprintf_r+0xf6a>
    e12c:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
    e130:	0578      	lsls	r0, r7, #21
    e132:	44ab      	add	fp, r5
    e134:	f100 825f 	bmi.w	e5f6 <_svfprintf_r+0xfea>
    e138:	9b22      	ldr	r3, [sp, #136]	; 0x88
    e13a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    e13c:	4293      	cmp	r3, r2
    e13e:	db02      	blt.n	e146 <_svfprintf_r+0xb3a>
    e140:	07f9      	lsls	r1, r7, #31
    e142:	f140 8476 	bpl.w	ea32 <_svfprintf_r+0x1426>
    e146:	9a16      	ldr	r2, [sp, #88]	; 0x58
    e148:	9917      	ldr	r1, [sp, #92]	; 0x5c
    e14a:	4414      	add	r4, r2
    e14c:	e9c8 1200 	strd	r1, r2, [r8]
    e150:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    e152:	942a      	str	r4, [sp, #168]	; 0xa8
    e154:	3201      	adds	r2, #1
    e156:	2a07      	cmp	r2, #7
    e158:	9229      	str	r2, [sp, #164]	; 0xa4
    e15a:	f300 8513 	bgt.w	eb84 <_svfprintf_r+0x1578>
    e15e:	f108 0808 	add.w	r8, r8, #8
    e162:	9a12      	ldr	r2, [sp, #72]	; 0x48
    e164:	18ae      	adds	r6, r5, r2
    e166:	eba6 060b 	sub.w	r6, r6, fp
    e16a:	1ad5      	subs	r5, r2, r3
    e16c:	42ae      	cmp	r6, r5
    e16e:	bfa8      	it	ge
    e170:	462e      	movge	r6, r5
    e172:	2e00      	cmp	r6, #0
    e174:	dd0d      	ble.n	e192 <_svfprintf_r+0xb86>
    e176:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e178:	4434      	add	r4, r6
    e17a:	3301      	adds	r3, #1
    e17c:	2b07      	cmp	r3, #7
    e17e:	f8c8 b000 	str.w	fp, [r8]
    e182:	f8c8 6004 	str.w	r6, [r8, #4]
    e186:	942a      	str	r4, [sp, #168]	; 0xa8
    e188:	9329      	str	r3, [sp, #164]	; 0xa4
    e18a:	f300 8571 	bgt.w	ec70 <_svfprintf_r+0x1664>
    e18e:	f108 0808 	add.w	r8, r8, #8
    e192:	2e00      	cmp	r6, #0
    e194:	bfa8      	it	ge
    e196:	1bad      	subge	r5, r5, r6
    e198:	2d00      	cmp	r5, #0
    e19a:	f77f ac11 	ble.w	d9c0 <_svfprintf_r+0x3b4>
    e19e:	2d10      	cmp	r5, #16
    e1a0:	f340 873c 	ble.w	f01c <_svfprintf_r+0x1a10>
    e1a4:	f8df 91cc 	ldr.w	r9, [pc, #460]	; e374 <_svfprintf_r+0xd68>
    e1a8:	4622      	mov	r2, r4
    e1aa:	4649      	mov	r1, r9
    e1ac:	2610      	movs	r6, #16
    e1ae:	46b9      	mov	r9, r7
    e1b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e1b2:	460f      	mov	r7, r1
    e1b4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
    e1b8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    e1ba:	e005      	b.n	e1c8 <_svfprintf_r+0xbbc>
    e1bc:	f108 0808 	add.w	r8, r8, #8
    e1c0:	3d10      	subs	r5, #16
    e1c2:	2d10      	cmp	r5, #16
    e1c4:	f340 8353 	ble.w	e86e <_svfprintf_r+0x1262>
    e1c8:	3301      	adds	r3, #1
    e1ca:	3210      	adds	r2, #16
    e1cc:	2b07      	cmp	r3, #7
    e1ce:	e9c8 7600 	strd	r7, r6, [r8]
    e1d2:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
    e1d6:	ddf1      	ble.n	e1bc <_svfprintf_r+0xbb0>
    e1d8:	4621      	mov	r1, r4
    e1da:	4658      	mov	r0, fp
    e1dc:	aa28      	add	r2, sp, #160	; 0xa0
    e1de:	f006 fa55 	bl	1468c <__ssprint_r>
    e1e2:	2800      	cmp	r0, #0
    e1e4:	f47f ab75 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e1e8:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    e1ec:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e1f0:	e7e6      	b.n	e1c0 <_svfprintf_r+0xbb4>
    e1f2:	9b07      	ldr	r3, [sp, #28]
    e1f4:	2b00      	cmp	r3, #0
    e1f6:	f47f aafc 	bne.w	d7f2 <_svfprintf_r+0x1e6>
    e1fa:	465f      	mov	r7, fp
    e1fc:	2300      	movs	r3, #0
    e1fe:	ad54      	add	r5, sp, #336	; 0x150
    e200:	9307      	str	r3, [sp, #28]
    e202:	930b      	str	r3, [sp, #44]	; 0x2c
    e204:	f7ff bafd 	b.w	d802 <_svfprintf_r+0x1f6>
    e208:	07fa      	lsls	r2, r7, #31
    e20a:	f53f ae7f 	bmi.w	df0c <_svfprintf_r+0x900>
    e20e:	2301      	movs	r3, #1
    e210:	9e29      	ldr	r6, [sp, #164]	; 0xa4
    e212:	3401      	adds	r4, #1
    e214:	441e      	add	r6, r3
    e216:	2e07      	cmp	r6, #7
    e218:	f8c8 5000 	str.w	r5, [r8]
    e21c:	942a      	str	r4, [sp, #168]	; 0xa8
    e21e:	f8c8 3004 	str.w	r3, [r8, #4]
    e222:	9629      	str	r6, [sp, #164]	; 0xa4
    e224:	f77f aea5 	ble.w	df72 <_svfprintf_r+0x966>
    e228:	990c      	ldr	r1, [sp, #48]	; 0x30
    e22a:	980a      	ldr	r0, [sp, #40]	; 0x28
    e22c:	aa28      	add	r2, sp, #160	; 0xa0
    e22e:	f006 fa2d 	bl	1468c <__ssprint_r>
    e232:	2800      	cmp	r0, #0
    e234:	f47f ab4d 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e238:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
    e23c:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e240:	e699      	b.n	df76 <_svfprintf_r+0x96a>
    e242:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e244:	1e5d      	subs	r5, r3, #1
    e246:	2d00      	cmp	r5, #0
    e248:	f77f ae95 	ble.w	df76 <_svfprintf_r+0x96a>
    e24c:	2d10      	cmp	r5, #16
    e24e:	f340 86df 	ble.w	f010 <_svfprintf_r+0x1a04>
    e252:	4622      	mov	r2, r4
    e254:	9707      	str	r7, [sp, #28]
    e256:	f04f 0b10 	mov.w	fp, #16
    e25a:	f8df 9118 	ldr.w	r9, [pc, #280]	; e374 <_svfprintf_r+0xd68>
    e25e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    e260:	9f0c      	ldr	r7, [sp, #48]	; 0x30
    e262:	e005      	b.n	e270 <_svfprintf_r+0xc64>
    e264:	f108 0808 	add.w	r8, r8, #8
    e268:	3d10      	subs	r5, #16
    e26a:	2d10      	cmp	r5, #16
    e26c:	f340 837f 	ble.w	e96e <_svfprintf_r+0x1362>
    e270:	3601      	adds	r6, #1
    e272:	3210      	adds	r2, #16
    e274:	2e07      	cmp	r6, #7
    e276:	e9c8 9b00 	strd	r9, fp, [r8]
    e27a:	e9cd 6229 	strd	r6, r2, [sp, #164]	; 0xa4
    e27e:	ddf1      	ble.n	e264 <_svfprintf_r+0xc58>
    e280:	4639      	mov	r1, r7
    e282:	4620      	mov	r0, r4
    e284:	aa28      	add	r2, sp, #160	; 0xa0
    e286:	f006 fa01 	bl	1468c <__ssprint_r>
    e28a:	2800      	cmp	r0, #0
    e28c:	f47f ab21 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e290:	e9dd 6229 	ldrd	r6, r2, [sp, #164]	; 0xa4
    e294:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e298:	e7e6      	b.n	e268 <_svfprintf_r+0xc5c>
    e29a:	990c      	ldr	r1, [sp, #48]	; 0x30
    e29c:	980a      	ldr	r0, [sp, #40]	; 0x28
    e29e:	aa28      	add	r2, sp, #160	; 0xa0
    e2a0:	f006 f9f4 	bl	1468c <__ssprint_r>
    e2a4:	2800      	cmp	r0, #0
    e2a6:	f47f ab14 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e2aa:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e2ac:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e2b0:	f7ff bb74 	b.w	d99c <_svfprintf_r+0x390>
    e2b4:	f01b 0310 	ands.w	r3, fp, #16
    e2b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    e2ba:	d13a      	bne.n	e332 <_svfprintf_r+0xd26>
    e2bc:	f01b 0140 	ands.w	r1, fp, #64	; 0x40
    e2c0:	d033      	beq.n	e32a <_svfprintf_r+0xd1e>
    e2c2:	f852 4b04 	ldr.w	r4, [r2], #4
    e2c6:	4699      	mov	r9, r3
    e2c8:	920e      	str	r2, [sp, #56]	; 0x38
    e2ca:	2301      	movs	r3, #1
    e2cc:	b2a4      	uxth	r4, r4
    e2ce:	f7ff babd 	b.w	d84c <_svfprintf_r+0x240>
    e2d2:	232d      	movs	r3, #45	; 0x2d
    e2d4:	4264      	negs	r4, r4
    e2d6:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
    e2da:	46bb      	mov	fp, r7
    e2dc:	f04f 0301 	mov.w	r3, #1
    e2e0:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
    e2e4:	f7ff bab5 	b.w	d852 <_svfprintf_r+0x246>
    e2e8:	990c      	ldr	r1, [sp, #48]	; 0x30
    e2ea:	980a      	ldr	r0, [sp, #40]	; 0x28
    e2ec:	aa28      	add	r2, sp, #160	; 0xa0
    e2ee:	f006 f9cd 	bl	1468c <__ssprint_r>
    e2f2:	2800      	cmp	r0, #0
    e2f4:	f47f aaed 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e2f8:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
    e2fc:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e300:	e613      	b.n	df2a <_svfprintf_r+0x91e>
    e302:	990c      	ldr	r1, [sp, #48]	; 0x30
    e304:	980a      	ldr	r0, [sp, #40]	; 0x28
    e306:	aa28      	add	r2, sp, #160	; 0xa0
    e308:	f006 f9c0 	bl	1468c <__ssprint_r>
    e30c:	2800      	cmp	r0, #0
    e30e:	f47f aae0 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e312:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
    e316:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e31a:	e613      	b.n	df44 <_svfprintf_r+0x938>
    e31c:	07fd      	lsls	r5, r7, #31
    e31e:	f57f ab4f 	bpl.w	d9c0 <_svfprintf_r+0x3b4>
    e322:	e524      	b.n	dd6e <_svfprintf_r+0x762>
    e324:	ad54      	add	r5, sp, #336	; 0x150
    e326:	f7ff ba6c 	b.w	d802 <_svfprintf_r+0x1f6>
    e32a:	f41b 7900 	ands.w	r9, fp, #512	; 0x200
    e32e:	f040 838a 	bne.w	ea46 <_svfprintf_r+0x143a>
    e332:	f852 4b04 	ldr.w	r4, [r2], #4
    e336:	2301      	movs	r3, #1
    e338:	920e      	str	r2, [sp, #56]	; 0x38
    e33a:	f7ff ba87 	b.w	d84c <_svfprintf_r+0x240>
    e33e:	05b8      	lsls	r0, r7, #22
    e340:	f100 839b 	bmi.w	ea7a <_svfprintf_r+0x146e>
    e344:	ea4f 79e4 	mov.w	r9, r4, asr #31
    e348:	464b      	mov	r3, r9
    e34a:	f7ff ba40 	b.w	d7ce <_svfprintf_r+0x1c2>
    e34e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e350:	9808      	ldr	r0, [sp, #32]
    e352:	f853 1b04 	ldr.w	r1, [r3], #4
    e356:	17c2      	asrs	r2, r0, #31
    e358:	4655      	mov	r5, sl
    e35a:	e9c1 0200 	strd	r0, r2, [r1]
    e35e:	930e      	str	r3, [sp, #56]	; 0x38
    e360:	f7ff bb4c 	b.w	d9fc <_svfprintf_r+0x3f0>
    e364:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e366:	f853 4b04 	ldr.w	r4, [r3], #4
    e36a:	930e      	str	r3, [sp, #56]	; 0x38
    e36c:	f7ff ba6b 	b.w	d846 <_svfprintf_r+0x23a>
    e370:	00019ffc 	.word	0x00019ffc
    e374:	0001a00c 	.word	0x0001a00c
    e378:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
    e37c:	4602      	mov	r2, r0
    e37e:	460b      	mov	r3, r1
    e380:	f7fc f8e4 	bl	a54c <__aeabi_dcmpun>
    e384:	2800      	cmp	r0, #0
    e386:	f040 85e9 	bne.w	ef5c <_svfprintf_r+0x1950>
    e38a:	2e61      	cmp	r6, #97	; 0x61
    e38c:	f000 857d 	beq.w	ee8a <_svfprintf_r+0x187e>
    e390:	2e41      	cmp	r6, #65	; 0x41
    e392:	f000 848b 	beq.w	ecac <_svfprintf_r+0x16a0>
    e396:	9b07      	ldr	r3, [sp, #28]
    e398:	3301      	adds	r3, #1
    e39a:	f000 838f 	beq.w	eabc <_svfprintf_r+0x14b0>
    e39e:	f026 0320 	bic.w	r3, r6, #32
    e3a2:	2b47      	cmp	r3, #71	; 0x47
    e3a4:	9306      	str	r3, [sp, #24]
    e3a6:	f000 858f 	beq.w	eec8 <_svfprintf_r+0x18bc>
    e3aa:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
    e3ae:	f447 7380 	orr.w	r3, r7, #256	; 0x100
    e3b2:	930f      	str	r3, [sp, #60]	; 0x3c
    e3b4:	4613      	mov	r3, r2
    e3b6:	2b00      	cmp	r3, #0
    e3b8:	f2c0 85b0 	blt.w	ef1c <_svfprintf_r+0x1910>
    e3bc:	930b      	str	r3, [sp, #44]	; 0x2c
    e3be:	2300      	movs	r3, #0
    e3c0:	468b      	mov	fp, r1
    e3c2:	931d      	str	r3, [sp, #116]	; 0x74
    e3c4:	930d      	str	r3, [sp, #52]	; 0x34
    e3c6:	9b06      	ldr	r3, [sp, #24]
    e3c8:	2b46      	cmp	r3, #70	; 0x46
    e3ca:	f000 83e9 	beq.w	eba0 <_svfprintf_r+0x1594>
    e3ce:	2b45      	cmp	r3, #69	; 0x45
    e3d0:	f000 8546 	beq.w	ee60 <_svfprintf_r+0x1854>
    e3d4:	9907      	ldr	r1, [sp, #28]
    e3d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    e3d8:	9101      	str	r1, [sp, #4]
    e3da:	2102      	movs	r1, #2
    e3dc:	9100      	str	r1, [sp, #0]
    e3de:	a926      	add	r1, sp, #152	; 0x98
    e3e0:	9104      	str	r1, [sp, #16]
    e3e2:	a923      	add	r1, sp, #140	; 0x8c
    e3e4:	9103      	str	r1, [sp, #12]
    e3e6:	a922      	add	r1, sp, #136	; 0x88
    e3e8:	465a      	mov	r2, fp
    e3ea:	980a      	ldr	r0, [sp, #40]	; 0x28
    e3ec:	9102      	str	r1, [sp, #8]
    e3ee:	f003 fdb7 	bl	11f60 <_dtoa_r>
    e3f2:	9b06      	ldr	r3, [sp, #24]
    e3f4:	4605      	mov	r5, r0
    e3f6:	2b47      	cmp	r3, #71	; 0x47
    e3f8:	f040 863a 	bne.w	f070 <_svfprintf_r+0x1a64>
    e3fc:	f017 0f01 	tst.w	r7, #1
    e400:	46b9      	mov	r9, r7
    e402:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    e404:	f040 84fe 	bne.w	ee04 <_svfprintf_r+0x17f8>
    e408:	9b26      	ldr	r3, [sp, #152]	; 0x98
    e40a:	1b5b      	subs	r3, r3, r5
    e40c:	9312      	str	r3, [sp, #72]	; 0x48
    e40e:	9b06      	ldr	r3, [sp, #24]
    e410:	2b47      	cmp	r3, #71	; 0x47
    e412:	f000 836e 	beq.w	eaf2 <_svfprintf_r+0x14e6>
    e416:	9b06      	ldr	r3, [sp, #24]
    e418:	2b46      	cmp	r3, #70	; 0x46
    e41a:	f000 83f0 	beq.w	ebfe <_svfprintf_r+0x15f2>
    e41e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    e420:	9310      	str	r3, [sp, #64]	; 0x40
    e422:	9b10      	ldr	r3, [sp, #64]	; 0x40
    e424:	9a06      	ldr	r2, [sp, #24]
    e426:	3b01      	subs	r3, #1
    e428:	2a41      	cmp	r2, #65	; 0x41
    e42a:	9322      	str	r3, [sp, #136]	; 0x88
    e42c:	f000 85bb 	beq.w	efa6 <_svfprintf_r+0x199a>
    e430:	2100      	movs	r1, #0
    e432:	b2f2      	uxtb	r2, r6
    e434:	2b00      	cmp	r3, #0
    e436:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
    e43a:	bfb6      	itet	lt
    e43c:	222d      	movlt	r2, #45	; 0x2d
    e43e:	222b      	movge	r2, #43	; 0x2b
    e440:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
    e442:	f88d 2091 	strb.w	r2, [sp, #145]	; 0x91
    e446:	bfb8      	it	lt
    e448:	f1c3 0301 	rsblt	r3, r3, #1
    e44c:	2b09      	cmp	r3, #9
    e44e:	f340 859b 	ble.w	ef88 <_svfprintf_r+0x197c>
    e452:	f10d 0c9f 	add.w	ip, sp, #159	; 0x9f
    e456:	4662      	mov	r2, ip
    e458:	4fb6      	ldr	r7, [pc, #728]	; (e734 <_svfprintf_r+0x1128>)
    e45a:	461c      	mov	r4, r3
    e45c:	4610      	mov	r0, r2
    e45e:	fb87 1203 	smull	r1, r2, r7, r3
    e462:	17d9      	asrs	r1, r3, #31
    e464:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
    e468:	eb01 0281 	add.w	r2, r1, r1, lsl #2
    e46c:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
    e470:	3230      	adds	r2, #48	; 0x30
    e472:	2c63      	cmp	r4, #99	; 0x63
    e474:	f800 2c01 	strb.w	r2, [r0, #-1]
    e478:	460b      	mov	r3, r1
    e47a:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
    e47e:	dcec      	bgt.n	e45a <_svfprintf_r+0xe4e>
    e480:	3330      	adds	r3, #48	; 0x30
    e482:	1e81      	subs	r1, r0, #2
    e484:	b2db      	uxtb	r3, r3
    e486:	458c      	cmp	ip, r1
    e488:	f802 3c01 	strb.w	r3, [r2, #-1]
    e48c:	f240 85f9 	bls.w	f082 <_svfprintf_r+0x1a76>
    e490:	f10d 0192 	add.w	r1, sp, #146	; 0x92
    e494:	e001      	b.n	e49a <_svfprintf_r+0xe8e>
    e496:	f812 3b01 	ldrb.w	r3, [r2], #1
    e49a:	4594      	cmp	ip, r2
    e49c:	f801 3b01 	strb.w	r3, [r1], #1
    e4a0:	d1f9      	bne.n	e496 <_svfprintf_r+0xe8a>
    e4a2:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
    e4a6:	f10d 0292 	add.w	r2, sp, #146	; 0x92
    e4aa:	1a1b      	subs	r3, r3, r0
    e4ac:	4413      	add	r3, r2
    e4ae:	aa24      	add	r2, sp, #144	; 0x90
    e4b0:	1a9b      	subs	r3, r3, r2
    e4b2:	931a      	str	r3, [sp, #104]	; 0x68
    e4b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e4b6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    e4b8:	2b01      	cmp	r3, #1
    e4ba:	441a      	add	r2, r3
    e4bc:	920b      	str	r2, [sp, #44]	; 0x2c
    e4be:	f340 8581 	ble.w	efc4 <_svfprintf_r+0x19b8>
    e4c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    e4c4:	9a16      	ldr	r2, [sp, #88]	; 0x58
    e4c6:	4413      	add	r3, r2
    e4c8:	930b      	str	r3, [sp, #44]	; 0x2c
    e4ca:	2300      	movs	r3, #0
    e4cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    e4ce:	f429 6780 	bic.w	r7, r9, #1024	; 0x400
    e4d2:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
    e4d6:	f447 7780 	orr.w	r7, r7, #256	; 0x100
    e4da:	930f      	str	r3, [sp, #60]	; 0x3c
    e4dc:	9206      	str	r2, [sp, #24]
    e4de:	9313      	str	r3, [sp, #76]	; 0x4c
    e4e0:	9310      	str	r3, [sp, #64]	; 0x40
    e4e2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    e4e4:	2b00      	cmp	r3, #0
    e4e6:	f040 832c 	bne.w	eb42 <_svfprintf_r+0x1536>
    e4ea:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    e4ee:	9307      	str	r3, [sp, #28]
    e4f0:	f7ff b994 	b.w	d81c <_svfprintf_r+0x210>
    e4f4:	46bb      	mov	fp, r7
    e4f6:	f7ff bb2f 	b.w	db58 <_svfprintf_r+0x54c>
    e4fa:	4b8f      	ldr	r3, [pc, #572]	; (e738 <_svfprintf_r+0x112c>)
    e4fc:	9318      	str	r3, [sp, #96]	; 0x60
    e4fe:	f017 0920 	ands.w	r9, r7, #32
    e502:	f000 80f5 	beq.w	e6f0 <_svfprintf_r+0x10e4>
    e506:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e508:	3307      	adds	r3, #7
    e50a:	f023 0307 	bic.w	r3, r3, #7
    e50e:	f8d3 9004 	ldr.w	r9, [r3, #4]
    e512:	f853 4b08 	ldr.w	r4, [r3], #8
    e516:	930e      	str	r3, [sp, #56]	; 0x38
    e518:	07f8      	lsls	r0, r7, #31
    e51a:	d509      	bpl.n	e530 <_svfprintf_r+0xf24>
    e51c:	ea54 0309 	orrs.w	r3, r4, r9
    e520:	d006      	beq.n	e530 <_svfprintf_r+0xf24>
    e522:	2330      	movs	r3, #48	; 0x30
    e524:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
    e528:	f047 0702 	orr.w	r7, r7, #2
    e52c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
    e530:	2302      	movs	r3, #2
    e532:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
    e536:	f7ff b989 	b.w	d84c <_svfprintf_r+0x240>
    e53a:	4b80      	ldr	r3, [pc, #512]	; (e73c <_svfprintf_r+0x1130>)
    e53c:	9318      	str	r3, [sp, #96]	; 0x60
    e53e:	e7de      	b.n	e4fe <_svfprintf_r+0xef2>
    e540:	990c      	ldr	r1, [sp, #48]	; 0x30
    e542:	980a      	ldr	r0, [sp, #40]	; 0x28
    e544:	aa28      	add	r2, sp, #160	; 0xa0
    e546:	f006 f8a1 	bl	1468c <__ssprint_r>
    e54a:	2800      	cmp	r0, #0
    e54c:	f47f a9c1 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e550:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e552:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e556:	e418      	b.n	dd8a <_svfprintf_r+0x77e>
    e558:	2140      	movs	r1, #64	; 0x40
    e55a:	980a      	ldr	r0, [sp, #40]	; 0x28
    e55c:	f7fd fdfc 	bl	c158 <_malloc_r>
    e560:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    e562:	6018      	str	r0, [r3, #0]
    e564:	6118      	str	r0, [r3, #16]
    e566:	2800      	cmp	r0, #0
    e568:	f000 8597 	beq.w	f09a <_svfprintf_r+0x1a8e>
    e56c:	2340      	movs	r3, #64	; 0x40
    e56e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    e570:	6153      	str	r3, [r2, #20]
    e572:	f7ff b862 	b.w	d63a <_svfprintf_r+0x2e>
    e576:	2e10      	cmp	r6, #16
    e578:	f340 8576 	ble.w	f068 <_svfprintf_r+0x1a5c>
    e57c:	f8df 91c0 	ldr.w	r9, [pc, #448]	; e740 <_svfprintf_r+0x1134>
    e580:	4642      	mov	r2, r8
    e582:	4648      	mov	r0, r9
    e584:	4621      	mov	r1, r4
    e586:	46a8      	mov	r8, r5
    e588:	46b9      	mov	r9, r7
    e58a:	f04f 0b10 	mov.w	fp, #16
    e58e:	4607      	mov	r7, r0
    e590:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e592:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    e594:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    e596:	e004      	b.n	e5a2 <_svfprintf_r+0xf96>
    e598:	3208      	adds	r2, #8
    e59a:	3e10      	subs	r6, #16
    e59c:	2e10      	cmp	r6, #16
    e59e:	f340 8213 	ble.w	e9c8 <_svfprintf_r+0x13bc>
    e5a2:	3301      	adds	r3, #1
    e5a4:	3110      	adds	r1, #16
    e5a6:	2b07      	cmp	r3, #7
    e5a8:	e9c2 7b00 	strd	r7, fp, [r2]
    e5ac:	e9cd 3129 	strd	r3, r1, [sp, #164]	; 0xa4
    e5b0:	ddf2      	ble.n	e598 <_svfprintf_r+0xf8c>
    e5b2:	4629      	mov	r1, r5
    e5b4:	4620      	mov	r0, r4
    e5b6:	aa28      	add	r2, sp, #160	; 0xa0
    e5b8:	f006 f868 	bl	1468c <__ssprint_r>
    e5bc:	2800      	cmp	r0, #0
    e5be:	f47f a988 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e5c2:	e9dd 3129 	ldrd	r3, r1, [sp, #164]	; 0xa4
    e5c6:	aa2b      	add	r2, sp, #172	; 0xac
    e5c8:	e7e7      	b.n	e59a <_svfprintf_r+0xf8e>
    e5ca:	4628      	mov	r0, r5
    e5cc:	f8cd 901c 	str.w	r9, [sp, #28]
    e5d0:	940e      	str	r4, [sp, #56]	; 0x38
    e5d2:	f7fe ffaf 	bl	d534 <strlen>
    e5d6:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
    e5da:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    e5de:	900b      	str	r0, [sp, #44]	; 0x2c
    e5e0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
    e5e4:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
    e5e8:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
    e5ec:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
    e5f0:	9306      	str	r3, [sp, #24]
    e5f2:	f7ff b913 	b.w	d81c <_svfprintf_r+0x210>
    e5f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    e5f8:	4642      	mov	r2, r8
    e5fa:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
    e5fe:	18eb      	adds	r3, r5, r3
    e600:	465e      	mov	r6, fp
    e602:	9307      	str	r3, [sp, #28]
    e604:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
    e608:	9710      	str	r7, [sp, #64]	; 0x40
    e60a:	4621      	mov	r1, r4
    e60c:	9f19      	ldr	r7, [sp, #100]	; 0x64
    e60e:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
    e612:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    e616:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
    e61a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    e61c:	9513      	str	r5, [sp, #76]	; 0x4c
    e61e:	f1b8 0f00 	cmp.w	r8, #0
    e622:	d02e      	beq.n	e682 <_svfprintf_r+0x1076>
    e624:	bb83      	cbnz	r3, e688 <_svfprintf_r+0x107c>
    e626:	3f01      	subs	r7, #1
    e628:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    e62c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    e62e:	4449      	add	r1, r9
    e630:	e9c2 3900 	strd	r3, r9, [r2]
    e634:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e636:	912a      	str	r1, [sp, #168]	; 0xa8
    e638:	3301      	adds	r3, #1
    e63a:	2b07      	cmp	r3, #7
    e63c:	9329      	str	r3, [sp, #164]	; 0xa4
    e63e:	dc60      	bgt.n	e702 <_svfprintf_r+0x10f6>
    e640:	3208      	adds	r2, #8
    e642:	9b07      	ldr	r3, [sp, #28]
    e644:	7838      	ldrb	r0, [r7, #0]
    e646:	1b9b      	subs	r3, r3, r6
    e648:	4283      	cmp	r3, r0
    e64a:	bfa8      	it	ge
    e64c:	4603      	movge	r3, r0
    e64e:	2b00      	cmp	r3, #0
    e650:	461c      	mov	r4, r3
    e652:	dd0b      	ble.n	e66c <_svfprintf_r+0x1060>
    e654:	9829      	ldr	r0, [sp, #164]	; 0xa4
    e656:	4419      	add	r1, r3
    e658:	3001      	adds	r0, #1
    e65a:	2807      	cmp	r0, #7
    e65c:	e9c2 6300 	strd	r6, r3, [r2]
    e660:	912a      	str	r1, [sp, #168]	; 0xa8
    e662:	9029      	str	r0, [sp, #164]	; 0xa4
    e664:	f300 8114 	bgt.w	e890 <_svfprintf_r+0x1284>
    e668:	7838      	ldrb	r0, [r7, #0]
    e66a:	3208      	adds	r2, #8
    e66c:	2c00      	cmp	r4, #0
    e66e:	bfb4      	ite	lt
    e670:	4605      	movlt	r5, r0
    e672:	1b05      	subge	r5, r0, r4
    e674:	2d00      	cmp	r5, #0
    e676:	dc0b      	bgt.n	e690 <_svfprintf_r+0x1084>
    e678:	4406      	add	r6, r0
    e67a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    e67c:	f1b8 0f00 	cmp.w	r8, #0
    e680:	d1d0      	bne.n	e624 <_svfprintf_r+0x1018>
    e682:	2b00      	cmp	r3, #0
    e684:	f000 8226 	beq.w	ead4 <_svfprintf_r+0x14c8>
    e688:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    e68a:	3b01      	subs	r3, #1
    e68c:	930f      	str	r3, [sp, #60]	; 0x3c
    e68e:	e7cd      	b.n	e62c <_svfprintf_r+0x1020>
    e690:	2d10      	cmp	r5, #16
    e692:	f340 849d 	ble.w	efd0 <_svfprintf_r+0x19c4>
    e696:	2410      	movs	r4, #16
    e698:	9829      	ldr	r0, [sp, #164]	; 0xa4
    e69a:	e004      	b.n	e6a6 <_svfprintf_r+0x109a>
    e69c:	3d10      	subs	r5, #16
    e69e:	2d10      	cmp	r5, #16
    e6a0:	f102 0208 	add.w	r2, r2, #8
    e6a4:	dd16      	ble.n	e6d4 <_svfprintf_r+0x10c8>
    e6a6:	3001      	adds	r0, #1
    e6a8:	4b25      	ldr	r3, [pc, #148]	; (e740 <_svfprintf_r+0x1134>)
    e6aa:	3110      	adds	r1, #16
    e6ac:	2807      	cmp	r0, #7
    e6ae:	e9c2 3400 	strd	r3, r4, [r2]
    e6b2:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
    e6b6:	ddf1      	ble.n	e69c <_svfprintf_r+0x1090>
    e6b8:	4659      	mov	r1, fp
    e6ba:	4650      	mov	r0, sl
    e6bc:	aa28      	add	r2, sp, #160	; 0xa0
    e6be:	f005 ffe5 	bl	1468c <__ssprint_r>
    e6c2:	2800      	cmp	r0, #0
    e6c4:	f47f a905 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e6c8:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
    e6cc:	3d10      	subs	r5, #16
    e6ce:	2d10      	cmp	r5, #16
    e6d0:	aa2b      	add	r2, sp, #172	; 0xac
    e6d2:	dce8      	bgt.n	e6a6 <_svfprintf_r+0x109a>
    e6d4:	3001      	adds	r0, #1
    e6d6:	4b1a      	ldr	r3, [pc, #104]	; (e740 <_svfprintf_r+0x1134>)
    e6d8:	4429      	add	r1, r5
    e6da:	2807      	cmp	r0, #7
    e6dc:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
    e6e0:	6055      	str	r5, [r2, #4]
    e6e2:	6013      	str	r3, [r2, #0]
    e6e4:	f300 8241 	bgt.w	eb6a <_svfprintf_r+0x155e>
    e6e8:	7838      	ldrb	r0, [r7, #0]
    e6ea:	3208      	adds	r2, #8
    e6ec:	4406      	add	r6, r0
    e6ee:	e7c4      	b.n	e67a <_svfprintf_r+0x106e>
    e6f0:	f017 0310 	ands.w	r3, r7, #16
    e6f4:	f000 80a0 	beq.w	e838 <_svfprintf_r+0x122c>
    e6f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e6fa:	f853 4b04 	ldr.w	r4, [r3], #4
    e6fe:	930e      	str	r3, [sp, #56]	; 0x38
    e700:	e70a      	b.n	e518 <_svfprintf_r+0xf0c>
    e702:	4659      	mov	r1, fp
    e704:	4650      	mov	r0, sl
    e706:	aa28      	add	r2, sp, #160	; 0xa0
    e708:	f005 ffc0 	bl	1468c <__ssprint_r>
    e70c:	2800      	cmp	r0, #0
    e70e:	f47f a8e0 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e712:	992a      	ldr	r1, [sp, #168]	; 0xa8
    e714:	aa2b      	add	r2, sp, #172	; 0xac
    e716:	e794      	b.n	e642 <_svfprintf_r+0x1036>
    e718:	2300      	movs	r3, #0
    e71a:	f40b 6280 	and.w	r2, fp, #1024	; 0x400
    e71e:	9606      	str	r6, [sp, #24]
    e720:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
    e724:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
    e728:	4692      	mov	sl, r2
    e72a:	461e      	mov	r6, r3
    e72c:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
    e730:	af54      	add	r7, sp, #336	; 0x150
    e732:	e014      	b.n	e75e <_svfprintf_r+0x1152>
    e734:	66666667 	.word	0x66666667
    e738:	00019fc8 	.word	0x00019fc8
    e73c:	00019fdc 	.word	0x00019fdc
    e740:	0001a00c 	.word	0x0001a00c
    e744:	2300      	movs	r3, #0
    e746:	4620      	mov	r0, r4
    e748:	4649      	mov	r1, r9
    e74a:	220a      	movs	r2, #10
    e74c:	f007 fd20 	bl	16190 <__aeabi_uldivmod>
    e750:	2c0a      	cmp	r4, #10
    e752:	f179 0300 	sbcs.w	r3, r9, #0
    e756:	d31b      	bcc.n	e790 <_svfprintf_r+0x1184>
    e758:	4604      	mov	r4, r0
    e75a:	4689      	mov	r9, r1
    e75c:	462f      	mov	r7, r5
    e75e:	4620      	mov	r0, r4
    e760:	220a      	movs	r2, #10
    e762:	2300      	movs	r3, #0
    e764:	4649      	mov	r1, r9
    e766:	f007 fd13 	bl	16190 <__aeabi_uldivmod>
    e76a:	3230      	adds	r2, #48	; 0x30
    e76c:	1e7d      	subs	r5, r7, #1
    e76e:	3601      	adds	r6, #1
    e770:	f807 2c01 	strb.w	r2, [r7, #-1]
    e774:	f1ba 0f00 	cmp.w	sl, #0
    e778:	d0e4      	beq.n	e744 <_svfprintf_r+0x1138>
    e77a:	f898 3000 	ldrb.w	r3, [r8]
    e77e:	429e      	cmp	r6, r3
    e780:	d1e0      	bne.n	e744 <_svfprintf_r+0x1138>
    e782:	2eff      	cmp	r6, #255	; 0xff
    e784:	d0de      	beq.n	e744 <_svfprintf_r+0x1138>
    e786:	2c0a      	cmp	r4, #10
    e788:	f179 0300 	sbcs.w	r3, r9, #0
    e78c:	f080 8130 	bcs.w	e9f0 <_svfprintf_r+0x13e4>
    e790:	ab54      	add	r3, sp, #336	; 0x150
    e792:	1b5b      	subs	r3, r3, r5
    e794:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
    e798:	f8cd 8064 	str.w	r8, [sp, #100]	; 0x64
    e79c:	9612      	str	r6, [sp, #72]	; 0x48
    e79e:	465f      	mov	r7, fp
    e7a0:	9e06      	ldr	r6, [sp, #24]
    e7a2:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
    e7a6:	930b      	str	r3, [sp, #44]	; 0x2c
    e7a8:	f7ff b82b 	b.w	d802 <_svfprintf_r+0x1f6>
    e7ac:	990c      	ldr	r1, [sp, #48]	; 0x30
    e7ae:	980a      	ldr	r0, [sp, #40]	; 0x28
    e7b0:	aa28      	add	r2, sp, #160	; 0xa0
    e7b2:	931d      	str	r3, [sp, #116]	; 0x74
    e7b4:	f005 ff6a 	bl	1468c <__ssprint_r>
    e7b8:	2800      	cmp	r0, #0
    e7ba:	f47f a88a 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e7be:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    e7c2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e7c4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    e7c6:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e7ca:	f7ff b8b8 	b.w	d93e <_svfprintf_r+0x332>
    e7ce:	2301      	movs	r3, #1
    e7d0:	f8c8 3004 	str.w	r3, [r8, #4]
    e7d4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e7d6:	4abc      	ldr	r2, [pc, #752]	; (eac8 <_svfprintf_r+0x14bc>)
    e7d8:	3301      	adds	r3, #1
    e7da:	3401      	adds	r4, #1
    e7dc:	2b07      	cmp	r3, #7
    e7de:	942a      	str	r4, [sp, #168]	; 0xa8
    e7e0:	9329      	str	r3, [sp, #164]	; 0xa4
    e7e2:	f8c8 2000 	str.w	r2, [r8]
    e7e6:	f300 8117 	bgt.w	ea18 <_svfprintf_r+0x140c>
    e7ea:	f108 0808 	add.w	r8, r8, #8
    e7ee:	2900      	cmp	r1, #0
    e7f0:	f040 8086 	bne.w	e900 <_svfprintf_r+0x12f4>
    e7f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
    e7f6:	f007 0301 	and.w	r3, r7, #1
    e7fa:	4313      	orrs	r3, r2
    e7fc:	f43f a8e0 	beq.w	d9c0 <_svfprintf_r+0x3b4>
    e800:	9b16      	ldr	r3, [sp, #88]	; 0x58
    e802:	9917      	ldr	r1, [sp, #92]	; 0x5c
    e804:	191a      	adds	r2, r3, r4
    e806:	e9c8 1300 	strd	r1, r3, [r8]
    e80a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e80c:	922a      	str	r2, [sp, #168]	; 0xa8
    e80e:	3301      	adds	r3, #1
    e810:	2b07      	cmp	r3, #7
    e812:	9329      	str	r3, [sp, #164]	; 0xa4
    e814:	f300 8137 	bgt.w	ea86 <_svfprintf_r+0x147a>
    e818:	f108 0808 	add.w	r8, r8, #8
    e81c:	9912      	ldr	r1, [sp, #72]	; 0x48
    e81e:	3301      	adds	r3, #1
    e820:	188c      	adds	r4, r1, r2
    e822:	2b07      	cmp	r3, #7
    e824:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    e828:	f8c8 5000 	str.w	r5, [r8]
    e82c:	f8c8 1004 	str.w	r1, [r8, #4]
    e830:	f77f a8c4 	ble.w	d9bc <_svfprintf_r+0x3b0>
    e834:	f7ff bbac 	b.w	df90 <_svfprintf_r+0x984>
    e838:	f017 0240 	ands.w	r2, r7, #64	; 0x40
    e83c:	f000 80a5 	beq.w	e98a <_svfprintf_r+0x137e>
    e840:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    e842:	4699      	mov	r9, r3
    e844:	f852 4b04 	ldr.w	r4, [r2], #4
    e848:	920e      	str	r2, [sp, #56]	; 0x38
    e84a:	b2a4      	uxth	r4, r4
    e84c:	e664      	b.n	e518 <_svfprintf_r+0xf0c>
    e84e:	46bb      	mov	fp, r7
    e850:	f7fe bfca 	b.w	d7e8 <_svfprintf_r+0x1dc>
    e854:	990c      	ldr	r1, [sp, #48]	; 0x30
    e856:	980a      	ldr	r0, [sp, #40]	; 0x28
    e858:	aa28      	add	r2, sp, #160	; 0xa0
    e85a:	f005 ff17 	bl	1468c <__ssprint_r>
    e85e:	2800      	cmp	r0, #0
    e860:	f47f a837 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e864:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e866:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e86a:	f7ff ba7b 	b.w	dd64 <_svfprintf_r+0x758>
    e86e:	4614      	mov	r4, r2
    e870:	463a      	mov	r2, r7
    e872:	464f      	mov	r7, r9
    e874:	4691      	mov	r9, r2
    e876:	3301      	adds	r3, #1
    e878:	442c      	add	r4, r5
    e87a:	2b07      	cmp	r3, #7
    e87c:	f8c8 9000 	str.w	r9, [r8]
    e880:	f8c8 5004 	str.w	r5, [r8, #4]
    e884:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    e888:	f77f a898 	ble.w	d9bc <_svfprintf_r+0x3b0>
    e88c:	f7ff bb80 	b.w	df90 <_svfprintf_r+0x984>
    e890:	4659      	mov	r1, fp
    e892:	4650      	mov	r0, sl
    e894:	aa28      	add	r2, sp, #160	; 0xa0
    e896:	f005 fef9 	bl	1468c <__ssprint_r>
    e89a:	2800      	cmp	r0, #0
    e89c:	f47f a819 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e8a0:	7838      	ldrb	r0, [r7, #0]
    e8a2:	992a      	ldr	r1, [sp, #168]	; 0xa8
    e8a4:	aa2b      	add	r2, sp, #172	; 0xac
    e8a6:	e6e1      	b.n	e66c <_svfprintf_r+0x1060>
    e8a8:	990c      	ldr	r1, [sp, #48]	; 0x30
    e8aa:	980a      	ldr	r0, [sp, #40]	; 0x28
    e8ac:	aa28      	add	r2, sp, #160	; 0xa0
    e8ae:	f005 feed 	bl	1468c <__ssprint_r>
    e8b2:	2800      	cmp	r0, #0
    e8b4:	f47f a80d 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e8b8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    e8ba:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    e8be:	f7ff b865 	b.w	d98c <_svfprintf_r+0x380>
    e8c2:	2b01      	cmp	r3, #1
    e8c4:	46bb      	mov	fp, r7
    e8c6:	f47f a9f5 	bne.w	dcb4 <_svfprintf_r+0x6a8>
    e8ca:	f7fe bf92 	b.w	d7f2 <_svfprintf_r+0x1e6>
    e8ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e8d0:	9908      	ldr	r1, [sp, #32]
    e8d2:	f853 2b04 	ldr.w	r2, [r3], #4
    e8d6:	4655      	mov	r5, sl
    e8d8:	6011      	str	r1, [r2, #0]
    e8da:	930e      	str	r3, [sp, #56]	; 0x38
    e8dc:	f7ff b88e 	b.w	d9fc <_svfprintf_r+0x3f0>
    e8e0:	2b06      	cmp	r3, #6
    e8e2:	4629      	mov	r1, r5
    e8e4:	bf28      	it	cs
    e8e6:	2306      	movcs	r3, #6
    e8e8:	462a      	mov	r2, r5
    e8ea:	9507      	str	r5, [sp, #28]
    e8ec:	950d      	str	r5, [sp, #52]	; 0x34
    e8ee:	9306      	str	r3, [sp, #24]
    e8f0:	4d76      	ldr	r5, [pc, #472]	; (eacc <_svfprintf_r+0x14c0>)
    e8f2:	940e      	str	r4, [sp, #56]	; 0x38
    e8f4:	930b      	str	r3, [sp, #44]	; 0x2c
    e8f6:	910f      	str	r1, [sp, #60]	; 0x3c
    e8f8:	9113      	str	r1, [sp, #76]	; 0x4c
    e8fa:	9110      	str	r1, [sp, #64]	; 0x40
    e8fc:	f7fe bf8e 	b.w	d81c <_svfprintf_r+0x210>
    e900:	9b16      	ldr	r3, [sp, #88]	; 0x58
    e902:	9817      	ldr	r0, [sp, #92]	; 0x5c
    e904:	191a      	adds	r2, r3, r4
    e906:	e9c8 0300 	strd	r0, r3, [r8]
    e90a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    e90c:	922a      	str	r2, [sp, #168]	; 0xa8
    e90e:	3301      	adds	r3, #1
    e910:	2b07      	cmp	r3, #7
    e912:	9329      	str	r3, [sp, #164]	; 0xa4
    e914:	f300 80b7 	bgt.w	ea86 <_svfprintf_r+0x147a>
    e918:	f108 0808 	add.w	r8, r8, #8
    e91c:	2900      	cmp	r1, #0
    e91e:	f6bf af7d 	bge.w	e81c <_svfprintf_r+0x1210>
    e922:	424e      	negs	r6, r1
    e924:	3110      	adds	r1, #16
    e926:	f280 83a9 	bge.w	f07c <_svfprintf_r+0x1a70>
    e92a:	4641      	mov	r1, r8
    e92c:	2410      	movs	r4, #16
    e92e:	46a8      	mov	r8, r5
    e930:	f8df 919c 	ldr.w	r9, [pc, #412]	; ead0 <_svfprintf_r+0x14c4>
    e934:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
    e938:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    e93a:	e004      	b.n	e946 <_svfprintf_r+0x133a>
    e93c:	3108      	adds	r1, #8
    e93e:	3e10      	subs	r6, #16
    e940:	2e10      	cmp	r6, #16
    e942:	f340 82a7 	ble.w	ee94 <_svfprintf_r+0x1888>
    e946:	3301      	adds	r3, #1
    e948:	3210      	adds	r2, #16
    e94a:	2b07      	cmp	r3, #7
    e94c:	e9c1 9400 	strd	r9, r4, [r1]
    e950:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
    e954:	ddf2      	ble.n	e93c <_svfprintf_r+0x1330>
    e956:	4629      	mov	r1, r5
    e958:	4658      	mov	r0, fp
    e95a:	aa28      	add	r2, sp, #160	; 0xa0
    e95c:	f005 fe96 	bl	1468c <__ssprint_r>
    e960:	2800      	cmp	r0, #0
    e962:	f47e afb6 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    e966:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    e96a:	a92b      	add	r1, sp, #172	; 0xac
    e96c:	e7e7      	b.n	e93e <_svfprintf_r+0x1332>
    e96e:	4614      	mov	r4, r2
    e970:	9f07      	ldr	r7, [sp, #28]
    e972:	3601      	adds	r6, #1
    e974:	442c      	add	r4, r5
    e976:	2e07      	cmp	r6, #7
    e978:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
    e97c:	f8c8 9000 	str.w	r9, [r8]
    e980:	f8c8 5004 	str.w	r5, [r8, #4]
    e984:	f77f aaf5 	ble.w	df72 <_svfprintf_r+0x966>
    e988:	e44e      	b.n	e228 <_svfprintf_r+0xc1c>
    e98a:	f417 7900 	ands.w	r9, r7, #512	; 0x200
    e98e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e990:	d066      	beq.n	ea60 <_svfprintf_r+0x1454>
    e992:	f853 4b04 	ldr.w	r4, [r3], #4
    e996:	4691      	mov	r9, r2
    e998:	930e      	str	r3, [sp, #56]	; 0x38
    e99a:	b2e4      	uxtb	r4, r4
    e99c:	e5bc      	b.n	e518 <_svfprintf_r+0xf0c>
    e99e:	f417 7900 	ands.w	r9, r7, #512	; 0x200
    e9a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e9a4:	d057      	beq.n	ea56 <_svfprintf_r+0x144a>
    e9a6:	f853 4b04 	ldr.w	r4, [r3], #4
    e9aa:	4691      	mov	r9, r2
    e9ac:	930e      	str	r3, [sp, #56]	; 0x38
    e9ae:	b2e4      	uxtb	r4, r4
    e9b0:	f7fe bf49 	b.w	d846 <_svfprintf_r+0x23a>
    e9b4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    e9b6:	f8df 9118 	ldr.w	r9, [pc, #280]	; ead0 <_svfprintf_r+0x14c4>
    e9ba:	f7ff ba95 	b.w	dee8 <_svfprintf_r+0x8dc>
    e9be:	222d      	movs	r2, #45	; 0x2d
    e9c0:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    e9c4:	f7ff b857 	b.w	da76 <_svfprintf_r+0x46a>
    e9c8:	4645      	mov	r5, r8
    e9ca:	4690      	mov	r8, r2
    e9cc:	463a      	mov	r2, r7
    e9ce:	460c      	mov	r4, r1
    e9d0:	464f      	mov	r7, r9
    e9d2:	4691      	mov	r9, r2
    e9d4:	3301      	adds	r3, #1
    e9d6:	4434      	add	r4, r6
    e9d8:	2b07      	cmp	r3, #7
    e9da:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
    e9de:	f8c8 9000 	str.w	r9, [r8]
    e9e2:	f8c8 6004 	str.w	r6, [r8, #4]
    e9e6:	dc5c      	bgt.n	eaa2 <_svfprintf_r+0x1496>
    e9e8:	f108 0808 	add.w	r8, r8, #8
    e9ec:	f7ff bb9e 	b.w	e12c <_svfprintf_r+0xb20>
    e9f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    e9f2:	991b      	ldr	r1, [sp, #108]	; 0x6c
    e9f4:	1aed      	subs	r5, r5, r3
    e9f6:	461a      	mov	r2, r3
    e9f8:	4628      	mov	r0, r5
    e9fa:	f005 fe13 	bl	14624 <strncpy>
    e9fe:	f898 3001 	ldrb.w	r3, [r8, #1]
    ea02:	b10b      	cbz	r3, ea08 <_svfprintf_r+0x13fc>
    ea04:	f108 0801 	add.w	r8, r8, #1
    ea08:	4620      	mov	r0, r4
    ea0a:	4649      	mov	r1, r9
    ea0c:	220a      	movs	r2, #10
    ea0e:	2300      	movs	r3, #0
    ea10:	2600      	movs	r6, #0
    ea12:	f007 fbbd 	bl	16190 <__aeabi_uldivmod>
    ea16:	e69f      	b.n	e758 <_svfprintf_r+0x114c>
    ea18:	990c      	ldr	r1, [sp, #48]	; 0x30
    ea1a:	980a      	ldr	r0, [sp, #40]	; 0x28
    ea1c:	aa28      	add	r2, sp, #160	; 0xa0
    ea1e:	f005 fe35 	bl	1468c <__ssprint_r>
    ea22:	2800      	cmp	r0, #0
    ea24:	f47e af55 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    ea28:	9922      	ldr	r1, [sp, #136]	; 0x88
    ea2a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    ea2c:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    ea30:	e6dd      	b.n	e7ee <_svfprintf_r+0x11e2>
    ea32:	9a12      	ldr	r2, [sp, #72]	; 0x48
    ea34:	18ae      	adds	r6, r5, r2
    ea36:	eba6 060b 	sub.w	r6, r6, fp
    ea3a:	1ad5      	subs	r5, r2, r3
    ea3c:	42ae      	cmp	r6, r5
    ea3e:	bfa8      	it	ge
    ea40:	462e      	movge	r6, r5
    ea42:	f7ff bba6 	b.w	e192 <_svfprintf_r+0xb86>
    ea46:	f852 4b04 	ldr.w	r4, [r2], #4
    ea4a:	4689      	mov	r9, r1
    ea4c:	2301      	movs	r3, #1
    ea4e:	920e      	str	r2, [sp, #56]	; 0x38
    ea50:	b2e4      	uxtb	r4, r4
    ea52:	f7fe befb 	b.w	d84c <_svfprintf_r+0x240>
    ea56:	f853 4b04 	ldr.w	r4, [r3], #4
    ea5a:	930e      	str	r3, [sp, #56]	; 0x38
    ea5c:	f7fe bef3 	b.w	d846 <_svfprintf_r+0x23a>
    ea60:	f853 4b04 	ldr.w	r4, [r3], #4
    ea64:	930e      	str	r3, [sp, #56]	; 0x38
    ea66:	e557      	b.n	e518 <_svfprintf_r+0xf0c>
    ea68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ea6a:	9908      	ldr	r1, [sp, #32]
    ea6c:	f853 2b04 	ldr.w	r2, [r3], #4
    ea70:	4655      	mov	r5, sl
    ea72:	8011      	strh	r1, [r2, #0]
    ea74:	930e      	str	r3, [sp, #56]	; 0x38
    ea76:	f7fe bfc1 	b.w	d9fc <_svfprintf_r+0x3f0>
    ea7a:	f344 19c0 	sbfx	r9, r4, #7, #1
    ea7e:	464b      	mov	r3, r9
    ea80:	b264      	sxtb	r4, r4
    ea82:	f7fe bea4 	b.w	d7ce <_svfprintf_r+0x1c2>
    ea86:	990c      	ldr	r1, [sp, #48]	; 0x30
    ea88:	980a      	ldr	r0, [sp, #40]	; 0x28
    ea8a:	aa28      	add	r2, sp, #160	; 0xa0
    ea8c:	f005 fdfe 	bl	1468c <__ssprint_r>
    ea90:	2800      	cmp	r0, #0
    ea92:	f47e af1e 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    ea96:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    ea9a:	9922      	ldr	r1, [sp, #136]	; 0x88
    ea9c:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    eaa0:	e73c      	b.n	e91c <_svfprintf_r+0x1310>
    eaa2:	990c      	ldr	r1, [sp, #48]	; 0x30
    eaa4:	980a      	ldr	r0, [sp, #40]	; 0x28
    eaa6:	aa28      	add	r2, sp, #160	; 0xa0
    eaa8:	f005 fdf0 	bl	1468c <__ssprint_r>
    eaac:	2800      	cmp	r0, #0
    eaae:	f47e af10 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    eab2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    eab4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    eab8:	f7ff bb38 	b.w	e12c <_svfprintf_r+0xb20>
    eabc:	2306      	movs	r3, #6
    eabe:	9307      	str	r3, [sp, #28]
    eac0:	f026 0320 	bic.w	r3, r6, #32
    eac4:	9306      	str	r3, [sp, #24]
    eac6:	e470      	b.n	e3aa <_svfprintf_r+0xd9e>
    eac8:	00019ff8 	.word	0x00019ff8
    eacc:	00019ff0 	.word	0x00019ff0
    ead0:	0001a00c 	.word	0x0001a00c
    ead4:	e9dd 3512 	ldrd	r3, r5, [sp, #72]	; 0x48
    ead8:	18eb      	adds	r3, r5, r3
    eada:	429e      	cmp	r6, r3
    eadc:	46b3      	mov	fp, r6
    eade:	9719      	str	r7, [sp, #100]	; 0x64
    eae0:	4690      	mov	r8, r2
    eae2:	460c      	mov	r4, r1
    eae4:	bf28      	it	cs
    eae6:	469b      	movcs	fp, r3
    eae8:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
    eaec:	9f10      	ldr	r7, [sp, #64]	; 0x40
    eaee:	f7ff bb23 	b.w	e138 <_svfprintf_r+0xb2c>
    eaf2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    eaf4:	1cda      	adds	r2, r3, #3
    eaf6:	9310      	str	r3, [sp, #64]	; 0x40
    eaf8:	db02      	blt.n	eb00 <_svfprintf_r+0x14f4>
    eafa:	9a07      	ldr	r2, [sp, #28]
    eafc:	4293      	cmp	r3, r2
    eafe:	dd04      	ble.n	eb0a <_svfprintf_r+0x14fe>
    eb00:	3e02      	subs	r6, #2
    eb02:	f026 0320 	bic.w	r3, r6, #32
    eb06:	9306      	str	r3, [sp, #24]
    eb08:	e48b      	b.n	e422 <_svfprintf_r+0xe16>
    eb0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    eb0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
    eb0e:	4293      	cmp	r3, r2
    eb10:	f2c0 80c2 	blt.w	ec98 <_svfprintf_r+0x168c>
    eb14:	f019 0f01 	tst.w	r9, #1
    eb18:	f000 821d 	beq.w	ef56 <_svfprintf_r+0x194a>
    eb1c:	9a16      	ldr	r2, [sp, #88]	; 0x58
    eb1e:	4413      	add	r3, r2
    eb20:	930b      	str	r3, [sp, #44]	; 0x2c
    eb22:	f419 6f80 	tst.w	r9, #1024	; 0x400
    eb26:	f000 8214 	beq.w	ef52 <_svfprintf_r+0x1946>
    eb2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    eb2c:	2667      	movs	r6, #103	; 0x67
    eb2e:	2b00      	cmp	r3, #0
    eb30:	dc76      	bgt.n	ec20 <_svfprintf_r+0x1614>
    eb32:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    eb34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    eb38:	9306      	str	r3, [sp, #24]
    eb3a:	2300      	movs	r3, #0
    eb3c:	930f      	str	r3, [sp, #60]	; 0x3c
    eb3e:	9313      	str	r3, [sp, #76]	; 0x4c
    eb40:	e4cf      	b.n	e4e2 <_svfprintf_r+0xed6>
    eb42:	222d      	movs	r2, #45	; 0x2d
    eb44:	2300      	movs	r3, #0
    eb46:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
    eb4a:	9307      	str	r3, [sp, #28]
    eb4c:	f7fe be68 	b.w	d820 <_svfprintf_r+0x214>
    eb50:	990c      	ldr	r1, [sp, #48]	; 0x30
    eb52:	980a      	ldr	r0, [sp, #40]	; 0x28
    eb54:	aa28      	add	r2, sp, #160	; 0xa0
    eb56:	f005 fd99 	bl	1468c <__ssprint_r>
    eb5a:	2800      	cmp	r0, #0
    eb5c:	f47e aeb9 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    eb60:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    eb62:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    eb66:	f7ff bad8 	b.w	e11a <_svfprintf_r+0xb0e>
    eb6a:	4659      	mov	r1, fp
    eb6c:	4650      	mov	r0, sl
    eb6e:	aa28      	add	r2, sp, #160	; 0xa0
    eb70:	f005 fd8c 	bl	1468c <__ssprint_r>
    eb74:	2800      	cmp	r0, #0
    eb76:	f47e aeac 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    eb7a:	7838      	ldrb	r0, [r7, #0]
    eb7c:	992a      	ldr	r1, [sp, #168]	; 0xa8
    eb7e:	aa2b      	add	r2, sp, #172	; 0xac
    eb80:	4406      	add	r6, r0
    eb82:	e57a      	b.n	e67a <_svfprintf_r+0x106e>
    eb84:	990c      	ldr	r1, [sp, #48]	; 0x30
    eb86:	980a      	ldr	r0, [sp, #40]	; 0x28
    eb88:	aa28      	add	r2, sp, #160	; 0xa0
    eb8a:	f005 fd7f 	bl	1468c <__ssprint_r>
    eb8e:	2800      	cmp	r0, #0
    eb90:	f47e ae9f 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    eb94:	9b22      	ldr	r3, [sp, #136]	; 0x88
    eb96:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    eb98:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    eb9c:	f7ff bae1 	b.w	e162 <_svfprintf_r+0xb56>
    eba0:	9907      	ldr	r1, [sp, #28]
    eba2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    eba4:	9101      	str	r1, [sp, #4]
    eba6:	2103      	movs	r1, #3
    eba8:	9100      	str	r1, [sp, #0]
    ebaa:	a926      	add	r1, sp, #152	; 0x98
    ebac:	9104      	str	r1, [sp, #16]
    ebae:	a923      	add	r1, sp, #140	; 0x8c
    ebb0:	9103      	str	r1, [sp, #12]
    ebb2:	a922      	add	r1, sp, #136	; 0x88
    ebb4:	465a      	mov	r2, fp
    ebb6:	980a      	ldr	r0, [sp, #40]	; 0x28
    ebb8:	9102      	str	r1, [sp, #8]
    ebba:	f003 f9d1 	bl	11f60 <_dtoa_r>
    ebbe:	7803      	ldrb	r3, [r0, #0]
    ebc0:	4605      	mov	r5, r0
    ebc2:	2b30      	cmp	r3, #48	; 0x30
    ebc4:	f000 8216 	beq.w	eff4 <_svfprintf_r+0x19e8>
    ebc8:	9b22      	ldr	r3, [sp, #136]	; 0x88
    ebca:	9a07      	ldr	r2, [sp, #28]
    ebcc:	46b9      	mov	r9, r7
    ebce:	4413      	add	r3, r2
    ebd0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    ebd2:	18ec      	adds	r4, r5, r3
    ebd4:	4658      	mov	r0, fp
    ebd6:	2200      	movs	r2, #0
    ebd8:	2300      	movs	r3, #0
    ebda:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ebdc:	f007 fa7e 	bl	160dc <__aeabi_dcmpeq>
    ebe0:	b108      	cbz	r0, ebe6 <_svfprintf_r+0x15da>
    ebe2:	4623      	mov	r3, r4
    ebe4:	e411      	b.n	e40a <_svfprintf_r+0xdfe>
    ebe6:	9b26      	ldr	r3, [sp, #152]	; 0x98
    ebe8:	42a3      	cmp	r3, r4
    ebea:	f4bf ac0e 	bcs.w	e40a <_svfprintf_r+0xdfe>
    ebee:	2130      	movs	r1, #48	; 0x30
    ebf0:	1c5a      	adds	r2, r3, #1
    ebf2:	9226      	str	r2, [sp, #152]	; 0x98
    ebf4:	7019      	strb	r1, [r3, #0]
    ebf6:	9b26      	ldr	r3, [sp, #152]	; 0x98
    ebf8:	429c      	cmp	r4, r3
    ebfa:	d8f9      	bhi.n	ebf0 <_svfprintf_r+0x15e4>
    ebfc:	e405      	b.n	e40a <_svfprintf_r+0xdfe>
    ebfe:	9a22      	ldr	r2, [sp, #136]	; 0x88
    ec00:	2a00      	cmp	r2, #0
    ec02:	9210      	str	r2, [sp, #64]	; 0x40
    ec04:	f340 820e 	ble.w	f024 <_svfprintf_r+0x1a18>
    ec08:	9907      	ldr	r1, [sp, #28]
    ec0a:	f009 0301 	and.w	r3, r9, #1
    ec0e:	430b      	orrs	r3, r1
    ec10:	f040 817e 	bne.w	ef10 <_svfprintf_r+0x1904>
    ec14:	2666      	movs	r6, #102	; 0x66
    ec16:	9b10      	ldr	r3, [sp, #64]	; 0x40
    ec18:	930b      	str	r3, [sp, #44]	; 0x2c
    ec1a:	f419 6f80 	tst.w	r9, #1024	; 0x400
    ec1e:	d088      	beq.n	eb32 <_svfprintf_r+0x1526>
    ec20:	9919      	ldr	r1, [sp, #100]	; 0x64
    ec22:	780b      	ldrb	r3, [r1, #0]
    ec24:	2bff      	cmp	r3, #255	; 0xff
    ec26:	f000 8225 	beq.w	f074 <_svfprintf_r+0x1a68>
    ec2a:	2400      	movs	r4, #0
    ec2c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    ec2e:	4620      	mov	r0, r4
    ec30:	e004      	b.n	ec3c <_svfprintf_r+0x1630>
    ec32:	3001      	adds	r0, #1
    ec34:	3101      	adds	r1, #1
    ec36:	2bff      	cmp	r3, #255	; 0xff
    ec38:	f000 8159 	beq.w	eeee <_svfprintf_r+0x18e2>
    ec3c:	4293      	cmp	r3, r2
    ec3e:	f280 8156 	bge.w	eeee <_svfprintf_r+0x18e2>
    ec42:	1ad2      	subs	r2, r2, r3
    ec44:	784b      	ldrb	r3, [r1, #1]
    ec46:	2b00      	cmp	r3, #0
    ec48:	d1f3      	bne.n	ec32 <_svfprintf_r+0x1626>
    ec4a:	780b      	ldrb	r3, [r1, #0]
    ec4c:	3401      	adds	r4, #1
    ec4e:	e7f2      	b.n	ec36 <_svfprintf_r+0x162a>
    ec50:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
    ec54:	f7ff b9da 	b.w	e00c <_svfprintf_r+0xa00>
    ec58:	9b07      	ldr	r3, [sp, #28]
    ec5a:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
    ec5e:	940e      	str	r4, [sp, #56]	; 0x38
    ec60:	9306      	str	r3, [sp, #24]
    ec62:	930b      	str	r3, [sp, #44]	; 0x2c
    ec64:	9007      	str	r0, [sp, #28]
    ec66:	900f      	str	r0, [sp, #60]	; 0x3c
    ec68:	9013      	str	r0, [sp, #76]	; 0x4c
    ec6a:	9010      	str	r0, [sp, #64]	; 0x40
    ec6c:	f7fe bdd6 	b.w	d81c <_svfprintf_r+0x210>
    ec70:	990c      	ldr	r1, [sp, #48]	; 0x30
    ec72:	980a      	ldr	r0, [sp, #40]	; 0x28
    ec74:	aa28      	add	r2, sp, #160	; 0xa0
    ec76:	f005 fd09 	bl	1468c <__ssprint_r>
    ec7a:	2800      	cmp	r0, #0
    ec7c:	f47e ae29 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    ec80:	9d22      	ldr	r5, [sp, #136]	; 0x88
    ec82:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ec84:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    ec86:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    ec8a:	1b5d      	subs	r5, r3, r5
    ec8c:	f7ff ba81 	b.w	e192 <_svfprintf_r+0xb86>
    ec90:	2300      	movs	r3, #0
    ec92:	9307      	str	r3, [sp, #28]
    ec94:	f7fe bd0b 	b.w	d6ae <_svfprintf_r+0xa2>
    ec98:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ec9a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    ec9c:	189a      	adds	r2, r3, r2
    ec9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    eca0:	920b      	str	r2, [sp, #44]	; 0x2c
    eca2:	2b00      	cmp	r3, #0
    eca4:	f340 8185 	ble.w	efb2 <_svfprintf_r+0x19a6>
    eca8:	2667      	movs	r6, #103	; 0x67
    ecaa:	e7b6      	b.n	ec1a <_svfprintf_r+0x160e>
    ecac:	2330      	movs	r3, #48	; 0x30
    ecae:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
    ecb2:	2358      	movs	r3, #88	; 0x58
    ecb4:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
    ecb8:	9b07      	ldr	r3, [sp, #28]
    ecba:	f047 0402 	orr.w	r4, r7, #2
    ecbe:	2b63      	cmp	r3, #99	; 0x63
    ecc0:	f300 80c4 	bgt.w	ee4c <_svfprintf_r+0x1840>
    ecc4:	2300      	movs	r3, #0
    ecc6:	ad3b      	add	r5, sp, #236	; 0xec
    ecc8:	930d      	str	r3, [sp, #52]	; 0x34
    ecca:	f447 7381 	orr.w	r3, r7, #258	; 0x102
    ecce:	930f      	str	r3, [sp, #60]	; 0x3c
    ecd0:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
    ecd4:	4613      	mov	r3, r2
    ecd6:	2b00      	cmp	r3, #0
    ecd8:	4627      	mov	r7, r4
    ecda:	f2c0 8084 	blt.w	ede6 <_svfprintf_r+0x17da>
    ecde:	930b      	str	r3, [sp, #44]	; 0x2c
    ece0:	2300      	movs	r3, #0
    ece2:	468b      	mov	fp, r1
    ece4:	931d      	str	r3, [sp, #116]	; 0x74
    ece6:	f026 0320 	bic.w	r3, r6, #32
    ecea:	9306      	str	r3, [sp, #24]
    ecec:	2e61      	cmp	r6, #97	; 0x61
    ecee:	f000 8118 	beq.w	ef22 <_svfprintf_r+0x1916>
    ecf2:	2e41      	cmp	r6, #65	; 0x41
    ecf4:	f47f ab67 	bne.w	e3c6 <_svfprintf_r+0xdba>
    ecf8:	aa22      	add	r2, sp, #136	; 0x88
    ecfa:	4658      	mov	r0, fp
    ecfc:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ecfe:	f005 fc11 	bl	14524 <frexp>
    ed02:	2200      	movs	r2, #0
    ed04:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
    ed08:	f006 ff80 	bl	15c0c <__aeabi_dmul>
    ed0c:	4602      	mov	r2, r0
    ed0e:	460b      	mov	r3, r1
    ed10:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
    ed14:	2200      	movs	r2, #0
    ed16:	2300      	movs	r3, #0
    ed18:	f007 f9e0 	bl	160dc <__aeabi_dcmpeq>
    ed1c:	b108      	cbz	r0, ed22 <_svfprintf_r+0x1716>
    ed1e:	2301      	movs	r3, #1
    ed20:	9322      	str	r3, [sp, #136]	; 0x88
    ed22:	4bad      	ldr	r3, [pc, #692]	; (efd8 <_svfprintf_r+0x19cc>)
    ed24:	930b      	str	r3, [sp, #44]	; 0x2c
    ed26:	9b07      	ldr	r3, [sp, #28]
    ed28:	e9cd a612 	strd	sl, r6, [sp, #72]	; 0x48
    ed2c:	e9cd 781e 	strd	r7, r8, [sp, #120]	; 0x78
    ed30:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
    ed34:	46ab      	mov	fp, r5
    ed36:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
    ed3a:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
    ed3e:	9510      	str	r5, [sp, #64]	; 0x40
    ed40:	e006      	b.n	ed50 <_svfprintf_r+0x1744>
    ed42:	2200      	movs	r2, #0
    ed44:	2300      	movs	r3, #0
    ed46:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
    ed4a:	f007 f9c7 	bl	160dc <__aeabi_dcmpeq>
    ed4e:	b9e8      	cbnz	r0, ed8c <_svfprintf_r+0x1780>
    ed50:	2200      	movs	r2, #0
    ed52:	4ba2      	ldr	r3, [pc, #648]	; (efdc <_svfprintf_r+0x19d0>)
    ed54:	4630      	mov	r0, r6
    ed56:	4639      	mov	r1, r7
    ed58:	f006 ff58 	bl	15c0c <__aeabi_dmul>
    ed5c:	460f      	mov	r7, r1
    ed5e:	4606      	mov	r6, r0
    ed60:	f007 f9ee 	bl	16140 <__aeabi_d2iz>
    ed64:	4604      	mov	r4, r0
    ed66:	f006 fee7 	bl	15b38 <__aeabi_i2d>
    ed6a:	460b      	mov	r3, r1
    ed6c:	4602      	mov	r2, r0
    ed6e:	4639      	mov	r1, r7
    ed70:	4630      	mov	r0, r6
    ed72:	f006 fd93 	bl	1589c <__aeabi_dsub>
    ed76:	f81a 3004 	ldrb.w	r3, [sl, r4]
    ed7a:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
    ed7e:	46d8      	mov	r8, fp
    ed80:	464d      	mov	r5, r9
    ed82:	4606      	mov	r6, r0
    ed84:	460f      	mov	r7, r1
    ed86:	f80b 3b01 	strb.w	r3, [fp], #1
    ed8a:	d1da      	bne.n	ed42 <_svfprintf_r+0x1736>
    ed8c:	4630      	mov	r0, r6
    ed8e:	4639      	mov	r1, r7
    ed90:	2200      	movs	r2, #0
    ed92:	4b93      	ldr	r3, [pc, #588]	; (efe0 <_svfprintf_r+0x19d4>)
    ed94:	46a9      	mov	r9, r5
    ed96:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
    ed9a:	9d10      	ldr	r5, [sp, #64]	; 0x40
    ed9c:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
    eda0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
    eda4:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
    eda8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
    edaa:	9f1e      	ldr	r7, [sp, #120]	; 0x78
    edac:	f007 f9be 	bl	1612c <__aeabi_dcmpgt>
    edb0:	bb80      	cbnz	r0, ee14 <_svfprintf_r+0x1808>
    edb2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
    edb6:	2200      	movs	r2, #0
    edb8:	4b89      	ldr	r3, [pc, #548]	; (efe0 <_svfprintf_r+0x19d4>)
    edba:	f007 f98f 	bl	160dc <__aeabi_dcmpeq>
    edbe:	b108      	cbz	r0, edc4 <_svfprintf_r+0x17b8>
    edc0:	07e1      	lsls	r1, r4, #31
    edc2:	d427      	bmi.n	ee14 <_svfprintf_r+0x1808>
    edc4:	464b      	mov	r3, r9
    edc6:	2b00      	cmp	r3, #0
    edc8:	db06      	blt.n	edd8 <_svfprintf_r+0x17cc>
    edca:	2230      	movs	r2, #48	; 0x30
    edcc:	3301      	adds	r3, #1
    edce:	445b      	add	r3, fp
    edd0:	f80b 2b01 	strb.w	r2, [fp], #1
    edd4:	455b      	cmp	r3, fp
    edd6:	d1fb      	bne.n	edd0 <_svfprintf_r+0x17c4>
    edd8:	ebab 0305 	sub.w	r3, fp, r5
    eddc:	46b9      	mov	r9, r7
    edde:	9312      	str	r3, [sp, #72]	; 0x48
    ede0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    ede2:	f7ff bb14 	b.w	e40e <_svfprintf_r+0xe02>
    ede6:	f026 0320 	bic.w	r3, r6, #32
    edea:	9306      	str	r3, [sp, #24]
    edec:	222d      	movs	r2, #45	; 0x2d
    edee:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
    edf2:	469b      	mov	fp, r3
    edf4:	f104 4300 	add.w	r3, r4, #2147483648	; 0x80000000
    edf8:	921d      	str	r2, [sp, #116]	; 0x74
    edfa:	930b      	str	r3, [sp, #44]	; 0x2c
    edfc:	e776      	b.n	ecec <_svfprintf_r+0x16e0>
    edfe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    ee00:	f7ff b95c 	b.w	e0bc <_svfprintf_r+0xab0>
    ee04:	9b07      	ldr	r3, [sp, #28]
    ee06:	18ec      	adds	r4, r5, r3
    ee08:	e6e4      	b.n	ebd4 <_svfprintf_r+0x15c8>
    ee0a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    ee0c:	f8df 91d4 	ldr.w	r9, [pc, #468]	; efe4 <_svfprintf_r+0x19d8>
    ee10:	f7ff b827 	b.w	de62 <_svfprintf_r+0x856>
    ee14:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ee16:	9326      	str	r3, [sp, #152]	; 0x98
    ee18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ee1a:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
    ee1e:	7bd9      	ldrb	r1, [r3, #15]
    ee20:	465b      	mov	r3, fp
    ee22:	428a      	cmp	r2, r1
    ee24:	d109      	bne.n	ee3a <_svfprintf_r+0x182e>
    ee26:	2030      	movs	r0, #48	; 0x30
    ee28:	f803 0c01 	strb.w	r0, [r3, #-1]
    ee2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
    ee2e:	1e5a      	subs	r2, r3, #1
    ee30:	9226      	str	r2, [sp, #152]	; 0x98
    ee32:	f813 2c01 	ldrb.w	r2, [r3, #-1]
    ee36:	4291      	cmp	r1, r2
    ee38:	d0f6      	beq.n	ee28 <_svfprintf_r+0x181c>
    ee3a:	2a39      	cmp	r2, #57	; 0x39
    ee3c:	bf0b      	itete	eq
    ee3e:	9a0b      	ldreq	r2, [sp, #44]	; 0x2c
    ee40:	3201      	addne	r2, #1
    ee42:	7a92      	ldrbeq	r2, [r2, #10]
    ee44:	b2d2      	uxtbne	r2, r2
    ee46:	f803 2c01 	strb.w	r2, [r3, #-1]
    ee4a:	e7c5      	b.n	edd8 <_svfprintf_r+0x17cc>
    ee4c:	980a      	ldr	r0, [sp, #40]	; 0x28
    ee4e:	1c59      	adds	r1, r3, #1
    ee50:	f7fd f982 	bl	c158 <_malloc_r>
    ee54:	4605      	mov	r5, r0
    ee56:	2800      	cmp	r0, #0
    ee58:	f000 8117 	beq.w	f08a <_svfprintf_r+0x1a7e>
    ee5c:	900d      	str	r0, [sp, #52]	; 0x34
    ee5e:	e734      	b.n	ecca <_svfprintf_r+0x16be>
    ee60:	2102      	movs	r1, #2
    ee62:	9100      	str	r1, [sp, #0]
    ee64:	9907      	ldr	r1, [sp, #28]
    ee66:	465a      	mov	r2, fp
    ee68:	1c4c      	adds	r4, r1, #1
    ee6a:	a926      	add	r1, sp, #152	; 0x98
    ee6c:	9104      	str	r1, [sp, #16]
    ee6e:	a923      	add	r1, sp, #140	; 0x8c
    ee70:	9103      	str	r1, [sp, #12]
    ee72:	a922      	add	r1, sp, #136	; 0x88
    ee74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ee76:	980a      	ldr	r0, [sp, #40]	; 0x28
    ee78:	9401      	str	r4, [sp, #4]
    ee7a:	9102      	str	r1, [sp, #8]
    ee7c:	f003 f870 	bl	11f60 <_dtoa_r>
    ee80:	4605      	mov	r5, r0
    ee82:	46b9      	mov	r9, r7
    ee84:	442c      	add	r4, r5
    ee86:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
    ee88:	e6a4      	b.n	ebd4 <_svfprintf_r+0x15c8>
    ee8a:	2330      	movs	r3, #48	; 0x30
    ee8c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
    ee90:	2378      	movs	r3, #120	; 0x78
    ee92:	e70f      	b.n	ecb4 <_svfprintf_r+0x16a8>
    ee94:	4645      	mov	r5, r8
    ee96:	4688      	mov	r8, r1
    ee98:	3301      	adds	r3, #1
    ee9a:	4432      	add	r2, r6
    ee9c:	2b07      	cmp	r3, #7
    ee9e:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
    eea2:	f8c8 9000 	str.w	r9, [r8]
    eea6:	f8c8 6004 	str.w	r6, [r8, #4]
    eeaa:	f77f acb5 	ble.w	e818 <_svfprintf_r+0x120c>
    eeae:	990c      	ldr	r1, [sp, #48]	; 0x30
    eeb0:	980a      	ldr	r0, [sp, #40]	; 0x28
    eeb2:	aa28      	add	r2, sp, #160	; 0xa0
    eeb4:	f005 fbea 	bl	1468c <__ssprint_r>
    eeb8:	2800      	cmp	r0, #0
    eeba:	f47e ad0a 	bne.w	d8d2 <_svfprintf_r+0x2c6>
    eebe:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
    eec2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
    eec6:	e4a9      	b.n	e81c <_svfprintf_r+0x1210>
    eec8:	9b07      	ldr	r3, [sp, #28]
    eeca:	2b00      	cmp	r3, #0
    eecc:	bf08      	it	eq
    eece:	2301      	moveq	r3, #1
    eed0:	9307      	str	r3, [sp, #28]
    eed2:	f447 7380 	orr.w	r3, r7, #256	; 0x100
    eed6:	930f      	str	r3, [sp, #60]	; 0x3c
    eed8:	9b15      	ldr	r3, [sp, #84]	; 0x54
    eeda:	2b00      	cmp	r3, #0
    eedc:	f2c0 80b6 	blt.w	f04c <_svfprintf_r+0x1a40>
    eee0:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
    eee4:	900d      	str	r0, [sp, #52]	; 0x34
    eee6:	930b      	str	r3, [sp, #44]	; 0x2c
    eee8:	901d      	str	r0, [sp, #116]	; 0x74
    eeea:	f7ff ba73 	b.w	e3d4 <_svfprintf_r+0xdc8>
    eeee:	9119      	str	r1, [sp, #100]	; 0x64
    eef0:	9210      	str	r2, [sp, #64]	; 0x40
    eef2:	9013      	str	r0, [sp, #76]	; 0x4c
    eef4:	940f      	str	r4, [sp, #60]	; 0x3c
    eef6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    eef8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    eefa:	991c      	ldr	r1, [sp, #112]	; 0x70
    eefc:	4413      	add	r3, r2
    eefe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    ef00:	fb01 2303 	mla	r3, r1, r3, r2
    ef04:	930b      	str	r3, [sp, #44]	; 0x2c
    ef06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    ef0a:	9306      	str	r3, [sp, #24]
    ef0c:	f7ff bae9 	b.w	e4e2 <_svfprintf_r+0xed6>
    ef10:	9b16      	ldr	r3, [sp, #88]	; 0x58
    ef12:	2666      	movs	r6, #102	; 0x66
    ef14:	18d3      	adds	r3, r2, r3
    ef16:	4419      	add	r1, r3
    ef18:	910b      	str	r1, [sp, #44]	; 0x2c
    ef1a:	e67e      	b.n	ec1a <_svfprintf_r+0x160e>
    ef1c:	2300      	movs	r3, #0
    ef1e:	930d      	str	r3, [sp, #52]	; 0x34
    ef20:	e764      	b.n	edec <_svfprintf_r+0x17e0>
    ef22:	aa22      	add	r2, sp, #136	; 0x88
    ef24:	4658      	mov	r0, fp
    ef26:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ef28:	f005 fafc 	bl	14524 <frexp>
    ef2c:	2200      	movs	r2, #0
    ef2e:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
    ef32:	f006 fe6b 	bl	15c0c <__aeabi_dmul>
    ef36:	4602      	mov	r2, r0
    ef38:	460b      	mov	r3, r1
    ef3a:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
    ef3e:	2200      	movs	r2, #0
    ef40:	2300      	movs	r3, #0
    ef42:	f007 f8cb 	bl	160dc <__aeabi_dcmpeq>
    ef46:	b108      	cbz	r0, ef4c <_svfprintf_r+0x1940>
    ef48:	2301      	movs	r3, #1
    ef4a:	9322      	str	r3, [sp, #136]	; 0x88
    ef4c:	4b26      	ldr	r3, [pc, #152]	; (efe8 <_svfprintf_r+0x19dc>)
    ef4e:	930b      	str	r3, [sp, #44]	; 0x2c
    ef50:	e6e9      	b.n	ed26 <_svfprintf_r+0x171a>
    ef52:	2667      	movs	r6, #103	; 0x67
    ef54:	e5ed      	b.n	eb32 <_svfprintf_r+0x1526>
    ef56:	9b10      	ldr	r3, [sp, #64]	; 0x40
    ef58:	930b      	str	r3, [sp, #44]	; 0x2c
    ef5a:	e5e2      	b.n	eb22 <_svfprintf_r+0x1516>
    ef5c:	9b15      	ldr	r3, [sp, #84]	; 0x54
    ef5e:	2003      	movs	r0, #3
    ef60:	2b00      	cmp	r3, #0
    ef62:	bfb8      	it	lt
    ef64:	222d      	movlt	r2, #45	; 0x2d
    ef66:	f04f 0300 	mov.w	r3, #0
    ef6a:	bfa8      	it	ge
    ef6c:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
    ef70:	4619      	mov	r1, r3
    ef72:	930d      	str	r3, [sp, #52]	; 0x34
    ef74:	4d1d      	ldr	r5, [pc, #116]	; (efec <_svfprintf_r+0x19e0>)
    ef76:	4b1e      	ldr	r3, [pc, #120]	; (eff0 <_svfprintf_r+0x19e4>)
    ef78:	bfb8      	it	lt
    ef7a:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
    ef7e:	f027 0780 	bic.w	r7, r7, #128	; 0x80
    ef82:	9006      	str	r0, [sp, #24]
    ef84:	f7fe bd7f 	b.w	da86 <_svfprintf_r+0x47a>
    ef88:	2900      	cmp	r1, #0
    ef8a:	d144      	bne.n	f016 <_svfprintf_r+0x1a0a>
    ef8c:	2230      	movs	r2, #48	; 0x30
    ef8e:	f88d 2092 	strb.w	r2, [sp, #146]	; 0x92
    ef92:	f10d 0293 	add.w	r2, sp, #147	; 0x93
    ef96:	3330      	adds	r3, #48	; 0x30
    ef98:	f802 3b01 	strb.w	r3, [r2], #1
    ef9c:	ab24      	add	r3, sp, #144	; 0x90
    ef9e:	1ad3      	subs	r3, r2, r3
    efa0:	931a      	str	r3, [sp, #104]	; 0x68
    efa2:	f7ff ba87 	b.w	e4b4 <_svfprintf_r+0xea8>
    efa6:	f106 020f 	add.w	r2, r6, #15
    efaa:	2101      	movs	r1, #1
    efac:	b2d2      	uxtb	r2, r2
    efae:	f7ff ba41 	b.w	e434 <_svfprintf_r+0xe28>
    efb2:	f1c3 0301 	rsb	r3, r3, #1
    efb6:	441a      	add	r2, r3
    efb8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
    efbc:	2667      	movs	r6, #103	; 0x67
    efbe:	920b      	str	r2, [sp, #44]	; 0x2c
    efc0:	9306      	str	r3, [sp, #24]
    efc2:	e5ba      	b.n	eb3a <_svfprintf_r+0x152e>
    efc4:	f019 0f01 	tst.w	r9, #1
    efc8:	f43f aa7f 	beq.w	e4ca <_svfprintf_r+0xebe>
    efcc:	f7ff ba79 	b.w	e4c2 <_svfprintf_r+0xeb6>
    efd0:	9829      	ldr	r0, [sp, #164]	; 0xa4
    efd2:	f7ff bb7f 	b.w	e6d4 <_svfprintf_r+0x10c8>
    efd6:	bf00      	nop
    efd8:	00019fdc 	.word	0x00019fdc
    efdc:	40300000 	.word	0x40300000
    efe0:	3fe00000 	.word	0x3fe00000
    efe4:	0001a00c 	.word	0x0001a00c
    efe8:	00019fc8 	.word	0x00019fc8
    efec:	00019fc0 	.word	0x00019fc0
    eff0:	00019fc4 	.word	0x00019fc4
    eff4:	4658      	mov	r0, fp
    eff6:	2200      	movs	r2, #0
    eff8:	2300      	movs	r3, #0
    effa:	990b      	ldr	r1, [sp, #44]	; 0x2c
    effc:	f007 f86e 	bl	160dc <__aeabi_dcmpeq>
    f000:	2800      	cmp	r0, #0
    f002:	f47f ade1 	bne.w	ebc8 <_svfprintf_r+0x15bc>
    f006:	9b07      	ldr	r3, [sp, #28]
    f008:	f1c3 0301 	rsb	r3, r3, #1
    f00c:	9322      	str	r3, [sp, #136]	; 0x88
    f00e:	e5dc      	b.n	ebca <_svfprintf_r+0x15be>
    f010:	f8df 9098 	ldr.w	r9, [pc, #152]	; f0ac <_svfprintf_r+0x1aa0>
    f014:	e4ad      	b.n	e972 <_svfprintf_r+0x1366>
    f016:	f10d 0292 	add.w	r2, sp, #146	; 0x92
    f01a:	e7bc      	b.n	ef96 <_svfprintf_r+0x198a>
    f01c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    f01e:	f8df 908c 	ldr.w	r9, [pc, #140]	; f0ac <_svfprintf_r+0x1aa0>
    f022:	e428      	b.n	e876 <_svfprintf_r+0x126a>
    f024:	9a07      	ldr	r2, [sp, #28]
    f026:	f009 0901 	and.w	r9, r9, #1
    f02a:	ea59 0302 	orrs.w	r3, r9, r2
    f02e:	d104      	bne.n	f03a <_svfprintf_r+0x1a2e>
    f030:	2301      	movs	r3, #1
    f032:	2666      	movs	r6, #102	; 0x66
    f034:	9306      	str	r3, [sp, #24]
    f036:	930b      	str	r3, [sp, #44]	; 0x2c
    f038:	e57f      	b.n	eb3a <_svfprintf_r+0x152e>
    f03a:	9b16      	ldr	r3, [sp, #88]	; 0x58
    f03c:	2666      	movs	r6, #102	; 0x66
    f03e:	3301      	adds	r3, #1
    f040:	441a      	add	r2, r3
    f042:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
    f046:	920b      	str	r2, [sp, #44]	; 0x2c
    f048:	9306      	str	r3, [sp, #24]
    f04a:	e576      	b.n	eb3a <_svfprintf_r+0x152e>
    f04c:	900d      	str	r0, [sp, #52]	; 0x34
    f04e:	e6cd      	b.n	edec <_svfprintf_r+0x17e0>
    f050:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    f052:	f89a 6001 	ldrb.w	r6, [sl, #1]
    f056:	4692      	mov	sl, r2
    f058:	f853 2b04 	ldr.w	r2, [r3], #4
    f05c:	930e      	str	r3, [sp, #56]	; 0x38
    f05e:	ea42 73e2 	orr.w	r3, r2, r2, asr #31
    f062:	9307      	str	r3, [sp, #28]
    f064:	f7fe bb21 	b.w	d6aa <_svfprintf_r+0x9e>
    f068:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    f06a:	f8df 9040 	ldr.w	r9, [pc, #64]	; f0ac <_svfprintf_r+0x1aa0>
    f06e:	e4b1      	b.n	e9d4 <_svfprintf_r+0x13c8>
    f070:	9c07      	ldr	r4, [sp, #28]
    f072:	e706      	b.n	ee82 <_svfprintf_r+0x1876>
    f074:	2300      	movs	r3, #0
    f076:	930f      	str	r3, [sp, #60]	; 0x3c
    f078:	9313      	str	r3, [sp, #76]	; 0x4c
    f07a:	e73c      	b.n	eef6 <_svfprintf_r+0x18ea>
    f07c:	f8df 902c 	ldr.w	r9, [pc, #44]	; f0ac <_svfprintf_r+0x1aa0>
    f080:	e70a      	b.n	ee98 <_svfprintf_r+0x188c>
    f082:	2302      	movs	r3, #2
    f084:	931a      	str	r3, [sp, #104]	; 0x68
    f086:	f7ff ba15 	b.w	e4b4 <_svfprintf_r+0xea8>
    f08a:	990c      	ldr	r1, [sp, #48]	; 0x30
    f08c:	898b      	ldrh	r3, [r1, #12]
    f08e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
    f092:	4613      	mov	r3, r2
    f094:	818a      	strh	r2, [r1, #12]
    f096:	f7fe bc24 	b.w	d8e2 <_svfprintf_r+0x2d6>
    f09a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    f09e:	230c      	movs	r3, #12
    f0a0:	9208      	str	r2, [sp, #32]
    f0a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    f0a4:	6013      	str	r3, [r2, #0]
    f0a6:	f7fe bc23 	b.w	d8f0 <_svfprintf_r+0x2e4>
    f0aa:	bf00      	nop
    f0ac:	0001a00c 	.word	0x0001a00c

0000f0b0 <write>:
    f0b0:	468c      	mov	ip, r1
    f0b2:	b500      	push	{lr}
    f0b4:	4686      	mov	lr, r0
    f0b6:	4613      	mov	r3, r2
    f0b8:	4a03      	ldr	r2, [pc, #12]	; (f0c8 <write+0x18>)
    f0ba:	4671      	mov	r1, lr
    f0bc:	6810      	ldr	r0, [r2, #0]
    f0be:	f85d eb04 	ldr.w	lr, [sp], #4
    f0c2:	4662      	mov	r2, ip
    f0c4:	f002 bdc2 	b.w	11c4c <_write_r>
    f0c8:	20000124 	.word	0x20000124

0000f0cc <__sprint_r.part.0>:
    f0cc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f0d0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    f0d2:	4690      	mov	r8, r2
    f0d4:	049c      	lsls	r4, r3, #18
    f0d6:	d52d      	bpl.n	f134 <__sprint_r.part.0+0x68>
    f0d8:	6893      	ldr	r3, [r2, #8]
    f0da:	6812      	ldr	r2, [r2, #0]
    f0dc:	b343      	cbz	r3, f130 <__sprint_r.part.0+0x64>
    f0de:	468b      	mov	fp, r1
    f0e0:	4606      	mov	r6, r0
    f0e2:	f102 0908 	add.w	r9, r2, #8
    f0e6:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
    f0ea:	ea5f 079a 	movs.w	r7, sl, lsr #2
    f0ee:	d015      	beq.n	f11c <__sprint_r.part.0+0x50>
    f0f0:	2400      	movs	r4, #0
    f0f2:	3d04      	subs	r5, #4
    f0f4:	e001      	b.n	f0fa <__sprint_r.part.0+0x2e>
    f0f6:	42a7      	cmp	r7, r4
    f0f8:	d00e      	beq.n	f118 <__sprint_r.part.0+0x4c>
    f0fa:	465a      	mov	r2, fp
    f0fc:	4630      	mov	r0, r6
    f0fe:	f855 1f04 	ldr.w	r1, [r5, #4]!
    f102:	f004 f95d 	bl	133c0 <_fputwc_r>
    f106:	1c43      	adds	r3, r0, #1
    f108:	f104 0401 	add.w	r4, r4, #1
    f10c:	d1f3      	bne.n	f0f6 <__sprint_r.part.0+0x2a>
    f10e:	2300      	movs	r3, #0
    f110:	e9c8 3301 	strd	r3, r3, [r8, #4]
    f114:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f118:	f8d8 3008 	ldr.w	r3, [r8, #8]
    f11c:	f02a 0a03 	bic.w	sl, sl, #3
    f120:	eba3 030a 	sub.w	r3, r3, sl
    f124:	f8c8 3008 	str.w	r3, [r8, #8]
    f128:	f109 0908 	add.w	r9, r9, #8
    f12c:	2b00      	cmp	r3, #0
    f12e:	d1da      	bne.n	f0e6 <__sprint_r.part.0+0x1a>
    f130:	2000      	movs	r0, #0
    f132:	e7ec      	b.n	f10e <__sprint_r.part.0+0x42>
    f134:	f7fc fdc6 	bl	bcc4 <__sfvwrite_r>
    f138:	2300      	movs	r3, #0
    f13a:	e9c8 3301 	strd	r3, r3, [r8, #4]
    f13e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f142:	bf00      	nop

0000f144 <__sprint_r>:
    f144:	b410      	push	{r4}
    f146:	6894      	ldr	r4, [r2, #8]
    f148:	b114      	cbz	r4, f150 <__sprint_r+0xc>
    f14a:	bc10      	pop	{r4}
    f14c:	f7ff bfbe 	b.w	f0cc <__sprint_r.part.0>
    f150:	4620      	mov	r0, r4
    f152:	6054      	str	r4, [r2, #4]
    f154:	bc10      	pop	{r4}
    f156:	4770      	bx	lr

0000f158 <_vfiprintf_r>:
    f158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f15c:	b0bd      	sub	sp, #244	; 0xf4
    f15e:	461c      	mov	r4, r3
    f160:	4617      	mov	r7, r2
    f162:	e9cd 3005 	strd	r3, r0, [sp, #20]
    f166:	9102      	str	r1, [sp, #8]
    f168:	b118      	cbz	r0, f172 <_vfiprintf_r+0x1a>
    f16a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    f16c:	2b00      	cmp	r3, #0
    f16e:	f000 8277 	beq.w	f660 <_vfiprintf_r+0x508>
    f172:	9a02      	ldr	r2, [sp, #8]
    f174:	6e53      	ldr	r3, [r2, #100]	; 0x64
    f176:	07de      	lsls	r6, r3, #31
    f178:	f140 8184 	bpl.w	f484 <_vfiprintf_r+0x32c>
    f17c:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
    f180:	b28a      	uxth	r2, r1
    f182:	0490      	lsls	r0, r2, #18
    f184:	d408      	bmi.n	f198 <_vfiprintf_r+0x40>
    f186:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
    f18a:	9902      	ldr	r1, [sp, #8]
    f18c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    f18e:	818a      	strh	r2, [r1, #12]
    f190:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    f194:	b292      	uxth	r2, r2
    f196:	664b      	str	r3, [r1, #100]	; 0x64
    f198:	0711      	lsls	r1, r2, #28
    f19a:	f140 80ec 	bpl.w	f376 <_vfiprintf_r+0x21e>
    f19e:	9b02      	ldr	r3, [sp, #8]
    f1a0:	691b      	ldr	r3, [r3, #16]
    f1a2:	2b00      	cmp	r3, #0
    f1a4:	f000 80e7 	beq.w	f376 <_vfiprintf_r+0x21e>
    f1a8:	f002 031a 	and.w	r3, r2, #26
    f1ac:	2b0a      	cmp	r3, #10
    f1ae:	f000 80f0 	beq.w	f392 <_vfiprintf_r+0x23a>
    f1b2:	ab13      	add	r3, sp, #76	; 0x4c
    f1b4:	9310      	str	r3, [sp, #64]	; 0x40
    f1b6:	2300      	movs	r3, #0
    f1b8:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
    f1bc:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
    f1c0:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
    f1c4:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f1c8:	9304      	str	r3, [sp, #16]
    f1ca:	783b      	ldrb	r3, [r7, #0]
    f1cc:	2b00      	cmp	r3, #0
    f1ce:	f000 8146 	beq.w	f45e <_vfiprintf_r+0x306>
    f1d2:	463c      	mov	r4, r7
    f1d4:	e004      	b.n	f1e0 <_vfiprintf_r+0x88>
    f1d6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
    f1da:	2b00      	cmp	r3, #0
    f1dc:	f000 8121 	beq.w	f422 <_vfiprintf_r+0x2ca>
    f1e0:	2b25      	cmp	r3, #37	; 0x25
    f1e2:	d1f8      	bne.n	f1d6 <_vfiprintf_r+0x7e>
    f1e4:	1be5      	subs	r5, r4, r7
    f1e6:	f040 811e 	bne.w	f426 <_vfiprintf_r+0x2ce>
    f1ea:	7823      	ldrb	r3, [r4, #0]
    f1ec:	2b00      	cmp	r3, #0
    f1ee:	f000 8136 	beq.w	f45e <_vfiprintf_r+0x306>
    f1f2:	f04f 0300 	mov.w	r3, #0
    f1f6:	2500      	movs	r5, #0
    f1f8:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
    f1fc:	f04f 082b 	mov.w	r8, #43	; 0x2b
    f200:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f204:	7863      	ldrb	r3, [r4, #1]
    f206:	9503      	str	r5, [sp, #12]
    f208:	1c67      	adds	r7, r4, #1
    f20a:	3701      	adds	r7, #1
    f20c:	f1a3 0220 	sub.w	r2, r3, #32
    f210:	2a5a      	cmp	r2, #90	; 0x5a
    f212:	f200 8146 	bhi.w	f4a2 <_vfiprintf_r+0x34a>
    f216:	e8df f012 	tbh	[pc, r2, lsl #1]
    f21a:	02a1      	.short	0x02a1
    f21c:	01440144 	.word	0x01440144
    f220:	0144029d 	.word	0x0144029d
    f224:	01440144 	.word	0x01440144
    f228:	0144027c 	.word	0x0144027c
    f22c:	006a0144 	.word	0x006a0144
    f230:	01440253 	.word	0x01440253
    f234:	02af0229 	.word	0x02af0229
    f238:	02ab0144 	.word	0x02ab0144
    f23c:	005b005b 	.word	0x005b005b
    f240:	005b005b 	.word	0x005b005b
    f244:	005b005b 	.word	0x005b005b
    f248:	005b005b 	.word	0x005b005b
    f24c:	0144005b 	.word	0x0144005b
    f250:	01440144 	.word	0x01440144
    f254:	01440144 	.word	0x01440144
    f258:	01440144 	.word	0x01440144
    f25c:	01440144 	.word	0x01440144
    f260:	00780213 	.word	0x00780213
    f264:	01440144 	.word	0x01440144
    f268:	01440144 	.word	0x01440144
    f26c:	01440144 	.word	0x01440144
    f270:	01440144 	.word	0x01440144
    f274:	01440144 	.word	0x01440144
    f278:	014400d1 	.word	0x014400d1
    f27c:	01440144 	.word	0x01440144
    f280:	014401f7 	.word	0x014401f7
    f284:	01440241 	.word	0x01440241
    f288:	05210144 	.word	0x05210144
    f28c:	01440144 	.word	0x01440144
    f290:	01440144 	.word	0x01440144
    f294:	01440144 	.word	0x01440144
    f298:	01440144 	.word	0x01440144
    f29c:	01440144 	.word	0x01440144
    f2a0:	007a0213 	.word	0x007a0213
    f2a4:	01440144 	.word	0x01440144
    f2a8:	02370144 	.word	0x02370144
    f2ac:	0074007a 	.word	0x0074007a
    f2b0:	022d0144 	.word	0x022d0144
    f2b4:	02690144 	.word	0x02690144
    f2b8:	025700d3 	.word	0x025700d3
    f2bc:	01440074 	.word	0x01440074
    f2c0:	007201f7 	.word	0x007201f7
    f2c4:	01440541 	.word	0x01440541
    f2c8:	05430144 	.word	0x05430144
    f2cc:	00720144 	.word	0x00720144
    f2d0:	2100      	movs	r1, #0
    f2d2:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    f2d6:	f817 3b01 	ldrb.w	r3, [r7], #1
    f2da:	eb01 0181 	add.w	r1, r1, r1, lsl #2
    f2de:	eb02 0141 	add.w	r1, r2, r1, lsl #1
    f2e2:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    f2e6:	2a09      	cmp	r2, #9
    f2e8:	d9f5      	bls.n	f2d6 <_vfiprintf_r+0x17e>
    f2ea:	9103      	str	r1, [sp, #12]
    f2ec:	e78e      	b.n	f20c <_vfiprintf_r+0xb4>
    f2ee:	9b05      	ldr	r3, [sp, #20]
    f2f0:	f853 2b04 	ldr.w	r2, [r3], #4
    f2f4:	2a00      	cmp	r2, #0
    f2f6:	9203      	str	r2, [sp, #12]
    f2f8:	9305      	str	r3, [sp, #20]
    f2fa:	f2c0 81b4 	blt.w	f666 <_vfiprintf_r+0x50e>
    f2fe:	783b      	ldrb	r3, [r7, #0]
    f300:	e783      	b.n	f20a <_vfiprintf_r+0xb2>
    f302:	783b      	ldrb	r3, [r7, #0]
    f304:	f045 0520 	orr.w	r5, r5, #32
    f308:	e77f      	b.n	f20a <_vfiprintf_r+0xb2>
    f30a:	f045 0510 	orr.w	r5, r5, #16
    f30e:	06ac      	lsls	r4, r5, #26
    f310:	9e05      	ldr	r6, [sp, #20]
    f312:	f140 816b 	bpl.w	f5ec <_vfiprintf_r+0x494>
    f316:	3607      	adds	r6, #7
    f318:	f026 0607 	bic.w	r6, r6, #7
    f31c:	4632      	mov	r2, r6
    f31e:	6873      	ldr	r3, [r6, #4]
    f320:	f852 6b08 	ldr.w	r6, [r2], #8
    f324:	4698      	mov	r8, r3
    f326:	9205      	str	r2, [sp, #20]
    f328:	2b00      	cmp	r3, #0
    f32a:	f2c0 8449 	blt.w	fbc0 <_vfiprintf_r+0xa68>
    f32e:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
    f332:	f000 8531 	beq.w	fd98 <_vfiprintf_r+0xc40>
    f336:	ea56 0308 	orrs.w	r3, r6, r8
    f33a:	f025 0a80 	bic.w	sl, r5, #128	; 0x80
    f33e:	f000 8425 	beq.w	fb8c <_vfiprintf_r+0xa34>
    f342:	2e0a      	cmp	r6, #10
    f344:	f178 0300 	sbcs.w	r3, r8, #0
    f348:	f080 84e1 	bcs.w	fd0e <_vfiprintf_r+0xbb6>
    f34c:	2301      	movs	r3, #1
    f34e:	4655      	mov	r5, sl
    f350:	3630      	adds	r6, #48	; 0x30
    f352:	f88d 60ef 	strb.w	r6, [sp, #239]	; 0xef
    f356:	9301      	str	r3, [sp, #4]
    f358:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
    f35c:	f8dd 8004 	ldr.w	r8, [sp, #4]
    f360:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
    f364:	45d8      	cmp	r8, fp
    f366:	bfb8      	it	lt
    f368:	46d8      	movlt	r8, fp
    f36a:	2b00      	cmp	r3, #0
    f36c:	f000 80a8 	beq.w	f4c0 <_vfiprintf_r+0x368>
    f370:	f108 0801 	add.w	r8, r8, #1
    f374:	e0a4      	b.n	f4c0 <_vfiprintf_r+0x368>
    f376:	9d02      	ldr	r5, [sp, #8]
    f378:	9806      	ldr	r0, [sp, #24]
    f37a:	4629      	mov	r1, r5
    f37c:	f002 fc7c 	bl	11c78 <__swsetup_r>
    f380:	2800      	cmp	r0, #0
    f382:	f040 8594 	bne.w	feae <_vfiprintf_r+0xd56>
    f386:	89aa      	ldrh	r2, [r5, #12]
    f388:	f002 031a 	and.w	r3, r2, #26
    f38c:	2b0a      	cmp	r3, #10
    f38e:	f47f af10 	bne.w	f1b2 <_vfiprintf_r+0x5a>
    f392:	9902      	ldr	r1, [sp, #8]
    f394:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
    f398:	2b00      	cmp	r3, #0
    f39a:	f6ff af0a 	blt.w	f1b2 <_vfiprintf_r+0x5a>
    f39e:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    f3a0:	07de      	lsls	r6, r3, #31
    f3a2:	d402      	bmi.n	f3aa <_vfiprintf_r+0x252>
    f3a4:	0595      	lsls	r5, r2, #22
    f3a6:	f140 8562 	bpl.w	fe6e <_vfiprintf_r+0xd16>
    f3aa:	4623      	mov	r3, r4
    f3ac:	463a      	mov	r2, r7
    f3ae:	9902      	ldr	r1, [sp, #8]
    f3b0:	9806      	ldr	r0, [sp, #24]
    f3b2:	b03d      	add	sp, #244	; 0xf4
    f3b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f3b8:	f000 bda8 	b.w	ff0c <__sbprintf>
    f3bc:	f045 0510 	orr.w	r5, r5, #16
    f3c0:	f015 0820 	ands.w	r8, r5, #32
    f3c4:	f000 8103 	beq.w	f5ce <_vfiprintf_r+0x476>
    f3c8:	9e05      	ldr	r6, [sp, #20]
    f3ca:	3607      	adds	r6, #7
    f3cc:	f026 0607 	bic.w	r6, r6, #7
    f3d0:	4633      	mov	r3, r6
    f3d2:	f8d6 8004 	ldr.w	r8, [r6, #4]
    f3d6:	f853 6b08 	ldr.w	r6, [r3], #8
    f3da:	9305      	str	r3, [sp, #20]
    f3dc:	2300      	movs	r3, #0
    f3de:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
    f3e2:	f04f 0200 	mov.w	r2, #0
    f3e6:	f88d 203b 	strb.w	r2, [sp, #59]	; 0x3b
    f3ea:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
    f3ee:	f000 81dd 	beq.w	f7ac <_vfiprintf_r+0x654>
    f3f2:	ea56 0208 	orrs.w	r2, r6, r8
    f3f6:	f02a 0580 	bic.w	r5, sl, #128	; 0x80
    f3fa:	f040 81d6 	bne.w	f7aa <_vfiprintf_r+0x652>
    f3fe:	f1bb 0f00 	cmp.w	fp, #0
    f402:	f040 84cc 	bne.w	fd9e <_vfiprintf_r+0xc46>
    f406:	2b00      	cmp	r3, #0
    f408:	f040 83c5 	bne.w	fb96 <_vfiprintf_r+0xa3e>
    f40c:	f01a 0301 	ands.w	r3, sl, #1
    f410:	9301      	str	r3, [sp, #4]
    f412:	f000 83ec 	beq.w	fbee <_vfiprintf_r+0xa96>
    f416:	2330      	movs	r3, #48	; 0x30
    f418:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
    f41c:	f88d 30ef 	strb.w	r3, [sp, #239]	; 0xef
    f420:	e79c      	b.n	f35c <_vfiprintf_r+0x204>
    f422:	1be5      	subs	r5, r4, r7
    f424:	d01b      	beq.n	f45e <_vfiprintf_r+0x306>
    f426:	9b11      	ldr	r3, [sp, #68]	; 0x44
    f428:	9a12      	ldr	r2, [sp, #72]	; 0x48
    f42a:	3301      	adds	r3, #1
    f42c:	442a      	add	r2, r5
    f42e:	2b07      	cmp	r3, #7
    f430:	e9c9 7500 	strd	r7, r5, [r9]
    f434:	9212      	str	r2, [sp, #72]	; 0x48
    f436:	9311      	str	r3, [sp, #68]	; 0x44
    f438:	dc05      	bgt.n	f446 <_vfiprintf_r+0x2ee>
    f43a:	f109 0908 	add.w	r9, r9, #8
    f43e:	9b04      	ldr	r3, [sp, #16]
    f440:	442b      	add	r3, r5
    f442:	9304      	str	r3, [sp, #16]
    f444:	e6d1      	b.n	f1ea <_vfiprintf_r+0x92>
    f446:	2a00      	cmp	r2, #0
    f448:	f000 839c 	beq.w	fb84 <_vfiprintf_r+0xa2c>
    f44c:	9902      	ldr	r1, [sp, #8]
    f44e:	9806      	ldr	r0, [sp, #24]
    f450:	aa10      	add	r2, sp, #64	; 0x40
    f452:	f7ff fe3b 	bl	f0cc <__sprint_r.part.0>
    f456:	b940      	cbnz	r0, f46a <_vfiprintf_r+0x312>
    f458:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f45c:	e7ef      	b.n	f43e <_vfiprintf_r+0x2e6>
    f45e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    f460:	2b00      	cmp	r3, #0
    f462:	f040 8515 	bne.w	fe90 <_vfiprintf_r+0xd38>
    f466:	2300      	movs	r3, #0
    f468:	9311      	str	r3, [sp, #68]	; 0x44
    f46a:	9a02      	ldr	r2, [sp, #8]
    f46c:	6e53      	ldr	r3, [r2, #100]	; 0x64
    f46e:	07d9      	lsls	r1, r3, #31
    f470:	f140 80a2 	bpl.w	f5b8 <_vfiprintf_r+0x460>
    f474:	8993      	ldrh	r3, [r2, #12]
    f476:	065b      	lsls	r3, r3, #25
    f478:	f100 8525 	bmi.w	fec6 <_vfiprintf_r+0xd6e>
    f47c:	9804      	ldr	r0, [sp, #16]
    f47e:	b03d      	add	sp, #244	; 0xf4
    f480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f484:	9b02      	ldr	r3, [sp, #8]
    f486:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
    f48a:	058d      	lsls	r5, r1, #22
    f48c:	b28a      	uxth	r2, r1
    f48e:	f53f ae78 	bmi.w	f182 <_vfiprintf_r+0x2a>
    f492:	461d      	mov	r5, r3
    f494:	6d98      	ldr	r0, [r3, #88]	; 0x58
    f496:	f7fc fe45 	bl	c124 <__retarget_lock_acquire_recursive>
    f49a:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
    f49e:	b28a      	uxth	r2, r1
    f4a0:	e66f      	b.n	f182 <_vfiprintf_r+0x2a>
    f4a2:	2b00      	cmp	r3, #0
    f4a4:	d0db      	beq.n	f45e <_vfiprintf_r+0x306>
    f4a6:	f04f 0801 	mov.w	r8, #1
    f4aa:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
    f4ae:	f04f 0300 	mov.w	r3, #0
    f4b2:	ac23      	add	r4, sp, #140	; 0x8c
    f4b4:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f4b8:	f8cd 8004 	str.w	r8, [sp, #4]
    f4bc:	f04f 0b00 	mov.w	fp, #0
    f4c0:	f015 0302 	ands.w	r3, r5, #2
    f4c4:	9307      	str	r3, [sp, #28]
    f4c6:	bf18      	it	ne
    f4c8:	f108 0802 	addne.w	r8, r8, #2
    f4cc:	f015 0384 	ands.w	r3, r5, #132	; 0x84
    f4d0:	9308      	str	r3, [sp, #32]
    f4d2:	d105      	bne.n	f4e0 <_vfiprintf_r+0x388>
    f4d4:	9b03      	ldr	r3, [sp, #12]
    f4d6:	eba3 0608 	sub.w	r6, r3, r8
    f4da:	2e00      	cmp	r6, #0
    f4dc:	f300 828a 	bgt.w	f9f4 <_vfiprintf_r+0x89c>
    f4e0:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    f4e4:	1c48      	adds	r0, r1, #1
    f4e6:	f89d 603b 	ldrb.w	r6, [sp, #59]	; 0x3b
    f4ea:	b176      	cbz	r6, f50a <_vfiprintf_r+0x3b2>
    f4ec:	2101      	movs	r1, #1
    f4ee:	3201      	adds	r2, #1
    f4f0:	f10d 063b 	add.w	r6, sp, #59	; 0x3b
    f4f4:	2807      	cmp	r0, #7
    f4f6:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f4fa:	e9c9 6100 	strd	r6, r1, [r9]
    f4fe:	f300 8258 	bgt.w	f9b2 <_vfiprintf_r+0x85a>
    f502:	4601      	mov	r1, r0
    f504:	f109 0908 	add.w	r9, r9, #8
    f508:	3001      	adds	r0, #1
    f50a:	9b07      	ldr	r3, [sp, #28]
    f50c:	b1d3      	cbz	r3, f544 <_vfiprintf_r+0x3ec>
    f50e:	2302      	movs	r3, #2
    f510:	3202      	adds	r2, #2
    f512:	f8c9 3004 	str.w	r3, [r9, #4]
    f516:	2807      	cmp	r0, #7
    f518:	ab0f      	add	r3, sp, #60	; 0x3c
    f51a:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f51e:	f8c9 3000 	str.w	r3, [r9]
    f522:	f340 8262 	ble.w	f9ea <_vfiprintf_r+0x892>
    f526:	2a00      	cmp	r2, #0
    f528:	f000 8327 	beq.w	fb7a <_vfiprintf_r+0xa22>
    f52c:	9902      	ldr	r1, [sp, #8]
    f52e:	9806      	ldr	r0, [sp, #24]
    f530:	aa10      	add	r2, sp, #64	; 0x40
    f532:	f7ff fdcb 	bl	f0cc <__sprint_r.part.0>
    f536:	2800      	cmp	r0, #0
    f538:	d197      	bne.n	f46a <_vfiprintf_r+0x312>
    f53a:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    f53e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f542:	1c48      	adds	r0, r1, #1
    f544:	9b08      	ldr	r3, [sp, #32]
    f546:	2b80      	cmp	r3, #128	; 0x80
    f548:	f000 8171 	beq.w	f82e <_vfiprintf_r+0x6d6>
    f54c:	9b01      	ldr	r3, [sp, #4]
    f54e:	ebab 0603 	sub.w	r6, fp, r3
    f552:	2e00      	cmp	r6, #0
    f554:	f300 81cf 	bgt.w	f8f6 <_vfiprintf_r+0x79e>
    f558:	9b01      	ldr	r3, [sp, #4]
    f55a:	2807      	cmp	r0, #7
    f55c:	441a      	add	r2, r3
    f55e:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f562:	f8c9 4000 	str.w	r4, [r9]
    f566:	f8c9 3004 	str.w	r3, [r9, #4]
    f56a:	f340 815d 	ble.w	f828 <_vfiprintf_r+0x6d0>
    f56e:	2a00      	cmp	r2, #0
    f570:	f000 8293 	beq.w	fa9a <_vfiprintf_r+0x942>
    f574:	9902      	ldr	r1, [sp, #8]
    f576:	9806      	ldr	r0, [sp, #24]
    f578:	aa10      	add	r2, sp, #64	; 0x40
    f57a:	f7ff fda7 	bl	f0cc <__sprint_r.part.0>
    f57e:	2800      	cmp	r0, #0
    f580:	f47f af73 	bne.w	f46a <_vfiprintf_r+0x312>
    f584:	9a12      	ldr	r2, [sp, #72]	; 0x48
    f586:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f58a:	0768      	lsls	r0, r5, #29
    f58c:	d505      	bpl.n	f59a <_vfiprintf_r+0x442>
    f58e:	9b03      	ldr	r3, [sp, #12]
    f590:	eba3 0408 	sub.w	r4, r3, r8
    f594:	2c00      	cmp	r4, #0
    f596:	f300 828a 	bgt.w	faae <_vfiprintf_r+0x956>
    f59a:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
    f59e:	4541      	cmp	r1, r8
    f5a0:	bfac      	ite	ge
    f5a2:	185b      	addge	r3, r3, r1
    f5a4:	4443      	addlt	r3, r8
    f5a6:	9304      	str	r3, [sp, #16]
    f5a8:	2a00      	cmp	r2, #0
    f5aa:	f040 81f3 	bne.w	f994 <_vfiprintf_r+0x83c>
    f5ae:	2300      	movs	r3, #0
    f5b0:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f5b4:	9311      	str	r3, [sp, #68]	; 0x44
    f5b6:	e608      	b.n	f1ca <_vfiprintf_r+0x72>
    f5b8:	9b02      	ldr	r3, [sp, #8]
    f5ba:	899b      	ldrh	r3, [r3, #12]
    f5bc:	059a      	lsls	r2, r3, #22
    f5be:	f53f af5a 	bmi.w	f476 <_vfiprintf_r+0x31e>
    f5c2:	9c02      	ldr	r4, [sp, #8]
    f5c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    f5c6:	f7fc fdb5 	bl	c134 <__retarget_lock_release_recursive>
    f5ca:	89a3      	ldrh	r3, [r4, #12]
    f5cc:	e753      	b.n	f476 <_vfiprintf_r+0x31e>
    f5ce:	f015 0310 	ands.w	r3, r5, #16
    f5d2:	f040 8318 	bne.w	fc06 <_vfiprintf_r+0xaae>
    f5d6:	f015 0240 	ands.w	r2, r5, #64	; 0x40
    f5da:	f000 8310 	beq.w	fbfe <_vfiprintf_r+0xaa6>
    f5de:	9e05      	ldr	r6, [sp, #20]
    f5e0:	4698      	mov	r8, r3
    f5e2:	f856 3b04 	ldr.w	r3, [r6], #4
    f5e6:	9605      	str	r6, [sp, #20]
    f5e8:	b29e      	uxth	r6, r3
    f5ea:	e6f7      	b.n	f3dc <_vfiprintf_r+0x284>
    f5ec:	f856 3b04 	ldr.w	r3, [r6], #4
    f5f0:	06e8      	lsls	r0, r5, #27
    f5f2:	9605      	str	r6, [sp, #20]
    f5f4:	f100 8310 	bmi.w	fc18 <_vfiprintf_r+0xac0>
    f5f8:	0669      	lsls	r1, r5, #25
    f5fa:	f140 830a 	bpl.w	fc12 <_vfiprintf_r+0xaba>
    f5fe:	f343 38c0 	sbfx	r8, r3, #15, #1
    f602:	b21e      	sxth	r6, r3
    f604:	4643      	mov	r3, r8
    f606:	e68f      	b.n	f328 <_vfiprintf_r+0x1d0>
    f608:	f04f 0300 	mov.w	r3, #0
    f60c:	9e05      	ldr	r6, [sp, #20]
    f60e:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f612:	f856 4b04 	ldr.w	r4, [r6], #4
    f616:	2c00      	cmp	r4, #0
    f618:	f000 83cf 	beq.w	fdba <_vfiprintf_r+0xc62>
    f61c:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
    f620:	f000 8341 	beq.w	fca6 <_vfiprintf_r+0xb4e>
    f624:	465a      	mov	r2, fp
    f626:	2100      	movs	r1, #0
    f628:	4620      	mov	r0, r4
    f62a:	f7fd f841 	bl	c6b0 <memchr>
    f62e:	2800      	cmp	r0, #0
    f630:	f000 8422 	beq.w	fe78 <_vfiprintf_r+0xd20>
    f634:	1b03      	subs	r3, r0, r4
    f636:	f04f 0b00 	mov.w	fp, #0
    f63a:	9605      	str	r6, [sp, #20]
    f63c:	9301      	str	r3, [sp, #4]
    f63e:	e68d      	b.n	f35c <_vfiprintf_r+0x204>
    f640:	f04f 0300 	mov.w	r3, #0
    f644:	f04f 0801 	mov.w	r8, #1
    f648:	9e05      	ldr	r6, [sp, #20]
    f64a:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f64e:	f856 3b04 	ldr.w	r3, [r6], #4
    f652:	ac23      	add	r4, sp, #140	; 0x8c
    f654:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
    f658:	9605      	str	r6, [sp, #20]
    f65a:	f8cd 8004 	str.w	r8, [sp, #4]
    f65e:	e72d      	b.n	f4bc <_vfiprintf_r+0x364>
    f660:	f003 fd22 	bl	130a8 <__sinit>
    f664:	e585      	b.n	f172 <_vfiprintf_r+0x1a>
    f666:	9b03      	ldr	r3, [sp, #12]
    f668:	425b      	negs	r3, r3
    f66a:	9303      	str	r3, [sp, #12]
    f66c:	783b      	ldrb	r3, [r7, #0]
    f66e:	f045 0504 	orr.w	r5, r5, #4
    f672:	e5ca      	b.n	f20a <_vfiprintf_r+0xb2>
    f674:	783b      	ldrb	r3, [r7, #0]
    f676:	2b6c      	cmp	r3, #108	; 0x6c
    f678:	bf03      	ittte	eq
    f67a:	787b      	ldrbeq	r3, [r7, #1]
    f67c:	f045 0520 	orreq.w	r5, r5, #32
    f680:	3701      	addeq	r7, #1
    f682:	f045 0510 	orrne.w	r5, r5, #16
    f686:	e5c0      	b.n	f20a <_vfiprintf_r+0xb2>
    f688:	783b      	ldrb	r3, [r7, #0]
    f68a:	2b68      	cmp	r3, #104	; 0x68
    f68c:	bf03      	ittte	eq
    f68e:	787b      	ldrbeq	r3, [r7, #1]
    f690:	f445 7500 	orreq.w	r5, r5, #512	; 0x200
    f694:	3701      	addeq	r7, #1
    f696:	f045 0540 	orrne.w	r5, r5, #64	; 0x40
    f69a:	e5b6      	b.n	f20a <_vfiprintf_r+0xb2>
    f69c:	f045 0a10 	orr.w	sl, r5, #16
    f6a0:	f01a 0820 	ands.w	r8, sl, #32
    f6a4:	f000 827e 	beq.w	fba4 <_vfiprintf_r+0xa4c>
    f6a8:	9e05      	ldr	r6, [sp, #20]
    f6aa:	2301      	movs	r3, #1
    f6ac:	3607      	adds	r6, #7
    f6ae:	f026 0607 	bic.w	r6, r6, #7
    f6b2:	4632      	mov	r2, r6
    f6b4:	f8d6 8004 	ldr.w	r8, [r6, #4]
    f6b8:	f852 6b08 	ldr.w	r6, [r2], #8
    f6bc:	9205      	str	r2, [sp, #20]
    f6be:	e690      	b.n	f3e2 <_vfiprintf_r+0x28a>
    f6c0:	783b      	ldrb	r3, [r7, #0]
    f6c2:	f88d 803b 	strb.w	r8, [sp, #59]	; 0x3b
    f6c6:	e5a0      	b.n	f20a <_vfiprintf_r+0xb2>
    f6c8:	2230      	movs	r2, #48	; 0x30
    f6ca:	f88d 203c 	strb.w	r2, [sp, #60]	; 0x3c
    f6ce:	2278      	movs	r2, #120	; 0x78
    f6d0:	9b05      	ldr	r3, [sp, #20]
    f6d2:	f88d 203d 	strb.w	r2, [sp, #61]	; 0x3d
    f6d6:	f853 6b04 	ldr.w	r6, [r3], #4
    f6da:	4abe      	ldr	r2, [pc, #760]	; (f9d4 <_vfiprintf_r+0x87c>)
    f6dc:	9305      	str	r3, [sp, #20]
    f6de:	f04f 0800 	mov.w	r8, #0
    f6e2:	2302      	movs	r3, #2
    f6e4:	f045 0a02 	orr.w	sl, r5, #2
    f6e8:	9209      	str	r2, [sp, #36]	; 0x24
    f6ea:	e67a      	b.n	f3e2 <_vfiprintf_r+0x28a>
    f6ec:	06ae      	lsls	r6, r5, #26
    f6ee:	f100 82a4 	bmi.w	fc3a <_vfiprintf_r+0xae2>
    f6f2:	06ec      	lsls	r4, r5, #27
    f6f4:	f100 8359 	bmi.w	fdaa <_vfiprintf_r+0xc52>
    f6f8:	0668      	lsls	r0, r5, #25
    f6fa:	f100 83b0 	bmi.w	fe5e <_vfiprintf_r+0xd06>
    f6fe:	05a9      	lsls	r1, r5, #22
    f700:	f140 8353 	bpl.w	fdaa <_vfiprintf_r+0xc52>
    f704:	9e05      	ldr	r6, [sp, #20]
    f706:	9a04      	ldr	r2, [sp, #16]
    f708:	f856 3b04 	ldr.w	r3, [r6], #4
    f70c:	701a      	strb	r2, [r3, #0]
    f70e:	9605      	str	r6, [sp, #20]
    f710:	e55b      	b.n	f1ca <_vfiprintf_r+0x72>
    f712:	9c06      	ldr	r4, [sp, #24]
    f714:	4620      	mov	r0, r4
    f716:	f004 f89d 	bl	13854 <_localeconv_r>
    f71a:	6843      	ldr	r3, [r0, #4]
    f71c:	4618      	mov	r0, r3
    f71e:	930b      	str	r3, [sp, #44]	; 0x2c
    f720:	f7fd ff08 	bl	d534 <strlen>
    f724:	4603      	mov	r3, r0
    f726:	4620      	mov	r0, r4
    f728:	930c      	str	r3, [sp, #48]	; 0x30
    f72a:	461c      	mov	r4, r3
    f72c:	f004 f892 	bl	13854 <_localeconv_r>
    f730:	6883      	ldr	r3, [r0, #8]
    f732:	930a      	str	r3, [sp, #40]	; 0x28
    f734:	2c00      	cmp	r4, #0
    f736:	f43f ade2 	beq.w	f2fe <_vfiprintf_r+0x1a6>
    f73a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    f73c:	2b00      	cmp	r3, #0
    f73e:	f43f adde 	beq.w	f2fe <_vfiprintf_r+0x1a6>
    f742:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    f744:	781b      	ldrb	r3, [r3, #0]
    f746:	2b00      	cmp	r3, #0
    f748:	f43f add9 	beq.w	f2fe <_vfiprintf_r+0x1a6>
    f74c:	783b      	ldrb	r3, [r7, #0]
    f74e:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
    f752:	e55a      	b.n	f20a <_vfiprintf_r+0xb2>
    f754:	783b      	ldrb	r3, [r7, #0]
    f756:	f045 0501 	orr.w	r5, r5, #1
    f75a:	e556      	b.n	f20a <_vfiprintf_r+0xb2>
    f75c:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
    f760:	2b00      	cmp	r3, #0
    f762:	f47f adcc 	bne.w	f2fe <_vfiprintf_r+0x1a6>
    f766:	2320      	movs	r3, #32
    f768:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    f76c:	783b      	ldrb	r3, [r7, #0]
    f76e:	e54c      	b.n	f20a <_vfiprintf_r+0xb2>
    f770:	783b      	ldrb	r3, [r7, #0]
    f772:	f045 0580 	orr.w	r5, r5, #128	; 0x80
    f776:	e548      	b.n	f20a <_vfiprintf_r+0xb2>
    f778:	4639      	mov	r1, r7
    f77a:	f811 3b01 	ldrb.w	r3, [r1], #1
    f77e:	2b2a      	cmp	r3, #42	; 0x2a
    f780:	f000 83a6 	beq.w	fed0 <_vfiprintf_r+0xd78>
    f784:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    f788:	2a09      	cmp	r2, #9
    f78a:	460f      	mov	r7, r1
    f78c:	f04f 0b00 	mov.w	fp, #0
    f790:	f63f ad3c 	bhi.w	f20c <_vfiprintf_r+0xb4>
    f794:	f817 3b01 	ldrb.w	r3, [r7], #1
    f798:	eb0b 0b8b 	add.w	fp, fp, fp, lsl #2
    f79c:	eb02 0b4b 	add.w	fp, r2, fp, lsl #1
    f7a0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    f7a4:	2a09      	cmp	r2, #9
    f7a6:	d9f5      	bls.n	f794 <_vfiprintf_r+0x63c>
    f7a8:	e530      	b.n	f20c <_vfiprintf_r+0xb4>
    f7aa:	46aa      	mov	sl, r5
    f7ac:	2b01      	cmp	r3, #1
    f7ae:	f43f adc8 	beq.w	f342 <_vfiprintf_r+0x1ea>
    f7b2:	2b02      	cmp	r3, #2
    f7b4:	ac3c      	add	r4, sp, #240	; 0xf0
    f7b6:	d112      	bne.n	f7de <_vfiprintf_r+0x686>
    f7b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
    f7ba:	f006 030f 	and.w	r3, r6, #15
    f7be:	5cd3      	ldrb	r3, [r2, r3]
    f7c0:	0936      	lsrs	r6, r6, #4
    f7c2:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
    f7c6:	ea4f 1818 	mov.w	r8, r8, lsr #4
    f7ca:	f804 3d01 	strb.w	r3, [r4, #-1]!
    f7ce:	ea56 0308 	orrs.w	r3, r6, r8
    f7d2:	d1f2      	bne.n	f7ba <_vfiprintf_r+0x662>
    f7d4:	ab3c      	add	r3, sp, #240	; 0xf0
    f7d6:	1b1b      	subs	r3, r3, r4
    f7d8:	4655      	mov	r5, sl
    f7da:	9301      	str	r3, [sp, #4]
    f7dc:	e5be      	b.n	f35c <_vfiprintf_r+0x204>
    f7de:	f006 0307 	and.w	r3, r6, #7
    f7e2:	08f6      	lsrs	r6, r6, #3
    f7e4:	ea46 7648 	orr.w	r6, r6, r8, lsl #29
    f7e8:	ea4f 08d8 	mov.w	r8, r8, lsr #3
    f7ec:	3330      	adds	r3, #48	; 0x30
    f7ee:	ea56 0108 	orrs.w	r1, r6, r8
    f7f2:	4622      	mov	r2, r4
    f7f4:	f804 3d01 	strb.w	r3, [r4, #-1]!
    f7f8:	d1f1      	bne.n	f7de <_vfiprintf_r+0x686>
    f7fa:	f01a 0f01 	tst.w	sl, #1
    f7fe:	d0e9      	beq.n	f7d4 <_vfiprintf_r+0x67c>
    f800:	2b30      	cmp	r3, #48	; 0x30
    f802:	d0e7      	beq.n	f7d4 <_vfiprintf_r+0x67c>
    f804:	2330      	movs	r3, #48	; 0x30
    f806:	3a02      	subs	r2, #2
    f808:	f804 3c01 	strb.w	r3, [r4, #-1]
    f80c:	ab3c      	add	r3, sp, #240	; 0xf0
    f80e:	1a9b      	subs	r3, r3, r2
    f810:	4655      	mov	r5, sl
    f812:	4614      	mov	r4, r2
    f814:	9301      	str	r3, [sp, #4]
    f816:	e5a1      	b.n	f35c <_vfiprintf_r+0x204>
    f818:	2301      	movs	r3, #1
    f81a:	9a01      	ldr	r2, [sp, #4]
    f81c:	9413      	str	r4, [sp, #76]	; 0x4c
    f81e:	9311      	str	r3, [sp, #68]	; 0x44
    f820:	9214      	str	r2, [sp, #80]	; 0x50
    f822:	9212      	str	r2, [sp, #72]	; 0x48
    f824:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f828:	f109 0908 	add.w	r9, r9, #8
    f82c:	e6ad      	b.n	f58a <_vfiprintf_r+0x432>
    f82e:	9b03      	ldr	r3, [sp, #12]
    f830:	eba3 0608 	sub.w	r6, r3, r8
    f834:	2e00      	cmp	r6, #0
    f836:	f77f ae89 	ble.w	f54c <_vfiprintf_r+0x3f4>
    f83a:	2e10      	cmp	r6, #16
    f83c:	f8df a198 	ldr.w	sl, [pc, #408]	; f9d8 <_vfiprintf_r+0x880>
    f840:	dd38      	ble.n	f8b4 <_vfiprintf_r+0x75c>
    f842:	4653      	mov	r3, sl
    f844:	46cc      	mov	ip, r9
    f846:	46ba      	mov	sl, r7
    f848:	46c1      	mov	r9, r8
    f84a:	9407      	str	r4, [sp, #28]
    f84c:	46a8      	mov	r8, r5
    f84e:	461f      	mov	r7, r3
    f850:	9c06      	ldr	r4, [sp, #24]
    f852:	9d02      	ldr	r5, [sp, #8]
    f854:	e007      	b.n	f866 <_vfiprintf_r+0x70e>
    f856:	f101 0e02 	add.w	lr, r1, #2
    f85a:	4601      	mov	r1, r0
    f85c:	f10c 0c08 	add.w	ip, ip, #8
    f860:	3e10      	subs	r6, #16
    f862:	2e10      	cmp	r6, #16
    f864:	dd1e      	ble.n	f8a4 <_vfiprintf_r+0x74c>
    f866:	2310      	movs	r3, #16
    f868:	1c48      	adds	r0, r1, #1
    f86a:	3210      	adds	r2, #16
    f86c:	2807      	cmp	r0, #7
    f86e:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f872:	f8cc 7000 	str.w	r7, [ip]
    f876:	f8cc 3004 	str.w	r3, [ip, #4]
    f87a:	ddec      	ble.n	f856 <_vfiprintf_r+0x6fe>
    f87c:	2a00      	cmp	r2, #0
    f87e:	f000 8092 	beq.w	f9a6 <_vfiprintf_r+0x84e>
    f882:	4629      	mov	r1, r5
    f884:	4620      	mov	r0, r4
    f886:	aa10      	add	r2, sp, #64	; 0x40
    f888:	f7ff fc20 	bl	f0cc <__sprint_r.part.0>
    f88c:	2800      	cmp	r0, #0
    f88e:	f47f adec 	bne.w	f46a <_vfiprintf_r+0x312>
    f892:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    f896:	3e10      	subs	r6, #16
    f898:	2e10      	cmp	r6, #16
    f89a:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    f89e:	f101 0e01 	add.w	lr, r1, #1
    f8a2:	dce0      	bgt.n	f866 <_vfiprintf_r+0x70e>
    f8a4:	463b      	mov	r3, r7
    f8a6:	4645      	mov	r5, r8
    f8a8:	4657      	mov	r7, sl
    f8aa:	46c8      	mov	r8, r9
    f8ac:	4670      	mov	r0, lr
    f8ae:	46e1      	mov	r9, ip
    f8b0:	469a      	mov	sl, r3
    f8b2:	9c07      	ldr	r4, [sp, #28]
    f8b4:	4432      	add	r2, r6
    f8b6:	2807      	cmp	r0, #7
    f8b8:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f8bc:	f8c9 a000 	str.w	sl, [r9]
    f8c0:	f8c9 6004 	str.w	r6, [r9, #4]
    f8c4:	f340 8196 	ble.w	fbf4 <_vfiprintf_r+0xa9c>
    f8c8:	2a00      	cmp	r2, #0
    f8ca:	f000 829a 	beq.w	fe02 <_vfiprintf_r+0xcaa>
    f8ce:	9902      	ldr	r1, [sp, #8]
    f8d0:	9806      	ldr	r0, [sp, #24]
    f8d2:	aa10      	add	r2, sp, #64	; 0x40
    f8d4:	f7ff fbfa 	bl	f0cc <__sprint_r.part.0>
    f8d8:	2800      	cmp	r0, #0
    f8da:	f47f adc6 	bne.w	f46a <_vfiprintf_r+0x312>
    f8de:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    f8e2:	9b01      	ldr	r3, [sp, #4]
    f8e4:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f8e8:	ebab 0603 	sub.w	r6, fp, r3
    f8ec:	2e00      	cmp	r6, #0
    f8ee:	f101 0001 	add.w	r0, r1, #1
    f8f2:	f77f ae31 	ble.w	f558 <_vfiprintf_r+0x400>
    f8f6:	2e10      	cmp	r6, #16
    f8f8:	f340 826b 	ble.w	fdd2 <_vfiprintf_r+0xc7a>
    f8fc:	f8df a0d8 	ldr.w	sl, [pc, #216]	; f9d8 <_vfiprintf_r+0x880>
    f900:	46cc      	mov	ip, r9
    f902:	4653      	mov	r3, sl
    f904:	46c1      	mov	r9, r8
    f906:	46ba      	mov	sl, r7
    f908:	46a8      	mov	r8, r5
    f90a:	9407      	str	r4, [sp, #28]
    f90c:	f04f 0b10 	mov.w	fp, #16
    f910:	461f      	mov	r7, r3
    f912:	9c06      	ldr	r4, [sp, #24]
    f914:	9d02      	ldr	r5, [sp, #8]
    f916:	e007      	b.n	f928 <_vfiprintf_r+0x7d0>
    f918:	f101 0e02 	add.w	lr, r1, #2
    f91c:	4601      	mov	r1, r0
    f91e:	f10c 0c08 	add.w	ip, ip, #8
    f922:	3e10      	subs	r6, #16
    f924:	2e10      	cmp	r6, #16
    f926:	dd19      	ble.n	f95c <_vfiprintf_r+0x804>
    f928:	1c48      	adds	r0, r1, #1
    f92a:	3210      	adds	r2, #16
    f92c:	2807      	cmp	r0, #7
    f92e:	e9cc 7b00 	strd	r7, fp, [ip]
    f932:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f936:	ddef      	ble.n	f918 <_vfiprintf_r+0x7c0>
    f938:	b332      	cbz	r2, f988 <_vfiprintf_r+0x830>
    f93a:	4629      	mov	r1, r5
    f93c:	4620      	mov	r0, r4
    f93e:	aa10      	add	r2, sp, #64	; 0x40
    f940:	f7ff fbc4 	bl	f0cc <__sprint_r.part.0>
    f944:	2800      	cmp	r0, #0
    f946:	f47f ad90 	bne.w	f46a <_vfiprintf_r+0x312>
    f94a:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    f94e:	3e10      	subs	r6, #16
    f950:	2e10      	cmp	r6, #16
    f952:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    f956:	f101 0e01 	add.w	lr, r1, #1
    f95a:	dce5      	bgt.n	f928 <_vfiprintf_r+0x7d0>
    f95c:	463b      	mov	r3, r7
    f95e:	4645      	mov	r5, r8
    f960:	4657      	mov	r7, sl
    f962:	46c8      	mov	r8, r9
    f964:	4670      	mov	r0, lr
    f966:	46e1      	mov	r9, ip
    f968:	469a      	mov	sl, r3
    f96a:	9c07      	ldr	r4, [sp, #28]
    f96c:	4432      	add	r2, r6
    f96e:	2807      	cmp	r0, #7
    f970:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    f974:	f8c9 a000 	str.w	sl, [r9]
    f978:	f8c9 6004 	str.w	r6, [r9, #4]
    f97c:	f300 80e9 	bgt.w	fb52 <_vfiprintf_r+0x9fa>
    f980:	f109 0908 	add.w	r9, r9, #8
    f984:	3001      	adds	r0, #1
    f986:	e5e7      	b.n	f558 <_vfiprintf_r+0x400>
    f988:	f04f 0e01 	mov.w	lr, #1
    f98c:	4611      	mov	r1, r2
    f98e:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    f992:	e7c6      	b.n	f922 <_vfiprintf_r+0x7ca>
    f994:	9902      	ldr	r1, [sp, #8]
    f996:	9806      	ldr	r0, [sp, #24]
    f998:	aa10      	add	r2, sp, #64	; 0x40
    f99a:	f7ff fb97 	bl	f0cc <__sprint_r.part.0>
    f99e:	2800      	cmp	r0, #0
    f9a0:	f43f ae05 	beq.w	f5ae <_vfiprintf_r+0x456>
    f9a4:	e561      	b.n	f46a <_vfiprintf_r+0x312>
    f9a6:	f04f 0e01 	mov.w	lr, #1
    f9aa:	4611      	mov	r1, r2
    f9ac:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    f9b0:	e756      	b.n	f860 <_vfiprintf_r+0x708>
    f9b2:	2a00      	cmp	r2, #0
    f9b4:	f000 80de 	beq.w	fb74 <_vfiprintf_r+0xa1c>
    f9b8:	9902      	ldr	r1, [sp, #8]
    f9ba:	9806      	ldr	r0, [sp, #24]
    f9bc:	aa10      	add	r2, sp, #64	; 0x40
    f9be:	f7ff fb85 	bl	f0cc <__sprint_r.part.0>
    f9c2:	2800      	cmp	r0, #0
    f9c4:	f47f ad51 	bne.w	f46a <_vfiprintf_r+0x312>
    f9c8:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    f9cc:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f9d0:	1c48      	adds	r0, r1, #1
    f9d2:	e59a      	b.n	f50a <_vfiprintf_r+0x3b2>
    f9d4:	00019fc8 	.word	0x00019fc8
    f9d8:	0001a02c 	.word	0x0001a02c
    f9dc:	2202      	movs	r2, #2
    f9de:	2001      	movs	r0, #1
    f9e0:	ab0f      	add	r3, sp, #60	; 0x3c
    f9e2:	9313      	str	r3, [sp, #76]	; 0x4c
    f9e4:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    f9e8:	9214      	str	r2, [sp, #80]	; 0x50
    f9ea:	4601      	mov	r1, r0
    f9ec:	f109 0908 	add.w	r9, r9, #8
    f9f0:	1c48      	adds	r0, r1, #1
    f9f2:	e5a7      	b.n	f544 <_vfiprintf_r+0x3ec>
    f9f4:	2e10      	cmp	r6, #16
    f9f6:	f340 8245 	ble.w	fe84 <_vfiprintf_r+0xd2c>
    f9fa:	e9dd 3211 	ldrd	r3, r2, [sp, #68]	; 0x44
    f9fe:	f8df a2f0 	ldr.w	sl, [pc, #752]	; fcf0 <_vfiprintf_r+0xb98>
    fa02:	4619      	mov	r1, r3
    fa04:	4653      	mov	r3, sl
    fa06:	46cc      	mov	ip, r9
    fa08:	46ba      	mov	sl, r7
    fa0a:	46c1      	mov	r9, r8
    fa0c:	940d      	str	r4, [sp, #52]	; 0x34
    fa0e:	46a8      	mov	r8, r5
    fa10:	461f      	mov	r7, r3
    fa12:	9c06      	ldr	r4, [sp, #24]
    fa14:	9d02      	ldr	r5, [sp, #8]
    fa16:	e007      	b.n	fa28 <_vfiprintf_r+0x8d0>
    fa18:	f101 0e02 	add.w	lr, r1, #2
    fa1c:	4601      	mov	r1, r0
    fa1e:	f10c 0c08 	add.w	ip, ip, #8
    fa22:	3e10      	subs	r6, #16
    fa24:	2e10      	cmp	r6, #16
    fa26:	dd1c      	ble.n	fa62 <_vfiprintf_r+0x90a>
    fa28:	2310      	movs	r3, #16
    fa2a:	1c48      	adds	r0, r1, #1
    fa2c:	3210      	adds	r2, #16
    fa2e:	2807      	cmp	r0, #7
    fa30:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    fa34:	f8cc 7000 	str.w	r7, [ip]
    fa38:	f8cc 3004 	str.w	r3, [ip, #4]
    fa3c:	ddec      	ble.n	fa18 <_vfiprintf_r+0x8c0>
    fa3e:	b332      	cbz	r2, fa8e <_vfiprintf_r+0x936>
    fa40:	4629      	mov	r1, r5
    fa42:	4620      	mov	r0, r4
    fa44:	aa10      	add	r2, sp, #64	; 0x40
    fa46:	f7ff fb41 	bl	f0cc <__sprint_r.part.0>
    fa4a:	2800      	cmp	r0, #0
    fa4c:	f47f ad0d 	bne.w	f46a <_vfiprintf_r+0x312>
    fa50:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    fa54:	3e10      	subs	r6, #16
    fa56:	2e10      	cmp	r6, #16
    fa58:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    fa5c:	f101 0e01 	add.w	lr, r1, #1
    fa60:	dce2      	bgt.n	fa28 <_vfiprintf_r+0x8d0>
    fa62:	463b      	mov	r3, r7
    fa64:	4645      	mov	r5, r8
    fa66:	4657      	mov	r7, sl
    fa68:	46c8      	mov	r8, r9
    fa6a:	4671      	mov	r1, lr
    fa6c:	46e1      	mov	r9, ip
    fa6e:	469a      	mov	sl, r3
    fa70:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    fa72:	4432      	add	r2, r6
    fa74:	2907      	cmp	r1, #7
    fa76:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
    fa7a:	f8c9 a000 	str.w	sl, [r9]
    fa7e:	f8c9 6004 	str.w	r6, [r9, #4]
    fa82:	f300 80a7 	bgt.w	fbd4 <_vfiprintf_r+0xa7c>
    fa86:	f109 0908 	add.w	r9, r9, #8
    fa8a:	1c48      	adds	r0, r1, #1
    fa8c:	e52b      	b.n	f4e6 <_vfiprintf_r+0x38e>
    fa8e:	4611      	mov	r1, r2
    fa90:	f04f 0e01 	mov.w	lr, #1
    fa94:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
    fa98:	e7c3      	b.n	fa22 <_vfiprintf_r+0x8ca>
    fa9a:	076c      	lsls	r4, r5, #29
    fa9c:	9211      	str	r2, [sp, #68]	; 0x44
    fa9e:	d550      	bpl.n	fb42 <_vfiprintf_r+0x9ea>
    faa0:	9b03      	ldr	r3, [sp, #12]
    faa2:	eba3 0408 	sub.w	r4, r3, r8
    faa6:	2c00      	cmp	r4, #0
    faa8:	dd4b      	ble.n	fb42 <_vfiprintf_r+0x9ea>
    faaa:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    faae:	2c10      	cmp	r4, #16
    fab0:	f340 81f8 	ble.w	fea4 <_vfiprintf_r+0xd4c>
    fab4:	f8df a238 	ldr.w	sl, [pc, #568]	; fcf0 <_vfiprintf_r+0xb98>
    fab8:	2510      	movs	r5, #16
    faba:	4653      	mov	r3, sl
    fabc:	9911      	ldr	r1, [sp, #68]	; 0x44
    fabe:	46ba      	mov	sl, r7
    fac0:	9e06      	ldr	r6, [sp, #24]
    fac2:	461f      	mov	r7, r3
    fac4:	f8dd b008 	ldr.w	fp, [sp, #8]
    fac8:	e006      	b.n	fad8 <_vfiprintf_r+0x980>
    faca:	1c88      	adds	r0, r1, #2
    facc:	4619      	mov	r1, r3
    face:	f109 0908 	add.w	r9, r9, #8
    fad2:	3c10      	subs	r4, #16
    fad4:	2c10      	cmp	r4, #16
    fad6:	dd19      	ble.n	fb0c <_vfiprintf_r+0x9b4>
    fad8:	1c4b      	adds	r3, r1, #1
    fada:	3210      	adds	r2, #16
    fadc:	2b07      	cmp	r3, #7
    fade:	e9c9 7500 	strd	r7, r5, [r9]
    fae2:	e9cd 3211 	strd	r3, r2, [sp, #68]	; 0x44
    fae6:	ddf0      	ble.n	faca <_vfiprintf_r+0x972>
    fae8:	b332      	cbz	r2, fb38 <_vfiprintf_r+0x9e0>
    faea:	4659      	mov	r1, fp
    faec:	4630      	mov	r0, r6
    faee:	aa10      	add	r2, sp, #64	; 0x40
    faf0:	f7ff faec 	bl	f0cc <__sprint_r.part.0>
    faf4:	2800      	cmp	r0, #0
    faf6:	f47f acb8 	bne.w	f46a <_vfiprintf_r+0x312>
    fafa:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
    fafe:	3c10      	subs	r4, #16
    fb00:	2c10      	cmp	r4, #16
    fb02:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fb06:	f101 0001 	add.w	r0, r1, #1
    fb0a:	dce5      	bgt.n	fad8 <_vfiprintf_r+0x980>
    fb0c:	463b      	mov	r3, r7
    fb0e:	4657      	mov	r7, sl
    fb10:	469a      	mov	sl, r3
    fb12:	4422      	add	r2, r4
    fb14:	2807      	cmp	r0, #7
    fb16:	e9c9 a400 	strd	sl, r4, [r9]
    fb1a:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
    fb1e:	f77f ad3c 	ble.w	f59a <_vfiprintf_r+0x442>
    fb22:	b172      	cbz	r2, fb42 <_vfiprintf_r+0x9ea>
    fb24:	9902      	ldr	r1, [sp, #8]
    fb26:	9806      	ldr	r0, [sp, #24]
    fb28:	aa10      	add	r2, sp, #64	; 0x40
    fb2a:	f7ff facf 	bl	f0cc <__sprint_r.part.0>
    fb2e:	2800      	cmp	r0, #0
    fb30:	f47f ac9b 	bne.w	f46a <_vfiprintf_r+0x312>
    fb34:	9a12      	ldr	r2, [sp, #72]	; 0x48
    fb36:	e530      	b.n	f59a <_vfiprintf_r+0x442>
    fb38:	2001      	movs	r0, #1
    fb3a:	4611      	mov	r1, r2
    fb3c:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fb40:	e7c7      	b.n	fad2 <_vfiprintf_r+0x97a>
    fb42:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
    fb46:	4542      	cmp	r2, r8
    fb48:	bfac      	ite	ge
    fb4a:	189b      	addge	r3, r3, r2
    fb4c:	4443      	addlt	r3, r8
    fb4e:	9304      	str	r3, [sp, #16]
    fb50:	e52d      	b.n	f5ae <_vfiprintf_r+0x456>
    fb52:	2a00      	cmp	r2, #0
    fb54:	f43f ae60 	beq.w	f818 <_vfiprintf_r+0x6c0>
    fb58:	9902      	ldr	r1, [sp, #8]
    fb5a:	9806      	ldr	r0, [sp, #24]
    fb5c:	aa10      	add	r2, sp, #64	; 0x40
    fb5e:	f7ff fab5 	bl	f0cc <__sprint_r.part.0>
    fb62:	2800      	cmp	r0, #0
    fb64:	f47f ac81 	bne.w	f46a <_vfiprintf_r+0x312>
    fb68:	9811      	ldr	r0, [sp, #68]	; 0x44
    fb6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    fb6c:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fb70:	3001      	adds	r0, #1
    fb72:	e4f1      	b.n	f558 <_vfiprintf_r+0x400>
    fb74:	9b07      	ldr	r3, [sp, #28]
    fb76:	2b00      	cmp	r3, #0
    fb78:	d169      	bne.n	fc4e <_vfiprintf_r+0xaf6>
    fb7a:	2001      	movs	r0, #1
    fb7c:	4611      	mov	r1, r2
    fb7e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fb82:	e4df      	b.n	f544 <_vfiprintf_r+0x3ec>
    fb84:	9211      	str	r2, [sp, #68]	; 0x44
    fb86:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fb8a:	e458      	b.n	f43e <_vfiprintf_r+0x2e6>
    fb8c:	f1bb 0f00 	cmp.w	fp, #0
    fb90:	f47f abdc 	bne.w	f34c <_vfiprintf_r+0x1f4>
    fb94:	4655      	mov	r5, sl
    fb96:	f04f 0b00 	mov.w	fp, #0
    fb9a:	ac3c      	add	r4, sp, #240	; 0xf0
    fb9c:	f8cd b004 	str.w	fp, [sp, #4]
    fba0:	f7ff bbdc 	b.w	f35c <_vfiprintf_r+0x204>
    fba4:	f01a 0310 	ands.w	r3, sl, #16
    fba8:	d140      	bne.n	fc2c <_vfiprintf_r+0xad4>
    fbaa:	f01a 0240 	ands.w	r2, sl, #64	; 0x40
    fbae:	d039      	beq.n	fc24 <_vfiprintf_r+0xacc>
    fbb0:	9e05      	ldr	r6, [sp, #20]
    fbb2:	4698      	mov	r8, r3
    fbb4:	f856 2b04 	ldr.w	r2, [r6], #4
    fbb8:	2301      	movs	r3, #1
    fbba:	9605      	str	r6, [sp, #20]
    fbbc:	b296      	uxth	r6, r2
    fbbe:	e410      	b.n	f3e2 <_vfiprintf_r+0x28a>
    fbc0:	232d      	movs	r3, #45	; 0x2d
    fbc2:	4276      	negs	r6, r6
    fbc4:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
    fbc8:	46aa      	mov	sl, r5
    fbca:	f04f 0301 	mov.w	r3, #1
    fbce:	eb68 0848 	sbc.w	r8, r8, r8, lsl #1
    fbd2:	e40a      	b.n	f3ea <_vfiprintf_r+0x292>
    fbd4:	2a00      	cmp	r2, #0
    fbd6:	d06f      	beq.n	fcb8 <_vfiprintf_r+0xb60>
    fbd8:	9902      	ldr	r1, [sp, #8]
    fbda:	9806      	ldr	r0, [sp, #24]
    fbdc:	aa10      	add	r2, sp, #64	; 0x40
    fbde:	f7ff fa75 	bl	f0cc <__sprint_r.part.0>
    fbe2:	2800      	cmp	r0, #0
    fbe4:	f47f ac41 	bne.w	f46a <_vfiprintf_r+0x312>
    fbe8:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fbec:	e478      	b.n	f4e0 <_vfiprintf_r+0x388>
    fbee:	ac3c      	add	r4, sp, #240	; 0xf0
    fbf0:	f7ff bbb4 	b.w	f35c <_vfiprintf_r+0x204>
    fbf4:	4601      	mov	r1, r0
    fbf6:	f109 0908 	add.w	r9, r9, #8
    fbfa:	3001      	adds	r0, #1
    fbfc:	e4a6      	b.n	f54c <_vfiprintf_r+0x3f4>
    fbfe:	f415 7800 	ands.w	r8, r5, #512	; 0x200
    fc02:	f040 811d 	bne.w	fe40 <_vfiprintf_r+0xce8>
    fc06:	9b05      	ldr	r3, [sp, #20]
    fc08:	f853 6b04 	ldr.w	r6, [r3], #4
    fc0c:	9305      	str	r3, [sp, #20]
    fc0e:	f7ff bbe5 	b.w	f3dc <_vfiprintf_r+0x284>
    fc12:	05aa      	lsls	r2, r5, #22
    fc14:	f100 810e 	bmi.w	fe34 <_vfiprintf_r+0xcdc>
    fc18:	ea4f 78e3 	mov.w	r8, r3, asr #31
    fc1c:	461e      	mov	r6, r3
    fc1e:	4643      	mov	r3, r8
    fc20:	f7ff bb82 	b.w	f328 <_vfiprintf_r+0x1d0>
    fc24:	f41a 7800 	ands.w	r8, sl, #512	; 0x200
    fc28:	f040 80fb 	bne.w	fe22 <_vfiprintf_r+0xcca>
    fc2c:	9a05      	ldr	r2, [sp, #20]
    fc2e:	2301      	movs	r3, #1
    fc30:	f852 6b04 	ldr.w	r6, [r2], #4
    fc34:	9205      	str	r2, [sp, #20]
    fc36:	f7ff bbd4 	b.w	f3e2 <_vfiprintf_r+0x28a>
    fc3a:	e9dd 1604 	ldrd	r1, r6, [sp, #16]
    fc3e:	f856 2b04 	ldr.w	r2, [r6], #4
    fc42:	17cb      	asrs	r3, r1, #31
    fc44:	e9c2 1300 	strd	r1, r3, [r2]
    fc48:	9605      	str	r6, [sp, #20]
    fc4a:	f7ff babe 	b.w	f1ca <_vfiprintf_r+0x72>
    fc4e:	2202      	movs	r2, #2
    fc50:	ab0f      	add	r3, sp, #60	; 0x3c
    fc52:	9313      	str	r3, [sp, #76]	; 0x4c
    fc54:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fc58:	9214      	str	r2, [sp, #80]	; 0x50
    fc5a:	e6c7      	b.n	f9ec <_vfiprintf_r+0x894>
    fc5c:	4a25      	ldr	r2, [pc, #148]	; (fcf4 <_vfiprintf_r+0xb9c>)
    fc5e:	9209      	str	r2, [sp, #36]	; 0x24
    fc60:	f015 0820 	ands.w	r8, r5, #32
    fc64:	d036      	beq.n	fcd4 <_vfiprintf_r+0xb7c>
    fc66:	9e05      	ldr	r6, [sp, #20]
    fc68:	3607      	adds	r6, #7
    fc6a:	f026 0607 	bic.w	r6, r6, #7
    fc6e:	4632      	mov	r2, r6
    fc70:	f8d6 8004 	ldr.w	r8, [r6, #4]
    fc74:	f852 6b08 	ldr.w	r6, [r2], #8
    fc78:	9205      	str	r2, [sp, #20]
    fc7a:	07ea      	lsls	r2, r5, #31
    fc7c:	d509      	bpl.n	fc92 <_vfiprintf_r+0xb3a>
    fc7e:	ea56 0208 	orrs.w	r2, r6, r8
    fc82:	d006      	beq.n	fc92 <_vfiprintf_r+0xb3a>
    fc84:	f88d 303d 	strb.w	r3, [sp, #61]	; 0x3d
    fc88:	2330      	movs	r3, #48	; 0x30
    fc8a:	f045 0502 	orr.w	r5, r5, #2
    fc8e:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
    fc92:	2302      	movs	r3, #2
    fc94:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
    fc98:	f7ff bba3 	b.w	f3e2 <_vfiprintf_r+0x28a>
    fc9c:	46aa      	mov	sl, r5
    fc9e:	e4ff      	b.n	f6a0 <_vfiprintf_r+0x548>
    fca0:	4a15      	ldr	r2, [pc, #84]	; (fcf8 <_vfiprintf_r+0xba0>)
    fca2:	9209      	str	r2, [sp, #36]	; 0x24
    fca4:	e7dc      	b.n	fc60 <_vfiprintf_r+0xb08>
    fca6:	4620      	mov	r0, r4
    fca8:	9605      	str	r6, [sp, #20]
    fcaa:	f7fd fc43 	bl	d534 <strlen>
    fcae:	f04f 0b00 	mov.w	fp, #0
    fcb2:	9001      	str	r0, [sp, #4]
    fcb4:	f7ff bb52 	b.w	f35c <_vfiprintf_r+0x204>
    fcb8:	f89d 103b 	ldrb.w	r1, [sp, #59]	; 0x3b
    fcbc:	2900      	cmp	r1, #0
    fcbe:	f000 80a6 	beq.w	fe0e <_vfiprintf_r+0xcb6>
    fcc2:	2001      	movs	r0, #1
    fcc4:	f10d 023b 	add.w	r2, sp, #59	; 0x3b
    fcc8:	9213      	str	r2, [sp, #76]	; 0x4c
    fcca:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fcce:	4602      	mov	r2, r0
    fcd0:	9014      	str	r0, [sp, #80]	; 0x50
    fcd2:	e416      	b.n	f502 <_vfiprintf_r+0x3aa>
    fcd4:	f015 0210 	ands.w	r2, r5, #16
    fcd8:	d114      	bne.n	fd04 <_vfiprintf_r+0xbac>
    fcda:	f015 0140 	ands.w	r1, r5, #64	; 0x40
    fcde:	d00d      	beq.n	fcfc <_vfiprintf_r+0xba4>
    fce0:	9e05      	ldr	r6, [sp, #20]
    fce2:	4690      	mov	r8, r2
    fce4:	f856 2b04 	ldr.w	r2, [r6], #4
    fce8:	9605      	str	r6, [sp, #20]
    fcea:	b296      	uxth	r6, r2
    fcec:	e7c5      	b.n	fc7a <_vfiprintf_r+0xb22>
    fcee:	bf00      	nop
    fcf0:	0001a01c 	.word	0x0001a01c
    fcf4:	00019fdc 	.word	0x00019fdc
    fcf8:	00019fc8 	.word	0x00019fc8
    fcfc:	f415 7800 	ands.w	r8, r5, #512	; 0x200
    fd00:	f040 80a6 	bne.w	fe50 <_vfiprintf_r+0xcf8>
    fd04:	9a05      	ldr	r2, [sp, #20]
    fd06:	f852 6b04 	ldr.w	r6, [r2], #4
    fd0a:	9205      	str	r2, [sp, #20]
    fd0c:	e7b5      	b.n	fc7a <_vfiprintf_r+0xb22>
    fd0e:	2300      	movs	r3, #0
    fd10:	f40a 6280 	and.w	r2, sl, #1024	; 0x400
    fd14:	f8cd b004 	str.w	fp, [sp, #4]
    fd18:	f8cd a01c 	str.w	sl, [sp, #28]
    fd1c:	46bb      	mov	fp, r7
    fd1e:	f8cd 9020 	str.w	r9, [sp, #32]
    fd22:	469a      	mov	sl, r3
    fd24:	4617      	mov	r7, r2
    fd26:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    fd2a:	ad3c      	add	r5, sp, #240	; 0xf0
    fd2c:	e00c      	b.n	fd48 <_vfiprintf_r+0xbf0>
    fd2e:	2300      	movs	r3, #0
    fd30:	4630      	mov	r0, r6
    fd32:	4641      	mov	r1, r8
    fd34:	220a      	movs	r2, #10
    fd36:	f006 fa2b 	bl	16190 <__aeabi_uldivmod>
    fd3a:	2e0a      	cmp	r6, #10
    fd3c:	f178 0300 	sbcs.w	r3, r8, #0
    fd40:	d31b      	bcc.n	fd7a <_vfiprintf_r+0xc22>
    fd42:	4606      	mov	r6, r0
    fd44:	4688      	mov	r8, r1
    fd46:	4625      	mov	r5, r4
    fd48:	4630      	mov	r0, r6
    fd4a:	4641      	mov	r1, r8
    fd4c:	220a      	movs	r2, #10
    fd4e:	2300      	movs	r3, #0
    fd50:	f006 fa1e 	bl	16190 <__aeabi_uldivmod>
    fd54:	3230      	adds	r2, #48	; 0x30
    fd56:	1e6c      	subs	r4, r5, #1
    fd58:	f10a 0a01 	add.w	sl, sl, #1
    fd5c:	f805 2c01 	strb.w	r2, [r5, #-1]
    fd60:	2f00      	cmp	r7, #0
    fd62:	d0e4      	beq.n	fd2e <_vfiprintf_r+0xbd6>
    fd64:	f899 3000 	ldrb.w	r3, [r9]
    fd68:	4553      	cmp	r3, sl
    fd6a:	d1e0      	bne.n	fd2e <_vfiprintf_r+0xbd6>
    fd6c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
    fd70:	d0dd      	beq.n	fd2e <_vfiprintf_r+0xbd6>
    fd72:	2e0a      	cmp	r6, #10
    fd74:	f178 0300 	sbcs.w	r3, r8, #0
    fd78:	d22e      	bcs.n	fdd8 <_vfiprintf_r+0xc80>
    fd7a:	f8dd a01c 	ldr.w	sl, [sp, #28]
    fd7e:	ab3c      	add	r3, sp, #240	; 0xf0
    fd80:	1b1b      	subs	r3, r3, r4
    fd82:	465f      	mov	r7, fp
    fd84:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    fd88:	f8dd b004 	ldr.w	fp, [sp, #4]
    fd8c:	4655      	mov	r5, sl
    fd8e:	f8dd 9020 	ldr.w	r9, [sp, #32]
    fd92:	9301      	str	r3, [sp, #4]
    fd94:	f7ff bae2 	b.w	f35c <_vfiprintf_r+0x204>
    fd98:	46aa      	mov	sl, r5
    fd9a:	f7ff bad2 	b.w	f342 <_vfiprintf_r+0x1ea>
    fd9e:	2b01      	cmp	r3, #1
    fda0:	46aa      	mov	sl, r5
    fda2:	f47f ad06 	bne.w	f7b2 <_vfiprintf_r+0x65a>
    fda6:	f7ff bad1 	b.w	f34c <_vfiprintf_r+0x1f4>
    fdaa:	9e05      	ldr	r6, [sp, #20]
    fdac:	9a04      	ldr	r2, [sp, #16]
    fdae:	f856 3b04 	ldr.w	r3, [r6], #4
    fdb2:	601a      	str	r2, [r3, #0]
    fdb4:	9605      	str	r6, [sp, #20]
    fdb6:	f7ff ba08 	b.w	f1ca <_vfiprintf_r+0x72>
    fdba:	f1bb 0f06 	cmp.w	fp, #6
    fdbe:	46d8      	mov	r8, fp
    fdc0:	bf28      	it	cs
    fdc2:	f04f 0806 	movcs.w	r8, #6
    fdc6:	4c47      	ldr	r4, [pc, #284]	; (fee4 <_vfiprintf_r+0xd8c>)
    fdc8:	f8cd 8004 	str.w	r8, [sp, #4]
    fdcc:	9605      	str	r6, [sp, #20]
    fdce:	f7ff bb75 	b.w	f4bc <_vfiprintf_r+0x364>
    fdd2:	f8df a114 	ldr.w	sl, [pc, #276]	; fee8 <_vfiprintf_r+0xd90>
    fdd6:	e5c9      	b.n	f96c <_vfiprintf_r+0x814>
    fdd8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    fdda:	990b      	ldr	r1, [sp, #44]	; 0x2c
    fddc:	1ae4      	subs	r4, r4, r3
    fdde:	461a      	mov	r2, r3
    fde0:	4620      	mov	r0, r4
    fde2:	f004 fc1f 	bl	14624 <strncpy>
    fde6:	f899 3001 	ldrb.w	r3, [r9, #1]
    fdea:	b10b      	cbz	r3, fdf0 <_vfiprintf_r+0xc98>
    fdec:	f109 0901 	add.w	r9, r9, #1
    fdf0:	4630      	mov	r0, r6
    fdf2:	4641      	mov	r1, r8
    fdf4:	220a      	movs	r2, #10
    fdf6:	2300      	movs	r3, #0
    fdf8:	f04f 0a00 	mov.w	sl, #0
    fdfc:	f006 f9c8 	bl	16190 <__aeabi_uldivmod>
    fe00:	e79f      	b.n	fd42 <_vfiprintf_r+0xbea>
    fe02:	2001      	movs	r0, #1
    fe04:	4611      	mov	r1, r2
    fe06:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fe0a:	f7ff bb9f 	b.w	f54c <_vfiprintf_r+0x3f4>
    fe0e:	9b07      	ldr	r3, [sp, #28]
    fe10:	2b00      	cmp	r3, #0
    fe12:	f47f ade3 	bne.w	f9dc <_vfiprintf_r+0x884>
    fe16:	4611      	mov	r1, r2
    fe18:	2001      	movs	r0, #1
    fe1a:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
    fe1e:	f7ff bb95 	b.w	f54c <_vfiprintf_r+0x3f4>
    fe22:	9e05      	ldr	r6, [sp, #20]
    fe24:	4690      	mov	r8, r2
    fe26:	f856 2b04 	ldr.w	r2, [r6], #4
    fe2a:	2301      	movs	r3, #1
    fe2c:	9605      	str	r6, [sp, #20]
    fe2e:	b2d6      	uxtb	r6, r2
    fe30:	f7ff bad7 	b.w	f3e2 <_vfiprintf_r+0x28a>
    fe34:	f343 18c0 	sbfx	r8, r3, #7, #1
    fe38:	b25e      	sxtb	r6, r3
    fe3a:	4643      	mov	r3, r8
    fe3c:	f7ff ba74 	b.w	f328 <_vfiprintf_r+0x1d0>
    fe40:	9e05      	ldr	r6, [sp, #20]
    fe42:	4690      	mov	r8, r2
    fe44:	f856 3b04 	ldr.w	r3, [r6], #4
    fe48:	9605      	str	r6, [sp, #20]
    fe4a:	b2de      	uxtb	r6, r3
    fe4c:	f7ff bac6 	b.w	f3dc <_vfiprintf_r+0x284>
    fe50:	9e05      	ldr	r6, [sp, #20]
    fe52:	4688      	mov	r8, r1
    fe54:	f856 2b04 	ldr.w	r2, [r6], #4
    fe58:	9605      	str	r6, [sp, #20]
    fe5a:	b2d6      	uxtb	r6, r2
    fe5c:	e70d      	b.n	fc7a <_vfiprintf_r+0xb22>
    fe5e:	9e05      	ldr	r6, [sp, #20]
    fe60:	9a04      	ldr	r2, [sp, #16]
    fe62:	f856 3b04 	ldr.w	r3, [r6], #4
    fe66:	801a      	strh	r2, [r3, #0]
    fe68:	9605      	str	r6, [sp, #20]
    fe6a:	f7ff b9ae 	b.w	f1ca <_vfiprintf_r+0x72>
    fe6e:	6d88      	ldr	r0, [r1, #88]	; 0x58
    fe70:	f7fc f960 	bl	c134 <__retarget_lock_release_recursive>
    fe74:	f7ff ba99 	b.w	f3aa <_vfiprintf_r+0x252>
    fe78:	f8cd b004 	str.w	fp, [sp, #4]
    fe7c:	9605      	str	r6, [sp, #20]
    fe7e:	4683      	mov	fp, r0
    fe80:	f7ff ba6c 	b.w	f35c <_vfiprintf_r+0x204>
    fe84:	9911      	ldr	r1, [sp, #68]	; 0x44
    fe86:	9a12      	ldr	r2, [sp, #72]	; 0x48
    fe88:	f8df a060 	ldr.w	sl, [pc, #96]	; feec <_vfiprintf_r+0xd94>
    fe8c:	3101      	adds	r1, #1
    fe8e:	e5f0      	b.n	fa72 <_vfiprintf_r+0x91a>
    fe90:	9902      	ldr	r1, [sp, #8]
    fe92:	9806      	ldr	r0, [sp, #24]
    fe94:	aa10      	add	r2, sp, #64	; 0x40
    fe96:	f7ff f919 	bl	f0cc <__sprint_r.part.0>
    fe9a:	2800      	cmp	r0, #0
    fe9c:	f43f aae3 	beq.w	f466 <_vfiprintf_r+0x30e>
    fea0:	f7ff bae3 	b.w	f46a <_vfiprintf_r+0x312>
    fea4:	9811      	ldr	r0, [sp, #68]	; 0x44
    fea6:	f8df a044 	ldr.w	sl, [pc, #68]	; feec <_vfiprintf_r+0xd94>
    feaa:	3001      	adds	r0, #1
    feac:	e631      	b.n	fb12 <_vfiprintf_r+0x9ba>
    feae:	9b02      	ldr	r3, [sp, #8]
    feb0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    feb2:	07db      	lsls	r3, r3, #31
    feb4:	d407      	bmi.n	fec6 <_vfiprintf_r+0xd6e>
    feb6:	9b02      	ldr	r3, [sp, #8]
    feb8:	899b      	ldrh	r3, [r3, #12]
    feba:	059f      	lsls	r7, r3, #22
    febc:	d403      	bmi.n	fec6 <_vfiprintf_r+0xd6e>
    febe:	9b02      	ldr	r3, [sp, #8]
    fec0:	6d98      	ldr	r0, [r3, #88]	; 0x58
    fec2:	f7fc f937 	bl	c134 <__retarget_lock_release_recursive>
    fec6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    feca:	9304      	str	r3, [sp, #16]
    fecc:	f7ff bad6 	b.w	f47c <_vfiprintf_r+0x324>
    fed0:	9a05      	ldr	r2, [sp, #20]
    fed2:	787b      	ldrb	r3, [r7, #1]
    fed4:	460f      	mov	r7, r1
    fed6:	f852 1b04 	ldr.w	r1, [r2], #4
    feda:	9205      	str	r2, [sp, #20]
    fedc:	ea41 7be1 	orr.w	fp, r1, r1, asr #31
    fee0:	f7ff b993 	b.w	f20a <_vfiprintf_r+0xb2>
    fee4:	00019ff0 	.word	0x00019ff0
    fee8:	0001a02c 	.word	0x0001a02c
    feec:	0001a01c 	.word	0x0001a01c

0000fef0 <vfiprintf>:
    fef0:	468c      	mov	ip, r1
    fef2:	b500      	push	{lr}
    fef4:	4686      	mov	lr, r0
    fef6:	4613      	mov	r3, r2
    fef8:	4a03      	ldr	r2, [pc, #12]	; (ff08 <vfiprintf+0x18>)
    fefa:	4671      	mov	r1, lr
    fefc:	6810      	ldr	r0, [r2, #0]
    fefe:	f85d eb04 	ldr.w	lr, [sp], #4
    ff02:	4662      	mov	r2, ip
    ff04:	f7ff b928 	b.w	f158 <_vfiprintf_r>
    ff08:	20000124 	.word	0x20000124

0000ff0c <__sbprintf>:
    ff0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    ff0e:	f44f 6c80 	mov.w	ip, #1024	; 0x400
    ff12:	4615      	mov	r5, r2
    ff14:	2400      	movs	r4, #0
    ff16:	4606      	mov	r6, r0
    ff18:	461f      	mov	r7, r3
    ff1a:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
    ff1e:	ab1a      	add	r3, sp, #104	; 0x68
    ff20:	9300      	str	r3, [sp, #0]
    ff22:	9304      	str	r3, [sp, #16]
    ff24:	898b      	ldrh	r3, [r1, #12]
    ff26:	a816      	add	r0, sp, #88	; 0x58
    ff28:	f023 0302 	bic.w	r3, r3, #2
    ff2c:	f8ad 300c 	strh.w	r3, [sp, #12]
    ff30:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    ff32:	9406      	str	r4, [sp, #24]
    ff34:	9319      	str	r3, [sp, #100]	; 0x64
    ff36:	89cb      	ldrh	r3, [r1, #14]
    ff38:	460c      	mov	r4, r1
    ff3a:	f8ad 300e 	strh.w	r3, [sp, #14]
    ff3e:	69cb      	ldr	r3, [r1, #28]
    ff40:	f8cd c008 	str.w	ip, [sp, #8]
    ff44:	9307      	str	r3, [sp, #28]
    ff46:	6a4b      	ldr	r3, [r1, #36]	; 0x24
    ff48:	f8cd c014 	str.w	ip, [sp, #20]
    ff4c:	9309      	str	r3, [sp, #36]	; 0x24
    ff4e:	f7fc f8e1 	bl	c114 <__retarget_lock_init_recursive>
    ff52:	462a      	mov	r2, r5
    ff54:	463b      	mov	r3, r7
    ff56:	4669      	mov	r1, sp
    ff58:	4630      	mov	r0, r6
    ff5a:	f7ff f8fd 	bl	f158 <_vfiprintf_r>
    ff5e:	1e05      	subs	r5, r0, #0
    ff60:	db07      	blt.n	ff72 <__sbprintf+0x66>
    ff62:	4669      	mov	r1, sp
    ff64:	4630      	mov	r0, r6
    ff66:	f002 fff3 	bl	12f50 <_fflush_r>
    ff6a:	2800      	cmp	r0, #0
    ff6c:	bf18      	it	ne
    ff6e:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
    ff72:	f8bd 300c 	ldrh.w	r3, [sp, #12]
    ff76:	065b      	lsls	r3, r3, #25
    ff78:	d503      	bpl.n	ff82 <__sbprintf+0x76>
    ff7a:	89a3      	ldrh	r3, [r4, #12]
    ff7c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    ff80:	81a3      	strh	r3, [r4, #12]
    ff82:	9816      	ldr	r0, [sp, #88]	; 0x58
    ff84:	f7fc f8ca 	bl	c11c <__retarget_lock_close_recursive>
    ff88:	4628      	mov	r0, r5
    ff8a:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
    ff8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000ff90 <_vfprintf_r>:
    ff90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ff94:	b0d5      	sub	sp, #340	; 0x154
    ff96:	461c      	mov	r4, r3
    ff98:	4691      	mov	r9, r2
    ff9a:	9107      	str	r1, [sp, #28]
    ff9c:	4605      	mov	r5, r0
    ff9e:	9009      	str	r0, [sp, #36]	; 0x24
    ffa0:	f003 fc58 	bl	13854 <_localeconv_r>
    ffa4:	6802      	ldr	r2, [r0, #0]
    ffa6:	940e      	str	r4, [sp, #56]	; 0x38
    ffa8:	4610      	mov	r0, r2
    ffaa:	9217      	str	r2, [sp, #92]	; 0x5c
    ffac:	f7fd fac2 	bl	d534 <strlen>
    ffb0:	9016      	str	r0, [sp, #88]	; 0x58
    ffb2:	b11d      	cbz	r5, ffbc <_vfprintf_r+0x2c>
    ffb4:	6bab      	ldr	r3, [r5, #56]	; 0x38
    ffb6:	2b00      	cmp	r3, #0
    ffb8:	f000 821d 	beq.w	103f6 <_vfprintf_r+0x466>
    ffbc:	9a07      	ldr	r2, [sp, #28]
    ffbe:	6e53      	ldr	r3, [r2, #100]	; 0x64
    ffc0:	07dd      	lsls	r5, r3, #31
    ffc2:	f140 812d 	bpl.w	10220 <_vfprintf_r+0x290>
    ffc6:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
    ffca:	b291      	uxth	r1, r2
    ffcc:	048f      	lsls	r7, r1, #18
    ffce:	d409      	bmi.n	ffe4 <_vfprintf_r+0x54>
    ffd0:	9b07      	ldr	r3, [sp, #28]
    ffd2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
    ffd6:	819a      	strh	r2, [r3, #12]
    ffd8:	b291      	uxth	r1, r2
    ffda:	461a      	mov	r2, r3
    ffdc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    ffde:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    ffe2:	6653      	str	r3, [r2, #100]	; 0x64
    ffe4:	070e      	lsls	r6, r1, #28
    ffe6:	f140 80c0 	bpl.w	1016a <_vfprintf_r+0x1da>
    ffea:	9b07      	ldr	r3, [sp, #28]
    ffec:	691b      	ldr	r3, [r3, #16]
    ffee:	2b00      	cmp	r3, #0
    fff0:	f000 80bb 	beq.w	1016a <_vfprintf_r+0x1da>
    fff4:	f001 031a 	and.w	r3, r1, #26
    fff8:	2b0a      	cmp	r3, #10
    fffa:	f000 80c4 	beq.w	10186 <_vfprintf_r+0x1f6>
    fffe:	2400      	movs	r4, #0
   10000:	ab2b      	add	r3, sp, #172	; 0xac
   10002:	4622      	mov	r2, r4
   10004:	4698      	mov	r8, r3
   10006:	464d      	mov	r5, r9
   10008:	e9cd 4429 	strd	r4, r4, [sp, #164]	; 0xa4
   1000c:	9328      	str	r3, [sp, #160]	; 0xa0
   1000e:	9412      	str	r4, [sp, #72]	; 0x48
   10010:	2300      	movs	r3, #0
   10012:	2400      	movs	r4, #0
   10014:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   10018:	782b      	ldrb	r3, [r5, #0]
   1001a:	e9cd 2219 	strd	r2, r2, [sp, #100]	; 0x64
   1001e:	e9cd 221b 	strd	r2, r2, [sp, #108]	; 0x6c
   10022:	9218      	str	r2, [sp, #96]	; 0x60
   10024:	920b      	str	r2, [sp, #44]	; 0x2c
   10026:	2b00      	cmp	r3, #0
   10028:	f000 818f 	beq.w	1034a <_vfprintf_r+0x3ba>
   1002c:	46aa      	mov	sl, r5
   1002e:	e004      	b.n	1003a <_vfprintf_r+0xaa>
   10030:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
   10034:	2b00      	cmp	r3, #0
   10036:	f000 80bb 	beq.w	101b0 <_vfprintf_r+0x220>
   1003a:	2b25      	cmp	r3, #37	; 0x25
   1003c:	d1f8      	bne.n	10030 <_vfprintf_r+0xa0>
   1003e:	ebba 0605 	subs.w	r6, sl, r5
   10042:	f040 80b9 	bne.w	101b8 <_vfprintf_r+0x228>
   10046:	f89a 3000 	ldrb.w	r3, [sl]
   1004a:	2b00      	cmp	r3, #0
   1004c:	f000 817d 	beq.w	1034a <_vfprintf_r+0x3ba>
   10050:	2300      	movs	r3, #0
   10052:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   10056:	f04f 092b 	mov.w	r9, #43	; 0x2b
   1005a:	2420      	movs	r4, #32
   1005c:	461f      	mov	r7, r3
   1005e:	f89a 6001 	ldrb.w	r6, [sl, #1]
   10062:	9208      	str	r2, [sp, #32]
   10064:	f10a 0a01 	add.w	sl, sl, #1
   10068:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   1006c:	930a      	str	r3, [sp, #40]	; 0x28
   1006e:	f10a 0a01 	add.w	sl, sl, #1
   10072:	f1a6 0320 	sub.w	r3, r6, #32
   10076:	2b5a      	cmp	r3, #90	; 0x5a
   10078:	f200 80e1 	bhi.w	1023e <_vfprintf_r+0x2ae>
   1007c:	e8df f013 	tbh	[pc, r3, lsl #1]
   10080:	00df0305 	.word	0x00df0305
   10084:	030000df 	.word	0x030000df
   10088:	00df00df 	.word	0x00df00df
   1008c:	02de00df 	.word	0x02de00df
   10090:	00df00df 	.word	0x00df00df
   10094:	026e006a 	.word	0x026e006a
   10098:	025500df 	.word	0x025500df
   1009c:	00df0278 	.word	0x00df0278
   100a0:	005b0273 	.word	0x005b0273
   100a4:	005b005b 	.word	0x005b005b
   100a8:	005b005b 	.word	0x005b005b
   100ac:	005b005b 	.word	0x005b005b
   100b0:	005b005b 	.word	0x005b005b
   100b4:	00df00df 	.word	0x00df00df
   100b8:	00df00df 	.word	0x00df00df
   100bc:	00df00df 	.word	0x00df00df
   100c0:	016c00df 	.word	0x016c00df
   100c4:	01ea00df 	.word	0x01ea00df
   100c8:	016c01c4 	.word	0x016c01c4
   100cc:	016c016c 	.word	0x016c016c
   100d0:	00df00df 	.word	0x00df00df
   100d4:	00df00df 	.word	0x00df00df
   100d8:	00df02d0 	.word	0x00df02d0
   100dc:	022300df 	.word	0x022300df
   100e0:	00df00df 	.word	0x00df00df
   100e4:	01f800df 	.word	0x01f800df
   100e8:	029200df 	.word	0x029200df
   100ec:	00df00df 	.word	0x00df00df
   100f0:	00df0787 	.word	0x00df0787
   100f4:	00df00df 	.word	0x00df00df
   100f8:	00df00df 	.word	0x00df00df
   100fc:	00df00df 	.word	0x00df00df
   10100:	016c00df 	.word	0x016c00df
   10104:	01ea00df 	.word	0x01ea00df
   10108:	016c01c6 	.word	0x016c01c6
   1010c:	016c016c 	.word	0x016c016c
   10110:	01c602b6 	.word	0x01c602b6
   10114:	00df01bf 	.word	0x00df01bf
   10118:	00df02c3 	.word	0x00df02c3
   1011c:	0225025a 	.word	0x0225025a
   10120:	01bf02a4 	.word	0x01bf02a4
   10124:	01f800df 	.word	0x01f800df
   10128:	07840072 	.word	0x07840072
   1012c:	00df00df 	.word	0x00df00df
   10130:	00df0765 	.word	0x00df0765
   10134:	0072      	.short	0x0072
   10136:	2200      	movs	r2, #0
   10138:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   1013c:	f81a 6b01 	ldrb.w	r6, [sl], #1
   10140:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   10144:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   10148:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   1014c:	2b09      	cmp	r3, #9
   1014e:	d9f5      	bls.n	1013c <_vfprintf_r+0x1ac>
   10150:	920a      	str	r2, [sp, #40]	; 0x28
   10152:	e78e      	b.n	10072 <_vfprintf_r+0xe2>
   10154:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10156:	f853 2b04 	ldr.w	r2, [r3], #4
   1015a:	2a00      	cmp	r2, #0
   1015c:	920a      	str	r2, [sp, #40]	; 0x28
   1015e:	930e      	str	r3, [sp, #56]	; 0x38
   10160:	f2c0 81e0 	blt.w	10524 <_vfprintf_r+0x594>
   10164:	f89a 6000 	ldrb.w	r6, [sl]
   10168:	e781      	b.n	1006e <_vfprintf_r+0xde>
   1016a:	9d07      	ldr	r5, [sp, #28]
   1016c:	9809      	ldr	r0, [sp, #36]	; 0x24
   1016e:	4629      	mov	r1, r5
   10170:	f001 fd82 	bl	11c78 <__swsetup_r>
   10174:	2800      	cmp	r0, #0
   10176:	f041 834d 	bne.w	11814 <_vfprintf_r+0x1884>
   1017a:	89a9      	ldrh	r1, [r5, #12]
   1017c:	f001 031a 	and.w	r3, r1, #26
   10180:	2b0a      	cmp	r3, #10
   10182:	f47f af3c 	bne.w	fffe <_vfprintf_r+0x6e>
   10186:	9a07      	ldr	r2, [sp, #28]
   10188:	f9b2 300e 	ldrsh.w	r3, [r2, #14]
   1018c:	2b00      	cmp	r3, #0
   1018e:	f6ff af36 	blt.w	fffe <_vfprintf_r+0x6e>
   10192:	6e53      	ldr	r3, [r2, #100]	; 0x64
   10194:	07d8      	lsls	r0, r3, #31
   10196:	d402      	bmi.n	1019e <_vfprintf_r+0x20e>
   10198:	0589      	lsls	r1, r1, #22
   1019a:	f141 8148 	bpl.w	1142e <_vfprintf_r+0x149e>
   1019e:	4623      	mov	r3, r4
   101a0:	464a      	mov	r2, r9
   101a2:	9907      	ldr	r1, [sp, #28]
   101a4:	9809      	ldr	r0, [sp, #36]	; 0x24
   101a6:	b055      	add	sp, #340	; 0x154
   101a8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   101ac:	f001 bcaa 	b.w	11b04 <__sbprintf>
   101b0:	ebba 0605 	subs.w	r6, sl, r5
   101b4:	f000 80c9 	beq.w	1034a <_vfprintf_r+0x3ba>
   101b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   101ba:	e9c8 5600 	strd	r5, r6, [r8]
   101be:	4433      	add	r3, r6
   101c0:	932a      	str	r3, [sp, #168]	; 0xa8
   101c2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   101c4:	3301      	adds	r3, #1
   101c6:	2b07      	cmp	r3, #7
   101c8:	9329      	str	r3, [sp, #164]	; 0xa4
   101ca:	dc05      	bgt.n	101d8 <_vfprintf_r+0x248>
   101cc:	f108 0808 	add.w	r8, r8, #8
   101d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   101d2:	4433      	add	r3, r6
   101d4:	930b      	str	r3, [sp, #44]	; 0x2c
   101d6:	e736      	b.n	10046 <_vfprintf_r+0xb6>
   101d8:	9907      	ldr	r1, [sp, #28]
   101da:	9809      	ldr	r0, [sp, #36]	; 0x24
   101dc:	aa28      	add	r2, sp, #160	; 0xa0
   101de:	f7fe ffb1 	bl	f144 <__sprint_r>
   101e2:	b980      	cbnz	r0, 10206 <_vfprintf_r+0x276>
   101e4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   101e8:	e7f2      	b.n	101d0 <_vfprintf_r+0x240>
   101ea:	9907      	ldr	r1, [sp, #28]
   101ec:	9809      	ldr	r0, [sp, #36]	; 0x24
   101ee:	aa28      	add	r2, sp, #160	; 0xa0
   101f0:	f7fe ffa8 	bl	f144 <__sprint_r>
   101f4:	2800      	cmp	r0, #0
   101f6:	f000 8099 	beq.w	1032c <_vfprintf_r+0x39c>
   101fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   101fc:	b11b      	cbz	r3, 10206 <_vfprintf_r+0x276>
   101fe:	4619      	mov	r1, r3
   10200:	9809      	ldr	r0, [sp, #36]	; 0x24
   10202:	f003 f99b 	bl	1353c <_free_r>
   10206:	9a07      	ldr	r2, [sp, #28]
   10208:	6e53      	ldr	r3, [r2, #100]	; 0x64
   1020a:	07d9      	lsls	r1, r3, #31
   1020c:	f140 80e8 	bpl.w	103e0 <_vfprintf_r+0x450>
   10210:	8993      	ldrh	r3, [r2, #12]
   10212:	065b      	lsls	r3, r3, #25
   10214:	f101 830a 	bmi.w	1182c <_vfprintf_r+0x189c>
   10218:	980b      	ldr	r0, [sp, #44]	; 0x2c
   1021a:	b055      	add	sp, #340	; 0x154
   1021c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10220:	9b07      	ldr	r3, [sp, #28]
   10222:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
   10226:	0590      	lsls	r0, r2, #22
   10228:	b291      	uxth	r1, r2
   1022a:	f53f aecf 	bmi.w	ffcc <_vfprintf_r+0x3c>
   1022e:	461d      	mov	r5, r3
   10230:	6d98      	ldr	r0, [r3, #88]	; 0x58
   10232:	f7fb ff77 	bl	c124 <__retarget_lock_acquire_recursive>
   10236:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   1023a:	b291      	uxth	r1, r2
   1023c:	e6c6      	b.n	ffcc <_vfprintf_r+0x3c>
   1023e:	2e00      	cmp	r6, #0
   10240:	f000 8083 	beq.w	1034a <_vfprintf_r+0x3ba>
   10244:	2301      	movs	r3, #1
   10246:	2200      	movs	r2, #0
   10248:	f88d 60ec 	strb.w	r6, [sp, #236]	; 0xec
   1024c:	9306      	str	r3, [sp, #24]
   1024e:	ad3b      	add	r5, sp, #236	; 0xec
   10250:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   10254:	930c      	str	r3, [sp, #48]	; 0x30
   10256:	920d      	str	r2, [sp, #52]	; 0x34
   10258:	9208      	str	r2, [sp, #32]
   1025a:	920f      	str	r2, [sp, #60]	; 0x3c
   1025c:	9213      	str	r2, [sp, #76]	; 0x4c
   1025e:	9210      	str	r2, [sp, #64]	; 0x40
   10260:	f017 0302 	ands.w	r3, r7, #2
   10264:	d002      	beq.n	1026c <_vfprintf_r+0x2dc>
   10266:	9906      	ldr	r1, [sp, #24]
   10268:	3102      	adds	r1, #2
   1026a:	9106      	str	r1, [sp, #24]
   1026c:	f017 0b84 	ands.w	fp, r7, #132	; 0x84
   10270:	d107      	bne.n	10282 <_vfprintf_r+0x2f2>
   10272:	990a      	ldr	r1, [sp, #40]	; 0x28
   10274:	9806      	ldr	r0, [sp, #24]
   10276:	eba1 0900 	sub.w	r9, r1, r0
   1027a:	f1b9 0f00 	cmp.w	r9, #0
   1027e:	f300 8390 	bgt.w	109a2 <_vfprintf_r+0xa12>
   10282:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10284:	b182      	cbz	r2, 102a8 <_vfprintf_r+0x318>
   10286:	2201      	movs	r2, #1
   10288:	f8c8 2004 	str.w	r2, [r8, #4]
   1028c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   1028e:	3401      	adds	r4, #1
   10290:	3201      	adds	r2, #1
   10292:	f10d 0183 	add.w	r1, sp, #131	; 0x83
   10296:	2a07      	cmp	r2, #7
   10298:	942a      	str	r4, [sp, #168]	; 0xa8
   1029a:	9229      	str	r2, [sp, #164]	; 0xa4
   1029c:	f8c8 1000 	str.w	r1, [r8]
   102a0:	f300 83d8 	bgt.w	10a54 <_vfprintf_r+0xac4>
   102a4:	f108 0808 	add.w	r8, r8, #8
   102a8:	b17b      	cbz	r3, 102ca <_vfprintf_r+0x33a>
   102aa:	2302      	movs	r3, #2
   102ac:	f8c8 3004 	str.w	r3, [r8, #4]
   102b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   102b2:	3402      	adds	r4, #2
   102b4:	3301      	adds	r3, #1
   102b6:	aa21      	add	r2, sp, #132	; 0x84
   102b8:	2b07      	cmp	r3, #7
   102ba:	942a      	str	r4, [sp, #168]	; 0xa8
   102bc:	9329      	str	r3, [sp, #164]	; 0xa4
   102be:	f8c8 2000 	str.w	r2, [r8]
   102c2:	f300 83d5 	bgt.w	10a70 <_vfprintf_r+0xae0>
   102c6:	f108 0808 	add.w	r8, r8, #8
   102ca:	f1bb 0f80 	cmp.w	fp, #128	; 0x80
   102ce:	f000 8288 	beq.w	107e2 <_vfprintf_r+0x852>
   102d2:	9b08      	ldr	r3, [sp, #32]
   102d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   102d6:	eba3 0b02 	sub.w	fp, r3, r2
   102da:	f1bb 0f00 	cmp.w	fp, #0
   102de:	f300 82cb 	bgt.w	10878 <_vfprintf_r+0x8e8>
   102e2:	05fb      	lsls	r3, r7, #23
   102e4:	f100 821f 	bmi.w	10726 <_vfprintf_r+0x796>
   102e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   102ea:	f8c8 5000 	str.w	r5, [r8]
   102ee:	441c      	add	r4, r3
   102f0:	f8c8 3004 	str.w	r3, [r8, #4]
   102f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   102f6:	942a      	str	r4, [sp, #168]	; 0xa8
   102f8:	3301      	adds	r3, #1
   102fa:	2b07      	cmp	r3, #7
   102fc:	9329      	str	r3, [sp, #164]	; 0xa4
   102fe:	f300 8344 	bgt.w	1098a <_vfprintf_r+0x9fa>
   10302:	f108 0808 	add.w	r8, r8, #8
   10306:	0778      	lsls	r0, r7, #29
   10308:	d505      	bpl.n	10316 <_vfprintf_r+0x386>
   1030a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1030c:	9a06      	ldr	r2, [sp, #24]
   1030e:	1a9d      	subs	r5, r3, r2
   10310:	2d00      	cmp	r5, #0
   10312:	f300 83b9 	bgt.w	10a88 <_vfprintf_r+0xaf8>
   10316:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1031a:	9906      	ldr	r1, [sp, #24]
   1031c:	428a      	cmp	r2, r1
   1031e:	bfac      	ite	ge
   10320:	189b      	addge	r3, r3, r2
   10322:	185b      	addlt	r3, r3, r1
   10324:	930b      	str	r3, [sp, #44]	; 0x2c
   10326:	2c00      	cmp	r4, #0
   10328:	f47f af5f 	bne.w	101ea <_vfprintf_r+0x25a>
   1032c:	2300      	movs	r3, #0
   1032e:	9329      	str	r3, [sp, #164]	; 0xa4
   10330:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   10332:	b11b      	cbz	r3, 1033c <_vfprintf_r+0x3ac>
   10334:	990d      	ldr	r1, [sp, #52]	; 0x34
   10336:	9809      	ldr	r0, [sp, #36]	; 0x24
   10338:	f003 f900 	bl	1353c <_free_r>
   1033c:	4655      	mov	r5, sl
   1033e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10342:	782b      	ldrb	r3, [r5, #0]
   10344:	2b00      	cmp	r3, #0
   10346:	f47f ae71 	bne.w	1002c <_vfprintf_r+0x9c>
   1034a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   1034c:	2b00      	cmp	r3, #0
   1034e:	f041 8210 	bne.w	11772 <_vfprintf_r+0x17e2>
   10352:	2300      	movs	r3, #0
   10354:	9329      	str	r3, [sp, #164]	; 0xa4
   10356:	e756      	b.n	10206 <_vfprintf_r+0x276>
   10358:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1035a:	3307      	adds	r3, #7
   1035c:	f023 0207 	bic.w	r2, r3, #7
   10360:	e8f2 3402 	ldrd	r3, r4, [r2], #8
   10364:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   10368:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   1036c:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
   10370:	4699      	mov	r9, r3
   10372:	4618      	mov	r0, r3
   10374:	920e      	str	r2, [sp, #56]	; 0x38
   10376:	4621      	mov	r1, r4
   10378:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1037c:	4bab      	ldr	r3, [pc, #684]	; (1062c <_vfprintf_r+0x69c>)
   1037e:	f7fa f8e5 	bl	a54c <__aeabi_dcmpun>
   10382:	2800      	cmp	r0, #0
   10384:	f040 8518 	bne.w	10db8 <_vfprintf_r+0xe28>
   10388:	4648      	mov	r0, r9
   1038a:	4621      	mov	r1, r4
   1038c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   10390:	4ba6      	ldr	r3, [pc, #664]	; (1062c <_vfprintf_r+0x69c>)
   10392:	f005 feb7 	bl	16104 <__aeabi_dcmple>
   10396:	2800      	cmp	r0, #0
   10398:	f040 850e 	bne.w	10db8 <_vfprintf_r+0xe28>
   1039c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   103a0:	2200      	movs	r2, #0
   103a2:	2300      	movs	r3, #0
   103a4:	f005 fea4 	bl	160f0 <__aeabi_dcmplt>
   103a8:	2800      	cmp	r0, #0
   103aa:	f040 8765 	bne.w	11278 <_vfprintf_r+0x12e8>
   103ae:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   103b2:	2100      	movs	r1, #0
   103b4:	2003      	movs	r0, #3
   103b6:	4d9e      	ldr	r5, [pc, #632]	; (10630 <_vfprintf_r+0x6a0>)
   103b8:	4b9e      	ldr	r3, [pc, #632]	; (10634 <_vfprintf_r+0x6a4>)
   103ba:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   103be:	910d      	str	r1, [sp, #52]	; 0x34
   103c0:	9006      	str	r0, [sp, #24]
   103c2:	2e47      	cmp	r6, #71	; 0x47
   103c4:	bfc8      	it	gt
   103c6:	461d      	movgt	r5, r3
   103c8:	9108      	str	r1, [sp, #32]
   103ca:	900c      	str	r0, [sp, #48]	; 0x30
   103cc:	910f      	str	r1, [sp, #60]	; 0x3c
   103ce:	9113      	str	r1, [sp, #76]	; 0x4c
   103d0:	9110      	str	r1, [sp, #64]	; 0x40
   103d2:	2a00      	cmp	r2, #0
   103d4:	f43f af44 	beq.w	10260 <_vfprintf_r+0x2d0>
   103d8:	9b06      	ldr	r3, [sp, #24]
   103da:	3301      	adds	r3, #1
   103dc:	9306      	str	r3, [sp, #24]
   103de:	e73f      	b.n	10260 <_vfprintf_r+0x2d0>
   103e0:	9b07      	ldr	r3, [sp, #28]
   103e2:	899b      	ldrh	r3, [r3, #12]
   103e4:	059a      	lsls	r2, r3, #22
   103e6:	f53f af14 	bmi.w	10212 <_vfprintf_r+0x282>
   103ea:	9c07      	ldr	r4, [sp, #28]
   103ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
   103ee:	f7fb fea1 	bl	c134 <__retarget_lock_release_recursive>
   103f2:	89a3      	ldrh	r3, [r4, #12]
   103f4:	e70d      	b.n	10212 <_vfprintf_r+0x282>
   103f6:	9809      	ldr	r0, [sp, #36]	; 0x24
   103f8:	f002 fe56 	bl	130a8 <__sinit>
   103fc:	e5de      	b.n	ffbc <_vfprintf_r+0x2c>
   103fe:	f89a 6000 	ldrb.w	r6, [sl]
   10402:	f047 0720 	orr.w	r7, r7, #32
   10406:	e632      	b.n	1006e <_vfprintf_r+0xde>
   10408:	f047 0710 	orr.w	r7, r7, #16
   1040c:	06ba      	lsls	r2, r7, #26
   1040e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10410:	f140 846e 	bpl.w	10cf0 <_vfprintf_r+0xd60>
   10414:	3307      	adds	r3, #7
   10416:	f023 0307 	bic.w	r3, r3, #7
   1041a:	461a      	mov	r2, r3
   1041c:	685b      	ldr	r3, [r3, #4]
   1041e:	f852 4b08 	ldr.w	r4, [r2], #8
   10422:	4699      	mov	r9, r3
   10424:	920e      	str	r2, [sp, #56]	; 0x38
   10426:	2b00      	cmp	r3, #0
   10428:	f2c0 846f 	blt.w	10d0a <_vfprintf_r+0xd7a>
   1042c:	9b08      	ldr	r3, [sp, #32]
   1042e:	3301      	adds	r3, #1
   10430:	f000 82fb 	beq.w	10a2a <_vfprintf_r+0xa9a>
   10434:	ea54 0309 	orrs.w	r3, r4, r9
   10438:	f027 0b80 	bic.w	fp, r7, #128	; 0x80
   1043c:	f040 82f6 	bne.w	10a2c <_vfprintf_r+0xa9c>
   10440:	9b08      	ldr	r3, [sp, #32]
   10442:	2b00      	cmp	r3, #0
   10444:	f040 82f7 	bne.w	10a36 <_vfprintf_r+0xaa6>
   10448:	465f      	mov	r7, fp
   1044a:	2300      	movs	r3, #0
   1044c:	ad54      	add	r5, sp, #336	; 0x150
   1044e:	9308      	str	r3, [sp, #32]
   10450:	930c      	str	r3, [sp, #48]	; 0x30
   10452:	e13d      	b.n	106d0 <_vfprintf_r+0x740>
   10454:	2001      	movs	r0, #1
   10456:	2200      	movs	r2, #0
   10458:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1045a:	9006      	str	r0, [sp, #24]
   1045c:	f853 1b04 	ldr.w	r1, [r3], #4
   10460:	ad3b      	add	r5, sp, #236	; 0xec
   10462:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   10466:	f88d 10ec 	strb.w	r1, [sp, #236]	; 0xec
   1046a:	930e      	str	r3, [sp, #56]	; 0x38
   1046c:	900c      	str	r0, [sp, #48]	; 0x30
   1046e:	e6f2      	b.n	10256 <_vfprintf_r+0x2c6>
   10470:	f04f 0900 	mov.w	r9, #0
   10474:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   10476:	9b08      	ldr	r3, [sp, #32]
   10478:	f854 5b04 	ldr.w	r5, [r4], #4
   1047c:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   10480:	2d00      	cmp	r5, #0
   10482:	f000 85a1 	beq.w	10fc8 <_vfprintf_r+0x1038>
   10486:	1c5a      	adds	r2, r3, #1
   10488:	f000 86a5 	beq.w	111d6 <_vfprintf_r+0x1246>
   1048c:	461a      	mov	r2, r3
   1048e:	4649      	mov	r1, r9
   10490:	4628      	mov	r0, r5
   10492:	f7fc f90d 	bl	c6b0 <memchr>
   10496:	900d      	str	r0, [sp, #52]	; 0x34
   10498:	2800      	cmp	r0, #0
   1049a:	f001 8150 	beq.w	1173e <_vfprintf_r+0x17ae>
   1049e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   104a0:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   104a4:	1b5b      	subs	r3, r3, r5
   104a6:	930c      	str	r3, [sp, #48]	; 0x30
   104a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   104ac:	f8cd 9020 	str.w	r9, [sp, #32]
   104b0:	940e      	str	r4, [sp, #56]	; 0x38
   104b2:	9306      	str	r3, [sp, #24]
   104b4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
   104b8:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   104bc:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   104c0:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   104c4:	e785      	b.n	103d2 <_vfprintf_r+0x442>
   104c6:	f047 0710 	orr.w	r7, r7, #16
   104ca:	f017 0920 	ands.w	r9, r7, #32
   104ce:	f000 83f2 	beq.w	10cb6 <_vfprintf_r+0xd26>
   104d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   104d4:	3307      	adds	r3, #7
   104d6:	f023 0307 	bic.w	r3, r3, #7
   104da:	f8d3 9004 	ldr.w	r9, [r3, #4]
   104de:	f853 4b08 	ldr.w	r4, [r3], #8
   104e2:	930e      	str	r3, [sp, #56]	; 0x38
   104e4:	2300      	movs	r3, #0
   104e6:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   104ea:	2200      	movs	r2, #0
   104ec:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   104f0:	9a08      	ldr	r2, [sp, #32]
   104f2:	1c51      	adds	r1, r2, #1
   104f4:	f000 80d4 	beq.w	106a0 <_vfprintf_r+0x710>
   104f8:	ea54 0109 	orrs.w	r1, r4, r9
   104fc:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
   10500:	f040 80cd 	bne.w	1069e <_vfprintf_r+0x70e>
   10504:	2a00      	cmp	r2, #0
   10506:	f040 8604 	bne.w	11112 <_vfprintf_r+0x1182>
   1050a:	2b00      	cmp	r3, #0
   1050c:	d19d      	bne.n	1044a <_vfprintf_r+0x4ba>
   1050e:	f01b 0301 	ands.w	r3, fp, #1
   10512:	930c      	str	r3, [sp, #48]	; 0x30
   10514:	f000 8430 	beq.w	10d78 <_vfprintf_r+0xde8>
   10518:	2330      	movs	r3, #48	; 0x30
   1051a:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   1051e:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
   10522:	e0d5      	b.n	106d0 <_vfprintf_r+0x740>
   10524:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   10526:	425b      	negs	r3, r3
   10528:	930a      	str	r3, [sp, #40]	; 0x28
   1052a:	f89a 6000 	ldrb.w	r6, [sl]
   1052e:	f047 0704 	orr.w	r7, r7, #4
   10532:	e59c      	b.n	1006e <_vfprintf_r+0xde>
   10534:	06bd      	lsls	r5, r7, #26
   10536:	f100 84fd 	bmi.w	10f34 <_vfprintf_r+0xfa4>
   1053a:	06fc      	lsls	r4, r7, #27
   1053c:	f100 85ee 	bmi.w	1111c <_vfprintf_r+0x118c>
   10540:	0678      	lsls	r0, r7, #25
   10542:	f100 86b2 	bmi.w	112aa <_vfprintf_r+0x131a>
   10546:	05b9      	lsls	r1, r7, #22
   10548:	f140 85e8 	bpl.w	1111c <_vfprintf_r+0x118c>
   1054c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1054e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   10550:	f853 2b04 	ldr.w	r2, [r3], #4
   10554:	4655      	mov	r5, sl
   10556:	7011      	strb	r1, [r2, #0]
   10558:	930e      	str	r3, [sp, #56]	; 0x38
   1055a:	e6f2      	b.n	10342 <_vfprintf_r+0x3b2>
   1055c:	f89a 6000 	ldrb.w	r6, [sl]
   10560:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   10564:	e583      	b.n	1006e <_vfprintf_r+0xde>
   10566:	f89a 6000 	ldrb.w	r6, [sl]
   1056a:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   1056e:	e57e      	b.n	1006e <_vfprintf_r+0xde>
   10570:	4652      	mov	r2, sl
   10572:	f812 6b01 	ldrb.w	r6, [r2], #1
   10576:	2e2a      	cmp	r6, #42	; 0x2a
   10578:	f001 828d 	beq.w	11a96 <_vfprintf_r+0x1b06>
   1057c:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   10580:	2b09      	cmp	r3, #9
   10582:	4692      	mov	sl, r2
   10584:	bf98      	it	ls
   10586:	2200      	movls	r2, #0
   10588:	f201 80e5 	bhi.w	11756 <_vfprintf_r+0x17c6>
   1058c:	f81a 6b01 	ldrb.w	r6, [sl], #1
   10590:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   10594:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   10598:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   1059c:	2b09      	cmp	r3, #9
   1059e:	d9f5      	bls.n	1058c <_vfprintf_r+0x5fc>
   105a0:	9208      	str	r2, [sp, #32]
   105a2:	e566      	b.n	10072 <_vfprintf_r+0xe2>
   105a4:	f047 0b10 	orr.w	fp, r7, #16
   105a8:	f01b 0920 	ands.w	r9, fp, #32
   105ac:	f000 8391 	beq.w	10cd2 <_vfprintf_r+0xd42>
   105b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   105b2:	3307      	adds	r3, #7
   105b4:	f023 0307 	bic.w	r3, r3, #7
   105b8:	461a      	mov	r2, r3
   105ba:	f852 4b08 	ldr.w	r4, [r2], #8
   105be:	f8d3 9004 	ldr.w	r9, [r3, #4]
   105c2:	920e      	str	r2, [sp, #56]	; 0x38
   105c4:	2301      	movs	r3, #1
   105c6:	e790      	b.n	104ea <_vfprintf_r+0x55a>
   105c8:	2230      	movs	r2, #48	; 0x30
   105ca:	2678      	movs	r6, #120	; 0x78
   105cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   105ce:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   105d2:	f853 4b04 	ldr.w	r4, [r3], #4
   105d6:	4a18      	ldr	r2, [pc, #96]	; (10638 <_vfprintf_r+0x6a8>)
   105d8:	930e      	str	r3, [sp, #56]	; 0x38
   105da:	f04f 0900 	mov.w	r9, #0
   105de:	2302      	movs	r3, #2
   105e0:	f047 0b02 	orr.w	fp, r7, #2
   105e4:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   105e8:	9218      	str	r2, [sp, #96]	; 0x60
   105ea:	e77e      	b.n	104ea <_vfprintf_r+0x55a>
   105ec:	f89a 6000 	ldrb.w	r6, [sl]
   105f0:	2e68      	cmp	r6, #104	; 0x68
   105f2:	bf03      	ittte	eq
   105f4:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   105f8:	f447 7700 	orreq.w	r7, r7, #512	; 0x200
   105fc:	f10a 0a01 	addeq.w	sl, sl, #1
   10600:	f047 0740 	orrne.w	r7, r7, #64	; 0x40
   10604:	e533      	b.n	1006e <_vfprintf_r+0xde>
   10606:	f89a 6000 	ldrb.w	r6, [sl]
   1060a:	2e6c      	cmp	r6, #108	; 0x6c
   1060c:	bf03      	ittte	eq
   1060e:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   10612:	f047 0720 	orreq.w	r7, r7, #32
   10616:	f10a 0a01 	addeq.w	sl, sl, #1
   1061a:	f047 0710 	orrne.w	r7, r7, #16
   1061e:	e526      	b.n	1006e <_vfprintf_r+0xde>
   10620:	f89a 6000 	ldrb.w	r6, [sl]
   10624:	f047 0708 	orr.w	r7, r7, #8
   10628:	e521      	b.n	1006e <_vfprintf_r+0xde>
   1062a:	bf00      	nop
   1062c:	7fefffff 	.word	0x7fefffff
   10630:	00019fb8 	.word	0x00019fb8
   10634:	00019fbc 	.word	0x00019fbc
   10638:	00019fc8 	.word	0x00019fc8
   1063c:	9e09      	ldr	r6, [sp, #36]	; 0x24
   1063e:	4630      	mov	r0, r6
   10640:	f003 f908 	bl	13854 <_localeconv_r>
   10644:	6843      	ldr	r3, [r0, #4]
   10646:	4618      	mov	r0, r3
   10648:	931b      	str	r3, [sp, #108]	; 0x6c
   1064a:	f7fc ff73 	bl	d534 <strlen>
   1064e:	4603      	mov	r3, r0
   10650:	4630      	mov	r0, r6
   10652:	931c      	str	r3, [sp, #112]	; 0x70
   10654:	461e      	mov	r6, r3
   10656:	f003 f8fd 	bl	13854 <_localeconv_r>
   1065a:	6883      	ldr	r3, [r0, #8]
   1065c:	9319      	str	r3, [sp, #100]	; 0x64
   1065e:	2e00      	cmp	r6, #0
   10660:	f43f ad80 	beq.w	10164 <_vfprintf_r+0x1d4>
   10664:	9b19      	ldr	r3, [sp, #100]	; 0x64
   10666:	2b00      	cmp	r3, #0
   10668:	f43f ad7c 	beq.w	10164 <_vfprintf_r+0x1d4>
   1066c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1066e:	781b      	ldrb	r3, [r3, #0]
   10670:	2b00      	cmp	r3, #0
   10672:	f43f ad77 	beq.w	10164 <_vfprintf_r+0x1d4>
   10676:	f89a 6000 	ldrb.w	r6, [sl]
   1067a:	f447 6780 	orr.w	r7, r7, #1024	; 0x400
   1067e:	e4f6      	b.n	1006e <_vfprintf_r+0xde>
   10680:	f89a 6000 	ldrb.w	r6, [sl]
   10684:	f047 0701 	orr.w	r7, r7, #1
   10688:	e4f1      	b.n	1006e <_vfprintf_r+0xde>
   1068a:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
   1068e:	2b00      	cmp	r3, #0
   10690:	f47f ad68 	bne.w	10164 <_vfprintf_r+0x1d4>
   10694:	f89a 6000 	ldrb.w	r6, [sl]
   10698:	f88d 4083 	strb.w	r4, [sp, #131]	; 0x83
   1069c:	e4e7      	b.n	1006e <_vfprintf_r+0xde>
   1069e:	46bb      	mov	fp, r7
   106a0:	2b01      	cmp	r3, #1
   106a2:	f000 81c3 	beq.w	10a2c <_vfprintf_r+0xa9c>
   106a6:	2b02      	cmp	r3, #2
   106a8:	ad54      	add	r5, sp, #336	; 0x150
   106aa:	d11f      	bne.n	106ec <_vfprintf_r+0x75c>
   106ac:	9a18      	ldr	r2, [sp, #96]	; 0x60
   106ae:	f004 030f 	and.w	r3, r4, #15
   106b2:	5cd3      	ldrb	r3, [r2, r3]
   106b4:	0924      	lsrs	r4, r4, #4
   106b6:	ea44 7409 	orr.w	r4, r4, r9, lsl #28
   106ba:	ea4f 1919 	mov.w	r9, r9, lsr #4
   106be:	f805 3d01 	strb.w	r3, [r5, #-1]!
   106c2:	ea54 0309 	orrs.w	r3, r4, r9
   106c6:	d1f2      	bne.n	106ae <_vfprintf_r+0x71e>
   106c8:	465f      	mov	r7, fp
   106ca:	ab54      	add	r3, sp, #336	; 0x150
   106cc:	1b5b      	subs	r3, r3, r5
   106ce:	930c      	str	r3, [sp, #48]	; 0x30
   106d0:	9a08      	ldr	r2, [sp, #32]
   106d2:	990c      	ldr	r1, [sp, #48]	; 0x30
   106d4:	2300      	movs	r3, #0
   106d6:	428a      	cmp	r2, r1
   106d8:	bfb8      	it	lt
   106da:	460a      	movlt	r2, r1
   106dc:	930d      	str	r3, [sp, #52]	; 0x34
   106de:	9206      	str	r2, [sp, #24]
   106e0:	930f      	str	r3, [sp, #60]	; 0x3c
   106e2:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   106e6:	9313      	str	r3, [sp, #76]	; 0x4c
   106e8:	9310      	str	r3, [sp, #64]	; 0x40
   106ea:	e672      	b.n	103d2 <_vfprintf_r+0x442>
   106ec:	f004 0307 	and.w	r3, r4, #7
   106f0:	08e4      	lsrs	r4, r4, #3
   106f2:	ea44 7449 	orr.w	r4, r4, r9, lsl #29
   106f6:	ea4f 09d9 	mov.w	r9, r9, lsr #3
   106fa:	3330      	adds	r3, #48	; 0x30
   106fc:	ea54 0109 	orrs.w	r1, r4, r9
   10700:	462a      	mov	r2, r5
   10702:	f805 3d01 	strb.w	r3, [r5, #-1]!
   10706:	d1f1      	bne.n	106ec <_vfprintf_r+0x75c>
   10708:	f01b 0f01 	tst.w	fp, #1
   1070c:	d0dc      	beq.n	106c8 <_vfprintf_r+0x738>
   1070e:	2b30      	cmp	r3, #48	; 0x30
   10710:	d0da      	beq.n	106c8 <_vfprintf_r+0x738>
   10712:	2330      	movs	r3, #48	; 0x30
   10714:	3a02      	subs	r2, #2
   10716:	f805 3c01 	strb.w	r3, [r5, #-1]
   1071a:	ab54      	add	r3, sp, #336	; 0x150
   1071c:	1a9b      	subs	r3, r3, r2
   1071e:	465f      	mov	r7, fp
   10720:	4615      	mov	r5, r2
   10722:	930c      	str	r3, [sp, #48]	; 0x30
   10724:	e7d4      	b.n	106d0 <_vfprintf_r+0x740>
   10726:	2e65      	cmp	r6, #101	; 0x65
   10728:	f340 80e9 	ble.w	108fe <_vfprintf_r+0x96e>
   1072c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   10730:	2200      	movs	r2, #0
   10732:	2300      	movs	r3, #0
   10734:	f005 fcd2 	bl	160dc <__aeabi_dcmpeq>
   10738:	2800      	cmp	r0, #0
   1073a:	f000 81e1 	beq.w	10b00 <_vfprintf_r+0xb70>
   1073e:	2301      	movs	r3, #1
   10740:	f8c8 3004 	str.w	r3, [r8, #4]
   10744:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10746:	4ac0      	ldr	r2, [pc, #768]	; (10a48 <_vfprintf_r+0xab8>)
   10748:	3301      	adds	r3, #1
   1074a:	3401      	adds	r4, #1
   1074c:	2b07      	cmp	r3, #7
   1074e:	942a      	str	r4, [sp, #168]	; 0xa8
   10750:	9329      	str	r3, [sp, #164]	; 0xa4
   10752:	f8c8 2000 	str.w	r2, [r8]
   10756:	f300 84bf 	bgt.w	110d8 <_vfprintf_r+0x1148>
   1075a:	f108 0808 	add.w	r8, r8, #8
   1075e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   10760:	9a12      	ldr	r2, [sp, #72]	; 0x48
   10762:	4293      	cmp	r3, r2
   10764:	f280 82dc 	bge.w	10d20 <_vfprintf_r+0xd90>
   10768:	9b16      	ldr	r3, [sp, #88]	; 0x58
   1076a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   1076c:	441c      	add	r4, r3
   1076e:	e9c8 2300 	strd	r2, r3, [r8]
   10772:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10774:	942a      	str	r4, [sp, #168]	; 0xa8
   10776:	3301      	adds	r3, #1
   10778:	2b07      	cmp	r3, #7
   1077a:	9329      	str	r3, [sp, #164]	; 0xa4
   1077c:	f300 8417 	bgt.w	10fae <_vfprintf_r+0x101e>
   10780:	f108 0808 	add.w	r8, r8, #8
   10784:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10786:	1e5d      	subs	r5, r3, #1
   10788:	2d00      	cmp	r5, #0
   1078a:	f77f adbc 	ble.w	10306 <_vfprintf_r+0x376>
   1078e:	2d10      	cmp	r5, #16
   10790:	f341 815d 	ble.w	11a4e <_vfprintf_r+0x1abe>
   10794:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 10a4c <_vfprintf_r+0xabc>
   10798:	4622      	mov	r2, r4
   1079a:	4649      	mov	r1, r9
   1079c:	2610      	movs	r6, #16
   1079e:	46b9      	mov	r9, r7
   107a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   107a2:	460f      	mov	r7, r1
   107a4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   107a8:	9c07      	ldr	r4, [sp, #28]
   107aa:	e005      	b.n	107b8 <_vfprintf_r+0x828>
   107ac:	f108 0808 	add.w	r8, r8, #8
   107b0:	3d10      	subs	r5, #16
   107b2:	2d10      	cmp	r5, #16
   107b4:	f340 849d 	ble.w	110f2 <_vfprintf_r+0x1162>
   107b8:	3301      	adds	r3, #1
   107ba:	3210      	adds	r2, #16
   107bc:	2b07      	cmp	r3, #7
   107be:	e9c8 7600 	strd	r7, r6, [r8]
   107c2:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   107c6:	ddf1      	ble.n	107ac <_vfprintf_r+0x81c>
   107c8:	4621      	mov	r1, r4
   107ca:	4658      	mov	r0, fp
   107cc:	aa28      	add	r2, sp, #160	; 0xa0
   107ce:	f7fe fcb9 	bl	f144 <__sprint_r>
   107d2:	2800      	cmp	r0, #0
   107d4:	f47f ad11 	bne.w	101fa <_vfprintf_r+0x26a>
   107d8:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   107dc:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   107e0:	e7e6      	b.n	107b0 <_vfprintf_r+0x820>
   107e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   107e4:	9a06      	ldr	r2, [sp, #24]
   107e6:	eba3 0b02 	sub.w	fp, r3, r2
   107ea:	f1bb 0f00 	cmp.w	fp, #0
   107ee:	f77f ad70 	ble.w	102d2 <_vfprintf_r+0x342>
   107f2:	f1bb 0f10 	cmp.w	fp, #16
   107f6:	f341 8052 	ble.w	1189e <_vfprintf_r+0x190e>
   107fa:	f8df 9250 	ldr.w	r9, [pc, #592]	; 10a4c <_vfprintf_r+0xabc>
   107fe:	4641      	mov	r1, r8
   10800:	4620      	mov	r0, r4
   10802:	46a8      	mov	r8, r5
   10804:	464c      	mov	r4, r9
   10806:	2310      	movs	r3, #16
   10808:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   1080a:	9d07      	ldr	r5, [sp, #28]
   1080c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
   10810:	e006      	b.n	10820 <_vfprintf_r+0x890>
   10812:	f1ab 0b10 	sub.w	fp, fp, #16
   10816:	f1bb 0f10 	cmp.w	fp, #16
   1081a:	f101 0108 	add.w	r1, r1, #8
   1081e:	dd19      	ble.n	10854 <_vfprintf_r+0x8c4>
   10820:	3201      	adds	r2, #1
   10822:	3010      	adds	r0, #16
   10824:	2a07      	cmp	r2, #7
   10826:	e9c1 4300 	strd	r4, r3, [r1]
   1082a:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   1082e:	ddf0      	ble.n	10812 <_vfprintf_r+0x882>
   10830:	4629      	mov	r1, r5
   10832:	4648      	mov	r0, r9
   10834:	aa28      	add	r2, sp, #160	; 0xa0
   10836:	f7fe fc85 	bl	f144 <__sprint_r>
   1083a:	2800      	cmp	r0, #0
   1083c:	f47f acdd 	bne.w	101fa <_vfprintf_r+0x26a>
   10840:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   10844:	f1ab 0b10 	sub.w	fp, fp, #16
   10848:	f1bb 0f10 	cmp.w	fp, #16
   1084c:	f04f 0310 	mov.w	r3, #16
   10850:	a92b      	add	r1, sp, #172	; 0xac
   10852:	dce5      	bgt.n	10820 <_vfprintf_r+0x890>
   10854:	4645      	mov	r5, r8
   10856:	46a1      	mov	r9, r4
   10858:	4688      	mov	r8, r1
   1085a:	4604      	mov	r4, r0
   1085c:	3201      	adds	r2, #1
   1085e:	445c      	add	r4, fp
   10860:	2a07      	cmp	r2, #7
   10862:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   10866:	f8c8 9000 	str.w	r9, [r8]
   1086a:	f8c8 b004 	str.w	fp, [r8, #4]
   1086e:	f300 8391 	bgt.w	10f94 <_vfprintf_r+0x1004>
   10872:	f108 0808 	add.w	r8, r8, #8
   10876:	e52c      	b.n	102d2 <_vfprintf_r+0x342>
   10878:	f1bb 0f10 	cmp.w	fp, #16
   1087c:	f340 84e3 	ble.w	11246 <_vfprintf_r+0x12b6>
   10880:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 10a4c <_vfprintf_r+0xabc>
   10884:	4641      	mov	r1, r8
   10886:	4620      	mov	r0, r4
   10888:	46a8      	mov	r8, r5
   1088a:	464c      	mov	r4, r9
   1088c:	2310      	movs	r3, #16
   1088e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   10890:	9d07      	ldr	r5, [sp, #28]
   10892:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
   10896:	e006      	b.n	108a6 <_vfprintf_r+0x916>
   10898:	f1ab 0b10 	sub.w	fp, fp, #16
   1089c:	f1bb 0f10 	cmp.w	fp, #16
   108a0:	f101 0108 	add.w	r1, r1, #8
   108a4:	dd19      	ble.n	108da <_vfprintf_r+0x94a>
   108a6:	3201      	adds	r2, #1
   108a8:	3010      	adds	r0, #16
   108aa:	2a07      	cmp	r2, #7
   108ac:	e9c1 4300 	strd	r4, r3, [r1]
   108b0:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   108b4:	ddf0      	ble.n	10898 <_vfprintf_r+0x908>
   108b6:	4629      	mov	r1, r5
   108b8:	4648      	mov	r0, r9
   108ba:	aa28      	add	r2, sp, #160	; 0xa0
   108bc:	f7fe fc42 	bl	f144 <__sprint_r>
   108c0:	2800      	cmp	r0, #0
   108c2:	f47f ac9a 	bne.w	101fa <_vfprintf_r+0x26a>
   108c6:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   108ca:	f1ab 0b10 	sub.w	fp, fp, #16
   108ce:	f1bb 0f10 	cmp.w	fp, #16
   108d2:	f04f 0310 	mov.w	r3, #16
   108d6:	a92b      	add	r1, sp, #172	; 0xac
   108d8:	dce5      	bgt.n	108a6 <_vfprintf_r+0x916>
   108da:	4645      	mov	r5, r8
   108dc:	46a1      	mov	r9, r4
   108de:	4688      	mov	r8, r1
   108e0:	4604      	mov	r4, r0
   108e2:	3201      	adds	r2, #1
   108e4:	445c      	add	r4, fp
   108e6:	2a07      	cmp	r2, #7
   108e8:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   108ec:	f8c8 9000 	str.w	r9, [r8]
   108f0:	f8c8 b004 	str.w	fp, [r8, #4]
   108f4:	f300 81d2 	bgt.w	10c9c <_vfprintf_r+0xd0c>
   108f8:	f108 0808 	add.w	r8, r8, #8
   108fc:	e4f1      	b.n	102e2 <_vfprintf_r+0x352>
   108fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10900:	2b01      	cmp	r3, #1
   10902:	f340 8182 	ble.w	10c0a <_vfprintf_r+0xc7a>
   10906:	2301      	movs	r3, #1
   10908:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   1090a:	3401      	adds	r4, #1
   1090c:	441e      	add	r6, r3
   1090e:	2e07      	cmp	r6, #7
   10910:	f8c8 5000 	str.w	r5, [r8]
   10914:	942a      	str	r4, [sp, #168]	; 0xa8
   10916:	f8c8 3004 	str.w	r3, [r8, #4]
   1091a:	9629      	str	r6, [sp, #164]	; 0xa4
   1091c:	f300 836c 	bgt.w	10ff8 <_vfprintf_r+0x1068>
   10920:	f108 0808 	add.w	r8, r8, #8
   10924:	9b16      	ldr	r3, [sp, #88]	; 0x58
   10926:	3601      	adds	r6, #1
   10928:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   1092a:	441c      	add	r4, r3
   1092c:	2e07      	cmp	r6, #7
   1092e:	e9c8 2300 	strd	r2, r3, [r8]
   10932:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   10936:	f300 836c 	bgt.w	11012 <_vfprintf_r+0x1082>
   1093a:	f108 0808 	add.w	r8, r8, #8
   1093e:	2200      	movs	r2, #0
   10940:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   10944:	2300      	movs	r3, #0
   10946:	f005 fbc9 	bl	160dc <__aeabi_dcmpeq>
   1094a:	2800      	cmp	r0, #0
   1094c:	f040 817a 	bne.w	10c44 <_vfprintf_r+0xcb4>
   10950:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10952:	3601      	adds	r6, #1
   10954:	3b01      	subs	r3, #1
   10956:	3501      	adds	r5, #1
   10958:	441c      	add	r4, r3
   1095a:	2e07      	cmp	r6, #7
   1095c:	f8c8 5000 	str.w	r5, [r8]
   10960:	9629      	str	r6, [sp, #164]	; 0xa4
   10962:	f8c8 3004 	str.w	r3, [r8, #4]
   10966:	942a      	str	r4, [sp, #168]	; 0xa8
   10968:	f300 815f 	bgt.w	10c2a <_vfprintf_r+0xc9a>
   1096c:	f108 0808 	add.w	r8, r8, #8
   10970:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   10972:	3601      	adds	r6, #1
   10974:	441c      	add	r4, r3
   10976:	f8c8 3004 	str.w	r3, [r8, #4]
   1097a:	2e07      	cmp	r6, #7
   1097c:	ab24      	add	r3, sp, #144	; 0x90
   1097e:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   10982:	f8c8 3000 	str.w	r3, [r8]
   10986:	f77f acbc 	ble.w	10302 <_vfprintf_r+0x372>
   1098a:	9907      	ldr	r1, [sp, #28]
   1098c:	9809      	ldr	r0, [sp, #36]	; 0x24
   1098e:	aa28      	add	r2, sp, #160	; 0xa0
   10990:	f7fe fbd8 	bl	f144 <__sprint_r>
   10994:	2800      	cmp	r0, #0
   10996:	f47f ac30 	bne.w	101fa <_vfprintf_r+0x26a>
   1099a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   1099c:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   109a0:	e4b1      	b.n	10306 <_vfprintf_r+0x376>
   109a2:	f1b9 0f10 	cmp.w	r9, #16
   109a6:	f340 86c6 	ble.w	11736 <_vfprintf_r+0x17a6>
   109aa:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   109ae:	4640      	mov	r0, r8
   109b0:	e9cd 361d 	strd	r3, r6, [sp, #116]	; 0x74
   109b4:	46b8      	mov	r8, r7
   109b6:	2410      	movs	r4, #16
   109b8:	464f      	mov	r7, r9
   109ba:	9e07      	ldr	r6, [sp, #28]
   109bc:	46a9      	mov	r9, r5
   109be:	9d09      	ldr	r5, [sp, #36]	; 0x24
   109c0:	e004      	b.n	109cc <_vfprintf_r+0xa3c>
   109c2:	3f10      	subs	r7, #16
   109c4:	2f10      	cmp	r7, #16
   109c6:	f100 0008 	add.w	r0, r0, #8
   109ca:	dd16      	ble.n	109fa <_vfprintf_r+0xa6a>
   109cc:	3201      	adds	r2, #1
   109ce:	4b20      	ldr	r3, [pc, #128]	; (10a50 <_vfprintf_r+0xac0>)
   109d0:	3110      	adds	r1, #16
   109d2:	2a07      	cmp	r2, #7
   109d4:	e9c0 3400 	strd	r3, r4, [r0]
   109d8:	e9cd 2129 	strd	r2, r1, [sp, #164]	; 0xa4
   109dc:	ddf1      	ble.n	109c2 <_vfprintf_r+0xa32>
   109de:	4631      	mov	r1, r6
   109e0:	4628      	mov	r0, r5
   109e2:	aa28      	add	r2, sp, #160	; 0xa0
   109e4:	f7fe fbae 	bl	f144 <__sprint_r>
   109e8:	2800      	cmp	r0, #0
   109ea:	f47f ac06 	bne.w	101fa <_vfprintf_r+0x26a>
   109ee:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   109f2:	3f10      	subs	r7, #16
   109f4:	2f10      	cmp	r7, #16
   109f6:	a82b      	add	r0, sp, #172	; 0xac
   109f8:	dce8      	bgt.n	109cc <_vfprintf_r+0xa3c>
   109fa:	464d      	mov	r5, r9
   109fc:	e9dd 361d 	ldrd	r3, r6, [sp, #116]	; 0x74
   10a00:	46b9      	mov	r9, r7
   10a02:	4647      	mov	r7, r8
   10a04:	4680      	mov	r8, r0
   10a06:	eb09 0401 	add.w	r4, r9, r1
   10a0a:	3201      	adds	r2, #1
   10a0c:	4910      	ldr	r1, [pc, #64]	; (10a50 <_vfprintf_r+0xac0>)
   10a0e:	2a07      	cmp	r2, #7
   10a10:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   10a14:	f8c8 9004 	str.w	r9, [r8, #4]
   10a18:	f8c8 1000 	str.w	r1, [r8]
   10a1c:	f300 8340 	bgt.w	110a0 <_vfprintf_r+0x1110>
   10a20:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   10a24:	f108 0808 	add.w	r8, r8, #8
   10a28:	e42c      	b.n	10284 <_vfprintf_r+0x2f4>
   10a2a:	46bb      	mov	fp, r7
   10a2c:	2c0a      	cmp	r4, #10
   10a2e:	f179 0300 	sbcs.w	r3, r9, #0
   10a32:	f080 82fb 	bcs.w	1102c <_vfprintf_r+0x109c>
   10a36:	2301      	movs	r3, #1
   10a38:	3430      	adds	r4, #48	; 0x30
   10a3a:	465f      	mov	r7, fp
   10a3c:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
   10a40:	930c      	str	r3, [sp, #48]	; 0x30
   10a42:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   10a46:	e643      	b.n	106d0 <_vfprintf_r+0x740>
   10a48:	00019ff8 	.word	0x00019ff8
   10a4c:	0001a04c 	.word	0x0001a04c
   10a50:	0001a03c 	.word	0x0001a03c
   10a54:	9907      	ldr	r1, [sp, #28]
   10a56:	9809      	ldr	r0, [sp, #36]	; 0x24
   10a58:	aa28      	add	r2, sp, #160	; 0xa0
   10a5a:	931d      	str	r3, [sp, #116]	; 0x74
   10a5c:	f7fe fb72 	bl	f144 <__sprint_r>
   10a60:	2800      	cmp	r0, #0
   10a62:	f47f abca 	bne.w	101fa <_vfprintf_r+0x26a>
   10a66:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10a68:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   10a6a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10a6e:	e41b      	b.n	102a8 <_vfprintf_r+0x318>
   10a70:	9907      	ldr	r1, [sp, #28]
   10a72:	9809      	ldr	r0, [sp, #36]	; 0x24
   10a74:	aa28      	add	r2, sp, #160	; 0xa0
   10a76:	f7fe fb65 	bl	f144 <__sprint_r>
   10a7a:	2800      	cmp	r0, #0
   10a7c:	f47f abbd 	bne.w	101fa <_vfprintf_r+0x26a>
   10a80:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10a82:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10a86:	e420      	b.n	102ca <_vfprintf_r+0x33a>
   10a88:	2d10      	cmp	r5, #16
   10a8a:	f340 86be 	ble.w	1180a <_vfprintf_r+0x187a>
   10a8e:	2610      	movs	r6, #16
   10a90:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10a92:	9f09      	ldr	r7, [sp, #36]	; 0x24
   10a94:	f8dd 901c 	ldr.w	r9, [sp, #28]
   10a98:	e004      	b.n	10aa4 <_vfprintf_r+0xb14>
   10a9a:	3d10      	subs	r5, #16
   10a9c:	2d10      	cmp	r5, #16
   10a9e:	f108 0808 	add.w	r8, r8, #8
   10aa2:	dd17      	ble.n	10ad4 <_vfprintf_r+0xb44>
   10aa4:	3301      	adds	r3, #1
   10aa6:	4aba      	ldr	r2, [pc, #744]	; (10d90 <_vfprintf_r+0xe00>)
   10aa8:	3410      	adds	r4, #16
   10aaa:	2b07      	cmp	r3, #7
   10aac:	e9c8 2600 	strd	r2, r6, [r8]
   10ab0:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   10ab4:	ddf1      	ble.n	10a9a <_vfprintf_r+0xb0a>
   10ab6:	4649      	mov	r1, r9
   10ab8:	4638      	mov	r0, r7
   10aba:	aa28      	add	r2, sp, #160	; 0xa0
   10abc:	f7fe fb42 	bl	f144 <__sprint_r>
   10ac0:	2800      	cmp	r0, #0
   10ac2:	f47f ab9a 	bne.w	101fa <_vfprintf_r+0x26a>
   10ac6:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
   10aca:	3d10      	subs	r5, #16
   10acc:	2d10      	cmp	r5, #16
   10ace:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10ad2:	dce7      	bgt.n	10aa4 <_vfprintf_r+0xb14>
   10ad4:	3301      	adds	r3, #1
   10ad6:	4aae      	ldr	r2, [pc, #696]	; (10d90 <_vfprintf_r+0xe00>)
   10ad8:	442c      	add	r4, r5
   10ada:	2b07      	cmp	r3, #7
   10adc:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   10ae0:	f8c8 5004 	str.w	r5, [r8, #4]
   10ae4:	f8c8 2000 	str.w	r2, [r8]
   10ae8:	f77f ac15 	ble.w	10316 <_vfprintf_r+0x386>
   10aec:	9907      	ldr	r1, [sp, #28]
   10aee:	9809      	ldr	r0, [sp, #36]	; 0x24
   10af0:	aa28      	add	r2, sp, #160	; 0xa0
   10af2:	f7fe fb27 	bl	f144 <__sprint_r>
   10af6:	2800      	cmp	r0, #0
   10af8:	f47f ab7f 	bne.w	101fa <_vfprintf_r+0x26a>
   10afc:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10afe:	e40a      	b.n	10316 <_vfprintf_r+0x386>
   10b00:	9922      	ldr	r1, [sp, #136]	; 0x88
   10b02:	2900      	cmp	r1, #0
   10b04:	f340 8110 	ble.w	10d28 <_vfprintf_r+0xd98>
   10b08:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   10b0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10b0e:	4599      	cmp	r9, r3
   10b10:	bfa8      	it	ge
   10b12:	4699      	movge	r9, r3
   10b14:	f1b9 0f00 	cmp.w	r9, #0
   10b18:	dd0b      	ble.n	10b32 <_vfprintf_r+0xba2>
   10b1a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10b1c:	444c      	add	r4, r9
   10b1e:	3301      	adds	r3, #1
   10b20:	2b07      	cmp	r3, #7
   10b22:	e9c8 5900 	strd	r5, r9, [r8]
   10b26:	942a      	str	r4, [sp, #168]	; 0xa8
   10b28:	9329      	str	r3, [sp, #164]	; 0xa4
   10b2a:	f300 8581 	bgt.w	11630 <_vfprintf_r+0x16a0>
   10b2e:	f108 0808 	add.w	r8, r8, #8
   10b32:	9e10      	ldr	r6, [sp, #64]	; 0x40
   10b34:	f1b9 0f00 	cmp.w	r9, #0
   10b38:	bfa8      	it	ge
   10b3a:	eba6 0609 	subge.w	r6, r6, r9
   10b3e:	2e00      	cmp	r6, #0
   10b40:	f300 82f5 	bgt.w	1112e <_vfprintf_r+0x119e>
   10b44:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   10b48:	0579      	lsls	r1, r7, #21
   10b4a:	44ab      	add	fp, r5
   10b4c:	f100 84ac 	bmi.w	114a8 <_vfprintf_r+0x1518>
   10b50:	9b22      	ldr	r3, [sp, #136]	; 0x88
   10b52:	9a12      	ldr	r2, [sp, #72]	; 0x48
   10b54:	4293      	cmp	r3, r2
   10b56:	db02      	blt.n	10b5e <_vfprintf_r+0xbce>
   10b58:	07fa      	lsls	r2, r7, #31
   10b5a:	f140 8392 	bpl.w	11282 <_vfprintf_r+0x12f2>
   10b5e:	9a16      	ldr	r2, [sp, #88]	; 0x58
   10b60:	9917      	ldr	r1, [sp, #92]	; 0x5c
   10b62:	4414      	add	r4, r2
   10b64:	e9c8 1200 	strd	r1, r2, [r8]
   10b68:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   10b6a:	942a      	str	r4, [sp, #168]	; 0xa8
   10b6c:	3201      	adds	r2, #1
   10b6e:	2a07      	cmp	r2, #7
   10b70:	9229      	str	r2, [sp, #164]	; 0xa4
   10b72:	f300 85a8 	bgt.w	116c6 <_vfprintf_r+0x1736>
   10b76:	f108 0808 	add.w	r8, r8, #8
   10b7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   10b7c:	18ae      	adds	r6, r5, r2
   10b7e:	eba6 060b 	sub.w	r6, r6, fp
   10b82:	1ad5      	subs	r5, r2, r3
   10b84:	42ae      	cmp	r6, r5
   10b86:	bfa8      	it	ge
   10b88:	462e      	movge	r6, r5
   10b8a:	2e00      	cmp	r6, #0
   10b8c:	dd0d      	ble.n	10baa <_vfprintf_r+0xc1a>
   10b8e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10b90:	4434      	add	r4, r6
   10b92:	3301      	adds	r3, #1
   10b94:	2b07      	cmp	r3, #7
   10b96:	f8c8 b000 	str.w	fp, [r8]
   10b9a:	f8c8 6004 	str.w	r6, [r8, #4]
   10b9e:	942a      	str	r4, [sp, #168]	; 0xa8
   10ba0:	9329      	str	r3, [sp, #164]	; 0xa4
   10ba2:	f300 85fc 	bgt.w	1179e <_vfprintf_r+0x180e>
   10ba6:	f108 0808 	add.w	r8, r8, #8
   10baa:	2e00      	cmp	r6, #0
   10bac:	bfa8      	it	ge
   10bae:	1bad      	subge	r5, r5, r6
   10bb0:	2d00      	cmp	r5, #0
   10bb2:	f77f aba8 	ble.w	10306 <_vfprintf_r+0x376>
   10bb6:	2d10      	cmp	r5, #16
   10bb8:	f340 8749 	ble.w	11a4e <_vfprintf_r+0x1abe>
   10bbc:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 10d94 <_vfprintf_r+0xe04>
   10bc0:	4622      	mov	r2, r4
   10bc2:	4649      	mov	r1, r9
   10bc4:	2610      	movs	r6, #16
   10bc6:	46b9      	mov	r9, r7
   10bc8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10bca:	460f      	mov	r7, r1
   10bcc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   10bd0:	9c07      	ldr	r4, [sp, #28]
   10bd2:	e005      	b.n	10be0 <_vfprintf_r+0xc50>
   10bd4:	f108 0808 	add.w	r8, r8, #8
   10bd8:	3d10      	subs	r5, #16
   10bda:	2d10      	cmp	r5, #16
   10bdc:	f340 8289 	ble.w	110f2 <_vfprintf_r+0x1162>
   10be0:	3301      	adds	r3, #1
   10be2:	3210      	adds	r2, #16
   10be4:	2b07      	cmp	r3, #7
   10be6:	e9c8 7600 	strd	r7, r6, [r8]
   10bea:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   10bee:	ddf1      	ble.n	10bd4 <_vfprintf_r+0xc44>
   10bf0:	4621      	mov	r1, r4
   10bf2:	4658      	mov	r0, fp
   10bf4:	aa28      	add	r2, sp, #160	; 0xa0
   10bf6:	f7fe faa5 	bl	f144 <__sprint_r>
   10bfa:	2800      	cmp	r0, #0
   10bfc:	f47f aafd 	bne.w	101fa <_vfprintf_r+0x26a>
   10c00:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   10c04:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10c08:	e7e6      	b.n	10bd8 <_vfprintf_r+0xc48>
   10c0a:	07fe      	lsls	r6, r7, #31
   10c0c:	f53f ae7b 	bmi.w	10906 <_vfprintf_r+0x976>
   10c10:	2301      	movs	r3, #1
   10c12:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   10c14:	3401      	adds	r4, #1
   10c16:	441e      	add	r6, r3
   10c18:	2e07      	cmp	r6, #7
   10c1a:	f8c8 5000 	str.w	r5, [r8]
   10c1e:	942a      	str	r4, [sp, #168]	; 0xa8
   10c20:	f8c8 3004 	str.w	r3, [r8, #4]
   10c24:	9629      	str	r6, [sp, #164]	; 0xa4
   10c26:	f77f aea1 	ble.w	1096c <_vfprintf_r+0x9dc>
   10c2a:	9907      	ldr	r1, [sp, #28]
   10c2c:	9809      	ldr	r0, [sp, #36]	; 0x24
   10c2e:	aa28      	add	r2, sp, #160	; 0xa0
   10c30:	f7fe fa88 	bl	f144 <__sprint_r>
   10c34:	2800      	cmp	r0, #0
   10c36:	f47f aae0 	bne.w	101fa <_vfprintf_r+0x26a>
   10c3a:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   10c3e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10c42:	e695      	b.n	10970 <_vfprintf_r+0x9e0>
   10c44:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10c46:	1e5d      	subs	r5, r3, #1
   10c48:	2d00      	cmp	r5, #0
   10c4a:	f77f ae91 	ble.w	10970 <_vfprintf_r+0x9e0>
   10c4e:	2d10      	cmp	r5, #16
   10c50:	f340 8719 	ble.w	11a86 <_vfprintf_r+0x1af6>
   10c54:	4622      	mov	r2, r4
   10c56:	9708      	str	r7, [sp, #32]
   10c58:	f04f 0b10 	mov.w	fp, #16
   10c5c:	f8df 9134 	ldr.w	r9, [pc, #308]	; 10d94 <_vfprintf_r+0xe04>
   10c60:	9c09      	ldr	r4, [sp, #36]	; 0x24
   10c62:	9f07      	ldr	r7, [sp, #28]
   10c64:	e005      	b.n	10c72 <_vfprintf_r+0xce2>
   10c66:	f108 0808 	add.w	r8, r8, #8
   10c6a:	3d10      	subs	r5, #16
   10c6c:	2d10      	cmp	r5, #16
   10c6e:	f340 82c7 	ble.w	11200 <_vfprintf_r+0x1270>
   10c72:	3601      	adds	r6, #1
   10c74:	3210      	adds	r2, #16
   10c76:	2e07      	cmp	r6, #7
   10c78:	e9c8 9b00 	strd	r9, fp, [r8]
   10c7c:	e9cd 6229 	strd	r6, r2, [sp, #164]	; 0xa4
   10c80:	ddf1      	ble.n	10c66 <_vfprintf_r+0xcd6>
   10c82:	4639      	mov	r1, r7
   10c84:	4620      	mov	r0, r4
   10c86:	aa28      	add	r2, sp, #160	; 0xa0
   10c88:	f7fe fa5c 	bl	f144 <__sprint_r>
   10c8c:	2800      	cmp	r0, #0
   10c8e:	f47f aab4 	bne.w	101fa <_vfprintf_r+0x26a>
   10c92:	e9dd 6229 	ldrd	r6, r2, [sp, #164]	; 0xa4
   10c96:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10c9a:	e7e6      	b.n	10c6a <_vfprintf_r+0xcda>
   10c9c:	9907      	ldr	r1, [sp, #28]
   10c9e:	9809      	ldr	r0, [sp, #36]	; 0x24
   10ca0:	aa28      	add	r2, sp, #160	; 0xa0
   10ca2:	f7fe fa4f 	bl	f144 <__sprint_r>
   10ca6:	2800      	cmp	r0, #0
   10ca8:	f47f aaa7 	bne.w	101fa <_vfprintf_r+0x26a>
   10cac:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10cae:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10cb2:	f7ff bb16 	b.w	102e2 <_vfprintf_r+0x352>
   10cb6:	f017 0310 	ands.w	r3, r7, #16
   10cba:	d177      	bne.n	10dac <_vfprintf_r+0xe1c>
   10cbc:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   10cc0:	f000 82ac 	beq.w	1121c <_vfprintf_r+0x128c>
   10cc4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   10cc6:	4699      	mov	r9, r3
   10cc8:	f852 4b04 	ldr.w	r4, [r2], #4
   10ccc:	920e      	str	r2, [sp, #56]	; 0x38
   10cce:	b2a4      	uxth	r4, r4
   10cd0:	e408      	b.n	104e4 <_vfprintf_r+0x554>
   10cd2:	f01b 0310 	ands.w	r3, fp, #16
   10cd6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   10cd8:	d154      	bne.n	10d84 <_vfprintf_r+0xdf4>
   10cda:	f01b 0140 	ands.w	r1, fp, #64	; 0x40
   10cde:	d04d      	beq.n	10d7c <_vfprintf_r+0xdec>
   10ce0:	f852 4b04 	ldr.w	r4, [r2], #4
   10ce4:	4699      	mov	r9, r3
   10ce6:	920e      	str	r2, [sp, #56]	; 0x38
   10ce8:	2301      	movs	r3, #1
   10cea:	b2a4      	uxth	r4, r4
   10cec:	f7ff bbfd 	b.w	104ea <_vfprintf_r+0x55a>
   10cf0:	f853 4b04 	ldr.w	r4, [r3], #4
   10cf4:	930e      	str	r3, [sp, #56]	; 0x38
   10cf6:	06fb      	lsls	r3, r7, #27
   10cf8:	d453      	bmi.n	10da2 <_vfprintf_r+0xe12>
   10cfa:	067d      	lsls	r5, r7, #25
   10cfc:	d54e      	bpl.n	10d9c <_vfprintf_r+0xe0c>
   10cfe:	f344 39c0 	sbfx	r9, r4, #15, #1
   10d02:	464b      	mov	r3, r9
   10d04:	b224      	sxth	r4, r4
   10d06:	f7ff bb8e 	b.w	10426 <_vfprintf_r+0x496>
   10d0a:	232d      	movs	r3, #45	; 0x2d
   10d0c:	4264      	negs	r4, r4
   10d0e:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   10d12:	46bb      	mov	fp, r7
   10d14:	f04f 0301 	mov.w	r3, #1
   10d18:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
   10d1c:	f7ff bbe8 	b.w	104f0 <_vfprintf_r+0x560>
   10d20:	07f8      	lsls	r0, r7, #31
   10d22:	f57f aaf0 	bpl.w	10306 <_vfprintf_r+0x376>
   10d26:	e51f      	b.n	10768 <_vfprintf_r+0x7d8>
   10d28:	2301      	movs	r3, #1
   10d2a:	f8c8 3004 	str.w	r3, [r8, #4]
   10d2e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10d30:	4a19      	ldr	r2, [pc, #100]	; (10d98 <_vfprintf_r+0xe08>)
   10d32:	3301      	adds	r3, #1
   10d34:	3401      	adds	r4, #1
   10d36:	2b07      	cmp	r3, #7
   10d38:	942a      	str	r4, [sp, #168]	; 0xa8
   10d3a:	9329      	str	r3, [sp, #164]	; 0xa4
   10d3c:	f8c8 2000 	str.w	r2, [r8]
   10d40:	f300 8468 	bgt.w	11614 <_vfprintf_r+0x1684>
   10d44:	f108 0808 	add.w	r8, r8, #8
   10d48:	2900      	cmp	r1, #0
   10d4a:	f040 8225 	bne.w	11198 <_vfprintf_r+0x1208>
   10d4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   10d50:	f007 0301 	and.w	r3, r7, #1
   10d54:	4313      	orrs	r3, r2
   10d56:	f43f aad6 	beq.w	10306 <_vfprintf_r+0x376>
   10d5a:	9b16      	ldr	r3, [sp, #88]	; 0x58
   10d5c:	9917      	ldr	r1, [sp, #92]	; 0x5c
   10d5e:	18e2      	adds	r2, r4, r3
   10d60:	e9c8 1300 	strd	r1, r3, [r8]
   10d64:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   10d66:	922a      	str	r2, [sp, #168]	; 0xa8
   10d68:	3301      	adds	r3, #1
   10d6a:	2b07      	cmp	r3, #7
   10d6c:	9329      	str	r3, [sp, #164]	; 0xa4
   10d6e:	f300 8350 	bgt.w	11412 <_vfprintf_r+0x1482>
   10d72:	f108 0808 	add.w	r8, r8, #8
   10d76:	e220      	b.n	111ba <_vfprintf_r+0x122a>
   10d78:	ad54      	add	r5, sp, #336	; 0x150
   10d7a:	e4a9      	b.n	106d0 <_vfprintf_r+0x740>
   10d7c:	f41b 7900 	ands.w	r9, fp, #512	; 0x200
   10d80:	f040 82a0 	bne.w	112c4 <_vfprintf_r+0x1334>
   10d84:	f852 4b04 	ldr.w	r4, [r2], #4
   10d88:	2301      	movs	r3, #1
   10d8a:	920e      	str	r2, [sp, #56]	; 0x38
   10d8c:	f7ff bbad 	b.w	104ea <_vfprintf_r+0x55a>
   10d90:	0001a03c 	.word	0x0001a03c
   10d94:	0001a04c 	.word	0x0001a04c
   10d98:	00019ff8 	.word	0x00019ff8
   10d9c:	05b8      	lsls	r0, r7, #22
   10d9e:	f100 8279 	bmi.w	11294 <_vfprintf_r+0x1304>
   10da2:	ea4f 79e4 	mov.w	r9, r4, asr #31
   10da6:	464b      	mov	r3, r9
   10da8:	f7ff bb3d 	b.w	10426 <_vfprintf_r+0x496>
   10dac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10dae:	f853 4b04 	ldr.w	r4, [r3], #4
   10db2:	930e      	str	r3, [sp, #56]	; 0x38
   10db4:	f7ff bb96 	b.w	104e4 <_vfprintf_r+0x554>
   10db8:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   10dbc:	4602      	mov	r2, r0
   10dbe:	460b      	mov	r3, r1
   10dc0:	f7f9 fbc4 	bl	a54c <__aeabi_dcmpun>
   10dc4:	2800      	cmp	r0, #0
   10dc6:	f040 85f7 	bne.w	119b8 <_vfprintf_r+0x1a28>
   10dca:	2e61      	cmp	r6, #97	; 0x61
   10dcc:	f000 856c 	beq.w	118a8 <_vfprintf_r+0x1918>
   10dd0:	2e41      	cmp	r6, #65	; 0x41
   10dd2:	f000 827f 	beq.w	112d4 <_vfprintf_r+0x1344>
   10dd6:	9b08      	ldr	r3, [sp, #32]
   10dd8:	3301      	adds	r3, #1
   10dda:	f000 8594 	beq.w	11906 <_vfprintf_r+0x1976>
   10dde:	f026 0320 	bic.w	r3, r6, #32
   10de2:	2b47      	cmp	r3, #71	; 0x47
   10de4:	9306      	str	r3, [sp, #24]
   10de6:	f000 857b 	beq.w	118e0 <_vfprintf_r+0x1950>
   10dea:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   10dee:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   10df2:	930f      	str	r3, [sp, #60]	; 0x3c
   10df4:	4613      	mov	r3, r2
   10df6:	2b00      	cmp	r3, #0
   10df8:	f2c0 85f4 	blt.w	119e4 <_vfprintf_r+0x1a54>
   10dfc:	930c      	str	r3, [sp, #48]	; 0x30
   10dfe:	2300      	movs	r3, #0
   10e00:	468b      	mov	fp, r1
   10e02:	931d      	str	r3, [sp, #116]	; 0x74
   10e04:	930d      	str	r3, [sp, #52]	; 0x34
   10e06:	9b06      	ldr	r3, [sp, #24]
   10e08:	2b46      	cmp	r3, #70	; 0x46
   10e0a:	f000 842b 	beq.w	11664 <_vfprintf_r+0x16d4>
   10e0e:	2b45      	cmp	r3, #69	; 0x45
   10e10:	f000 8514 	beq.w	1183c <_vfprintf_r+0x18ac>
   10e14:	9908      	ldr	r1, [sp, #32]
   10e16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   10e18:	9101      	str	r1, [sp, #4]
   10e1a:	2102      	movs	r1, #2
   10e1c:	9100      	str	r1, [sp, #0]
   10e1e:	a926      	add	r1, sp, #152	; 0x98
   10e20:	9104      	str	r1, [sp, #16]
   10e22:	a923      	add	r1, sp, #140	; 0x8c
   10e24:	9103      	str	r1, [sp, #12]
   10e26:	a922      	add	r1, sp, #136	; 0x88
   10e28:	465a      	mov	r2, fp
   10e2a:	9809      	ldr	r0, [sp, #36]	; 0x24
   10e2c:	9102      	str	r1, [sp, #8]
   10e2e:	f001 f897 	bl	11f60 <_dtoa_r>
   10e32:	9b06      	ldr	r3, [sp, #24]
   10e34:	4605      	mov	r5, r0
   10e36:	2b47      	cmp	r3, #71	; 0x47
   10e38:	f040 8644 	bne.w	11ac4 <_vfprintf_r+0x1b34>
   10e3c:	f017 0f01 	tst.w	r7, #1
   10e40:	46b9      	mov	r9, r7
   10e42:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   10e44:	f040 84f7 	bne.w	11836 <_vfprintf_r+0x18a6>
   10e48:	9b26      	ldr	r3, [sp, #152]	; 0x98
   10e4a:	1b5b      	subs	r3, r3, r5
   10e4c:	9312      	str	r3, [sp, #72]	; 0x48
   10e4e:	9b06      	ldr	r3, [sp, #24]
   10e50:	2b47      	cmp	r3, #71	; 0x47
   10e52:	f000 82f1 	beq.w	11438 <_vfprintf_r+0x14a8>
   10e56:	9b06      	ldr	r3, [sp, #24]
   10e58:	2b46      	cmp	r3, #70	; 0x46
   10e5a:	f000 8442 	beq.w	116e2 <_vfprintf_r+0x1752>
   10e5e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   10e60:	9310      	str	r3, [sp, #64]	; 0x40
   10e62:	9b10      	ldr	r3, [sp, #64]	; 0x40
   10e64:	9a06      	ldr	r2, [sp, #24]
   10e66:	3b01      	subs	r3, #1
   10e68:	2a41      	cmp	r2, #65	; 0x41
   10e6a:	9322      	str	r3, [sp, #136]	; 0x88
   10e6c:	f000 858a 	beq.w	11984 <_vfprintf_r+0x19f4>
   10e70:	2100      	movs	r1, #0
   10e72:	b2f2      	uxtb	r2, r6
   10e74:	2b00      	cmp	r3, #0
   10e76:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
   10e7a:	bfb6      	itet	lt
   10e7c:	222d      	movlt	r2, #45	; 0x2d
   10e7e:	222b      	movge	r2, #43	; 0x2b
   10e80:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
   10e82:	f88d 2091 	strb.w	r2, [sp, #145]	; 0x91
   10e86:	bfb8      	it	lt
   10e88:	f1c3 0301 	rsblt	r3, r3, #1
   10e8c:	2b09      	cmp	r3, #9
   10e8e:	f340 8581 	ble.w	11994 <_vfprintf_r+0x1a04>
   10e92:	f10d 0c9f 	add.w	ip, sp, #159	; 0x9f
   10e96:	4662      	mov	r2, ip
   10e98:	4fba      	ldr	r7, [pc, #744]	; (11184 <_vfprintf_r+0x11f4>)
   10e9a:	461c      	mov	r4, r3
   10e9c:	4610      	mov	r0, r2
   10e9e:	fb87 1203 	smull	r1, r2, r7, r3
   10ea2:	17d9      	asrs	r1, r3, #31
   10ea4:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
   10ea8:	eb01 0281 	add.w	r2, r1, r1, lsl #2
   10eac:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   10eb0:	3230      	adds	r2, #48	; 0x30
   10eb2:	2c63      	cmp	r4, #99	; 0x63
   10eb4:	f800 2c01 	strb.w	r2, [r0, #-1]
   10eb8:	460b      	mov	r3, r1
   10eba:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   10ebe:	dcec      	bgt.n	10e9a <_vfprintf_r+0xf0a>
   10ec0:	3330      	adds	r3, #48	; 0x30
   10ec2:	1e81      	subs	r1, r0, #2
   10ec4:	b2db      	uxtb	r3, r3
   10ec6:	458c      	cmp	ip, r1
   10ec8:	f802 3c01 	strb.w	r3, [r2, #-1]
   10ecc:	f240 85ff 	bls.w	11ace <_vfprintf_r+0x1b3e>
   10ed0:	f10d 0192 	add.w	r1, sp, #146	; 0x92
   10ed4:	e001      	b.n	10eda <_vfprintf_r+0xf4a>
   10ed6:	f812 3b01 	ldrb.w	r3, [r2], #1
   10eda:	4594      	cmp	ip, r2
   10edc:	f801 3b01 	strb.w	r3, [r1], #1
   10ee0:	d1f9      	bne.n	10ed6 <_vfprintf_r+0xf46>
   10ee2:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
   10ee6:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   10eea:	1a1b      	subs	r3, r3, r0
   10eec:	4413      	add	r3, r2
   10eee:	aa24      	add	r2, sp, #144	; 0x90
   10ef0:	1a9b      	subs	r3, r3, r2
   10ef2:	931a      	str	r3, [sp, #104]	; 0x68
   10ef4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   10ef6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   10ef8:	2b01      	cmp	r3, #1
   10efa:	441a      	add	r2, r3
   10efc:	920c      	str	r2, [sp, #48]	; 0x30
   10efe:	f340 859e 	ble.w	11a3e <_vfprintf_r+0x1aae>
   10f02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   10f04:	9a16      	ldr	r2, [sp, #88]	; 0x58
   10f06:	4413      	add	r3, r2
   10f08:	930c      	str	r3, [sp, #48]	; 0x30
   10f0a:	2300      	movs	r3, #0
   10f0c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   10f0e:	f429 6780 	bic.w	r7, r9, #1024	; 0x400
   10f12:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
   10f16:	f447 7780 	orr.w	r7, r7, #256	; 0x100
   10f1a:	930f      	str	r3, [sp, #60]	; 0x3c
   10f1c:	9206      	str	r2, [sp, #24]
   10f1e:	9313      	str	r3, [sp, #76]	; 0x4c
   10f20:	9310      	str	r3, [sp, #64]	; 0x40
   10f22:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   10f24:	2b00      	cmp	r3, #0
   10f26:	f040 82b0 	bne.w	1148a <_vfprintf_r+0x14fa>
   10f2a:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   10f2e:	9308      	str	r3, [sp, #32]
   10f30:	f7ff ba4f 	b.w	103d2 <_vfprintf_r+0x442>
   10f34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10f36:	980b      	ldr	r0, [sp, #44]	; 0x2c
   10f38:	f853 1b04 	ldr.w	r1, [r3], #4
   10f3c:	17c2      	asrs	r2, r0, #31
   10f3e:	4655      	mov	r5, sl
   10f40:	e9c1 0200 	strd	r0, r2, [r1]
   10f44:	930e      	str	r3, [sp, #56]	; 0x38
   10f46:	f7ff b9fc 	b.w	10342 <_vfprintf_r+0x3b2>
   10f4a:	4b8f      	ldr	r3, [pc, #572]	; (11188 <_vfprintf_r+0x11f8>)
   10f4c:	9318      	str	r3, [sp, #96]	; 0x60
   10f4e:	f017 0920 	ands.w	r9, r7, #32
   10f52:	d049      	beq.n	10fe8 <_vfprintf_r+0x1058>
   10f54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10f56:	3307      	adds	r3, #7
   10f58:	f023 0307 	bic.w	r3, r3, #7
   10f5c:	f8d3 9004 	ldr.w	r9, [r3, #4]
   10f60:	f853 4b08 	ldr.w	r4, [r3], #8
   10f64:	930e      	str	r3, [sp, #56]	; 0x38
   10f66:	07f8      	lsls	r0, r7, #31
   10f68:	d509      	bpl.n	10f7e <_vfprintf_r+0xfee>
   10f6a:	ea54 0309 	orrs.w	r3, r4, r9
   10f6e:	d006      	beq.n	10f7e <_vfprintf_r+0xfee>
   10f70:	2330      	movs	r3, #48	; 0x30
   10f72:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   10f76:	f047 0702 	orr.w	r7, r7, #2
   10f7a:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   10f7e:	2302      	movs	r3, #2
   10f80:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   10f84:	f7ff bab1 	b.w	104ea <_vfprintf_r+0x55a>
   10f88:	46bb      	mov	fp, r7
   10f8a:	f7ff bb0d 	b.w	105a8 <_vfprintf_r+0x618>
   10f8e:	4b7f      	ldr	r3, [pc, #508]	; (1118c <_vfprintf_r+0x11fc>)
   10f90:	9318      	str	r3, [sp, #96]	; 0x60
   10f92:	e7dc      	b.n	10f4e <_vfprintf_r+0xfbe>
   10f94:	9907      	ldr	r1, [sp, #28]
   10f96:	9809      	ldr	r0, [sp, #36]	; 0x24
   10f98:	aa28      	add	r2, sp, #160	; 0xa0
   10f9a:	f7fe f8d3 	bl	f144 <__sprint_r>
   10f9e:	2800      	cmp	r0, #0
   10fa0:	f47f a92b 	bne.w	101fa <_vfprintf_r+0x26a>
   10fa4:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10fa6:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10faa:	f7ff b992 	b.w	102d2 <_vfprintf_r+0x342>
   10fae:	9907      	ldr	r1, [sp, #28]
   10fb0:	9809      	ldr	r0, [sp, #36]	; 0x24
   10fb2:	aa28      	add	r2, sp, #160	; 0xa0
   10fb4:	f7fe f8c6 	bl	f144 <__sprint_r>
   10fb8:	2800      	cmp	r0, #0
   10fba:	f47f a91e 	bne.w	101fa <_vfprintf_r+0x26a>
   10fbe:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   10fc0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   10fc4:	f7ff bbde 	b.w	10784 <_vfprintf_r+0x7f4>
   10fc8:	2b06      	cmp	r3, #6
   10fca:	4629      	mov	r1, r5
   10fcc:	bf28      	it	cs
   10fce:	2306      	movcs	r3, #6
   10fd0:	462a      	mov	r2, r5
   10fd2:	9508      	str	r5, [sp, #32]
   10fd4:	950d      	str	r5, [sp, #52]	; 0x34
   10fd6:	9306      	str	r3, [sp, #24]
   10fd8:	4d6d      	ldr	r5, [pc, #436]	; (11190 <_vfprintf_r+0x1200>)
   10fda:	940e      	str	r4, [sp, #56]	; 0x38
   10fdc:	930c      	str	r3, [sp, #48]	; 0x30
   10fde:	910f      	str	r1, [sp, #60]	; 0x3c
   10fe0:	9113      	str	r1, [sp, #76]	; 0x4c
   10fe2:	9110      	str	r1, [sp, #64]	; 0x40
   10fe4:	f7ff b9f5 	b.w	103d2 <_vfprintf_r+0x442>
   10fe8:	f017 0310 	ands.w	r3, r7, #16
   10fec:	d069      	beq.n	110c2 <_vfprintf_r+0x1132>
   10fee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   10ff0:	f853 4b04 	ldr.w	r4, [r3], #4
   10ff4:	930e      	str	r3, [sp, #56]	; 0x38
   10ff6:	e7b6      	b.n	10f66 <_vfprintf_r+0xfd6>
   10ff8:	9907      	ldr	r1, [sp, #28]
   10ffa:	9809      	ldr	r0, [sp, #36]	; 0x24
   10ffc:	aa28      	add	r2, sp, #160	; 0xa0
   10ffe:	f7fe f8a1 	bl	f144 <__sprint_r>
   11002:	2800      	cmp	r0, #0
   11004:	f47f a8f9 	bne.w	101fa <_vfprintf_r+0x26a>
   11008:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   1100c:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   11010:	e488      	b.n	10924 <_vfprintf_r+0x994>
   11012:	9907      	ldr	r1, [sp, #28]
   11014:	9809      	ldr	r0, [sp, #36]	; 0x24
   11016:	aa28      	add	r2, sp, #160	; 0xa0
   11018:	f7fe f894 	bl	f144 <__sprint_r>
   1101c:	2800      	cmp	r0, #0
   1101e:	f47f a8ec 	bne.w	101fa <_vfprintf_r+0x26a>
   11022:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   11026:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   1102a:	e488      	b.n	1093e <_vfprintf_r+0x9ae>
   1102c:	2300      	movs	r3, #0
   1102e:	f40b 6280 	and.w	r2, fp, #1024	; 0x400
   11032:	e9cd a80c 	strd	sl, r8, [sp, #48]	; 0x30
   11036:	9606      	str	r6, [sp, #24]
   11038:	4692      	mov	sl, r2
   1103a:	461e      	mov	r6, r3
   1103c:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
   11040:	af54      	add	r7, sp, #336	; 0x150
   11042:	e00c      	b.n	1105e <_vfprintf_r+0x10ce>
   11044:	2300      	movs	r3, #0
   11046:	4620      	mov	r0, r4
   11048:	4649      	mov	r1, r9
   1104a:	220a      	movs	r2, #10
   1104c:	f005 f8a0 	bl	16190 <__aeabi_uldivmod>
   11050:	2c0a      	cmp	r4, #10
   11052:	f179 0300 	sbcs.w	r3, r9, #0
   11056:	d31b      	bcc.n	11090 <_vfprintf_r+0x1100>
   11058:	4604      	mov	r4, r0
   1105a:	4689      	mov	r9, r1
   1105c:	462f      	mov	r7, r5
   1105e:	4620      	mov	r0, r4
   11060:	220a      	movs	r2, #10
   11062:	2300      	movs	r3, #0
   11064:	4649      	mov	r1, r9
   11066:	f005 f893 	bl	16190 <__aeabi_uldivmod>
   1106a:	3230      	adds	r2, #48	; 0x30
   1106c:	1e7d      	subs	r5, r7, #1
   1106e:	3601      	adds	r6, #1
   11070:	f807 2c01 	strb.w	r2, [r7, #-1]
   11074:	f1ba 0f00 	cmp.w	sl, #0
   11078:	d0e4      	beq.n	11044 <_vfprintf_r+0x10b4>
   1107a:	f898 3000 	ldrb.w	r3, [r8]
   1107e:	429e      	cmp	r6, r3
   11080:	d1e0      	bne.n	11044 <_vfprintf_r+0x10b4>
   11082:	2eff      	cmp	r6, #255	; 0xff
   11084:	d0de      	beq.n	11044 <_vfprintf_r+0x10b4>
   11086:	2c0a      	cmp	r4, #10
   11088:	f179 0300 	sbcs.w	r3, r9, #0
   1108c:	f080 80e0 	bcs.w	11250 <_vfprintf_r+0x12c0>
   11090:	f8cd 8064 	str.w	r8, [sp, #100]	; 0x64
   11094:	9612      	str	r6, [sp, #72]	; 0x48
   11096:	e9dd a80c 	ldrd	sl, r8, [sp, #48]	; 0x30
   1109a:	9e06      	ldr	r6, [sp, #24]
   1109c:	f7ff bb14 	b.w	106c8 <_vfprintf_r+0x738>
   110a0:	9907      	ldr	r1, [sp, #28]
   110a2:	9809      	ldr	r0, [sp, #36]	; 0x24
   110a4:	aa28      	add	r2, sp, #160	; 0xa0
   110a6:	931d      	str	r3, [sp, #116]	; 0x74
   110a8:	f7fe f84c 	bl	f144 <__sprint_r>
   110ac:	2800      	cmp	r0, #0
   110ae:	f47f a8a4 	bne.w	101fa <_vfprintf_r+0x26a>
   110b2:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   110b6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   110b8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   110ba:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   110be:	f7ff b8e1 	b.w	10284 <_vfprintf_r+0x2f4>
   110c2:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   110c6:	f000 80b4 	beq.w	11232 <_vfprintf_r+0x12a2>
   110ca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   110cc:	4699      	mov	r9, r3
   110ce:	f852 4b04 	ldr.w	r4, [r2], #4
   110d2:	920e      	str	r2, [sp, #56]	; 0x38
   110d4:	b2a4      	uxth	r4, r4
   110d6:	e746      	b.n	10f66 <_vfprintf_r+0xfd6>
   110d8:	9907      	ldr	r1, [sp, #28]
   110da:	9809      	ldr	r0, [sp, #36]	; 0x24
   110dc:	aa28      	add	r2, sp, #160	; 0xa0
   110de:	f7fe f831 	bl	f144 <__sprint_r>
   110e2:	2800      	cmp	r0, #0
   110e4:	f47f a889 	bne.w	101fa <_vfprintf_r+0x26a>
   110e8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   110ea:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   110ee:	f7ff bb36 	b.w	1075e <_vfprintf_r+0x7ce>
   110f2:	4614      	mov	r4, r2
   110f4:	463a      	mov	r2, r7
   110f6:	464f      	mov	r7, r9
   110f8:	4691      	mov	r9, r2
   110fa:	3301      	adds	r3, #1
   110fc:	442c      	add	r4, r5
   110fe:	2b07      	cmp	r3, #7
   11100:	f8c8 9000 	str.w	r9, [r8]
   11104:	f8c8 5004 	str.w	r5, [r8, #4]
   11108:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   1110c:	f77f a8f9 	ble.w	10302 <_vfprintf_r+0x372>
   11110:	e43b      	b.n	1098a <_vfprintf_r+0x9fa>
   11112:	2b01      	cmp	r3, #1
   11114:	46bb      	mov	fp, r7
   11116:	f47f aac6 	bne.w	106a6 <_vfprintf_r+0x716>
   1111a:	e48c      	b.n	10a36 <_vfprintf_r+0xaa6>
   1111c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1111e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   11120:	f853 2b04 	ldr.w	r2, [r3], #4
   11124:	4655      	mov	r5, sl
   11126:	6011      	str	r1, [r2, #0]
   11128:	930e      	str	r3, [sp, #56]	; 0x38
   1112a:	f7ff b90a 	b.w	10342 <_vfprintf_r+0x3b2>
   1112e:	2e10      	cmp	r6, #16
   11130:	f340 84ad 	ble.w	11a8e <_vfprintf_r+0x1afe>
   11134:	f8df 905c 	ldr.w	r9, [pc, #92]	; 11194 <_vfprintf_r+0x1204>
   11138:	4642      	mov	r2, r8
   1113a:	4648      	mov	r0, r9
   1113c:	4621      	mov	r1, r4
   1113e:	46a8      	mov	r8, r5
   11140:	46b9      	mov	r9, r7
   11142:	f04f 0b10 	mov.w	fp, #16
   11146:	4607      	mov	r7, r0
   11148:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   1114a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   1114c:	9d07      	ldr	r5, [sp, #28]
   1114e:	e004      	b.n	1115a <_vfprintf_r+0x11ca>
   11150:	3208      	adds	r2, #8
   11152:	3e10      	subs	r6, #16
   11154:	2e10      	cmp	r6, #16
   11156:	f340 8248 	ble.w	115ea <_vfprintf_r+0x165a>
   1115a:	3301      	adds	r3, #1
   1115c:	3110      	adds	r1, #16
   1115e:	2b07      	cmp	r3, #7
   11160:	e9c2 7b00 	strd	r7, fp, [r2]
   11164:	e9cd 3129 	strd	r3, r1, [sp, #164]	; 0xa4
   11168:	ddf2      	ble.n	11150 <_vfprintf_r+0x11c0>
   1116a:	4629      	mov	r1, r5
   1116c:	4620      	mov	r0, r4
   1116e:	aa28      	add	r2, sp, #160	; 0xa0
   11170:	f7fd ffe8 	bl	f144 <__sprint_r>
   11174:	2800      	cmp	r0, #0
   11176:	f47f a840 	bne.w	101fa <_vfprintf_r+0x26a>
   1117a:	e9dd 3129 	ldrd	r3, r1, [sp, #164]	; 0xa4
   1117e:	aa2b      	add	r2, sp, #172	; 0xac
   11180:	e7e7      	b.n	11152 <_vfprintf_r+0x11c2>
   11182:	bf00      	nop
   11184:	66666667 	.word	0x66666667
   11188:	00019fc8 	.word	0x00019fc8
   1118c:	00019fdc 	.word	0x00019fdc
   11190:	00019ff0 	.word	0x00019ff0
   11194:	0001a04c 	.word	0x0001a04c
   11198:	9b16      	ldr	r3, [sp, #88]	; 0x58
   1119a:	9817      	ldr	r0, [sp, #92]	; 0x5c
   1119c:	18e2      	adds	r2, r4, r3
   1119e:	e9c8 0300 	strd	r0, r3, [r8]
   111a2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   111a4:	922a      	str	r2, [sp, #168]	; 0xa8
   111a6:	3301      	adds	r3, #1
   111a8:	2b07      	cmp	r3, #7
   111aa:	9329      	str	r3, [sp, #164]	; 0xa4
   111ac:	f300 8131 	bgt.w	11412 <_vfprintf_r+0x1482>
   111b0:	f108 0808 	add.w	r8, r8, #8
   111b4:	2900      	cmp	r1, #0
   111b6:	f2c0 8302 	blt.w	117be <_vfprintf_r+0x182e>
   111ba:	9912      	ldr	r1, [sp, #72]	; 0x48
   111bc:	3301      	adds	r3, #1
   111be:	188c      	adds	r4, r1, r2
   111c0:	2b07      	cmp	r3, #7
   111c2:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   111c6:	f8c8 5000 	str.w	r5, [r8]
   111ca:	f8c8 1004 	str.w	r1, [r8, #4]
   111ce:	f77f a898 	ble.w	10302 <_vfprintf_r+0x372>
   111d2:	f7ff bbda 	b.w	1098a <_vfprintf_r+0x9fa>
   111d6:	4628      	mov	r0, r5
   111d8:	f8cd 9020 	str.w	r9, [sp, #32]
   111dc:	940e      	str	r4, [sp, #56]	; 0x38
   111de:	f7fc f9a9 	bl	d534 <strlen>
   111e2:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
   111e6:	e9cd 090c 	strd	r0, r9, [sp, #48]	; 0x30
   111ea:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   111ee:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   111f2:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   111f6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   111fa:	9306      	str	r3, [sp, #24]
   111fc:	f7ff b8e9 	b.w	103d2 <_vfprintf_r+0x442>
   11200:	4614      	mov	r4, r2
   11202:	9f08      	ldr	r7, [sp, #32]
   11204:	3601      	adds	r6, #1
   11206:	442c      	add	r4, r5
   11208:	2e07      	cmp	r6, #7
   1120a:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   1120e:	f8c8 9000 	str.w	r9, [r8]
   11212:	f8c8 5004 	str.w	r5, [r8, #4]
   11216:	f77f aba9 	ble.w	1096c <_vfprintf_r+0x9dc>
   1121a:	e506      	b.n	10c2a <_vfprintf_r+0xc9a>
   1121c:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   11220:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   11222:	d03d      	beq.n	112a0 <_vfprintf_r+0x1310>
   11224:	f853 4b04 	ldr.w	r4, [r3], #4
   11228:	4691      	mov	r9, r2
   1122a:	930e      	str	r3, [sp, #56]	; 0x38
   1122c:	b2e4      	uxtb	r4, r4
   1122e:	f7ff b959 	b.w	104e4 <_vfprintf_r+0x554>
   11232:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   11236:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   11238:	d040      	beq.n	112bc <_vfprintf_r+0x132c>
   1123a:	f853 4b04 	ldr.w	r4, [r3], #4
   1123e:	4691      	mov	r9, r2
   11240:	930e      	str	r3, [sp, #56]	; 0x38
   11242:	b2e4      	uxtb	r4, r4
   11244:	e68f      	b.n	10f66 <_vfprintf_r+0xfd6>
   11246:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   11248:	f8df 924c 	ldr.w	r9, [pc, #588]	; 11498 <_vfprintf_r+0x1508>
   1124c:	f7ff bb49 	b.w	108e2 <_vfprintf_r+0x952>
   11250:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   11252:	991b      	ldr	r1, [sp, #108]	; 0x6c
   11254:	1aed      	subs	r5, r5, r3
   11256:	461a      	mov	r2, r3
   11258:	4628      	mov	r0, r5
   1125a:	f003 f9e3 	bl	14624 <strncpy>
   1125e:	f898 3001 	ldrb.w	r3, [r8, #1]
   11262:	b10b      	cbz	r3, 11268 <_vfprintf_r+0x12d8>
   11264:	f108 0801 	add.w	r8, r8, #1
   11268:	4620      	mov	r0, r4
   1126a:	4649      	mov	r1, r9
   1126c:	220a      	movs	r2, #10
   1126e:	2300      	movs	r3, #0
   11270:	2600      	movs	r6, #0
   11272:	f004 ff8d 	bl	16190 <__aeabi_uldivmod>
   11276:	e6ef      	b.n	11058 <_vfprintf_r+0x10c8>
   11278:	222d      	movs	r2, #45	; 0x2d
   1127a:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   1127e:	f7ff b898 	b.w	103b2 <_vfprintf_r+0x422>
   11282:	9a12      	ldr	r2, [sp, #72]	; 0x48
   11284:	18ae      	adds	r6, r5, r2
   11286:	eba6 060b 	sub.w	r6, r6, fp
   1128a:	1ad5      	subs	r5, r2, r3
   1128c:	42ae      	cmp	r6, r5
   1128e:	bfa8      	it	ge
   11290:	462e      	movge	r6, r5
   11292:	e48a      	b.n	10baa <_vfprintf_r+0xc1a>
   11294:	f344 19c0 	sbfx	r9, r4, #7, #1
   11298:	464b      	mov	r3, r9
   1129a:	b264      	sxtb	r4, r4
   1129c:	f7ff b8c3 	b.w	10426 <_vfprintf_r+0x496>
   112a0:	f853 4b04 	ldr.w	r4, [r3], #4
   112a4:	930e      	str	r3, [sp, #56]	; 0x38
   112a6:	f7ff b91d 	b.w	104e4 <_vfprintf_r+0x554>
   112aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   112ac:	990b      	ldr	r1, [sp, #44]	; 0x2c
   112ae:	f853 2b04 	ldr.w	r2, [r3], #4
   112b2:	4655      	mov	r5, sl
   112b4:	8011      	strh	r1, [r2, #0]
   112b6:	930e      	str	r3, [sp, #56]	; 0x38
   112b8:	f7ff b843 	b.w	10342 <_vfprintf_r+0x3b2>
   112bc:	f853 4b04 	ldr.w	r4, [r3], #4
   112c0:	930e      	str	r3, [sp, #56]	; 0x38
   112c2:	e650      	b.n	10f66 <_vfprintf_r+0xfd6>
   112c4:	f852 4b04 	ldr.w	r4, [r2], #4
   112c8:	4689      	mov	r9, r1
   112ca:	2301      	movs	r3, #1
   112cc:	920e      	str	r2, [sp, #56]	; 0x38
   112ce:	b2e4      	uxtb	r4, r4
   112d0:	f7ff b90b 	b.w	104ea <_vfprintf_r+0x55a>
   112d4:	2330      	movs	r3, #48	; 0x30
   112d6:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   112da:	2358      	movs	r3, #88	; 0x58
   112dc:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
   112e0:	9b08      	ldr	r3, [sp, #32]
   112e2:	f047 0402 	orr.w	r4, r7, #2
   112e6:	2b63      	cmp	r3, #99	; 0x63
   112e8:	f300 82e3 	bgt.w	118b2 <_vfprintf_r+0x1922>
   112ec:	2300      	movs	r3, #0
   112ee:	ad3b      	add	r5, sp, #236	; 0xec
   112f0:	930d      	str	r3, [sp, #52]	; 0x34
   112f2:	f447 7381 	orr.w	r3, r7, #258	; 0x102
   112f6:	930f      	str	r3, [sp, #60]	; 0x3c
   112f8:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   112fc:	4613      	mov	r3, r2
   112fe:	2b00      	cmp	r3, #0
   11300:	4627      	mov	r7, r4
   11302:	f2c0 8240 	blt.w	11786 <_vfprintf_r+0x17f6>
   11306:	930c      	str	r3, [sp, #48]	; 0x30
   11308:	2300      	movs	r3, #0
   1130a:	468b      	mov	fp, r1
   1130c:	931d      	str	r3, [sp, #116]	; 0x74
   1130e:	f026 0320 	bic.w	r3, r6, #32
   11312:	9306      	str	r3, [sp, #24]
   11314:	2e61      	cmp	r6, #97	; 0x61
   11316:	f000 8317 	beq.w	11948 <_vfprintf_r+0x19b8>
   1131a:	2e41      	cmp	r6, #65	; 0x41
   1131c:	f47f ad73 	bne.w	10e06 <_vfprintf_r+0xe76>
   11320:	aa22      	add	r2, sp, #136	; 0x88
   11322:	4658      	mov	r0, fp
   11324:	990c      	ldr	r1, [sp, #48]	; 0x30
   11326:	f003 f8fd 	bl	14524 <frexp>
   1132a:	2200      	movs	r2, #0
   1132c:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   11330:	f004 fc6c 	bl	15c0c <__aeabi_dmul>
   11334:	4602      	mov	r2, r0
   11336:	460b      	mov	r3, r1
   11338:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   1133c:	2200      	movs	r2, #0
   1133e:	2300      	movs	r3, #0
   11340:	f004 fecc 	bl	160dc <__aeabi_dcmpeq>
   11344:	b108      	cbz	r0, 1134a <_vfprintf_r+0x13ba>
   11346:	2301      	movs	r3, #1
   11348:	9322      	str	r3, [sp, #136]	; 0x88
   1134a:	4b54      	ldr	r3, [pc, #336]	; (1149c <_vfprintf_r+0x150c>)
   1134c:	930c      	str	r3, [sp, #48]	; 0x30
   1134e:	9b08      	ldr	r3, [sp, #32]
   11350:	e9cd a612 	strd	sl, r6, [sp, #72]	; 0x48
   11354:	e9cd 781e 	strd	r7, r8, [sp, #120]	; 0x78
   11358:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   1135c:	46ab      	mov	fp, r5
   1135e:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   11362:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
   11366:	9510      	str	r5, [sp, #64]	; 0x40
   11368:	e006      	b.n	11378 <_vfprintf_r+0x13e8>
   1136a:	2200      	movs	r2, #0
   1136c:	2300      	movs	r3, #0
   1136e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   11372:	f004 feb3 	bl	160dc <__aeabi_dcmpeq>
   11376:	b9e8      	cbnz	r0, 113b4 <_vfprintf_r+0x1424>
   11378:	2200      	movs	r2, #0
   1137a:	4b49      	ldr	r3, [pc, #292]	; (114a0 <_vfprintf_r+0x1510>)
   1137c:	4630      	mov	r0, r6
   1137e:	4639      	mov	r1, r7
   11380:	f004 fc44 	bl	15c0c <__aeabi_dmul>
   11384:	460f      	mov	r7, r1
   11386:	4606      	mov	r6, r0
   11388:	f004 feda 	bl	16140 <__aeabi_d2iz>
   1138c:	4604      	mov	r4, r0
   1138e:	f004 fbd3 	bl	15b38 <__aeabi_i2d>
   11392:	460b      	mov	r3, r1
   11394:	4602      	mov	r2, r0
   11396:	4639      	mov	r1, r7
   11398:	4630      	mov	r0, r6
   1139a:	f004 fa7f 	bl	1589c <__aeabi_dsub>
   1139e:	f81a 3004 	ldrb.w	r3, [sl, r4]
   113a2:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   113a6:	46d8      	mov	r8, fp
   113a8:	464d      	mov	r5, r9
   113aa:	4606      	mov	r6, r0
   113ac:	460f      	mov	r7, r1
   113ae:	f80b 3b01 	strb.w	r3, [fp], #1
   113b2:	d1da      	bne.n	1136a <_vfprintf_r+0x13da>
   113b4:	4630      	mov	r0, r6
   113b6:	4639      	mov	r1, r7
   113b8:	2200      	movs	r2, #0
   113ba:	4b3a      	ldr	r3, [pc, #232]	; (114a4 <_vfprintf_r+0x1514>)
   113bc:	46a9      	mov	r9, r5
   113be:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
   113c2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   113c4:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
   113c8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   113cc:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
   113d0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   113d2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
   113d4:	f004 feaa 	bl	1612c <__aeabi_dcmpgt>
   113d8:	2800      	cmp	r0, #0
   113da:	f040 8244 	bne.w	11866 <_vfprintf_r+0x18d6>
   113de:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   113e2:	2200      	movs	r2, #0
   113e4:	4b2f      	ldr	r3, [pc, #188]	; (114a4 <_vfprintf_r+0x1514>)
   113e6:	f004 fe79 	bl	160dc <__aeabi_dcmpeq>
   113ea:	b110      	cbz	r0, 113f2 <_vfprintf_r+0x1462>
   113ec:	07e1      	lsls	r1, r4, #31
   113ee:	f100 823a 	bmi.w	11866 <_vfprintf_r+0x18d6>
   113f2:	464b      	mov	r3, r9
   113f4:	2b00      	cmp	r3, #0
   113f6:	db06      	blt.n	11406 <_vfprintf_r+0x1476>
   113f8:	2230      	movs	r2, #48	; 0x30
   113fa:	3301      	adds	r3, #1
   113fc:	445b      	add	r3, fp
   113fe:	f80b 2b01 	strb.w	r2, [fp], #1
   11402:	455b      	cmp	r3, fp
   11404:	d1fb      	bne.n	113fe <_vfprintf_r+0x146e>
   11406:	ebab 0305 	sub.w	r3, fp, r5
   1140a:	46b9      	mov	r9, r7
   1140c:	9312      	str	r3, [sp, #72]	; 0x48
   1140e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   11410:	e51d      	b.n	10e4e <_vfprintf_r+0xebe>
   11412:	9907      	ldr	r1, [sp, #28]
   11414:	9809      	ldr	r0, [sp, #36]	; 0x24
   11416:	aa28      	add	r2, sp, #160	; 0xa0
   11418:	f7fd fe94 	bl	f144 <__sprint_r>
   1141c:	2800      	cmp	r0, #0
   1141e:	f47e aeec 	bne.w	101fa <_vfprintf_r+0x26a>
   11422:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   11426:	9922      	ldr	r1, [sp, #136]	; 0x88
   11428:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   1142c:	e6c2      	b.n	111b4 <_vfprintf_r+0x1224>
   1142e:	6d90      	ldr	r0, [r2, #88]	; 0x58
   11430:	f7fa fe80 	bl	c134 <__retarget_lock_release_recursive>
   11434:	f7fe beb3 	b.w	1019e <_vfprintf_r+0x20e>
   11438:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1143a:	1cda      	adds	r2, r3, #3
   1143c:	9310      	str	r3, [sp, #64]	; 0x40
   1143e:	db02      	blt.n	11446 <_vfprintf_r+0x14b6>
   11440:	9a08      	ldr	r2, [sp, #32]
   11442:	4293      	cmp	r3, r2
   11444:	dd04      	ble.n	11450 <_vfprintf_r+0x14c0>
   11446:	3e02      	subs	r6, #2
   11448:	f026 0320 	bic.w	r3, r6, #32
   1144c:	9306      	str	r3, [sp, #24]
   1144e:	e508      	b.n	10e62 <_vfprintf_r+0xed2>
   11450:	9b10      	ldr	r3, [sp, #64]	; 0x40
   11452:	9a12      	ldr	r2, [sp, #72]	; 0x48
   11454:	4293      	cmp	r3, r2
   11456:	f2c0 8182 	blt.w	1175e <_vfprintf_r+0x17ce>
   1145a:	f019 0f01 	tst.w	r9, #1
   1145e:	f000 82a8 	beq.w	119b2 <_vfprintf_r+0x1a22>
   11462:	9a16      	ldr	r2, [sp, #88]	; 0x58
   11464:	4413      	add	r3, r2
   11466:	930c      	str	r3, [sp, #48]	; 0x30
   11468:	f419 6f80 	tst.w	r9, #1024	; 0x400
   1146c:	f000 8290 	beq.w	11990 <_vfprintf_r+0x1a00>
   11470:	9b10      	ldr	r3, [sp, #64]	; 0x40
   11472:	2667      	movs	r6, #103	; 0x67
   11474:	2b00      	cmp	r3, #0
   11476:	f300 8146 	bgt.w	11706 <_vfprintf_r+0x1776>
   1147a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1147c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   11480:	9306      	str	r3, [sp, #24]
   11482:	2300      	movs	r3, #0
   11484:	930f      	str	r3, [sp, #60]	; 0x3c
   11486:	9313      	str	r3, [sp, #76]	; 0x4c
   11488:	e54b      	b.n	10f22 <_vfprintf_r+0xf92>
   1148a:	222d      	movs	r2, #45	; 0x2d
   1148c:	2300      	movs	r3, #0
   1148e:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   11492:	9308      	str	r3, [sp, #32]
   11494:	f7fe bfa0 	b.w	103d8 <_vfprintf_r+0x448>
   11498:	0001a04c 	.word	0x0001a04c
   1149c:	00019fdc 	.word	0x00019fdc
   114a0:	40300000 	.word	0x40300000
   114a4:	3fe00000 	.word	0x3fe00000
   114a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   114aa:	4642      	mov	r2, r8
   114ac:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
   114b0:	18eb      	adds	r3, r5, r3
   114b2:	465e      	mov	r6, fp
   114b4:	9308      	str	r3, [sp, #32]
   114b6:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
   114ba:	9710      	str	r7, [sp, #64]	; 0x40
   114bc:	4621      	mov	r1, r4
   114be:	9f19      	ldr	r7, [sp, #100]	; 0x64
   114c0:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
   114c4:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
   114c8:	f8dd b01c 	ldr.w	fp, [sp, #28]
   114cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   114ce:	9513      	str	r5, [sp, #76]	; 0x4c
   114d0:	f1b8 0f00 	cmp.w	r8, #0
   114d4:	d02e      	beq.n	11534 <_vfprintf_r+0x15a4>
   114d6:	2b00      	cmp	r3, #0
   114d8:	d16c      	bne.n	115b4 <_vfprintf_r+0x1624>
   114da:	3f01      	subs	r7, #1
   114dc:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   114e0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   114e2:	4449      	add	r1, r9
   114e4:	e9c2 3900 	strd	r3, r9, [r2]
   114e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   114ea:	912a      	str	r1, [sp, #168]	; 0xa8
   114ec:	3301      	adds	r3, #1
   114ee:	2b07      	cmp	r3, #7
   114f0:	9329      	str	r3, [sp, #164]	; 0xa4
   114f2:	dc63      	bgt.n	115bc <_vfprintf_r+0x162c>
   114f4:	3208      	adds	r2, #8
   114f6:	9b08      	ldr	r3, [sp, #32]
   114f8:	7838      	ldrb	r0, [r7, #0]
   114fa:	1b9b      	subs	r3, r3, r6
   114fc:	4283      	cmp	r3, r0
   114fe:	bfa8      	it	ge
   11500:	4603      	movge	r3, r0
   11502:	2b00      	cmp	r3, #0
   11504:	461c      	mov	r4, r3
   11506:	dd0a      	ble.n	1151e <_vfprintf_r+0x158e>
   11508:	9829      	ldr	r0, [sp, #164]	; 0xa4
   1150a:	4419      	add	r1, r3
   1150c:	3001      	adds	r0, #1
   1150e:	2807      	cmp	r0, #7
   11510:	e9c2 6300 	strd	r6, r3, [r2]
   11514:	912a      	str	r1, [sp, #168]	; 0xa8
   11516:	9029      	str	r0, [sp, #164]	; 0xa4
   11518:	dc5b      	bgt.n	115d2 <_vfprintf_r+0x1642>
   1151a:	7838      	ldrb	r0, [r7, #0]
   1151c:	3208      	adds	r2, #8
   1151e:	2c00      	cmp	r4, #0
   11520:	bfb4      	ite	lt
   11522:	4605      	movlt	r5, r0
   11524:	1b05      	subge	r5, r0, r4
   11526:	2d00      	cmp	r5, #0
   11528:	dc15      	bgt.n	11556 <_vfprintf_r+0x15c6>
   1152a:	4406      	add	r6, r0
   1152c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1152e:	f1b8 0f00 	cmp.w	r8, #0
   11532:	d1d0      	bne.n	114d6 <_vfprintf_r+0x1546>
   11534:	2b00      	cmp	r3, #0
   11536:	d13d      	bne.n	115b4 <_vfprintf_r+0x1624>
   11538:	e9dd 3512 	ldrd	r3, r5, [sp, #72]	; 0x48
   1153c:	18eb      	adds	r3, r5, r3
   1153e:	429e      	cmp	r6, r3
   11540:	46b3      	mov	fp, r6
   11542:	9719      	str	r7, [sp, #100]	; 0x64
   11544:	4690      	mov	r8, r2
   11546:	460c      	mov	r4, r1
   11548:	bf28      	it	cs
   1154a:	469b      	movcs	fp, r3
   1154c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   11550:	9f10      	ldr	r7, [sp, #64]	; 0x40
   11552:	f7ff bafd 	b.w	10b50 <_vfprintf_r+0xbc0>
   11556:	2d10      	cmp	r5, #16
   11558:	f340 826f 	ble.w	11a3a <_vfprintf_r+0x1aaa>
   1155c:	2410      	movs	r4, #16
   1155e:	9829      	ldr	r0, [sp, #164]	; 0xa4
   11560:	e004      	b.n	1156c <_vfprintf_r+0x15dc>
   11562:	3d10      	subs	r5, #16
   11564:	2d10      	cmp	r5, #16
   11566:	f102 0208 	add.w	r2, r2, #8
   1156a:	dd16      	ble.n	1159a <_vfprintf_r+0x160a>
   1156c:	3001      	adds	r0, #1
   1156e:	4ba8      	ldr	r3, [pc, #672]	; (11810 <_vfprintf_r+0x1880>)
   11570:	3110      	adds	r1, #16
   11572:	2807      	cmp	r0, #7
   11574:	e9c2 3400 	strd	r3, r4, [r2]
   11578:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   1157c:	ddf1      	ble.n	11562 <_vfprintf_r+0x15d2>
   1157e:	4659      	mov	r1, fp
   11580:	4650      	mov	r0, sl
   11582:	aa28      	add	r2, sp, #160	; 0xa0
   11584:	f7fd fdde 	bl	f144 <__sprint_r>
   11588:	2800      	cmp	r0, #0
   1158a:	f47e ae36 	bne.w	101fa <_vfprintf_r+0x26a>
   1158e:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
   11592:	3d10      	subs	r5, #16
   11594:	2d10      	cmp	r5, #16
   11596:	aa2b      	add	r2, sp, #172	; 0xac
   11598:	dce8      	bgt.n	1156c <_vfprintf_r+0x15dc>
   1159a:	3001      	adds	r0, #1
   1159c:	4b9c      	ldr	r3, [pc, #624]	; (11810 <_vfprintf_r+0x1880>)
   1159e:	4429      	add	r1, r5
   115a0:	2807      	cmp	r0, #7
   115a2:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   115a6:	6055      	str	r5, [r2, #4]
   115a8:	6013      	str	r3, [r2, #0]
   115aa:	dc4e      	bgt.n	1164a <_vfprintf_r+0x16ba>
   115ac:	7838      	ldrb	r0, [r7, #0]
   115ae:	3208      	adds	r2, #8
   115b0:	4406      	add	r6, r0
   115b2:	e7bb      	b.n	1152c <_vfprintf_r+0x159c>
   115b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   115b6:	3b01      	subs	r3, #1
   115b8:	930f      	str	r3, [sp, #60]	; 0x3c
   115ba:	e791      	b.n	114e0 <_vfprintf_r+0x1550>
   115bc:	4659      	mov	r1, fp
   115be:	4650      	mov	r0, sl
   115c0:	aa28      	add	r2, sp, #160	; 0xa0
   115c2:	f7fd fdbf 	bl	f144 <__sprint_r>
   115c6:	2800      	cmp	r0, #0
   115c8:	f47e ae17 	bne.w	101fa <_vfprintf_r+0x26a>
   115cc:	992a      	ldr	r1, [sp, #168]	; 0xa8
   115ce:	aa2b      	add	r2, sp, #172	; 0xac
   115d0:	e791      	b.n	114f6 <_vfprintf_r+0x1566>
   115d2:	4659      	mov	r1, fp
   115d4:	4650      	mov	r0, sl
   115d6:	aa28      	add	r2, sp, #160	; 0xa0
   115d8:	f7fd fdb4 	bl	f144 <__sprint_r>
   115dc:	2800      	cmp	r0, #0
   115de:	f47e ae0c 	bne.w	101fa <_vfprintf_r+0x26a>
   115e2:	7838      	ldrb	r0, [r7, #0]
   115e4:	992a      	ldr	r1, [sp, #168]	; 0xa8
   115e6:	aa2b      	add	r2, sp, #172	; 0xac
   115e8:	e799      	b.n	1151e <_vfprintf_r+0x158e>
   115ea:	4645      	mov	r5, r8
   115ec:	4690      	mov	r8, r2
   115ee:	463a      	mov	r2, r7
   115f0:	460c      	mov	r4, r1
   115f2:	464f      	mov	r7, r9
   115f4:	4691      	mov	r9, r2
   115f6:	3301      	adds	r3, #1
   115f8:	4434      	add	r4, r6
   115fa:	2b07      	cmp	r3, #7
   115fc:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   11600:	f8c8 9000 	str.w	r9, [r8]
   11604:	f8c8 6004 	str.w	r6, [r8, #4]
   11608:	f300 815d 	bgt.w	118c6 <_vfprintf_r+0x1936>
   1160c:	f108 0808 	add.w	r8, r8, #8
   11610:	f7ff ba98 	b.w	10b44 <_vfprintf_r+0xbb4>
   11614:	9907      	ldr	r1, [sp, #28]
   11616:	9809      	ldr	r0, [sp, #36]	; 0x24
   11618:	aa28      	add	r2, sp, #160	; 0xa0
   1161a:	f7fd fd93 	bl	f144 <__sprint_r>
   1161e:	2800      	cmp	r0, #0
   11620:	f47e adeb 	bne.w	101fa <_vfprintf_r+0x26a>
   11624:	9922      	ldr	r1, [sp, #136]	; 0x88
   11626:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   11628:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   1162c:	f7ff bb8c 	b.w	10d48 <_vfprintf_r+0xdb8>
   11630:	9907      	ldr	r1, [sp, #28]
   11632:	9809      	ldr	r0, [sp, #36]	; 0x24
   11634:	aa28      	add	r2, sp, #160	; 0xa0
   11636:	f7fd fd85 	bl	f144 <__sprint_r>
   1163a:	2800      	cmp	r0, #0
   1163c:	f47e addd 	bne.w	101fa <_vfprintf_r+0x26a>
   11640:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   11642:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   11646:	f7ff ba74 	b.w	10b32 <_vfprintf_r+0xba2>
   1164a:	4659      	mov	r1, fp
   1164c:	4650      	mov	r0, sl
   1164e:	aa28      	add	r2, sp, #160	; 0xa0
   11650:	f7fd fd78 	bl	f144 <__sprint_r>
   11654:	2800      	cmp	r0, #0
   11656:	f47e add0 	bne.w	101fa <_vfprintf_r+0x26a>
   1165a:	7838      	ldrb	r0, [r7, #0]
   1165c:	992a      	ldr	r1, [sp, #168]	; 0xa8
   1165e:	aa2b      	add	r2, sp, #172	; 0xac
   11660:	4406      	add	r6, r0
   11662:	e763      	b.n	1152c <_vfprintf_r+0x159c>
   11664:	9908      	ldr	r1, [sp, #32]
   11666:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   11668:	9101      	str	r1, [sp, #4]
   1166a:	2103      	movs	r1, #3
   1166c:	9100      	str	r1, [sp, #0]
   1166e:	a926      	add	r1, sp, #152	; 0x98
   11670:	9104      	str	r1, [sp, #16]
   11672:	a923      	add	r1, sp, #140	; 0x8c
   11674:	9103      	str	r1, [sp, #12]
   11676:	a922      	add	r1, sp, #136	; 0x88
   11678:	465a      	mov	r2, fp
   1167a:	9809      	ldr	r0, [sp, #36]	; 0x24
   1167c:	9102      	str	r1, [sp, #8]
   1167e:	f000 fc6f 	bl	11f60 <_dtoa_r>
   11682:	7803      	ldrb	r3, [r0, #0]
   11684:	4605      	mov	r5, r0
   11686:	2b30      	cmp	r3, #48	; 0x30
   11688:	f000 81c0 	beq.w	11a0c <_vfprintf_r+0x1a7c>
   1168c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1168e:	9a08      	ldr	r2, [sp, #32]
   11690:	46b9      	mov	r9, r7
   11692:	4413      	add	r3, r2
   11694:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   11696:	18ec      	adds	r4, r5, r3
   11698:	4658      	mov	r0, fp
   1169a:	2200      	movs	r2, #0
   1169c:	2300      	movs	r3, #0
   1169e:	990c      	ldr	r1, [sp, #48]	; 0x30
   116a0:	f004 fd1c 	bl	160dc <__aeabi_dcmpeq>
   116a4:	b110      	cbz	r0, 116ac <_vfprintf_r+0x171c>
   116a6:	4623      	mov	r3, r4
   116a8:	f7ff bbcf 	b.w	10e4a <_vfprintf_r+0xeba>
   116ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
   116ae:	42a3      	cmp	r3, r4
   116b0:	f4bf abcb 	bcs.w	10e4a <_vfprintf_r+0xeba>
   116b4:	2130      	movs	r1, #48	; 0x30
   116b6:	1c5a      	adds	r2, r3, #1
   116b8:	9226      	str	r2, [sp, #152]	; 0x98
   116ba:	7019      	strb	r1, [r3, #0]
   116bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   116be:	429c      	cmp	r4, r3
   116c0:	d8f9      	bhi.n	116b6 <_vfprintf_r+0x1726>
   116c2:	f7ff bbc2 	b.w	10e4a <_vfprintf_r+0xeba>
   116c6:	9907      	ldr	r1, [sp, #28]
   116c8:	9809      	ldr	r0, [sp, #36]	; 0x24
   116ca:	aa28      	add	r2, sp, #160	; 0xa0
   116cc:	f7fd fd3a 	bl	f144 <__sprint_r>
   116d0:	2800      	cmp	r0, #0
   116d2:	f47e ad92 	bne.w	101fa <_vfprintf_r+0x26a>
   116d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
   116d8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   116da:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   116de:	f7ff ba4c 	b.w	10b7a <_vfprintf_r+0xbea>
   116e2:	9a22      	ldr	r2, [sp, #136]	; 0x88
   116e4:	2a00      	cmp	r2, #0
   116e6:	9210      	str	r2, [sp, #64]	; 0x40
   116e8:	f340 81b9 	ble.w	11a5e <_vfprintf_r+0x1ace>
   116ec:	9908      	ldr	r1, [sp, #32]
   116ee:	f009 0301 	and.w	r3, r9, #1
   116f2:	430b      	orrs	r3, r1
   116f4:	f040 8140 	bne.w	11978 <_vfprintf_r+0x19e8>
   116f8:	2666      	movs	r6, #102	; 0x66
   116fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
   116fc:	930c      	str	r3, [sp, #48]	; 0x30
   116fe:	f419 6f80 	tst.w	r9, #1024	; 0x400
   11702:	f43f aeba 	beq.w	1147a <_vfprintf_r+0x14ea>
   11706:	9919      	ldr	r1, [sp, #100]	; 0x64
   11708:	780b      	ldrb	r3, [r1, #0]
   1170a:	2bff      	cmp	r3, #255	; 0xff
   1170c:	f000 81d6 	beq.w	11abc <_vfprintf_r+0x1b2c>
   11710:	2400      	movs	r4, #0
   11712:	9a10      	ldr	r2, [sp, #64]	; 0x40
   11714:	4620      	mov	r0, r4
   11716:	e004      	b.n	11722 <_vfprintf_r+0x1792>
   11718:	3001      	adds	r0, #1
   1171a:	3101      	adds	r1, #1
   1171c:	2bff      	cmp	r3, #255	; 0xff
   1171e:	f000 8164 	beq.w	119ea <_vfprintf_r+0x1a5a>
   11722:	4293      	cmp	r3, r2
   11724:	f280 8161 	bge.w	119ea <_vfprintf_r+0x1a5a>
   11728:	1ad2      	subs	r2, r2, r3
   1172a:	784b      	ldrb	r3, [r1, #1]
   1172c:	2b00      	cmp	r3, #0
   1172e:	d1f3      	bne.n	11718 <_vfprintf_r+0x1788>
   11730:	780b      	ldrb	r3, [r1, #0]
   11732:	3401      	adds	r4, #1
   11734:	e7f2      	b.n	1171c <_vfprintf_r+0x178c>
   11736:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   1173a:	f7ff b964 	b.w	10a06 <_vfprintf_r+0xa76>
   1173e:	9b08      	ldr	r3, [sp, #32]
   11740:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   11744:	940e      	str	r4, [sp, #56]	; 0x38
   11746:	9306      	str	r3, [sp, #24]
   11748:	930c      	str	r3, [sp, #48]	; 0x30
   1174a:	9008      	str	r0, [sp, #32]
   1174c:	900f      	str	r0, [sp, #60]	; 0x3c
   1174e:	9013      	str	r0, [sp, #76]	; 0x4c
   11750:	9010      	str	r0, [sp, #64]	; 0x40
   11752:	f7fe be3e 	b.w	103d2 <_vfprintf_r+0x442>
   11756:	2300      	movs	r3, #0
   11758:	9308      	str	r3, [sp, #32]
   1175a:	f7fe bc8a 	b.w	10072 <_vfprintf_r+0xe2>
   1175e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   11760:	9a16      	ldr	r2, [sp, #88]	; 0x58
   11762:	189a      	adds	r2, r3, r2
   11764:	9b10      	ldr	r3, [sp, #64]	; 0x40
   11766:	920c      	str	r2, [sp, #48]	; 0x30
   11768:	2b00      	cmp	r3, #0
   1176a:	f340 815d 	ble.w	11a28 <_vfprintf_r+0x1a98>
   1176e:	2667      	movs	r6, #103	; 0x67
   11770:	e7c5      	b.n	116fe <_vfprintf_r+0x176e>
   11772:	9907      	ldr	r1, [sp, #28]
   11774:	9809      	ldr	r0, [sp, #36]	; 0x24
   11776:	aa28      	add	r2, sp, #160	; 0xa0
   11778:	f7fd fce4 	bl	f144 <__sprint_r>
   1177c:	2800      	cmp	r0, #0
   1177e:	f43e ade8 	beq.w	10352 <_vfprintf_r+0x3c2>
   11782:	f7fe bd40 	b.w	10206 <_vfprintf_r+0x276>
   11786:	f026 0320 	bic.w	r3, r6, #32
   1178a:	9306      	str	r3, [sp, #24]
   1178c:	222d      	movs	r2, #45	; 0x2d
   1178e:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   11792:	469b      	mov	fp, r3
   11794:	f104 4300 	add.w	r3, r4, #2147483648	; 0x80000000
   11798:	921d      	str	r2, [sp, #116]	; 0x74
   1179a:	930c      	str	r3, [sp, #48]	; 0x30
   1179c:	e5ba      	b.n	11314 <_vfprintf_r+0x1384>
   1179e:	9907      	ldr	r1, [sp, #28]
   117a0:	9809      	ldr	r0, [sp, #36]	; 0x24
   117a2:	aa28      	add	r2, sp, #160	; 0xa0
   117a4:	f7fd fcce 	bl	f144 <__sprint_r>
   117a8:	2800      	cmp	r0, #0
   117aa:	f47e ad26 	bne.w	101fa <_vfprintf_r+0x26a>
   117ae:	9d22      	ldr	r5, [sp, #136]	; 0x88
   117b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   117b2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   117b4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   117b8:	1b5d      	subs	r5, r3, r5
   117ba:	f7ff b9f6 	b.w	10baa <_vfprintf_r+0xc1a>
   117be:	424e      	negs	r6, r1
   117c0:	3110      	adds	r1, #16
   117c2:	f280 8181 	bge.w	11ac8 <_vfprintf_r+0x1b38>
   117c6:	4641      	mov	r1, r8
   117c8:	2410      	movs	r4, #16
   117ca:	46a8      	mov	r8, r5
   117cc:	f8df 9040 	ldr.w	r9, [pc, #64]	; 11810 <_vfprintf_r+0x1880>
   117d0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   117d4:	9d07      	ldr	r5, [sp, #28]
   117d6:	e004      	b.n	117e2 <_vfprintf_r+0x1852>
   117d8:	3108      	adds	r1, #8
   117da:	3e10      	subs	r6, #16
   117dc:	2e10      	cmp	r6, #16
   117de:	f340 8099 	ble.w	11914 <_vfprintf_r+0x1984>
   117e2:	3301      	adds	r3, #1
   117e4:	3210      	adds	r2, #16
   117e6:	2b07      	cmp	r3, #7
   117e8:	e9c1 9400 	strd	r9, r4, [r1]
   117ec:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   117f0:	ddf2      	ble.n	117d8 <_vfprintf_r+0x1848>
   117f2:	4629      	mov	r1, r5
   117f4:	4658      	mov	r0, fp
   117f6:	aa28      	add	r2, sp, #160	; 0xa0
   117f8:	f7fd fca4 	bl	f144 <__sprint_r>
   117fc:	2800      	cmp	r0, #0
   117fe:	f47e acfc 	bne.w	101fa <_vfprintf_r+0x26a>
   11802:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   11806:	a92b      	add	r1, sp, #172	; 0xac
   11808:	e7e7      	b.n	117da <_vfprintf_r+0x184a>
   1180a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   1180c:	f7ff b962 	b.w	10ad4 <_vfprintf_r+0xb44>
   11810:	0001a04c 	.word	0x0001a04c
   11814:	9b07      	ldr	r3, [sp, #28]
   11816:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   11818:	07dd      	lsls	r5, r3, #31
   1181a:	d407      	bmi.n	1182c <_vfprintf_r+0x189c>
   1181c:	9b07      	ldr	r3, [sp, #28]
   1181e:	899b      	ldrh	r3, [r3, #12]
   11820:	059c      	lsls	r4, r3, #22
   11822:	d403      	bmi.n	1182c <_vfprintf_r+0x189c>
   11824:	9b07      	ldr	r3, [sp, #28]
   11826:	6d98      	ldr	r0, [r3, #88]	; 0x58
   11828:	f7fa fc84 	bl	c134 <__retarget_lock_release_recursive>
   1182c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11830:	930b      	str	r3, [sp, #44]	; 0x2c
   11832:	f7fe bcf1 	b.w	10218 <_vfprintf_r+0x288>
   11836:	9b08      	ldr	r3, [sp, #32]
   11838:	18ec      	adds	r4, r5, r3
   1183a:	e72d      	b.n	11698 <_vfprintf_r+0x1708>
   1183c:	2102      	movs	r1, #2
   1183e:	9100      	str	r1, [sp, #0]
   11840:	9908      	ldr	r1, [sp, #32]
   11842:	465a      	mov	r2, fp
   11844:	1c4c      	adds	r4, r1, #1
   11846:	a926      	add	r1, sp, #152	; 0x98
   11848:	9104      	str	r1, [sp, #16]
   1184a:	a923      	add	r1, sp, #140	; 0x8c
   1184c:	9103      	str	r1, [sp, #12]
   1184e:	a922      	add	r1, sp, #136	; 0x88
   11850:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   11852:	9809      	ldr	r0, [sp, #36]	; 0x24
   11854:	9401      	str	r4, [sp, #4]
   11856:	9102      	str	r1, [sp, #8]
   11858:	f000 fb82 	bl	11f60 <_dtoa_r>
   1185c:	4605      	mov	r5, r0
   1185e:	46b9      	mov	r9, r7
   11860:	442c      	add	r4, r5
   11862:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   11864:	e718      	b.n	11698 <_vfprintf_r+0x1708>
   11866:	9b12      	ldr	r3, [sp, #72]	; 0x48
   11868:	9326      	str	r3, [sp, #152]	; 0x98
   1186a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1186c:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   11870:	7bd9      	ldrb	r1, [r3, #15]
   11872:	465b      	mov	r3, fp
   11874:	428a      	cmp	r2, r1
   11876:	d109      	bne.n	1188c <_vfprintf_r+0x18fc>
   11878:	2030      	movs	r0, #48	; 0x30
   1187a:	f803 0c01 	strb.w	r0, [r3, #-1]
   1187e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   11880:	1e5a      	subs	r2, r3, #1
   11882:	9226      	str	r2, [sp, #152]	; 0x98
   11884:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   11888:	4291      	cmp	r1, r2
   1188a:	d0f6      	beq.n	1187a <_vfprintf_r+0x18ea>
   1188c:	2a39      	cmp	r2, #57	; 0x39
   1188e:	bf0b      	itete	eq
   11890:	9a0c      	ldreq	r2, [sp, #48]	; 0x30
   11892:	3201      	addne	r2, #1
   11894:	7a92      	ldrbeq	r2, [r2, #10]
   11896:	b2d2      	uxtbne	r2, r2
   11898:	f803 2c01 	strb.w	r2, [r3, #-1]
   1189c:	e5b3      	b.n	11406 <_vfprintf_r+0x1476>
   1189e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   118a0:	f8df 9234 	ldr.w	r9, [pc, #564]	; 11ad8 <_vfprintf_r+0x1b48>
   118a4:	f7fe bfda 	b.w	1085c <_vfprintf_r+0x8cc>
   118a8:	2330      	movs	r3, #48	; 0x30
   118aa:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   118ae:	2378      	movs	r3, #120	; 0x78
   118b0:	e514      	b.n	112dc <_vfprintf_r+0x134c>
   118b2:	9809      	ldr	r0, [sp, #36]	; 0x24
   118b4:	1c59      	adds	r1, r3, #1
   118b6:	f7fa fc4f 	bl	c158 <_malloc_r>
   118ba:	4605      	mov	r5, r0
   118bc:	2800      	cmp	r0, #0
   118be:	f000 80f6 	beq.w	11aae <_vfprintf_r+0x1b1e>
   118c2:	900d      	str	r0, [sp, #52]	; 0x34
   118c4:	e515      	b.n	112f2 <_vfprintf_r+0x1362>
   118c6:	9907      	ldr	r1, [sp, #28]
   118c8:	9809      	ldr	r0, [sp, #36]	; 0x24
   118ca:	aa28      	add	r2, sp, #160	; 0xa0
   118cc:	f7fd fc3a 	bl	f144 <__sprint_r>
   118d0:	2800      	cmp	r0, #0
   118d2:	f47e ac92 	bne.w	101fa <_vfprintf_r+0x26a>
   118d6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   118d8:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   118dc:	f7ff b932 	b.w	10b44 <_vfprintf_r+0xbb4>
   118e0:	9b08      	ldr	r3, [sp, #32]
   118e2:	2b00      	cmp	r3, #0
   118e4:	bf08      	it	eq
   118e6:	2301      	moveq	r3, #1
   118e8:	9308      	str	r3, [sp, #32]
   118ea:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   118ee:	930f      	str	r3, [sp, #60]	; 0x3c
   118f0:	9b15      	ldr	r3, [sp, #84]	; 0x54
   118f2:	2b00      	cmp	r3, #0
   118f4:	f2c0 80a9 	blt.w	11a4a <_vfprintf_r+0x1aba>
   118f8:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
   118fc:	901d      	str	r0, [sp, #116]	; 0x74
   118fe:	930c      	str	r3, [sp, #48]	; 0x30
   11900:	900d      	str	r0, [sp, #52]	; 0x34
   11902:	f7ff ba87 	b.w	10e14 <_vfprintf_r+0xe84>
   11906:	2306      	movs	r3, #6
   11908:	9308      	str	r3, [sp, #32]
   1190a:	f026 0320 	bic.w	r3, r6, #32
   1190e:	9306      	str	r3, [sp, #24]
   11910:	f7ff ba6b 	b.w	10dea <_vfprintf_r+0xe5a>
   11914:	4645      	mov	r5, r8
   11916:	4688      	mov	r8, r1
   11918:	3301      	adds	r3, #1
   1191a:	4432      	add	r2, r6
   1191c:	2b07      	cmp	r3, #7
   1191e:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   11922:	f8c8 9000 	str.w	r9, [r8]
   11926:	f8c8 6004 	str.w	r6, [r8, #4]
   1192a:	f77f aa22 	ble.w	10d72 <_vfprintf_r+0xde2>
   1192e:	9907      	ldr	r1, [sp, #28]
   11930:	9809      	ldr	r0, [sp, #36]	; 0x24
   11932:	aa28      	add	r2, sp, #160	; 0xa0
   11934:	f7fd fc06 	bl	f144 <__sprint_r>
   11938:	2800      	cmp	r0, #0
   1193a:	f47e ac5e 	bne.w	101fa <_vfprintf_r+0x26a>
   1193e:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   11942:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   11946:	e438      	b.n	111ba <_vfprintf_r+0x122a>
   11948:	aa22      	add	r2, sp, #136	; 0x88
   1194a:	4658      	mov	r0, fp
   1194c:	990c      	ldr	r1, [sp, #48]	; 0x30
   1194e:	f002 fde9 	bl	14524 <frexp>
   11952:	2200      	movs	r2, #0
   11954:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   11958:	f004 f958 	bl	15c0c <__aeabi_dmul>
   1195c:	4602      	mov	r2, r0
   1195e:	460b      	mov	r3, r1
   11960:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   11964:	2200      	movs	r2, #0
   11966:	2300      	movs	r3, #0
   11968:	f004 fbb8 	bl	160dc <__aeabi_dcmpeq>
   1196c:	b108      	cbz	r0, 11972 <_vfprintf_r+0x19e2>
   1196e:	2301      	movs	r3, #1
   11970:	9322      	str	r3, [sp, #136]	; 0x88
   11972:	4b5a      	ldr	r3, [pc, #360]	; (11adc <_vfprintf_r+0x1b4c>)
   11974:	930c      	str	r3, [sp, #48]	; 0x30
   11976:	e4ea      	b.n	1134e <_vfprintf_r+0x13be>
   11978:	9b16      	ldr	r3, [sp, #88]	; 0x58
   1197a:	2666      	movs	r6, #102	; 0x66
   1197c:	18d3      	adds	r3, r2, r3
   1197e:	4419      	add	r1, r3
   11980:	910c      	str	r1, [sp, #48]	; 0x30
   11982:	e6bc      	b.n	116fe <_vfprintf_r+0x176e>
   11984:	f106 020f 	add.w	r2, r6, #15
   11988:	2101      	movs	r1, #1
   1198a:	b2d2      	uxtb	r2, r2
   1198c:	f7ff ba72 	b.w	10e74 <_vfprintf_r+0xee4>
   11990:	2667      	movs	r6, #103	; 0x67
   11992:	e572      	b.n	1147a <_vfprintf_r+0x14ea>
   11994:	2900      	cmp	r1, #0
   11996:	d15f      	bne.n	11a58 <_vfprintf_r+0x1ac8>
   11998:	2230      	movs	r2, #48	; 0x30
   1199a:	f88d 2092 	strb.w	r2, [sp, #146]	; 0x92
   1199e:	f10d 0293 	add.w	r2, sp, #147	; 0x93
   119a2:	3330      	adds	r3, #48	; 0x30
   119a4:	f802 3b01 	strb.w	r3, [r2], #1
   119a8:	ab24      	add	r3, sp, #144	; 0x90
   119aa:	1ad3      	subs	r3, r2, r3
   119ac:	931a      	str	r3, [sp, #104]	; 0x68
   119ae:	f7ff baa1 	b.w	10ef4 <_vfprintf_r+0xf64>
   119b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   119b4:	930c      	str	r3, [sp, #48]	; 0x30
   119b6:	e557      	b.n	11468 <_vfprintf_r+0x14d8>
   119b8:	9b15      	ldr	r3, [sp, #84]	; 0x54
   119ba:	2003      	movs	r0, #3
   119bc:	2b00      	cmp	r3, #0
   119be:	bfb8      	it	lt
   119c0:	222d      	movlt	r2, #45	; 0x2d
   119c2:	f04f 0300 	mov.w	r3, #0
   119c6:	bfa8      	it	ge
   119c8:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
   119cc:	4619      	mov	r1, r3
   119ce:	930d      	str	r3, [sp, #52]	; 0x34
   119d0:	4d43      	ldr	r5, [pc, #268]	; (11ae0 <_vfprintf_r+0x1b50>)
   119d2:	4b44      	ldr	r3, [pc, #272]	; (11ae4 <_vfprintf_r+0x1b54>)
   119d4:	bfb8      	it	lt
   119d6:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
   119da:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   119de:	9006      	str	r0, [sp, #24]
   119e0:	f7fe bcef 	b.w	103c2 <_vfprintf_r+0x432>
   119e4:	2300      	movs	r3, #0
   119e6:	930d      	str	r3, [sp, #52]	; 0x34
   119e8:	e6d0      	b.n	1178c <_vfprintf_r+0x17fc>
   119ea:	9119      	str	r1, [sp, #100]	; 0x64
   119ec:	9210      	str	r2, [sp, #64]	; 0x40
   119ee:	9013      	str	r0, [sp, #76]	; 0x4c
   119f0:	940f      	str	r4, [sp, #60]	; 0x3c
   119f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   119f4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   119f6:	991c      	ldr	r1, [sp, #112]	; 0x70
   119f8:	4413      	add	r3, r2
   119fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   119fc:	fb01 2303 	mla	r3, r1, r3, r2
   11a00:	930c      	str	r3, [sp, #48]	; 0x30
   11a02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   11a06:	9306      	str	r3, [sp, #24]
   11a08:	f7ff ba8b 	b.w	10f22 <_vfprintf_r+0xf92>
   11a0c:	4658      	mov	r0, fp
   11a0e:	2200      	movs	r2, #0
   11a10:	2300      	movs	r3, #0
   11a12:	990c      	ldr	r1, [sp, #48]	; 0x30
   11a14:	f004 fb62 	bl	160dc <__aeabi_dcmpeq>
   11a18:	2800      	cmp	r0, #0
   11a1a:	f47f ae37 	bne.w	1168c <_vfprintf_r+0x16fc>
   11a1e:	9b08      	ldr	r3, [sp, #32]
   11a20:	f1c3 0301 	rsb	r3, r3, #1
   11a24:	9322      	str	r3, [sp, #136]	; 0x88
   11a26:	e632      	b.n	1168e <_vfprintf_r+0x16fe>
   11a28:	f1c3 0301 	rsb	r3, r3, #1
   11a2c:	441a      	add	r2, r3
   11a2e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   11a32:	2667      	movs	r6, #103	; 0x67
   11a34:	920c      	str	r2, [sp, #48]	; 0x30
   11a36:	9306      	str	r3, [sp, #24]
   11a38:	e523      	b.n	11482 <_vfprintf_r+0x14f2>
   11a3a:	9829      	ldr	r0, [sp, #164]	; 0xa4
   11a3c:	e5ad      	b.n	1159a <_vfprintf_r+0x160a>
   11a3e:	f019 0f01 	tst.w	r9, #1
   11a42:	f43f aa62 	beq.w	10f0a <_vfprintf_r+0xf7a>
   11a46:	f7ff ba5c 	b.w	10f02 <_vfprintf_r+0xf72>
   11a4a:	900d      	str	r0, [sp, #52]	; 0x34
   11a4c:	e69e      	b.n	1178c <_vfprintf_r+0x17fc>
   11a4e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   11a50:	f8df 9084 	ldr.w	r9, [pc, #132]	; 11ad8 <_vfprintf_r+0x1b48>
   11a54:	f7ff bb51 	b.w	110fa <_vfprintf_r+0x116a>
   11a58:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   11a5c:	e7a1      	b.n	119a2 <_vfprintf_r+0x1a12>
   11a5e:	9a08      	ldr	r2, [sp, #32]
   11a60:	f009 0901 	and.w	r9, r9, #1
   11a64:	ea59 0302 	orrs.w	r3, r9, r2
   11a68:	d104      	bne.n	11a74 <_vfprintf_r+0x1ae4>
   11a6a:	2301      	movs	r3, #1
   11a6c:	2666      	movs	r6, #102	; 0x66
   11a6e:	9306      	str	r3, [sp, #24]
   11a70:	930c      	str	r3, [sp, #48]	; 0x30
   11a72:	e506      	b.n	11482 <_vfprintf_r+0x14f2>
   11a74:	9b16      	ldr	r3, [sp, #88]	; 0x58
   11a76:	2666      	movs	r6, #102	; 0x66
   11a78:	3301      	adds	r3, #1
   11a7a:	441a      	add	r2, r3
   11a7c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   11a80:	920c      	str	r2, [sp, #48]	; 0x30
   11a82:	9306      	str	r3, [sp, #24]
   11a84:	e4fd      	b.n	11482 <_vfprintf_r+0x14f2>
   11a86:	f8df 9050 	ldr.w	r9, [pc, #80]	; 11ad8 <_vfprintf_r+0x1b48>
   11a8a:	f7ff bbbb 	b.w	11204 <_vfprintf_r+0x1274>
   11a8e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   11a90:	f8df 9044 	ldr.w	r9, [pc, #68]	; 11ad8 <_vfprintf_r+0x1b48>
   11a94:	e5af      	b.n	115f6 <_vfprintf_r+0x1666>
   11a96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   11a98:	f89a 6001 	ldrb.w	r6, [sl, #1]
   11a9c:	4692      	mov	sl, r2
   11a9e:	f853 2b04 	ldr.w	r2, [r3], #4
   11aa2:	930e      	str	r3, [sp, #56]	; 0x38
   11aa4:	ea42 73e2 	orr.w	r3, r2, r2, asr #31
   11aa8:	9308      	str	r3, [sp, #32]
   11aaa:	f7fe bae0 	b.w	1006e <_vfprintf_r+0xde>
   11aae:	9a07      	ldr	r2, [sp, #28]
   11ab0:	8993      	ldrh	r3, [r2, #12]
   11ab2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11ab6:	8193      	strh	r3, [r2, #12]
   11ab8:	f7fe bba5 	b.w	10206 <_vfprintf_r+0x276>
   11abc:	2300      	movs	r3, #0
   11abe:	930f      	str	r3, [sp, #60]	; 0x3c
   11ac0:	9313      	str	r3, [sp, #76]	; 0x4c
   11ac2:	e796      	b.n	119f2 <_vfprintf_r+0x1a62>
   11ac4:	9c08      	ldr	r4, [sp, #32]
   11ac6:	e6ca      	b.n	1185e <_vfprintf_r+0x18ce>
   11ac8:	f8df 900c 	ldr.w	r9, [pc, #12]	; 11ad8 <_vfprintf_r+0x1b48>
   11acc:	e724      	b.n	11918 <_vfprintf_r+0x1988>
   11ace:	2302      	movs	r3, #2
   11ad0:	931a      	str	r3, [sp, #104]	; 0x68
   11ad2:	f7ff ba0f 	b.w	10ef4 <_vfprintf_r+0xf64>
   11ad6:	bf00      	nop
   11ad8:	0001a04c 	.word	0x0001a04c
   11adc:	00019fc8 	.word	0x00019fc8
   11ae0:	00019fc0 	.word	0x00019fc0
   11ae4:	00019fc4 	.word	0x00019fc4

00011ae8 <vfprintf>:
   11ae8:	468c      	mov	ip, r1
   11aea:	b500      	push	{lr}
   11aec:	4686      	mov	lr, r0
   11aee:	4613      	mov	r3, r2
   11af0:	4a03      	ldr	r2, [pc, #12]	; (11b00 <vfprintf+0x18>)
   11af2:	4671      	mov	r1, lr
   11af4:	6810      	ldr	r0, [r2, #0]
   11af6:	f85d eb04 	ldr.w	lr, [sp], #4
   11afa:	4662      	mov	r2, ip
   11afc:	f7fe ba48 	b.w	ff90 <_vfprintf_r>
   11b00:	20000124 	.word	0x20000124

00011b04 <__sbprintf>:
   11b04:	b5f0      	push	{r4, r5, r6, r7, lr}
   11b06:	f44f 6c80 	mov.w	ip, #1024	; 0x400
   11b0a:	4615      	mov	r5, r2
   11b0c:	2400      	movs	r4, #0
   11b0e:	4606      	mov	r6, r0
   11b10:	461f      	mov	r7, r3
   11b12:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
   11b16:	ab1a      	add	r3, sp, #104	; 0x68
   11b18:	9300      	str	r3, [sp, #0]
   11b1a:	9304      	str	r3, [sp, #16]
   11b1c:	898b      	ldrh	r3, [r1, #12]
   11b1e:	a816      	add	r0, sp, #88	; 0x58
   11b20:	f023 0302 	bic.w	r3, r3, #2
   11b24:	f8ad 300c 	strh.w	r3, [sp, #12]
   11b28:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   11b2a:	9406      	str	r4, [sp, #24]
   11b2c:	9319      	str	r3, [sp, #100]	; 0x64
   11b2e:	89cb      	ldrh	r3, [r1, #14]
   11b30:	460c      	mov	r4, r1
   11b32:	f8ad 300e 	strh.w	r3, [sp, #14]
   11b36:	69cb      	ldr	r3, [r1, #28]
   11b38:	f8cd c008 	str.w	ip, [sp, #8]
   11b3c:	9307      	str	r3, [sp, #28]
   11b3e:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   11b40:	f8cd c014 	str.w	ip, [sp, #20]
   11b44:	9309      	str	r3, [sp, #36]	; 0x24
   11b46:	f7fa fae5 	bl	c114 <__retarget_lock_init_recursive>
   11b4a:	462a      	mov	r2, r5
   11b4c:	463b      	mov	r3, r7
   11b4e:	4669      	mov	r1, sp
   11b50:	4630      	mov	r0, r6
   11b52:	f7fe fa1d 	bl	ff90 <_vfprintf_r>
   11b56:	1e05      	subs	r5, r0, #0
   11b58:	db07      	blt.n	11b6a <__sbprintf+0x66>
   11b5a:	4669      	mov	r1, sp
   11b5c:	4630      	mov	r0, r6
   11b5e:	f001 f9f7 	bl	12f50 <_fflush_r>
   11b62:	2800      	cmp	r0, #0
   11b64:	bf18      	it	ne
   11b66:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
   11b6a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   11b6e:	065b      	lsls	r3, r3, #25
   11b70:	d503      	bpl.n	11b7a <__sbprintf+0x76>
   11b72:	89a3      	ldrh	r3, [r4, #12]
   11b74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11b78:	81a3      	strh	r3, [r4, #12]
   11b7a:	9816      	ldr	r0, [sp, #88]	; 0x58
   11b7c:	f7fa face 	bl	c11c <__retarget_lock_close_recursive>
   11b80:	4628      	mov	r0, r5
   11b82:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
   11b86:	bdf0      	pop	{r4, r5, r6, r7, pc}

00011b88 <__swbuf_r>:
   11b88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   11b8a:	4606      	mov	r6, r0
   11b8c:	460d      	mov	r5, r1
   11b8e:	4614      	mov	r4, r2
   11b90:	b110      	cbz	r0, 11b98 <__swbuf_r+0x10>
   11b92:	6b83      	ldr	r3, [r0, #56]	; 0x38
   11b94:	2b00      	cmp	r3, #0
   11b96:	d043      	beq.n	11c20 <__swbuf_r+0x98>
   11b98:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   11b9c:	69a3      	ldr	r3, [r4, #24]
   11b9e:	0710      	lsls	r0, r2, #28
   11ba0:	60a3      	str	r3, [r4, #8]
   11ba2:	b291      	uxth	r1, r2
   11ba4:	d51b      	bpl.n	11bde <__swbuf_r+0x56>
   11ba6:	6923      	ldr	r3, [r4, #16]
   11ba8:	b1cb      	cbz	r3, 11bde <__swbuf_r+0x56>
   11baa:	b2ed      	uxtb	r5, r5
   11bac:	0489      	lsls	r1, r1, #18
   11bae:	462f      	mov	r7, r5
   11bb0:	d522      	bpl.n	11bf8 <__swbuf_r+0x70>
   11bb2:	6822      	ldr	r2, [r4, #0]
   11bb4:	6961      	ldr	r1, [r4, #20]
   11bb6:	1ad3      	subs	r3, r2, r3
   11bb8:	4299      	cmp	r1, r3
   11bba:	dd29      	ble.n	11c10 <__swbuf_r+0x88>
   11bbc:	3301      	adds	r3, #1
   11bbe:	68a1      	ldr	r1, [r4, #8]
   11bc0:	3901      	subs	r1, #1
   11bc2:	60a1      	str	r1, [r4, #8]
   11bc4:	1c51      	adds	r1, r2, #1
   11bc6:	6021      	str	r1, [r4, #0]
   11bc8:	7015      	strb	r5, [r2, #0]
   11bca:	6962      	ldr	r2, [r4, #20]
   11bcc:	429a      	cmp	r2, r3
   11bce:	d02a      	beq.n	11c26 <__swbuf_r+0x9e>
   11bd0:	89a3      	ldrh	r3, [r4, #12]
   11bd2:	07db      	lsls	r3, r3, #31
   11bd4:	d501      	bpl.n	11bda <__swbuf_r+0x52>
   11bd6:	2d0a      	cmp	r5, #10
   11bd8:	d025      	beq.n	11c26 <__swbuf_r+0x9e>
   11bda:	4638      	mov	r0, r7
   11bdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   11bde:	4621      	mov	r1, r4
   11be0:	4630      	mov	r0, r6
   11be2:	f000 f849 	bl	11c78 <__swsetup_r>
   11be6:	bb20      	cbnz	r0, 11c32 <__swbuf_r+0xaa>
   11be8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   11bec:	b2ed      	uxtb	r5, r5
   11bee:	b291      	uxth	r1, r2
   11bf0:	0489      	lsls	r1, r1, #18
   11bf2:	462f      	mov	r7, r5
   11bf4:	6923      	ldr	r3, [r4, #16]
   11bf6:	d4dc      	bmi.n	11bb2 <__swbuf_r+0x2a>
   11bf8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   11bfc:	81a2      	strh	r2, [r4, #12]
   11bfe:	6e62      	ldr	r2, [r4, #100]	; 0x64
   11c00:	6961      	ldr	r1, [r4, #20]
   11c02:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   11c06:	6662      	str	r2, [r4, #100]	; 0x64
   11c08:	6822      	ldr	r2, [r4, #0]
   11c0a:	1ad3      	subs	r3, r2, r3
   11c0c:	4299      	cmp	r1, r3
   11c0e:	dcd5      	bgt.n	11bbc <__swbuf_r+0x34>
   11c10:	4621      	mov	r1, r4
   11c12:	4630      	mov	r0, r6
   11c14:	f001 f99c 	bl	12f50 <_fflush_r>
   11c18:	b958      	cbnz	r0, 11c32 <__swbuf_r+0xaa>
   11c1a:	2301      	movs	r3, #1
   11c1c:	6822      	ldr	r2, [r4, #0]
   11c1e:	e7ce      	b.n	11bbe <__swbuf_r+0x36>
   11c20:	f001 fa42 	bl	130a8 <__sinit>
   11c24:	e7b8      	b.n	11b98 <__swbuf_r+0x10>
   11c26:	4621      	mov	r1, r4
   11c28:	4630      	mov	r0, r6
   11c2a:	f001 f991 	bl	12f50 <_fflush_r>
   11c2e:	2800      	cmp	r0, #0
   11c30:	d0d3      	beq.n	11bda <__swbuf_r+0x52>
   11c32:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   11c36:	e7d0      	b.n	11bda <__swbuf_r+0x52>

00011c38 <__swbuf>:
   11c38:	4603      	mov	r3, r0
   11c3a:	460a      	mov	r2, r1
   11c3c:	4902      	ldr	r1, [pc, #8]	; (11c48 <__swbuf+0x10>)
   11c3e:	6808      	ldr	r0, [r1, #0]
   11c40:	4619      	mov	r1, r3
   11c42:	f7ff bfa1 	b.w	11b88 <__swbuf_r>
   11c46:	bf00      	nop
   11c48:	20000124 	.word	0x20000124

00011c4c <_write_r>:
   11c4c:	b538      	push	{r3, r4, r5, lr}
   11c4e:	460c      	mov	r4, r1
   11c50:	4611      	mov	r1, r2
   11c52:	2200      	movs	r2, #0
   11c54:	4684      	mov	ip, r0
   11c56:	4d07      	ldr	r5, [pc, #28]	; (11c74 <_write_r+0x28>)
   11c58:	4620      	mov	r0, r4
   11c5a:	602a      	str	r2, [r5, #0]
   11c5c:	461a      	mov	r2, r3
   11c5e:	4664      	mov	r4, ip
   11c60:	f004 fd12 	bl	16688 <_write>
   11c64:	1c43      	adds	r3, r0, #1
   11c66:	d000      	beq.n	11c6a <_write_r+0x1e>
   11c68:	bd38      	pop	{r3, r4, r5, pc}
   11c6a:	682b      	ldr	r3, [r5, #0]
   11c6c:	2b00      	cmp	r3, #0
   11c6e:	d0fb      	beq.n	11c68 <_write_r+0x1c>
   11c70:	6023      	str	r3, [r4, #0]
   11c72:	bd38      	pop	{r3, r4, r5, pc}
   11c74:	20001fa8 	.word	0x20001fa8

00011c78 <__swsetup_r>:
   11c78:	b538      	push	{r3, r4, r5, lr}
   11c7a:	4b33      	ldr	r3, [pc, #204]	; (11d48 <__swsetup_r+0xd0>)
   11c7c:	4605      	mov	r5, r0
   11c7e:	681b      	ldr	r3, [r3, #0]
   11c80:	460c      	mov	r4, r1
   11c82:	b10b      	cbz	r3, 11c88 <__swsetup_r+0x10>
   11c84:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   11c86:	b312      	cbz	r2, 11cce <__swsetup_r+0x56>
   11c88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   11c8c:	0718      	lsls	r0, r3, #28
   11c8e:	b29a      	uxth	r2, r3
   11c90:	d525      	bpl.n	11cde <__swsetup_r+0x66>
   11c92:	6921      	ldr	r1, [r4, #16]
   11c94:	2900      	cmp	r1, #0
   11c96:	d02d      	beq.n	11cf4 <__swsetup_r+0x7c>
   11c98:	f012 0001 	ands.w	r0, r2, #1
   11c9c:	d007      	beq.n	11cae <__swsetup_r+0x36>
   11c9e:	2500      	movs	r5, #0
   11ca0:	6960      	ldr	r0, [r4, #20]
   11ca2:	60a5      	str	r5, [r4, #8]
   11ca4:	4240      	negs	r0, r0
   11ca6:	61a0      	str	r0, [r4, #24]
   11ca8:	b139      	cbz	r1, 11cba <__swsetup_r+0x42>
   11caa:	2000      	movs	r0, #0
   11cac:	bd38      	pop	{r3, r4, r5, pc}
   11cae:	0795      	lsls	r5, r2, #30
   11cb0:	bf58      	it	pl
   11cb2:	6960      	ldrpl	r0, [r4, #20]
   11cb4:	60a0      	str	r0, [r4, #8]
   11cb6:	2900      	cmp	r1, #0
   11cb8:	d1f7      	bne.n	11caa <__swsetup_r+0x32>
   11cba:	0612      	lsls	r2, r2, #24
   11cbc:	bf58      	it	pl
   11cbe:	4608      	movpl	r0, r1
   11cc0:	d5f4      	bpl.n	11cac <__swsetup_r+0x34>
   11cc2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11cc6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   11cca:	81a3      	strh	r3, [r4, #12]
   11ccc:	bd38      	pop	{r3, r4, r5, pc}
   11cce:	4618      	mov	r0, r3
   11cd0:	f001 f9ea 	bl	130a8 <__sinit>
   11cd4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   11cd8:	0718      	lsls	r0, r3, #28
   11cda:	b29a      	uxth	r2, r3
   11cdc:	d4d9      	bmi.n	11c92 <__swsetup_r+0x1a>
   11cde:	06d1      	lsls	r1, r2, #27
   11ce0:	d52a      	bpl.n	11d38 <__swsetup_r+0xc0>
   11ce2:	0752      	lsls	r2, r2, #29
   11ce4:	d414      	bmi.n	11d10 <__swsetup_r+0x98>
   11ce6:	6921      	ldr	r1, [r4, #16]
   11ce8:	f043 0308 	orr.w	r3, r3, #8
   11cec:	81a3      	strh	r3, [r4, #12]
   11cee:	b29a      	uxth	r2, r3
   11cf0:	2900      	cmp	r1, #0
   11cf2:	d1d1      	bne.n	11c98 <__swsetup_r+0x20>
   11cf4:	f402 7020 	and.w	r0, r2, #640	; 0x280
   11cf8:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
   11cfc:	d0cc      	beq.n	11c98 <__swsetup_r+0x20>
   11cfe:	4621      	mov	r1, r4
   11d00:	4628      	mov	r0, r5
   11d02:	f001 fdaf 	bl	13864 <__smakebuf_r>
   11d06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   11d0a:	6921      	ldr	r1, [r4, #16]
   11d0c:	b29a      	uxth	r2, r3
   11d0e:	e7c3      	b.n	11c98 <__swsetup_r+0x20>
   11d10:	6b21      	ldr	r1, [r4, #48]	; 0x30
   11d12:	b151      	cbz	r1, 11d2a <__swsetup_r+0xb2>
   11d14:	f104 0240 	add.w	r2, r4, #64	; 0x40
   11d18:	4291      	cmp	r1, r2
   11d1a:	d004      	beq.n	11d26 <__swsetup_r+0xae>
   11d1c:	4628      	mov	r0, r5
   11d1e:	f001 fc0d 	bl	1353c <_free_r>
   11d22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   11d26:	2200      	movs	r2, #0
   11d28:	6322      	str	r2, [r4, #48]	; 0x30
   11d2a:	2200      	movs	r2, #0
   11d2c:	6921      	ldr	r1, [r4, #16]
   11d2e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   11d32:	e9c4 1200 	strd	r1, r2, [r4]
   11d36:	e7d7      	b.n	11ce8 <__swsetup_r+0x70>
   11d38:	2209      	movs	r2, #9
   11d3a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11d3e:	602a      	str	r2, [r5, #0]
   11d40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   11d44:	81a3      	strh	r3, [r4, #12]
   11d46:	bd38      	pop	{r3, r4, r5, pc}
   11d48:	20000124 	.word	0x20000124

00011d4c <register_fini>:
   11d4c:	4b02      	ldr	r3, [pc, #8]	; (11d58 <register_fini+0xc>)
   11d4e:	b113      	cbz	r3, 11d56 <register_fini+0xa>
   11d50:	4802      	ldr	r0, [pc, #8]	; (11d5c <register_fini+0x10>)
   11d52:	f000 b867 	b.w	11e24 <atexit>
   11d56:	4770      	bx	lr
   11d58:	00000000 	.word	0x00000000
   11d5c:	000132f5 	.word	0x000132f5

00011d60 <__call_exitprocs>:
   11d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d64:	4683      	mov	fp, r0
   11d66:	4b2d      	ldr	r3, [pc, #180]	; (11e1c <__call_exitprocs+0xbc>)
   11d68:	b083      	sub	sp, #12
   11d6a:	6818      	ldr	r0, [r3, #0]
   11d6c:	460f      	mov	r7, r1
   11d6e:	f8cd b004 	str.w	fp, [sp, #4]
   11d72:	f7fa f9d7 	bl	c124 <__retarget_lock_acquire_recursive>
   11d76:	4b2a      	ldr	r3, [pc, #168]	; (11e20 <__call_exitprocs+0xc0>)
   11d78:	f8d3 8000 	ldr.w	r8, [r3]
   11d7c:	f8d8 6148 	ldr.w	r6, [r8, #328]	; 0x148
   11d80:	b19e      	cbz	r6, 11daa <__call_exitprocs+0x4a>
   11d82:	f04f 0901 	mov.w	r9, #1
   11d86:	f04f 0a00 	mov.w	sl, #0
   11d8a:	6874      	ldr	r4, [r6, #4]
   11d8c:	1e65      	subs	r5, r4, #1
   11d8e:	d40c      	bmi.n	11daa <__call_exitprocs+0x4a>
   11d90:	3401      	adds	r4, #1
   11d92:	eb06 0484 	add.w	r4, r6, r4, lsl #2
   11d96:	b17f      	cbz	r7, 11db8 <__call_exitprocs+0x58>
   11d98:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
   11d9c:	42bb      	cmp	r3, r7
   11d9e:	d00b      	beq.n	11db8 <__call_exitprocs+0x58>
   11da0:	3d01      	subs	r5, #1
   11da2:	1c6b      	adds	r3, r5, #1
   11da4:	f1a4 0404 	sub.w	r4, r4, #4
   11da8:	d1f5      	bne.n	11d96 <__call_exitprocs+0x36>
   11daa:	4b1c      	ldr	r3, [pc, #112]	; (11e1c <__call_exitprocs+0xbc>)
   11dac:	6818      	ldr	r0, [r3, #0]
   11dae:	b003      	add	sp, #12
   11db0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11db4:	f7fa b9be 	b.w	c134 <__retarget_lock_release_recursive>
   11db8:	6873      	ldr	r3, [r6, #4]
   11dba:	6822      	ldr	r2, [r4, #0]
   11dbc:	3b01      	subs	r3, #1
   11dbe:	42ab      	cmp	r3, r5
   11dc0:	bf0c      	ite	eq
   11dc2:	6075      	streq	r5, [r6, #4]
   11dc4:	f8c4 a000 	strne.w	sl, [r4]
   11dc8:	2a00      	cmp	r2, #0
   11dca:	d0e9      	beq.n	11da0 <__call_exitprocs+0x40>
   11dcc:	f8d6 0188 	ldr.w	r0, [r6, #392]	; 0x188
   11dd0:	fa09 f105 	lsl.w	r1, r9, r5
   11dd4:	4201      	tst	r1, r0
   11dd6:	f8d6 b004 	ldr.w	fp, [r6, #4]
   11dda:	d10b      	bne.n	11df4 <__call_exitprocs+0x94>
   11ddc:	4790      	blx	r2
   11dde:	6872      	ldr	r2, [r6, #4]
   11de0:	455a      	cmp	r2, fp
   11de2:	d112      	bne.n	11e0a <__call_exitprocs+0xaa>
   11de4:	f8d8 3148 	ldr.w	r3, [r8, #328]	; 0x148
   11de8:	42b3      	cmp	r3, r6
   11dea:	d0d9      	beq.n	11da0 <__call_exitprocs+0x40>
   11dec:	461e      	mov	r6, r3
   11dee:	2e00      	cmp	r6, #0
   11df0:	d1cb      	bne.n	11d8a <__call_exitprocs+0x2a>
   11df2:	e7da      	b.n	11daa <__call_exitprocs+0x4a>
   11df4:	f8d6 018c 	ldr.w	r0, [r6, #396]	; 0x18c
   11df8:	4201      	tst	r1, r0
   11dfa:	d10b      	bne.n	11e14 <__call_exitprocs+0xb4>
   11dfc:	9801      	ldr	r0, [sp, #4]
   11dfe:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
   11e02:	4790      	blx	r2
   11e04:	6872      	ldr	r2, [r6, #4]
   11e06:	455a      	cmp	r2, fp
   11e08:	d0ec      	beq.n	11de4 <__call_exitprocs+0x84>
   11e0a:	f8d8 6148 	ldr.w	r6, [r8, #328]	; 0x148
   11e0e:	2e00      	cmp	r6, #0
   11e10:	d1bb      	bne.n	11d8a <__call_exitprocs+0x2a>
   11e12:	e7ca      	b.n	11daa <__call_exitprocs+0x4a>
   11e14:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
   11e18:	4790      	blx	r2
   11e1a:	e7e0      	b.n	11dde <__call_exitprocs+0x7e>
   11e1c:	20000960 	.word	0x20000960
   11e20:	00019fb4 	.word	0x00019fb4

00011e24 <atexit>:
   11e24:	2300      	movs	r3, #0
   11e26:	4601      	mov	r1, r0
   11e28:	461a      	mov	r2, r3
   11e2a:	4618      	mov	r0, r3
   11e2c:	f003 baae 	b.w	1538c <__register_exitproc>

00011e30 <quorem>:
   11e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e34:	6903      	ldr	r3, [r0, #16]
   11e36:	690c      	ldr	r4, [r1, #16]
   11e38:	b085      	sub	sp, #20
   11e3a:	42a3      	cmp	r3, r4
   11e3c:	f2c0 8089 	blt.w	11f52 <quorem+0x122>
   11e40:	3c01      	subs	r4, #1
   11e42:	f101 0514 	add.w	r5, r1, #20
   11e46:	00a3      	lsls	r3, r4, #2
   11e48:	f100 0814 	add.w	r8, r0, #20
   11e4c:	9301      	str	r3, [sp, #4]
   11e4e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
   11e52:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   11e56:	3301      	adds	r3, #1
   11e58:	468a      	mov	sl, r1
   11e5a:	429a      	cmp	r2, r3
   11e5c:	eb08 0184 	add.w	r1, r8, r4, lsl #2
   11e60:	4681      	mov	r9, r0
   11e62:	fbb2 f6f3 	udiv	r6, r2, r3
   11e66:	eb05 0784 	add.w	r7, r5, r4, lsl #2
   11e6a:	9102      	str	r1, [sp, #8]
   11e6c:	d33a      	bcc.n	11ee4 <quorem+0xb4>
   11e6e:	2100      	movs	r1, #0
   11e70:	46ae      	mov	lr, r5
   11e72:	4640      	mov	r0, r8
   11e74:	460a      	mov	r2, r1
   11e76:	46a3      	mov	fp, r4
   11e78:	9503      	str	r5, [sp, #12]
   11e7a:	f85e 5b04 	ldr.w	r5, [lr], #4
   11e7e:	6804      	ldr	r4, [r0, #0]
   11e80:	b2ab      	uxth	r3, r5
   11e82:	fb06 1303 	mla	r3, r6, r3, r1
   11e86:	0c2d      	lsrs	r5, r5, #16
   11e88:	0c19      	lsrs	r1, r3, #16
   11e8a:	fb06 1105 	mla	r1, r6, r5, r1
   11e8e:	b29b      	uxth	r3, r3
   11e90:	1ad2      	subs	r2, r2, r3
   11e92:	fa1f fc84 	uxth.w	ip, r4
   11e96:	4494      	add	ip, r2
   11e98:	b28a      	uxth	r2, r1
   11e9a:	ebc2 4214 	rsb	r2, r2, r4, lsr #16
   11e9e:	eb02 422c 	add.w	r2, r2, ip, asr #16
   11ea2:	fa1f fc8c 	uxth.w	ip, ip
   11ea6:	ea4c 4302 	orr.w	r3, ip, r2, lsl #16
   11eaa:	4577      	cmp	r7, lr
   11eac:	f840 3b04 	str.w	r3, [r0], #4
   11eb0:	ea4f 4111 	mov.w	r1, r1, lsr #16
   11eb4:	ea4f 4222 	mov.w	r2, r2, asr #16
   11eb8:	d2df      	bcs.n	11e7a <quorem+0x4a>
   11eba:	9b01      	ldr	r3, [sp, #4]
   11ebc:	465c      	mov	r4, fp
   11ebe:	f858 3003 	ldr.w	r3, [r8, r3]
   11ec2:	9d03      	ldr	r5, [sp, #12]
   11ec4:	b973      	cbnz	r3, 11ee4 <quorem+0xb4>
   11ec6:	9b02      	ldr	r3, [sp, #8]
   11ec8:	3b04      	subs	r3, #4
   11eca:	4598      	cmp	r8, r3
   11ecc:	d304      	bcc.n	11ed8 <quorem+0xa8>
   11ece:	e007      	b.n	11ee0 <quorem+0xb0>
   11ed0:	4598      	cmp	r8, r3
   11ed2:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   11ed6:	d203      	bcs.n	11ee0 <quorem+0xb0>
   11ed8:	f853 2904 	ldr.w	r2, [r3], #-4
   11edc:	2a00      	cmp	r2, #0
   11ede:	d0f7      	beq.n	11ed0 <quorem+0xa0>
   11ee0:	f8c9 4010 	str.w	r4, [r9, #16]
   11ee4:	4651      	mov	r1, sl
   11ee6:	4648      	mov	r0, r9
   11ee8:	f002 f852 	bl	13f90 <__mcmp>
   11eec:	2800      	cmp	r0, #0
   11eee:	db2c      	blt.n	11f4a <quorem+0x11a>
   11ef0:	4640      	mov	r0, r8
   11ef2:	2300      	movs	r3, #0
   11ef4:	3601      	adds	r6, #1
   11ef6:	f855 1b04 	ldr.w	r1, [r5], #4
   11efa:	f8d0 c000 	ldr.w	ip, [r0]
   11efe:	b28a      	uxth	r2, r1
   11f00:	1a9a      	subs	r2, r3, r2
   11f02:	fa1f fe8c 	uxth.w	lr, ip
   11f06:	0c0b      	lsrs	r3, r1, #16
   11f08:	4472      	add	r2, lr
   11f0a:	ebc3 431c 	rsb	r3, r3, ip, lsr #16
   11f0e:	eb03 4322 	add.w	r3, r3, r2, asr #16
   11f12:	b292      	uxth	r2, r2
   11f14:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   11f18:	42af      	cmp	r7, r5
   11f1a:	f840 2b04 	str.w	r2, [r0], #4
   11f1e:	ea4f 4323 	mov.w	r3, r3, asr #16
   11f22:	d2e8      	bcs.n	11ef6 <quorem+0xc6>
   11f24:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   11f28:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   11f2c:	b96a      	cbnz	r2, 11f4a <quorem+0x11a>
   11f2e:	3b04      	subs	r3, #4
   11f30:	4598      	cmp	r8, r3
   11f32:	d304      	bcc.n	11f3e <quorem+0x10e>
   11f34:	e007      	b.n	11f46 <quorem+0x116>
   11f36:	4598      	cmp	r8, r3
   11f38:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   11f3c:	d203      	bcs.n	11f46 <quorem+0x116>
   11f3e:	f853 2904 	ldr.w	r2, [r3], #-4
   11f42:	2a00      	cmp	r2, #0
   11f44:	d0f7      	beq.n	11f36 <quorem+0x106>
   11f46:	f8c9 4010 	str.w	r4, [r9, #16]
   11f4a:	4630      	mov	r0, r6
   11f4c:	b005      	add	sp, #20
   11f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f52:	2000      	movs	r0, #0
   11f54:	b005      	add	sp, #20
   11f56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f5a:	bf00      	nop
   11f5c:	0000      	movs	r0, r0
	...

00011f60 <_dtoa_r>:
   11f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f64:	4690      	mov	r8, r2
   11f66:	4699      	mov	r9, r3
   11f68:	6c01      	ldr	r1, [r0, #64]	; 0x40
   11f6a:	b099      	sub	sp, #100	; 0x64
   11f6c:	4604      	mov	r4, r0
   11f6e:	e9cd 8904 	strd	r8, r9, [sp, #16]
   11f72:	9d25      	ldr	r5, [sp, #148]	; 0x94
   11f74:	b141      	cbz	r1, 11f88 <_dtoa_r+0x28>
   11f76:	2301      	movs	r3, #1
   11f78:	6c42      	ldr	r2, [r0, #68]	; 0x44
   11f7a:	4093      	lsls	r3, r2
   11f7c:	608b      	str	r3, [r1, #8]
   11f7e:	604a      	str	r2, [r1, #4]
   11f80:	f001 fd56 	bl	13a30 <_Bfree>
   11f84:	2300      	movs	r3, #0
   11f86:	6423      	str	r3, [r4, #64]	; 0x40
   11f88:	f1b9 0a00 	subs.w	sl, r9, #0
   11f8c:	bfb4      	ite	lt
   11f8e:	2301      	movlt	r3, #1
   11f90:	2300      	movge	r3, #0
   11f92:	602b      	str	r3, [r5, #0]
   11f94:	4b76      	ldr	r3, [pc, #472]	; (12170 <_dtoa_r+0x210>)
   11f96:	bfbc      	itt	lt
   11f98:	f02a 4a00 	biclt.w	sl, sl, #2147483648	; 0x80000000
   11f9c:	f8cd a014 	strlt.w	sl, [sp, #20]
   11fa0:	ea33 030a 	bics.w	r3, r3, sl
   11fa4:	f000 80aa 	beq.w	120fc <_dtoa_r+0x19c>
   11fa8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   11fac:	4610      	mov	r0, r2
   11fae:	4619      	mov	r1, r3
   11fb0:	2200      	movs	r2, #0
   11fb2:	2300      	movs	r3, #0
   11fb4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   11fb8:	f004 f890 	bl	160dc <__aeabi_dcmpeq>
   11fbc:	4607      	mov	r7, r0
   11fbe:	b170      	cbz	r0, 11fde <_dtoa_r+0x7e>
   11fc0:	2301      	movs	r3, #1
   11fc2:	9a24      	ldr	r2, [sp, #144]	; 0x90
   11fc4:	6013      	str	r3, [r2, #0]
   11fc6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   11fc8:	2b00      	cmp	r3, #0
   11fca:	f000 82e6 	beq.w	1259a <_dtoa_r+0x63a>
   11fce:	4869      	ldr	r0, [pc, #420]	; (12174 <_dtoa_r+0x214>)
   11fd0:	6018      	str	r0, [r3, #0]
   11fd2:	1e43      	subs	r3, r0, #1
   11fd4:	9303      	str	r3, [sp, #12]
   11fd6:	9803      	ldr	r0, [sp, #12]
   11fd8:	b019      	add	sp, #100	; 0x64
   11fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fde:	ab16      	add	r3, sp, #88	; 0x58
   11fe0:	9301      	str	r3, [sp, #4]
   11fe2:	ab17      	add	r3, sp, #92	; 0x5c
   11fe4:	9300      	str	r3, [sp, #0]
   11fe6:	4620      	mov	r0, r4
   11fe8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   11fec:	f002 f920 	bl	14230 <__d2b>
   11ff0:	ea5f 561a 	movs.w	r6, sl, lsr #20
   11ff4:	4605      	mov	r5, r0
   11ff6:	f040 8097 	bne.w	12128 <_dtoa_r+0x1c8>
   11ffa:	e9dd 7616 	ldrd	r7, r6, [sp, #88]	; 0x58
   11ffe:	443e      	add	r6, r7
   12000:	f206 4032 	addw	r0, r6, #1074	; 0x432
   12004:	2820      	cmp	r0, #32
   12006:	f340 83b7 	ble.w	12778 <_dtoa_r+0x818>
   1200a:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
   1200e:	fa0a fa00 	lsl.w	sl, sl, r0
   12012:	f206 4012 	addw	r0, r6, #1042	; 0x412
   12016:	fa28 f000 	lsr.w	r0, r8, r0
   1201a:	ea4a 0000 	orr.w	r0, sl, r0
   1201e:	f003 fd7b 	bl	15b18 <__aeabi_ui2d>
   12022:	2301      	movs	r3, #1
   12024:	3e01      	subs	r6, #1
   12026:	930f      	str	r3, [sp, #60]	; 0x3c
   12028:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   1202c:	2200      	movs	r2, #0
   1202e:	4b52      	ldr	r3, [pc, #328]	; (12178 <_dtoa_r+0x218>)
   12030:	f003 fc34 	bl	1589c <__aeabi_dsub>
   12034:	a348      	add	r3, pc, #288	; (adr r3, 12158 <_dtoa_r+0x1f8>)
   12036:	e9d3 2300 	ldrd	r2, r3, [r3]
   1203a:	f003 fde7 	bl	15c0c <__aeabi_dmul>
   1203e:	a348      	add	r3, pc, #288	; (adr r3, 12160 <_dtoa_r+0x200>)
   12040:	e9d3 2300 	ldrd	r2, r3, [r3]
   12044:	f003 fc2c 	bl	158a0 <__adddf3>
   12048:	4680      	mov	r8, r0
   1204a:	4630      	mov	r0, r6
   1204c:	4689      	mov	r9, r1
   1204e:	f003 fd73 	bl	15b38 <__aeabi_i2d>
   12052:	a345      	add	r3, pc, #276	; (adr r3, 12168 <_dtoa_r+0x208>)
   12054:	e9d3 2300 	ldrd	r2, r3, [r3]
   12058:	f003 fdd8 	bl	15c0c <__aeabi_dmul>
   1205c:	4602      	mov	r2, r0
   1205e:	460b      	mov	r3, r1
   12060:	4640      	mov	r0, r8
   12062:	4649      	mov	r1, r9
   12064:	f003 fc1c 	bl	158a0 <__adddf3>
   12068:	4680      	mov	r8, r0
   1206a:	4689      	mov	r9, r1
   1206c:	f004 f868 	bl	16140 <__aeabi_d2iz>
   12070:	2200      	movs	r2, #0
   12072:	4683      	mov	fp, r0
   12074:	2300      	movs	r3, #0
   12076:	4640      	mov	r0, r8
   12078:	4649      	mov	r1, r9
   1207a:	f004 f839 	bl	160f0 <__aeabi_dcmplt>
   1207e:	2800      	cmp	r0, #0
   12080:	f040 827e 	bne.w	12580 <_dtoa_r+0x620>
   12084:	f1bb 0f16 	cmp.w	fp, #22
   12088:	f200 826d 	bhi.w	12566 <_dtoa_r+0x606>
   1208c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   12090:	4b3a      	ldr	r3, [pc, #232]	; (1217c <_dtoa_r+0x21c>)
   12092:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   12096:	e9d3 2300 	ldrd	r2, r3, [r3]
   1209a:	f004 f829 	bl	160f0 <__aeabi_dcmplt>
   1209e:	2800      	cmp	r0, #0
   120a0:	d072      	beq.n	12188 <_dtoa_r+0x228>
   120a2:	2300      	movs	r3, #0
   120a4:	1bbe      	subs	r6, r7, r6
   120a6:	930e      	str	r3, [sp, #56]	; 0x38
   120a8:	1e73      	subs	r3, r6, #1
   120aa:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   120ae:	9306      	str	r3, [sp, #24]
   120b0:	f100 8260 	bmi.w	12574 <_dtoa_r+0x614>
   120b4:	2300      	movs	r3, #0
   120b6:	9309      	str	r3, [sp, #36]	; 0x24
   120b8:	f1bb 0f00 	cmp.w	fp, #0
   120bc:	da6b      	bge.n	12196 <_dtoa_r+0x236>
   120be:	9b09      	ldr	r3, [sp, #36]	; 0x24
   120c0:	f8cd b01c 	str.w	fp, [sp, #28]
   120c4:	eba3 030b 	sub.w	r3, r3, fp
   120c8:	9309      	str	r3, [sp, #36]	; 0x24
   120ca:	f1cb 0300 	rsb	r3, fp, #0
   120ce:	930d      	str	r3, [sp, #52]	; 0x34
   120d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
   120d2:	f04f 0b00 	mov.w	fp, #0
   120d6:	2b09      	cmp	r3, #9
   120d8:	d866      	bhi.n	121a8 <_dtoa_r+0x248>
   120da:	2b05      	cmp	r3, #5
   120dc:	f340 834a 	ble.w	12774 <_dtoa_r+0x814>
   120e0:	2600      	movs	r6, #0
   120e2:	3b04      	subs	r3, #4
   120e4:	9322      	str	r3, [sp, #136]	; 0x88
   120e6:	9b22      	ldr	r3, [sp, #136]	; 0x88
   120e8:	3b02      	subs	r3, #2
   120ea:	2b03      	cmp	r3, #3
   120ec:	f200 866c 	bhi.w	12dc8 <_dtoa_r+0xe68>
   120f0:	e8df f013 	tbh	[pc, r3, lsl #1]
   120f4:	045e0461 	.word	0x045e0461
   120f8:	04380455 	.word	0x04380455
   120fc:	f242 730f 	movw	r3, #9999	; 0x270f
   12100:	9a24      	ldr	r2, [sp, #144]	; 0x90
   12102:	f3ca 0a13 	ubfx	sl, sl, #0, #20
   12106:	6013      	str	r3, [r2, #0]
   12108:	ea5a 0308 	orrs.w	r3, sl, r8
   1210c:	d11a      	bne.n	12144 <_dtoa_r+0x1e4>
   1210e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   12110:	2b00      	cmp	r3, #0
   12112:	f000 8668 	beq.w	12de6 <_dtoa_r+0xe86>
   12116:	4b1a      	ldr	r3, [pc, #104]	; (12180 <_dtoa_r+0x220>)
   12118:	9303      	str	r3, [sp, #12]
   1211a:	3308      	adds	r3, #8
   1211c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   1211e:	9803      	ldr	r0, [sp, #12]
   12120:	6013      	str	r3, [r2, #0]
   12122:	b019      	add	sp, #100	; 0x64
   12124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12128:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	; 0x28
   1212c:	f3c2 0313 	ubfx	r3, r2, #0, #20
   12130:	4608      	mov	r0, r1
   12132:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   12136:	970f      	str	r7, [sp, #60]	; 0x3c
   12138:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   1213c:	9f16      	ldr	r7, [sp, #88]	; 0x58
   1213e:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   12142:	e773      	b.n	1202c <_dtoa_r+0xcc>
   12144:	9b26      	ldr	r3, [sp, #152]	; 0x98
   12146:	2b00      	cmp	r3, #0
   12148:	f040 83ef 	bne.w	1292a <_dtoa_r+0x9ca>
   1214c:	4b0d      	ldr	r3, [pc, #52]	; (12184 <_dtoa_r+0x224>)
   1214e:	9303      	str	r3, [sp, #12]
   12150:	e741      	b.n	11fd6 <_dtoa_r+0x76>
   12152:	bf00      	nop
   12154:	f3af 8000 	nop.w
   12158:	636f4361 	.word	0x636f4361
   1215c:	3fd287a7 	.word	0x3fd287a7
   12160:	8b60c8b3 	.word	0x8b60c8b3
   12164:	3fc68a28 	.word	0x3fc68a28
   12168:	509f79fb 	.word	0x509f79fb
   1216c:	3fd34413 	.word	0x3fd34413
   12170:	7ff00000 	.word	0x7ff00000
   12174:	00019ff9 	.word	0x00019ff9
   12178:	3ff80000 	.word	0x3ff80000
   1217c:	0001a170 	.word	0x0001a170
   12180:	0001a060 	.word	0x0001a060
   12184:	0001a05c 	.word	0x0001a05c
   12188:	1bbe      	subs	r6, r7, r6
   1218a:	1e73      	subs	r3, r6, #1
   1218c:	9306      	str	r3, [sp, #24]
   1218e:	f100 848a 	bmi.w	12aa6 <_dtoa_r+0xb46>
   12192:	900e      	str	r0, [sp, #56]	; 0x38
   12194:	9009      	str	r0, [sp, #36]	; 0x24
   12196:	9b06      	ldr	r3, [sp, #24]
   12198:	445b      	add	r3, fp
   1219a:	e9cd 3b06 	strd	r3, fp, [sp, #24]
   1219e:	2300      	movs	r3, #0
   121a0:	930d      	str	r3, [sp, #52]	; 0x34
   121a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
   121a4:	2b09      	cmp	r3, #9
   121a6:	d998      	bls.n	120da <_dtoa_r+0x17a>
   121a8:	2300      	movs	r3, #0
   121aa:	9322      	str	r3, [sp, #136]	; 0x88
   121ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   121b0:	2601      	movs	r6, #1
   121b2:	9308      	str	r3, [sp, #32]
   121b4:	2300      	movs	r3, #0
   121b6:	960c      	str	r6, [sp, #48]	; 0x30
   121b8:	9323      	str	r3, [sp, #140]	; 0x8c
   121ba:	2100      	movs	r1, #0
   121bc:	9b08      	ldr	r3, [sp, #32]
   121be:	6461      	str	r1, [r4, #68]	; 0x44
   121c0:	9312      	str	r3, [sp, #72]	; 0x48
   121c2:	4620      	mov	r0, r4
   121c4:	f001 fc0e 	bl	139e4 <_Balloc>
   121c8:	9003      	str	r0, [sp, #12]
   121ca:	2800      	cmp	r0, #0
   121cc:	f000 8604 	beq.w	12dd8 <_dtoa_r+0xe78>
   121d0:	9b03      	ldr	r3, [sp, #12]
   121d2:	6423      	str	r3, [r4, #64]	; 0x40
   121d4:	9b08      	ldr	r3, [sp, #32]
   121d6:	2b0e      	cmp	r3, #14
   121d8:	f200 8114 	bhi.w	12404 <_dtoa_r+0x4a4>
   121dc:	2e00      	cmp	r6, #0
   121de:	f000 8111 	beq.w	12404 <_dtoa_r+0x4a4>
   121e2:	9907      	ldr	r1, [sp, #28]
   121e4:	2900      	cmp	r1, #0
   121e6:	f340 8460 	ble.w	12aaa <_dtoa_r+0xb4a>
   121ea:	4baf      	ldr	r3, [pc, #700]	; (124a8 <_dtoa_r+0x548>)
   121ec:	f001 020f 	and.w	r2, r1, #15
   121f0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   121f4:	460a      	mov	r2, r1
   121f6:	e9d3 6700 	ldrd	r6, r7, [r3]
   121fa:	ea4f 1821 	mov.w	r8, r1, asr #4
   121fe:	05d1      	lsls	r1, r2, #23
   12200:	f140 8417 	bpl.w	12a32 <_dtoa_r+0xad2>
   12204:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   12208:	4ba8      	ldr	r3, [pc, #672]	; (124ac <_dtoa_r+0x54c>)
   1220a:	f04f 0a03 	mov.w	sl, #3
   1220e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   12212:	f003 fe25 	bl	15e60 <__aeabi_ddiv>
   12216:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   1221a:	f008 080f 	and.w	r8, r8, #15
   1221e:	f1b8 0f00 	cmp.w	r8, #0
   12222:	d013      	beq.n	1224c <_dtoa_r+0x2ec>
   12224:	f8df 9284 	ldr.w	r9, [pc, #644]	; 124ac <_dtoa_r+0x54c>
   12228:	f018 0f01 	tst.w	r8, #1
   1222c:	d009      	beq.n	12242 <_dtoa_r+0x2e2>
   1222e:	e9d9 2300 	ldrd	r2, r3, [r9]
   12232:	4630      	mov	r0, r6
   12234:	4639      	mov	r1, r7
   12236:	f003 fce9 	bl	15c0c <__aeabi_dmul>
   1223a:	4606      	mov	r6, r0
   1223c:	460f      	mov	r7, r1
   1223e:	f10a 0a01 	add.w	sl, sl, #1
   12242:	ea5f 0868 	movs.w	r8, r8, asr #1
   12246:	f109 0908 	add.w	r9, r9, #8
   1224a:	d1ed      	bne.n	12228 <_dtoa_r+0x2c8>
   1224c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   12250:	4632      	mov	r2, r6
   12252:	463b      	mov	r3, r7
   12254:	f003 fe04 	bl	15e60 <__aeabi_ddiv>
   12258:	4680      	mov	r8, r0
   1225a:	4689      	mov	r9, r1
   1225c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1225e:	b143      	cbz	r3, 12272 <_dtoa_r+0x312>
   12260:	2200      	movs	r2, #0
   12262:	4640      	mov	r0, r8
   12264:	4649      	mov	r1, r9
   12266:	4b92      	ldr	r3, [pc, #584]	; (124b0 <_dtoa_r+0x550>)
   12268:	f003 ff42 	bl	160f0 <__aeabi_dcmplt>
   1226c:	2800      	cmp	r0, #0
   1226e:	f040 8535 	bne.w	12cdc <_dtoa_r+0xd7c>
   12272:	4650      	mov	r0, sl
   12274:	f003 fc60 	bl	15b38 <__aeabi_i2d>
   12278:	4642      	mov	r2, r8
   1227a:	464b      	mov	r3, r9
   1227c:	f003 fcc6 	bl	15c0c <__aeabi_dmul>
   12280:	4b8c      	ldr	r3, [pc, #560]	; (124b4 <_dtoa_r+0x554>)
   12282:	2200      	movs	r2, #0
   12284:	f003 fb0c 	bl	158a0 <__adddf3>
   12288:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   1228c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   12290:	9311      	str	r3, [sp, #68]	; 0x44
   12292:	9b08      	ldr	r3, [sp, #32]
   12294:	2b00      	cmp	r3, #0
   12296:	f000 8097 	beq.w	123c8 <_dtoa_r+0x468>
   1229a:	9b07      	ldr	r3, [sp, #28]
   1229c:	9314      	str	r3, [sp, #80]	; 0x50
   1229e:	9b08      	ldr	r3, [sp, #32]
   122a0:	9313      	str	r3, [sp, #76]	; 0x4c
   122a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   122a4:	2b00      	cmp	r3, #0
   122a6:	f000 84a9 	beq.w	12bfc <_dtoa_r+0xc9c>
   122aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   122ac:	4b7e      	ldr	r3, [pc, #504]	; (124a8 <_dtoa_r+0x548>)
   122ae:	2000      	movs	r0, #0
   122b0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   122b4:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   122b8:	497f      	ldr	r1, [pc, #508]	; (124b8 <_dtoa_r+0x558>)
   122ba:	f003 fdd1 	bl	15e60 <__aeabi_ddiv>
   122be:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   122c2:	f003 faeb 	bl	1589c <__aeabi_dsub>
   122c6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   122ca:	4649      	mov	r1, r9
   122cc:	4640      	mov	r0, r8
   122ce:	f003 ff37 	bl	16140 <__aeabi_d2iz>
   122d2:	4607      	mov	r7, r0
   122d4:	f003 fc30 	bl	15b38 <__aeabi_i2d>
   122d8:	4602      	mov	r2, r0
   122da:	460b      	mov	r3, r1
   122dc:	4640      	mov	r0, r8
   122de:	4649      	mov	r1, r9
   122e0:	f003 fadc 	bl	1589c <__aeabi_dsub>
   122e4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   122e8:	9e03      	ldr	r6, [sp, #12]
   122ea:	3730      	adds	r7, #48	; 0x30
   122ec:	f806 7b01 	strb.w	r7, [r6], #1
   122f0:	4680      	mov	r8, r0
   122f2:	4689      	mov	r9, r1
   122f4:	f003 fefc 	bl	160f0 <__aeabi_dcmplt>
   122f8:	2800      	cmp	r0, #0
   122fa:	f040 852e 	bne.w	12d5a <_dtoa_r+0xdfa>
   122fe:	f8cd b054 	str.w	fp, [sp, #84]	; 0x54
   12302:	2700      	movs	r7, #0
   12304:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   12308:	9510      	str	r5, [sp, #64]	; 0x40
   1230a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   1230c:	9413      	str	r4, [sp, #76]	; 0x4c
   1230e:	e02a      	b.n	12366 <_dtoa_r+0x406>
   12310:	3701      	adds	r7, #1
   12312:	42af      	cmp	r7, r5
   12314:	f280 852e 	bge.w	12d74 <_dtoa_r+0xe14>
   12318:	4650      	mov	r0, sl
   1231a:	4659      	mov	r1, fp
   1231c:	2200      	movs	r2, #0
   1231e:	4b67      	ldr	r3, [pc, #412]	; (124bc <_dtoa_r+0x55c>)
   12320:	f003 fc74 	bl	15c0c <__aeabi_dmul>
   12324:	2200      	movs	r2, #0
   12326:	4b65      	ldr	r3, [pc, #404]	; (124bc <_dtoa_r+0x55c>)
   12328:	4682      	mov	sl, r0
   1232a:	468b      	mov	fp, r1
   1232c:	4640      	mov	r0, r8
   1232e:	4649      	mov	r1, r9
   12330:	f003 fc6c 	bl	15c0c <__aeabi_dmul>
   12334:	4689      	mov	r9, r1
   12336:	4680      	mov	r8, r0
   12338:	f003 ff02 	bl	16140 <__aeabi_d2iz>
   1233c:	4604      	mov	r4, r0
   1233e:	f003 fbfb 	bl	15b38 <__aeabi_i2d>
   12342:	4602      	mov	r2, r0
   12344:	460b      	mov	r3, r1
   12346:	4640      	mov	r0, r8
   12348:	4649      	mov	r1, r9
   1234a:	f003 faa7 	bl	1589c <__aeabi_dsub>
   1234e:	3430      	adds	r4, #48	; 0x30
   12350:	4652      	mov	r2, sl
   12352:	465b      	mov	r3, fp
   12354:	f806 4b01 	strb.w	r4, [r6], #1
   12358:	4680      	mov	r8, r0
   1235a:	4689      	mov	r9, r1
   1235c:	f003 fec8 	bl	160f0 <__aeabi_dcmplt>
   12360:	2800      	cmp	r0, #0
   12362:	f040 84f8 	bne.w	12d56 <_dtoa_r+0xdf6>
   12366:	4642      	mov	r2, r8
   12368:	464b      	mov	r3, r9
   1236a:	2000      	movs	r0, #0
   1236c:	4950      	ldr	r1, [pc, #320]	; (124b0 <_dtoa_r+0x550>)
   1236e:	f003 fa95 	bl	1589c <__aeabi_dsub>
   12372:	4652      	mov	r2, sl
   12374:	465b      	mov	r3, fp
   12376:	f003 febb 	bl	160f0 <__aeabi_dcmplt>
   1237a:	2800      	cmp	r0, #0
   1237c:	d0c8      	beq.n	12310 <_dtoa_r+0x3b0>
   1237e:	e9dd 4313 	ldrd	r4, r3, [sp, #76]	; 0x4c
   12382:	9d10      	ldr	r5, [sp, #64]	; 0x40
   12384:	9a03      	ldr	r2, [sp, #12]
   12386:	9307      	str	r3, [sp, #28]
   12388:	e002      	b.n	12390 <_dtoa_r+0x430>
   1238a:	4296      	cmp	r6, r2
   1238c:	f000 84cd 	beq.w	12d2a <_dtoa_r+0xdca>
   12390:	46b2      	mov	sl, r6
   12392:	f816 3d01 	ldrb.w	r3, [r6, #-1]!
   12396:	2b39      	cmp	r3, #57	; 0x39
   12398:	d0f7      	beq.n	1238a <_dtoa_r+0x42a>
   1239a:	3301      	adds	r3, #1
   1239c:	b2db      	uxtb	r3, r3
   1239e:	7033      	strb	r3, [r6, #0]
   123a0:	9b07      	ldr	r3, [sp, #28]
   123a2:	3301      	adds	r3, #1
   123a4:	9307      	str	r3, [sp, #28]
   123a6:	e1c8      	b.n	1273a <_dtoa_r+0x7da>
   123a8:	4650      	mov	r0, sl
   123aa:	f003 fbc5 	bl	15b38 <__aeabi_i2d>
   123ae:	4642      	mov	r2, r8
   123b0:	464b      	mov	r3, r9
   123b2:	f003 fc2b 	bl	15c0c <__aeabi_dmul>
   123b6:	4b3f      	ldr	r3, [pc, #252]	; (124b4 <_dtoa_r+0x554>)
   123b8:	2200      	movs	r2, #0
   123ba:	f003 fa71 	bl	158a0 <__adddf3>
   123be:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   123c2:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   123c6:	9311      	str	r3, [sp, #68]	; 0x44
   123c8:	4640      	mov	r0, r8
   123ca:	4649      	mov	r1, r9
   123cc:	2200      	movs	r2, #0
   123ce:	4b3c      	ldr	r3, [pc, #240]	; (124c0 <_dtoa_r+0x560>)
   123d0:	f003 fa64 	bl	1589c <__aeabi_dsub>
   123d4:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
   123d8:	464b      	mov	r3, r9
   123da:	4642      	mov	r2, r8
   123dc:	4606      	mov	r6, r0
   123de:	460f      	mov	r7, r1
   123e0:	f003 fea4 	bl	1612c <__aeabi_dcmpgt>
   123e4:	4681      	mov	r9, r0
   123e6:	2800      	cmp	r0, #0
   123e8:	f040 84af 	bne.w	12d4a <_dtoa_r+0xdea>
   123ec:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   123f0:	4602      	mov	r2, r0
   123f2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   123f6:	4630      	mov	r0, r6
   123f8:	4639      	mov	r1, r7
   123fa:	f003 fe79 	bl	160f0 <__aeabi_dcmplt>
   123fe:	2800      	cmp	r0, #0
   12400:	f040 8348 	bne.w	12a94 <_dtoa_r+0xb34>
   12404:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   12406:	2b00      	cmp	r3, #0
   12408:	f2c0 808c 	blt.w	12524 <_dtoa_r+0x5c4>
   1240c:	9a07      	ldr	r2, [sp, #28]
   1240e:	2a0e      	cmp	r2, #14
   12410:	f300 8088 	bgt.w	12524 <_dtoa_r+0x5c4>
   12414:	4b24      	ldr	r3, [pc, #144]	; (124a8 <_dtoa_r+0x548>)
   12416:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1241a:	e9d3 ab00 	ldrd	sl, fp, [r3]
   1241e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   12420:	2b00      	cmp	r3, #0
   12422:	da1b      	bge.n	1245c <_dtoa_r+0x4fc>
   12424:	9b08      	ldr	r3, [sp, #32]
   12426:	2b00      	cmp	r3, #0
   12428:	dc18      	bgt.n	1245c <_dtoa_r+0x4fc>
   1242a:	f040 8331 	bne.w	12a90 <_dtoa_r+0xb30>
   1242e:	2200      	movs	r2, #0
   12430:	4b23      	ldr	r3, [pc, #140]	; (124c0 <_dtoa_r+0x560>)
   12432:	4650      	mov	r0, sl
   12434:	4659      	mov	r1, fp
   12436:	f003 fbe9 	bl	15c0c <__aeabi_dmul>
   1243a:	4602      	mov	r2, r0
   1243c:	460b      	mov	r3, r1
   1243e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   12442:	f003 fe5f 	bl	16104 <__aeabi_dcmple>
   12446:	f8dd 9020 	ldr.w	r9, [sp, #32]
   1244a:	464e      	mov	r6, r9
   1244c:	2800      	cmp	r0, #0
   1244e:	f000 82ca 	beq.w	129e6 <_dtoa_r+0xa86>
   12452:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   12454:	f8dd 800c 	ldr.w	r8, [sp, #12]
   12458:	43df      	mvns	r7, r3
   1245a:	e2cc      	b.n	129f6 <_dtoa_r+0xa96>
   1245c:	4652      	mov	r2, sl
   1245e:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
   12462:	465b      	mov	r3, fp
   12464:	4638      	mov	r0, r7
   12466:	4641      	mov	r1, r8
   12468:	f003 fcfa 	bl	15e60 <__aeabi_ddiv>
   1246c:	f003 fe68 	bl	16140 <__aeabi_d2iz>
   12470:	4681      	mov	r9, r0
   12472:	9009      	str	r0, [sp, #36]	; 0x24
   12474:	f003 fb60 	bl	15b38 <__aeabi_i2d>
   12478:	4652      	mov	r2, sl
   1247a:	465b      	mov	r3, fp
   1247c:	f003 fbc6 	bl	15c0c <__aeabi_dmul>
   12480:	9e03      	ldr	r6, [sp, #12]
   12482:	460b      	mov	r3, r1
   12484:	4602      	mov	r2, r0
   12486:	4641      	mov	r1, r8
   12488:	4638      	mov	r0, r7
   1248a:	f003 fa07 	bl	1589c <__aeabi_dsub>
   1248e:	f109 0330 	add.w	r3, r9, #48	; 0x30
   12492:	f806 3b01 	strb.w	r3, [r6], #1
   12496:	9b08      	ldr	r3, [sp, #32]
   12498:	2b01      	cmp	r3, #1
   1249a:	f000 835f 	beq.w	12b5c <_dtoa_r+0xbfc>
   1249e:	9406      	str	r4, [sp, #24]
   124a0:	2701      	movs	r7, #1
   124a2:	461c      	mov	r4, r3
   124a4:	9504      	str	r5, [sp, #16]
   124a6:	e02a      	b.n	124fe <_dtoa_r+0x59e>
   124a8:	0001a170 	.word	0x0001a170
   124ac:	0001a148 	.word	0x0001a148
   124b0:	3ff00000 	.word	0x3ff00000
   124b4:	401c0000 	.word	0x401c0000
   124b8:	3fe00000 	.word	0x3fe00000
   124bc:	40240000 	.word	0x40240000
   124c0:	40140000 	.word	0x40140000
   124c4:	4652      	mov	r2, sl
   124c6:	465b      	mov	r3, fp
   124c8:	4640      	mov	r0, r8
   124ca:	4649      	mov	r1, r9
   124cc:	f003 fcc8 	bl	15e60 <__aeabi_ddiv>
   124d0:	f003 fe36 	bl	16140 <__aeabi_d2iz>
   124d4:	4605      	mov	r5, r0
   124d6:	f003 fb2f 	bl	15b38 <__aeabi_i2d>
   124da:	4652      	mov	r2, sl
   124dc:	465b      	mov	r3, fp
   124de:	f003 fb95 	bl	15c0c <__aeabi_dmul>
   124e2:	3701      	adds	r7, #1
   124e4:	460b      	mov	r3, r1
   124e6:	4602      	mov	r2, r0
   124e8:	4649      	mov	r1, r9
   124ea:	4640      	mov	r0, r8
   124ec:	f003 f9d6 	bl	1589c <__aeabi_dsub>
   124f0:	f105 0330 	add.w	r3, r5, #48	; 0x30
   124f4:	42a7      	cmp	r7, r4
   124f6:	f806 3b01 	strb.w	r3, [r6], #1
   124fa:	f000 832c 	beq.w	12b56 <_dtoa_r+0xbf6>
   124fe:	2200      	movs	r2, #0
   12500:	4bab      	ldr	r3, [pc, #684]	; (127b0 <_dtoa_r+0x850>)
   12502:	f003 fb83 	bl	15c0c <__aeabi_dmul>
   12506:	2200      	movs	r2, #0
   12508:	2300      	movs	r3, #0
   1250a:	4680      	mov	r8, r0
   1250c:	4689      	mov	r9, r1
   1250e:	f003 fde5 	bl	160dc <__aeabi_dcmpeq>
   12512:	2800      	cmp	r0, #0
   12514:	d0d6      	beq.n	124c4 <_dtoa_r+0x564>
   12516:	9d04      	ldr	r5, [sp, #16]
   12518:	9c06      	ldr	r4, [sp, #24]
   1251a:	9b07      	ldr	r3, [sp, #28]
   1251c:	46b2      	mov	sl, r6
   1251e:	3301      	adds	r3, #1
   12520:	9307      	str	r3, [sp, #28]
   12522:	e10a      	b.n	1273a <_dtoa_r+0x7da>
   12524:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   12526:	2a00      	cmp	r2, #0
   12528:	d03d      	beq.n	125a6 <_dtoa_r+0x646>
   1252a:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1252c:	2a01      	cmp	r2, #1
   1252e:	f340 829f 	ble.w	12a70 <_dtoa_r+0xb10>
   12532:	9b08      	ldr	r3, [sp, #32]
   12534:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   12538:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1253a:	4543      	cmp	r3, r8
   1253c:	f2c0 8270 	blt.w	12a20 <_dtoa_r+0xac0>
   12540:	eba3 0808 	sub.w	r8, r3, r8
   12544:	9b08      	ldr	r3, [sp, #32]
   12546:	2b00      	cmp	r3, #0
   12548:	f2c0 8340 	blt.w	12bcc <_dtoa_r+0xc6c>
   1254c:	9a06      	ldr	r2, [sp, #24]
   1254e:	441a      	add	r2, r3
   12550:	9206      	str	r2, [sp, #24]
   12552:	9a09      	ldr	r2, [sp, #36]	; 0x24
   12554:	4617      	mov	r7, r2
   12556:	441a      	add	r2, r3
   12558:	9209      	str	r2, [sp, #36]	; 0x24
   1255a:	2101      	movs	r1, #1
   1255c:	4620      	mov	r0, r4
   1255e:	f001 fb69 	bl	13c34 <__i2b>
   12562:	4606      	mov	r6, r0
   12564:	e023      	b.n	125ae <_dtoa_r+0x64e>
   12566:	2301      	movs	r3, #1
   12568:	1bbe      	subs	r6, r7, r6
   1256a:	930e      	str	r3, [sp, #56]	; 0x38
   1256c:	1e73      	subs	r3, r6, #1
   1256e:	9306      	str	r3, [sp, #24]
   12570:	f57f ada0 	bpl.w	120b4 <_dtoa_r+0x154>
   12574:	f1c6 0301 	rsb	r3, r6, #1
   12578:	9309      	str	r3, [sp, #36]	; 0x24
   1257a:	2300      	movs	r3, #0
   1257c:	9306      	str	r3, [sp, #24]
   1257e:	e59b      	b.n	120b8 <_dtoa_r+0x158>
   12580:	4658      	mov	r0, fp
   12582:	f003 fad9 	bl	15b38 <__aeabi_i2d>
   12586:	4642      	mov	r2, r8
   12588:	464b      	mov	r3, r9
   1258a:	f003 fda7 	bl	160dc <__aeabi_dcmpeq>
   1258e:	2800      	cmp	r0, #0
   12590:	f47f ad78 	bne.w	12084 <_dtoa_r+0x124>
   12594:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   12598:	e574      	b.n	12084 <_dtoa_r+0x124>
   1259a:	4b86      	ldr	r3, [pc, #536]	; (127b4 <_dtoa_r+0x854>)
   1259c:	9303      	str	r3, [sp, #12]
   1259e:	9803      	ldr	r0, [sp, #12]
   125a0:	b019      	add	sp, #100	; 0x64
   125a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125a6:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   125aa:	9f09      	ldr	r7, [sp, #36]	; 0x24
   125ac:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   125ae:	2f00      	cmp	r7, #0
   125b0:	dd0c      	ble.n	125cc <_dtoa_r+0x66c>
   125b2:	9906      	ldr	r1, [sp, #24]
   125b4:	2900      	cmp	r1, #0
   125b6:	460b      	mov	r3, r1
   125b8:	dd08      	ble.n	125cc <_dtoa_r+0x66c>
   125ba:	42b9      	cmp	r1, r7
   125bc:	bfa8      	it	ge
   125be:	463b      	movge	r3, r7
   125c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   125c2:	1aff      	subs	r7, r7, r3
   125c4:	1ad2      	subs	r2, r2, r3
   125c6:	1acb      	subs	r3, r1, r3
   125c8:	9209      	str	r2, [sp, #36]	; 0x24
   125ca:	9306      	str	r3, [sp, #24]
   125cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   125ce:	b1e3      	cbz	r3, 1260a <_dtoa_r+0x6aa>
   125d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   125d2:	2b00      	cmp	r3, #0
   125d4:	f000 8260 	beq.w	12a98 <_dtoa_r+0xb38>
   125d8:	f1b8 0f00 	cmp.w	r8, #0
   125dc:	dd10      	ble.n	12600 <_dtoa_r+0x6a0>
   125de:	4631      	mov	r1, r6
   125e0:	4642      	mov	r2, r8
   125e2:	4620      	mov	r0, r4
   125e4:	f001 fc02 	bl	13dec <__pow5mult>
   125e8:	4606      	mov	r6, r0
   125ea:	462a      	mov	r2, r5
   125ec:	4631      	mov	r1, r6
   125ee:	4620      	mov	r0, r4
   125f0:	f001 fb4e 	bl	13c90 <__multiply>
   125f4:	4603      	mov	r3, r0
   125f6:	4629      	mov	r1, r5
   125f8:	4620      	mov	r0, r4
   125fa:	461d      	mov	r5, r3
   125fc:	f001 fa18 	bl	13a30 <_Bfree>
   12600:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   12602:	ebb3 0208 	subs.w	r2, r3, r8
   12606:	f040 82db 	bne.w	12bc0 <_dtoa_r+0xc60>
   1260a:	2101      	movs	r1, #1
   1260c:	4620      	mov	r0, r4
   1260e:	f001 fb11 	bl	13c34 <__i2b>
   12612:	f1bb 0f00 	cmp.w	fp, #0
   12616:	4681      	mov	r9, r0
   12618:	f300 80b3 	bgt.w	12782 <_dtoa_r+0x822>
   1261c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1261e:	2b01      	cmp	r3, #1
   12620:	f340 8188 	ble.w	12934 <_dtoa_r+0x9d4>
   12624:	f04f 0a00 	mov.w	sl, #0
   12628:	2001      	movs	r0, #1
   1262a:	f1bb 0f00 	cmp.w	fp, #0
   1262e:	f040 80b4 	bne.w	1279a <_dtoa_r+0x83a>
   12632:	9a06      	ldr	r2, [sp, #24]
   12634:	4410      	add	r0, r2
   12636:	f010 001f 	ands.w	r0, r0, #31
   1263a:	f000 8092 	beq.w	12762 <_dtoa_r+0x802>
   1263e:	f1c0 0320 	rsb	r3, r0, #32
   12642:	2b04      	cmp	r3, #4
   12644:	f340 83d3 	ble.w	12dee <_dtoa_r+0xe8e>
   12648:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1264a:	f1c0 001c 	rsb	r0, r0, #28
   1264e:	4403      	add	r3, r0
   12650:	4402      	add	r2, r0
   12652:	9309      	str	r3, [sp, #36]	; 0x24
   12654:	4407      	add	r7, r0
   12656:	9206      	str	r2, [sp, #24]
   12658:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1265a:	2b00      	cmp	r3, #0
   1265c:	dd05      	ble.n	1266a <_dtoa_r+0x70a>
   1265e:	4629      	mov	r1, r5
   12660:	461a      	mov	r2, r3
   12662:	4620      	mov	r0, r4
   12664:	f001 fc1e 	bl	13ea4 <__lshift>
   12668:	4605      	mov	r5, r0
   1266a:	9b06      	ldr	r3, [sp, #24]
   1266c:	2b00      	cmp	r3, #0
   1266e:	dd05      	ble.n	1267c <_dtoa_r+0x71c>
   12670:	4649      	mov	r1, r9
   12672:	461a      	mov	r2, r3
   12674:	4620      	mov	r0, r4
   12676:	f001 fc15 	bl	13ea4 <__lshift>
   1267a:	4681      	mov	r9, r0
   1267c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1267e:	2b00      	cmp	r3, #0
   12680:	f040 8138 	bne.w	128f4 <_dtoa_r+0x994>
   12684:	9b08      	ldr	r3, [sp, #32]
   12686:	2b00      	cmp	r3, #0
   12688:	f340 811e 	ble.w	128c8 <_dtoa_r+0x968>
   1268c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1268e:	2b00      	cmp	r3, #0
   12690:	f040 809f 	bne.w	127d2 <_dtoa_r+0x872>
   12694:	9b07      	ldr	r3, [sp, #28]
   12696:	3301      	adds	r3, #1
   12698:	9307      	str	r3, [sp, #28]
   1269a:	2701      	movs	r7, #1
   1269c:	f8dd 800c 	ldr.w	r8, [sp, #12]
   126a0:	f8dd a020 	ldr.w	sl, [sp, #32]
   126a4:	e007      	b.n	126b6 <_dtoa_r+0x756>
   126a6:	4629      	mov	r1, r5
   126a8:	2300      	movs	r3, #0
   126aa:	220a      	movs	r2, #10
   126ac:	4620      	mov	r0, r4
   126ae:	f001 f9c9 	bl	13a44 <__multadd>
   126b2:	4605      	mov	r5, r0
   126b4:	3701      	adds	r7, #1
   126b6:	4649      	mov	r1, r9
   126b8:	4628      	mov	r0, r5
   126ba:	f7ff fbb9 	bl	11e30 <quorem>
   126be:	4557      	cmp	r7, sl
   126c0:	f100 0330 	add.w	r3, r0, #48	; 0x30
   126c4:	f808 3b01 	strb.w	r3, [r8], #1
   126c8:	dbed      	blt.n	126a6 <_dtoa_r+0x746>
   126ca:	9a08      	ldr	r2, [sp, #32]
   126cc:	2700      	movs	r7, #0
   126ce:	2a00      	cmp	r2, #0
   126d0:	bfcc      	ite	gt
   126d2:	4693      	movgt	fp, r2
   126d4:	f04f 0b01 	movle.w	fp, #1
   126d8:	9a03      	ldr	r2, [sp, #12]
   126da:	4493      	add	fp, r2
   126dc:	4629      	mov	r1, r5
   126de:	2201      	movs	r2, #1
   126e0:	4620      	mov	r0, r4
   126e2:	9304      	str	r3, [sp, #16]
   126e4:	f001 fbde 	bl	13ea4 <__lshift>
   126e8:	4649      	mov	r1, r9
   126ea:	4605      	mov	r5, r0
   126ec:	f001 fc50 	bl	13f90 <__mcmp>
   126f0:	2800      	cmp	r0, #0
   126f2:	f340 81ab 	ble.w	12a4c <_dtoa_r+0xaec>
   126f6:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
   126fa:	9a03      	ldr	r2, [sp, #12]
   126fc:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   12700:	e004      	b.n	1270c <_dtoa_r+0x7ac>
   12702:	455a      	cmp	r2, fp
   12704:	f000 81ad 	beq.w	12a62 <_dtoa_r+0xb02>
   12708:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   1270c:	2b39      	cmp	r3, #57	; 0x39
   1270e:	f10b 0a01 	add.w	sl, fp, #1
   12712:	d0f6      	beq.n	12702 <_dtoa_r+0x7a2>
   12714:	3301      	adds	r3, #1
   12716:	f88b 3000 	strb.w	r3, [fp]
   1271a:	4649      	mov	r1, r9
   1271c:	4620      	mov	r0, r4
   1271e:	f001 f987 	bl	13a30 <_Bfree>
   12722:	b156      	cbz	r6, 1273a <_dtoa_r+0x7da>
   12724:	b12f      	cbz	r7, 12732 <_dtoa_r+0x7d2>
   12726:	42b7      	cmp	r7, r6
   12728:	d003      	beq.n	12732 <_dtoa_r+0x7d2>
   1272a:	4639      	mov	r1, r7
   1272c:	4620      	mov	r0, r4
   1272e:	f001 f97f 	bl	13a30 <_Bfree>
   12732:	4631      	mov	r1, r6
   12734:	4620      	mov	r0, r4
   12736:	f001 f97b 	bl	13a30 <_Bfree>
   1273a:	4629      	mov	r1, r5
   1273c:	4620      	mov	r0, r4
   1273e:	f001 f977 	bl	13a30 <_Bfree>
   12742:	2300      	movs	r3, #0
   12744:	9a07      	ldr	r2, [sp, #28]
   12746:	f88a 3000 	strb.w	r3, [sl]
   1274a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   1274c:	601a      	str	r2, [r3, #0]
   1274e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   12750:	2b00      	cmp	r3, #0
   12752:	f43f ac40 	beq.w	11fd6 <_dtoa_r+0x76>
   12756:	9803      	ldr	r0, [sp, #12]
   12758:	f8c3 a000 	str.w	sl, [r3]
   1275c:	b019      	add	sp, #100	; 0x64
   1275e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12762:	201c      	movs	r0, #28
   12764:	9b09      	ldr	r3, [sp, #36]	; 0x24
   12766:	4407      	add	r7, r0
   12768:	4403      	add	r3, r0
   1276a:	9309      	str	r3, [sp, #36]	; 0x24
   1276c:	9b06      	ldr	r3, [sp, #24]
   1276e:	4403      	add	r3, r0
   12770:	9306      	str	r3, [sp, #24]
   12772:	e771      	b.n	12658 <_dtoa_r+0x6f8>
   12774:	2601      	movs	r6, #1
   12776:	e4b6      	b.n	120e6 <_dtoa_r+0x186>
   12778:	f1c0 0020 	rsb	r0, r0, #32
   1277c:	fa08 f000 	lsl.w	r0, r8, r0
   12780:	e44d      	b.n	1201e <_dtoa_r+0xbe>
   12782:	4601      	mov	r1, r0
   12784:	465a      	mov	r2, fp
   12786:	4620      	mov	r0, r4
   12788:	f001 fb30 	bl	13dec <__pow5mult>
   1278c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1278e:	4681      	mov	r9, r0
   12790:	2b01      	cmp	r3, #1
   12792:	f340 81b6 	ble.w	12b02 <_dtoa_r+0xba2>
   12796:	f04f 0a00 	mov.w	sl, #0
   1279a:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1279e:	eb09 0383 	add.w	r3, r9, r3, lsl #2
   127a2:	6918      	ldr	r0, [r3, #16]
   127a4:	f001 f9fa 	bl	13b9c <__hi0bits>
   127a8:	f1c0 0020 	rsb	r0, r0, #32
   127ac:	e741      	b.n	12632 <_dtoa_r+0x6d2>
   127ae:	bf00      	nop
   127b0:	40240000 	.word	0x40240000
   127b4:	00019ff8 	.word	0x00019ff8
   127b8:	4631      	mov	r1, r6
   127ba:	2300      	movs	r3, #0
   127bc:	220a      	movs	r2, #10
   127be:	4620      	mov	r0, r4
   127c0:	f001 f940 	bl	13a44 <__multadd>
   127c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   127c6:	4606      	mov	r6, r0
   127c8:	2b00      	cmp	r3, #0
   127ca:	f340 82e9 	ble.w	12da0 <_dtoa_r+0xe40>
   127ce:	e9cd 8307 	strd	r8, r3, [sp, #28]
   127d2:	2f00      	cmp	r7, #0
   127d4:	f300 811d 	bgt.w	12a12 <_dtoa_r+0xab2>
   127d8:	f1ba 0f00 	cmp.w	sl, #0
   127dc:	f040 81d9 	bne.w	12b92 <_dtoa_r+0xc32>
   127e0:	46b0      	mov	r8, r6
   127e2:	9b04      	ldr	r3, [sp, #16]
   127e4:	9908      	ldr	r1, [sp, #32]
   127e6:	f003 0201 	and.w	r2, r3, #1
   127ea:	9b03      	ldr	r3, [sp, #12]
   127ec:	920a      	str	r2, [sp, #40]	; 0x28
   127ee:	461f      	mov	r7, r3
   127f0:	3b01      	subs	r3, #1
   127f2:	4419      	add	r1, r3
   127f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
   127f6:	9108      	str	r1, [sp, #32]
   127f8:	4313      	orrs	r3, r2
   127fa:	9309      	str	r3, [sp, #36]	; 0x24
   127fc:	4649      	mov	r1, r9
   127fe:	4628      	mov	r0, r5
   12800:	f7ff fb16 	bl	11e30 <quorem>
   12804:	4631      	mov	r1, r6
   12806:	4683      	mov	fp, r0
   12808:	4628      	mov	r0, r5
   1280a:	f001 fbc1 	bl	13f90 <__mcmp>
   1280e:	4642      	mov	r2, r8
   12810:	4649      	mov	r1, r9
   12812:	4682      	mov	sl, r0
   12814:	4620      	mov	r0, r4
   12816:	f001 fbdb 	bl	13fd0 <__mdiff>
   1281a:	68c2      	ldr	r2, [r0, #12]
   1281c:	4601      	mov	r1, r0
   1281e:	f10b 0330 	add.w	r3, fp, #48	; 0x30
   12822:	2a00      	cmp	r2, #0
   12824:	d143      	bne.n	128ae <_dtoa_r+0x94e>
   12826:	9004      	str	r0, [sp, #16]
   12828:	4628      	mov	r0, r5
   1282a:	9306      	str	r3, [sp, #24]
   1282c:	f001 fbb0 	bl	13f90 <__mcmp>
   12830:	4602      	mov	r2, r0
   12832:	9904      	ldr	r1, [sp, #16]
   12834:	4620      	mov	r0, r4
   12836:	9204      	str	r2, [sp, #16]
   12838:	f001 f8fa 	bl	13a30 <_Bfree>
   1283c:	9a04      	ldr	r2, [sp, #16]
   1283e:	9b06      	ldr	r3, [sp, #24]
   12840:	b91a      	cbnz	r2, 1284a <_dtoa_r+0x8ea>
   12842:	9909      	ldr	r1, [sp, #36]	; 0x24
   12844:	2900      	cmp	r1, #0
   12846:	f000 829b 	beq.w	12d80 <_dtoa_r+0xe20>
   1284a:	f1ba 0f00 	cmp.w	sl, #0
   1284e:	f2c0 8164 	blt.w	12b1a <_dtoa_r+0xbba>
   12852:	9922      	ldr	r1, [sp, #136]	; 0x88
   12854:	ea4a 0a01 	orr.w	sl, sl, r1
   12858:	990a      	ldr	r1, [sp, #40]	; 0x28
   1285a:	ea51 010a 	orrs.w	r1, r1, sl
   1285e:	f000 815c 	beq.w	12b1a <_dtoa_r+0xbba>
   12862:	2a00      	cmp	r2, #0
   12864:	f300 81b6 	bgt.w	12bd4 <_dtoa_r+0xc74>
   12868:	9a08      	ldr	r2, [sp, #32]
   1286a:	f107 0a01 	add.w	sl, r7, #1
   1286e:	4297      	cmp	r7, r2
   12870:	46d3      	mov	fp, sl
   12872:	703b      	strb	r3, [r7, #0]
   12874:	f000 81b4 	beq.w	12be0 <_dtoa_r+0xc80>
   12878:	4629      	mov	r1, r5
   1287a:	2300      	movs	r3, #0
   1287c:	220a      	movs	r2, #10
   1287e:	4620      	mov	r0, r4
   12880:	f001 f8e0 	bl	13a44 <__multadd>
   12884:	4546      	cmp	r6, r8
   12886:	4605      	mov	r5, r0
   12888:	4631      	mov	r1, r6
   1288a:	f04f 0300 	mov.w	r3, #0
   1288e:	f04f 020a 	mov.w	r2, #10
   12892:	4620      	mov	r0, r4
   12894:	d012      	beq.n	128bc <_dtoa_r+0x95c>
   12896:	f001 f8d5 	bl	13a44 <__multadd>
   1289a:	4641      	mov	r1, r8
   1289c:	4606      	mov	r6, r0
   1289e:	2300      	movs	r3, #0
   128a0:	220a      	movs	r2, #10
   128a2:	4620      	mov	r0, r4
   128a4:	f001 f8ce 	bl	13a44 <__multadd>
   128a8:	4657      	mov	r7, sl
   128aa:	4680      	mov	r8, r0
   128ac:	e7a6      	b.n	127fc <_dtoa_r+0x89c>
   128ae:	4620      	mov	r0, r4
   128b0:	9304      	str	r3, [sp, #16]
   128b2:	f001 f8bd 	bl	13a30 <_Bfree>
   128b6:	2201      	movs	r2, #1
   128b8:	9b04      	ldr	r3, [sp, #16]
   128ba:	e7c6      	b.n	1284a <_dtoa_r+0x8ea>
   128bc:	f001 f8c2 	bl	13a44 <__multadd>
   128c0:	4657      	mov	r7, sl
   128c2:	4606      	mov	r6, r0
   128c4:	4680      	mov	r8, r0
   128c6:	e799      	b.n	127fc <_dtoa_r+0x89c>
   128c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   128ca:	2b02      	cmp	r3, #2
   128cc:	dc7a      	bgt.n	129c4 <_dtoa_r+0xa64>
   128ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   128d0:	2b00      	cmp	r3, #0
   128d2:	f47f af7e 	bne.w	127d2 <_dtoa_r+0x872>
   128d6:	9b07      	ldr	r3, [sp, #28]
   128d8:	4649      	mov	r1, r9
   128da:	3301      	adds	r3, #1
   128dc:	4628      	mov	r0, r5
   128de:	9307      	str	r3, [sp, #28]
   128e0:	f7ff faa6 	bl	11e30 <quorem>
   128e4:	f8dd b00c 	ldr.w	fp, [sp, #12]
   128e8:	f100 0330 	add.w	r3, r0, #48	; 0x30
   128ec:	2700      	movs	r7, #0
   128ee:	f80b 3b01 	strb.w	r3, [fp], #1
   128f2:	e6f3      	b.n	126dc <_dtoa_r+0x77c>
   128f4:	4649      	mov	r1, r9
   128f6:	4628      	mov	r0, r5
   128f8:	f001 fb4a 	bl	13f90 <__mcmp>
   128fc:	2800      	cmp	r0, #0
   128fe:	f6bf aec1 	bge.w	12684 <_dtoa_r+0x724>
   12902:	4629      	mov	r1, r5
   12904:	2300      	movs	r3, #0
   12906:	220a      	movs	r2, #10
   12908:	4620      	mov	r0, r4
   1290a:	f001 f89b 	bl	13a44 <__multadd>
   1290e:	9b07      	ldr	r3, [sp, #28]
   12910:	4605      	mov	r5, r0
   12912:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   12916:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   12918:	2b00      	cmp	r3, #0
   1291a:	f47f af4d 	bne.w	127b8 <_dtoa_r+0x858>
   1291e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   12920:	2b00      	cmp	r3, #0
   12922:	f340 8234 	ble.w	12d8e <_dtoa_r+0xe2e>
   12926:	9308      	str	r3, [sp, #32]
   12928:	e6b7      	b.n	1269a <_dtoa_r+0x73a>
   1292a:	4bb0      	ldr	r3, [pc, #704]	; (12bec <_dtoa_r+0xc8c>)
   1292c:	9303      	str	r3, [sp, #12]
   1292e:	3303      	adds	r3, #3
   12930:	f7ff bbf4 	b.w	1211c <_dtoa_r+0x1bc>
   12934:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   12938:	2900      	cmp	r1, #0
   1293a:	f47f ae73 	bne.w	12624 <_dtoa_r+0x6c4>
   1293e:	f3c2 0313 	ubfx	r3, r2, #0, #20
   12942:	2b00      	cmp	r3, #0
   12944:	f47f ae6e 	bne.w	12624 <_dtoa_r+0x6c4>
   12948:	4ba9      	ldr	r3, [pc, #676]	; (12bf0 <_dtoa_r+0xc90>)
   1294a:	4013      	ands	r3, r2
   1294c:	2b00      	cmp	r3, #0
   1294e:	f000 8200 	beq.w	12d52 <_dtoa_r+0xdf2>
   12952:	9b09      	ldr	r3, [sp, #36]	; 0x24
   12954:	f04f 0a01 	mov.w	sl, #1
   12958:	3301      	adds	r3, #1
   1295a:	9309      	str	r3, [sp, #36]	; 0x24
   1295c:	9b06      	ldr	r3, [sp, #24]
   1295e:	3301      	adds	r3, #1
   12960:	9306      	str	r3, [sp, #24]
   12962:	e661      	b.n	12628 <_dtoa_r+0x6c8>
   12964:	2301      	movs	r3, #1
   12966:	930c      	str	r3, [sp, #48]	; 0x30
   12968:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   1296a:	9a07      	ldr	r2, [sp, #28]
   1296c:	4413      	add	r3, r2
   1296e:	9312      	str	r3, [sp, #72]	; 0x48
   12970:	3301      	adds	r3, #1
   12972:	2b01      	cmp	r3, #1
   12974:	461f      	mov	r7, r3
   12976:	bfb8      	it	lt
   12978:	2701      	movlt	r7, #1
   1297a:	9308      	str	r3, [sp, #32]
   1297c:	2100      	movs	r1, #0
   1297e:	2f17      	cmp	r7, #23
   12980:	6461      	str	r1, [r4, #68]	; 0x44
   12982:	f77f ac1e 	ble.w	121c2 <_dtoa_r+0x262>
   12986:	2201      	movs	r2, #1
   12988:	2304      	movs	r3, #4
   1298a:	005b      	lsls	r3, r3, #1
   1298c:	f103 0014 	add.w	r0, r3, #20
   12990:	42b8      	cmp	r0, r7
   12992:	4611      	mov	r1, r2
   12994:	f102 0201 	add.w	r2, r2, #1
   12998:	d9f7      	bls.n	1298a <_dtoa_r+0xa2a>
   1299a:	6461      	str	r1, [r4, #68]	; 0x44
   1299c:	e411      	b.n	121c2 <_dtoa_r+0x262>
   1299e:	2301      	movs	r3, #1
   129a0:	930c      	str	r3, [sp, #48]	; 0x30
   129a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   129a4:	2b00      	cmp	r3, #0
   129a6:	dd4c      	ble.n	12a42 <_dtoa_r+0xae2>
   129a8:	461f      	mov	r7, r3
   129aa:	9312      	str	r3, [sp, #72]	; 0x48
   129ac:	9308      	str	r3, [sp, #32]
   129ae:	e7e5      	b.n	1297c <_dtoa_r+0xa1c>
   129b0:	2300      	movs	r3, #0
   129b2:	930c      	str	r3, [sp, #48]	; 0x30
   129b4:	e7d8      	b.n	12968 <_dtoa_r+0xa08>
   129b6:	2300      	movs	r3, #0
   129b8:	930c      	str	r3, [sp, #48]	; 0x30
   129ba:	e7f2      	b.n	129a2 <_dtoa_r+0xa42>
   129bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   129be:	f8cd 801c 	str.w	r8, [sp, #28]
   129c2:	9308      	str	r3, [sp, #32]
   129c4:	9b08      	ldr	r3, [sp, #32]
   129c6:	2b00      	cmp	r3, #0
   129c8:	f47f ad43 	bne.w	12452 <_dtoa_r+0x4f2>
   129cc:	4649      	mov	r1, r9
   129ce:	2205      	movs	r2, #5
   129d0:	4620      	mov	r0, r4
   129d2:	f001 f837 	bl	13a44 <__multadd>
   129d6:	4681      	mov	r9, r0
   129d8:	4628      	mov	r0, r5
   129da:	4649      	mov	r1, r9
   129dc:	f001 fad8 	bl	13f90 <__mcmp>
   129e0:	2800      	cmp	r0, #0
   129e2:	f77f ad36 	ble.w	12452 <_dtoa_r+0x4f2>
   129e6:	2331      	movs	r3, #49	; 0x31
   129e8:	9803      	ldr	r0, [sp, #12]
   129ea:	9f07      	ldr	r7, [sp, #28]
   129ec:	4680      	mov	r8, r0
   129ee:	f800 3b01 	strb.w	r3, [r0], #1
   129f2:	3701      	adds	r7, #1
   129f4:	9003      	str	r0, [sp, #12]
   129f6:	4649      	mov	r1, r9
   129f8:	4620      	mov	r0, r4
   129fa:	f001 f819 	bl	13a30 <_Bfree>
   129fe:	1c7b      	adds	r3, r7, #1
   12a00:	f8dd a00c 	ldr.w	sl, [sp, #12]
   12a04:	9307      	str	r3, [sp, #28]
   12a06:	f8cd 800c 	str.w	r8, [sp, #12]
   12a0a:	2e00      	cmp	r6, #0
   12a0c:	f47f ae91 	bne.w	12732 <_dtoa_r+0x7d2>
   12a10:	e693      	b.n	1273a <_dtoa_r+0x7da>
   12a12:	4631      	mov	r1, r6
   12a14:	463a      	mov	r2, r7
   12a16:	4620      	mov	r0, r4
   12a18:	f001 fa44 	bl	13ea4 <__lshift>
   12a1c:	4606      	mov	r6, r0
   12a1e:	e6db      	b.n	127d8 <_dtoa_r+0x878>
   12a20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   12a22:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
   12a26:	eba8 0303 	sub.w	r3, r8, r3
   12a2a:	449b      	add	fp, r3
   12a2c:	f04f 0800 	mov.w	r8, #0
   12a30:	e588      	b.n	12544 <_dtoa_r+0x5e4>
   12a32:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   12a36:	f04f 0a02 	mov.w	sl, #2
   12a3a:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   12a3e:	f7ff bbee 	b.w	1221e <_dtoa_r+0x2be>
   12a42:	2301      	movs	r3, #1
   12a44:	9323      	str	r3, [sp, #140]	; 0x8c
   12a46:	9308      	str	r3, [sp, #32]
   12a48:	f7ff bbb7 	b.w	121ba <_dtoa_r+0x25a>
   12a4c:	d103      	bne.n	12a56 <_dtoa_r+0xaf6>
   12a4e:	9b04      	ldr	r3, [sp, #16]
   12a50:	07d8      	lsls	r0, r3, #31
   12a52:	f53f ae50 	bmi.w	126f6 <_dtoa_r+0x796>
   12a56:	46da      	mov	sl, fp
   12a58:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   12a5c:	2b30      	cmp	r3, #48	; 0x30
   12a5e:	d0fa      	beq.n	12a56 <_dtoa_r+0xaf6>
   12a60:	e65b      	b.n	1271a <_dtoa_r+0x7ba>
   12a62:	9b07      	ldr	r3, [sp, #28]
   12a64:	9a03      	ldr	r2, [sp, #12]
   12a66:	3301      	adds	r3, #1
   12a68:	9307      	str	r3, [sp, #28]
   12a6a:	2331      	movs	r3, #49	; 0x31
   12a6c:	7013      	strb	r3, [r2, #0]
   12a6e:	e654      	b.n	1271a <_dtoa_r+0x7ba>
   12a70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   12a72:	2a00      	cmp	r2, #0
   12a74:	f000 8128 	beq.w	12cc8 <_dtoa_r+0xd68>
   12a78:	f203 4333 	addw	r3, r3, #1075	; 0x433
   12a7c:	9a06      	ldr	r2, [sp, #24]
   12a7e:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   12a82:	441a      	add	r2, r3
   12a84:	9206      	str	r2, [sp, #24]
   12a86:	9a09      	ldr	r2, [sp, #36]	; 0x24
   12a88:	4617      	mov	r7, r2
   12a8a:	441a      	add	r2, r3
   12a8c:	9209      	str	r2, [sp, #36]	; 0x24
   12a8e:	e564      	b.n	1255a <_dtoa_r+0x5fa>
   12a90:	f04f 0900 	mov.w	r9, #0
   12a94:	464e      	mov	r6, r9
   12a96:	e4dc      	b.n	12452 <_dtoa_r+0x4f2>
   12a98:	4629      	mov	r1, r5
   12a9a:	4620      	mov	r0, r4
   12a9c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   12a9e:	f001 f9a5 	bl	13dec <__pow5mult>
   12aa2:	4605      	mov	r5, r0
   12aa4:	e5b1      	b.n	1260a <_dtoa_r+0x6aa>
   12aa6:	900e      	str	r0, [sp, #56]	; 0x38
   12aa8:	e564      	b.n	12574 <_dtoa_r+0x614>
   12aaa:	f000 8111 	beq.w	12cd0 <_dtoa_r+0xd70>
   12aae:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   12ab2:	9a07      	ldr	r2, [sp, #28]
   12ab4:	4b4f      	ldr	r3, [pc, #316]	; (12bf4 <_dtoa_r+0xc94>)
   12ab6:	4256      	negs	r6, r2
   12ab8:	f006 020f 	and.w	r2, r6, #15
   12abc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   12ac0:	e9d3 2300 	ldrd	r2, r3, [r3]
   12ac4:	f003 f8a2 	bl	15c0c <__aeabi_dmul>
   12ac8:	1136      	asrs	r6, r6, #4
   12aca:	4680      	mov	r8, r0
   12acc:	4689      	mov	r9, r1
   12ace:	f000 8170 	beq.w	12db2 <_dtoa_r+0xe52>
   12ad2:	2300      	movs	r3, #0
   12ad4:	f04f 0a02 	mov.w	sl, #2
   12ad8:	4f47      	ldr	r7, [pc, #284]	; (12bf8 <_dtoa_r+0xc98>)
   12ada:	07f2      	lsls	r2, r6, #31
   12adc:	d506      	bpl.n	12aec <_dtoa_r+0xb8c>
   12ade:	e9d7 2300 	ldrd	r2, r3, [r7]
   12ae2:	f003 f893 	bl	15c0c <__aeabi_dmul>
   12ae6:	2301      	movs	r3, #1
   12ae8:	f10a 0a01 	add.w	sl, sl, #1
   12aec:	1076      	asrs	r6, r6, #1
   12aee:	f107 0708 	add.w	r7, r7, #8
   12af2:	d1f2      	bne.n	12ada <_dtoa_r+0xb7a>
   12af4:	2b00      	cmp	r3, #0
   12af6:	f43f abb1 	beq.w	1225c <_dtoa_r+0x2fc>
   12afa:	4680      	mov	r8, r0
   12afc:	4689      	mov	r9, r1
   12afe:	f7ff bbad 	b.w	1225c <_dtoa_r+0x2fc>
   12b02:	9b04      	ldr	r3, [sp, #16]
   12b04:	2b00      	cmp	r3, #0
   12b06:	f47f ae46 	bne.w	12796 <_dtoa_r+0x836>
   12b0a:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   12b0e:	f3c2 0313 	ubfx	r3, r2, #0, #20
   12b12:	2b00      	cmp	r3, #0
   12b14:	f43f af18 	beq.w	12948 <_dtoa_r+0x9e8>
   12b18:	e63d      	b.n	12796 <_dtoa_r+0x836>
   12b1a:	2a00      	cmp	r2, #0
   12b1c:	dd12      	ble.n	12b44 <_dtoa_r+0xbe4>
   12b1e:	4629      	mov	r1, r5
   12b20:	2201      	movs	r2, #1
   12b22:	4620      	mov	r0, r4
   12b24:	9304      	str	r3, [sp, #16]
   12b26:	f001 f9bd 	bl	13ea4 <__lshift>
   12b2a:	4649      	mov	r1, r9
   12b2c:	4605      	mov	r5, r0
   12b2e:	f001 fa2f 	bl	13f90 <__mcmp>
   12b32:	2800      	cmp	r0, #0
   12b34:	9b04      	ldr	r3, [sp, #16]
   12b36:	f340 8117 	ble.w	12d68 <_dtoa_r+0xe08>
   12b3a:	2b39      	cmp	r3, #57	; 0x39
   12b3c:	f000 80fb 	beq.w	12d36 <_dtoa_r+0xdd6>
   12b40:	f10b 0331 	add.w	r3, fp, #49	; 0x31
   12b44:	46ba      	mov	sl, r7
   12b46:	9a07      	ldr	r2, [sp, #28]
   12b48:	4637      	mov	r7, r6
   12b4a:	3201      	adds	r2, #1
   12b4c:	4646      	mov	r6, r8
   12b4e:	9207      	str	r2, [sp, #28]
   12b50:	f80a 3b01 	strb.w	r3, [sl], #1
   12b54:	e5e1      	b.n	1271a <_dtoa_r+0x7ba>
   12b56:	9509      	str	r5, [sp, #36]	; 0x24
   12b58:	9c06      	ldr	r4, [sp, #24]
   12b5a:	9d04      	ldr	r5, [sp, #16]
   12b5c:	4602      	mov	r2, r0
   12b5e:	460b      	mov	r3, r1
   12b60:	f002 fe9e 	bl	158a0 <__adddf3>
   12b64:	4652      	mov	r2, sl
   12b66:	465b      	mov	r3, fp
   12b68:	4680      	mov	r8, r0
   12b6a:	4689      	mov	r9, r1
   12b6c:	f003 fade 	bl	1612c <__aeabi_dcmpgt>
   12b70:	b960      	cbnz	r0, 12b8c <_dtoa_r+0xc2c>
   12b72:	4652      	mov	r2, sl
   12b74:	465b      	mov	r3, fp
   12b76:	4640      	mov	r0, r8
   12b78:	4649      	mov	r1, r9
   12b7a:	f003 faaf 	bl	160dc <__aeabi_dcmpeq>
   12b7e:	2800      	cmp	r0, #0
   12b80:	f43f accb 	beq.w	1251a <_dtoa_r+0x5ba>
   12b84:	9b09      	ldr	r3, [sp, #36]	; 0x24
   12b86:	07d9      	lsls	r1, r3, #31
   12b88:	f57f acc7 	bpl.w	1251a <_dtoa_r+0x5ba>
   12b8c:	9a03      	ldr	r2, [sp, #12]
   12b8e:	f7ff bbff 	b.w	12390 <_dtoa_r+0x430>
   12b92:	4620      	mov	r0, r4
   12b94:	6871      	ldr	r1, [r6, #4]
   12b96:	f000 ff25 	bl	139e4 <_Balloc>
   12b9a:	4607      	mov	r7, r0
   12b9c:	2800      	cmp	r0, #0
   12b9e:	f000 810c 	beq.w	12dba <_dtoa_r+0xe5a>
   12ba2:	6933      	ldr	r3, [r6, #16]
   12ba4:	f106 010c 	add.w	r1, r6, #12
   12ba8:	3302      	adds	r3, #2
   12baa:	009a      	lsls	r2, r3, #2
   12bac:	300c      	adds	r0, #12
   12bae:	f7f9 fdfb 	bl	c7a8 <memcpy>
   12bb2:	4639      	mov	r1, r7
   12bb4:	2201      	movs	r2, #1
   12bb6:	4620      	mov	r0, r4
   12bb8:	f001 f974 	bl	13ea4 <__lshift>
   12bbc:	4680      	mov	r8, r0
   12bbe:	e610      	b.n	127e2 <_dtoa_r+0x882>
   12bc0:	4629      	mov	r1, r5
   12bc2:	4620      	mov	r0, r4
   12bc4:	f001 f912 	bl	13dec <__pow5mult>
   12bc8:	4605      	mov	r5, r0
   12bca:	e51e      	b.n	1260a <_dtoa_r+0x6aa>
   12bcc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   12bd0:	1a9f      	subs	r7, r3, r2
   12bd2:	e4c2      	b.n	1255a <_dtoa_r+0x5fa>
   12bd4:	2b39      	cmp	r3, #57	; 0x39
   12bd6:	f000 80ae 	beq.w	12d36 <_dtoa_r+0xdd6>
   12bda:	46ba      	mov	sl, r7
   12bdc:	3301      	adds	r3, #1
   12bde:	e7b2      	b.n	12b46 <_dtoa_r+0xbe6>
   12be0:	9a07      	ldr	r2, [sp, #28]
   12be2:	4637      	mov	r7, r6
   12be4:	3201      	adds	r2, #1
   12be6:	4646      	mov	r6, r8
   12be8:	9207      	str	r2, [sp, #28]
   12bea:	e577      	b.n	126dc <_dtoa_r+0x77c>
   12bec:	0001a05c 	.word	0x0001a05c
   12bf0:	7ff00000 	.word	0x7ff00000
   12bf4:	0001a170 	.word	0x0001a170
   12bf8:	0001a148 	.word	0x0001a148
   12bfc:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   12c00:	4983      	ldr	r1, [pc, #524]	; (12e10 <_dtoa_r+0xeb0>)
   12c02:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   12c06:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
   12c0a:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   12c0e:	f002 fffd 	bl	15c0c <__aeabi_dmul>
   12c12:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   12c16:	4649      	mov	r1, r9
   12c18:	4640      	mov	r0, r8
   12c1a:	f003 fa91 	bl	16140 <__aeabi_d2iz>
   12c1e:	4606      	mov	r6, r0
   12c20:	f002 ff8a 	bl	15b38 <__aeabi_i2d>
   12c24:	460b      	mov	r3, r1
   12c26:	4602      	mov	r2, r0
   12c28:	4649      	mov	r1, r9
   12c2a:	4640      	mov	r0, r8
   12c2c:	f002 fe36 	bl	1589c <__aeabi_dsub>
   12c30:	4653      	mov	r3, sl
   12c32:	9f03      	ldr	r7, [sp, #12]
   12c34:	3630      	adds	r6, #48	; 0x30
   12c36:	2b01      	cmp	r3, #1
   12c38:	4680      	mov	r8, r0
   12c3a:	4689      	mov	r9, r1
   12c3c:	f807 6b01 	strb.w	r6, [r7], #1
   12c40:	f000 80ac 	beq.w	12d9c <_dtoa_r+0xe3c>
   12c44:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   12c46:	9b03      	ldr	r3, [sp, #12]
   12c48:	441e      	add	r6, r3
   12c4a:	2200      	movs	r2, #0
   12c4c:	4b71      	ldr	r3, [pc, #452]	; (12e14 <_dtoa_r+0xeb4>)
   12c4e:	4640      	mov	r0, r8
   12c50:	4649      	mov	r1, r9
   12c52:	f002 ffdb 	bl	15c0c <__aeabi_dmul>
   12c56:	4689      	mov	r9, r1
   12c58:	4680      	mov	r8, r0
   12c5a:	f003 fa71 	bl	16140 <__aeabi_d2iz>
   12c5e:	4682      	mov	sl, r0
   12c60:	f002 ff6a 	bl	15b38 <__aeabi_i2d>
   12c64:	4602      	mov	r2, r0
   12c66:	460b      	mov	r3, r1
   12c68:	4640      	mov	r0, r8
   12c6a:	4649      	mov	r1, r9
   12c6c:	f002 fe16 	bl	1589c <__aeabi_dsub>
   12c70:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
   12c74:	f807 ab01 	strb.w	sl, [r7], #1
   12c78:	42b7      	cmp	r7, r6
   12c7a:	4680      	mov	r8, r0
   12c7c:	4689      	mov	r9, r1
   12c7e:	d1e4      	bne.n	12c4a <_dtoa_r+0xcea>
   12c80:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   12c84:	2200      	movs	r2, #0
   12c86:	4b64      	ldr	r3, [pc, #400]	; (12e18 <_dtoa_r+0xeb8>)
   12c88:	f002 fe0a 	bl	158a0 <__adddf3>
   12c8c:	4642      	mov	r2, r8
   12c8e:	464b      	mov	r3, r9
   12c90:	f003 fa2e 	bl	160f0 <__aeabi_dcmplt>
   12c94:	2800      	cmp	r0, #0
   12c96:	d162      	bne.n	12d5e <_dtoa_r+0xdfe>
   12c98:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   12c9c:	2000      	movs	r0, #0
   12c9e:	495e      	ldr	r1, [pc, #376]	; (12e18 <_dtoa_r+0xeb8>)
   12ca0:	f002 fdfc 	bl	1589c <__aeabi_dsub>
   12ca4:	4642      	mov	r2, r8
   12ca6:	464b      	mov	r3, r9
   12ca8:	f003 fa40 	bl	1612c <__aeabi_dcmpgt>
   12cac:	2800      	cmp	r0, #0
   12cae:	f43f aba9 	beq.w	12404 <_dtoa_r+0x4a4>
   12cb2:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   12cb6:	46b2      	mov	sl, r6
   12cb8:	2b30      	cmp	r3, #48	; 0x30
   12cba:	f106 36ff 	add.w	r6, r6, #4294967295	; 0xffffffff
   12cbe:	d0f8      	beq.n	12cb2 <_dtoa_r+0xd52>
   12cc0:	9b14      	ldr	r3, [sp, #80]	; 0x50
   12cc2:	3301      	adds	r3, #1
   12cc4:	9307      	str	r3, [sp, #28]
   12cc6:	e538      	b.n	1273a <_dtoa_r+0x7da>
   12cc8:	9b16      	ldr	r3, [sp, #88]	; 0x58
   12cca:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   12cce:	e6d5      	b.n	12a7c <_dtoa_r+0xb1c>
   12cd0:	f04f 0a02 	mov.w	sl, #2
   12cd4:	e9dd 890a 	ldrd	r8, r9, [sp, #40]	; 0x28
   12cd8:	f7ff bac0 	b.w	1225c <_dtoa_r+0x2fc>
   12cdc:	9b08      	ldr	r3, [sp, #32]
   12cde:	2b00      	cmp	r3, #0
   12ce0:	f43f ab62 	beq.w	123a8 <_dtoa_r+0x448>
   12ce4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   12ce6:	2b00      	cmp	r3, #0
   12ce8:	f77f ab8c 	ble.w	12404 <_dtoa_r+0x4a4>
   12cec:	9313      	str	r3, [sp, #76]	; 0x4c
   12cee:	9b07      	ldr	r3, [sp, #28]
   12cf0:	2200      	movs	r2, #0
   12cf2:	3b01      	subs	r3, #1
   12cf4:	4640      	mov	r0, r8
   12cf6:	4649      	mov	r1, r9
   12cf8:	9314      	str	r3, [sp, #80]	; 0x50
   12cfa:	4b46      	ldr	r3, [pc, #280]	; (12e14 <_dtoa_r+0xeb4>)
   12cfc:	f002 ff86 	bl	15c0c <__aeabi_dmul>
   12d00:	4680      	mov	r8, r0
   12d02:	4689      	mov	r9, r1
   12d04:	f10a 0001 	add.w	r0, sl, #1
   12d08:	f002 ff16 	bl	15b38 <__aeabi_i2d>
   12d0c:	4642      	mov	r2, r8
   12d0e:	464b      	mov	r3, r9
   12d10:	f002 ff7c 	bl	15c0c <__aeabi_dmul>
   12d14:	4b41      	ldr	r3, [pc, #260]	; (12e1c <_dtoa_r+0xebc>)
   12d16:	2200      	movs	r2, #0
   12d18:	f002 fdc2 	bl	158a0 <__adddf3>
   12d1c:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   12d20:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   12d24:	9311      	str	r3, [sp, #68]	; 0x44
   12d26:	f7ff babc 	b.w	122a2 <_dtoa_r+0x342>
   12d2a:	9b07      	ldr	r3, [sp, #28]
   12d2c:	3301      	adds	r3, #1
   12d2e:	9307      	str	r3, [sp, #28]
   12d30:	2331      	movs	r3, #49	; 0x31
   12d32:	f7ff bb34 	b.w	1239e <_dtoa_r+0x43e>
   12d36:	9b07      	ldr	r3, [sp, #28]
   12d38:	46bb      	mov	fp, r7
   12d3a:	3301      	adds	r3, #1
   12d3c:	9307      	str	r3, [sp, #28]
   12d3e:	2339      	movs	r3, #57	; 0x39
   12d40:	4637      	mov	r7, r6
   12d42:	f80b 3b01 	strb.w	r3, [fp], #1
   12d46:	4646      	mov	r6, r8
   12d48:	e4d7      	b.n	126fa <_dtoa_r+0x79a>
   12d4a:	f04f 0900 	mov.w	r9, #0
   12d4e:	464e      	mov	r6, r9
   12d50:	e649      	b.n	129e6 <_dtoa_r+0xa86>
   12d52:	469a      	mov	sl, r3
   12d54:	e468      	b.n	12628 <_dtoa_r+0x6c8>
   12d56:	9d10      	ldr	r5, [sp, #64]	; 0x40
   12d58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   12d5a:	46b2      	mov	sl, r6
   12d5c:	e7b0      	b.n	12cc0 <_dtoa_r+0xd60>
   12d5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   12d60:	9a03      	ldr	r2, [sp, #12]
   12d62:	9307      	str	r3, [sp, #28]
   12d64:	f7ff bb14 	b.w	12390 <_dtoa_r+0x430>
   12d68:	f47f aeec 	bne.w	12b44 <_dtoa_r+0xbe4>
   12d6c:	07da      	lsls	r2, r3, #31
   12d6e:	f57f aee9 	bpl.w	12b44 <_dtoa_r+0xbe4>
   12d72:	e6e2      	b.n	12b3a <_dtoa_r+0xbda>
   12d74:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
   12d78:	9d10      	ldr	r5, [sp, #64]	; 0x40
   12d7a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   12d7c:	f7ff bb42 	b.w	12404 <_dtoa_r+0x4a4>
   12d80:	2b39      	cmp	r3, #57	; 0x39
   12d82:	d0d8      	beq.n	12d36 <_dtoa_r+0xdd6>
   12d84:	f1ba 0f00 	cmp.w	sl, #0
   12d88:	f73f aeda 	bgt.w	12b40 <_dtoa_r+0xbe0>
   12d8c:	e6da      	b.n	12b44 <_dtoa_r+0xbe4>
   12d8e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   12d90:	2b02      	cmp	r3, #2
   12d92:	f73f ae13 	bgt.w	129bc <_dtoa_r+0xa5c>
   12d96:	f8cd 801c 	str.w	r8, [sp, #28]
   12d9a:	e59c      	b.n	128d6 <_dtoa_r+0x976>
   12d9c:	463e      	mov	r6, r7
   12d9e:	e76f      	b.n	12c80 <_dtoa_r+0xd20>
   12da0:	9b22      	ldr	r3, [sp, #136]	; 0x88
   12da2:	2b02      	cmp	r3, #2
   12da4:	f73f ae0a 	bgt.w	129bc <_dtoa_r+0xa5c>
   12da8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   12daa:	f8cd 801c 	str.w	r8, [sp, #28]
   12dae:	9308      	str	r3, [sp, #32]
   12db0:	e50f      	b.n	127d2 <_dtoa_r+0x872>
   12db2:	f04f 0a02 	mov.w	sl, #2
   12db6:	f7ff ba51 	b.w	1225c <_dtoa_r+0x2fc>
   12dba:	4602      	mov	r2, r0
   12dbc:	f240 21ea 	movw	r1, #746	; 0x2ea
   12dc0:	4b17      	ldr	r3, [pc, #92]	; (12e20 <_dtoa_r+0xec0>)
   12dc2:	4818      	ldr	r0, [pc, #96]	; (12e24 <_dtoa_r+0xec4>)
   12dc4:	f7f8 fe84 	bl	bad0 <__assert_func>
   12dc8:	2600      	movs	r6, #0
   12dca:	4620      	mov	r0, r4
   12dcc:	4631      	mov	r1, r6
   12dce:	6466      	str	r6, [r4, #68]	; 0x44
   12dd0:	f000 fe08 	bl	139e4 <_Balloc>
   12dd4:	9003      	str	r0, [sp, #12]
   12dd6:	b978      	cbnz	r0, 12df8 <_dtoa_r+0xe98>
   12dd8:	2200      	movs	r2, #0
   12dda:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
   12dde:	4b10      	ldr	r3, [pc, #64]	; (12e20 <_dtoa_r+0xec0>)
   12de0:	4810      	ldr	r0, [pc, #64]	; (12e24 <_dtoa_r+0xec4>)
   12de2:	f7f8 fe75 	bl	bad0 <__assert_func>
   12de6:	4b10      	ldr	r3, [pc, #64]	; (12e28 <_dtoa_r+0xec8>)
   12de8:	9303      	str	r3, [sp, #12]
   12dea:	f7ff b8f4 	b.w	11fd6 <_dtoa_r+0x76>
   12dee:	f43f ac33 	beq.w	12658 <_dtoa_r+0x6f8>
   12df2:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   12df6:	e4b5      	b.n	12764 <_dtoa_r+0x804>
   12df8:	9b03      	ldr	r3, [sp, #12]
   12dfa:	2201      	movs	r2, #1
   12dfc:	6423      	str	r3, [r4, #64]	; 0x40
   12dfe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   12e02:	9623      	str	r6, [sp, #140]	; 0x8c
   12e04:	9312      	str	r3, [sp, #72]	; 0x48
   12e06:	920c      	str	r2, [sp, #48]	; 0x30
   12e08:	9308      	str	r3, [sp, #32]
   12e0a:	f7ff bafb 	b.w	12404 <_dtoa_r+0x4a4>
   12e0e:	bf00      	nop
   12e10:	0001a170 	.word	0x0001a170
   12e14:	40240000 	.word	0x40240000
   12e18:	3fe00000 	.word	0x3fe00000
   12e1c:	401c0000 	.word	0x401c0000
   12e20:	0001a06c 	.word	0x0001a06c
   12e24:	0001a080 	.word	0x0001a080
   12e28:	0001a060 	.word	0x0001a060

00012e2c <__sflush_r>:
   12e2c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
   12e30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12e32:	460c      	mov	r4, r1
   12e34:	0711      	lsls	r1, r2, #28
   12e36:	4607      	mov	r7, r0
   12e38:	d443      	bmi.n	12ec2 <__sflush_r+0x96>
   12e3a:	6863      	ldr	r3, [r4, #4]
   12e3c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   12e40:	2b00      	cmp	r3, #0
   12e42:	81a2      	strh	r2, [r4, #12]
   12e44:	dd5b      	ble.n	12efe <__sflush_r+0xd2>
   12e46:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   12e48:	2d00      	cmp	r5, #0
   12e4a:	d056      	beq.n	12efa <__sflush_r+0xce>
   12e4c:	2300      	movs	r3, #0
   12e4e:	683e      	ldr	r6, [r7, #0]
   12e50:	603b      	str	r3, [r7, #0]
   12e52:	b293      	uxth	r3, r2
   12e54:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   12e58:	d155      	bne.n	12f06 <__sflush_r+0xda>
   12e5a:	2301      	movs	r3, #1
   12e5c:	4638      	mov	r0, r7
   12e5e:	69e1      	ldr	r1, [r4, #28]
   12e60:	47a8      	blx	r5
   12e62:	1c42      	adds	r2, r0, #1
   12e64:	d065      	beq.n	12f32 <__sflush_r+0x106>
   12e66:	89a3      	ldrh	r3, [r4, #12]
   12e68:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   12e6a:	075b      	lsls	r3, r3, #29
   12e6c:	d505      	bpl.n	12e7a <__sflush_r+0x4e>
   12e6e:	6863      	ldr	r3, [r4, #4]
   12e70:	1ac0      	subs	r0, r0, r3
   12e72:	6b23      	ldr	r3, [r4, #48]	; 0x30
   12e74:	b10b      	cbz	r3, 12e7a <__sflush_r+0x4e>
   12e76:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   12e78:	1ac0      	subs	r0, r0, r3
   12e7a:	4602      	mov	r2, r0
   12e7c:	69e1      	ldr	r1, [r4, #28]
   12e7e:	2300      	movs	r3, #0
   12e80:	4638      	mov	r0, r7
   12e82:	47a8      	blx	r5
   12e84:	1c41      	adds	r1, r0, #1
   12e86:	d140      	bne.n	12f0a <__sflush_r+0xde>
   12e88:	683b      	ldr	r3, [r7, #0]
   12e8a:	2b00      	cmp	r3, #0
   12e8c:	d03d      	beq.n	12f0a <__sflush_r+0xde>
   12e8e:	2b1d      	cmp	r3, #29
   12e90:	d001      	beq.n	12e96 <__sflush_r+0x6a>
   12e92:	2b16      	cmp	r3, #22
   12e94:	d154      	bne.n	12f40 <__sflush_r+0x114>
   12e96:	2200      	movs	r2, #0
   12e98:	89a3      	ldrh	r3, [r4, #12]
   12e9a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   12e9e:	81a3      	strh	r3, [r4, #12]
   12ea0:	6923      	ldr	r3, [r4, #16]
   12ea2:	e9c4 3200 	strd	r3, r2, [r4]
   12ea6:	6b21      	ldr	r1, [r4, #48]	; 0x30
   12ea8:	603e      	str	r6, [r7, #0]
   12eaa:	b331      	cbz	r1, 12efa <__sflush_r+0xce>
   12eac:	f104 0340 	add.w	r3, r4, #64	; 0x40
   12eb0:	4299      	cmp	r1, r3
   12eb2:	d002      	beq.n	12eba <__sflush_r+0x8e>
   12eb4:	4638      	mov	r0, r7
   12eb6:	f000 fb41 	bl	1353c <_free_r>
   12eba:	2300      	movs	r3, #0
   12ebc:	4618      	mov	r0, r3
   12ebe:	6323      	str	r3, [r4, #48]	; 0x30
   12ec0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12ec2:	6926      	ldr	r6, [r4, #16]
   12ec4:	b1ce      	cbz	r6, 12efa <__sflush_r+0xce>
   12ec6:	b293      	uxth	r3, r2
   12ec8:	079a      	lsls	r2, r3, #30
   12eca:	bf18      	it	ne
   12ecc:	2300      	movne	r3, #0
   12ece:	6825      	ldr	r5, [r4, #0]
   12ed0:	bf08      	it	eq
   12ed2:	6963      	ldreq	r3, [r4, #20]
   12ed4:	6026      	str	r6, [r4, #0]
   12ed6:	1bad      	subs	r5, r5, r6
   12ed8:	60a3      	str	r3, [r4, #8]
   12eda:	e00c      	b.n	12ef6 <__sflush_r+0xca>
   12edc:	462b      	mov	r3, r5
   12ede:	4632      	mov	r2, r6
   12ee0:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   12ee4:	4638      	mov	r0, r7
   12ee6:	69e1      	ldr	r1, [r4, #28]
   12ee8:	47e0      	blx	ip
   12eea:	f1b0 0c00 	subs.w	ip, r0, #0
   12eee:	eba5 050c 	sub.w	r5, r5, ip
   12ef2:	4466      	add	r6, ip
   12ef4:	dd16      	ble.n	12f24 <__sflush_r+0xf8>
   12ef6:	2d00      	cmp	r5, #0
   12ef8:	dcf0      	bgt.n	12edc <__sflush_r+0xb0>
   12efa:	2000      	movs	r0, #0
   12efc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12efe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   12f00:	2b00      	cmp	r3, #0
   12f02:	dca0      	bgt.n	12e46 <__sflush_r+0x1a>
   12f04:	e7f9      	b.n	12efa <__sflush_r+0xce>
   12f06:	6d20      	ldr	r0, [r4, #80]	; 0x50
   12f08:	e7af      	b.n	12e6a <__sflush_r+0x3e>
   12f0a:	2200      	movs	r2, #0
   12f0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   12f10:	6062      	str	r2, [r4, #4]
   12f12:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   12f16:	6922      	ldr	r2, [r4, #16]
   12f18:	81a3      	strh	r3, [r4, #12]
   12f1a:	04db      	lsls	r3, r3, #19
   12f1c:	6022      	str	r2, [r4, #0]
   12f1e:	d5c2      	bpl.n	12ea6 <__sflush_r+0x7a>
   12f20:	6520      	str	r0, [r4, #80]	; 0x50
   12f22:	e7c0      	b.n	12ea6 <__sflush_r+0x7a>
   12f24:	89a3      	ldrh	r3, [r4, #12]
   12f26:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   12f2a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   12f2e:	81a3      	strh	r3, [r4, #12]
   12f30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12f32:	683b      	ldr	r3, [r7, #0]
   12f34:	2b00      	cmp	r3, #0
   12f36:	d096      	beq.n	12e66 <__sflush_r+0x3a>
   12f38:	2b1d      	cmp	r3, #29
   12f3a:	d006      	beq.n	12f4a <__sflush_r+0x11e>
   12f3c:	2b16      	cmp	r3, #22
   12f3e:	d004      	beq.n	12f4a <__sflush_r+0x11e>
   12f40:	89a3      	ldrh	r3, [r4, #12]
   12f42:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   12f46:	81a3      	strh	r3, [r4, #12]
   12f48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12f4a:	2000      	movs	r0, #0
   12f4c:	603e      	str	r6, [r7, #0]
   12f4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00012f50 <_fflush_r>:
   12f50:	b538      	push	{r3, r4, r5, lr}
   12f52:	4605      	mov	r5, r0
   12f54:	460c      	mov	r4, r1
   12f56:	b108      	cbz	r0, 12f5c <_fflush_r+0xc>
   12f58:	6b83      	ldr	r3, [r0, #56]	; 0x38
   12f5a:	b1a3      	cbz	r3, 12f86 <_fflush_r+0x36>
   12f5c:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   12f60:	b1b8      	cbz	r0, 12f92 <_fflush_r+0x42>
   12f62:	6e63      	ldr	r3, [r4, #100]	; 0x64
   12f64:	07db      	lsls	r3, r3, #31
   12f66:	d401      	bmi.n	12f6c <_fflush_r+0x1c>
   12f68:	0581      	lsls	r1, r0, #22
   12f6a:	d515      	bpl.n	12f98 <_fflush_r+0x48>
   12f6c:	4628      	mov	r0, r5
   12f6e:	4621      	mov	r1, r4
   12f70:	f7ff ff5c 	bl	12e2c <__sflush_r>
   12f74:	6e63      	ldr	r3, [r4, #100]	; 0x64
   12f76:	4605      	mov	r5, r0
   12f78:	07da      	lsls	r2, r3, #31
   12f7a:	d402      	bmi.n	12f82 <_fflush_r+0x32>
   12f7c:	89a3      	ldrh	r3, [r4, #12]
   12f7e:	059b      	lsls	r3, r3, #22
   12f80:	d50e      	bpl.n	12fa0 <_fflush_r+0x50>
   12f82:	4628      	mov	r0, r5
   12f84:	bd38      	pop	{r3, r4, r5, pc}
   12f86:	f000 f88f 	bl	130a8 <__sinit>
   12f8a:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   12f8e:	2800      	cmp	r0, #0
   12f90:	d1e7      	bne.n	12f62 <_fflush_r+0x12>
   12f92:	4605      	mov	r5, r0
   12f94:	4628      	mov	r0, r5
   12f96:	bd38      	pop	{r3, r4, r5, pc}
   12f98:	6da0      	ldr	r0, [r4, #88]	; 0x58
   12f9a:	f7f9 f8c3 	bl	c124 <__retarget_lock_acquire_recursive>
   12f9e:	e7e5      	b.n	12f6c <_fflush_r+0x1c>
   12fa0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   12fa2:	f7f9 f8c7 	bl	c134 <__retarget_lock_release_recursive>
   12fa6:	4628      	mov	r0, r5
   12fa8:	bd38      	pop	{r3, r4, r5, pc}
   12faa:	bf00      	nop

00012fac <fflush>:
   12fac:	b538      	push	{r3, r4, r5, lr}
   12fae:	b348      	cbz	r0, 13004 <fflush+0x58>
   12fb0:	4b18      	ldr	r3, [pc, #96]	; (13014 <fflush+0x68>)
   12fb2:	4604      	mov	r4, r0
   12fb4:	681d      	ldr	r5, [r3, #0]
   12fb6:	b10d      	cbz	r5, 12fbc <fflush+0x10>
   12fb8:	6bab      	ldr	r3, [r5, #56]	; 0x38
   12fba:	b1bb      	cbz	r3, 12fec <fflush+0x40>
   12fbc:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   12fc0:	b188      	cbz	r0, 12fe6 <fflush+0x3a>
   12fc2:	6e63      	ldr	r3, [r4, #100]	; 0x64
   12fc4:	07db      	lsls	r3, r3, #31
   12fc6:	d401      	bmi.n	12fcc <fflush+0x20>
   12fc8:	0581      	lsls	r1, r0, #22
   12fca:	d513      	bpl.n	12ff4 <fflush+0x48>
   12fcc:	4628      	mov	r0, r5
   12fce:	4621      	mov	r1, r4
   12fd0:	f7ff ff2c 	bl	12e2c <__sflush_r>
   12fd4:	6e63      	ldr	r3, [r4, #100]	; 0x64
   12fd6:	4605      	mov	r5, r0
   12fd8:	07da      	lsls	r2, r3, #31
   12fda:	d402      	bmi.n	12fe2 <fflush+0x36>
   12fdc:	89a3      	ldrh	r3, [r4, #12]
   12fde:	059b      	lsls	r3, r3, #22
   12fe0:	d50c      	bpl.n	12ffc <fflush+0x50>
   12fe2:	4628      	mov	r0, r5
   12fe4:	bd38      	pop	{r3, r4, r5, pc}
   12fe6:	4605      	mov	r5, r0
   12fe8:	4628      	mov	r0, r5
   12fea:	bd38      	pop	{r3, r4, r5, pc}
   12fec:	4628      	mov	r0, r5
   12fee:	f000 f85b 	bl	130a8 <__sinit>
   12ff2:	e7e3      	b.n	12fbc <fflush+0x10>
   12ff4:	6da0      	ldr	r0, [r4, #88]	; 0x58
   12ff6:	f7f9 f895 	bl	c124 <__retarget_lock_acquire_recursive>
   12ffa:	e7e7      	b.n	12fcc <fflush+0x20>
   12ffc:	6da0      	ldr	r0, [r4, #88]	; 0x58
   12ffe:	f7f9 f899 	bl	c134 <__retarget_lock_release_recursive>
   13002:	e7ee      	b.n	12fe2 <fflush+0x36>
   13004:	4b04      	ldr	r3, [pc, #16]	; (13018 <fflush+0x6c>)
   13006:	4905      	ldr	r1, [pc, #20]	; (1301c <fflush+0x70>)
   13008:	6818      	ldr	r0, [r3, #0]
   1300a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1300e:	f000 bbb5 	b.w	1377c <_fwalk_reent>
   13012:	bf00      	nop
   13014:	20000124 	.word	0x20000124
   13018:	00019fb4 	.word	0x00019fb4
   1301c:	00012f51 	.word	0x00012f51

00013020 <_cleanup_r>:
   13020:	4901      	ldr	r1, [pc, #4]	; (13028 <_cleanup_r+0x8>)
   13022:	f000 bbab 	b.w	1377c <_fwalk_reent>
   13026:	bf00      	nop
   13028:	000154c1 	.word	0x000154c1

0001302c <__fp_lock>:
   1302c:	b508      	push	{r3, lr}
   1302e:	6e43      	ldr	r3, [r0, #100]	; 0x64
   13030:	07da      	lsls	r2, r3, #31
   13032:	d402      	bmi.n	1303a <__fp_lock+0xe>
   13034:	8983      	ldrh	r3, [r0, #12]
   13036:	059b      	lsls	r3, r3, #22
   13038:	d501      	bpl.n	1303e <__fp_lock+0x12>
   1303a:	2000      	movs	r0, #0
   1303c:	bd08      	pop	{r3, pc}
   1303e:	6d80      	ldr	r0, [r0, #88]	; 0x58
   13040:	f7f9 f870 	bl	c124 <__retarget_lock_acquire_recursive>
   13044:	2000      	movs	r0, #0
   13046:	bd08      	pop	{r3, pc}

00013048 <__fp_unlock>:
   13048:	b508      	push	{r3, lr}
   1304a:	6e43      	ldr	r3, [r0, #100]	; 0x64
   1304c:	07da      	lsls	r2, r3, #31
   1304e:	d402      	bmi.n	13056 <__fp_unlock+0xe>
   13050:	8983      	ldrh	r3, [r0, #12]
   13052:	059b      	lsls	r3, r3, #22
   13054:	d501      	bpl.n	1305a <__fp_unlock+0x12>
   13056:	2000      	movs	r0, #0
   13058:	bd08      	pop	{r3, pc}
   1305a:	6d80      	ldr	r0, [r0, #88]	; 0x58
   1305c:	f7f9 f86a 	bl	c134 <__retarget_lock_release_recursive>
   13060:	2000      	movs	r0, #0
   13062:	bd08      	pop	{r3, pc}

00013064 <__sfmoreglue>:
   13064:	2268      	movs	r2, #104	; 0x68
   13066:	b570      	push	{r4, r5, r6, lr}
   13068:	1e4d      	subs	r5, r1, #1
   1306a:	fb02 f505 	mul.w	r5, r2, r5
   1306e:	460e      	mov	r6, r1
   13070:	f105 0174 	add.w	r1, r5, #116	; 0x74
   13074:	f7f9 f870 	bl	c158 <_malloc_r>
   13078:	4604      	mov	r4, r0
   1307a:	b140      	cbz	r0, 1308e <__sfmoreglue+0x2a>
   1307c:	2100      	movs	r1, #0
   1307e:	300c      	adds	r0, #12
   13080:	e9c4 6001 	strd	r6, r0, [r4, #4]
   13084:	f105 0268 	add.w	r2, r5, #104	; 0x68
   13088:	6021      	str	r1, [r4, #0]
   1308a:	f7f9 fc7f 	bl	c98c <memset>
   1308e:	4620      	mov	r0, r4
   13090:	bd70      	pop	{r4, r5, r6, pc}
   13092:	bf00      	nop

00013094 <_cleanup>:
   13094:	4b02      	ldr	r3, [pc, #8]	; (130a0 <_cleanup+0xc>)
   13096:	4903      	ldr	r1, [pc, #12]	; (130a4 <_cleanup+0x10>)
   13098:	6818      	ldr	r0, [r3, #0]
   1309a:	f000 bb6f 	b.w	1377c <_fwalk_reent>
   1309e:	bf00      	nop
   130a0:	00019fb4 	.word	0x00019fb4
   130a4:	000154c1 	.word	0x000154c1

000130a8 <__sinit>:
   130a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   130ac:	4682      	mov	sl, r0
   130ae:	4839      	ldr	r0, [pc, #228]	; (13194 <__sinit+0xec>)
   130b0:	f7f9 f838 	bl	c124 <__retarget_lock_acquire_recursive>
   130b4:	f8da 4038 	ldr.w	r4, [sl, #56]	; 0x38
   130b8:	2c00      	cmp	r4, #0
   130ba:	d166      	bne.n	1318a <__sinit+0xe2>
   130bc:	2304      	movs	r3, #4
   130be:	2203      	movs	r2, #3
   130c0:	4935      	ldr	r1, [pc, #212]	; (13198 <__sinit+0xf0>)
   130c2:	f8da 5004 	ldr.w	r5, [sl, #4]
   130c6:	f8ca 103c 	str.w	r1, [sl, #60]	; 0x3c
   130ca:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 1319c <__sinit+0xf4>
   130ce:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 131a0 <__sinit+0xf8>
   130d2:	4f34      	ldr	r7, [pc, #208]	; (131a4 <__sinit+0xfc>)
   130d4:	4e34      	ldr	r6, [pc, #208]	; (131a8 <__sinit+0x100>)
   130d6:	f50a 713b 	add.w	r1, sl, #748	; 0x2ec
   130da:	e9ca 21b9 	strd	r2, r1, [sl, #740]	; 0x2e4
   130de:	f8ca 42e0 	str.w	r4, [sl, #736]	; 0x2e0
   130e2:	4621      	mov	r1, r4
   130e4:	60eb      	str	r3, [r5, #12]
   130e6:	2208      	movs	r2, #8
   130e8:	e9c5 4400 	strd	r4, r4, [r5]
   130ec:	e9c5 4404 	strd	r4, r4, [r5, #16]
   130f0:	666c      	str	r4, [r5, #100]	; 0x64
   130f2:	60ac      	str	r4, [r5, #8]
   130f4:	61ac      	str	r4, [r5, #24]
   130f6:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   130fa:	f7f9 fc47 	bl	c98c <memset>
   130fe:	e9c5 5907 	strd	r5, r9, [r5, #28]
   13102:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   13106:	62ee      	str	r6, [r5, #44]	; 0x2c
   13108:	f105 0058 	add.w	r0, r5, #88	; 0x58
   1310c:	f7f9 f802 	bl	c114 <__retarget_lock_init_recursive>
   13110:	f8da 5008 	ldr.w	r5, [sl, #8]
   13114:	4b25      	ldr	r3, [pc, #148]	; (131ac <__sinit+0x104>)
   13116:	4621      	mov	r1, r4
   13118:	60eb      	str	r3, [r5, #12]
   1311a:	2208      	movs	r2, #8
   1311c:	e9c5 4400 	strd	r4, r4, [r5]
   13120:	e9c5 4404 	strd	r4, r4, [r5, #16]
   13124:	666c      	str	r4, [r5, #100]	; 0x64
   13126:	60ac      	str	r4, [r5, #8]
   13128:	61ac      	str	r4, [r5, #24]
   1312a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   1312e:	f7f9 fc2d 	bl	c98c <memset>
   13132:	e9c5 5907 	strd	r5, r9, [r5, #28]
   13136:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   1313a:	62ee      	str	r6, [r5, #44]	; 0x2c
   1313c:	f105 0058 	add.w	r0, r5, #88	; 0x58
   13140:	f7f8 ffe8 	bl	c114 <__retarget_lock_init_recursive>
   13144:	f8da 500c 	ldr.w	r5, [sl, #12]
   13148:	4b19      	ldr	r3, [pc, #100]	; (131b0 <__sinit+0x108>)
   1314a:	4621      	mov	r1, r4
   1314c:	60eb      	str	r3, [r5, #12]
   1314e:	2208      	movs	r2, #8
   13150:	e9c5 4400 	strd	r4, r4, [r5]
   13154:	e9c5 4404 	strd	r4, r4, [r5, #16]
   13158:	666c      	str	r4, [r5, #100]	; 0x64
   1315a:	60ac      	str	r4, [r5, #8]
   1315c:	61ac      	str	r4, [r5, #24]
   1315e:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   13162:	f7f9 fc13 	bl	c98c <memset>
   13166:	f105 0058 	add.w	r0, r5, #88	; 0x58
   1316a:	e9c5 5907 	strd	r5, r9, [r5, #28]
   1316e:	e9c5 760a 	strd	r7, r6, [r5, #40]	; 0x28
   13172:	f8c5 8024 	str.w	r8, [r5, #36]	; 0x24
   13176:	f7f8 ffcd 	bl	c114 <__retarget_lock_init_recursive>
   1317a:	2301      	movs	r3, #1
   1317c:	4805      	ldr	r0, [pc, #20]	; (13194 <__sinit+0xec>)
   1317e:	f8ca 3038 	str.w	r3, [sl, #56]	; 0x38
   13182:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13186:	f7f8 bfd5 	b.w	c134 <__retarget_lock_release_recursive>
   1318a:	4802      	ldr	r0, [pc, #8]	; (13194 <__sinit+0xec>)
   1318c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13190:	f7f8 bfd0 	b.w	c134 <__retarget_lock_release_recursive>
   13194:	20001f68 	.word	0x20001f68
   13198:	00013021 	.word	0x00013021
   1319c:	00014595 	.word	0x00014595
   131a0:	000145bd 	.word	0x000145bd
   131a4:	000145fd 	.word	0x000145fd
   131a8:	0001461d 	.word	0x0001461d
   131ac:	00010009 	.word	0x00010009
   131b0:	00020012 	.word	0x00020012

000131b4 <__sfp>:
   131b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   131b8:	4607      	mov	r7, r0
   131ba:	482d      	ldr	r0, [pc, #180]	; (13270 <__sfp+0xbc>)
   131bc:	f7f8 ffb2 	bl	c124 <__retarget_lock_acquire_recursive>
   131c0:	4b2c      	ldr	r3, [pc, #176]	; (13274 <__sfp+0xc0>)
   131c2:	681e      	ldr	r6, [r3, #0]
   131c4:	6bb3      	ldr	r3, [r6, #56]	; 0x38
   131c6:	b393      	cbz	r3, 1322e <__sfp+0x7a>
   131c8:	f04f 0804 	mov.w	r8, #4
   131cc:	f506 7638 	add.w	r6, r6, #736	; 0x2e0
   131d0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
   131d4:	3b01      	subs	r3, #1
   131d6:	d504      	bpl.n	131e2 <__sfp+0x2e>
   131d8:	e025      	b.n	13226 <__sfp+0x72>
   131da:	1c5a      	adds	r2, r3, #1
   131dc:	f104 0468 	add.w	r4, r4, #104	; 0x68
   131e0:	d021      	beq.n	13226 <__sfp+0x72>
   131e2:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   131e6:	3b01      	subs	r3, #1
   131e8:	2d00      	cmp	r5, #0
   131ea:	d1f6      	bne.n	131da <__sfp+0x26>
   131ec:	4b22      	ldr	r3, [pc, #136]	; (13278 <__sfp+0xc4>)
   131ee:	f104 0058 	add.w	r0, r4, #88	; 0x58
   131f2:	60e3      	str	r3, [r4, #12]
   131f4:	6665      	str	r5, [r4, #100]	; 0x64
   131f6:	f7f8 ff8d 	bl	c114 <__retarget_lock_init_recursive>
   131fa:	481d      	ldr	r0, [pc, #116]	; (13270 <__sfp+0xbc>)
   131fc:	f7f8 ff9a 	bl	c134 <__retarget_lock_release_recursive>
   13200:	2208      	movs	r2, #8
   13202:	4629      	mov	r1, r5
   13204:	e9c4 5501 	strd	r5, r5, [r4, #4]
   13208:	e9c4 5504 	strd	r5, r5, [r4, #16]
   1320c:	6025      	str	r5, [r4, #0]
   1320e:	61a5      	str	r5, [r4, #24]
   13210:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   13214:	f7f9 fbba 	bl	c98c <memset>
   13218:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
   1321c:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
   13220:	4620      	mov	r0, r4
   13222:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13226:	6835      	ldr	r5, [r6, #0]
   13228:	b12d      	cbz	r5, 13236 <__sfp+0x82>
   1322a:	462e      	mov	r6, r5
   1322c:	e7d0      	b.n	131d0 <__sfp+0x1c>
   1322e:	4630      	mov	r0, r6
   13230:	f7ff ff3a 	bl	130a8 <__sinit>
   13234:	e7c8      	b.n	131c8 <__sfp+0x14>
   13236:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
   1323a:	4638      	mov	r0, r7
   1323c:	f7f8 ff8c 	bl	c158 <_malloc_r>
   13240:	4604      	mov	r4, r0
   13242:	b168      	cbz	r0, 13260 <__sfp+0xac>
   13244:	6005      	str	r5, [r0, #0]
   13246:	4629      	mov	r1, r5
   13248:	4605      	mov	r5, r0
   1324a:	f8c0 8004 	str.w	r8, [r0, #4]
   1324e:	300c      	adds	r0, #12
   13250:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
   13254:	60a0      	str	r0, [r4, #8]
   13256:	f7f9 fb99 	bl	c98c <memset>
   1325a:	6034      	str	r4, [r6, #0]
   1325c:	462e      	mov	r6, r5
   1325e:	e7b7      	b.n	131d0 <__sfp+0x1c>
   13260:	4803      	ldr	r0, [pc, #12]	; (13270 <__sfp+0xbc>)
   13262:	6034      	str	r4, [r6, #0]
   13264:	f7f8 ff66 	bl	c134 <__retarget_lock_release_recursive>
   13268:	230c      	movs	r3, #12
   1326a:	603b      	str	r3, [r7, #0]
   1326c:	e7d8      	b.n	13220 <__sfp+0x6c>
   1326e:	bf00      	nop
   13270:	20001f64 	.word	0x20001f64
   13274:	00019fb4 	.word	0x00019fb4
   13278:	ffff0001 	.word	0xffff0001

0001327c <__sfp_lock_acquire>:
   1327c:	4801      	ldr	r0, [pc, #4]	; (13284 <__sfp_lock_acquire+0x8>)
   1327e:	f7f8 bf51 	b.w	c124 <__retarget_lock_acquire_recursive>
   13282:	bf00      	nop
   13284:	20001f64 	.word	0x20001f64

00013288 <__sfp_lock_release>:
   13288:	4801      	ldr	r0, [pc, #4]	; (13290 <__sfp_lock_release+0x8>)
   1328a:	f7f8 bf53 	b.w	c134 <__retarget_lock_release_recursive>
   1328e:	bf00      	nop
   13290:	20001f64 	.word	0x20001f64

00013294 <__sinit_lock_acquire>:
   13294:	4801      	ldr	r0, [pc, #4]	; (1329c <__sinit_lock_acquire+0x8>)
   13296:	f7f8 bf45 	b.w	c124 <__retarget_lock_acquire_recursive>
   1329a:	bf00      	nop
   1329c:	20001f68 	.word	0x20001f68

000132a0 <__sinit_lock_release>:
   132a0:	4801      	ldr	r0, [pc, #4]	; (132a8 <__sinit_lock_release+0x8>)
   132a2:	f7f8 bf47 	b.w	c134 <__retarget_lock_release_recursive>
   132a6:	bf00      	nop
   132a8:	20001f68 	.word	0x20001f68

000132ac <__fp_lock_all>:
   132ac:	b508      	push	{r3, lr}
   132ae:	4805      	ldr	r0, [pc, #20]	; (132c4 <__fp_lock_all+0x18>)
   132b0:	f7f8 ff38 	bl	c124 <__retarget_lock_acquire_recursive>
   132b4:	4b04      	ldr	r3, [pc, #16]	; (132c8 <__fp_lock_all+0x1c>)
   132b6:	4905      	ldr	r1, [pc, #20]	; (132cc <__fp_lock_all+0x20>)
   132b8:	6818      	ldr	r0, [r3, #0]
   132ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   132be:	f000 ba3d 	b.w	1373c <_fwalk>
   132c2:	bf00      	nop
   132c4:	20001f64 	.word	0x20001f64
   132c8:	20000124 	.word	0x20000124
   132cc:	0001302d 	.word	0x0001302d

000132d0 <__fp_unlock_all>:
   132d0:	b508      	push	{r3, lr}
   132d2:	4b05      	ldr	r3, [pc, #20]	; (132e8 <__fp_unlock_all+0x18>)
   132d4:	4905      	ldr	r1, [pc, #20]	; (132ec <__fp_unlock_all+0x1c>)
   132d6:	6818      	ldr	r0, [r3, #0]
   132d8:	f000 fa30 	bl	1373c <_fwalk>
   132dc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   132e0:	4803      	ldr	r0, [pc, #12]	; (132f0 <__fp_unlock_all+0x20>)
   132e2:	f7f8 bf27 	b.w	c134 <__retarget_lock_release_recursive>
   132e6:	bf00      	nop
   132e8:	20000124 	.word	0x20000124
   132ec:	00013049 	.word	0x00013049
   132f0:	20001f64 	.word	0x20001f64

000132f4 <__libc_fini_array>:
   132f4:	b538      	push	{r3, r4, r5, lr}
   132f6:	4b08      	ldr	r3, [pc, #32]	; (13318 <__libc_fini_array+0x24>)
   132f8:	4d08      	ldr	r5, [pc, #32]	; (1331c <__libc_fini_array+0x28>)
   132fa:	1b5b      	subs	r3, r3, r5
   132fc:	109c      	asrs	r4, r3, #2
   132fe:	d007      	beq.n	13310 <__libc_fini_array+0x1c>
   13300:	3b04      	subs	r3, #4
   13302:	441d      	add	r5, r3
   13304:	3c01      	subs	r4, #1
   13306:	f855 3904 	ldr.w	r3, [r5], #-4
   1330a:	4798      	blx	r3
   1330c:	2c00      	cmp	r4, #0
   1330e:	d1f9      	bne.n	13304 <__libc_fini_array+0x10>
   13310:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   13314:	f003 be18 	b.w	16f48 <_fini>
   13318:	20000aec 	.word	0x20000aec
   1331c:	20000ae8 	.word	0x20000ae8

00013320 <__fputwc>:
   13320:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   13324:	b083      	sub	sp, #12
   13326:	4607      	mov	r7, r0
   13328:	4688      	mov	r8, r1
   1332a:	4614      	mov	r4, r2
   1332c:	f000 fa6a 	bl	13804 <__locale_mb_cur_max>
   13330:	2801      	cmp	r0, #1
   13332:	d103      	bne.n	1333c <__fputwc+0x1c>
   13334:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   13338:	2bfe      	cmp	r3, #254	; 0xfe
   1333a:	d933      	bls.n	133a4 <__fputwc+0x84>
   1333c:	4642      	mov	r2, r8
   1333e:	4638      	mov	r0, r7
   13340:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   13344:	a901      	add	r1, sp, #4
   13346:	f001 ffc5 	bl	152d4 <_wcrtomb_r>
   1334a:	1c42      	adds	r2, r0, #1
   1334c:	4606      	mov	r6, r0
   1334e:	d02f      	beq.n	133b0 <__fputwc+0x90>
   13350:	b318      	cbz	r0, 1339a <__fputwc+0x7a>
   13352:	f89d 1004 	ldrb.w	r1, [sp, #4]
   13356:	2500      	movs	r5, #0
   13358:	f10d 0905 	add.w	r9, sp, #5
   1335c:	e008      	b.n	13370 <__fputwc+0x50>
   1335e:	6823      	ldr	r3, [r4, #0]
   13360:	1c5a      	adds	r2, r3, #1
   13362:	6022      	str	r2, [r4, #0]
   13364:	7019      	strb	r1, [r3, #0]
   13366:	3501      	adds	r5, #1
   13368:	42b5      	cmp	r5, r6
   1336a:	d216      	bcs.n	1339a <__fputwc+0x7a>
   1336c:	f819 1b01 	ldrb.w	r1, [r9], #1
   13370:	68a3      	ldr	r3, [r4, #8]
   13372:	3b01      	subs	r3, #1
   13374:	2b00      	cmp	r3, #0
   13376:	60a3      	str	r3, [r4, #8]
   13378:	daf1      	bge.n	1335e <__fputwc+0x3e>
   1337a:	69a2      	ldr	r2, [r4, #24]
   1337c:	4293      	cmp	r3, r2
   1337e:	db01      	blt.n	13384 <__fputwc+0x64>
   13380:	290a      	cmp	r1, #10
   13382:	d1ec      	bne.n	1335e <__fputwc+0x3e>
   13384:	4622      	mov	r2, r4
   13386:	4638      	mov	r0, r7
   13388:	f7fe fbfe 	bl	11b88 <__swbuf_r>
   1338c:	1c43      	adds	r3, r0, #1
   1338e:	d1ea      	bne.n	13366 <__fputwc+0x46>
   13390:	4606      	mov	r6, r0
   13392:	4630      	mov	r0, r6
   13394:	b003      	add	sp, #12
   13396:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1339a:	4646      	mov	r6, r8
   1339c:	4630      	mov	r0, r6
   1339e:	b003      	add	sp, #12
   133a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   133a4:	fa5f f188 	uxtb.w	r1, r8
   133a8:	4606      	mov	r6, r0
   133aa:	f88d 1004 	strb.w	r1, [sp, #4]
   133ae:	e7d2      	b.n	13356 <__fputwc+0x36>
   133b0:	4630      	mov	r0, r6
   133b2:	89a3      	ldrh	r3, [r4, #12]
   133b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   133b8:	81a3      	strh	r3, [r4, #12]
   133ba:	b003      	add	sp, #12
   133bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

000133c0 <_fputwc_r>:
   133c0:	b530      	push	{r4, r5, lr}
   133c2:	6e53      	ldr	r3, [r2, #100]	; 0x64
   133c4:	4614      	mov	r4, r2
   133c6:	f013 0f01 	tst.w	r3, #1
   133ca:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   133ce:	4605      	mov	r5, r0
   133d0:	b083      	sub	sp, #12
   133d2:	b29a      	uxth	r2, r3
   133d4:	d101      	bne.n	133da <_fputwc_r+0x1a>
   133d6:	0598      	lsls	r0, r3, #22
   133d8:	d51c      	bpl.n	13414 <_fputwc_r+0x54>
   133da:	0490      	lsls	r0, r2, #18
   133dc:	d406      	bmi.n	133ec <_fputwc_r+0x2c>
   133de:	6e62      	ldr	r2, [r4, #100]	; 0x64
   133e0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   133e4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   133e8:	81a3      	strh	r3, [r4, #12]
   133ea:	6662      	str	r2, [r4, #100]	; 0x64
   133ec:	4622      	mov	r2, r4
   133ee:	4628      	mov	r0, r5
   133f0:	f7ff ff96 	bl	13320 <__fputwc>
   133f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
   133f6:	4605      	mov	r5, r0
   133f8:	07da      	lsls	r2, r3, #31
   133fa:	d402      	bmi.n	13402 <_fputwc_r+0x42>
   133fc:	89a3      	ldrh	r3, [r4, #12]
   133fe:	059b      	lsls	r3, r3, #22
   13400:	d502      	bpl.n	13408 <_fputwc_r+0x48>
   13402:	4628      	mov	r0, r5
   13404:	b003      	add	sp, #12
   13406:	bd30      	pop	{r4, r5, pc}
   13408:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1340a:	f7f8 fe93 	bl	c134 <__retarget_lock_release_recursive>
   1340e:	4628      	mov	r0, r5
   13410:	b003      	add	sp, #12
   13412:	bd30      	pop	{r4, r5, pc}
   13414:	6da0      	ldr	r0, [r4, #88]	; 0x58
   13416:	9101      	str	r1, [sp, #4]
   13418:	f7f8 fe84 	bl	c124 <__retarget_lock_acquire_recursive>
   1341c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   13420:	9901      	ldr	r1, [sp, #4]
   13422:	b29a      	uxth	r2, r3
   13424:	e7d9      	b.n	133da <_fputwc_r+0x1a>
   13426:	bf00      	nop

00013428 <fputwc>:
   13428:	4b1b      	ldr	r3, [pc, #108]	; (13498 <fputwc+0x70>)
   1342a:	b570      	push	{r4, r5, r6, lr}
   1342c:	681e      	ldr	r6, [r3, #0]
   1342e:	4605      	mov	r5, r0
   13430:	460c      	mov	r4, r1
   13432:	b10e      	cbz	r6, 13438 <fputwc+0x10>
   13434:	6bb3      	ldr	r3, [r6, #56]	; 0x38
   13436:	b1fb      	cbz	r3, 13478 <fputwc+0x50>
   13438:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1343a:	f013 0f01 	tst.w	r3, #1
   1343e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   13442:	b29a      	uxth	r2, r3
   13444:	d101      	bne.n	1344a <fputwc+0x22>
   13446:	0598      	lsls	r0, r3, #22
   13448:	d51f      	bpl.n	1348a <fputwc+0x62>
   1344a:	0491      	lsls	r1, r2, #18
   1344c:	d406      	bmi.n	1345c <fputwc+0x34>
   1344e:	6e62      	ldr	r2, [r4, #100]	; 0x64
   13450:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   13454:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   13458:	81a3      	strh	r3, [r4, #12]
   1345a:	6662      	str	r2, [r4, #100]	; 0x64
   1345c:	4622      	mov	r2, r4
   1345e:	4629      	mov	r1, r5
   13460:	4630      	mov	r0, r6
   13462:	f7ff ff5d 	bl	13320 <__fputwc>
   13466:	6e63      	ldr	r3, [r4, #100]	; 0x64
   13468:	4605      	mov	r5, r0
   1346a:	07da      	lsls	r2, r3, #31
   1346c:	d402      	bmi.n	13474 <fputwc+0x4c>
   1346e:	89a3      	ldrh	r3, [r4, #12]
   13470:	059b      	lsls	r3, r3, #22
   13472:	d505      	bpl.n	13480 <fputwc+0x58>
   13474:	4628      	mov	r0, r5
   13476:	bd70      	pop	{r4, r5, r6, pc}
   13478:	4630      	mov	r0, r6
   1347a:	f7ff fe15 	bl	130a8 <__sinit>
   1347e:	e7db      	b.n	13438 <fputwc+0x10>
   13480:	6da0      	ldr	r0, [r4, #88]	; 0x58
   13482:	f7f8 fe57 	bl	c134 <__retarget_lock_release_recursive>
   13486:	4628      	mov	r0, r5
   13488:	bd70      	pop	{r4, r5, r6, pc}
   1348a:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1348c:	f7f8 fe4a 	bl	c124 <__retarget_lock_acquire_recursive>
   13490:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   13494:	b29a      	uxth	r2, r3
   13496:	e7d8      	b.n	1344a <fputwc+0x22>
   13498:	20000124 	.word	0x20000124

0001349c <_malloc_trim_r>:
   1349c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1349e:	460c      	mov	r4, r1
   134a0:	4f23      	ldr	r7, [pc, #140]	; (13530 <_malloc_trim_r+0x94>)
   134a2:	4606      	mov	r6, r0
   134a4:	f7f9 fac4 	bl	ca30 <__malloc_lock>
   134a8:	68bb      	ldr	r3, [r7, #8]
   134aa:	685d      	ldr	r5, [r3, #4]
   134ac:	f5c4 637e 	rsb	r3, r4, #4064	; 0xfe0
   134b0:	f025 0503 	bic.w	r5, r5, #3
   134b4:	330f      	adds	r3, #15
   134b6:	442b      	add	r3, r5
   134b8:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
   134bc:	f023 030f 	bic.w	r3, r3, #15
   134c0:	f5a3 5480 	sub.w	r4, r3, #4096	; 0x1000
   134c4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   134c8:	db07      	blt.n	134da <_malloc_trim_r+0x3e>
   134ca:	2100      	movs	r1, #0
   134cc:	4630      	mov	r0, r6
   134ce:	f7f9 fda5 	bl	d01c <_sbrk_r>
   134d2:	68bb      	ldr	r3, [r7, #8]
   134d4:	442b      	add	r3, r5
   134d6:	4298      	cmp	r0, r3
   134d8:	d004      	beq.n	134e4 <_malloc_trim_r+0x48>
   134da:	4630      	mov	r0, r6
   134dc:	f7f9 faae 	bl	ca3c <__malloc_unlock>
   134e0:	2000      	movs	r0, #0
   134e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   134e4:	4630      	mov	r0, r6
   134e6:	4261      	negs	r1, r4
   134e8:	f7f9 fd98 	bl	d01c <_sbrk_r>
   134ec:	3001      	adds	r0, #1
   134ee:	d00d      	beq.n	1350c <_malloc_trim_r+0x70>
   134f0:	4a10      	ldr	r2, [pc, #64]	; (13534 <_malloc_trim_r+0x98>)
   134f2:	68bb      	ldr	r3, [r7, #8]
   134f4:	1b2d      	subs	r5, r5, r4
   134f6:	f045 0501 	orr.w	r5, r5, #1
   134fa:	605d      	str	r5, [r3, #4]
   134fc:	6813      	ldr	r3, [r2, #0]
   134fe:	4630      	mov	r0, r6
   13500:	1b1b      	subs	r3, r3, r4
   13502:	6013      	str	r3, [r2, #0]
   13504:	f7f9 fa9a 	bl	ca3c <__malloc_unlock>
   13508:	2001      	movs	r0, #1
   1350a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1350c:	2100      	movs	r1, #0
   1350e:	4630      	mov	r0, r6
   13510:	f7f9 fd84 	bl	d01c <_sbrk_r>
   13514:	68ba      	ldr	r2, [r7, #8]
   13516:	1a83      	subs	r3, r0, r2
   13518:	2b0f      	cmp	r3, #15
   1351a:	ddde      	ble.n	134da <_malloc_trim_r+0x3e>
   1351c:	f043 0301 	orr.w	r3, r3, #1
   13520:	6053      	str	r3, [r2, #4]
   13522:	4b05      	ldr	r3, [pc, #20]	; (13538 <_malloc_trim_r+0x9c>)
   13524:	4903      	ldr	r1, [pc, #12]	; (13534 <_malloc_trim_r+0x98>)
   13526:	681b      	ldr	r3, [r3, #0]
   13528:	1ac0      	subs	r0, r0, r3
   1352a:	6008      	str	r0, [r1, #0]
   1352c:	e7d5      	b.n	134da <_malloc_trim_r+0x3e>
   1352e:	bf00      	nop
   13530:	20000550 	.word	0x20000550
   13534:	20001f70 	.word	0x20001f70
   13538:	20000958 	.word	0x20000958

0001353c <_free_r>:
   1353c:	2900      	cmp	r1, #0
   1353e:	d05e      	beq.n	135fe <_free_r+0xc2>
   13540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13542:	460c      	mov	r4, r1
   13544:	4606      	mov	r6, r0
   13546:	f7f9 fa73 	bl	ca30 <__malloc_lock>
   1354a:	f854 2c04 	ldr.w	r2, [r4, #-4]
   1354e:	4f78      	ldr	r7, [pc, #480]	; (13730 <_free_r+0x1f4>)
   13550:	f1a4 0508 	sub.w	r5, r4, #8
   13554:	f022 0101 	bic.w	r1, r2, #1
   13558:	1868      	adds	r0, r5, r1
   1355a:	f8d7 c008 	ldr.w	ip, [r7, #8]
   1355e:	6843      	ldr	r3, [r0, #4]
   13560:	4584      	cmp	ip, r0
   13562:	f023 0303 	bic.w	r3, r3, #3
   13566:	f000 8087 	beq.w	13678 <_free_r+0x13c>
   1356a:	07d2      	lsls	r2, r2, #31
   1356c:	6043      	str	r3, [r0, #4]
   1356e:	d434      	bmi.n	135da <_free_r+0x9e>
   13570:	f854 2c08 	ldr.w	r2, [r4, #-8]
   13574:	f107 0408 	add.w	r4, r7, #8
   13578:	1aad      	subs	r5, r5, r2
   1357a:	4411      	add	r1, r2
   1357c:	68aa      	ldr	r2, [r5, #8]
   1357e:	42a2      	cmp	r2, r4
   13580:	d068      	beq.n	13654 <_free_r+0x118>
   13582:	eb00 0c03 	add.w	ip, r0, r3
   13586:	f8dc e004 	ldr.w	lr, [ip, #4]
   1358a:	f8d5 c00c 	ldr.w	ip, [r5, #12]
   1358e:	f01e 0f01 	tst.w	lr, #1
   13592:	f8c2 c00c 	str.w	ip, [r2, #12]
   13596:	f8cc 2008 	str.w	r2, [ip, #8]
   1359a:	f000 8091 	beq.w	136c0 <_free_r+0x184>
   1359e:	f041 0301 	orr.w	r3, r1, #1
   135a2:	606b      	str	r3, [r5, #4]
   135a4:	6001      	str	r1, [r0, #0]
   135a6:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   135aa:	d231      	bcs.n	13610 <_free_r+0xd4>
   135ac:	094a      	lsrs	r2, r1, #5
   135ae:	08cb      	lsrs	r3, r1, #3
   135b0:	2101      	movs	r1, #1
   135b2:	4091      	lsls	r1, r2
   135b4:	687a      	ldr	r2, [r7, #4]
   135b6:	3301      	adds	r3, #1
   135b8:	4311      	orrs	r1, r2
   135ba:	6079      	str	r1, [r7, #4]
   135bc:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
   135c0:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
   135c4:	3a08      	subs	r2, #8
   135c6:	e9c5 1202 	strd	r1, r2, [r5, #8]
   135ca:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
   135ce:	60cd      	str	r5, [r1, #12]
   135d0:	4630      	mov	r0, r6
   135d2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   135d6:	f7f9 ba31 	b.w	ca3c <__malloc_unlock>
   135da:	18c2      	adds	r2, r0, r3
   135dc:	6852      	ldr	r2, [r2, #4]
   135de:	07d2      	lsls	r2, r2, #31
   135e0:	d40e      	bmi.n	13600 <_free_r+0xc4>
   135e2:	4419      	add	r1, r3
   135e4:	f107 0408 	add.w	r4, r7, #8
   135e8:	6883      	ldr	r3, [r0, #8]
   135ea:	42a3      	cmp	r3, r4
   135ec:	d070      	beq.n	136d0 <_free_r+0x194>
   135ee:	68c2      	ldr	r2, [r0, #12]
   135f0:	60da      	str	r2, [r3, #12]
   135f2:	6093      	str	r3, [r2, #8]
   135f4:	f041 0301 	orr.w	r3, r1, #1
   135f8:	606b      	str	r3, [r5, #4]
   135fa:	5069      	str	r1, [r5, r1]
   135fc:	e7d3      	b.n	135a6 <_free_r+0x6a>
   135fe:	4770      	bx	lr
   13600:	f041 0301 	orr.w	r3, r1, #1
   13604:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   13608:	f844 3c04 	str.w	r3, [r4, #-4]
   1360c:	6001      	str	r1, [r0, #0]
   1360e:	d3cd      	bcc.n	135ac <_free_r+0x70>
   13610:	f5b1 6f20 	cmp.w	r1, #2560	; 0xa00
   13614:	ea4f 2351 	mov.w	r3, r1, lsr #9
   13618:	d247      	bcs.n	136aa <_free_r+0x16e>
   1361a:	098b      	lsrs	r3, r1, #6
   1361c:	f103 0039 	add.w	r0, r3, #57	; 0x39
   13620:	f103 0238 	add.w	r2, r3, #56	; 0x38
   13624:	00c3      	lsls	r3, r0, #3
   13626:	18f8      	adds	r0, r7, r3
   13628:	58fb      	ldr	r3, [r7, r3]
   1362a:	3808      	subs	r0, #8
   1362c:	4298      	cmp	r0, r3
   1362e:	d058      	beq.n	136e2 <_free_r+0x1a6>
   13630:	685a      	ldr	r2, [r3, #4]
   13632:	f022 0203 	bic.w	r2, r2, #3
   13636:	428a      	cmp	r2, r1
   13638:	d902      	bls.n	13640 <_free_r+0x104>
   1363a:	689b      	ldr	r3, [r3, #8]
   1363c:	4298      	cmp	r0, r3
   1363e:	d1f7      	bne.n	13630 <_free_r+0xf4>
   13640:	68d8      	ldr	r0, [r3, #12]
   13642:	e9c5 3002 	strd	r3, r0, [r5, #8]
   13646:	6085      	str	r5, [r0, #8]
   13648:	4630      	mov	r0, r6
   1364a:	60dd      	str	r5, [r3, #12]
   1364c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   13650:	f7f9 b9f4 	b.w	ca3c <__malloc_unlock>
   13654:	18c2      	adds	r2, r0, r3
   13656:	6852      	ldr	r2, [r2, #4]
   13658:	07d2      	lsls	r2, r2, #31
   1365a:	d463      	bmi.n	13724 <_free_r+0x1e8>
   1365c:	440b      	add	r3, r1
   1365e:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
   13662:	60ca      	str	r2, [r1, #12]
   13664:	6091      	str	r1, [r2, #8]
   13666:	f043 0201 	orr.w	r2, r3, #1
   1366a:	606a      	str	r2, [r5, #4]
   1366c:	4630      	mov	r0, r6
   1366e:	50eb      	str	r3, [r5, r3]
   13670:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   13674:	f7f9 b9e2 	b.w	ca3c <__malloc_unlock>
   13678:	440b      	add	r3, r1
   1367a:	07d1      	lsls	r1, r2, #31
   1367c:	d407      	bmi.n	1368e <_free_r+0x152>
   1367e:	f854 2c08 	ldr.w	r2, [r4, #-8]
   13682:	1aad      	subs	r5, r5, r2
   13684:	4413      	add	r3, r2
   13686:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
   1368a:	60ca      	str	r2, [r1, #12]
   1368c:	6091      	str	r1, [r2, #8]
   1368e:	f043 0201 	orr.w	r2, r3, #1
   13692:	606a      	str	r2, [r5, #4]
   13694:	4a27      	ldr	r2, [pc, #156]	; (13734 <_free_r+0x1f8>)
   13696:	60bd      	str	r5, [r7, #8]
   13698:	6812      	ldr	r2, [r2, #0]
   1369a:	429a      	cmp	r2, r3
   1369c:	d898      	bhi.n	135d0 <_free_r+0x94>
   1369e:	4b26      	ldr	r3, [pc, #152]	; (13738 <_free_r+0x1fc>)
   136a0:	4630      	mov	r0, r6
   136a2:	6819      	ldr	r1, [r3, #0]
   136a4:	f7ff fefa 	bl	1349c <_malloc_trim_r>
   136a8:	e792      	b.n	135d0 <_free_r+0x94>
   136aa:	2b14      	cmp	r3, #20
   136ac:	d90a      	bls.n	136c4 <_free_r+0x188>
   136ae:	2b54      	cmp	r3, #84	; 0x54
   136b0:	d81f      	bhi.n	136f2 <_free_r+0x1b6>
   136b2:	0b0b      	lsrs	r3, r1, #12
   136b4:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   136b8:	f103 026e 	add.w	r2, r3, #110	; 0x6e
   136bc:	00c3      	lsls	r3, r0, #3
   136be:	e7b2      	b.n	13626 <_free_r+0xea>
   136c0:	4419      	add	r1, r3
   136c2:	e791      	b.n	135e8 <_free_r+0xac>
   136c4:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   136c8:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   136cc:	00c3      	lsls	r3, r0, #3
   136ce:	e7aa      	b.n	13626 <_free_r+0xea>
   136d0:	f041 0301 	orr.w	r3, r1, #1
   136d4:	e9c7 5504 	strd	r5, r5, [r7, #16]
   136d8:	e9c5 4402 	strd	r4, r4, [r5, #8]
   136dc:	606b      	str	r3, [r5, #4]
   136de:	5069      	str	r1, [r5, r1]
   136e0:	e776      	b.n	135d0 <_free_r+0x94>
   136e2:	2101      	movs	r1, #1
   136e4:	1092      	asrs	r2, r2, #2
   136e6:	fa01 f202 	lsl.w	r2, r1, r2
   136ea:	6879      	ldr	r1, [r7, #4]
   136ec:	430a      	orrs	r2, r1
   136ee:	607a      	str	r2, [r7, #4]
   136f0:	e7a7      	b.n	13642 <_free_r+0x106>
   136f2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   136f6:	d806      	bhi.n	13706 <_free_r+0x1ca>
   136f8:	0bcb      	lsrs	r3, r1, #15
   136fa:	f103 0078 	add.w	r0, r3, #120	; 0x78
   136fe:	f103 0277 	add.w	r2, r3, #119	; 0x77
   13702:	00c3      	lsls	r3, r0, #3
   13704:	e78f      	b.n	13626 <_free_r+0xea>
   13706:	f240 5254 	movw	r2, #1364	; 0x554
   1370a:	4293      	cmp	r3, r2
   1370c:	d806      	bhi.n	1371c <_free_r+0x1e0>
   1370e:	0c8b      	lsrs	r3, r1, #18
   13710:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   13714:	f103 027c 	add.w	r2, r3, #124	; 0x7c
   13718:	00c3      	lsls	r3, r0, #3
   1371a:	e784      	b.n	13626 <_free_r+0xea>
   1371c:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
   13720:	227e      	movs	r2, #126	; 0x7e
   13722:	e780      	b.n	13626 <_free_r+0xea>
   13724:	f041 0301 	orr.w	r3, r1, #1
   13728:	606b      	str	r3, [r5, #4]
   1372a:	6001      	str	r1, [r0, #0]
   1372c:	e750      	b.n	135d0 <_free_r+0x94>
   1372e:	bf00      	nop
   13730:	20000550 	.word	0x20000550
   13734:	2000095c 	.word	0x2000095c
   13738:	20001fa0 	.word	0x20001fa0

0001373c <_fwalk>:
   1373c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13740:	2600      	movs	r6, #0
   13742:	4688      	mov	r8, r1
   13744:	f500 7738 	add.w	r7, r0, #736	; 0x2e0
   13748:	e9d7 5401 	ldrd	r5, r4, [r7, #4]
   1374c:	3d01      	subs	r5, #1
   1374e:	d40e      	bmi.n	1376e <_fwalk+0x32>
   13750:	89a3      	ldrh	r3, [r4, #12]
   13752:	3d01      	subs	r5, #1
   13754:	2b01      	cmp	r3, #1
   13756:	d906      	bls.n	13766 <_fwalk+0x2a>
   13758:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   1375c:	3301      	adds	r3, #1
   1375e:	d002      	beq.n	13766 <_fwalk+0x2a>
   13760:	4620      	mov	r0, r4
   13762:	47c0      	blx	r8
   13764:	4306      	orrs	r6, r0
   13766:	1c6b      	adds	r3, r5, #1
   13768:	f104 0468 	add.w	r4, r4, #104	; 0x68
   1376c:	d1f0      	bne.n	13750 <_fwalk+0x14>
   1376e:	683f      	ldr	r7, [r7, #0]
   13770:	2f00      	cmp	r7, #0
   13772:	d1e9      	bne.n	13748 <_fwalk+0xc>
   13774:	4630      	mov	r0, r6
   13776:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1377a:	bf00      	nop

0001377c <_fwalk_reent>:
   1377c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   13780:	f04f 0900 	mov.w	r9, #0
   13784:	4607      	mov	r7, r0
   13786:	4688      	mov	r8, r1
   13788:	f500 7638 	add.w	r6, r0, #736	; 0x2e0
   1378c:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
   13790:	3d01      	subs	r5, #1
   13792:	d410      	bmi.n	137b6 <_fwalk_reent+0x3a>
   13794:	89a3      	ldrh	r3, [r4, #12]
   13796:	3d01      	subs	r5, #1
   13798:	2b01      	cmp	r3, #1
   1379a:	d908      	bls.n	137ae <_fwalk_reent+0x32>
   1379c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   137a0:	3301      	adds	r3, #1
   137a2:	d004      	beq.n	137ae <_fwalk_reent+0x32>
   137a4:	4621      	mov	r1, r4
   137a6:	4638      	mov	r0, r7
   137a8:	47c0      	blx	r8
   137aa:	ea49 0900 	orr.w	r9, r9, r0
   137ae:	1c6b      	adds	r3, r5, #1
   137b0:	f104 0468 	add.w	r4, r4, #104	; 0x68
   137b4:	d1ee      	bne.n	13794 <_fwalk_reent+0x18>
   137b6:	6836      	ldr	r6, [r6, #0]
   137b8:	2e00      	cmp	r6, #0
   137ba:	d1e7      	bne.n	1378c <_fwalk_reent+0x10>
   137bc:	4648      	mov	r0, r9
   137be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   137c2:	bf00      	nop

000137c4 <_setlocale_r>:
   137c4:	b142      	cbz	r2, 137d8 <_setlocale_r+0x14>
   137c6:	b510      	push	{r4, lr}
   137c8:	4610      	mov	r0, r2
   137ca:	490b      	ldr	r1, [pc, #44]	; (137f8 <_setlocale_r+0x34>)
   137cc:	4614      	mov	r4, r2
   137ce:	f7f9 fdd3 	bl	d378 <strcmp>
   137d2:	b918      	cbnz	r0, 137dc <_setlocale_r+0x18>
   137d4:	4809      	ldr	r0, [pc, #36]	; (137fc <_setlocale_r+0x38>)
   137d6:	bd10      	pop	{r4, pc}
   137d8:	4808      	ldr	r0, [pc, #32]	; (137fc <_setlocale_r+0x38>)
   137da:	4770      	bx	lr
   137dc:	4620      	mov	r0, r4
   137de:	4907      	ldr	r1, [pc, #28]	; (137fc <_setlocale_r+0x38>)
   137e0:	f7f9 fdca 	bl	d378 <strcmp>
   137e4:	2800      	cmp	r0, #0
   137e6:	d0f5      	beq.n	137d4 <_setlocale_r+0x10>
   137e8:	4620      	mov	r0, r4
   137ea:	4905      	ldr	r1, [pc, #20]	; (13800 <_setlocale_r+0x3c>)
   137ec:	f7f9 fdc4 	bl	d378 <strcmp>
   137f0:	2800      	cmp	r0, #0
   137f2:	d0ef      	beq.n	137d4 <_setlocale_r+0x10>
   137f4:	2000      	movs	r0, #0
   137f6:	bd10      	pop	{r4, pc}
   137f8:	0001a0e0 	.word	0x0001a0e0
   137fc:	0001a0dc 	.word	0x0001a0dc
   13800:	00019f80 	.word	0x00019f80

00013804 <__locale_mb_cur_max>:
   13804:	4b01      	ldr	r3, [pc, #4]	; (1380c <__locale_mb_cur_max+0x8>)
   13806:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   1380a:	4770      	bx	lr
   1380c:	20000964 	.word	0x20000964

00013810 <setlocale>:
   13810:	b141      	cbz	r1, 13824 <setlocale+0x14>
   13812:	b510      	push	{r4, lr}
   13814:	4608      	mov	r0, r1
   13816:	460c      	mov	r4, r1
   13818:	490a      	ldr	r1, [pc, #40]	; (13844 <setlocale+0x34>)
   1381a:	f7f9 fdad 	bl	d378 <strcmp>
   1381e:	b918      	cbnz	r0, 13828 <setlocale+0x18>
   13820:	4809      	ldr	r0, [pc, #36]	; (13848 <setlocale+0x38>)
   13822:	bd10      	pop	{r4, pc}
   13824:	4808      	ldr	r0, [pc, #32]	; (13848 <setlocale+0x38>)
   13826:	4770      	bx	lr
   13828:	4620      	mov	r0, r4
   1382a:	4907      	ldr	r1, [pc, #28]	; (13848 <setlocale+0x38>)
   1382c:	f7f9 fda4 	bl	d378 <strcmp>
   13830:	2800      	cmp	r0, #0
   13832:	d0f5      	beq.n	13820 <setlocale+0x10>
   13834:	4620      	mov	r0, r4
   13836:	4905      	ldr	r1, [pc, #20]	; (1384c <setlocale+0x3c>)
   13838:	f7f9 fd9e 	bl	d378 <strcmp>
   1383c:	2800      	cmp	r0, #0
   1383e:	d0ef      	beq.n	13820 <setlocale+0x10>
   13840:	2000      	movs	r0, #0
   13842:	bd10      	pop	{r4, pc}
   13844:	0001a0e0 	.word	0x0001a0e0
   13848:	0001a0dc 	.word	0x0001a0dc
   1384c:	00019f80 	.word	0x00019f80

00013850 <__localeconv_l>:
   13850:	30f0      	adds	r0, #240	; 0xf0
   13852:	4770      	bx	lr

00013854 <_localeconv_r>:
   13854:	4800      	ldr	r0, [pc, #0]	; (13858 <_localeconv_r+0x4>)
   13856:	4770      	bx	lr
   13858:	20000a54 	.word	0x20000a54

0001385c <localeconv>:
   1385c:	4800      	ldr	r0, [pc, #0]	; (13860 <localeconv+0x4>)
   1385e:	4770      	bx	lr
   13860:	20000a54 	.word	0x20000a54

00013864 <__smakebuf_r>:
   13864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13868:	898b      	ldrh	r3, [r1, #12]
   1386a:	460c      	mov	r4, r1
   1386c:	0799      	lsls	r1, r3, #30
   1386e:	b096      	sub	sp, #88	; 0x58
   13870:	d508      	bpl.n	13884 <__smakebuf_r+0x20>
   13872:	2201      	movs	r2, #1
   13874:	f104 0343 	add.w	r3, r4, #67	; 0x43
   13878:	e9c4 3204 	strd	r3, r2, [r4, #16]
   1387c:	6023      	str	r3, [r4, #0]
   1387e:	b016      	add	sp, #88	; 0x58
   13880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13884:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   13888:	4606      	mov	r6, r0
   1388a:	2900      	cmp	r1, #0
   1388c:	db27      	blt.n	138de <__smakebuf_r+0x7a>
   1388e:	466a      	mov	r2, sp
   13890:	f001 fe84 	bl	1559c <_fstat_r>
   13894:	2800      	cmp	r0, #0
   13896:	db21      	blt.n	138dc <__smakebuf_r+0x78>
   13898:	9d01      	ldr	r5, [sp, #4]
   1389a:	f44f 6880 	mov.w	r8, #1024	; 0x400
   1389e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
   138a2:	f5a5 5500 	sub.w	r5, r5, #8192	; 0x2000
   138a6:	fab5 f585 	clz	r5, r5
   138aa:	f44f 6700 	mov.w	r7, #2048	; 0x800
   138ae:	096d      	lsrs	r5, r5, #5
   138b0:	4641      	mov	r1, r8
   138b2:	4630      	mov	r0, r6
   138b4:	f7f8 fc50 	bl	c158 <_malloc_r>
   138b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   138bc:	b1f0      	cbz	r0, 138fc <__smakebuf_r+0x98>
   138be:	4a20      	ldr	r2, [pc, #128]	; (13940 <__smakebuf_r+0xdc>)
   138c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   138c4:	63f2      	str	r2, [r6, #60]	; 0x3c
   138c6:	f8c4 8014 	str.w	r8, [r4, #20]
   138ca:	81a3      	strh	r3, [r4, #12]
   138cc:	6020      	str	r0, [r4, #0]
   138ce:	6120      	str	r0, [r4, #16]
   138d0:	bb35      	cbnz	r5, 13920 <__smakebuf_r+0xbc>
   138d2:	433b      	orrs	r3, r7
   138d4:	81a3      	strh	r3, [r4, #12]
   138d6:	b016      	add	sp, #88	; 0x58
   138d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   138dc:	89a3      	ldrh	r3, [r4, #12]
   138de:	f013 0580 	ands.w	r5, r3, #128	; 0x80
   138e2:	d019      	beq.n	13918 <__smakebuf_r+0xb4>
   138e4:	f04f 0840 	mov.w	r8, #64	; 0x40
   138e8:	4630      	mov	r0, r6
   138ea:	4641      	mov	r1, r8
   138ec:	2500      	movs	r5, #0
   138ee:	f7f8 fc33 	bl	c158 <_malloc_r>
   138f2:	462f      	mov	r7, r5
   138f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   138f8:	2800      	cmp	r0, #0
   138fa:	d1e0      	bne.n	138be <__smakebuf_r+0x5a>
   138fc:	059a      	lsls	r2, r3, #22
   138fe:	d4be      	bmi.n	1387e <__smakebuf_r+0x1a>
   13900:	2101      	movs	r1, #1
   13902:	f023 0303 	bic.w	r3, r3, #3
   13906:	f104 0243 	add.w	r2, r4, #67	; 0x43
   1390a:	f043 0302 	orr.w	r3, r3, #2
   1390e:	e9c4 2104 	strd	r2, r1, [r4, #16]
   13912:	81a3      	strh	r3, [r4, #12]
   13914:	6022      	str	r2, [r4, #0]
   13916:	e7b2      	b.n	1387e <__smakebuf_r+0x1a>
   13918:	f44f 6880 	mov.w	r8, #1024	; 0x400
   1391c:	462f      	mov	r7, r5
   1391e:	e7c7      	b.n	138b0 <__smakebuf_r+0x4c>
   13920:	4630      	mov	r0, r6
   13922:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   13926:	f001 fe4d 	bl	155c4 <_isatty_r>
   1392a:	b910      	cbnz	r0, 13932 <__smakebuf_r+0xce>
   1392c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   13930:	e7cf      	b.n	138d2 <__smakebuf_r+0x6e>
   13932:	89a3      	ldrh	r3, [r4, #12]
   13934:	f023 0303 	bic.w	r3, r3, #3
   13938:	f043 0301 	orr.w	r3, r3, #1
   1393c:	b21b      	sxth	r3, r3
   1393e:	e7c8      	b.n	138d2 <__smakebuf_r+0x6e>
   13940:	00013021 	.word	0x00013021

00013944 <__swhatbuf_r>:
   13944:	b570      	push	{r4, r5, r6, lr}
   13946:	460c      	mov	r4, r1
   13948:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1394c:	4615      	mov	r5, r2
   1394e:	2900      	cmp	r1, #0
   13950:	461e      	mov	r6, r3
   13952:	b096      	sub	sp, #88	; 0x58
   13954:	db14      	blt.n	13980 <__swhatbuf_r+0x3c>
   13956:	466a      	mov	r2, sp
   13958:	f001 fe20 	bl	1559c <_fstat_r>
   1395c:	2800      	cmp	r0, #0
   1395e:	db0f      	blt.n	13980 <__swhatbuf_r+0x3c>
   13960:	9a01      	ldr	r2, [sp, #4]
   13962:	f44f 6380 	mov.w	r3, #1024	; 0x400
   13966:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   1396a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   1396e:	fab2 f282 	clz	r2, r2
   13972:	f44f 6000 	mov.w	r0, #2048	; 0x800
   13976:	0952      	lsrs	r2, r2, #5
   13978:	6032      	str	r2, [r6, #0]
   1397a:	602b      	str	r3, [r5, #0]
   1397c:	b016      	add	sp, #88	; 0x58
   1397e:	bd70      	pop	{r4, r5, r6, pc}
   13980:	2300      	movs	r3, #0
   13982:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   13986:	6033      	str	r3, [r6, #0]
   13988:	f011 0080 	ands.w	r0, r1, #128	; 0x80
   1398c:	d004      	beq.n	13998 <__swhatbuf_r+0x54>
   1398e:	2240      	movs	r2, #64	; 0x40
   13990:	4618      	mov	r0, r3
   13992:	602a      	str	r2, [r5, #0]
   13994:	b016      	add	sp, #88	; 0x58
   13996:	bd70      	pop	{r4, r5, r6, pc}
   13998:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1399c:	602b      	str	r3, [r5, #0]
   1399e:	b016      	add	sp, #88	; 0x58
   139a0:	bd70      	pop	{r4, r5, r6, pc}
   139a2:	bf00      	nop

000139a4 <_mbtowc_r>:
   139a4:	b410      	push	{r4}
   139a6:	4c03      	ldr	r4, [pc, #12]	; (139b4 <_mbtowc_r+0x10>)
   139a8:	f8d4 40e4 	ldr.w	r4, [r4, #228]	; 0xe4
   139ac:	46a4      	mov	ip, r4
   139ae:	bc10      	pop	{r4}
   139b0:	4760      	bx	ip
   139b2:	bf00      	nop
   139b4:	20000964 	.word	0x20000964

000139b8 <__ascii_mbtowc>:
   139b8:	b082      	sub	sp, #8
   139ba:	b149      	cbz	r1, 139d0 <__ascii_mbtowc+0x18>
   139bc:	b15a      	cbz	r2, 139d6 <__ascii_mbtowc+0x1e>
   139be:	b16b      	cbz	r3, 139dc <__ascii_mbtowc+0x24>
   139c0:	7813      	ldrb	r3, [r2, #0]
   139c2:	600b      	str	r3, [r1, #0]
   139c4:	7812      	ldrb	r2, [r2, #0]
   139c6:	1e10      	subs	r0, r2, #0
   139c8:	bf18      	it	ne
   139ca:	2001      	movne	r0, #1
   139cc:	b002      	add	sp, #8
   139ce:	4770      	bx	lr
   139d0:	a901      	add	r1, sp, #4
   139d2:	2a00      	cmp	r2, #0
   139d4:	d1f3      	bne.n	139be <__ascii_mbtowc+0x6>
   139d6:	4610      	mov	r0, r2
   139d8:	b002      	add	sp, #8
   139da:	4770      	bx	lr
   139dc:	f06f 0001 	mvn.w	r0, #1
   139e0:	e7f4      	b.n	139cc <__ascii_mbtowc+0x14>
   139e2:	bf00      	nop

000139e4 <_Balloc>:
   139e4:	b538      	push	{r3, r4, r5, lr}
   139e6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   139e8:	4605      	mov	r5, r0
   139ea:	460c      	mov	r4, r1
   139ec:	b14b      	cbz	r3, 13a02 <_Balloc+0x1e>
   139ee:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   139f2:	b180      	cbz	r0, 13a16 <_Balloc+0x32>
   139f4:	6802      	ldr	r2, [r0, #0]
   139f6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   139fa:	2300      	movs	r3, #0
   139fc:	e9c0 3303 	strd	r3, r3, [r0, #12]
   13a00:	bd38      	pop	{r3, r4, r5, pc}
   13a02:	2221      	movs	r2, #33	; 0x21
   13a04:	2104      	movs	r1, #4
   13a06:	f001 fd07 	bl	15418 <_calloc_r>
   13a0a:	4603      	mov	r3, r0
   13a0c:	64e8      	str	r0, [r5, #76]	; 0x4c
   13a0e:	2800      	cmp	r0, #0
   13a10:	d1ed      	bne.n	139ee <_Balloc+0xa>
   13a12:	2000      	movs	r0, #0
   13a14:	bd38      	pop	{r3, r4, r5, pc}
   13a16:	2101      	movs	r1, #1
   13a18:	4628      	mov	r0, r5
   13a1a:	fa01 f504 	lsl.w	r5, r1, r4
   13a1e:	1d6a      	adds	r2, r5, #5
   13a20:	0092      	lsls	r2, r2, #2
   13a22:	f001 fcf9 	bl	15418 <_calloc_r>
   13a26:	2800      	cmp	r0, #0
   13a28:	d0f3      	beq.n	13a12 <_Balloc+0x2e>
   13a2a:	e9c0 4501 	strd	r4, r5, [r0, #4]
   13a2e:	e7e4      	b.n	139fa <_Balloc+0x16>

00013a30 <_Bfree>:
   13a30:	b131      	cbz	r1, 13a40 <_Bfree+0x10>
   13a32:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   13a34:	684a      	ldr	r2, [r1, #4]
   13a36:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   13a3a:	6008      	str	r0, [r1, #0]
   13a3c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   13a40:	4770      	bx	lr
   13a42:	bf00      	nop

00013a44 <__multadd>:
   13a44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13a48:	f04f 0e00 	mov.w	lr, #0
   13a4c:	460e      	mov	r6, r1
   13a4e:	461c      	mov	r4, r3
   13a50:	690d      	ldr	r5, [r1, #16]
   13a52:	4607      	mov	r7, r0
   13a54:	f101 0014 	add.w	r0, r1, #20
   13a58:	6801      	ldr	r1, [r0, #0]
   13a5a:	f10e 0e01 	add.w	lr, lr, #1
   13a5e:	b28b      	uxth	r3, r1
   13a60:	fb02 4303 	mla	r3, r2, r3, r4
   13a64:	0c09      	lsrs	r1, r1, #16
   13a66:	ea4f 4c13 	mov.w	ip, r3, lsr #16
   13a6a:	fb02 cc01 	mla	ip, r2, r1, ip
   13a6e:	b29b      	uxth	r3, r3
   13a70:	eb03 430c 	add.w	r3, r3, ip, lsl #16
   13a74:	4575      	cmp	r5, lr
   13a76:	f840 3b04 	str.w	r3, [r0], #4
   13a7a:	ea4f 441c 	mov.w	r4, ip, lsr #16
   13a7e:	dceb      	bgt.n	13a58 <__multadd+0x14>
   13a80:	b13c      	cbz	r4, 13a92 <__multadd+0x4e>
   13a82:	68b3      	ldr	r3, [r6, #8]
   13a84:	42ab      	cmp	r3, r5
   13a86:	dd07      	ble.n	13a98 <__multadd+0x54>
   13a88:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   13a8c:	3501      	adds	r5, #1
   13a8e:	615c      	str	r4, [r3, #20]
   13a90:	6135      	str	r5, [r6, #16]
   13a92:	4630      	mov	r0, r6
   13a94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13a98:	6871      	ldr	r1, [r6, #4]
   13a9a:	4638      	mov	r0, r7
   13a9c:	3101      	adds	r1, #1
   13a9e:	f7ff ffa1 	bl	139e4 <_Balloc>
   13aa2:	4680      	mov	r8, r0
   13aa4:	b1a8      	cbz	r0, 13ad2 <__multadd+0x8e>
   13aa6:	6932      	ldr	r2, [r6, #16]
   13aa8:	f106 010c 	add.w	r1, r6, #12
   13aac:	3202      	adds	r2, #2
   13aae:	0092      	lsls	r2, r2, #2
   13ab0:	300c      	adds	r0, #12
   13ab2:	f7f8 fe79 	bl	c7a8 <memcpy>
   13ab6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   13ab8:	6872      	ldr	r2, [r6, #4]
   13aba:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   13abe:	6031      	str	r1, [r6, #0]
   13ac0:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   13ac4:	4646      	mov	r6, r8
   13ac6:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   13aca:	3501      	adds	r5, #1
   13acc:	615c      	str	r4, [r3, #20]
   13ace:	6135      	str	r5, [r6, #16]
   13ad0:	e7df      	b.n	13a92 <__multadd+0x4e>
   13ad2:	4602      	mov	r2, r0
   13ad4:	21b5      	movs	r1, #181	; 0xb5
   13ad6:	4b02      	ldr	r3, [pc, #8]	; (13ae0 <__multadd+0x9c>)
   13ad8:	4802      	ldr	r0, [pc, #8]	; (13ae4 <__multadd+0xa0>)
   13ada:	f7f7 fff9 	bl	bad0 <__assert_func>
   13ade:	bf00      	nop
   13ae0:	0001a06c 	.word	0x0001a06c
   13ae4:	0001a0e8 	.word	0x0001a0e8

00013ae8 <__s2b>:
   13ae8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   13aec:	461e      	mov	r6, r3
   13aee:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 13b90 <__s2b+0xa8>
   13af2:	4617      	mov	r7, r2
   13af4:	f103 0208 	add.w	r2, r3, #8
   13af8:	fb8c 3c02 	smull	r3, ip, ip, r2
   13afc:	2e09      	cmp	r6, #9
   13afe:	ea4f 73e2 	mov.w	r3, r2, asr #31
   13b02:	4605      	mov	r5, r0
   13b04:	460c      	mov	r4, r1
   13b06:	ebc3 036c 	rsb	r3, r3, ip, asr #1
   13b0a:	dd39      	ble.n	13b80 <__s2b+0x98>
   13b0c:	f04f 0c01 	mov.w	ip, #1
   13b10:	2100      	movs	r1, #0
   13b12:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
   13b16:	4563      	cmp	r3, ip
   13b18:	f101 0101 	add.w	r1, r1, #1
   13b1c:	dcf9      	bgt.n	13b12 <__s2b+0x2a>
   13b1e:	4628      	mov	r0, r5
   13b20:	f7ff ff60 	bl	139e4 <_Balloc>
   13b24:	4601      	mov	r1, r0
   13b26:	b368      	cbz	r0, 13b84 <__s2b+0x9c>
   13b28:	9b08      	ldr	r3, [sp, #32]
   13b2a:	2f09      	cmp	r7, #9
   13b2c:	6143      	str	r3, [r0, #20]
   13b2e:	f04f 0301 	mov.w	r3, #1
   13b32:	6103      	str	r3, [r0, #16]
   13b34:	dc12      	bgt.n	13b5c <__s2b+0x74>
   13b36:	2709      	movs	r7, #9
   13b38:	340a      	adds	r4, #10
   13b3a:	42be      	cmp	r6, r7
   13b3c:	dd0b      	ble.n	13b56 <__s2b+0x6e>
   13b3e:	1bf6      	subs	r6, r6, r7
   13b40:	4426      	add	r6, r4
   13b42:	f814 3b01 	ldrb.w	r3, [r4], #1
   13b46:	220a      	movs	r2, #10
   13b48:	4628      	mov	r0, r5
   13b4a:	3b30      	subs	r3, #48	; 0x30
   13b4c:	f7ff ff7a 	bl	13a44 <__multadd>
   13b50:	42a6      	cmp	r6, r4
   13b52:	4601      	mov	r1, r0
   13b54:	d1f5      	bne.n	13b42 <__s2b+0x5a>
   13b56:	4608      	mov	r0, r1
   13b58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   13b5c:	f104 0909 	add.w	r9, r4, #9
   13b60:	46c8      	mov	r8, r9
   13b62:	443c      	add	r4, r7
   13b64:	f818 3b01 	ldrb.w	r3, [r8], #1
   13b68:	220a      	movs	r2, #10
   13b6a:	4628      	mov	r0, r5
   13b6c:	3b30      	subs	r3, #48	; 0x30
   13b6e:	f7ff ff69 	bl	13a44 <__multadd>
   13b72:	45a0      	cmp	r8, r4
   13b74:	4601      	mov	r1, r0
   13b76:	d1f5      	bne.n	13b64 <__s2b+0x7c>
   13b78:	f1a7 0408 	sub.w	r4, r7, #8
   13b7c:	444c      	add	r4, r9
   13b7e:	e7dc      	b.n	13b3a <__s2b+0x52>
   13b80:	2100      	movs	r1, #0
   13b82:	e7cc      	b.n	13b1e <__s2b+0x36>
   13b84:	4602      	mov	r2, r0
   13b86:	21ce      	movs	r1, #206	; 0xce
   13b88:	4b02      	ldr	r3, [pc, #8]	; (13b94 <__s2b+0xac>)
   13b8a:	4803      	ldr	r0, [pc, #12]	; (13b98 <__s2b+0xb0>)
   13b8c:	f7f7 ffa0 	bl	bad0 <__assert_func>
   13b90:	38e38e39 	.word	0x38e38e39
   13b94:	0001a06c 	.word	0x0001a06c
   13b98:	0001a0e8 	.word	0x0001a0e8

00013b9c <__hi0bits>:
   13b9c:	0c02      	lsrs	r2, r0, #16
   13b9e:	0412      	lsls	r2, r2, #16
   13ba0:	4603      	mov	r3, r0
   13ba2:	b9ca      	cbnz	r2, 13bd8 <__hi0bits+0x3c>
   13ba4:	2010      	movs	r0, #16
   13ba6:	4083      	lsls	r3, r0
   13ba8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   13bac:	bf04      	itt	eq
   13bae:	021b      	lsleq	r3, r3, #8
   13bb0:	3008      	addeq	r0, #8
   13bb2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   13bb6:	bf04      	itt	eq
   13bb8:	011b      	lsleq	r3, r3, #4
   13bba:	3004      	addeq	r0, #4
   13bbc:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   13bc0:	bf04      	itt	eq
   13bc2:	009b      	lsleq	r3, r3, #2
   13bc4:	3002      	addeq	r0, #2
   13bc6:	2b00      	cmp	r3, #0
   13bc8:	db05      	blt.n	13bd6 <__hi0bits+0x3a>
   13bca:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
   13bce:	f100 0001 	add.w	r0, r0, #1
   13bd2:	bf08      	it	eq
   13bd4:	2020      	moveq	r0, #32
   13bd6:	4770      	bx	lr
   13bd8:	2000      	movs	r0, #0
   13bda:	e7e5      	b.n	13ba8 <__hi0bits+0xc>

00013bdc <__lo0bits>:
   13bdc:	6803      	ldr	r3, [r0, #0]
   13bde:	4602      	mov	r2, r0
   13be0:	f013 0007 	ands.w	r0, r3, #7
   13be4:	d009      	beq.n	13bfa <__lo0bits+0x1e>
   13be6:	07d9      	lsls	r1, r3, #31
   13be8:	d41f      	bmi.n	13c2a <__lo0bits+0x4e>
   13bea:	0798      	lsls	r0, r3, #30
   13bec:	bf4b      	itete	mi
   13bee:	085b      	lsrmi	r3, r3, #1
   13bf0:	089b      	lsrpl	r3, r3, #2
   13bf2:	2001      	movmi	r0, #1
   13bf4:	2002      	movpl	r0, #2
   13bf6:	6013      	str	r3, [r2, #0]
   13bf8:	4770      	bx	lr
   13bfa:	b299      	uxth	r1, r3
   13bfc:	b909      	cbnz	r1, 13c02 <__lo0bits+0x26>
   13bfe:	2010      	movs	r0, #16
   13c00:	40c3      	lsrs	r3, r0
   13c02:	b2d9      	uxtb	r1, r3
   13c04:	b909      	cbnz	r1, 13c0a <__lo0bits+0x2e>
   13c06:	3008      	adds	r0, #8
   13c08:	0a1b      	lsrs	r3, r3, #8
   13c0a:	0719      	lsls	r1, r3, #28
   13c0c:	bf04      	itt	eq
   13c0e:	091b      	lsreq	r3, r3, #4
   13c10:	3004      	addeq	r0, #4
   13c12:	0799      	lsls	r1, r3, #30
   13c14:	bf04      	itt	eq
   13c16:	089b      	lsreq	r3, r3, #2
   13c18:	3002      	addeq	r0, #2
   13c1a:	07d9      	lsls	r1, r3, #31
   13c1c:	d403      	bmi.n	13c26 <__lo0bits+0x4a>
   13c1e:	085b      	lsrs	r3, r3, #1
   13c20:	f100 0001 	add.w	r0, r0, #1
   13c24:	d003      	beq.n	13c2e <__lo0bits+0x52>
   13c26:	6013      	str	r3, [r2, #0]
   13c28:	4770      	bx	lr
   13c2a:	2000      	movs	r0, #0
   13c2c:	4770      	bx	lr
   13c2e:	2020      	movs	r0, #32
   13c30:	4770      	bx	lr
   13c32:	bf00      	nop

00013c34 <__i2b>:
   13c34:	b538      	push	{r3, r4, r5, lr}
   13c36:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   13c38:	4604      	mov	r4, r0
   13c3a:	460d      	mov	r5, r1
   13c3c:	b14b      	cbz	r3, 13c52 <__i2b+0x1e>
   13c3e:	6858      	ldr	r0, [r3, #4]
   13c40:	b1b0      	cbz	r0, 13c70 <__i2b+0x3c>
   13c42:	6802      	ldr	r2, [r0, #0]
   13c44:	605a      	str	r2, [r3, #4]
   13c46:	2200      	movs	r2, #0
   13c48:	2301      	movs	r3, #1
   13c4a:	6145      	str	r5, [r0, #20]
   13c4c:	e9c0 2303 	strd	r2, r3, [r0, #12]
   13c50:	bd38      	pop	{r3, r4, r5, pc}
   13c52:	2221      	movs	r2, #33	; 0x21
   13c54:	2104      	movs	r1, #4
   13c56:	f001 fbdf 	bl	15418 <_calloc_r>
   13c5a:	4603      	mov	r3, r0
   13c5c:	64e0      	str	r0, [r4, #76]	; 0x4c
   13c5e:	2800      	cmp	r0, #0
   13c60:	d1ed      	bne.n	13c3e <__i2b+0xa>
   13c62:	2200      	movs	r2, #0
   13c64:	f44f 71a0 	mov.w	r1, #320	; 0x140
   13c68:	4b07      	ldr	r3, [pc, #28]	; (13c88 <__i2b+0x54>)
   13c6a:	4808      	ldr	r0, [pc, #32]	; (13c8c <__i2b+0x58>)
   13c6c:	f7f7 ff30 	bl	bad0 <__assert_func>
   13c70:	221c      	movs	r2, #28
   13c72:	2101      	movs	r1, #1
   13c74:	4620      	mov	r0, r4
   13c76:	f001 fbcf 	bl	15418 <_calloc_r>
   13c7a:	2800      	cmp	r0, #0
   13c7c:	d0f1      	beq.n	13c62 <__i2b+0x2e>
   13c7e:	2201      	movs	r2, #1
   13c80:	2302      	movs	r3, #2
   13c82:	e9c0 2301 	strd	r2, r3, [r0, #4]
   13c86:	e7de      	b.n	13c46 <__i2b+0x12>
   13c88:	0001a06c 	.word	0x0001a06c
   13c8c:	0001a0e8 	.word	0x0001a0e8

00013c90 <__multiply>:
   13c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c94:	690e      	ldr	r6, [r1, #16]
   13c96:	6915      	ldr	r5, [r2, #16]
   13c98:	4688      	mov	r8, r1
   13c9a:	42ae      	cmp	r6, r5
   13c9c:	4614      	mov	r4, r2
   13c9e:	b085      	sub	sp, #20
   13ca0:	db05      	blt.n	13cae <__multiply+0x1e>
   13ca2:	462a      	mov	r2, r5
   13ca4:	4623      	mov	r3, r4
   13ca6:	4635      	mov	r5, r6
   13ca8:	460c      	mov	r4, r1
   13caa:	4616      	mov	r6, r2
   13cac:	4698      	mov	r8, r3
   13cae:	68a3      	ldr	r3, [r4, #8]
   13cb0:	6861      	ldr	r1, [r4, #4]
   13cb2:	19af      	adds	r7, r5, r6
   13cb4:	42bb      	cmp	r3, r7
   13cb6:	bfb8      	it	lt
   13cb8:	3101      	addlt	r1, #1
   13cba:	f7ff fe93 	bl	139e4 <_Balloc>
   13cbe:	9001      	str	r0, [sp, #4]
   13cc0:	2800      	cmp	r0, #0
   13cc2:	f000 8087 	beq.w	13dd4 <__multiply+0x144>
   13cc6:	9b01      	ldr	r3, [sp, #4]
   13cc8:	f103 0914 	add.w	r9, r3, #20
   13ccc:	eb09 0a87 	add.w	sl, r9, r7, lsl #2
   13cd0:	45d1      	cmp	r9, sl
   13cd2:	d205      	bcs.n	13ce0 <__multiply+0x50>
   13cd4:	464b      	mov	r3, r9
   13cd6:	2200      	movs	r2, #0
   13cd8:	f843 2b04 	str.w	r2, [r3], #4
   13cdc:	459a      	cmp	sl, r3
   13cde:	d8fb      	bhi.n	13cd8 <__multiply+0x48>
   13ce0:	f108 0814 	add.w	r8, r8, #20
   13ce4:	eb08 0b86 	add.w	fp, r8, r6, lsl #2
   13ce8:	f104 0314 	add.w	r3, r4, #20
   13cec:	45d8      	cmp	r8, fp
   13cee:	461a      	mov	r2, r3
   13cf0:	eb03 0585 	add.w	r5, r3, r5, lsl #2
   13cf4:	d25f      	bcs.n	13db6 <__multiply+0x126>
   13cf6:	1b2b      	subs	r3, r5, r4
   13cf8:	3b15      	subs	r3, #21
   13cfa:	f023 0303 	bic.w	r3, r3, #3
   13cfe:	3304      	adds	r3, #4
   13d00:	3415      	adds	r4, #21
   13d02:	42a5      	cmp	r5, r4
   13d04:	bf38      	it	cc
   13d06:	2304      	movcc	r3, #4
   13d08:	e9cd a702 	strd	sl, r7, [sp, #8]
   13d0c:	46ac      	mov	ip, r5
   13d0e:	461f      	mov	r7, r3
   13d10:	4692      	mov	sl, r2
   13d12:	e005      	b.n	13d20 <__multiply+0x90>
   13d14:	0c00      	lsrs	r0, r0, #16
   13d16:	d129      	bne.n	13d6c <__multiply+0xdc>
   13d18:	45c3      	cmp	fp, r8
   13d1a:	f109 0904 	add.w	r9, r9, #4
   13d1e:	d948      	bls.n	13db2 <__multiply+0x122>
   13d20:	f858 0b04 	ldr.w	r0, [r8], #4
   13d24:	b285      	uxth	r5, r0
   13d26:	2d00      	cmp	r5, #0
   13d28:	d0f4      	beq.n	13d14 <__multiply+0x84>
   13d2a:	4656      	mov	r6, sl
   13d2c:	464c      	mov	r4, r9
   13d2e:	2300      	movs	r3, #0
   13d30:	f856 0b04 	ldr.w	r0, [r6], #4
   13d34:	6821      	ldr	r1, [r4, #0]
   13d36:	b282      	uxth	r2, r0
   13d38:	fa1f fe81 	uxth.w	lr, r1
   13d3c:	fb05 ee02 	mla	lr, r5, r2, lr
   13d40:	0c00      	lsrs	r0, r0, #16
   13d42:	0c0a      	lsrs	r2, r1, #16
   13d44:	fb05 2200 	mla	r2, r5, r0, r2
   13d48:	4473      	add	r3, lr
   13d4a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   13d4e:	b29b      	uxth	r3, r3
   13d50:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   13d54:	45b4      	cmp	ip, r6
   13d56:	f844 3b04 	str.w	r3, [r4], #4
   13d5a:	ea4f 4312 	mov.w	r3, r2, lsr #16
   13d5e:	d8e7      	bhi.n	13d30 <__multiply+0xa0>
   13d60:	f849 3007 	str.w	r3, [r9, r7]
   13d64:	f858 0c04 	ldr.w	r0, [r8, #-4]
   13d68:	0c00      	lsrs	r0, r0, #16
   13d6a:	d0d5      	beq.n	13d18 <__multiply+0x88>
   13d6c:	f8d9 3000 	ldr.w	r3, [r9]
   13d70:	4654      	mov	r4, sl
   13d72:	4619      	mov	r1, r3
   13d74:	464d      	mov	r5, r9
   13d76:	2200      	movs	r2, #0
   13d78:	8826      	ldrh	r6, [r4, #0]
   13d7a:	0c09      	lsrs	r1, r1, #16
   13d7c:	fb00 1106 	mla	r1, r0, r6, r1
   13d80:	b29b      	uxth	r3, r3
   13d82:	440a      	add	r2, r1
   13d84:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   13d88:	f845 3b04 	str.w	r3, [r5], #4
   13d8c:	f854 6b04 	ldr.w	r6, [r4], #4
   13d90:	6829      	ldr	r1, [r5, #0]
   13d92:	0c36      	lsrs	r6, r6, #16
   13d94:	b28b      	uxth	r3, r1
   13d96:	fb00 3306 	mla	r3, r0, r6, r3
   13d9a:	45a4      	cmp	ip, r4
   13d9c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   13da0:	ea4f 4213 	mov.w	r2, r3, lsr #16
   13da4:	d8e8      	bhi.n	13d78 <__multiply+0xe8>
   13da6:	45c3      	cmp	fp, r8
   13da8:	f849 3007 	str.w	r3, [r9, r7]
   13dac:	f109 0904 	add.w	r9, r9, #4
   13db0:	d8b6      	bhi.n	13d20 <__multiply+0x90>
   13db2:	e9dd a702 	ldrd	sl, r7, [sp, #8]
   13db6:	2f00      	cmp	r7, #0
   13db8:	dc02      	bgt.n	13dc0 <__multiply+0x130>
   13dba:	e005      	b.n	13dc8 <__multiply+0x138>
   13dbc:	3f01      	subs	r7, #1
   13dbe:	d003      	beq.n	13dc8 <__multiply+0x138>
   13dc0:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   13dc4:	2b00      	cmp	r3, #0
   13dc6:	d0f9      	beq.n	13dbc <__multiply+0x12c>
   13dc8:	9b01      	ldr	r3, [sp, #4]
   13dca:	4618      	mov	r0, r3
   13dcc:	611f      	str	r7, [r3, #16]
   13dce:	b005      	add	sp, #20
   13dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dd4:	4602      	mov	r2, r0
   13dd6:	f240 115d 	movw	r1, #349	; 0x15d
   13dda:	4b02      	ldr	r3, [pc, #8]	; (13de4 <__multiply+0x154>)
   13ddc:	4802      	ldr	r0, [pc, #8]	; (13de8 <__multiply+0x158>)
   13dde:	f7f7 fe77 	bl	bad0 <__assert_func>
   13de2:	bf00      	nop
   13de4:	0001a06c 	.word	0x0001a06c
   13de8:	0001a0e8 	.word	0x0001a0e8

00013dec <__pow5mult>:
   13dec:	f012 0303 	ands.w	r3, r2, #3
   13df0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13df4:	4614      	mov	r4, r2
   13df6:	4607      	mov	r7, r0
   13df8:	d12e      	bne.n	13e58 <__pow5mult+0x6c>
   13dfa:	460e      	mov	r6, r1
   13dfc:	10a4      	asrs	r4, r4, #2
   13dfe:	d01c      	beq.n	13e3a <__pow5mult+0x4e>
   13e00:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   13e02:	b395      	cbz	r5, 13e6a <__pow5mult+0x7e>
   13e04:	07e3      	lsls	r3, r4, #31
   13e06:	f04f 0800 	mov.w	r8, #0
   13e0a:	d406      	bmi.n	13e1a <__pow5mult+0x2e>
   13e0c:	1064      	asrs	r4, r4, #1
   13e0e:	d014      	beq.n	13e3a <__pow5mult+0x4e>
   13e10:	6828      	ldr	r0, [r5, #0]
   13e12:	b1a8      	cbz	r0, 13e40 <__pow5mult+0x54>
   13e14:	4605      	mov	r5, r0
   13e16:	07e3      	lsls	r3, r4, #31
   13e18:	d5f8      	bpl.n	13e0c <__pow5mult+0x20>
   13e1a:	462a      	mov	r2, r5
   13e1c:	4631      	mov	r1, r6
   13e1e:	4638      	mov	r0, r7
   13e20:	f7ff ff36 	bl	13c90 <__multiply>
   13e24:	b1b6      	cbz	r6, 13e54 <__pow5mult+0x68>
   13e26:	6871      	ldr	r1, [r6, #4]
   13e28:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   13e2a:	1064      	asrs	r4, r4, #1
   13e2c:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
   13e30:	6032      	str	r2, [r6, #0]
   13e32:	f843 6021 	str.w	r6, [r3, r1, lsl #2]
   13e36:	4606      	mov	r6, r0
   13e38:	d1ea      	bne.n	13e10 <__pow5mult+0x24>
   13e3a:	4630      	mov	r0, r6
   13e3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13e40:	462a      	mov	r2, r5
   13e42:	4629      	mov	r1, r5
   13e44:	4638      	mov	r0, r7
   13e46:	f7ff ff23 	bl	13c90 <__multiply>
   13e4a:	6028      	str	r0, [r5, #0]
   13e4c:	4605      	mov	r5, r0
   13e4e:	f8c0 8000 	str.w	r8, [r0]
   13e52:	e7e0      	b.n	13e16 <__pow5mult+0x2a>
   13e54:	4606      	mov	r6, r0
   13e56:	e7d9      	b.n	13e0c <__pow5mult+0x20>
   13e58:	4a0f      	ldr	r2, [pc, #60]	; (13e98 <__pow5mult+0xac>)
   13e5a:	3b01      	subs	r3, #1
   13e5c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   13e60:	2300      	movs	r3, #0
   13e62:	f7ff fdef 	bl	13a44 <__multadd>
   13e66:	4606      	mov	r6, r0
   13e68:	e7c8      	b.n	13dfc <__pow5mult+0x10>
   13e6a:	2101      	movs	r1, #1
   13e6c:	4638      	mov	r0, r7
   13e6e:	f7ff fdb9 	bl	139e4 <_Balloc>
   13e72:	4605      	mov	r5, r0
   13e74:	b140      	cbz	r0, 13e88 <__pow5mult+0x9c>
   13e76:	f240 2371 	movw	r3, #625	; 0x271
   13e7a:	2201      	movs	r2, #1
   13e7c:	e9c0 2304 	strd	r2, r3, [r0, #16]
   13e80:	2300      	movs	r3, #0
   13e82:	64b8      	str	r0, [r7, #72]	; 0x48
   13e84:	6003      	str	r3, [r0, #0]
   13e86:	e7bd      	b.n	13e04 <__pow5mult+0x18>
   13e88:	4602      	mov	r2, r0
   13e8a:	f44f 71a0 	mov.w	r1, #320	; 0x140
   13e8e:	4b03      	ldr	r3, [pc, #12]	; (13e9c <__pow5mult+0xb0>)
   13e90:	4803      	ldr	r0, [pc, #12]	; (13ea0 <__pow5mult+0xb4>)
   13e92:	f7f7 fe1d 	bl	bad0 <__assert_func>
   13e96:	bf00      	nop
   13e98:	0001a260 	.word	0x0001a260
   13e9c:	0001a06c 	.word	0x0001a06c
   13ea0:	0001a0e8 	.word	0x0001a0e8

00013ea4 <__lshift>:
   13ea4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13ea8:	460c      	mov	r4, r1
   13eaa:	6926      	ldr	r6, [r4, #16]
   13eac:	68a3      	ldr	r3, [r4, #8]
   13eae:	eb06 1662 	add.w	r6, r6, r2, asr #5
   13eb2:	1c75      	adds	r5, r6, #1
   13eb4:	429d      	cmp	r5, r3
   13eb6:	4690      	mov	r8, r2
   13eb8:	4607      	mov	r7, r0
   13eba:	6849      	ldr	r1, [r1, #4]
   13ebc:	ea4f 1962 	mov.w	r9, r2, asr #5
   13ec0:	dd04      	ble.n	13ecc <__lshift+0x28>
   13ec2:	005b      	lsls	r3, r3, #1
   13ec4:	429d      	cmp	r5, r3
   13ec6:	f101 0101 	add.w	r1, r1, #1
   13eca:	dcfa      	bgt.n	13ec2 <__lshift+0x1e>
   13ecc:	4638      	mov	r0, r7
   13ece:	f7ff fd89 	bl	139e4 <_Balloc>
   13ed2:	2800      	cmp	r0, #0
   13ed4:	d051      	beq.n	13f7a <__lshift+0xd6>
   13ed6:	f1b9 0f00 	cmp.w	r9, #0
   13eda:	f100 0114 	add.w	r1, r0, #20
   13ede:	dd0f      	ble.n	13f00 <__lshift+0x5c>
   13ee0:	460b      	mov	r3, r1
   13ee2:	f04f 0c00 	mov.w	ip, #0
   13ee6:	f109 0205 	add.w	r2, r9, #5
   13eea:	ea4f 0e82 	mov.w	lr, r2, lsl #2
   13eee:	eb00 0282 	add.w	r2, r0, r2, lsl #2
   13ef2:	f843 cb04 	str.w	ip, [r3], #4
   13ef6:	4293      	cmp	r3, r2
   13ef8:	d1fb      	bne.n	13ef2 <__lshift+0x4e>
   13efa:	f1ae 0314 	sub.w	r3, lr, #20
   13efe:	4419      	add	r1, r3
   13f00:	6922      	ldr	r2, [r4, #16]
   13f02:	f104 0314 	add.w	r3, r4, #20
   13f06:	f018 081f 	ands.w	r8, r8, #31
   13f0a:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   13f0e:	d02c      	beq.n	13f6a <__lshift+0xc6>
   13f10:	468e      	mov	lr, r1
   13f12:	f04f 0a00 	mov.w	sl, #0
   13f16:	f1c8 0920 	rsb	r9, r8, #32
   13f1a:	681a      	ldr	r2, [r3, #0]
   13f1c:	fa02 f208 	lsl.w	r2, r2, r8
   13f20:	ea42 020a 	orr.w	r2, r2, sl
   13f24:	f84e 2b04 	str.w	r2, [lr], #4
   13f28:	f853 2b04 	ldr.w	r2, [r3], #4
   13f2c:	459c      	cmp	ip, r3
   13f2e:	fa22 fa09 	lsr.w	sl, r2, r9
   13f32:	d8f2      	bhi.n	13f1a <__lshift+0x76>
   13f34:	ebac 0304 	sub.w	r3, ip, r4
   13f38:	3b15      	subs	r3, #21
   13f3a:	f023 0303 	bic.w	r3, r3, #3
   13f3e:	3304      	adds	r3, #4
   13f40:	f104 0215 	add.w	r2, r4, #21
   13f44:	4594      	cmp	ip, r2
   13f46:	bf38      	it	cc
   13f48:	2304      	movcc	r3, #4
   13f4a:	f1ba 0f00 	cmp.w	sl, #0
   13f4e:	bf18      	it	ne
   13f50:	462e      	movne	r6, r5
   13f52:	f841 a003 	str.w	sl, [r1, r3]
   13f56:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   13f58:	6862      	ldr	r2, [r4, #4]
   13f5a:	6106      	str	r6, [r0, #16]
   13f5c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   13f60:	6021      	str	r1, [r4, #0]
   13f62:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
   13f66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13f6a:	3904      	subs	r1, #4
   13f6c:	f853 2b04 	ldr.w	r2, [r3], #4
   13f70:	459c      	cmp	ip, r3
   13f72:	f841 2f04 	str.w	r2, [r1, #4]!
   13f76:	d8f9      	bhi.n	13f6c <__lshift+0xc8>
   13f78:	e7ed      	b.n	13f56 <__lshift+0xb2>
   13f7a:	4602      	mov	r2, r0
   13f7c:	f240 11d9 	movw	r1, #473	; 0x1d9
   13f80:	4b01      	ldr	r3, [pc, #4]	; (13f88 <__lshift+0xe4>)
   13f82:	4802      	ldr	r0, [pc, #8]	; (13f8c <__lshift+0xe8>)
   13f84:	f7f7 fda4 	bl	bad0 <__assert_func>
   13f88:	0001a06c 	.word	0x0001a06c
   13f8c:	0001a0e8 	.word	0x0001a0e8

00013f90 <__mcmp>:
   13f90:	4684      	mov	ip, r0
   13f92:	690b      	ldr	r3, [r1, #16]
   13f94:	6900      	ldr	r0, [r0, #16]
   13f96:	1ac0      	subs	r0, r0, r3
   13f98:	d115      	bne.n	13fc6 <__mcmp+0x36>
   13f9a:	f10c 0c14 	add.w	ip, ip, #20
   13f9e:	3114      	adds	r1, #20
   13fa0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
   13fa4:	b410      	push	{r4}
   13fa6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   13faa:	e001      	b.n	13fb0 <__mcmp+0x20>
   13fac:	4594      	cmp	ip, r2
   13fae:	d208      	bcs.n	13fc2 <__mcmp+0x32>
   13fb0:	f852 4d04 	ldr.w	r4, [r2, #-4]!
   13fb4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   13fb8:	428c      	cmp	r4, r1
   13fba:	d0f7      	beq.n	13fac <__mcmp+0x1c>
   13fbc:	d204      	bcs.n	13fc8 <__mcmp+0x38>
   13fbe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   13fc2:	bc10      	pop	{r4}
   13fc4:	4770      	bx	lr
   13fc6:	4770      	bx	lr
   13fc8:	2001      	movs	r0, #1
   13fca:	bc10      	pop	{r4}
   13fcc:	4770      	bx	lr
   13fce:	bf00      	nop

00013fd0 <__mdiff>:
   13fd0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fd4:	690c      	ldr	r4, [r1, #16]
   13fd6:	6913      	ldr	r3, [r2, #16]
   13fd8:	4689      	mov	r9, r1
   13fda:	1ae4      	subs	r4, r4, r3
   13fdc:	2c00      	cmp	r4, #0
   13fde:	4617      	mov	r7, r2
   13fe0:	d17d      	bne.n	140de <__mdiff+0x10e>
   13fe2:	f101 0614 	add.w	r6, r1, #20
   13fe6:	3214      	adds	r2, #20
   13fe8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
   13fec:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   13ff0:	e001      	b.n	13ff6 <__mdiff+0x26>
   13ff2:	429e      	cmp	r6, r3
   13ff4:	d276      	bcs.n	140e4 <__mdiff+0x114>
   13ff6:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   13ffa:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   13ffe:	428d      	cmp	r5, r1
   14000:	d0f7      	beq.n	13ff2 <__mdiff+0x22>
   14002:	d367      	bcc.n	140d4 <__mdiff+0x104>
   14004:	f8d9 1004 	ldr.w	r1, [r9, #4]
   14008:	f7ff fcec 	bl	139e4 <_Balloc>
   1400c:	2800      	cmp	r0, #0
   1400e:	d073      	beq.n	140f8 <__mdiff+0x128>
   14010:	f8d9 5010 	ldr.w	r5, [r9, #16]
   14014:	60c4      	str	r4, [r0, #12]
   14016:	f100 0414 	add.w	r4, r0, #20
   1401a:	4626      	mov	r6, r4
   1401c:	f04f 0a00 	mov.w	sl, #0
   14020:	693b      	ldr	r3, [r7, #16]
   14022:	f109 0814 	add.w	r8, r9, #20
   14026:	f107 0e14 	add.w	lr, r7, #20
   1402a:	f109 0c10 	add.w	ip, r9, #16
   1402e:	eb08 0285 	add.w	r2, r8, r5, lsl #2
   14032:	eb0e 0983 	add.w	r9, lr, r3, lsl #2
   14036:	f85c bf04 	ldr.w	fp, [ip, #4]!
   1403a:	f85e 1b04 	ldr.w	r1, [lr], #4
   1403e:	fa1f f38b 	uxth.w	r3, fp
   14042:	4453      	add	r3, sl
   14044:	fa1f fa81 	uxth.w	sl, r1
   14048:	0c09      	lsrs	r1, r1, #16
   1404a:	eba3 030a 	sub.w	r3, r3, sl
   1404e:	ebc1 411b 	rsb	r1, r1, fp, lsr #16
   14052:	eb01 4123 	add.w	r1, r1, r3, asr #16
   14056:	b29b      	uxth	r3, r3
   14058:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   1405c:	45f1      	cmp	r9, lr
   1405e:	f846 3b04 	str.w	r3, [r6], #4
   14062:	ea4f 4a21 	mov.w	sl, r1, asr #16
   14066:	d8e6      	bhi.n	14036 <__mdiff+0x66>
   14068:	eba9 0107 	sub.w	r1, r9, r7
   1406c:	3915      	subs	r1, #21
   1406e:	3715      	adds	r7, #21
   14070:	45b9      	cmp	r9, r7
   14072:	f021 0603 	bic.w	r6, r1, #3
   14076:	f106 0604 	add.w	r6, r6, #4
   1407a:	bf38      	it	cc
   1407c:	2604      	movcc	r6, #4
   1407e:	f021 0103 	bic.w	r1, r1, #3
   14082:	bf38      	it	cc
   14084:	2100      	movcc	r1, #0
   14086:	44b0      	add	r8, r6
   14088:	4542      	cmp	r2, r8
   1408a:	4426      	add	r6, r4
   1408c:	440c      	add	r4, r1
   1408e:	d918      	bls.n	140c2 <__mdiff+0xf2>
   14090:	4637      	mov	r7, r6
   14092:	4644      	mov	r4, r8
   14094:	f854 1b04 	ldr.w	r1, [r4], #4
   14098:	b28b      	uxth	r3, r1
   1409a:	4453      	add	r3, sl
   1409c:	ea4f 4a23 	mov.w	sl, r3, asr #16
   140a0:	eb0a 4111 	add.w	r1, sl, r1, lsr #16
   140a4:	b29b      	uxth	r3, r3
   140a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   140aa:	42a2      	cmp	r2, r4
   140ac:	f847 3b04 	str.w	r3, [r7], #4
   140b0:	ea4f 4a21 	mov.w	sl, r1, asr #16
   140b4:	d8ee      	bhi.n	14094 <__mdiff+0xc4>
   140b6:	1e54      	subs	r4, r2, #1
   140b8:	eba4 0408 	sub.w	r4, r4, r8
   140bc:	f024 0403 	bic.w	r4, r4, #3
   140c0:	4434      	add	r4, r6
   140c2:	b923      	cbnz	r3, 140ce <__mdiff+0xfe>
   140c4:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   140c8:	3d01      	subs	r5, #1
   140ca:	2b00      	cmp	r3, #0
   140cc:	d0fa      	beq.n	140c4 <__mdiff+0xf4>
   140ce:	6105      	str	r5, [r0, #16]
   140d0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140d4:	464b      	mov	r3, r9
   140d6:	2401      	movs	r4, #1
   140d8:	46b9      	mov	r9, r7
   140da:	461f      	mov	r7, r3
   140dc:	e792      	b.n	14004 <__mdiff+0x34>
   140de:	dbf9      	blt.n	140d4 <__mdiff+0x104>
   140e0:	2400      	movs	r4, #0
   140e2:	e78f      	b.n	14004 <__mdiff+0x34>
   140e4:	2100      	movs	r1, #0
   140e6:	f7ff fc7d 	bl	139e4 <_Balloc>
   140ea:	b160      	cbz	r0, 14106 <__mdiff+0x136>
   140ec:	2201      	movs	r2, #1
   140ee:	2300      	movs	r3, #0
   140f0:	e9c0 2304 	strd	r2, r3, [r0, #16]
   140f4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140f8:	4602      	mov	r2, r0
   140fa:	f44f 7110 	mov.w	r1, #576	; 0x240
   140fe:	4b05      	ldr	r3, [pc, #20]	; (14114 <__mdiff+0x144>)
   14100:	4805      	ldr	r0, [pc, #20]	; (14118 <__mdiff+0x148>)
   14102:	f7f7 fce5 	bl	bad0 <__assert_func>
   14106:	4602      	mov	r2, r0
   14108:	f240 2132 	movw	r1, #562	; 0x232
   1410c:	4b01      	ldr	r3, [pc, #4]	; (14114 <__mdiff+0x144>)
   1410e:	4802      	ldr	r0, [pc, #8]	; (14118 <__mdiff+0x148>)
   14110:	f7f7 fcde 	bl	bad0 <__assert_func>
   14114:	0001a06c 	.word	0x0001a06c
   14118:	0001a0e8 	.word	0x0001a0e8

0001411c <__ulp>:
   1411c:	4b0f      	ldr	r3, [pc, #60]	; (1415c <__ulp+0x40>)
   1411e:	400b      	ands	r3, r1
   14120:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   14124:	2b00      	cmp	r3, #0
   14126:	dd02      	ble.n	1412e <__ulp+0x12>
   14128:	2000      	movs	r0, #0
   1412a:	4619      	mov	r1, r3
   1412c:	4770      	bx	lr
   1412e:	425b      	negs	r3, r3
   14130:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
   14134:	ea4f 5223 	mov.w	r2, r3, asr #20
   14138:	da05      	bge.n	14146 <__ulp+0x2a>
   1413a:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   1413e:	2000      	movs	r0, #0
   14140:	fa43 f102 	asr.w	r1, r3, r2
   14144:	4770      	bx	lr
   14146:	3a14      	subs	r2, #20
   14148:	2a1e      	cmp	r2, #30
   1414a:	bfd6      	itet	le
   1414c:	f04f 4300 	movle.w	r3, #2147483648	; 0x80000000
   14150:	2201      	movgt	r2, #1
   14152:	fa23 f202 	lsrle.w	r2, r3, r2
   14156:	2100      	movs	r1, #0
   14158:	4610      	mov	r0, r2
   1415a:	4770      	bx	lr
   1415c:	7ff00000 	.word	0x7ff00000

00014160 <__b2d>:
   14160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14164:	6907      	ldr	r7, [r0, #16]
   14166:	f100 0614 	add.w	r6, r0, #20
   1416a:	eb06 0787 	add.w	r7, r6, r7, lsl #2
   1416e:	460c      	mov	r4, r1
   14170:	f857 1c04 	ldr.w	r1, [r7, #-4]
   14174:	f1a7 0804 	sub.w	r8, r7, #4
   14178:	4608      	mov	r0, r1
   1417a:	f7ff fd0f 	bl	13b9c <__hi0bits>
   1417e:	f1c0 0320 	rsb	r3, r0, #32
   14182:	280a      	cmp	r0, #10
   14184:	6023      	str	r3, [r4, #0]
   14186:	dd36      	ble.n	141f6 <__b2d+0x96>
   14188:	4546      	cmp	r6, r8
   1418a:	d21e      	bcs.n	141ca <__b2d+0x6a>
   1418c:	f1b0 030b 	subs.w	r3, r0, #11
   14190:	f857 2c08 	ldr.w	r2, [r7, #-8]
   14194:	d026      	beq.n	141e4 <__b2d+0x84>
   14196:	f1c3 0c20 	rsb	ip, r3, #32
   1419a:	4099      	lsls	r1, r3
   1419c:	fa22 f00c 	lsr.w	r0, r2, ip
   141a0:	4308      	orrs	r0, r1
   141a2:	f1a7 0108 	sub.w	r1, r7, #8
   141a6:	f040 557f 	orr.w	r5, r0, #1069547520	; 0x3fc00000
   141aa:	428e      	cmp	r6, r1
   141ac:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   141b0:	d23a      	bcs.n	14228 <__b2d+0xc8>
   141b2:	fa02 f003 	lsl.w	r0, r2, r3
   141b6:	f857 3c0c 	ldr.w	r3, [r7, #-12]
   141ba:	fa23 f30c 	lsr.w	r3, r3, ip
   141be:	4303      	orrs	r3, r0
   141c0:	461c      	mov	r4, r3
   141c2:	4620      	mov	r0, r4
   141c4:	4629      	mov	r1, r5
   141c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   141ca:	f1b0 030b 	subs.w	r3, r0, #11
   141ce:	d008      	beq.n	141e2 <__b2d+0x82>
   141d0:	fa01 f003 	lsl.w	r0, r1, r3
   141d4:	2300      	movs	r3, #0
   141d6:	f040 557f 	orr.w	r5, r0, #1069547520	; 0x3fc00000
   141da:	461c      	mov	r4, r3
   141dc:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   141e0:	e7ef      	b.n	141c2 <__b2d+0x62>
   141e2:	461a      	mov	r2, r3
   141e4:	4614      	mov	r4, r2
   141e6:	f041 557f 	orr.w	r5, r1, #1069547520	; 0x3fc00000
   141ea:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   141ee:	4620      	mov	r0, r4
   141f0:	4629      	mov	r1, r5
   141f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   141f6:	f1c0 030b 	rsb	r3, r0, #11
   141fa:	fa21 f203 	lsr.w	r2, r1, r3
   141fe:	4546      	cmp	r6, r8
   14200:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
   14204:	bf2c      	ite	cs
   14206:	2200      	movcs	r2, #0
   14208:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   1420c:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   14210:	bf38      	it	cc
   14212:	40da      	lsrcc	r2, r3
   14214:	f100 0315 	add.w	r3, r0, #21
   14218:	fa01 f303 	lsl.w	r3, r1, r3
   1421c:	ea43 0402 	orr.w	r4, r3, r2
   14220:	4620      	mov	r0, r4
   14222:	4629      	mov	r1, r5
   14224:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14228:	fa02 f303 	lsl.w	r3, r2, r3
   1422c:	461c      	mov	r4, r3
   1422e:	e7c8      	b.n	141c2 <__b2d+0x62>

00014230 <__d2b>:
   14230:	b570      	push	{r4, r5, r6, lr}
   14232:	2101      	movs	r1, #1
   14234:	b082      	sub	sp, #8
   14236:	4616      	mov	r6, r2
   14238:	461d      	mov	r5, r3
   1423a:	f7ff fbd3 	bl	139e4 <_Balloc>
   1423e:	4604      	mov	r4, r0
   14240:	2800      	cmp	r0, #0
   14242:	d04c      	beq.n	142de <__d2b+0xae>
   14244:	462b      	mov	r3, r5
   14246:	f3c5 550a 	ubfx	r5, r5, #20, #11
   1424a:	f3c3 0313 	ubfx	r3, r3, #0, #20
   1424e:	b10d      	cbz	r5, 14254 <__d2b+0x24>
   14250:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   14254:	2e00      	cmp	r6, #0
   14256:	9301      	str	r3, [sp, #4]
   14258:	d022      	beq.n	142a0 <__d2b+0x70>
   1425a:	4668      	mov	r0, sp
   1425c:	9600      	str	r6, [sp, #0]
   1425e:	f7ff fcbd 	bl	13bdc <__lo0bits>
   14262:	2800      	cmp	r0, #0
   14264:	d037      	beq.n	142d6 <__d2b+0xa6>
   14266:	9b01      	ldr	r3, [sp, #4]
   14268:	9900      	ldr	r1, [sp, #0]
   1426a:	f1c0 0220 	rsb	r2, r0, #32
   1426e:	fa03 f202 	lsl.w	r2, r3, r2
   14272:	430a      	orrs	r2, r1
   14274:	40c3      	lsrs	r3, r0
   14276:	9301      	str	r3, [sp, #4]
   14278:	6162      	str	r2, [r4, #20]
   1427a:	2b00      	cmp	r3, #0
   1427c:	bf14      	ite	ne
   1427e:	2102      	movne	r1, #2
   14280:	2101      	moveq	r1, #1
   14282:	61a3      	str	r3, [r4, #24]
   14284:	6121      	str	r1, [r4, #16]
   14286:	b1b5      	cbz	r5, 142b6 <__d2b+0x86>
   14288:	9b06      	ldr	r3, [sp, #24]
   1428a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
   1428e:	4405      	add	r5, r0
   14290:	601d      	str	r5, [r3, #0]
   14292:	9b07      	ldr	r3, [sp, #28]
   14294:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   14298:	6018      	str	r0, [r3, #0]
   1429a:	4620      	mov	r0, r4
   1429c:	b002      	add	sp, #8
   1429e:	bd70      	pop	{r4, r5, r6, pc}
   142a0:	a801      	add	r0, sp, #4
   142a2:	f7ff fc9b 	bl	13bdc <__lo0bits>
   142a6:	2301      	movs	r3, #1
   142a8:	9a01      	ldr	r2, [sp, #4]
   142aa:	4619      	mov	r1, r3
   142ac:	6162      	str	r2, [r4, #20]
   142ae:	3020      	adds	r0, #32
   142b0:	6123      	str	r3, [r4, #16]
   142b2:	2d00      	cmp	r5, #0
   142b4:	d1e8      	bne.n	14288 <__d2b+0x58>
   142b6:	eb04 0281 	add.w	r2, r4, r1, lsl #2
   142ba:	f2a0 4332 	subw	r3, r0, #1074	; 0x432
   142be:	6910      	ldr	r0, [r2, #16]
   142c0:	9a06      	ldr	r2, [sp, #24]
   142c2:	6013      	str	r3, [r2, #0]
   142c4:	f7ff fc6a 	bl	13b9c <__hi0bits>
   142c8:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
   142cc:	4620      	mov	r0, r4
   142ce:	9b07      	ldr	r3, [sp, #28]
   142d0:	6019      	str	r1, [r3, #0]
   142d2:	b002      	add	sp, #8
   142d4:	bd70      	pop	{r4, r5, r6, pc}
   142d6:	e9dd 2300 	ldrd	r2, r3, [sp]
   142da:	6162      	str	r2, [r4, #20]
   142dc:	e7cd      	b.n	1427a <__d2b+0x4a>
   142de:	4602      	mov	r2, r0
   142e0:	f240 310a 	movw	r1, #778	; 0x30a
   142e4:	4b01      	ldr	r3, [pc, #4]	; (142ec <__d2b+0xbc>)
   142e6:	4802      	ldr	r0, [pc, #8]	; (142f0 <__d2b+0xc0>)
   142e8:	f7f7 fbf2 	bl	bad0 <__assert_func>
   142ec:	0001a06c 	.word	0x0001a06c
   142f0:	0001a0e8 	.word	0x0001a0e8

000142f4 <__ratio>:
   142f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   142f8:	b083      	sub	sp, #12
   142fa:	4688      	mov	r8, r1
   142fc:	4669      	mov	r1, sp
   142fe:	4681      	mov	r9, r0
   14300:	f7ff ff2e 	bl	14160 <__b2d>
   14304:	4604      	mov	r4, r0
   14306:	460d      	mov	r5, r1
   14308:	4640      	mov	r0, r8
   1430a:	a901      	add	r1, sp, #4
   1430c:	f7ff ff28 	bl	14160 <__b2d>
   14310:	f8d9 3010 	ldr.w	r3, [r9, #16]
   14314:	f8d8 2010 	ldr.w	r2, [r8, #16]
   14318:	460f      	mov	r7, r1
   1431a:	1a9a      	subs	r2, r3, r2
   1431c:	e9dd 6300 	ldrd	r6, r3, [sp]
   14320:	1af3      	subs	r3, r6, r3
   14322:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   14326:	2b00      	cmp	r3, #0
   14328:	dd0c      	ble.n	14344 <__ratio+0x50>
   1432a:	eb05 5903 	add.w	r9, r5, r3, lsl #20
   1432e:	4606      	mov	r6, r0
   14330:	464d      	mov	r5, r9
   14332:	4632      	mov	r2, r6
   14334:	463b      	mov	r3, r7
   14336:	4620      	mov	r0, r4
   14338:	4629      	mov	r1, r5
   1433a:	f001 fd91 	bl	15e60 <__aeabi_ddiv>
   1433e:	b003      	add	sp, #12
   14340:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   14344:	ebc3 3303 	rsb	r3, r3, r3, lsl #12
   14348:	eb01 5103 	add.w	r1, r1, r3, lsl #20
   1434c:	4606      	mov	r6, r0
   1434e:	460f      	mov	r7, r1
   14350:	e7ef      	b.n	14332 <__ratio+0x3e>
   14352:	bf00      	nop

00014354 <_mprec_log10>:
   14354:	2817      	cmp	r0, #23
   14356:	b570      	push	{r4, r5, r6, lr}
   14358:	4606      	mov	r6, r0
   1435a:	dd0a      	ble.n	14372 <_mprec_log10+0x1e>
   1435c:	2000      	movs	r0, #0
   1435e:	2400      	movs	r4, #0
   14360:	4907      	ldr	r1, [pc, #28]	; (14380 <_mprec_log10+0x2c>)
   14362:	4d08      	ldr	r5, [pc, #32]	; (14384 <_mprec_log10+0x30>)
   14364:	4622      	mov	r2, r4
   14366:	462b      	mov	r3, r5
   14368:	f001 fc50 	bl	15c0c <__aeabi_dmul>
   1436c:	3e01      	subs	r6, #1
   1436e:	d1f9      	bne.n	14364 <_mprec_log10+0x10>
   14370:	bd70      	pop	{r4, r5, r6, pc}
   14372:	4b05      	ldr	r3, [pc, #20]	; (14388 <_mprec_log10+0x34>)
   14374:	eb03 06c0 	add.w	r6, r3, r0, lsl #3
   14378:	e9d6 0100 	ldrd	r0, r1, [r6]
   1437c:	bd70      	pop	{r4, r5, r6, pc}
   1437e:	bf00      	nop
   14380:	3ff00000 	.word	0x3ff00000
   14384:	40240000 	.word	0x40240000
   14388:	0001a170 	.word	0x0001a170

0001438c <__copybits>:
   1438c:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
   14390:	6911      	ldr	r1, [r2, #16]
   14392:	f102 0314 	add.w	r3, r2, #20
   14396:	ea4f 1c6c 	mov.w	ip, ip, asr #5
   1439a:	eb03 0181 	add.w	r1, r3, r1, lsl #2
   1439e:	f10c 0c01 	add.w	ip, ip, #1
   143a2:	428b      	cmp	r3, r1
   143a4:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
   143a8:	d216      	bcs.n	143d8 <__copybits+0x4c>
   143aa:	b510      	push	{r4, lr}
   143ac:	f1a0 0e04 	sub.w	lr, r0, #4
   143b0:	f853 4b04 	ldr.w	r4, [r3], #4
   143b4:	4299      	cmp	r1, r3
   143b6:	f84e 4f04 	str.w	r4, [lr, #4]!
   143ba:	d8f9      	bhi.n	143b0 <__copybits+0x24>
   143bc:	1a8b      	subs	r3, r1, r2
   143be:	3b15      	subs	r3, #21
   143c0:	f023 0303 	bic.w	r3, r3, #3
   143c4:	3304      	adds	r3, #4
   143c6:	4418      	add	r0, r3
   143c8:	4584      	cmp	ip, r0
   143ca:	d904      	bls.n	143d6 <__copybits+0x4a>
   143cc:	2300      	movs	r3, #0
   143ce:	f840 3b04 	str.w	r3, [r0], #4
   143d2:	4584      	cmp	ip, r0
   143d4:	d8fb      	bhi.n	143ce <__copybits+0x42>
   143d6:	bd10      	pop	{r4, pc}
   143d8:	4584      	cmp	ip, r0
   143da:	d905      	bls.n	143e8 <__copybits+0x5c>
   143dc:	2300      	movs	r3, #0
   143de:	f840 3b04 	str.w	r3, [r0], #4
   143e2:	4584      	cmp	ip, r0
   143e4:	d8fb      	bhi.n	143de <__copybits+0x52>
   143e6:	4770      	bx	lr
   143e8:	4770      	bx	lr
   143ea:	bf00      	nop

000143ec <__any_on>:
   143ec:	6903      	ldr	r3, [r0, #16]
   143ee:	114a      	asrs	r2, r1, #5
   143f0:	4293      	cmp	r3, r2
   143f2:	f100 0014 	add.w	r0, r0, #20
   143f6:	da09      	bge.n	1440c <__any_on+0x20>
   143f8:	eb00 0383 	add.w	r3, r0, r3, lsl #2
   143fc:	e002      	b.n	14404 <__any_on+0x18>
   143fe:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   14402:	b9c2      	cbnz	r2, 14436 <__any_on+0x4a>
   14404:	4283      	cmp	r3, r0
   14406:	d8fa      	bhi.n	143fe <__any_on+0x12>
   14408:	2000      	movs	r0, #0
   1440a:	4770      	bx	lr
   1440c:	dd10      	ble.n	14430 <__any_on+0x44>
   1440e:	f011 011f 	ands.w	r1, r1, #31
   14412:	d00d      	beq.n	14430 <__any_on+0x44>
   14414:	b410      	push	{r4}
   14416:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
   1441a:	eb00 0382 	add.w	r3, r0, r2, lsl #2
   1441e:	fa24 f201 	lsr.w	r2, r4, r1
   14422:	fa02 f101 	lsl.w	r1, r2, r1
   14426:	428c      	cmp	r4, r1
   14428:	d00b      	beq.n	14442 <__any_on+0x56>
   1442a:	2001      	movs	r0, #1
   1442c:	bc10      	pop	{r4}
   1442e:	4770      	bx	lr
   14430:	eb00 0382 	add.w	r3, r0, r2, lsl #2
   14434:	e7e6      	b.n	14404 <__any_on+0x18>
   14436:	2001      	movs	r0, #1
   14438:	4770      	bx	lr
   1443a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   1443e:	2a00      	cmp	r2, #0
   14440:	d1f3      	bne.n	1442a <__any_on+0x3e>
   14442:	4283      	cmp	r3, r0
   14444:	d8f9      	bhi.n	1443a <__any_on+0x4e>
   14446:	2000      	movs	r0, #0
   14448:	bc10      	pop	{r4}
   1444a:	4770      	bx	lr

0001444c <cleanup_glue>:
   1444c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14450:	680e      	ldr	r6, [r1, #0]
   14452:	460c      	mov	r4, r1
   14454:	4605      	mov	r5, r0
   14456:	b1be      	cbz	r6, 14488 <cleanup_glue+0x3c>
   14458:	6837      	ldr	r7, [r6, #0]
   1445a:	b18f      	cbz	r7, 14480 <cleanup_glue+0x34>
   1445c:	f8d7 8000 	ldr.w	r8, [r7]
   14460:	f1b8 0f00 	cmp.w	r8, #0
   14464:	d008      	beq.n	14478 <cleanup_glue+0x2c>
   14466:	f8d8 1000 	ldr.w	r1, [r8]
   1446a:	b109      	cbz	r1, 14470 <cleanup_glue+0x24>
   1446c:	f7ff ffee 	bl	1444c <cleanup_glue>
   14470:	4641      	mov	r1, r8
   14472:	4628      	mov	r0, r5
   14474:	f7ff f862 	bl	1353c <_free_r>
   14478:	4639      	mov	r1, r7
   1447a:	4628      	mov	r0, r5
   1447c:	f7ff f85e 	bl	1353c <_free_r>
   14480:	4631      	mov	r1, r6
   14482:	4628      	mov	r0, r5
   14484:	f7ff f85a 	bl	1353c <_free_r>
   14488:	4621      	mov	r1, r4
   1448a:	4628      	mov	r0, r5
   1448c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   14490:	f7ff b854 	b.w	1353c <_free_r>

00014494 <_reclaim_reent>:
   14494:	4b22      	ldr	r3, [pc, #136]	; (14520 <_reclaim_reent+0x8c>)
   14496:	681b      	ldr	r3, [r3, #0]
   14498:	4283      	cmp	r3, r0
   1449a:	d040      	beq.n	1451e <_reclaim_reent+0x8a>
   1449c:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
   1449e:	b570      	push	{r4, r5, r6, lr}
   144a0:	4605      	mov	r5, r0
   144a2:	b181      	cbz	r1, 144c6 <_reclaim_reent+0x32>
   144a4:	2600      	movs	r6, #0
   144a6:	598c      	ldr	r4, [r1, r6]
   144a8:	b13c      	cbz	r4, 144ba <_reclaim_reent+0x26>
   144aa:	4621      	mov	r1, r4
   144ac:	6824      	ldr	r4, [r4, #0]
   144ae:	4628      	mov	r0, r5
   144b0:	f7ff f844 	bl	1353c <_free_r>
   144b4:	2c00      	cmp	r4, #0
   144b6:	d1f8      	bne.n	144aa <_reclaim_reent+0x16>
   144b8:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
   144ba:	3604      	adds	r6, #4
   144bc:	2e80      	cmp	r6, #128	; 0x80
   144be:	d1f2      	bne.n	144a6 <_reclaim_reent+0x12>
   144c0:	4628      	mov	r0, r5
   144c2:	f7ff f83b 	bl	1353c <_free_r>
   144c6:	6c29      	ldr	r1, [r5, #64]	; 0x40
   144c8:	b111      	cbz	r1, 144d0 <_reclaim_reent+0x3c>
   144ca:	4628      	mov	r0, r5
   144cc:	f7ff f836 	bl	1353c <_free_r>
   144d0:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
   144d4:	b154      	cbz	r4, 144ec <_reclaim_reent+0x58>
   144d6:	f505 76a6 	add.w	r6, r5, #332	; 0x14c
   144da:	42b4      	cmp	r4, r6
   144dc:	d006      	beq.n	144ec <_reclaim_reent+0x58>
   144de:	4621      	mov	r1, r4
   144e0:	6824      	ldr	r4, [r4, #0]
   144e2:	4628      	mov	r0, r5
   144e4:	f7ff f82a 	bl	1353c <_free_r>
   144e8:	42a6      	cmp	r6, r4
   144ea:	d1f8      	bne.n	144de <_reclaim_reent+0x4a>
   144ec:	6d69      	ldr	r1, [r5, #84]	; 0x54
   144ee:	b111      	cbz	r1, 144f6 <_reclaim_reent+0x62>
   144f0:	4628      	mov	r0, r5
   144f2:	f7ff f823 	bl	1353c <_free_r>
   144f6:	6bab      	ldr	r3, [r5, #56]	; 0x38
   144f8:	b183      	cbz	r3, 1451c <_reclaim_reent+0x88>
   144fa:	4628      	mov	r0, r5
   144fc:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   144fe:	4798      	blx	r3
   14500:	f8d5 42e0 	ldr.w	r4, [r5, #736]	; 0x2e0
   14504:	b154      	cbz	r4, 1451c <_reclaim_reent+0x88>
   14506:	6821      	ldr	r1, [r4, #0]
   14508:	b111      	cbz	r1, 14510 <_reclaim_reent+0x7c>
   1450a:	4628      	mov	r0, r5
   1450c:	f7ff ff9e 	bl	1444c <cleanup_glue>
   14510:	4621      	mov	r1, r4
   14512:	4628      	mov	r0, r5
   14514:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   14518:	f7ff b810 	b.w	1353c <_free_r>
   1451c:	bd70      	pop	{r4, r5, r6, pc}
   1451e:	4770      	bx	lr
   14520:	20000124 	.word	0x20000124

00014524 <frexp>:
   14524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14526:	2700      	movs	r7, #0
   14528:	f8df c05c 	ldr.w	ip, [pc, #92]	; 14588 <frexp+0x64>
   1452c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   14530:	4563      	cmp	r3, ip
   14532:	4604      	mov	r4, r0
   14534:	460d      	mov	r5, r1
   14536:	6017      	str	r7, [r2, #0]
   14538:	dc23      	bgt.n	14582 <frexp+0x5e>
   1453a:	4684      	mov	ip, r0
   1453c:	ea53 0c0c 	orrs.w	ip, r3, ip
   14540:	d01f      	beq.n	14582 <frexp+0x5e>
   14542:	f8df c048 	ldr.w	ip, [pc, #72]	; 1458c <frexp+0x68>
   14546:	4616      	mov	r6, r2
   14548:	ea01 0c0c 	and.w	ip, r1, ip
   1454c:	460a      	mov	r2, r1
   1454e:	f1bc 0f00 	cmp.w	ip, #0
   14552:	d109      	bne.n	14568 <frexp+0x44>
   14554:	2200      	movs	r2, #0
   14556:	4b0e      	ldr	r3, [pc, #56]	; (14590 <frexp+0x6c>)
   14558:	f001 fb58 	bl	15c0c <__aeabi_dmul>
   1455c:	f06f 0735 	mvn.w	r7, #53	; 0x35
   14560:	4604      	mov	r4, r0
   14562:	460a      	mov	r2, r1
   14564:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   14568:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
   1456c:	151b      	asrs	r3, r3, #20
   1456e:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
   14572:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
   14576:	443b      	add	r3, r7
   14578:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
   1457c:	6033      	str	r3, [r6, #0]
   1457e:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
   14582:	4620      	mov	r0, r4
   14584:	4629      	mov	r1, r5
   14586:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   14588:	7fefffff 	.word	0x7fefffff
   1458c:	7ff00000 	.word	0x7ff00000
   14590:	43500000 	.word	0x43500000

00014594 <__sread>:
   14594:	b510      	push	{r4, lr}
   14596:	460c      	mov	r4, r1
   14598:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1459c:	f001 f83a 	bl	15614 <_read_r>
   145a0:	2800      	cmp	r0, #0
   145a2:	db03      	blt.n	145ac <__sread+0x18>
   145a4:	6d23      	ldr	r3, [r4, #80]	; 0x50
   145a6:	4403      	add	r3, r0
   145a8:	6523      	str	r3, [r4, #80]	; 0x50
   145aa:	bd10      	pop	{r4, pc}
   145ac:	89a3      	ldrh	r3, [r4, #12]
   145ae:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   145b2:	81a3      	strh	r3, [r4, #12]
   145b4:	bd10      	pop	{r4, pc}
   145b6:	bf00      	nop

000145b8 <__seofread>:
   145b8:	2000      	movs	r0, #0
   145ba:	4770      	bx	lr

000145bc <__swrite>:
   145bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   145c0:	460c      	mov	r4, r1
   145c2:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   145c6:	461f      	mov	r7, r3
   145c8:	05cb      	lsls	r3, r1, #23
   145ca:	4605      	mov	r5, r0
   145cc:	4616      	mov	r6, r2
   145ce:	d40b      	bmi.n	145e8 <__swrite+0x2c>
   145d0:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   145d4:	81a1      	strh	r1, [r4, #12]
   145d6:	463b      	mov	r3, r7
   145d8:	4632      	mov	r2, r6
   145da:	4628      	mov	r0, r5
   145dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   145e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   145e4:	f7fd bb32 	b.w	11c4c <_write_r>
   145e8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   145ec:	2302      	movs	r3, #2
   145ee:	2200      	movs	r2, #0
   145f0:	f000 fffa 	bl	155e8 <_lseek_r>
   145f4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   145f8:	e7ea      	b.n	145d0 <__swrite+0x14>
   145fa:	bf00      	nop

000145fc <__sseek>:
   145fc:	b510      	push	{r4, lr}
   145fe:	460c      	mov	r4, r1
   14600:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   14604:	f000 fff0 	bl	155e8 <_lseek_r>
   14608:	89a3      	ldrh	r3, [r4, #12]
   1460a:	1c42      	adds	r2, r0, #1
   1460c:	bf0e      	itee	eq
   1460e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   14612:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   14616:	6520      	strne	r0, [r4, #80]	; 0x50
   14618:	81a3      	strh	r3, [r4, #12]
   1461a:	bd10      	pop	{r4, pc}

0001461c <__sclose>:
   1461c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   14620:	f000 bf36 	b.w	15490 <_close_r>

00014624 <strncpy>:
   14624:	b530      	push	{r4, r5, lr}
   14626:	ea40 0401 	orr.w	r4, r0, r1
   1462a:	07a3      	lsls	r3, r4, #30
   1462c:	d122      	bne.n	14674 <strncpy+0x50>
   1462e:	2a03      	cmp	r2, #3
   14630:	d920      	bls.n	14674 <strncpy+0x50>
   14632:	460b      	mov	r3, r1
   14634:	4684      	mov	ip, r0
   14636:	4619      	mov	r1, r3
   14638:	f853 5b04 	ldr.w	r5, [r3], #4
   1463c:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
   14640:	ea24 0405 	bic.w	r4, r4, r5
   14644:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
   14648:	d115      	bne.n	14676 <strncpy+0x52>
   1464a:	3a04      	subs	r2, #4
   1464c:	2a03      	cmp	r2, #3
   1464e:	4619      	mov	r1, r3
   14650:	f84c 5b04 	str.w	r5, [ip], #4
   14654:	d8ef      	bhi.n	14636 <strncpy+0x12>
   14656:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   1465a:	b152      	cbz	r2, 14672 <strncpy+0x4e>
   1465c:	4663      	mov	r3, ip
   1465e:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
   14662:	1e54      	subs	r4, r2, #1
   14664:	f803 1b01 	strb.w	r1, [r3], #1
   14668:	b141      	cbz	r1, 1467c <strncpy+0x58>
   1466a:	4622      	mov	r2, r4
   1466c:	469c      	mov	ip, r3
   1466e:	2a00      	cmp	r2, #0
   14670:	d1f4      	bne.n	1465c <strncpy+0x38>
   14672:	bd30      	pop	{r4, r5, pc}
   14674:	4684      	mov	ip, r0
   14676:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   1467a:	e7ee      	b.n	1465a <strncpy+0x36>
   1467c:	4462      	add	r2, ip
   1467e:	2c00      	cmp	r4, #0
   14680:	d0f7      	beq.n	14672 <strncpy+0x4e>
   14682:	f803 1b01 	strb.w	r1, [r3], #1
   14686:	4293      	cmp	r3, r2
   14688:	d1fb      	bne.n	14682 <strncpy+0x5e>
   1468a:	bd30      	pop	{r4, r5, pc}

0001468c <__ssprint_r>:
   1468c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14690:	6893      	ldr	r3, [r2, #8]
   14692:	4691      	mov	r9, r2
   14694:	b083      	sub	sp, #12
   14696:	2b00      	cmp	r3, #0
   14698:	d06e      	beq.n	14778 <__ssprint_r+0xec>
   1469a:	6817      	ldr	r7, [r2, #0]
   1469c:	4680      	mov	r8, r0
   1469e:	460c      	mov	r4, r1
   146a0:	6808      	ldr	r0, [r1, #0]
   146a2:	688d      	ldr	r5, [r1, #8]
   146a4:	3708      	adds	r7, #8
   146a6:	e044      	b.n	14732 <__ssprint_r+0xa6>
   146a8:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
   146ac:	f41c 6f90 	tst.w	ip, #1152	; 0x480
   146b0:	d02e      	beq.n	14710 <__ssprint_r+0x84>
   146b2:	e9d4 1304 	ldrd	r1, r3, [r4, #16]
   146b6:	1a45      	subs	r5, r0, r1
   146b8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   146bc:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
   146c0:	19aa      	adds	r2, r5, r6
   146c2:	ea4f 0a63 	mov.w	sl, r3, asr #1
   146c6:	1c53      	adds	r3, r2, #1
   146c8:	4553      	cmp	r3, sl
   146ca:	4652      	mov	r2, sl
   146cc:	bf84      	itt	hi
   146ce:	469a      	movhi	sl, r3
   146d0:	4652      	movhi	r2, sl
   146d2:	f41c 6f80 	tst.w	ip, #1024	; 0x400
   146d6:	d036      	beq.n	14746 <__ssprint_r+0xba>
   146d8:	4611      	mov	r1, r2
   146da:	4640      	mov	r0, r8
   146dc:	f7f7 fd3c 	bl	c158 <_malloc_r>
   146e0:	2800      	cmp	r0, #0
   146e2:	d03a      	beq.n	1475a <__ssprint_r+0xce>
   146e4:	462a      	mov	r2, r5
   146e6:	6921      	ldr	r1, [r4, #16]
   146e8:	9001      	str	r0, [sp, #4]
   146ea:	f7f8 f85d 	bl	c7a8 <memcpy>
   146ee:	89a2      	ldrh	r2, [r4, #12]
   146f0:	9b01      	ldr	r3, [sp, #4]
   146f2:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   146f6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   146fa:	81a2      	strh	r2, [r4, #12]
   146fc:	1958      	adds	r0, r3, r5
   146fe:	ebaa 0505 	sub.w	r5, sl, r5
   14702:	60a5      	str	r5, [r4, #8]
   14704:	f8c4 a014 	str.w	sl, [r4, #20]
   14708:	4635      	mov	r5, r6
   1470a:	46b2      	mov	sl, r6
   1470c:	6123      	str	r3, [r4, #16]
   1470e:	6020      	str	r0, [r4, #0]
   14710:	4659      	mov	r1, fp
   14712:	4652      	mov	r2, sl
   14714:	f7f8 f8be 	bl	c894 <memmove>
   14718:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1471c:	68a1      	ldr	r1, [r4, #8]
   1471e:	6820      	ldr	r0, [r4, #0]
   14720:	1b4d      	subs	r5, r1, r5
   14722:	4450      	add	r0, sl
   14724:	1b9e      	subs	r6, r3, r6
   14726:	60a5      	str	r5, [r4, #8]
   14728:	6020      	str	r0, [r4, #0]
   1472a:	f8c9 6008 	str.w	r6, [r9, #8]
   1472e:	b31e      	cbz	r6, 14778 <__ssprint_r+0xec>
   14730:	3708      	adds	r7, #8
   14732:	e957 b602 	ldrd	fp, r6, [r7, #-8]
   14736:	2e00      	cmp	r6, #0
   14738:	d0fa      	beq.n	14730 <__ssprint_r+0xa4>
   1473a:	42b5      	cmp	r5, r6
   1473c:	46aa      	mov	sl, r5
   1473e:	d9b3      	bls.n	146a8 <__ssprint_r+0x1c>
   14740:	4635      	mov	r5, r6
   14742:	46b2      	mov	sl, r6
   14744:	e7e4      	b.n	14710 <__ssprint_r+0x84>
   14746:	4640      	mov	r0, r8
   14748:	f7f8 fa7a 	bl	cc40 <_realloc_r>
   1474c:	4603      	mov	r3, r0
   1474e:	2800      	cmp	r0, #0
   14750:	d1d4      	bne.n	146fc <__ssprint_r+0x70>
   14752:	4640      	mov	r0, r8
   14754:	6921      	ldr	r1, [r4, #16]
   14756:	f7fe fef1 	bl	1353c <_free_r>
   1475a:	230c      	movs	r3, #12
   1475c:	2200      	movs	r2, #0
   1475e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14762:	f8c8 3000 	str.w	r3, [r8]
   14766:	89a3      	ldrh	r3, [r4, #12]
   14768:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1476c:	81a3      	strh	r3, [r4, #12]
   1476e:	e9c9 2201 	strd	r2, r2, [r9, #4]
   14772:	b003      	add	sp, #12
   14774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14778:	2300      	movs	r3, #0
   1477a:	4618      	mov	r0, r3
   1477c:	f8c9 3004 	str.w	r3, [r9, #4]
   14780:	b003      	add	sp, #12
   14782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14786:	bf00      	nop

00014788 <_svfiprintf_r>:
   14788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1478c:	b0bd      	sub	sp, #244	; 0xf4
   1478e:	9304      	str	r3, [sp, #16]
   14790:	898b      	ldrh	r3, [r1, #12]
   14792:	4691      	mov	r9, r2
   14794:	061c      	lsls	r4, r3, #24
   14796:	e9cd 1005 	strd	r1, r0, [sp, #20]
   1479a:	d503      	bpl.n	147a4 <_svfiprintf_r+0x1c>
   1479c:	690b      	ldr	r3, [r1, #16]
   1479e:	2b00      	cmp	r3, #0
   147a0:	f000 84d7 	beq.w	15152 <_svfiprintf_r+0x9ca>
   147a4:	ab13      	add	r3, sp, #76	; 0x4c
   147a6:	9310      	str	r3, [sp, #64]	; 0x40
   147a8:	2300      	movs	r3, #0
   147aa:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
   147ae:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
   147b2:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
   147b6:	af13      	add	r7, sp, #76	; 0x4c
   147b8:	9302      	str	r3, [sp, #8]
   147ba:	f899 3000 	ldrb.w	r3, [r9]
   147be:	2b00      	cmp	r3, #0
   147c0:	f000 8129 	beq.w	14a16 <_svfiprintf_r+0x28e>
   147c4:	464c      	mov	r4, r9
   147c6:	e004      	b.n	147d2 <_svfiprintf_r+0x4a>
   147c8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   147cc:	2b00      	cmp	r3, #0
   147ce:	f000 8108 	beq.w	149e2 <_svfiprintf_r+0x25a>
   147d2:	2b25      	cmp	r3, #37	; 0x25
   147d4:	d1f8      	bne.n	147c8 <_svfiprintf_r+0x40>
   147d6:	ebb4 0509 	subs.w	r5, r4, r9
   147da:	f040 8105 	bne.w	149e8 <_svfiprintf_r+0x260>
   147de:	7823      	ldrb	r3, [r4, #0]
   147e0:	2b00      	cmp	r3, #0
   147e2:	f000 8118 	beq.w	14a16 <_svfiprintf_r+0x28e>
   147e6:	f04f 0300 	mov.w	r3, #0
   147ea:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   147ee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   147f2:	f04f 0b00 	mov.w	fp, #0
   147f6:	262b      	movs	r6, #43	; 0x2b
   147f8:	9301      	str	r3, [sp, #4]
   147fa:	7863      	ldrb	r3, [r4, #1]
   147fc:	f8cd b00c 	str.w	fp, [sp, #12]
   14800:	f104 0901 	add.w	r9, r4, #1
   14804:	f109 0901 	add.w	r9, r9, #1
   14808:	f1a3 0220 	sub.w	r2, r3, #32
   1480c:	2a5a      	cmp	r2, #90	; 0x5a
   1480e:	f200 8113 	bhi.w	14a38 <_svfiprintf_r+0x2b0>
   14812:	e8df f012 	tbh	[pc, r2, lsl #1]
   14816:	0296      	.short	0x0296
   14818:	01110111 	.word	0x01110111
   1481c:	01110291 	.word	0x01110291
   14820:	01110111 	.word	0x01110111
   14824:	0111026f 	.word	0x0111026f
   14828:	006a0111 	.word	0x006a0111
   1482c:	01110212 	.word	0x01110212
   14830:	01f800e1 	.word	0x01f800e1
   14834:	02170111 	.word	0x02170111
   14838:	005b005b 	.word	0x005b005b
   1483c:	005b005b 	.word	0x005b005b
   14840:	005b005b 	.word	0x005b005b
   14844:	005b005b 	.word	0x005b005b
   14848:	0111005b 	.word	0x0111005b
   1484c:	01110111 	.word	0x01110111
   14850:	01110111 	.word	0x01110111
   14854:	01110111 	.word	0x01110111
   14858:	01110111 	.word	0x01110111
   1485c:	007901b1 	.word	0x007901b1
   14860:	01110111 	.word	0x01110111
   14864:	01110111 	.word	0x01110111
   14868:	01110111 	.word	0x01110111
   1486c:	01110111 	.word	0x01110111
   14870:	01110111 	.word	0x01110111
   14874:	011100a3 	.word	0x011100a3
   14878:	01110111 	.word	0x01110111
   1487c:	01110196 	.word	0x01110196
   14880:	0111022d 	.word	0x0111022d
   14884:	04650111 	.word	0x04650111
   14888:	01110111 	.word	0x01110111
   1488c:	01110111 	.word	0x01110111
   14890:	01110111 	.word	0x01110111
   14894:	01110111 	.word	0x01110111
   14898:	01110111 	.word	0x01110111
   1489c:	007b01b1 	.word	0x007b01b1
   148a0:	01110111 	.word	0x01110111
   148a4:	02620111 	.word	0x02620111
   148a8:	0074007b 	.word	0x0074007b
   148ac:	02550111 	.word	0x02550111
   148b0:	023e0111 	.word	0x023e0111
   148b4:	021c00a5 	.word	0x021c00a5
   148b8:	01110074 	.word	0x01110074
   148bc:	00710196 	.word	0x00710196
   148c0:	01110463 	.word	0x01110463
   148c4:	04840111 	.word	0x04840111
   148c8:	00710111 	.word	0x00710111
   148cc:	2100      	movs	r1, #0
   148ce:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   148d2:	f819 3b01 	ldrb.w	r3, [r9], #1
   148d6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   148da:	eb02 0141 	add.w	r1, r2, r1, lsl #1
   148de:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   148e2:	2a09      	cmp	r2, #9
   148e4:	d9f5      	bls.n	148d2 <_svfiprintf_r+0x14a>
   148e6:	9103      	str	r1, [sp, #12]
   148e8:	e78e      	b.n	14808 <_svfiprintf_r+0x80>
   148ea:	9b04      	ldr	r3, [sp, #16]
   148ec:	f853 2b04 	ldr.w	r2, [r3], #4
   148f0:	2a00      	cmp	r2, #0
   148f2:	e9cd 2303 	strd	r2, r3, [sp, #12]
   148f6:	db6c      	blt.n	149d2 <_svfiprintf_r+0x24a>
   148f8:	f899 3000 	ldrb.w	r3, [r9]
   148fc:	e782      	b.n	14804 <_svfiprintf_r+0x7c>
   148fe:	f899 3000 	ldrb.w	r3, [r9]
   14902:	f04b 0b20 	orr.w	fp, fp, #32
   14906:	e77d      	b.n	14804 <_svfiprintf_r+0x7c>
   14908:	f04b 0b10 	orr.w	fp, fp, #16
   1490c:	f01b 0f20 	tst.w	fp, #32
   14910:	9d04      	ldr	r5, [sp, #16]
   14912:	f000 8108 	beq.w	14b26 <_svfiprintf_r+0x39e>
   14916:	3507      	adds	r5, #7
   14918:	f025 0507 	bic.w	r5, r5, #7
   1491c:	462a      	mov	r2, r5
   1491e:	686b      	ldr	r3, [r5, #4]
   14920:	f852 5b08 	ldr.w	r5, [r2], #8
   14924:	461e      	mov	r6, r3
   14926:	9204      	str	r2, [sp, #16]
   14928:	2b00      	cmp	r3, #0
   1492a:	f2c0 8147 	blt.w	14bbc <_svfiprintf_r+0x434>
   1492e:	9b01      	ldr	r3, [sp, #4]
   14930:	3301      	adds	r3, #1
   14932:	f000 8443 	beq.w	151bc <_svfiprintf_r+0xa34>
   14936:	ea55 0306 	orrs.w	r3, r5, r6
   1493a:	f02b 0880 	bic.w	r8, fp, #128	; 0x80
   1493e:	f000 8357 	beq.w	14ff0 <_svfiprintf_r+0x868>
   14942:	2d0a      	cmp	r5, #10
   14944:	f176 0300 	sbcs.w	r3, r6, #0
   14948:	f080 8380 	bcs.w	1504c <_svfiprintf_r+0x8c4>
   1494c:	3530      	adds	r5, #48	; 0x30
   1494e:	46c3      	mov	fp, r8
   14950:	2601      	movs	r6, #1
   14952:	f88d 50ef 	strb.w	r5, [sp, #239]	; 0xef
   14956:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   1495a:	e02e      	b.n	149ba <_svfiprintf_r+0x232>
   1495c:	f04b 0b10 	orr.w	fp, fp, #16
   14960:	f01b 0620 	ands.w	r6, fp, #32
   14964:	f000 80d2 	beq.w	14b0c <_svfiprintf_r+0x384>
   14968:	9d04      	ldr	r5, [sp, #16]
   1496a:	3507      	adds	r5, #7
   1496c:	f025 0507 	bic.w	r5, r5, #7
   14970:	462b      	mov	r3, r5
   14972:	686e      	ldr	r6, [r5, #4]
   14974:	f853 5b08 	ldr.w	r5, [r3], #8
   14978:	9304      	str	r3, [sp, #16]
   1497a:	2300      	movs	r3, #0
   1497c:	f42b 6880 	bic.w	r8, fp, #1024	; 0x400
   14980:	f04f 0200 	mov.w	r2, #0
   14984:	f88d 203b 	strb.w	r2, [sp, #59]	; 0x3b
   14988:	9a01      	ldr	r2, [sp, #4]
   1498a:	1c51      	adds	r1, r2, #1
   1498c:	f000 8123 	beq.w	14bd6 <_svfiprintf_r+0x44e>
   14990:	ea55 0106 	orrs.w	r1, r5, r6
   14994:	f028 0b80 	bic.w	fp, r8, #128	; 0x80
   14998:	f040 8294 	bne.w	14ec4 <_svfiprintf_r+0x73c>
   1499c:	2a00      	cmp	r2, #0
   1499e:	f040 8410 	bne.w	151c2 <_svfiprintf_r+0xa3a>
   149a2:	2b00      	cmp	r3, #0
   149a4:	f040 8329 	bne.w	14ffa <_svfiprintf_r+0x872>
   149a8:	f018 0601 	ands.w	r6, r8, #1
   149ac:	f000 838a 	beq.w	150c4 <_svfiprintf_r+0x93c>
   149b0:	2330      	movs	r3, #48	; 0x30
   149b2:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   149b6:	f88d 30ef 	strb.w	r3, [sp, #239]	; 0xef
   149ba:	f8dd 8004 	ldr.w	r8, [sp, #4]
   149be:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   149c2:	45b0      	cmp	r8, r6
   149c4:	bfb8      	it	lt
   149c6:	46b0      	movlt	r8, r6
   149c8:	2b00      	cmp	r3, #0
   149ca:	d043      	beq.n	14a54 <_svfiprintf_r+0x2cc>
   149cc:	f108 0801 	add.w	r8, r8, #1
   149d0:	e040      	b.n	14a54 <_svfiprintf_r+0x2cc>
   149d2:	9b03      	ldr	r3, [sp, #12]
   149d4:	425b      	negs	r3, r3
   149d6:	9303      	str	r3, [sp, #12]
   149d8:	f899 3000 	ldrb.w	r3, [r9]
   149dc:	f04b 0b04 	orr.w	fp, fp, #4
   149e0:	e710      	b.n	14804 <_svfiprintf_r+0x7c>
   149e2:	ebb4 0509 	subs.w	r5, r4, r9
   149e6:	d016      	beq.n	14a16 <_svfiprintf_r+0x28e>
   149e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   149ea:	e9c7 9500 	strd	r9, r5, [r7]
   149ee:	442b      	add	r3, r5
   149f0:	9312      	str	r3, [sp, #72]	; 0x48
   149f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   149f4:	3301      	adds	r3, #1
   149f6:	2b07      	cmp	r3, #7
   149f8:	9311      	str	r3, [sp, #68]	; 0x44
   149fa:	dc04      	bgt.n	14a06 <_svfiprintf_r+0x27e>
   149fc:	3708      	adds	r7, #8
   149fe:	9b02      	ldr	r3, [sp, #8]
   14a00:	442b      	add	r3, r5
   14a02:	9302      	str	r3, [sp, #8]
   14a04:	e6eb      	b.n	147de <_svfiprintf_r+0x56>
   14a06:	aa10      	add	r2, sp, #64	; 0x40
   14a08:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   14a0c:	f7ff fe3e 	bl	1468c <__ssprint_r>
   14a10:	b928      	cbnz	r0, 14a1e <_svfiprintf_r+0x296>
   14a12:	af13      	add	r7, sp, #76	; 0x4c
   14a14:	e7f3      	b.n	149fe <_svfiprintf_r+0x276>
   14a16:	9b12      	ldr	r3, [sp, #72]	; 0x48
   14a18:	2b00      	cmp	r3, #0
   14a1a:	f040 841c 	bne.w	15256 <_svfiprintf_r+0xace>
   14a1e:	9b05      	ldr	r3, [sp, #20]
   14a20:	899b      	ldrh	r3, [r3, #12]
   14a22:	f013 0f40 	tst.w	r3, #64	; 0x40
   14a26:	9b02      	ldr	r3, [sp, #8]
   14a28:	bf18      	it	ne
   14a2a:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
   14a2e:	9302      	str	r3, [sp, #8]
   14a30:	9802      	ldr	r0, [sp, #8]
   14a32:	b03d      	add	sp, #244	; 0xf4
   14a34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a38:	2b00      	cmp	r3, #0
   14a3a:	d0ec      	beq.n	14a16 <_svfiprintf_r+0x28e>
   14a3c:	f04f 0801 	mov.w	r8, #1
   14a40:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   14a44:	f04f 0300 	mov.w	r3, #0
   14a48:	4646      	mov	r6, r8
   14a4a:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14a4e:	ac23      	add	r4, sp, #140	; 0x8c
   14a50:	2300      	movs	r3, #0
   14a52:	9301      	str	r3, [sp, #4]
   14a54:	f01b 0302 	ands.w	r3, fp, #2
   14a58:	9307      	str	r3, [sp, #28]
   14a5a:	bf18      	it	ne
   14a5c:	f108 0802 	addne.w	r8, r8, #2
   14a60:	f01b 0384 	ands.w	r3, fp, #132	; 0x84
   14a64:	9308      	str	r3, [sp, #32]
   14a66:	d105      	bne.n	14a74 <_svfiprintf_r+0x2ec>
   14a68:	9b03      	ldr	r3, [sp, #12]
   14a6a:	eba3 0508 	sub.w	r5, r3, r8
   14a6e:	2d00      	cmp	r5, #0
   14a70:	f300 822a 	bgt.w	14ec8 <_svfiprintf_r+0x740>
   14a74:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14a78:	f89d 003b 	ldrb.w	r0, [sp, #59]	; 0x3b
   14a7c:	b160      	cbz	r0, 14a98 <_svfiprintf_r+0x310>
   14a7e:	2001      	movs	r0, #1
   14a80:	3201      	adds	r2, #1
   14a82:	3101      	adds	r1, #1
   14a84:	6078      	str	r0, [r7, #4]
   14a86:	2a07      	cmp	r2, #7
   14a88:	f10d 003b 	add.w	r0, sp, #59	; 0x3b
   14a8c:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14a90:	6038      	str	r0, [r7, #0]
   14a92:	f300 8256 	bgt.w	14f42 <_svfiprintf_r+0x7ba>
   14a96:	3708      	adds	r7, #8
   14a98:	9b07      	ldr	r3, [sp, #28]
   14a9a:	b15b      	cbz	r3, 14ab4 <_svfiprintf_r+0x32c>
   14a9c:	2302      	movs	r3, #2
   14a9e:	3201      	adds	r2, #1
   14aa0:	3102      	adds	r1, #2
   14aa2:	607b      	str	r3, [r7, #4]
   14aa4:	2a07      	cmp	r2, #7
   14aa6:	ab0f      	add	r3, sp, #60	; 0x3c
   14aa8:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14aac:	603b      	str	r3, [r7, #0]
   14aae:	f300 825b 	bgt.w	14f68 <_svfiprintf_r+0x7e0>
   14ab2:	3708      	adds	r7, #8
   14ab4:	9b08      	ldr	r3, [sp, #32]
   14ab6:	2b80      	cmp	r3, #128	; 0x80
   14ab8:	f000 816b 	beq.w	14d92 <_svfiprintf_r+0x60a>
   14abc:	9b01      	ldr	r3, [sp, #4]
   14abe:	eba3 0a06 	sub.w	sl, r3, r6
   14ac2:	f1ba 0f00 	cmp.w	sl, #0
   14ac6:	f300 81ad 	bgt.w	14e24 <_svfiprintf_r+0x69c>
   14aca:	3201      	adds	r2, #1
   14acc:	4431      	add	r1, r6
   14ace:	2a07      	cmp	r2, #7
   14ad0:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14ad4:	603c      	str	r4, [r7, #0]
   14ad6:	607e      	str	r6, [r7, #4]
   14ad8:	f300 81e0 	bgt.w	14e9c <_svfiprintf_r+0x714>
   14adc:	3708      	adds	r7, #8
   14ade:	f01b 0f04 	tst.w	fp, #4
   14ae2:	d005      	beq.n	14af0 <_svfiprintf_r+0x368>
   14ae4:	9b03      	ldr	r3, [sp, #12]
   14ae6:	eba3 0408 	sub.w	r4, r3, r8
   14aea:	2c00      	cmp	r4, #0
   14aec:	f300 8248 	bgt.w	14f80 <_svfiprintf_r+0x7f8>
   14af0:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
   14af4:	4542      	cmp	r2, r8
   14af6:	bfac      	ite	ge
   14af8:	189b      	addge	r3, r3, r2
   14afa:	4443      	addlt	r3, r8
   14afc:	9302      	str	r3, [sp, #8]
   14afe:	2900      	cmp	r1, #0
   14b00:	f040 81d7 	bne.w	14eb2 <_svfiprintf_r+0x72a>
   14b04:	2300      	movs	r3, #0
   14b06:	af13      	add	r7, sp, #76	; 0x4c
   14b08:	9311      	str	r3, [sp, #68]	; 0x44
   14b0a:	e656      	b.n	147ba <_svfiprintf_r+0x32>
   14b0c:	f01b 0310 	ands.w	r3, fp, #16
   14b10:	d145      	bne.n	14b9e <_svfiprintf_r+0x416>
   14b12:	f01b 0240 	ands.w	r2, fp, #64	; 0x40
   14b16:	d03e      	beq.n	14b96 <_svfiprintf_r+0x40e>
   14b18:	9d04      	ldr	r5, [sp, #16]
   14b1a:	461e      	mov	r6, r3
   14b1c:	f855 3b04 	ldr.w	r3, [r5], #4
   14b20:	9504      	str	r5, [sp, #16]
   14b22:	b29d      	uxth	r5, r3
   14b24:	e729      	b.n	1497a <_svfiprintf_r+0x1f2>
   14b26:	f855 3b04 	ldr.w	r3, [r5], #4
   14b2a:	f01b 0f10 	tst.w	fp, #16
   14b2e:	9504      	str	r5, [sp, #16]
   14b30:	d13e      	bne.n	14bb0 <_svfiprintf_r+0x428>
   14b32:	f01b 0f40 	tst.w	fp, #64	; 0x40
   14b36:	d037      	beq.n	14ba8 <_svfiprintf_r+0x420>
   14b38:	f343 36c0 	sbfx	r6, r3, #15, #1
   14b3c:	b21d      	sxth	r5, r3
   14b3e:	4633      	mov	r3, r6
   14b40:	e6f2      	b.n	14928 <_svfiprintf_r+0x1a0>
   14b42:	f04f 0300 	mov.w	r3, #0
   14b46:	9d04      	ldr	r5, [sp, #16]
   14b48:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14b4c:	f855 4b04 	ldr.w	r4, [r5], #4
   14b50:	2c00      	cmp	r4, #0
   14b52:	f000 8350 	beq.w	151f6 <_svfiprintf_r+0xa6e>
   14b56:	9b01      	ldr	r3, [sp, #4]
   14b58:	1c58      	adds	r0, r3, #1
   14b5a:	f000 82f2 	beq.w	15142 <_svfiprintf_r+0x9ba>
   14b5e:	461a      	mov	r2, r3
   14b60:	2100      	movs	r1, #0
   14b62:	4620      	mov	r0, r4
   14b64:	f7f7 fda4 	bl	c6b0 <memchr>
   14b68:	2800      	cmp	r0, #0
   14b6a:	f000 837b 	beq.w	15264 <_svfiprintf_r+0xadc>
   14b6e:	2300      	movs	r3, #0
   14b70:	9504      	str	r5, [sp, #16]
   14b72:	1b06      	subs	r6, r0, r4
   14b74:	9301      	str	r3, [sp, #4]
   14b76:	e720      	b.n	149ba <_svfiprintf_r+0x232>
   14b78:	f04f 0300 	mov.w	r3, #0
   14b7c:	f04f 0801 	mov.w	r8, #1
   14b80:	9d04      	ldr	r5, [sp, #16]
   14b82:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14b86:	f855 3b04 	ldr.w	r3, [r5], #4
   14b8a:	4646      	mov	r6, r8
   14b8c:	ac23      	add	r4, sp, #140	; 0x8c
   14b8e:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   14b92:	9504      	str	r5, [sp, #16]
   14b94:	e75c      	b.n	14a50 <_svfiprintf_r+0x2c8>
   14b96:	f41b 7600 	ands.w	r6, fp, #512	; 0x200
   14b9a:	f040 8345 	bne.w	15228 <_svfiprintf_r+0xaa0>
   14b9e:	9b04      	ldr	r3, [sp, #16]
   14ba0:	f853 5b04 	ldr.w	r5, [r3], #4
   14ba4:	9304      	str	r3, [sp, #16]
   14ba6:	e6e8      	b.n	1497a <_svfiprintf_r+0x1f2>
   14ba8:	f41b 7f00 	tst.w	fp, #512	; 0x200
   14bac:	f040 8336 	bne.w	1521c <_svfiprintf_r+0xa94>
   14bb0:	17de      	asrs	r6, r3, #31
   14bb2:	461d      	mov	r5, r3
   14bb4:	4633      	mov	r3, r6
   14bb6:	2b00      	cmp	r3, #0
   14bb8:	f6bf aeb9 	bge.w	1492e <_svfiprintf_r+0x1a6>
   14bbc:	232d      	movs	r3, #45	; 0x2d
   14bbe:	9a01      	ldr	r2, [sp, #4]
   14bc0:	426d      	negs	r5, r5
   14bc2:	eb66 0646 	sbc.w	r6, r6, r6, lsl #1
   14bc6:	1c51      	adds	r1, r2, #1
   14bc8:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14bcc:	46d8      	mov	r8, fp
   14bce:	f04f 0301 	mov.w	r3, #1
   14bd2:	f47f aedd 	bne.w	14990 <_svfiprintf_r+0x208>
   14bd6:	2b01      	cmp	r3, #1
   14bd8:	f43f aeb3 	beq.w	14942 <_svfiprintf_r+0x1ba>
   14bdc:	2b02      	cmp	r3, #2
   14bde:	ac3c      	add	r4, sp, #240	; 0xf0
   14be0:	f040 80ba 	bne.w	14d58 <_svfiprintf_r+0x5d0>
   14be4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   14be6:	f005 030f 	and.w	r3, r5, #15
   14bea:	5cd3      	ldrb	r3, [r2, r3]
   14bec:	092d      	lsrs	r5, r5, #4
   14bee:	ea45 7506 	orr.w	r5, r5, r6, lsl #28
   14bf2:	0936      	lsrs	r6, r6, #4
   14bf4:	f804 3d01 	strb.w	r3, [r4, #-1]!
   14bf8:	ea55 0306 	orrs.w	r3, r5, r6
   14bfc:	d1f3      	bne.n	14be6 <_svfiprintf_r+0x45e>
   14bfe:	ab3c      	add	r3, sp, #240	; 0xf0
   14c00:	46c3      	mov	fp, r8
   14c02:	1b1e      	subs	r6, r3, r4
   14c04:	e6d9      	b.n	149ba <_svfiprintf_r+0x232>
   14c06:	4649      	mov	r1, r9
   14c08:	f811 3b01 	ldrb.w	r3, [r1], #1
   14c0c:	2b2a      	cmp	r3, #42	; 0x2a
   14c0e:	f000 8348 	beq.w	152a2 <_svfiprintf_r+0xb1a>
   14c12:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   14c16:	2a09      	cmp	r2, #9
   14c18:	4689      	mov	r9, r1
   14c1a:	bf98      	it	ls
   14c1c:	2100      	movls	r1, #0
   14c1e:	f200 8331 	bhi.w	15284 <_svfiprintf_r+0xafc>
   14c22:	f819 3b01 	ldrb.w	r3, [r9], #1
   14c26:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   14c2a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
   14c2e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   14c32:	2a09      	cmp	r2, #9
   14c34:	d9f5      	bls.n	14c22 <_svfiprintf_r+0x49a>
   14c36:	9101      	str	r1, [sp, #4]
   14c38:	e5e6      	b.n	14808 <_svfiprintf_r+0x80>
   14c3a:	f899 3000 	ldrb.w	r3, [r9]
   14c3e:	f88d 603b 	strb.w	r6, [sp, #59]	; 0x3b
   14c42:	e5df      	b.n	14804 <_svfiprintf_r+0x7c>
   14c44:	f899 3000 	ldrb.w	r3, [r9]
   14c48:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   14c4c:	e5da      	b.n	14804 <_svfiprintf_r+0x7c>
   14c4e:	2230      	movs	r2, #48	; 0x30
   14c50:	f88d 203c 	strb.w	r2, [sp, #60]	; 0x3c
   14c54:	2278      	movs	r2, #120	; 0x78
   14c56:	9b04      	ldr	r3, [sp, #16]
   14c58:	f88d 203d 	strb.w	r2, [sp, #61]	; 0x3d
   14c5c:	f853 5b04 	ldr.w	r5, [r3], #4
   14c60:	4abe      	ldr	r2, [pc, #760]	; (14f5c <_svfiprintf_r+0x7d4>)
   14c62:	9304      	str	r3, [sp, #16]
   14c64:	2600      	movs	r6, #0
   14c66:	2302      	movs	r3, #2
   14c68:	f04b 0802 	orr.w	r8, fp, #2
   14c6c:	9209      	str	r2, [sp, #36]	; 0x24
   14c6e:	e687      	b.n	14980 <_svfiprintf_r+0x1f8>
   14c70:	f04b 0810 	orr.w	r8, fp, #16
   14c74:	f018 0620 	ands.w	r6, r8, #32
   14c78:	f000 81c4 	beq.w	15004 <_svfiprintf_r+0x87c>
   14c7c:	9d04      	ldr	r5, [sp, #16]
   14c7e:	2301      	movs	r3, #1
   14c80:	3507      	adds	r5, #7
   14c82:	f025 0507 	bic.w	r5, r5, #7
   14c86:	462a      	mov	r2, r5
   14c88:	686e      	ldr	r6, [r5, #4]
   14c8a:	f852 5b08 	ldr.w	r5, [r2], #8
   14c8e:	9204      	str	r2, [sp, #16]
   14c90:	e676      	b.n	14980 <_svfiprintf_r+0x1f8>
   14c92:	f01b 0f20 	tst.w	fp, #32
   14c96:	f040 8217 	bne.w	150c8 <_svfiprintf_r+0x940>
   14c9a:	f01b 0f10 	tst.w	fp, #16
   14c9e:	f040 82a2 	bne.w	151e6 <_svfiprintf_r+0xa5e>
   14ca2:	f01b 0f40 	tst.w	fp, #64	; 0x40
   14ca6:	f040 82ce 	bne.w	15246 <_svfiprintf_r+0xabe>
   14caa:	f41b 7f00 	tst.w	fp, #512	; 0x200
   14cae:	f000 829a 	beq.w	151e6 <_svfiprintf_r+0xa5e>
   14cb2:	9d04      	ldr	r5, [sp, #16]
   14cb4:	9a02      	ldr	r2, [sp, #8]
   14cb6:	f855 3b04 	ldr.w	r3, [r5], #4
   14cba:	701a      	strb	r2, [r3, #0]
   14cbc:	9504      	str	r5, [sp, #16]
   14cbe:	e57c      	b.n	147ba <_svfiprintf_r+0x32>
   14cc0:	f899 3000 	ldrb.w	r3, [r9]
   14cc4:	2b6c      	cmp	r3, #108	; 0x6c
   14cc6:	bf03      	ittte	eq
   14cc8:	f899 3001 	ldrbeq.w	r3, [r9, #1]
   14ccc:	f04b 0b20 	orreq.w	fp, fp, #32
   14cd0:	f109 0901 	addeq.w	r9, r9, #1
   14cd4:	f04b 0b10 	orrne.w	fp, fp, #16
   14cd8:	e594      	b.n	14804 <_svfiprintf_r+0x7c>
   14cda:	f899 3000 	ldrb.w	r3, [r9]
   14cde:	2b68      	cmp	r3, #104	; 0x68
   14ce0:	bf03      	ittte	eq
   14ce2:	f899 3001 	ldrbeq.w	r3, [r9, #1]
   14ce6:	f44b 7b00 	orreq.w	fp, fp, #512	; 0x200
   14cea:	f109 0901 	addeq.w	r9, r9, #1
   14cee:	f04b 0b40 	orrne.w	fp, fp, #64	; 0x40
   14cf2:	e587      	b.n	14804 <_svfiprintf_r+0x7c>
   14cf4:	9c06      	ldr	r4, [sp, #24]
   14cf6:	4620      	mov	r0, r4
   14cf8:	f7fe fdac 	bl	13854 <_localeconv_r>
   14cfc:	6843      	ldr	r3, [r0, #4]
   14cfe:	4618      	mov	r0, r3
   14d00:	930b      	str	r3, [sp, #44]	; 0x2c
   14d02:	f7f8 fc17 	bl	d534 <strlen>
   14d06:	4603      	mov	r3, r0
   14d08:	4620      	mov	r0, r4
   14d0a:	930c      	str	r3, [sp, #48]	; 0x30
   14d0c:	461c      	mov	r4, r3
   14d0e:	f7fe fda1 	bl	13854 <_localeconv_r>
   14d12:	6883      	ldr	r3, [r0, #8]
   14d14:	930a      	str	r3, [sp, #40]	; 0x28
   14d16:	2c00      	cmp	r4, #0
   14d18:	f43f adee 	beq.w	148f8 <_svfiprintf_r+0x170>
   14d1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   14d1e:	2b00      	cmp	r3, #0
   14d20:	f43f adea 	beq.w	148f8 <_svfiprintf_r+0x170>
   14d24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   14d26:	781b      	ldrb	r3, [r3, #0]
   14d28:	2b00      	cmp	r3, #0
   14d2a:	f43f ade5 	beq.w	148f8 <_svfiprintf_r+0x170>
   14d2e:	f899 3000 	ldrb.w	r3, [r9]
   14d32:	f44b 6b80 	orr.w	fp, fp, #1024	; 0x400
   14d36:	e565      	b.n	14804 <_svfiprintf_r+0x7c>
   14d38:	f899 3000 	ldrb.w	r3, [r9]
   14d3c:	f04b 0b01 	orr.w	fp, fp, #1
   14d40:	e560      	b.n	14804 <_svfiprintf_r+0x7c>
   14d42:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   14d46:	2b00      	cmp	r3, #0
   14d48:	f47f add6 	bne.w	148f8 <_svfiprintf_r+0x170>
   14d4c:	2320      	movs	r3, #32
   14d4e:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   14d52:	f899 3000 	ldrb.w	r3, [r9]
   14d56:	e555      	b.n	14804 <_svfiprintf_r+0x7c>
   14d58:	f005 0307 	and.w	r3, r5, #7
   14d5c:	08ed      	lsrs	r5, r5, #3
   14d5e:	ea45 7546 	orr.w	r5, r5, r6, lsl #29
   14d62:	08f6      	lsrs	r6, r6, #3
   14d64:	3330      	adds	r3, #48	; 0x30
   14d66:	ea55 0106 	orrs.w	r1, r5, r6
   14d6a:	4622      	mov	r2, r4
   14d6c:	f804 3d01 	strb.w	r3, [r4, #-1]!
   14d70:	d1f2      	bne.n	14d58 <_svfiprintf_r+0x5d0>
   14d72:	f018 0f01 	tst.w	r8, #1
   14d76:	f43f af42 	beq.w	14bfe <_svfiprintf_r+0x476>
   14d7a:	2b30      	cmp	r3, #48	; 0x30
   14d7c:	f43f af3f 	beq.w	14bfe <_svfiprintf_r+0x476>
   14d80:	2330      	movs	r3, #48	; 0x30
   14d82:	3a02      	subs	r2, #2
   14d84:	f804 3c01 	strb.w	r3, [r4, #-1]
   14d88:	ab3c      	add	r3, sp, #240	; 0xf0
   14d8a:	46c3      	mov	fp, r8
   14d8c:	4614      	mov	r4, r2
   14d8e:	1a9e      	subs	r6, r3, r2
   14d90:	e613      	b.n	149ba <_svfiprintf_r+0x232>
   14d92:	9b03      	ldr	r3, [sp, #12]
   14d94:	eba3 0a08 	sub.w	sl, r3, r8
   14d98:	f1ba 0f00 	cmp.w	sl, #0
   14d9c:	f77f ae8e 	ble.w	14abc <_svfiprintf_r+0x334>
   14da0:	f1ba 0f10 	cmp.w	sl, #16
   14da4:	f340 827b 	ble.w	1529e <_svfiprintf_r+0xb16>
   14da8:	4638      	mov	r0, r7
   14daa:	9407      	str	r4, [sp, #28]
   14dac:	4637      	mov	r7, r6
   14dae:	e9dd 6405 	ldrd	r6, r4, [sp, #20]
   14db2:	2310      	movs	r3, #16
   14db4:	4d6a      	ldr	r5, [pc, #424]	; (14f60 <_svfiprintf_r+0x7d8>)
   14db6:	e006      	b.n	14dc6 <_svfiprintf_r+0x63e>
   14db8:	f1aa 0a10 	sub.w	sl, sl, #16
   14dbc:	f1ba 0f10 	cmp.w	sl, #16
   14dc0:	f100 0008 	add.w	r0, r0, #8
   14dc4:	dd19      	ble.n	14dfa <_svfiprintf_r+0x672>
   14dc6:	3201      	adds	r2, #1
   14dc8:	3110      	adds	r1, #16
   14dca:	2a07      	cmp	r2, #7
   14dcc:	e9c0 5300 	strd	r5, r3, [r0]
   14dd0:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14dd4:	ddf0      	ble.n	14db8 <_svfiprintf_r+0x630>
   14dd6:	4631      	mov	r1, r6
   14dd8:	4620      	mov	r0, r4
   14dda:	aa10      	add	r2, sp, #64	; 0x40
   14ddc:	f7ff fc56 	bl	1468c <__ssprint_r>
   14de0:	2800      	cmp	r0, #0
   14de2:	f47f ae1c 	bne.w	14a1e <_svfiprintf_r+0x296>
   14de6:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14dea:	f1aa 0a10 	sub.w	sl, sl, #16
   14dee:	f1ba 0f10 	cmp.w	sl, #16
   14df2:	f04f 0310 	mov.w	r3, #16
   14df6:	a813      	add	r0, sp, #76	; 0x4c
   14df8:	dce5      	bgt.n	14dc6 <_svfiprintf_r+0x63e>
   14dfa:	463e      	mov	r6, r7
   14dfc:	4607      	mov	r7, r0
   14dfe:	9c07      	ldr	r4, [sp, #28]
   14e00:	3201      	adds	r2, #1
   14e02:	4451      	add	r1, sl
   14e04:	2a07      	cmp	r2, #7
   14e06:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14e0a:	603d      	str	r5, [r7, #0]
   14e0c:	f8c7 a004 	str.w	sl, [r7, #4]
   14e10:	f300 81dd 	bgt.w	151ce <_svfiprintf_r+0xa46>
   14e14:	9b01      	ldr	r3, [sp, #4]
   14e16:	3708      	adds	r7, #8
   14e18:	eba3 0a06 	sub.w	sl, r3, r6
   14e1c:	f1ba 0f00 	cmp.w	sl, #0
   14e20:	f77f ae53 	ble.w	14aca <_svfiprintf_r+0x342>
   14e24:	f1ba 0f10 	cmp.w	sl, #16
   14e28:	f340 81ed 	ble.w	15206 <_svfiprintf_r+0xa7e>
   14e2c:	4638      	mov	r0, r7
   14e2e:	9401      	str	r4, [sp, #4]
   14e30:	4637      	mov	r7, r6
   14e32:	e9dd 6405 	ldrd	r6, r4, [sp, #20]
   14e36:	2310      	movs	r3, #16
   14e38:	4d49      	ldr	r5, [pc, #292]	; (14f60 <_svfiprintf_r+0x7d8>)
   14e3a:	e006      	b.n	14e4a <_svfiprintf_r+0x6c2>
   14e3c:	f1aa 0a10 	sub.w	sl, sl, #16
   14e40:	f1ba 0f10 	cmp.w	sl, #16
   14e44:	f100 0008 	add.w	r0, r0, #8
   14e48:	dd19      	ble.n	14e7e <_svfiprintf_r+0x6f6>
   14e4a:	3201      	adds	r2, #1
   14e4c:	3110      	adds	r1, #16
   14e4e:	2a07      	cmp	r2, #7
   14e50:	e9c0 5300 	strd	r5, r3, [r0]
   14e54:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14e58:	ddf0      	ble.n	14e3c <_svfiprintf_r+0x6b4>
   14e5a:	4631      	mov	r1, r6
   14e5c:	4620      	mov	r0, r4
   14e5e:	aa10      	add	r2, sp, #64	; 0x40
   14e60:	f7ff fc14 	bl	1468c <__ssprint_r>
   14e64:	2800      	cmp	r0, #0
   14e66:	f47f adda 	bne.w	14a1e <_svfiprintf_r+0x296>
   14e6a:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14e6e:	f1aa 0a10 	sub.w	sl, sl, #16
   14e72:	f1ba 0f10 	cmp.w	sl, #16
   14e76:	f04f 0310 	mov.w	r3, #16
   14e7a:	a813      	add	r0, sp, #76	; 0x4c
   14e7c:	dce5      	bgt.n	14e4a <_svfiprintf_r+0x6c2>
   14e7e:	463e      	mov	r6, r7
   14e80:	4607      	mov	r7, r0
   14e82:	9c01      	ldr	r4, [sp, #4]
   14e84:	3201      	adds	r2, #1
   14e86:	4451      	add	r1, sl
   14e88:	2a07      	cmp	r2, #7
   14e8a:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14e8e:	603d      	str	r5, [r7, #0]
   14e90:	f8c7 a004 	str.w	sl, [r7, #4]
   14e94:	f300 80ce 	bgt.w	15034 <_svfiprintf_r+0x8ac>
   14e98:	3708      	adds	r7, #8
   14e9a:	e616      	b.n	14aca <_svfiprintf_r+0x342>
   14e9c:	aa10      	add	r2, sp, #64	; 0x40
   14e9e:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   14ea2:	f7ff fbf3 	bl	1468c <__ssprint_r>
   14ea6:	2800      	cmp	r0, #0
   14ea8:	f47f adb9 	bne.w	14a1e <_svfiprintf_r+0x296>
   14eac:	9912      	ldr	r1, [sp, #72]	; 0x48
   14eae:	af13      	add	r7, sp, #76	; 0x4c
   14eb0:	e615      	b.n	14ade <_svfiprintf_r+0x356>
   14eb2:	aa10      	add	r2, sp, #64	; 0x40
   14eb4:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   14eb8:	f7ff fbe8 	bl	1468c <__ssprint_r>
   14ebc:	2800      	cmp	r0, #0
   14ebe:	f43f ae21 	beq.w	14b04 <_svfiprintf_r+0x37c>
   14ec2:	e5ac      	b.n	14a1e <_svfiprintf_r+0x296>
   14ec4:	46d8      	mov	r8, fp
   14ec6:	e686      	b.n	14bd6 <_svfiprintf_r+0x44e>
   14ec8:	2d10      	cmp	r5, #16
   14eca:	f340 81df 	ble.w	1528c <_svfiprintf_r+0xb04>
   14ece:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14ed2:	f8df a090 	ldr.w	sl, [pc, #144]	; 14f64 <_svfiprintf_r+0x7dc>
   14ed6:	4638      	mov	r0, r7
   14ed8:	940d      	str	r4, [sp, #52]	; 0x34
   14eda:	4637      	mov	r7, r6
   14edc:	4654      	mov	r4, sl
   14ede:	2310      	movs	r3, #16
   14ee0:	9e05      	ldr	r6, [sp, #20]
   14ee2:	f8dd a018 	ldr.w	sl, [sp, #24]
   14ee6:	e004      	b.n	14ef2 <_svfiprintf_r+0x76a>
   14ee8:	3d10      	subs	r5, #16
   14eea:	2d10      	cmp	r5, #16
   14eec:	f100 0008 	add.w	r0, r0, #8
   14ef0:	dd17      	ble.n	14f22 <_svfiprintf_r+0x79a>
   14ef2:	3201      	adds	r2, #1
   14ef4:	3110      	adds	r1, #16
   14ef6:	2a07      	cmp	r2, #7
   14ef8:	e9c0 4300 	strd	r4, r3, [r0]
   14efc:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14f00:	ddf2      	ble.n	14ee8 <_svfiprintf_r+0x760>
   14f02:	4631      	mov	r1, r6
   14f04:	4650      	mov	r0, sl
   14f06:	aa10      	add	r2, sp, #64	; 0x40
   14f08:	f7ff fbc0 	bl	1468c <__ssprint_r>
   14f0c:	2800      	cmp	r0, #0
   14f0e:	f47f ad86 	bne.w	14a1e <_svfiprintf_r+0x296>
   14f12:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14f16:	3d10      	subs	r5, #16
   14f18:	2d10      	cmp	r5, #16
   14f1a:	f04f 0310 	mov.w	r3, #16
   14f1e:	a813      	add	r0, sp, #76	; 0x4c
   14f20:	dce7      	bgt.n	14ef2 <_svfiprintf_r+0x76a>
   14f22:	463e      	mov	r6, r7
   14f24:	4607      	mov	r7, r0
   14f26:	46a2      	mov	sl, r4
   14f28:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   14f2a:	3201      	adds	r2, #1
   14f2c:	4429      	add	r1, r5
   14f2e:	2a07      	cmp	r2, #7
   14f30:	e9cd 2111 	strd	r2, r1, [sp, #68]	; 0x44
   14f34:	f8c7 a000 	str.w	sl, [r7]
   14f38:	607d      	str	r5, [r7, #4]
   14f3a:	f300 8135 	bgt.w	151a8 <_svfiprintf_r+0xa20>
   14f3e:	3708      	adds	r7, #8
   14f40:	e59a      	b.n	14a78 <_svfiprintf_r+0x2f0>
   14f42:	aa10      	add	r2, sp, #64	; 0x40
   14f44:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   14f48:	f7ff fba0 	bl	1468c <__ssprint_r>
   14f4c:	2800      	cmp	r0, #0
   14f4e:	f47f ad66 	bne.w	14a1e <_svfiprintf_r+0x296>
   14f52:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14f56:	af13      	add	r7, sp, #76	; 0x4c
   14f58:	e59e      	b.n	14a98 <_svfiprintf_r+0x310>
   14f5a:	bf00      	nop
   14f5c:	00019fc8 	.word	0x00019fc8
   14f60:	0001a27c 	.word	0x0001a27c
   14f64:	0001a26c 	.word	0x0001a26c
   14f68:	aa10      	add	r2, sp, #64	; 0x40
   14f6a:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   14f6e:	f7ff fb8d 	bl	1468c <__ssprint_r>
   14f72:	2800      	cmp	r0, #0
   14f74:	f47f ad53 	bne.w	14a1e <_svfiprintf_r+0x296>
   14f78:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   14f7c:	af13      	add	r7, sp, #76	; 0x4c
   14f7e:	e599      	b.n	14ab4 <_svfiprintf_r+0x32c>
   14f80:	2c10      	cmp	r4, #16
   14f82:	f340 8188 	ble.w	15296 <_svfiprintf_r+0xb0e>
   14f86:	e9dd b605 	ldrd	fp, r6, [sp, #20]
   14f8a:	2510      	movs	r5, #16
   14f8c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   14f8e:	f8df a2e0 	ldr.w	sl, [pc, #736]	; 15270 <_svfiprintf_r+0xae8>
   14f92:	e004      	b.n	14f9e <_svfiprintf_r+0x816>
   14f94:	3c10      	subs	r4, #16
   14f96:	2c10      	cmp	r4, #16
   14f98:	f107 0708 	add.w	r7, r7, #8
   14f9c:	dd15      	ble.n	14fca <_svfiprintf_r+0x842>
   14f9e:	3301      	adds	r3, #1
   14fa0:	3110      	adds	r1, #16
   14fa2:	2b07      	cmp	r3, #7
   14fa4:	e9c7 a500 	strd	sl, r5, [r7]
   14fa8:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
   14fac:	ddf2      	ble.n	14f94 <_svfiprintf_r+0x80c>
   14fae:	4659      	mov	r1, fp
   14fb0:	4630      	mov	r0, r6
   14fb2:	aa10      	add	r2, sp, #64	; 0x40
   14fb4:	f7ff fb6a 	bl	1468c <__ssprint_r>
   14fb8:	2800      	cmp	r0, #0
   14fba:	f47f ad30 	bne.w	14a1e <_svfiprintf_r+0x296>
   14fbe:	e9dd 3111 	ldrd	r3, r1, [sp, #68]	; 0x44
   14fc2:	3c10      	subs	r4, #16
   14fc4:	2c10      	cmp	r4, #16
   14fc6:	af13      	add	r7, sp, #76	; 0x4c
   14fc8:	dce9      	bgt.n	14f9e <_svfiprintf_r+0x816>
   14fca:	3301      	adds	r3, #1
   14fcc:	4421      	add	r1, r4
   14fce:	2b07      	cmp	r3, #7
   14fd0:	e9c7 a400 	strd	sl, r4, [r7]
   14fd4:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
   14fd8:	f77f ad8a 	ble.w	14af0 <_svfiprintf_r+0x368>
   14fdc:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   14fe0:	aa10      	add	r2, sp, #64	; 0x40
   14fe2:	f7ff fb53 	bl	1468c <__ssprint_r>
   14fe6:	2800      	cmp	r0, #0
   14fe8:	f47f ad19 	bne.w	14a1e <_svfiprintf_r+0x296>
   14fec:	9912      	ldr	r1, [sp, #72]	; 0x48
   14fee:	e57f      	b.n	14af0 <_svfiprintf_r+0x368>
   14ff0:	9b01      	ldr	r3, [sp, #4]
   14ff2:	2b00      	cmp	r3, #0
   14ff4:	f47f acaa 	bne.w	1494c <_svfiprintf_r+0x1c4>
   14ff8:	46c3      	mov	fp, r8
   14ffa:	2300      	movs	r3, #0
   14ffc:	ac3c      	add	r4, sp, #240	; 0xf0
   14ffe:	461e      	mov	r6, r3
   15000:	9301      	str	r3, [sp, #4]
   15002:	e4da      	b.n	149ba <_svfiprintf_r+0x232>
   15004:	f018 0310 	ands.w	r3, r8, #16
   15008:	d10e      	bne.n	15028 <_svfiprintf_r+0x8a0>
   1500a:	f018 0240 	ands.w	r2, r8, #64	; 0x40
   1500e:	d007      	beq.n	15020 <_svfiprintf_r+0x898>
   15010:	9d04      	ldr	r5, [sp, #16]
   15012:	461e      	mov	r6, r3
   15014:	f855 2b04 	ldr.w	r2, [r5], #4
   15018:	2301      	movs	r3, #1
   1501a:	9504      	str	r5, [sp, #16]
   1501c:	b295      	uxth	r5, r2
   1501e:	e4af      	b.n	14980 <_svfiprintf_r+0x1f8>
   15020:	f418 7600 	ands.w	r6, r8, #512	; 0x200
   15024:	f040 80f1 	bne.w	1520a <_svfiprintf_r+0xa82>
   15028:	9a04      	ldr	r2, [sp, #16]
   1502a:	2301      	movs	r3, #1
   1502c:	f852 5b04 	ldr.w	r5, [r2], #4
   15030:	9204      	str	r2, [sp, #16]
   15032:	e4a5      	b.n	14980 <_svfiprintf_r+0x1f8>
   15034:	aa10      	add	r2, sp, #64	; 0x40
   15036:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   1503a:	f7ff fb27 	bl	1468c <__ssprint_r>
   1503e:	2800      	cmp	r0, #0
   15040:	f47f aced 	bne.w	14a1e <_svfiprintf_r+0x296>
   15044:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   15048:	af13      	add	r7, sp, #76	; 0x4c
   1504a:	e53e      	b.n	14aca <_svfiprintf_r+0x342>
   1504c:	f408 6380 	and.w	r3, r8, #1024	; 0x400
   15050:	f8cd 801c 	str.w	r8, [sp, #28]
   15054:	9708      	str	r7, [sp, #32]
   15056:	f04f 0b00 	mov.w	fp, #0
   1505a:	461f      	mov	r7, r3
   1505c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   15060:	f10d 0af0 	add.w	sl, sp, #240	; 0xf0
   15064:	e00c      	b.n	15080 <_svfiprintf_r+0x8f8>
   15066:	2300      	movs	r3, #0
   15068:	220a      	movs	r2, #10
   1506a:	4628      	mov	r0, r5
   1506c:	4631      	mov	r1, r6
   1506e:	f001 f88f 	bl	16190 <__aeabi_uldivmod>
   15072:	2d0a      	cmp	r5, #10
   15074:	f176 0300 	sbcs.w	r3, r6, #0
   15078:	d31c      	bcc.n	150b4 <_svfiprintf_r+0x92c>
   1507a:	4605      	mov	r5, r0
   1507c:	460e      	mov	r6, r1
   1507e:	46a2      	mov	sl, r4
   15080:	4628      	mov	r0, r5
   15082:	4631      	mov	r1, r6
   15084:	220a      	movs	r2, #10
   15086:	2300      	movs	r3, #0
   15088:	f001 f882 	bl	16190 <__aeabi_uldivmod>
   1508c:	3230      	adds	r2, #48	; 0x30
   1508e:	f10a 34ff 	add.w	r4, sl, #4294967295	; 0xffffffff
   15092:	f10b 0b01 	add.w	fp, fp, #1
   15096:	f80a 2c01 	strb.w	r2, [sl, #-1]
   1509a:	2f00      	cmp	r7, #0
   1509c:	d0e3      	beq.n	15066 <_svfiprintf_r+0x8de>
   1509e:	f898 3000 	ldrb.w	r3, [r8]
   150a2:	455b      	cmp	r3, fp
   150a4:	d1df      	bne.n	15066 <_svfiprintf_r+0x8de>
   150a6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
   150aa:	d0dc      	beq.n	15066 <_svfiprintf_r+0x8de>
   150ac:	2d0a      	cmp	r5, #10
   150ae:	f176 0300 	sbcs.w	r3, r6, #0
   150b2:	d25c      	bcs.n	1516e <_svfiprintf_r+0x9e6>
   150b4:	ab3c      	add	r3, sp, #240	; 0xf0
   150b6:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
   150ba:	1b1e      	subs	r6, r3, r4
   150bc:	e9dd 8707 	ldrd	r8, r7, [sp, #28]
   150c0:	46c3      	mov	fp, r8
   150c2:	e47a      	b.n	149ba <_svfiprintf_r+0x232>
   150c4:	ac3c      	add	r4, sp, #240	; 0xf0
   150c6:	e478      	b.n	149ba <_svfiprintf_r+0x232>
   150c8:	9d04      	ldr	r5, [sp, #16]
   150ca:	9902      	ldr	r1, [sp, #8]
   150cc:	f855 2b04 	ldr.w	r2, [r5], #4
   150d0:	17cb      	asrs	r3, r1, #31
   150d2:	e9c2 1300 	strd	r1, r3, [r2]
   150d6:	9504      	str	r5, [sp, #16]
   150d8:	f7ff bb6f 	b.w	147ba <_svfiprintf_r+0x32>
   150dc:	46d8      	mov	r8, fp
   150de:	e5c9      	b.n	14c74 <_svfiprintf_r+0x4ec>
   150e0:	4a64      	ldr	r2, [pc, #400]	; (15274 <_svfiprintf_r+0xaec>)
   150e2:	f01b 0620 	ands.w	r6, fp, #32
   150e6:	9209      	str	r2, [sp, #36]	; 0x24
   150e8:	d01e      	beq.n	15128 <_svfiprintf_r+0x9a0>
   150ea:	9d04      	ldr	r5, [sp, #16]
   150ec:	3507      	adds	r5, #7
   150ee:	f025 0507 	bic.w	r5, r5, #7
   150f2:	462a      	mov	r2, r5
   150f4:	686e      	ldr	r6, [r5, #4]
   150f6:	f852 5b08 	ldr.w	r5, [r2], #8
   150fa:	9204      	str	r2, [sp, #16]
   150fc:	f01b 0f01 	tst.w	fp, #1
   15100:	d009      	beq.n	15116 <_svfiprintf_r+0x98e>
   15102:	ea55 0206 	orrs.w	r2, r5, r6
   15106:	d006      	beq.n	15116 <_svfiprintf_r+0x98e>
   15108:	f88d 303d 	strb.w	r3, [sp, #61]	; 0x3d
   1510c:	2330      	movs	r3, #48	; 0x30
   1510e:	f04b 0b02 	orr.w	fp, fp, #2
   15112:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
   15116:	2302      	movs	r3, #2
   15118:	f42b 6880 	bic.w	r8, fp, #1024	; 0x400
   1511c:	e430      	b.n	14980 <_svfiprintf_r+0x1f8>
   1511e:	4a56      	ldr	r2, [pc, #344]	; (15278 <_svfiprintf_r+0xaf0>)
   15120:	f01b 0620 	ands.w	r6, fp, #32
   15124:	9209      	str	r2, [sp, #36]	; 0x24
   15126:	d1e0      	bne.n	150ea <_svfiprintf_r+0x962>
   15128:	f01b 0210 	ands.w	r2, fp, #16
   1512c:	d137      	bne.n	1519e <_svfiprintf_r+0xa16>
   1512e:	f01b 0140 	ands.w	r1, fp, #64	; 0x40
   15132:	d031      	beq.n	15198 <_svfiprintf_r+0xa10>
   15134:	9d04      	ldr	r5, [sp, #16]
   15136:	4616      	mov	r6, r2
   15138:	f855 2b04 	ldr.w	r2, [r5], #4
   1513c:	9504      	str	r5, [sp, #16]
   1513e:	b295      	uxth	r5, r2
   15140:	e7dc      	b.n	150fc <_svfiprintf_r+0x974>
   15142:	4620      	mov	r0, r4
   15144:	9504      	str	r5, [sp, #16]
   15146:	f7f8 f9f5 	bl	d534 <strlen>
   1514a:	2300      	movs	r3, #0
   1514c:	4606      	mov	r6, r0
   1514e:	9301      	str	r3, [sp, #4]
   15150:	e433      	b.n	149ba <_svfiprintf_r+0x232>
   15152:	2140      	movs	r1, #64	; 0x40
   15154:	f7f7 f800 	bl	c158 <_malloc_r>
   15158:	9b05      	ldr	r3, [sp, #20]
   1515a:	6018      	str	r0, [r3, #0]
   1515c:	6118      	str	r0, [r3, #16]
   1515e:	2800      	cmp	r0, #0
   15160:	f000 80ab 	beq.w	152ba <_svfiprintf_r+0xb32>
   15164:	2340      	movs	r3, #64	; 0x40
   15166:	9a05      	ldr	r2, [sp, #20]
   15168:	6153      	str	r3, [r2, #20]
   1516a:	f7ff bb1b 	b.w	147a4 <_svfiprintf_r+0x1c>
   1516e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   15170:	990b      	ldr	r1, [sp, #44]	; 0x2c
   15172:	1ae4      	subs	r4, r4, r3
   15174:	461a      	mov	r2, r3
   15176:	4620      	mov	r0, r4
   15178:	f7ff fa54 	bl	14624 <strncpy>
   1517c:	f898 3001 	ldrb.w	r3, [r8, #1]
   15180:	b10b      	cbz	r3, 15186 <_svfiprintf_r+0x9fe>
   15182:	f108 0801 	add.w	r8, r8, #1
   15186:	4628      	mov	r0, r5
   15188:	4631      	mov	r1, r6
   1518a:	220a      	movs	r2, #10
   1518c:	2300      	movs	r3, #0
   1518e:	f04f 0b00 	mov.w	fp, #0
   15192:	f000 fffd 	bl	16190 <__aeabi_uldivmod>
   15196:	e770      	b.n	1507a <_svfiprintf_r+0x8f2>
   15198:	f41b 7600 	ands.w	r6, fp, #512	; 0x200
   1519c:	d14c      	bne.n	15238 <_svfiprintf_r+0xab0>
   1519e:	9a04      	ldr	r2, [sp, #16]
   151a0:	f852 5b04 	ldr.w	r5, [r2], #4
   151a4:	9204      	str	r2, [sp, #16]
   151a6:	e7a9      	b.n	150fc <_svfiprintf_r+0x974>
   151a8:	aa10      	add	r2, sp, #64	; 0x40
   151aa:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   151ae:	f7ff fa6d 	bl	1468c <__ssprint_r>
   151b2:	2800      	cmp	r0, #0
   151b4:	f47f ac33 	bne.w	14a1e <_svfiprintf_r+0x296>
   151b8:	af13      	add	r7, sp, #76	; 0x4c
   151ba:	e45b      	b.n	14a74 <_svfiprintf_r+0x2ec>
   151bc:	46d8      	mov	r8, fp
   151be:	f7ff bbc0 	b.w	14942 <_svfiprintf_r+0x1ba>
   151c2:	2b01      	cmp	r3, #1
   151c4:	46d8      	mov	r8, fp
   151c6:	f47f ad09 	bne.w	14bdc <_svfiprintf_r+0x454>
   151ca:	f7ff bbbf 	b.w	1494c <_svfiprintf_r+0x1c4>
   151ce:	aa10      	add	r2, sp, #64	; 0x40
   151d0:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   151d4:	f7ff fa5a 	bl	1468c <__ssprint_r>
   151d8:	2800      	cmp	r0, #0
   151da:	f47f ac20 	bne.w	14a1e <_svfiprintf_r+0x296>
   151de:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   151e2:	af13      	add	r7, sp, #76	; 0x4c
   151e4:	e46a      	b.n	14abc <_svfiprintf_r+0x334>
   151e6:	9d04      	ldr	r5, [sp, #16]
   151e8:	9a02      	ldr	r2, [sp, #8]
   151ea:	f855 3b04 	ldr.w	r3, [r5], #4
   151ee:	601a      	str	r2, [r3, #0]
   151f0:	9504      	str	r5, [sp, #16]
   151f2:	f7ff bae2 	b.w	147ba <_svfiprintf_r+0x32>
   151f6:	9e01      	ldr	r6, [sp, #4]
   151f8:	4c20      	ldr	r4, [pc, #128]	; (1527c <_svfiprintf_r+0xaf4>)
   151fa:	2e06      	cmp	r6, #6
   151fc:	bf28      	it	cs
   151fe:	2606      	movcs	r6, #6
   15200:	9504      	str	r5, [sp, #16]
   15202:	46b0      	mov	r8, r6
   15204:	e424      	b.n	14a50 <_svfiprintf_r+0x2c8>
   15206:	4d1e      	ldr	r5, [pc, #120]	; (15280 <_svfiprintf_r+0xaf8>)
   15208:	e63c      	b.n	14e84 <_svfiprintf_r+0x6fc>
   1520a:	9d04      	ldr	r5, [sp, #16]
   1520c:	4616      	mov	r6, r2
   1520e:	f855 2b04 	ldr.w	r2, [r5], #4
   15212:	2301      	movs	r3, #1
   15214:	9504      	str	r5, [sp, #16]
   15216:	b2d5      	uxtb	r5, r2
   15218:	f7ff bbb2 	b.w	14980 <_svfiprintf_r+0x1f8>
   1521c:	f343 16c0 	sbfx	r6, r3, #7, #1
   15220:	b25d      	sxtb	r5, r3
   15222:	4633      	mov	r3, r6
   15224:	f7ff bb80 	b.w	14928 <_svfiprintf_r+0x1a0>
   15228:	9d04      	ldr	r5, [sp, #16]
   1522a:	4616      	mov	r6, r2
   1522c:	f855 3b04 	ldr.w	r3, [r5], #4
   15230:	9504      	str	r5, [sp, #16]
   15232:	b2dd      	uxtb	r5, r3
   15234:	f7ff bba1 	b.w	1497a <_svfiprintf_r+0x1f2>
   15238:	9d04      	ldr	r5, [sp, #16]
   1523a:	460e      	mov	r6, r1
   1523c:	f855 2b04 	ldr.w	r2, [r5], #4
   15240:	9504      	str	r5, [sp, #16]
   15242:	b2d5      	uxtb	r5, r2
   15244:	e75a      	b.n	150fc <_svfiprintf_r+0x974>
   15246:	9d04      	ldr	r5, [sp, #16]
   15248:	9a02      	ldr	r2, [sp, #8]
   1524a:	f855 3b04 	ldr.w	r3, [r5], #4
   1524e:	801a      	strh	r2, [r3, #0]
   15250:	9504      	str	r5, [sp, #16]
   15252:	f7ff bab2 	b.w	147ba <_svfiprintf_r+0x32>
   15256:	aa10      	add	r2, sp, #64	; 0x40
   15258:	e9dd 1005 	ldrd	r1, r0, [sp, #20]
   1525c:	f7ff fa16 	bl	1468c <__ssprint_r>
   15260:	f7ff bbdd 	b.w	14a1e <_svfiprintf_r+0x296>
   15264:	9e01      	ldr	r6, [sp, #4]
   15266:	9504      	str	r5, [sp, #16]
   15268:	9001      	str	r0, [sp, #4]
   1526a:	f7ff bba6 	b.w	149ba <_svfiprintf_r+0x232>
   1526e:	bf00      	nop
   15270:	0001a26c 	.word	0x0001a26c
   15274:	00019fdc 	.word	0x00019fdc
   15278:	00019fc8 	.word	0x00019fc8
   1527c:	00019ff0 	.word	0x00019ff0
   15280:	0001a27c 	.word	0x0001a27c
   15284:	2200      	movs	r2, #0
   15286:	9201      	str	r2, [sp, #4]
   15288:	f7ff babe 	b.w	14808 <_svfiprintf_r+0x80>
   1528c:	f8df a03c 	ldr.w	sl, [pc, #60]	; 152cc <_svfiprintf_r+0xb44>
   15290:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
   15294:	e649      	b.n	14f2a <_svfiprintf_r+0x7a2>
   15296:	9b11      	ldr	r3, [sp, #68]	; 0x44
   15298:	f8df a030 	ldr.w	sl, [pc, #48]	; 152cc <_svfiprintf_r+0xb44>
   1529c:	e695      	b.n	14fca <_svfiprintf_r+0x842>
   1529e:	4d0c      	ldr	r5, [pc, #48]	; (152d0 <_svfiprintf_r+0xb48>)
   152a0:	e5ae      	b.n	14e00 <_svfiprintf_r+0x678>
   152a2:	9a04      	ldr	r2, [sp, #16]
   152a4:	f899 3001 	ldrb.w	r3, [r9, #1]
   152a8:	4689      	mov	r9, r1
   152aa:	f852 1b04 	ldr.w	r1, [r2], #4
   152ae:	9204      	str	r2, [sp, #16]
   152b0:	ea41 72e1 	orr.w	r2, r1, r1, asr #31
   152b4:	9201      	str	r2, [sp, #4]
   152b6:	f7ff baa5 	b.w	14804 <_svfiprintf_r+0x7c>
   152ba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   152be:	230c      	movs	r3, #12
   152c0:	9202      	str	r2, [sp, #8]
   152c2:	9a06      	ldr	r2, [sp, #24]
   152c4:	6013      	str	r3, [r2, #0]
   152c6:	f7ff bbb3 	b.w	14a30 <_svfiprintf_r+0x2a8>
   152ca:	bf00      	nop
   152cc:	0001a26c 	.word	0x0001a26c
   152d0:	0001a27c 	.word	0x0001a27c

000152d4 <_wcrtomb_r>:
   152d4:	b570      	push	{r4, r5, r6, lr}
   152d6:	4605      	mov	r5, r0
   152d8:	461c      	mov	r4, r3
   152da:	b084      	sub	sp, #16
   152dc:	b139      	cbz	r1, 152ee <_wcrtomb_r+0x1a>
   152de:	4e0b      	ldr	r6, [pc, #44]	; (1530c <_wcrtomb_r+0x38>)
   152e0:	f8d6 60e0 	ldr.w	r6, [r6, #224]	; 0xe0
   152e4:	47b0      	blx	r6
   152e6:	1c43      	adds	r3, r0, #1
   152e8:	d009      	beq.n	152fe <_wcrtomb_r+0x2a>
   152ea:	b004      	add	sp, #16
   152ec:	bd70      	pop	{r4, r5, r6, pc}
   152ee:	460a      	mov	r2, r1
   152f0:	4906      	ldr	r1, [pc, #24]	; (1530c <_wcrtomb_r+0x38>)
   152f2:	f8d1 60e0 	ldr.w	r6, [r1, #224]	; 0xe0
   152f6:	a901      	add	r1, sp, #4
   152f8:	47b0      	blx	r6
   152fa:	1c43      	adds	r3, r0, #1
   152fc:	d1f5      	bne.n	152ea <_wcrtomb_r+0x16>
   152fe:	2200      	movs	r2, #0
   15300:	238a      	movs	r3, #138	; 0x8a
   15302:	6022      	str	r2, [r4, #0]
   15304:	602b      	str	r3, [r5, #0]
   15306:	b004      	add	sp, #16
   15308:	bd70      	pop	{r4, r5, r6, pc}
   1530a:	bf00      	nop
   1530c:	20000964 	.word	0x20000964

00015310 <wcrtomb>:
   15310:	b570      	push	{r4, r5, r6, lr}
   15312:	4b10      	ldr	r3, [pc, #64]	; (15354 <wcrtomb+0x44>)
   15314:	4614      	mov	r4, r2
   15316:	681d      	ldr	r5, [r3, #0]
   15318:	b084      	sub	sp, #16
   1531a:	b158      	cbz	r0, 15334 <wcrtomb+0x24>
   1531c:	4b0e      	ldr	r3, [pc, #56]	; (15358 <wcrtomb+0x48>)
   1531e:	460a      	mov	r2, r1
   15320:	f8d3 60e0 	ldr.w	r6, [r3, #224]	; 0xe0
   15324:	4601      	mov	r1, r0
   15326:	4623      	mov	r3, r4
   15328:	4628      	mov	r0, r5
   1532a:	47b0      	blx	r6
   1532c:	1c43      	adds	r3, r0, #1
   1532e:	d00b      	beq.n	15348 <wcrtomb+0x38>
   15330:	b004      	add	sp, #16
   15332:	bd70      	pop	{r4, r5, r6, pc}
   15334:	4908      	ldr	r1, [pc, #32]	; (15358 <wcrtomb+0x48>)
   15336:	4613      	mov	r3, r2
   15338:	f8d1 60e0 	ldr.w	r6, [r1, #224]	; 0xe0
   1533c:	4602      	mov	r2, r0
   1533e:	a901      	add	r1, sp, #4
   15340:	4628      	mov	r0, r5
   15342:	47b0      	blx	r6
   15344:	1c43      	adds	r3, r0, #1
   15346:	d1f3      	bne.n	15330 <wcrtomb+0x20>
   15348:	2200      	movs	r2, #0
   1534a:	238a      	movs	r3, #138	; 0x8a
   1534c:	6022      	str	r2, [r4, #0]
   1534e:	602b      	str	r3, [r5, #0]
   15350:	b004      	add	sp, #16
   15352:	bd70      	pop	{r4, r5, r6, pc}
   15354:	20000124 	.word	0x20000124
   15358:	20000964 	.word	0x20000964

0001535c <_wctomb_r>:
   1535c:	b410      	push	{r4}
   1535e:	4c03      	ldr	r4, [pc, #12]	; (1536c <_wctomb_r+0x10>)
   15360:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   15364:	46a4      	mov	ip, r4
   15366:	bc10      	pop	{r4}
   15368:	4760      	bx	ip
   1536a:	bf00      	nop
   1536c:	20000964 	.word	0x20000964

00015370 <__ascii_wctomb>:
   15370:	4603      	mov	r3, r0
   15372:	b149      	cbz	r1, 15388 <__ascii_wctomb+0x18>
   15374:	2aff      	cmp	r2, #255	; 0xff
   15376:	d802      	bhi.n	1537e <__ascii_wctomb+0xe>
   15378:	2001      	movs	r0, #1
   1537a:	700a      	strb	r2, [r1, #0]
   1537c:	4770      	bx	lr
   1537e:	228a      	movs	r2, #138	; 0x8a
   15380:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   15384:	601a      	str	r2, [r3, #0]
   15386:	4770      	bx	lr
   15388:	4608      	mov	r0, r1
   1538a:	4770      	bx	lr

0001538c <__register_exitproc>:
   1538c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   15390:	f8df a07c 	ldr.w	sl, [pc, #124]	; 15410 <__register_exitproc+0x84>
   15394:	4606      	mov	r6, r0
   15396:	f8da 0000 	ldr.w	r0, [sl]
   1539a:	4698      	mov	r8, r3
   1539c:	460f      	mov	r7, r1
   1539e:	4691      	mov	r9, r2
   153a0:	f7f6 fec0 	bl	c124 <__retarget_lock_acquire_recursive>
   153a4:	4b1b      	ldr	r3, [pc, #108]	; (15414 <__register_exitproc+0x88>)
   153a6:	681b      	ldr	r3, [r3, #0]
   153a8:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
   153ac:	b324      	cbz	r4, 153f8 <__register_exitproc+0x6c>
   153ae:	6865      	ldr	r5, [r4, #4]
   153b0:	2d1f      	cmp	r5, #31
   153b2:	dc26      	bgt.n	15402 <__register_exitproc+0x76>
   153b4:	b95e      	cbnz	r6, 153ce <__register_exitproc+0x42>
   153b6:	1c6b      	adds	r3, r5, #1
   153b8:	3502      	adds	r5, #2
   153ba:	f8da 0000 	ldr.w	r0, [sl]
   153be:	6063      	str	r3, [r4, #4]
   153c0:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
   153c4:	f7f6 feb6 	bl	c134 <__retarget_lock_release_recursive>
   153c8:	2000      	movs	r0, #0
   153ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   153ce:	2301      	movs	r3, #1
   153d0:	eb04 0185 	add.w	r1, r4, r5, lsl #2
   153d4:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
   153d8:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   153dc:	40ab      	lsls	r3, r5
   153de:	431a      	orrs	r2, r3
   153e0:	2e02      	cmp	r6, #2
   153e2:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   153e6:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
   153ea:	d1e4      	bne.n	153b6 <__register_exitproc+0x2a>
   153ec:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
   153f0:	4313      	orrs	r3, r2
   153f2:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
   153f6:	e7de      	b.n	153b6 <__register_exitproc+0x2a>
   153f8:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
   153fc:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
   15400:	e7d5      	b.n	153ae <__register_exitproc+0x22>
   15402:	f8da 0000 	ldr.w	r0, [sl]
   15406:	f7f6 fe95 	bl	c134 <__retarget_lock_release_recursive>
   1540a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1540e:	e7dc      	b.n	153ca <__register_exitproc+0x3e>
   15410:	20000960 	.word	0x20000960
   15414:	00019fb4 	.word	0x00019fb4

00015418 <_calloc_r>:
   15418:	b538      	push	{r3, r4, r5, lr}
   1541a:	fba1 1402 	umull	r1, r4, r1, r2
   1541e:	bb84      	cbnz	r4, 15482 <_calloc_r+0x6a>
   15420:	f7f6 fe9a 	bl	c158 <_malloc_r>
   15424:	4605      	mov	r5, r0
   15426:	b1d8      	cbz	r0, 15460 <_calloc_r+0x48>
   15428:	f850 2c04 	ldr.w	r2, [r0, #-4]
   1542c:	f022 0203 	bic.w	r2, r2, #3
   15430:	3a04      	subs	r2, #4
   15432:	2a24      	cmp	r2, #36	; 0x24
   15434:	d816      	bhi.n	15464 <_calloc_r+0x4c>
   15436:	2a13      	cmp	r2, #19
   15438:	d919      	bls.n	1546e <_calloc_r+0x56>
   1543a:	2a1b      	cmp	r2, #27
   1543c:	e9c0 4400 	strd	r4, r4, [r0]
   15440:	d91c      	bls.n	1547c <_calloc_r+0x64>
   15442:	2300      	movs	r3, #0
   15444:	2a24      	cmp	r2, #36	; 0x24
   15446:	bf14      	ite	ne
   15448:	f100 0210 	addne.w	r2, r0, #16
   1544c:	f100 0218 	addeq.w	r2, r0, #24
   15450:	e9c0 4402 	strd	r4, r4, [r0, #8]
   15454:	bf04      	itt	eq
   15456:	6104      	streq	r4, [r0, #16]
   15458:	6144      	streq	r4, [r0, #20]
   1545a:	e9c2 3300 	strd	r3, r3, [r2]
   1545e:	6093      	str	r3, [r2, #8]
   15460:	4628      	mov	r0, r5
   15462:	bd38      	pop	{r3, r4, r5, pc}
   15464:	4621      	mov	r1, r4
   15466:	f7f7 fa91 	bl	c98c <memset>
   1546a:	4628      	mov	r0, r5
   1546c:	bd38      	pop	{r3, r4, r5, pc}
   1546e:	4602      	mov	r2, r0
   15470:	2300      	movs	r3, #0
   15472:	4628      	mov	r0, r5
   15474:	e9c2 3300 	strd	r3, r3, [r2]
   15478:	6093      	str	r3, [r2, #8]
   1547a:	bd38      	pop	{r3, r4, r5, pc}
   1547c:	f100 0208 	add.w	r2, r0, #8
   15480:	e7f6      	b.n	15470 <_calloc_r+0x58>
   15482:	f000 f817 	bl	154b4 <__errno>
   15486:	230c      	movs	r3, #12
   15488:	2500      	movs	r5, #0
   1548a:	6003      	str	r3, [r0, #0]
   1548c:	e7e8      	b.n	15460 <_calloc_r+0x48>
   1548e:	bf00      	nop

00015490 <_close_r>:
   15490:	2200      	movs	r2, #0
   15492:	b538      	push	{r3, r4, r5, lr}
   15494:	4d06      	ldr	r5, [pc, #24]	; (154b0 <_close_r+0x20>)
   15496:	4604      	mov	r4, r0
   15498:	4608      	mov	r0, r1
   1549a:	602a      	str	r2, [r5, #0]
   1549c:	f001 f96e 	bl	1677c <_close>
   154a0:	1c43      	adds	r3, r0, #1
   154a2:	d000      	beq.n	154a6 <_close_r+0x16>
   154a4:	bd38      	pop	{r3, r4, r5, pc}
   154a6:	682b      	ldr	r3, [r5, #0]
   154a8:	2b00      	cmp	r3, #0
   154aa:	d0fb      	beq.n	154a4 <_close_r+0x14>
   154ac:	6023      	str	r3, [r4, #0]
   154ae:	bd38      	pop	{r3, r4, r5, pc}
   154b0:	20001fa8 	.word	0x20001fa8

000154b4 <__errno>:
   154b4:	4b01      	ldr	r3, [pc, #4]	; (154bc <__errno+0x8>)
   154b6:	6818      	ldr	r0, [r3, #0]
   154b8:	4770      	bx	lr
   154ba:	bf00      	nop
   154bc:	20000124 	.word	0x20000124

000154c0 <_fclose_r>:
   154c0:	b570      	push	{r4, r5, r6, lr}
   154c2:	2900      	cmp	r1, #0
   154c4:	d04b      	beq.n	1555e <_fclose_r+0x9e>
   154c6:	4606      	mov	r6, r0
   154c8:	460c      	mov	r4, r1
   154ca:	b110      	cbz	r0, 154d2 <_fclose_r+0x12>
   154cc:	6b83      	ldr	r3, [r0, #56]	; 0x38
   154ce:	2b00      	cmp	r3, #0
   154d0:	d048      	beq.n	15564 <_fclose_r+0xa4>
   154d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
   154d4:	07d8      	lsls	r0, r3, #31
   154d6:	d534      	bpl.n	15542 <_fclose_r+0x82>
   154d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   154dc:	2b00      	cmp	r3, #0
   154de:	d03e      	beq.n	1555e <_fclose_r+0x9e>
   154e0:	4621      	mov	r1, r4
   154e2:	4630      	mov	r0, r6
   154e4:	f7fd fca2 	bl	12e2c <__sflush_r>
   154e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   154ea:	4605      	mov	r5, r0
   154ec:	b133      	cbz	r3, 154fc <_fclose_r+0x3c>
   154ee:	4630      	mov	r0, r6
   154f0:	69e1      	ldr	r1, [r4, #28]
   154f2:	4798      	blx	r3
   154f4:	2800      	cmp	r0, #0
   154f6:	bfb8      	it	lt
   154f8:	f04f 35ff 	movlt.w	r5, #4294967295	; 0xffffffff
   154fc:	89a3      	ldrh	r3, [r4, #12]
   154fe:	061a      	lsls	r2, r3, #24
   15500:	d43b      	bmi.n	1557a <_fclose_r+0xba>
   15502:	6b21      	ldr	r1, [r4, #48]	; 0x30
   15504:	b141      	cbz	r1, 15518 <_fclose_r+0x58>
   15506:	f104 0340 	add.w	r3, r4, #64	; 0x40
   1550a:	4299      	cmp	r1, r3
   1550c:	d002      	beq.n	15514 <_fclose_r+0x54>
   1550e:	4630      	mov	r0, r6
   15510:	f7fe f814 	bl	1353c <_free_r>
   15514:	2300      	movs	r3, #0
   15516:	6323      	str	r3, [r4, #48]	; 0x30
   15518:	6c61      	ldr	r1, [r4, #68]	; 0x44
   1551a:	b121      	cbz	r1, 15526 <_fclose_r+0x66>
   1551c:	4630      	mov	r0, r6
   1551e:	f7fe f80d 	bl	1353c <_free_r>
   15522:	2300      	movs	r3, #0
   15524:	6463      	str	r3, [r4, #68]	; 0x44
   15526:	f7fd fea9 	bl	1327c <__sfp_lock_acquire>
   1552a:	2200      	movs	r2, #0
   1552c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1552e:	81a2      	strh	r2, [r4, #12]
   15530:	07db      	lsls	r3, r3, #31
   15532:	d527      	bpl.n	15584 <_fclose_r+0xc4>
   15534:	6da0      	ldr	r0, [r4, #88]	; 0x58
   15536:	f7f6 fdf1 	bl	c11c <__retarget_lock_close_recursive>
   1553a:	f7fd fea5 	bl	13288 <__sfp_lock_release>
   1553e:	4628      	mov	r0, r5
   15540:	bd70      	pop	{r4, r5, r6, pc}
   15542:	89a3      	ldrh	r3, [r4, #12]
   15544:	0599      	lsls	r1, r3, #22
   15546:	d4cb      	bmi.n	154e0 <_fclose_r+0x20>
   15548:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1554a:	f7f6 fdeb 	bl	c124 <__retarget_lock_acquire_recursive>
   1554e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   15552:	2b00      	cmp	r3, #0
   15554:	d1c4      	bne.n	154e0 <_fclose_r+0x20>
   15556:	6e65      	ldr	r5, [r4, #100]	; 0x64
   15558:	f015 0501 	ands.w	r5, r5, #1
   1555c:	d008      	beq.n	15570 <_fclose_r+0xb0>
   1555e:	2500      	movs	r5, #0
   15560:	4628      	mov	r0, r5
   15562:	bd70      	pop	{r4, r5, r6, pc}
   15564:	f7fd fda0 	bl	130a8 <__sinit>
   15568:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1556a:	07d8      	lsls	r0, r3, #31
   1556c:	d4b4      	bmi.n	154d8 <_fclose_r+0x18>
   1556e:	e7e8      	b.n	15542 <_fclose_r+0x82>
   15570:	6da0      	ldr	r0, [r4, #88]	; 0x58
   15572:	f7f6 fddf 	bl	c134 <__retarget_lock_release_recursive>
   15576:	4628      	mov	r0, r5
   15578:	bd70      	pop	{r4, r5, r6, pc}
   1557a:	4630      	mov	r0, r6
   1557c:	6921      	ldr	r1, [r4, #16]
   1557e:	f7fd ffdd 	bl	1353c <_free_r>
   15582:	e7be      	b.n	15502 <_fclose_r+0x42>
   15584:	6da0      	ldr	r0, [r4, #88]	; 0x58
   15586:	f7f6 fdd5 	bl	c134 <__retarget_lock_release_recursive>
   1558a:	e7d3      	b.n	15534 <_fclose_r+0x74>

0001558c <fclose>:
   1558c:	4b02      	ldr	r3, [pc, #8]	; (15598 <fclose+0xc>)
   1558e:	4601      	mov	r1, r0
   15590:	6818      	ldr	r0, [r3, #0]
   15592:	f7ff bf95 	b.w	154c0 <_fclose_r>
   15596:	bf00      	nop
   15598:	20000124 	.word	0x20000124

0001559c <_fstat_r>:
   1559c:	b570      	push	{r4, r5, r6, lr}
   1559e:	2600      	movs	r6, #0
   155a0:	4d07      	ldr	r5, [pc, #28]	; (155c0 <_fstat_r+0x24>)
   155a2:	4604      	mov	r4, r0
   155a4:	4608      	mov	r0, r1
   155a6:	4611      	mov	r1, r2
   155a8:	602e      	str	r6, [r5, #0]
   155aa:	f001 f99b 	bl	168e4 <_fstat>
   155ae:	1c43      	adds	r3, r0, #1
   155b0:	d000      	beq.n	155b4 <_fstat_r+0x18>
   155b2:	bd70      	pop	{r4, r5, r6, pc}
   155b4:	682b      	ldr	r3, [r5, #0]
   155b6:	2b00      	cmp	r3, #0
   155b8:	d0fb      	beq.n	155b2 <_fstat_r+0x16>
   155ba:	6023      	str	r3, [r4, #0]
   155bc:	bd70      	pop	{r4, r5, r6, pc}
   155be:	bf00      	nop
   155c0:	20001fa8 	.word	0x20001fa8

000155c4 <_isatty_r>:
   155c4:	2200      	movs	r2, #0
   155c6:	b538      	push	{r3, r4, r5, lr}
   155c8:	4d06      	ldr	r5, [pc, #24]	; (155e4 <_isatty_r+0x20>)
   155ca:	4604      	mov	r4, r0
   155cc:	4608      	mov	r0, r1
   155ce:	602a      	str	r2, [r5, #0]
   155d0:	f001 fbf8 	bl	16dc4 <_isatty>
   155d4:	1c43      	adds	r3, r0, #1
   155d6:	d000      	beq.n	155da <_isatty_r+0x16>
   155d8:	bd38      	pop	{r3, r4, r5, pc}
   155da:	682b      	ldr	r3, [r5, #0]
   155dc:	2b00      	cmp	r3, #0
   155de:	d0fb      	beq.n	155d8 <_isatty_r+0x14>
   155e0:	6023      	str	r3, [r4, #0]
   155e2:	bd38      	pop	{r3, r4, r5, pc}
   155e4:	20001fa8 	.word	0x20001fa8

000155e8 <_lseek_r>:
   155e8:	b538      	push	{r3, r4, r5, lr}
   155ea:	460c      	mov	r4, r1
   155ec:	4611      	mov	r1, r2
   155ee:	2200      	movs	r2, #0
   155f0:	4684      	mov	ip, r0
   155f2:	4d07      	ldr	r5, [pc, #28]	; (15610 <_lseek_r+0x28>)
   155f4:	4620      	mov	r0, r4
   155f6:	602a      	str	r2, [r5, #0]
   155f8:	461a      	mov	r2, r3
   155fa:	4664      	mov	r4, ip
   155fc:	f001 f824 	bl	16648 <_lseek>
   15600:	1c43      	adds	r3, r0, #1
   15602:	d000      	beq.n	15606 <_lseek_r+0x1e>
   15604:	bd38      	pop	{r3, r4, r5, pc}
   15606:	682b      	ldr	r3, [r5, #0]
   15608:	2b00      	cmp	r3, #0
   1560a:	d0fb      	beq.n	15604 <_lseek_r+0x1c>
   1560c:	6023      	str	r3, [r4, #0]
   1560e:	bd38      	pop	{r3, r4, r5, pc}
   15610:	20001fa8 	.word	0x20001fa8

00015614 <_read_r>:
   15614:	b538      	push	{r3, r4, r5, lr}
   15616:	460c      	mov	r4, r1
   15618:	4611      	mov	r1, r2
   1561a:	2200      	movs	r2, #0
   1561c:	4684      	mov	ip, r0
   1561e:	4d07      	ldr	r5, [pc, #28]	; (1563c <_read_r+0x28>)
   15620:	4620      	mov	r0, r4
   15622:	602a      	str	r2, [r5, #0]
   15624:	461a      	mov	r2, r3
   15626:	4664      	mov	r4, ip
   15628:	f000 ff54 	bl	164d4 <_read>
   1562c:	1c43      	adds	r3, r0, #1
   1562e:	d000      	beq.n	15632 <_read_r+0x1e>
   15630:	bd38      	pop	{r3, r4, r5, pc}
   15632:	682b      	ldr	r3, [r5, #0]
   15634:	2b00      	cmp	r3, #0
   15636:	d0fb      	beq.n	15630 <_read_r+0x1c>
   15638:	6023      	str	r3, [r4, #0]
   1563a:	bd38      	pop	{r3, r4, r5, pc}
   1563c:	20001fa8 	.word	0x20001fa8
   15640:	b570      	push	{r4, r5, r6, lr}
   15642:	f04f 0cff 	mov.w	ip, #255	; 0xff
   15646:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1564a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1564e:	bf1d      	ittte	ne
   15650:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   15654:	ea94 0f0c 	teqne	r4, ip
   15658:	ea95 0f0c 	teqne	r5, ip
   1565c:	f000 f8de 	bleq	1581c <_read_r+0x208>
   15660:	442c      	add	r4, r5
   15662:	ea81 0603 	eor.w	r6, r1, r3
   15666:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1566a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   1566e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   15672:	bf18      	it	ne
   15674:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   15678:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1567c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   15680:	d038      	beq.n	156f4 <_read_r+0xe0>
   15682:	fba0 ce02 	umull	ip, lr, r0, r2
   15686:	f04f 0500 	mov.w	r5, #0
   1568a:	fbe1 e502 	umlal	lr, r5, r1, r2
   1568e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   15692:	fbe0 e503 	umlal	lr, r5, r0, r3
   15696:	f04f 0600 	mov.w	r6, #0
   1569a:	fbe1 5603 	umlal	r5, r6, r1, r3
   1569e:	f09c 0f00 	teq	ip, #0
   156a2:	bf18      	it	ne
   156a4:	f04e 0e01 	orrne.w	lr, lr, #1
   156a8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   156ac:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   156b0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   156b4:	d204      	bcs.n	156c0 <_read_r+0xac>
   156b6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   156ba:	416d      	adcs	r5, r5
   156bc:	eb46 0606 	adc.w	r6, r6, r6
   156c0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   156c4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   156c8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   156cc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   156d0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   156d4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   156d8:	bf88      	it	hi
   156da:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   156de:	d81e      	bhi.n	1571e <_read_r+0x10a>
   156e0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   156e4:	bf08      	it	eq
   156e6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   156ea:	f150 0000 	adcs.w	r0, r0, #0
   156ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   156f2:	bd70      	pop	{r4, r5, r6, pc}
   156f4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   156f8:	ea46 0101 	orr.w	r1, r6, r1
   156fc:	ea40 0002 	orr.w	r0, r0, r2
   15700:	ea81 0103 	eor.w	r1, r1, r3
   15704:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   15708:	bfc2      	ittt	gt
   1570a:	ebd4 050c 	rsbsgt	r5, r4, ip
   1570e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   15712:	bd70      	popgt	{r4, r5, r6, pc}
   15714:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   15718:	f04f 0e00 	mov.w	lr, #0
   1571c:	3c01      	subs	r4, #1
   1571e:	f300 80ab 	bgt.w	15878 <_read_r+0x264>
   15722:	f114 0f36 	cmn.w	r4, #54	; 0x36
   15726:	bfde      	ittt	le
   15728:	2000      	movle	r0, #0
   1572a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   1572e:	bd70      	pople	{r4, r5, r6, pc}
   15730:	f1c4 0400 	rsb	r4, r4, #0
   15734:	3c20      	subs	r4, #32
   15736:	da35      	bge.n	157a4 <_read_r+0x190>
   15738:	340c      	adds	r4, #12
   1573a:	dc1b      	bgt.n	15774 <_read_r+0x160>
   1573c:	f104 0414 	add.w	r4, r4, #20
   15740:	f1c4 0520 	rsb	r5, r4, #32
   15744:	fa00 f305 	lsl.w	r3, r0, r5
   15748:	fa20 f004 	lsr.w	r0, r0, r4
   1574c:	fa01 f205 	lsl.w	r2, r1, r5
   15750:	ea40 0002 	orr.w	r0, r0, r2
   15754:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   15758:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1575c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   15760:	fa21 f604 	lsr.w	r6, r1, r4
   15764:	eb42 0106 	adc.w	r1, r2, r6
   15768:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1576c:	bf08      	it	eq
   1576e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   15772:	bd70      	pop	{r4, r5, r6, pc}
   15774:	f1c4 040c 	rsb	r4, r4, #12
   15778:	f1c4 0520 	rsb	r5, r4, #32
   1577c:	fa00 f304 	lsl.w	r3, r0, r4
   15780:	fa20 f005 	lsr.w	r0, r0, r5
   15784:	fa01 f204 	lsl.w	r2, r1, r4
   15788:	ea40 0002 	orr.w	r0, r0, r2
   1578c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15790:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   15794:	f141 0100 	adc.w	r1, r1, #0
   15798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1579c:	bf08      	it	eq
   1579e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   157a2:	bd70      	pop	{r4, r5, r6, pc}
   157a4:	f1c4 0520 	rsb	r5, r4, #32
   157a8:	fa00 f205 	lsl.w	r2, r0, r5
   157ac:	ea4e 0e02 	orr.w	lr, lr, r2
   157b0:	fa20 f304 	lsr.w	r3, r0, r4
   157b4:	fa01 f205 	lsl.w	r2, r1, r5
   157b8:	ea43 0302 	orr.w	r3, r3, r2
   157bc:	fa21 f004 	lsr.w	r0, r1, r4
   157c0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   157c4:	fa21 f204 	lsr.w	r2, r1, r4
   157c8:	ea20 0002 	bic.w	r0, r0, r2
   157cc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   157d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   157d4:	bf08      	it	eq
   157d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   157da:	bd70      	pop	{r4, r5, r6, pc}
   157dc:	f094 0f00 	teq	r4, #0
   157e0:	d10f      	bne.n	15802 <_read_r+0x1ee>
   157e2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   157e6:	0040      	lsls	r0, r0, #1
   157e8:	eb41 0101 	adc.w	r1, r1, r1
   157ec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   157f0:	bf08      	it	eq
   157f2:	3c01      	subeq	r4, #1
   157f4:	d0f7      	beq.n	157e6 <_read_r+0x1d2>
   157f6:	ea41 0106 	orr.w	r1, r1, r6
   157fa:	f095 0f00 	teq	r5, #0
   157fe:	bf18      	it	ne
   15800:	4770      	bxne	lr
   15802:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   15806:	0052      	lsls	r2, r2, #1
   15808:	eb43 0303 	adc.w	r3, r3, r3
   1580c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   15810:	bf08      	it	eq
   15812:	3d01      	subeq	r5, #1
   15814:	d0f7      	beq.n	15806 <_read_r+0x1f2>
   15816:	ea43 0306 	orr.w	r3, r3, r6
   1581a:	4770      	bx	lr
   1581c:	ea94 0f0c 	teq	r4, ip
   15820:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   15824:	bf18      	it	ne
   15826:	ea95 0f0c 	teqne	r5, ip
   1582a:	d00c      	beq.n	15846 <_read_r+0x232>
   1582c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   15830:	bf18      	it	ne
   15832:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   15836:	d1d1      	bne.n	157dc <_read_r+0x1c8>
   15838:	ea81 0103 	eor.w	r1, r1, r3
   1583c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15840:	f04f 0000 	mov.w	r0, #0
   15844:	bd70      	pop	{r4, r5, r6, pc}
   15846:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1584a:	bf06      	itte	eq
   1584c:	4610      	moveq	r0, r2
   1584e:	4619      	moveq	r1, r3
   15850:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   15854:	d019      	beq.n	1588a <_read_r+0x276>
   15856:	ea94 0f0c 	teq	r4, ip
   1585a:	d102      	bne.n	15862 <_read_r+0x24e>
   1585c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   15860:	d113      	bne.n	1588a <_read_r+0x276>
   15862:	ea95 0f0c 	teq	r5, ip
   15866:	d105      	bne.n	15874 <_read_r+0x260>
   15868:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   1586c:	bf1c      	itt	ne
   1586e:	4610      	movne	r0, r2
   15870:	4619      	movne	r1, r3
   15872:	d10a      	bne.n	1588a <_read_r+0x276>
   15874:	ea81 0103 	eor.w	r1, r1, r3
   15878:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1587c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   15880:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   15884:	f04f 0000 	mov.w	r0, #0
   15888:	bd70      	pop	{r4, r5, r6, pc}
   1588a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1588e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   15892:	bd70      	pop	{r4, r5, r6, pc}

00015894 <__aeabi_drsub>:
   15894:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   15898:	e002      	b.n	158a0 <__adddf3>
   1589a:	bf00      	nop

0001589c <__aeabi_dsub>:
   1589c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000158a0 <__adddf3>:
   158a0:	b530      	push	{r4, r5, lr}
   158a2:	ea4f 0441 	mov.w	r4, r1, lsl #1
   158a6:	ea4f 0543 	mov.w	r5, r3, lsl #1
   158aa:	ea94 0f05 	teq	r4, r5
   158ae:	bf08      	it	eq
   158b0:	ea90 0f02 	teqeq	r0, r2
   158b4:	bf1f      	itttt	ne
   158b6:	ea54 0c00 	orrsne.w	ip, r4, r0
   158ba:	ea55 0c02 	orrsne.w	ip, r5, r2
   158be:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   158c2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   158c6:	f000 80e2 	beq.w	15a8e <__adddf3+0x1ee>
   158ca:	ea4f 5454 	mov.w	r4, r4, lsr #21
   158ce:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   158d2:	bfb8      	it	lt
   158d4:	426d      	neglt	r5, r5
   158d6:	dd0c      	ble.n	158f2 <__adddf3+0x52>
   158d8:	442c      	add	r4, r5
   158da:	ea80 0202 	eor.w	r2, r0, r2
   158de:	ea81 0303 	eor.w	r3, r1, r3
   158e2:	ea82 0000 	eor.w	r0, r2, r0
   158e6:	ea83 0101 	eor.w	r1, r3, r1
   158ea:	ea80 0202 	eor.w	r2, r0, r2
   158ee:	ea81 0303 	eor.w	r3, r1, r3
   158f2:	2d36      	cmp	r5, #54	; 0x36
   158f4:	bf88      	it	hi
   158f6:	bd30      	pophi	{r4, r5, pc}
   158f8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   158fc:	ea4f 3101 	mov.w	r1, r1, lsl #12
   15900:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   15904:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   15908:	d002      	beq.n	15910 <__adddf3+0x70>
   1590a:	4240      	negs	r0, r0
   1590c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   15910:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   15914:	ea4f 3303 	mov.w	r3, r3, lsl #12
   15918:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   1591c:	d002      	beq.n	15924 <__adddf3+0x84>
   1591e:	4252      	negs	r2, r2
   15920:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   15924:	ea94 0f05 	teq	r4, r5
   15928:	f000 80a7 	beq.w	15a7a <__adddf3+0x1da>
   1592c:	f1a4 0401 	sub.w	r4, r4, #1
   15930:	f1d5 0e20 	rsbs	lr, r5, #32
   15934:	db0d      	blt.n	15952 <__adddf3+0xb2>
   15936:	fa02 fc0e 	lsl.w	ip, r2, lr
   1593a:	fa22 f205 	lsr.w	r2, r2, r5
   1593e:	1880      	adds	r0, r0, r2
   15940:	f141 0100 	adc.w	r1, r1, #0
   15944:	fa03 f20e 	lsl.w	r2, r3, lr
   15948:	1880      	adds	r0, r0, r2
   1594a:	fa43 f305 	asr.w	r3, r3, r5
   1594e:	4159      	adcs	r1, r3
   15950:	e00e      	b.n	15970 <__adddf3+0xd0>
   15952:	f1a5 0520 	sub.w	r5, r5, #32
   15956:	f10e 0e20 	add.w	lr, lr, #32
   1595a:	2a01      	cmp	r2, #1
   1595c:	fa03 fc0e 	lsl.w	ip, r3, lr
   15960:	bf28      	it	cs
   15962:	f04c 0c02 	orrcs.w	ip, ip, #2
   15966:	fa43 f305 	asr.w	r3, r3, r5
   1596a:	18c0      	adds	r0, r0, r3
   1596c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   15970:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   15974:	d507      	bpl.n	15986 <__adddf3+0xe6>
   15976:	f04f 0e00 	mov.w	lr, #0
   1597a:	f1dc 0c00 	rsbs	ip, ip, #0
   1597e:	eb7e 0000 	sbcs.w	r0, lr, r0
   15982:	eb6e 0101 	sbc.w	r1, lr, r1
   15986:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   1598a:	d31b      	bcc.n	159c4 <__adddf3+0x124>
   1598c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   15990:	d30c      	bcc.n	159ac <__adddf3+0x10c>
   15992:	0849      	lsrs	r1, r1, #1
   15994:	ea5f 0030 	movs.w	r0, r0, rrx
   15998:	ea4f 0c3c 	mov.w	ip, ip, rrx
   1599c:	f104 0401 	add.w	r4, r4, #1
   159a0:	ea4f 5244 	mov.w	r2, r4, lsl #21
   159a4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   159a8:	f080 809a 	bcs.w	15ae0 <__adddf3+0x240>
   159ac:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   159b0:	bf08      	it	eq
   159b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   159b6:	f150 0000 	adcs.w	r0, r0, #0
   159ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   159be:	ea41 0105 	orr.w	r1, r1, r5
   159c2:	bd30      	pop	{r4, r5, pc}
   159c4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   159c8:	4140      	adcs	r0, r0
   159ca:	eb41 0101 	adc.w	r1, r1, r1
   159ce:	3c01      	subs	r4, #1
   159d0:	bf28      	it	cs
   159d2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
   159d6:	d2e9      	bcs.n	159ac <__adddf3+0x10c>
   159d8:	f091 0f00 	teq	r1, #0
   159dc:	bf04      	itt	eq
   159de:	4601      	moveq	r1, r0
   159e0:	2000      	moveq	r0, #0
   159e2:	fab1 f381 	clz	r3, r1
   159e6:	bf08      	it	eq
   159e8:	3320      	addeq	r3, #32
   159ea:	f1a3 030b 	sub.w	r3, r3, #11
   159ee:	f1b3 0220 	subs.w	r2, r3, #32
   159f2:	da0c      	bge.n	15a0e <__adddf3+0x16e>
   159f4:	320c      	adds	r2, #12
   159f6:	dd08      	ble.n	15a0a <__adddf3+0x16a>
   159f8:	f102 0c14 	add.w	ip, r2, #20
   159fc:	f1c2 020c 	rsb	r2, r2, #12
   15a00:	fa01 f00c 	lsl.w	r0, r1, ip
   15a04:	fa21 f102 	lsr.w	r1, r1, r2
   15a08:	e00c      	b.n	15a24 <__adddf3+0x184>
   15a0a:	f102 0214 	add.w	r2, r2, #20
   15a0e:	bfd8      	it	le
   15a10:	f1c2 0c20 	rsble	ip, r2, #32
   15a14:	fa01 f102 	lsl.w	r1, r1, r2
   15a18:	fa20 fc0c 	lsr.w	ip, r0, ip
   15a1c:	bfdc      	itt	le
   15a1e:	ea41 010c 	orrle.w	r1, r1, ip
   15a22:	4090      	lslle	r0, r2
   15a24:	1ae4      	subs	r4, r4, r3
   15a26:	bfa2      	ittt	ge
   15a28:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   15a2c:	4329      	orrge	r1, r5
   15a2e:	bd30      	popge	{r4, r5, pc}
   15a30:	ea6f 0404 	mvn.w	r4, r4
   15a34:	3c1f      	subs	r4, #31
   15a36:	da1c      	bge.n	15a72 <__adddf3+0x1d2>
   15a38:	340c      	adds	r4, #12
   15a3a:	dc0e      	bgt.n	15a5a <__adddf3+0x1ba>
   15a3c:	f104 0414 	add.w	r4, r4, #20
   15a40:	f1c4 0220 	rsb	r2, r4, #32
   15a44:	fa20 f004 	lsr.w	r0, r0, r4
   15a48:	fa01 f302 	lsl.w	r3, r1, r2
   15a4c:	ea40 0003 	orr.w	r0, r0, r3
   15a50:	fa21 f304 	lsr.w	r3, r1, r4
   15a54:	ea45 0103 	orr.w	r1, r5, r3
   15a58:	bd30      	pop	{r4, r5, pc}
   15a5a:	f1c4 040c 	rsb	r4, r4, #12
   15a5e:	f1c4 0220 	rsb	r2, r4, #32
   15a62:	fa20 f002 	lsr.w	r0, r0, r2
   15a66:	fa01 f304 	lsl.w	r3, r1, r4
   15a6a:	ea40 0003 	orr.w	r0, r0, r3
   15a6e:	4629      	mov	r1, r5
   15a70:	bd30      	pop	{r4, r5, pc}
   15a72:	fa21 f004 	lsr.w	r0, r1, r4
   15a76:	4629      	mov	r1, r5
   15a78:	bd30      	pop	{r4, r5, pc}
   15a7a:	f094 0f00 	teq	r4, #0
   15a7e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   15a82:	bf06      	itte	eq
   15a84:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   15a88:	3401      	addeq	r4, #1
   15a8a:	3d01      	subne	r5, #1
   15a8c:	e74e      	b.n	1592c <__adddf3+0x8c>
   15a8e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   15a92:	bf18      	it	ne
   15a94:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   15a98:	d029      	beq.n	15aee <__adddf3+0x24e>
   15a9a:	ea94 0f05 	teq	r4, r5
   15a9e:	bf08      	it	eq
   15aa0:	ea90 0f02 	teqeq	r0, r2
   15aa4:	d005      	beq.n	15ab2 <__adddf3+0x212>
   15aa6:	ea54 0c00 	orrs.w	ip, r4, r0
   15aaa:	bf04      	itt	eq
   15aac:	4619      	moveq	r1, r3
   15aae:	4610      	moveq	r0, r2
   15ab0:	bd30      	pop	{r4, r5, pc}
   15ab2:	ea91 0f03 	teq	r1, r3
   15ab6:	bf1e      	ittt	ne
   15ab8:	2100      	movne	r1, #0
   15aba:	2000      	movne	r0, #0
   15abc:	bd30      	popne	{r4, r5, pc}
   15abe:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   15ac2:	d105      	bne.n	15ad0 <__adddf3+0x230>
   15ac4:	0040      	lsls	r0, r0, #1
   15ac6:	4149      	adcs	r1, r1
   15ac8:	bf28      	it	cs
   15aca:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   15ace:	bd30      	pop	{r4, r5, pc}
   15ad0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   15ad4:	bf3c      	itt	cc
   15ad6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   15ada:	bd30      	popcc	{r4, r5, pc}
   15adc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   15ae0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   15ae4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   15ae8:	f04f 0000 	mov.w	r0, #0
   15aec:	bd30      	pop	{r4, r5, pc}
   15aee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   15af2:	bf1a      	itte	ne
   15af4:	4619      	movne	r1, r3
   15af6:	4610      	movne	r0, r2
   15af8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   15afc:	bf1c      	itt	ne
   15afe:	460b      	movne	r3, r1
   15b00:	4602      	movne	r2, r0
   15b02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   15b06:	bf06      	itte	eq
   15b08:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   15b0c:	ea91 0f03 	teqeq	r1, r3
   15b10:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   15b14:	bd30      	pop	{r4, r5, pc}
   15b16:	bf00      	nop

00015b18 <__aeabi_ui2d>:
   15b18:	f090 0f00 	teq	r0, #0
   15b1c:	bf04      	itt	eq
   15b1e:	2100      	moveq	r1, #0
   15b20:	4770      	bxeq	lr
   15b22:	b530      	push	{r4, r5, lr}
   15b24:	f44f 6480 	mov.w	r4, #1024	; 0x400
   15b28:	f104 0432 	add.w	r4, r4, #50	; 0x32
   15b2c:	f04f 0500 	mov.w	r5, #0
   15b30:	f04f 0100 	mov.w	r1, #0
   15b34:	e750      	b.n	159d8 <__adddf3+0x138>
   15b36:	bf00      	nop

00015b38 <__aeabi_i2d>:
   15b38:	f090 0f00 	teq	r0, #0
   15b3c:	bf04      	itt	eq
   15b3e:	2100      	moveq	r1, #0
   15b40:	4770      	bxeq	lr
   15b42:	b530      	push	{r4, r5, lr}
   15b44:	f44f 6480 	mov.w	r4, #1024	; 0x400
   15b48:	f104 0432 	add.w	r4, r4, #50	; 0x32
   15b4c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   15b50:	bf48      	it	mi
   15b52:	4240      	negmi	r0, r0
   15b54:	f04f 0100 	mov.w	r1, #0
   15b58:	e73e      	b.n	159d8 <__adddf3+0x138>
   15b5a:	bf00      	nop

00015b5c <__aeabi_f2d>:
   15b5c:	0042      	lsls	r2, r0, #1
   15b5e:	ea4f 01e2 	mov.w	r1, r2, asr #3
   15b62:	ea4f 0131 	mov.w	r1, r1, rrx
   15b66:	ea4f 7002 	mov.w	r0, r2, lsl #28
   15b6a:	bf1f      	itttt	ne
   15b6c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   15b70:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   15b74:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   15b78:	4770      	bxne	lr
   15b7a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
   15b7e:	bf08      	it	eq
   15b80:	4770      	bxeq	lr
   15b82:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
   15b86:	bf04      	itt	eq
   15b88:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
   15b8c:	4770      	bxeq	lr
   15b8e:	b530      	push	{r4, r5, lr}
   15b90:	f44f 7460 	mov.w	r4, #896	; 0x380
   15b94:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   15b98:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   15b9c:	e71c      	b.n	159d8 <__adddf3+0x138>
   15b9e:	bf00      	nop

00015ba0 <__aeabi_ul2d>:
   15ba0:	ea50 0201 	orrs.w	r2, r0, r1
   15ba4:	bf08      	it	eq
   15ba6:	4770      	bxeq	lr
   15ba8:	b530      	push	{r4, r5, lr}
   15baa:	f04f 0500 	mov.w	r5, #0
   15bae:	e00a      	b.n	15bc6 <__aeabi_l2d+0x16>

00015bb0 <__aeabi_l2d>:
   15bb0:	ea50 0201 	orrs.w	r2, r0, r1
   15bb4:	bf08      	it	eq
   15bb6:	4770      	bxeq	lr
   15bb8:	b530      	push	{r4, r5, lr}
   15bba:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   15bbe:	d502      	bpl.n	15bc6 <__aeabi_l2d+0x16>
   15bc0:	4240      	negs	r0, r0
   15bc2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   15bc6:	f44f 6480 	mov.w	r4, #1024	; 0x400
   15bca:	f104 0432 	add.w	r4, r4, #50	; 0x32
   15bce:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   15bd2:	f43f aed8 	beq.w	15986 <__adddf3+0xe6>
   15bd6:	f04f 0203 	mov.w	r2, #3
   15bda:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   15bde:	bf18      	it	ne
   15be0:	3203      	addne	r2, #3
   15be2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   15be6:	bf18      	it	ne
   15be8:	3203      	addne	r2, #3
   15bea:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   15bee:	f1c2 0320 	rsb	r3, r2, #32
   15bf2:	fa00 fc03 	lsl.w	ip, r0, r3
   15bf6:	fa20 f002 	lsr.w	r0, r0, r2
   15bfa:	fa01 fe03 	lsl.w	lr, r1, r3
   15bfe:	ea40 000e 	orr.w	r0, r0, lr
   15c02:	fa21 f102 	lsr.w	r1, r1, r2
   15c06:	4414      	add	r4, r2
   15c08:	e6bd      	b.n	15986 <__adddf3+0xe6>
   15c0a:	bf00      	nop

00015c0c <__aeabi_dmul>:
   15c0c:	b570      	push	{r4, r5, r6, lr}
   15c0e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   15c12:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   15c16:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   15c1a:	bf1d      	ittte	ne
   15c1c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   15c20:	ea94 0f0c 	teqne	r4, ip
   15c24:	ea95 0f0c 	teqne	r5, ip
   15c28:	f000 f8de 	bleq	15de8 <__aeabi_dmul+0x1dc>
   15c2c:	442c      	add	r4, r5
   15c2e:	ea81 0603 	eor.w	r6, r1, r3
   15c32:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   15c36:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   15c3a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   15c3e:	bf18      	it	ne
   15c40:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   15c44:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   15c48:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   15c4c:	d038      	beq.n	15cc0 <__aeabi_dmul+0xb4>
   15c4e:	fba0 ce02 	umull	ip, lr, r0, r2
   15c52:	f04f 0500 	mov.w	r5, #0
   15c56:	fbe1 e502 	umlal	lr, r5, r1, r2
   15c5a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   15c5e:	fbe0 e503 	umlal	lr, r5, r0, r3
   15c62:	f04f 0600 	mov.w	r6, #0
   15c66:	fbe1 5603 	umlal	r5, r6, r1, r3
   15c6a:	f09c 0f00 	teq	ip, #0
   15c6e:	bf18      	it	ne
   15c70:	f04e 0e01 	orrne.w	lr, lr, #1
   15c74:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   15c78:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   15c7c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   15c80:	d204      	bcs.n	15c8c <__aeabi_dmul+0x80>
   15c82:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   15c86:	416d      	adcs	r5, r5
   15c88:	eb46 0606 	adc.w	r6, r6, r6
   15c8c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   15c90:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   15c94:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   15c98:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   15c9c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   15ca0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   15ca4:	bf88      	it	hi
   15ca6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   15caa:	d81e      	bhi.n	15cea <__aeabi_dmul+0xde>
   15cac:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   15cb0:	bf08      	it	eq
   15cb2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   15cb6:	f150 0000 	adcs.w	r0, r0, #0
   15cba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   15cbe:	bd70      	pop	{r4, r5, r6, pc}
   15cc0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   15cc4:	ea46 0101 	orr.w	r1, r6, r1
   15cc8:	ea40 0002 	orr.w	r0, r0, r2
   15ccc:	ea81 0103 	eor.w	r1, r1, r3
   15cd0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   15cd4:	bfc2      	ittt	gt
   15cd6:	ebd4 050c 	rsbsgt	r5, r4, ip
   15cda:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   15cde:	bd70      	popgt	{r4, r5, r6, pc}
   15ce0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   15ce4:	f04f 0e00 	mov.w	lr, #0
   15ce8:	3c01      	subs	r4, #1
   15cea:	f300 80ab 	bgt.w	15e44 <__aeabi_dmul+0x238>
   15cee:	f114 0f36 	cmn.w	r4, #54	; 0x36
   15cf2:	bfde      	ittt	le
   15cf4:	2000      	movle	r0, #0
   15cf6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   15cfa:	bd70      	pople	{r4, r5, r6, pc}
   15cfc:	f1c4 0400 	rsb	r4, r4, #0
   15d00:	3c20      	subs	r4, #32
   15d02:	da35      	bge.n	15d70 <__aeabi_dmul+0x164>
   15d04:	340c      	adds	r4, #12
   15d06:	dc1b      	bgt.n	15d40 <__aeabi_dmul+0x134>
   15d08:	f104 0414 	add.w	r4, r4, #20
   15d0c:	f1c4 0520 	rsb	r5, r4, #32
   15d10:	fa00 f305 	lsl.w	r3, r0, r5
   15d14:	fa20 f004 	lsr.w	r0, r0, r4
   15d18:	fa01 f205 	lsl.w	r2, r1, r5
   15d1c:	ea40 0002 	orr.w	r0, r0, r2
   15d20:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   15d24:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   15d28:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   15d2c:	fa21 f604 	lsr.w	r6, r1, r4
   15d30:	eb42 0106 	adc.w	r1, r2, r6
   15d34:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   15d38:	bf08      	it	eq
   15d3a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   15d3e:	bd70      	pop	{r4, r5, r6, pc}
   15d40:	f1c4 040c 	rsb	r4, r4, #12
   15d44:	f1c4 0520 	rsb	r5, r4, #32
   15d48:	fa00 f304 	lsl.w	r3, r0, r4
   15d4c:	fa20 f005 	lsr.w	r0, r0, r5
   15d50:	fa01 f204 	lsl.w	r2, r1, r4
   15d54:	ea40 0002 	orr.w	r0, r0, r2
   15d58:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15d5c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   15d60:	f141 0100 	adc.w	r1, r1, #0
   15d64:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   15d68:	bf08      	it	eq
   15d6a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   15d6e:	bd70      	pop	{r4, r5, r6, pc}
   15d70:	f1c4 0520 	rsb	r5, r4, #32
   15d74:	fa00 f205 	lsl.w	r2, r0, r5
   15d78:	ea4e 0e02 	orr.w	lr, lr, r2
   15d7c:	fa20 f304 	lsr.w	r3, r0, r4
   15d80:	fa01 f205 	lsl.w	r2, r1, r5
   15d84:	ea43 0302 	orr.w	r3, r3, r2
   15d88:	fa21 f004 	lsr.w	r0, r1, r4
   15d8c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15d90:	fa21 f204 	lsr.w	r2, r1, r4
   15d94:	ea20 0002 	bic.w	r0, r0, r2
   15d98:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   15d9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   15da0:	bf08      	it	eq
   15da2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   15da6:	bd70      	pop	{r4, r5, r6, pc}
   15da8:	f094 0f00 	teq	r4, #0
   15dac:	d10f      	bne.n	15dce <__aeabi_dmul+0x1c2>
   15dae:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   15db2:	0040      	lsls	r0, r0, #1
   15db4:	eb41 0101 	adc.w	r1, r1, r1
   15db8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   15dbc:	bf08      	it	eq
   15dbe:	3c01      	subeq	r4, #1
   15dc0:	d0f7      	beq.n	15db2 <__aeabi_dmul+0x1a6>
   15dc2:	ea41 0106 	orr.w	r1, r1, r6
   15dc6:	f095 0f00 	teq	r5, #0
   15dca:	bf18      	it	ne
   15dcc:	4770      	bxne	lr
   15dce:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   15dd2:	0052      	lsls	r2, r2, #1
   15dd4:	eb43 0303 	adc.w	r3, r3, r3
   15dd8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   15ddc:	bf08      	it	eq
   15dde:	3d01      	subeq	r5, #1
   15de0:	d0f7      	beq.n	15dd2 <__aeabi_dmul+0x1c6>
   15de2:	ea43 0306 	orr.w	r3, r3, r6
   15de6:	4770      	bx	lr
   15de8:	ea94 0f0c 	teq	r4, ip
   15dec:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   15df0:	bf18      	it	ne
   15df2:	ea95 0f0c 	teqne	r5, ip
   15df6:	d00c      	beq.n	15e12 <__aeabi_dmul+0x206>
   15df8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   15dfc:	bf18      	it	ne
   15dfe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   15e02:	d1d1      	bne.n	15da8 <__aeabi_dmul+0x19c>
   15e04:	ea81 0103 	eor.w	r1, r1, r3
   15e08:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15e0c:	f04f 0000 	mov.w	r0, #0
   15e10:	bd70      	pop	{r4, r5, r6, pc}
   15e12:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   15e16:	bf06      	itte	eq
   15e18:	4610      	moveq	r0, r2
   15e1a:	4619      	moveq	r1, r3
   15e1c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   15e20:	d019      	beq.n	15e56 <__aeabi_dmul+0x24a>
   15e22:	ea94 0f0c 	teq	r4, ip
   15e26:	d102      	bne.n	15e2e <__aeabi_dmul+0x222>
   15e28:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   15e2c:	d113      	bne.n	15e56 <__aeabi_dmul+0x24a>
   15e2e:	ea95 0f0c 	teq	r5, ip
   15e32:	d105      	bne.n	15e40 <__aeabi_dmul+0x234>
   15e34:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   15e38:	bf1c      	itt	ne
   15e3a:	4610      	movne	r0, r2
   15e3c:	4619      	movne	r1, r3
   15e3e:	d10a      	bne.n	15e56 <__aeabi_dmul+0x24a>
   15e40:	ea81 0103 	eor.w	r1, r1, r3
   15e44:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   15e48:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   15e4c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   15e50:	f04f 0000 	mov.w	r0, #0
   15e54:	bd70      	pop	{r4, r5, r6, pc}
   15e56:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   15e5a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   15e5e:	bd70      	pop	{r4, r5, r6, pc}

00015e60 <__aeabi_ddiv>:
   15e60:	b570      	push	{r4, r5, r6, lr}
   15e62:	f04f 0cff 	mov.w	ip, #255	; 0xff
   15e66:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   15e6a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   15e6e:	bf1d      	ittte	ne
   15e70:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   15e74:	ea94 0f0c 	teqne	r4, ip
   15e78:	ea95 0f0c 	teqne	r5, ip
   15e7c:	f000 f8a7 	bleq	15fce <__aeabi_ddiv+0x16e>
   15e80:	eba4 0405 	sub.w	r4, r4, r5
   15e84:	ea81 0e03 	eor.w	lr, r1, r3
   15e88:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   15e8c:	ea4f 3101 	mov.w	r1, r1, lsl #12
   15e90:	f000 8088 	beq.w	15fa4 <__aeabi_ddiv+0x144>
   15e94:	ea4f 3303 	mov.w	r3, r3, lsl #12
   15e98:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   15e9c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   15ea0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   15ea4:	ea4f 2202 	mov.w	r2, r2, lsl #8
   15ea8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   15eac:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   15eb0:	ea4f 2600 	mov.w	r6, r0, lsl #8
   15eb4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   15eb8:	429d      	cmp	r5, r3
   15eba:	bf08      	it	eq
   15ebc:	4296      	cmpeq	r6, r2
   15ebe:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   15ec2:	f504 7440 	add.w	r4, r4, #768	; 0x300
   15ec6:	d202      	bcs.n	15ece <__aeabi_ddiv+0x6e>
   15ec8:	085b      	lsrs	r3, r3, #1
   15eca:	ea4f 0232 	mov.w	r2, r2, rrx
   15ece:	1ab6      	subs	r6, r6, r2
   15ed0:	eb65 0503 	sbc.w	r5, r5, r3
   15ed4:	085b      	lsrs	r3, r3, #1
   15ed6:	ea4f 0232 	mov.w	r2, r2, rrx
   15eda:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   15ede:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   15ee2:	ebb6 0e02 	subs.w	lr, r6, r2
   15ee6:	eb75 0e03 	sbcs.w	lr, r5, r3
   15eea:	bf22      	ittt	cs
   15eec:	1ab6      	subcs	r6, r6, r2
   15eee:	4675      	movcs	r5, lr
   15ef0:	ea40 000c 	orrcs.w	r0, r0, ip
   15ef4:	085b      	lsrs	r3, r3, #1
   15ef6:	ea4f 0232 	mov.w	r2, r2, rrx
   15efa:	ebb6 0e02 	subs.w	lr, r6, r2
   15efe:	eb75 0e03 	sbcs.w	lr, r5, r3
   15f02:	bf22      	ittt	cs
   15f04:	1ab6      	subcs	r6, r6, r2
   15f06:	4675      	movcs	r5, lr
   15f08:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   15f0c:	085b      	lsrs	r3, r3, #1
   15f0e:	ea4f 0232 	mov.w	r2, r2, rrx
   15f12:	ebb6 0e02 	subs.w	lr, r6, r2
   15f16:	eb75 0e03 	sbcs.w	lr, r5, r3
   15f1a:	bf22      	ittt	cs
   15f1c:	1ab6      	subcs	r6, r6, r2
   15f1e:	4675      	movcs	r5, lr
   15f20:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   15f24:	085b      	lsrs	r3, r3, #1
   15f26:	ea4f 0232 	mov.w	r2, r2, rrx
   15f2a:	ebb6 0e02 	subs.w	lr, r6, r2
   15f2e:	eb75 0e03 	sbcs.w	lr, r5, r3
   15f32:	bf22      	ittt	cs
   15f34:	1ab6      	subcs	r6, r6, r2
   15f36:	4675      	movcs	r5, lr
   15f38:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   15f3c:	ea55 0e06 	orrs.w	lr, r5, r6
   15f40:	d018      	beq.n	15f74 <__aeabi_ddiv+0x114>
   15f42:	ea4f 1505 	mov.w	r5, r5, lsl #4
   15f46:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   15f4a:	ea4f 1606 	mov.w	r6, r6, lsl #4
   15f4e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   15f52:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   15f56:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   15f5a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   15f5e:	d1c0      	bne.n	15ee2 <__aeabi_ddiv+0x82>
   15f60:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   15f64:	d10b      	bne.n	15f7e <__aeabi_ddiv+0x11e>
   15f66:	ea41 0100 	orr.w	r1, r1, r0
   15f6a:	f04f 0000 	mov.w	r0, #0
   15f6e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   15f72:	e7b6      	b.n	15ee2 <__aeabi_ddiv+0x82>
   15f74:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   15f78:	bf04      	itt	eq
   15f7a:	4301      	orreq	r1, r0
   15f7c:	2000      	moveq	r0, #0
   15f7e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   15f82:	bf88      	it	hi
   15f84:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   15f88:	f63f aeaf 	bhi.w	15cea <__aeabi_dmul+0xde>
   15f8c:	ebb5 0c03 	subs.w	ip, r5, r3
   15f90:	bf04      	itt	eq
   15f92:	ebb6 0c02 	subseq.w	ip, r6, r2
   15f96:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   15f9a:	f150 0000 	adcs.w	r0, r0, #0
   15f9e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   15fa2:	bd70      	pop	{r4, r5, r6, pc}
   15fa4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   15fa8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   15fac:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   15fb0:	bfc2      	ittt	gt
   15fb2:	ebd4 050c 	rsbsgt	r5, r4, ip
   15fb6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   15fba:	bd70      	popgt	{r4, r5, r6, pc}
   15fbc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   15fc0:	f04f 0e00 	mov.w	lr, #0
   15fc4:	3c01      	subs	r4, #1
   15fc6:	e690      	b.n	15cea <__aeabi_dmul+0xde>
   15fc8:	ea45 0e06 	orr.w	lr, r5, r6
   15fcc:	e68d      	b.n	15cea <__aeabi_dmul+0xde>
   15fce:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   15fd2:	ea94 0f0c 	teq	r4, ip
   15fd6:	bf08      	it	eq
   15fd8:	ea95 0f0c 	teqeq	r5, ip
   15fdc:	f43f af3b 	beq.w	15e56 <__aeabi_dmul+0x24a>
   15fe0:	ea94 0f0c 	teq	r4, ip
   15fe4:	d10a      	bne.n	15ffc <__aeabi_ddiv+0x19c>
   15fe6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   15fea:	f47f af34 	bne.w	15e56 <__aeabi_dmul+0x24a>
   15fee:	ea95 0f0c 	teq	r5, ip
   15ff2:	f47f af25 	bne.w	15e40 <__aeabi_dmul+0x234>
   15ff6:	4610      	mov	r0, r2
   15ff8:	4619      	mov	r1, r3
   15ffa:	e72c      	b.n	15e56 <__aeabi_dmul+0x24a>
   15ffc:	ea95 0f0c 	teq	r5, ip
   16000:	d106      	bne.n	16010 <__aeabi_ddiv+0x1b0>
   16002:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   16006:	f43f aefd 	beq.w	15e04 <__aeabi_dmul+0x1f8>
   1600a:	4610      	mov	r0, r2
   1600c:	4619      	mov	r1, r3
   1600e:	e722      	b.n	15e56 <__aeabi_dmul+0x24a>
   16010:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   16014:	bf18      	it	ne
   16016:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1601a:	f47f aec5 	bne.w	15da8 <__aeabi_dmul+0x19c>
   1601e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   16022:	f47f af0d 	bne.w	15e40 <__aeabi_dmul+0x234>
   16026:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   1602a:	f47f aeeb 	bne.w	15e04 <__aeabi_dmul+0x1f8>
   1602e:	e712      	b.n	15e56 <__aeabi_dmul+0x24a>

00016030 <__gedf2>:
   16030:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   16034:	e006      	b.n	16044 <__cmpdf2+0x4>
   16036:	bf00      	nop

00016038 <__ledf2>:
   16038:	f04f 0c01 	mov.w	ip, #1
   1603c:	e002      	b.n	16044 <__cmpdf2+0x4>
   1603e:	bf00      	nop

00016040 <__cmpdf2>:
   16040:	f04f 0c01 	mov.w	ip, #1
   16044:	f84d cd04 	str.w	ip, [sp, #-4]!
   16048:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1604c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   16050:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   16054:	bf18      	it	ne
   16056:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   1605a:	d01b      	beq.n	16094 <__cmpdf2+0x54>
   1605c:	b001      	add	sp, #4
   1605e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   16062:	bf0c      	ite	eq
   16064:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   16068:	ea91 0f03 	teqne	r1, r3
   1606c:	bf02      	ittt	eq
   1606e:	ea90 0f02 	teqeq	r0, r2
   16072:	2000      	moveq	r0, #0
   16074:	4770      	bxeq	lr
   16076:	f110 0f00 	cmn.w	r0, #0
   1607a:	ea91 0f03 	teq	r1, r3
   1607e:	bf58      	it	pl
   16080:	4299      	cmppl	r1, r3
   16082:	bf08      	it	eq
   16084:	4290      	cmpeq	r0, r2
   16086:	bf2c      	ite	cs
   16088:	17d8      	asrcs	r0, r3, #31
   1608a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   1608e:	f040 0001 	orr.w	r0, r0, #1
   16092:	4770      	bx	lr
   16094:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   16098:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1609c:	d102      	bne.n	160a4 <__cmpdf2+0x64>
   1609e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   160a2:	d107      	bne.n	160b4 <__cmpdf2+0x74>
   160a4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   160a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   160ac:	d1d6      	bne.n	1605c <__cmpdf2+0x1c>
   160ae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   160b2:	d0d3      	beq.n	1605c <__cmpdf2+0x1c>
   160b4:	f85d 0b04 	ldr.w	r0, [sp], #4
   160b8:	4770      	bx	lr
   160ba:	bf00      	nop

000160bc <__aeabi_cdrcmple>:
   160bc:	4684      	mov	ip, r0
   160be:	4610      	mov	r0, r2
   160c0:	4662      	mov	r2, ip
   160c2:	468c      	mov	ip, r1
   160c4:	4619      	mov	r1, r3
   160c6:	4663      	mov	r3, ip
   160c8:	e000      	b.n	160cc <__aeabi_cdcmpeq>
   160ca:	bf00      	nop

000160cc <__aeabi_cdcmpeq>:
   160cc:	b501      	push	{r0, lr}
   160ce:	f7ff ffb7 	bl	16040 <__cmpdf2>
   160d2:	2800      	cmp	r0, #0
   160d4:	bf48      	it	mi
   160d6:	f110 0f00 	cmnmi.w	r0, #0
   160da:	bd01      	pop	{r0, pc}

000160dc <__aeabi_dcmpeq>:
   160dc:	f84d ed08 	str.w	lr, [sp, #-8]!
   160e0:	f7ff fff4 	bl	160cc <__aeabi_cdcmpeq>
   160e4:	bf0c      	ite	eq
   160e6:	2001      	moveq	r0, #1
   160e8:	2000      	movne	r0, #0
   160ea:	f85d fb08 	ldr.w	pc, [sp], #8
   160ee:	bf00      	nop

000160f0 <__aeabi_dcmplt>:
   160f0:	f84d ed08 	str.w	lr, [sp, #-8]!
   160f4:	f7ff ffea 	bl	160cc <__aeabi_cdcmpeq>
   160f8:	bf34      	ite	cc
   160fa:	2001      	movcc	r0, #1
   160fc:	2000      	movcs	r0, #0
   160fe:	f85d fb08 	ldr.w	pc, [sp], #8
   16102:	bf00      	nop

00016104 <__aeabi_dcmple>:
   16104:	f84d ed08 	str.w	lr, [sp, #-8]!
   16108:	f7ff ffe0 	bl	160cc <__aeabi_cdcmpeq>
   1610c:	bf94      	ite	ls
   1610e:	2001      	movls	r0, #1
   16110:	2000      	movhi	r0, #0
   16112:	f85d fb08 	ldr.w	pc, [sp], #8
   16116:	bf00      	nop

00016118 <__aeabi_dcmpge>:
   16118:	f84d ed08 	str.w	lr, [sp, #-8]!
   1611c:	f7ff ffce 	bl	160bc <__aeabi_cdrcmple>
   16120:	bf94      	ite	ls
   16122:	2001      	movls	r0, #1
   16124:	2000      	movhi	r0, #0
   16126:	f85d fb08 	ldr.w	pc, [sp], #8
   1612a:	bf00      	nop

0001612c <__aeabi_dcmpgt>:
   1612c:	f84d ed08 	str.w	lr, [sp, #-8]!
   16130:	f7ff ffc4 	bl	160bc <__aeabi_cdrcmple>
   16134:	bf34      	ite	cc
   16136:	2001      	movcc	r0, #1
   16138:	2000      	movcs	r0, #0
   1613a:	f85d fb08 	ldr.w	pc, [sp], #8
   1613e:	bf00      	nop

00016140 <__aeabi_d2iz>:
   16140:	ea4f 0241 	mov.w	r2, r1, lsl #1
   16144:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   16148:	d215      	bcs.n	16176 <__aeabi_d2iz+0x36>
   1614a:	d511      	bpl.n	16170 <__aeabi_d2iz+0x30>
   1614c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   16150:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   16154:	d912      	bls.n	1617c <__aeabi_d2iz+0x3c>
   16156:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1615a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1615e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   16162:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   16166:	fa23 f002 	lsr.w	r0, r3, r2
   1616a:	bf18      	it	ne
   1616c:	4240      	negne	r0, r0
   1616e:	4770      	bx	lr
   16170:	f04f 0000 	mov.w	r0, #0
   16174:	4770      	bx	lr
   16176:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1617a:	d105      	bne.n	16188 <__aeabi_d2iz+0x48>
   1617c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   16180:	bf08      	it	eq
   16182:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   16186:	4770      	bx	lr
   16188:	f04f 0000 	mov.w	r0, #0
   1618c:	4770      	bx	lr
   1618e:	bf00      	nop

00016190 <__aeabi_uldivmod>:
   16190:	b953      	cbnz	r3, 161a8 <__aeabi_uldivmod+0x18>
   16192:	b94a      	cbnz	r2, 161a8 <__aeabi_uldivmod+0x18>
   16194:	2900      	cmp	r1, #0
   16196:	bf08      	it	eq
   16198:	2800      	cmpeq	r0, #0
   1619a:	bf1c      	itt	ne
   1619c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   161a0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   161a4:	f000 b976 	b.w	16494 <__aeabi_idiv0>
   161a8:	f1ad 0c08 	sub.w	ip, sp, #8
   161ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   161b0:	f000 f806 	bl	161c0 <__udivmoddi4>
   161b4:	f8dd e004 	ldr.w	lr, [sp, #4]
   161b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   161bc:	b004      	add	sp, #16
   161be:	4770      	bx	lr

000161c0 <__udivmoddi4>:
   161c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   161c4:	9e08      	ldr	r6, [sp, #32]
   161c6:	460d      	mov	r5, r1
   161c8:	4604      	mov	r4, r0
   161ca:	4688      	mov	r8, r1
   161cc:	2b00      	cmp	r3, #0
   161ce:	d14d      	bne.n	1626c <__udivmoddi4+0xac>
   161d0:	428a      	cmp	r2, r1
   161d2:	4694      	mov	ip, r2
   161d4:	d968      	bls.n	162a8 <__udivmoddi4+0xe8>
   161d6:	fab2 f282 	clz	r2, r2
   161da:	b152      	cbz	r2, 161f2 <__udivmoddi4+0x32>
   161dc:	fa01 f302 	lsl.w	r3, r1, r2
   161e0:	f1c2 0120 	rsb	r1, r2, #32
   161e4:	fa20 f101 	lsr.w	r1, r0, r1
   161e8:	fa0c fc02 	lsl.w	ip, ip, r2
   161ec:	ea41 0803 	orr.w	r8, r1, r3
   161f0:	4094      	lsls	r4, r2
   161f2:	ea4f 411c 	mov.w	r1, ip, lsr #16
   161f6:	fbb8 f7f1 	udiv	r7, r8, r1
   161fa:	fa1f fe8c 	uxth.w	lr, ip
   161fe:	fb01 8817 	mls	r8, r1, r7, r8
   16202:	fb07 f00e 	mul.w	r0, r7, lr
   16206:	0c23      	lsrs	r3, r4, #16
   16208:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   1620c:	4298      	cmp	r0, r3
   1620e:	d90a      	bls.n	16226 <__udivmoddi4+0x66>
   16210:	eb1c 0303 	adds.w	r3, ip, r3
   16214:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
   16218:	f080 811e 	bcs.w	16458 <__udivmoddi4+0x298>
   1621c:	4298      	cmp	r0, r3
   1621e:	f240 811b 	bls.w	16458 <__udivmoddi4+0x298>
   16222:	3f02      	subs	r7, #2
   16224:	4463      	add	r3, ip
   16226:	1a1b      	subs	r3, r3, r0
   16228:	fbb3 f0f1 	udiv	r0, r3, r1
   1622c:	fb01 3310 	mls	r3, r1, r0, r3
   16230:	fb00 fe0e 	mul.w	lr, r0, lr
   16234:	b2a4      	uxth	r4, r4
   16236:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   1623a:	45a6      	cmp	lr, r4
   1623c:	d90a      	bls.n	16254 <__udivmoddi4+0x94>
   1623e:	eb1c 0404 	adds.w	r4, ip, r4
   16242:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   16246:	f080 8109 	bcs.w	1645c <__udivmoddi4+0x29c>
   1624a:	45a6      	cmp	lr, r4
   1624c:	f240 8106 	bls.w	1645c <__udivmoddi4+0x29c>
   16250:	4464      	add	r4, ip
   16252:	3802      	subs	r0, #2
   16254:	2100      	movs	r1, #0
   16256:	eba4 040e 	sub.w	r4, r4, lr
   1625a:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
   1625e:	b11e      	cbz	r6, 16268 <__udivmoddi4+0xa8>
   16260:	2300      	movs	r3, #0
   16262:	40d4      	lsrs	r4, r2
   16264:	e9c6 4300 	strd	r4, r3, [r6]
   16268:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1626c:	428b      	cmp	r3, r1
   1626e:	d908      	bls.n	16282 <__udivmoddi4+0xc2>
   16270:	2e00      	cmp	r6, #0
   16272:	f000 80ee 	beq.w	16452 <__udivmoddi4+0x292>
   16276:	2100      	movs	r1, #0
   16278:	e9c6 0500 	strd	r0, r5, [r6]
   1627c:	4608      	mov	r0, r1
   1627e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16282:	fab3 f183 	clz	r1, r3
   16286:	2900      	cmp	r1, #0
   16288:	d14a      	bne.n	16320 <__udivmoddi4+0x160>
   1628a:	42ab      	cmp	r3, r5
   1628c:	d302      	bcc.n	16294 <__udivmoddi4+0xd4>
   1628e:	4282      	cmp	r2, r0
   16290:	f200 80fc 	bhi.w	1648c <__udivmoddi4+0x2cc>
   16294:	1a84      	subs	r4, r0, r2
   16296:	eb65 0303 	sbc.w	r3, r5, r3
   1629a:	2001      	movs	r0, #1
   1629c:	4698      	mov	r8, r3
   1629e:	2e00      	cmp	r6, #0
   162a0:	d0e2      	beq.n	16268 <__udivmoddi4+0xa8>
   162a2:	e9c6 4800 	strd	r4, r8, [r6]
   162a6:	e7df      	b.n	16268 <__udivmoddi4+0xa8>
   162a8:	b902      	cbnz	r2, 162ac <__udivmoddi4+0xec>
   162aa:	deff      	udf	#255	; 0xff
   162ac:	fab2 f282 	clz	r2, r2
   162b0:	2a00      	cmp	r2, #0
   162b2:	f040 8091 	bne.w	163d8 <__udivmoddi4+0x218>
   162b6:	eba1 000c 	sub.w	r0, r1, ip
   162ba:	2101      	movs	r1, #1
   162bc:	ea4f 471c 	mov.w	r7, ip, lsr #16
   162c0:	fa1f fe8c 	uxth.w	lr, ip
   162c4:	fbb0 f3f7 	udiv	r3, r0, r7
   162c8:	fb07 0013 	mls	r0, r7, r3, r0
   162cc:	0c25      	lsrs	r5, r4, #16
   162ce:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   162d2:	fb0e f003 	mul.w	r0, lr, r3
   162d6:	42a8      	cmp	r0, r5
   162d8:	d908      	bls.n	162ec <__udivmoddi4+0x12c>
   162da:	eb1c 0505 	adds.w	r5, ip, r5
   162de:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   162e2:	d202      	bcs.n	162ea <__udivmoddi4+0x12a>
   162e4:	42a8      	cmp	r0, r5
   162e6:	f200 80ce 	bhi.w	16486 <__udivmoddi4+0x2c6>
   162ea:	4643      	mov	r3, r8
   162ec:	1a2d      	subs	r5, r5, r0
   162ee:	fbb5 f0f7 	udiv	r0, r5, r7
   162f2:	fb07 5510 	mls	r5, r7, r0, r5
   162f6:	fb0e fe00 	mul.w	lr, lr, r0
   162fa:	b2a4      	uxth	r4, r4
   162fc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   16300:	45a6      	cmp	lr, r4
   16302:	d908      	bls.n	16316 <__udivmoddi4+0x156>
   16304:	eb1c 0404 	adds.w	r4, ip, r4
   16308:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
   1630c:	d202      	bcs.n	16314 <__udivmoddi4+0x154>
   1630e:	45a6      	cmp	lr, r4
   16310:	f200 80b6 	bhi.w	16480 <__udivmoddi4+0x2c0>
   16314:	4628      	mov	r0, r5
   16316:	eba4 040e 	sub.w	r4, r4, lr
   1631a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   1631e:	e79e      	b.n	1625e <__udivmoddi4+0x9e>
   16320:	f1c1 0720 	rsb	r7, r1, #32
   16324:	408b      	lsls	r3, r1
   16326:	fa22 fc07 	lsr.w	ip, r2, r7
   1632a:	ea4c 0c03 	orr.w	ip, ip, r3
   1632e:	fa25 fa07 	lsr.w	sl, r5, r7
   16332:	ea4f 491c 	mov.w	r9, ip, lsr #16
   16336:	fbba f8f9 	udiv	r8, sl, r9
   1633a:	fa20 f307 	lsr.w	r3, r0, r7
   1633e:	fb09 aa18 	mls	sl, r9, r8, sl
   16342:	408d      	lsls	r5, r1
   16344:	fa1f fe8c 	uxth.w	lr, ip
   16348:	431d      	orrs	r5, r3
   1634a:	fa00 f301 	lsl.w	r3, r0, r1
   1634e:	fb08 f00e 	mul.w	r0, r8, lr
   16352:	0c2c      	lsrs	r4, r5, #16
   16354:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
   16358:	42a0      	cmp	r0, r4
   1635a:	fa02 f201 	lsl.w	r2, r2, r1
   1635e:	d90b      	bls.n	16378 <__udivmoddi4+0x1b8>
   16360:	eb1c 0404 	adds.w	r4, ip, r4
   16364:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
   16368:	f080 8088 	bcs.w	1647c <__udivmoddi4+0x2bc>
   1636c:	42a0      	cmp	r0, r4
   1636e:	f240 8085 	bls.w	1647c <__udivmoddi4+0x2bc>
   16372:	f1a8 0802 	sub.w	r8, r8, #2
   16376:	4464      	add	r4, ip
   16378:	1a24      	subs	r4, r4, r0
   1637a:	fbb4 f0f9 	udiv	r0, r4, r9
   1637e:	fb09 4410 	mls	r4, r9, r0, r4
   16382:	fb00 fe0e 	mul.w	lr, r0, lr
   16386:	b2ad      	uxth	r5, r5
   16388:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
   1638c:	45a6      	cmp	lr, r4
   1638e:	d908      	bls.n	163a2 <__udivmoddi4+0x1e2>
   16390:	eb1c 0404 	adds.w	r4, ip, r4
   16394:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
   16398:	d26c      	bcs.n	16474 <__udivmoddi4+0x2b4>
   1639a:	45a6      	cmp	lr, r4
   1639c:	d96a      	bls.n	16474 <__udivmoddi4+0x2b4>
   1639e:	3802      	subs	r0, #2
   163a0:	4464      	add	r4, ip
   163a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
   163a6:	fba0 9502 	umull	r9, r5, r0, r2
   163aa:	eba4 040e 	sub.w	r4, r4, lr
   163ae:	42ac      	cmp	r4, r5
   163b0:	46c8      	mov	r8, r9
   163b2:	46ae      	mov	lr, r5
   163b4:	d356      	bcc.n	16464 <__udivmoddi4+0x2a4>
   163b6:	d053      	beq.n	16460 <__udivmoddi4+0x2a0>
   163b8:	2e00      	cmp	r6, #0
   163ba:	d069      	beq.n	16490 <__udivmoddi4+0x2d0>
   163bc:	ebb3 0208 	subs.w	r2, r3, r8
   163c0:	eb64 040e 	sbc.w	r4, r4, lr
   163c4:	fa22 f301 	lsr.w	r3, r2, r1
   163c8:	fa04 f707 	lsl.w	r7, r4, r7
   163cc:	431f      	orrs	r7, r3
   163ce:	40cc      	lsrs	r4, r1
   163d0:	e9c6 7400 	strd	r7, r4, [r6]
   163d4:	2100      	movs	r1, #0
   163d6:	e747      	b.n	16268 <__udivmoddi4+0xa8>
   163d8:	fa0c fc02 	lsl.w	ip, ip, r2
   163dc:	f1c2 0120 	rsb	r1, r2, #32
   163e0:	fa25 f301 	lsr.w	r3, r5, r1
   163e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
   163e8:	fa20 f101 	lsr.w	r1, r0, r1
   163ec:	4095      	lsls	r5, r2
   163ee:	430d      	orrs	r5, r1
   163f0:	fbb3 f1f7 	udiv	r1, r3, r7
   163f4:	fb07 3311 	mls	r3, r7, r1, r3
   163f8:	fa1f fe8c 	uxth.w	lr, ip
   163fc:	0c28      	lsrs	r0, r5, #16
   163fe:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   16402:	fb01 f30e 	mul.w	r3, r1, lr
   16406:	4283      	cmp	r3, r0
   16408:	fa04 f402 	lsl.w	r4, r4, r2
   1640c:	d908      	bls.n	16420 <__udivmoddi4+0x260>
   1640e:	eb1c 0000 	adds.w	r0, ip, r0
   16412:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
   16416:	d22f      	bcs.n	16478 <__udivmoddi4+0x2b8>
   16418:	4283      	cmp	r3, r0
   1641a:	d92d      	bls.n	16478 <__udivmoddi4+0x2b8>
   1641c:	3902      	subs	r1, #2
   1641e:	4460      	add	r0, ip
   16420:	1ac0      	subs	r0, r0, r3
   16422:	fbb0 f3f7 	udiv	r3, r0, r7
   16426:	fb07 0013 	mls	r0, r7, r3, r0
   1642a:	b2ad      	uxth	r5, r5
   1642c:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   16430:	fb03 f00e 	mul.w	r0, r3, lr
   16434:	42a8      	cmp	r0, r5
   16436:	d908      	bls.n	1644a <__udivmoddi4+0x28a>
   16438:	eb1c 0505 	adds.w	r5, ip, r5
   1643c:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   16440:	d216      	bcs.n	16470 <__udivmoddi4+0x2b0>
   16442:	42a8      	cmp	r0, r5
   16444:	d914      	bls.n	16470 <__udivmoddi4+0x2b0>
   16446:	3b02      	subs	r3, #2
   16448:	4465      	add	r5, ip
   1644a:	1a28      	subs	r0, r5, r0
   1644c:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   16450:	e738      	b.n	162c4 <__udivmoddi4+0x104>
   16452:	4631      	mov	r1, r6
   16454:	4630      	mov	r0, r6
   16456:	e707      	b.n	16268 <__udivmoddi4+0xa8>
   16458:	462f      	mov	r7, r5
   1645a:	e6e4      	b.n	16226 <__udivmoddi4+0x66>
   1645c:	4618      	mov	r0, r3
   1645e:	e6f9      	b.n	16254 <__udivmoddi4+0x94>
   16460:	454b      	cmp	r3, r9
   16462:	d2a9      	bcs.n	163b8 <__udivmoddi4+0x1f8>
   16464:	ebb9 0802 	subs.w	r8, r9, r2
   16468:	eb65 0e0c 	sbc.w	lr, r5, ip
   1646c:	3801      	subs	r0, #1
   1646e:	e7a3      	b.n	163b8 <__udivmoddi4+0x1f8>
   16470:	4643      	mov	r3, r8
   16472:	e7ea      	b.n	1644a <__udivmoddi4+0x28a>
   16474:	4628      	mov	r0, r5
   16476:	e794      	b.n	163a2 <__udivmoddi4+0x1e2>
   16478:	4641      	mov	r1, r8
   1647a:	e7d1      	b.n	16420 <__udivmoddi4+0x260>
   1647c:	46d0      	mov	r8, sl
   1647e:	e77b      	b.n	16378 <__udivmoddi4+0x1b8>
   16480:	4464      	add	r4, ip
   16482:	3802      	subs	r0, #2
   16484:	e747      	b.n	16316 <__udivmoddi4+0x156>
   16486:	3b02      	subs	r3, #2
   16488:	4465      	add	r5, ip
   1648a:	e72f      	b.n	162ec <__udivmoddi4+0x12c>
   1648c:	4608      	mov	r0, r1
   1648e:	e706      	b.n	1629e <__udivmoddi4+0xde>
   16490:	4631      	mov	r1, r6
   16492:	e6e9      	b.n	16268 <__udivmoddi4+0xa8>

00016494 <__aeabi_idiv0>:
   16494:	4770      	bx	lr
   16496:	bf00      	nop

00016498 <_swiread>:
   16498:	b5f0      	push	{r4, r5, r6, r7, lr}
   1649a:	b085      	sub	sp, #20
   1649c:	2406      	movs	r4, #6
   1649e:	e9cd 0101 	strd	r0, r1, [sp, #4]
   164a2:	ad01      	add	r5, sp, #4
   164a4:	9203      	str	r2, [sp, #12]
   164a6:	4620      	mov	r0, r4
   164a8:	4629      	mov	r1, r5
   164aa:	beab      	bkpt	0x00ab
   164ac:	4604      	mov	r4, r0
   164ae:	1c63      	adds	r3, r4, #1
   164b0:	d002      	beq.n	164b8 <_swiread+0x20>
   164b2:	4620      	mov	r0, r4
   164b4:	b005      	add	sp, #20
   164b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   164b8:	f7fe fffc 	bl	154b4 <__errno>
   164bc:	2613      	movs	r6, #19
   164be:	2700      	movs	r7, #0
   164c0:	4605      	mov	r5, r0
   164c2:	4630      	mov	r0, r6
   164c4:	4639      	mov	r1, r7
   164c6:	beab      	bkpt	0x00ab
   164c8:	4606      	mov	r6, r0
   164ca:	4620      	mov	r0, r4
   164cc:	602e      	str	r6, [r5, #0]
   164ce:	b005      	add	sp, #20
   164d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   164d2:	bf00      	nop

000164d4 <_read>:
   164d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   164d8:	4b20      	ldr	r3, [pc, #128]	; (1655c <_read+0x88>)
   164da:	4607      	mov	r7, r0
   164dc:	681b      	ldr	r3, [r3, #0]
   164de:	460d      	mov	r5, r1
   164e0:	4616      	mov	r6, r2
   164e2:	b084      	sub	sp, #16
   164e4:	b10b      	cbz	r3, 164ea <_read+0x16>
   164e6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   164e8:	b1ea      	cbz	r2, 16526 <_read+0x52>
   164ea:	2f13      	cmp	r7, #19
   164ec:	d820      	bhi.n	16530 <_read+0x5c>
   164ee:	f8df 8070 	ldr.w	r8, [pc, #112]	; 16560 <_read+0x8c>
   164f2:	f858 3037 	ldr.w	r3, [r8, r7, lsl #3]
   164f6:	1c5a      	adds	r2, r3, #1
   164f8:	d01a      	beq.n	16530 <_read+0x5c>
   164fa:	e9cd 5602 	strd	r5, r6, [sp, #8]
   164fe:	2406      	movs	r4, #6
   16500:	9301      	str	r3, [sp, #4]
   16502:	ad01      	add	r5, sp, #4
   16504:	4620      	mov	r0, r4
   16506:	4629      	mov	r1, r5
   16508:	beab      	bkpt	0x00ab
   1650a:	4604      	mov	r4, r0
   1650c:	1c63      	adds	r3, r4, #1
   1650e:	d016      	beq.n	1653e <_read+0x6a>
   16510:	eb08 00c7 	add.w	r0, r8, r7, lsl #3
   16514:	6843      	ldr	r3, [r0, #4]
   16516:	1b32      	subs	r2, r6, r4
   16518:	4614      	mov	r4, r2
   1651a:	441a      	add	r2, r3
   1651c:	6042      	str	r2, [r0, #4]
   1651e:	4620      	mov	r0, r4
   16520:	b004      	add	sp, #16
   16522:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16526:	4618      	mov	r0, r3
   16528:	f7fc fdbe 	bl	130a8 <__sinit>
   1652c:	2f13      	cmp	r7, #19
   1652e:	d9de      	bls.n	164ee <_read+0x1a>
   16530:	f7fe ffc0 	bl	154b4 <__errno>
   16534:	2309      	movs	r3, #9
   16536:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   1653a:	6003      	str	r3, [r0, #0]
   1653c:	e7ef      	b.n	1651e <_read+0x4a>
   1653e:	f7fe ffb9 	bl	154b4 <__errno>
   16542:	2613      	movs	r6, #19
   16544:	2700      	movs	r7, #0
   16546:	4605      	mov	r5, r0
   16548:	4630      	mov	r0, r6
   1654a:	4639      	mov	r1, r7
   1654c:	beab      	bkpt	0x00ab
   1654e:	4606      	mov	r6, r0
   16550:	4620      	mov	r0, r4
   16552:	602e      	str	r6, [r5, #0]
   16554:	b004      	add	sp, #16
   16556:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1655a:	bf00      	nop
   1655c:	20000124 	.word	0x20000124
   16560:	20001fbc 	.word	0x20001fbc

00016564 <_swilseek>:
   16564:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16568:	4b35      	ldr	r3, [pc, #212]	; (16640 <_swilseek+0xdc>)
   1656a:	4605      	mov	r5, r0
   1656c:	681b      	ldr	r3, [r3, #0]
   1656e:	4688      	mov	r8, r1
   16570:	4614      	mov	r4, r2
   16572:	b083      	sub	sp, #12
   16574:	b10b      	cbz	r3, 1657a <_swilseek+0x16>
   16576:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   16578:	b312      	cbz	r2, 165c0 <_swilseek+0x5c>
   1657a:	2d13      	cmp	r5, #19
   1657c:	d825      	bhi.n	165ca <_swilseek+0x66>
   1657e:	4e31      	ldr	r6, [pc, #196]	; (16644 <_swilseek+0xe0>)
   16580:	f856 3035 	ldr.w	r3, [r6, r5, lsl #3]
   16584:	1c59      	adds	r1, r3, #1
   16586:	d020      	beq.n	165ca <_swilseek+0x66>
   16588:	2c02      	cmp	r4, #2
   1658a:	d838      	bhi.n	165fe <_swilseek+0x9a>
   1658c:	2c01      	cmp	r4, #1
   1658e:	d030      	beq.n	165f2 <_swilseek+0x8e>
   16590:	2c02      	cmp	r4, #2
   16592:	d021      	beq.n	165d8 <_swilseek+0x74>
   16594:	4644      	mov	r4, r8
   16596:	46e9      	mov	r9, sp
   16598:	270a      	movs	r7, #10
   1659a:	9300      	str	r3, [sp, #0]
   1659c:	9401      	str	r4, [sp, #4]
   1659e:	4638      	mov	r0, r7
   165a0:	4649      	mov	r1, r9
   165a2:	beab      	bkpt	0x00ab
   165a4:	4607      	mov	r7, r0
   165a6:	1c7b      	adds	r3, r7, #1
   165a8:	d030      	beq.n	1660c <_swilseek+0xa8>
   165aa:	2f00      	cmp	r7, #0
   165ac:	bfb2      	itee	lt
   165ae:	f04f 34ff 	movlt.w	r4, #4294967295	; 0xffffffff
   165b2:	eb06 05c5 	addge.w	r5, r6, r5, lsl #3
   165b6:	606c      	strge	r4, [r5, #4]
   165b8:	4620      	mov	r0, r4
   165ba:	b003      	add	sp, #12
   165bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   165c0:	4618      	mov	r0, r3
   165c2:	f7fc fd71 	bl	130a8 <__sinit>
   165c6:	2d13      	cmp	r5, #19
   165c8:	d9d9      	bls.n	1657e <_swilseek+0x1a>
   165ca:	f7fe ff73 	bl	154b4 <__errno>
   165ce:	2309      	movs	r3, #9
   165d0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   165d4:	6003      	str	r3, [r0, #0]
   165d6:	e7ef      	b.n	165b8 <_swilseek+0x54>
   165d8:	240c      	movs	r4, #12
   165da:	46e9      	mov	r9, sp
   165dc:	9300      	str	r3, [sp, #0]
   165de:	4620      	mov	r0, r4
   165e0:	4649      	mov	r1, r9
   165e2:	beab      	bkpt	0x00ab
   165e4:	4604      	mov	r4, r0
   165e6:	1c62      	adds	r2, r4, #1
   165e8:	d01f      	beq.n	1662a <_swilseek+0xc6>
   165ea:	f856 3035 	ldr.w	r3, [r6, r5, lsl #3]
   165ee:	4444      	add	r4, r8
   165f0:	e7d2      	b.n	16598 <_swilseek+0x34>
   165f2:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
   165f6:	6854      	ldr	r4, [r2, #4]
   165f8:	eb18 0404 	adds.w	r4, r8, r4
   165fc:	d5cb      	bpl.n	16596 <_swilseek+0x32>
   165fe:	f7fe ff59 	bl	154b4 <__errno>
   16602:	2316      	movs	r3, #22
   16604:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16608:	6003      	str	r3, [r0, #0]
   1660a:	e7d5      	b.n	165b8 <_swilseek+0x54>
   1660c:	f7fe ff52 	bl	154b4 <__errno>
   16610:	2413      	movs	r4, #19
   16612:	2600      	movs	r6, #0
   16614:	4605      	mov	r5, r0
   16616:	4620      	mov	r0, r4
   16618:	4631      	mov	r1, r6
   1661a:	beab      	bkpt	0x00ab
   1661c:	4606      	mov	r6, r0
   1661e:	463c      	mov	r4, r7
   16620:	4620      	mov	r0, r4
   16622:	602e      	str	r6, [r5, #0]
   16624:	b003      	add	sp, #12
   16626:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1662a:	f7fe ff43 	bl	154b4 <__errno>
   1662e:	2613      	movs	r6, #19
   16630:	2700      	movs	r7, #0
   16632:	4605      	mov	r5, r0
   16634:	4630      	mov	r0, r6
   16636:	4639      	mov	r1, r7
   16638:	beab      	bkpt	0x00ab
   1663a:	4606      	mov	r6, r0
   1663c:	602e      	str	r6, [r5, #0]
   1663e:	e7bb      	b.n	165b8 <_swilseek+0x54>
   16640:	20000124 	.word	0x20000124
   16644:	20001fbc 	.word	0x20001fbc

00016648 <_lseek>:
   16648:	f7ff bf8c 	b.w	16564 <_swilseek>

0001664c <_swiwrite>:
   1664c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1664e:	b085      	sub	sp, #20
   16650:	2405      	movs	r4, #5
   16652:	e9cd 0101 	strd	r0, r1, [sp, #4]
   16656:	ad01      	add	r5, sp, #4
   16658:	9203      	str	r2, [sp, #12]
   1665a:	4620      	mov	r0, r4
   1665c:	4629      	mov	r1, r5
   1665e:	beab      	bkpt	0x00ab
   16660:	4604      	mov	r4, r0
   16662:	1c63      	adds	r3, r4, #1
   16664:	d002      	beq.n	1666c <_swiwrite+0x20>
   16666:	4620      	mov	r0, r4
   16668:	b005      	add	sp, #20
   1666a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1666c:	f7fe ff22 	bl	154b4 <__errno>
   16670:	2613      	movs	r6, #19
   16672:	2700      	movs	r7, #0
   16674:	4605      	mov	r5, r0
   16676:	4630      	mov	r0, r6
   16678:	4639      	mov	r1, r7
   1667a:	beab      	bkpt	0x00ab
   1667c:	4606      	mov	r6, r0
   1667e:	4620      	mov	r0, r4
   16680:	602e      	str	r6, [r5, #0]
   16682:	b005      	add	sp, #20
   16684:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16686:	bf00      	nop

00016688 <_write>:
   16688:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1668c:	4b2b      	ldr	r3, [pc, #172]	; (1673c <_write+0xb4>)
   1668e:	4607      	mov	r7, r0
   16690:	681b      	ldr	r3, [r3, #0]
   16692:	460d      	mov	r5, r1
   16694:	4616      	mov	r6, r2
   16696:	b084      	sub	sp, #16
   16698:	b10b      	cbz	r3, 1669e <_write+0x16>
   1669a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   1669c:	b312      	cbz	r2, 166e4 <_write+0x5c>
   1669e:	2f13      	cmp	r7, #19
   166a0:	d825      	bhi.n	166ee <_write+0x66>
   166a2:	f8df 809c 	ldr.w	r8, [pc, #156]	; 16740 <_write+0xb8>
   166a6:	f858 3037 	ldr.w	r3, [r8, r7, lsl #3]
   166aa:	1c5a      	adds	r2, r3, #1
   166ac:	d01f      	beq.n	166ee <_write+0x66>
   166ae:	e9cd 5602 	strd	r5, r6, [sp, #8]
   166b2:	2405      	movs	r4, #5
   166b4:	9301      	str	r3, [sp, #4]
   166b6:	ad01      	add	r5, sp, #4
   166b8:	4620      	mov	r0, r4
   166ba:	4629      	mov	r1, r5
   166bc:	beab      	bkpt	0x00ab
   166be:	4604      	mov	r4, r0
   166c0:	1c63      	adds	r3, r4, #1
   166c2:	d01b      	beq.n	166fc <_write+0x74>
   166c4:	2c00      	cmp	r4, #0
   166c6:	db35      	blt.n	16734 <_write+0xac>
   166c8:	eb08 00c7 	add.w	r0, r8, r7, lsl #3
   166cc:	6843      	ldr	r3, [r0, #4]
   166ce:	1b32      	subs	r2, r6, r4
   166d0:	4413      	add	r3, r2
   166d2:	42b4      	cmp	r4, r6
   166d4:	bf18      	it	ne
   166d6:	4614      	movne	r4, r2
   166d8:	6043      	str	r3, [r0, #4]
   166da:	d01d      	beq.n	16718 <_write+0x90>
   166dc:	4620      	mov	r0, r4
   166de:	b004      	add	sp, #16
   166e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   166e4:	4618      	mov	r0, r3
   166e6:	f7fc fcdf 	bl	130a8 <__sinit>
   166ea:	2f13      	cmp	r7, #19
   166ec:	d9d9      	bls.n	166a2 <_write+0x1a>
   166ee:	f7fe fee1 	bl	154b4 <__errno>
   166f2:	2309      	movs	r3, #9
   166f4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   166f8:	6003      	str	r3, [r0, #0]
   166fa:	e7ef      	b.n	166dc <_write+0x54>
   166fc:	f7fe feda 	bl	154b4 <__errno>
   16700:	2613      	movs	r6, #19
   16702:	2700      	movs	r7, #0
   16704:	4605      	mov	r5, r0
   16706:	4630      	mov	r0, r6
   16708:	4639      	mov	r1, r7
   1670a:	beab      	bkpt	0x00ab
   1670c:	4606      	mov	r6, r0
   1670e:	4620      	mov	r0, r4
   16710:	602e      	str	r6, [r5, #0]
   16712:	b004      	add	sp, #16
   16714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16718:	f7fe fecc 	bl	154b4 <__errno>
   1671c:	2613      	movs	r6, #19
   1671e:	2400      	movs	r4, #0
   16720:	4605      	mov	r5, r0
   16722:	4630      	mov	r0, r6
   16724:	4621      	mov	r1, r4
   16726:	beab      	bkpt	0x00ab
   16728:	4606      	mov	r6, r0
   1672a:	4620      	mov	r0, r4
   1672c:	602e      	str	r6, [r5, #0]
   1672e:	b004      	add	sp, #16
   16730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16734:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16738:	e7d0      	b.n	166dc <_write+0x54>
   1673a:	bf00      	nop
   1673c:	20000124 	.word	0x20000124
   16740:	20001fbc 	.word	0x20001fbc

00016744 <_swiclose>:
   16744:	b5f0      	push	{r4, r5, r6, r7, lr}
   16746:	b083      	sub	sp, #12
   16748:	2402      	movs	r4, #2
   1674a:	9001      	str	r0, [sp, #4]
   1674c:	ad01      	add	r5, sp, #4
   1674e:	4620      	mov	r0, r4
   16750:	4629      	mov	r1, r5
   16752:	beab      	bkpt	0x00ab
   16754:	4604      	mov	r4, r0
   16756:	1c63      	adds	r3, r4, #1
   16758:	d002      	beq.n	16760 <_swiclose+0x1c>
   1675a:	4620      	mov	r0, r4
   1675c:	b003      	add	sp, #12
   1675e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16760:	f7fe fea8 	bl	154b4 <__errno>
   16764:	2613      	movs	r6, #19
   16766:	2700      	movs	r7, #0
   16768:	4605      	mov	r5, r0
   1676a:	4630      	mov	r0, r6
   1676c:	4639      	mov	r1, r7
   1676e:	beab      	bkpt	0x00ab
   16770:	4606      	mov	r6, r0
   16772:	4620      	mov	r0, r4
   16774:	602e      	str	r6, [r5, #0]
   16776:	b003      	add	sp, #12
   16778:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1677a:	bf00      	nop

0001677c <_close>:
   1677c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1677e:	4b23      	ldr	r3, [pc, #140]	; (1680c <_close+0x90>)
   16780:	4605      	mov	r5, r0
   16782:	681b      	ldr	r3, [r3, #0]
   16784:	b083      	sub	sp, #12
   16786:	b10b      	cbz	r3, 1678c <_close+0x10>
   16788:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   1678a:	b1f2      	cbz	r2, 167ca <_close+0x4e>
   1678c:	2d13      	cmp	r5, #19
   1678e:	d821      	bhi.n	167d4 <_close+0x58>
   16790:	4e1f      	ldr	r6, [pc, #124]	; (16810 <_close+0x94>)
   16792:	f856 3035 	ldr.w	r3, [r6, r5, lsl #3]
   16796:	1c5a      	adds	r2, r3, #1
   16798:	d01c      	beq.n	167d4 <_close+0x58>
   1679a:	1e6a      	subs	r2, r5, #1
   1679c:	2a01      	cmp	r2, #1
   1679e:	d803      	bhi.n	167a8 <_close+0x2c>
   167a0:	68b1      	ldr	r1, [r6, #8]
   167a2:	6932      	ldr	r2, [r6, #16]
   167a4:	4291      	cmp	r1, r2
   167a6:	d01c      	beq.n	167e2 <_close+0x66>
   167a8:	2402      	movs	r4, #2
   167aa:	9301      	str	r3, [sp, #4]
   167ac:	af01      	add	r7, sp, #4
   167ae:	4620      	mov	r0, r4
   167b0:	4639      	mov	r1, r7
   167b2:	beab      	bkpt	0x00ab
   167b4:	4604      	mov	r4, r0
   167b6:	1c63      	adds	r3, r4, #1
   167b8:	d01b      	beq.n	167f2 <_close+0x76>
   167ba:	b91c      	cbnz	r4, 167c4 <_close+0x48>
   167bc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   167c0:	f846 3035 	str.w	r3, [r6, r5, lsl #3]
   167c4:	4620      	mov	r0, r4
   167c6:	b003      	add	sp, #12
   167c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   167ca:	4618      	mov	r0, r3
   167cc:	f7fc fc6c 	bl	130a8 <__sinit>
   167d0:	2d13      	cmp	r5, #19
   167d2:	d9dd      	bls.n	16790 <_close+0x14>
   167d4:	f7fe fe6e 	bl	154b4 <__errno>
   167d8:	2309      	movs	r3, #9
   167da:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   167de:	6003      	str	r3, [r0, #0]
   167e0:	e7f0      	b.n	167c4 <_close+0x48>
   167e2:	2400      	movs	r4, #0
   167e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   167e8:	4620      	mov	r0, r4
   167ea:	f846 3035 	str.w	r3, [r6, r5, lsl #3]
   167ee:	b003      	add	sp, #12
   167f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   167f2:	f7fe fe5f 	bl	154b4 <__errno>
   167f6:	2613      	movs	r6, #19
   167f8:	2700      	movs	r7, #0
   167fa:	4605      	mov	r5, r0
   167fc:	4630      	mov	r0, r6
   167fe:	4639      	mov	r1, r7
   16800:	beab      	bkpt	0x00ab
   16802:	4606      	mov	r6, r0
   16804:	4620      	mov	r0, r4
   16806:	602e      	str	r6, [r5, #0]
   16808:	b003      	add	sp, #12
   1680a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1680c:	20000124 	.word	0x20000124
   16810:	20001fbc 	.word	0x20001fbc

00016814 <_getpid>:
   16814:	2001      	movs	r0, #1
   16816:	4770      	bx	lr

00016818 <_sbrk>:
   16818:	4a0e      	ldr	r2, [pc, #56]	; (16854 <_sbrk+0x3c>)
   1681a:	4603      	mov	r3, r0
   1681c:	6810      	ldr	r0, [r2, #0]
   1681e:	b510      	push	{r4, lr}
   16820:	b1a0      	cbz	r0, 1684c <_sbrk+0x34>
   16822:	4669      	mov	r1, sp
   16824:	4403      	add	r3, r0
   16826:	428b      	cmp	r3, r1
   16828:	d808      	bhi.n	1683c <_sbrk+0x24>
   1682a:	490b      	ldr	r1, [pc, #44]	; (16858 <_sbrk+0x40>)
   1682c:	4c0b      	ldr	r4, [pc, #44]	; (1685c <_sbrk+0x44>)
   1682e:	6809      	ldr	r1, [r1, #0]
   16830:	42a1      	cmp	r1, r4
   16832:	d001      	beq.n	16838 <_sbrk+0x20>
   16834:	428b      	cmp	r3, r1
   16836:	d801      	bhi.n	1683c <_sbrk+0x24>
   16838:	6013      	str	r3, [r2, #0]
   1683a:	bd10      	pop	{r4, pc}
   1683c:	f7fe fe3a 	bl	154b4 <__errno>
   16840:	220c      	movs	r2, #12
   16842:	4603      	mov	r3, r0
   16844:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16848:	601a      	str	r2, [r3, #0]
   1684a:	bd10      	pop	{r4, pc}
   1684c:	4904      	ldr	r1, [pc, #16]	; (16860 <_sbrk+0x48>)
   1684e:	4608      	mov	r0, r1
   16850:	6011      	str	r1, [r2, #0]
   16852:	e7e6      	b.n	16822 <_sbrk+0xa>
   16854:	20001fac 	.word	0x20001fac
   16858:	20000ad0 	.word	0x20000ad0
   1685c:	cafedead 	.word	0xcafedead
   16860:	20002060 	.word	0x20002060

00016864 <_swistat>:
   16864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16866:	4b1d      	ldr	r3, [pc, #116]	; (168dc <_swistat+0x78>)
   16868:	4604      	mov	r4, r0
   1686a:	681b      	ldr	r3, [r3, #0]
   1686c:	460e      	mov	r6, r1
   1686e:	b10b      	cbz	r3, 16874 <_swistat+0x10>
   16870:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   16872:	b1d2      	cbz	r2, 168aa <_swistat+0x46>
   16874:	2c13      	cmp	r4, #19
   16876:	d81d      	bhi.n	168b4 <_swistat+0x50>
   16878:	4819      	ldr	r0, [pc, #100]	; (168e0 <_swistat+0x7c>)
   1687a:	f850 3034 	ldr.w	r3, [r0, r4, lsl #3]
   1687e:	3301      	adds	r3, #1
   16880:	d018      	beq.n	168b4 <_swistat+0x50>
   16882:	f44f 6280 	mov.w	r2, #1024	; 0x400
   16886:	6873      	ldr	r3, [r6, #4]
   16888:	250c      	movs	r5, #12
   1688a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   1688e:	eb00 04c4 	add.w	r4, r0, r4, lsl #3
   16892:	6073      	str	r3, [r6, #4]
   16894:	64b2      	str	r2, [r6, #72]	; 0x48
   16896:	4628      	mov	r0, r5
   16898:	4621      	mov	r1, r4
   1689a:	beab      	bkpt	0x00ab
   1689c:	4604      	mov	r4, r0
   1689e:	1c63      	adds	r3, r4, #1
   168a0:	d00f      	beq.n	168c2 <_swistat+0x5e>
   168a2:	6134      	str	r4, [r6, #16]
   168a4:	2400      	movs	r4, #0
   168a6:	4620      	mov	r0, r4
   168a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   168aa:	4618      	mov	r0, r3
   168ac:	f7fc fbfc 	bl	130a8 <__sinit>
   168b0:	2c13      	cmp	r4, #19
   168b2:	d9e1      	bls.n	16878 <_swistat+0x14>
   168b4:	f7fe fdfe 	bl	154b4 <__errno>
   168b8:	2309      	movs	r3, #9
   168ba:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   168be:	6003      	str	r3, [r0, #0]
   168c0:	e7f1      	b.n	168a6 <_swistat+0x42>
   168c2:	f7fe fdf7 	bl	154b4 <__errno>
   168c6:	2613      	movs	r6, #19
   168c8:	2700      	movs	r7, #0
   168ca:	4605      	mov	r5, r0
   168cc:	4630      	mov	r0, r6
   168ce:	4639      	mov	r1, r7
   168d0:	beab      	bkpt	0x00ab
   168d2:	4606      	mov	r6, r0
   168d4:	4620      	mov	r0, r4
   168d6:	602e      	str	r6, [r5, #0]
   168d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   168da:	bf00      	nop
   168dc:	20000124 	.word	0x20000124
   168e0:	20001fbc 	.word	0x20001fbc

000168e4 <_fstat>:
   168e4:	460b      	mov	r3, r1
   168e6:	b510      	push	{r4, lr}
   168e8:	2100      	movs	r1, #0
   168ea:	4604      	mov	r4, r0
   168ec:	2258      	movs	r2, #88	; 0x58
   168ee:	4618      	mov	r0, r3
   168f0:	f7f6 f84c 	bl	c98c <memset>
   168f4:	4601      	mov	r1, r0
   168f6:	4620      	mov	r0, r4
   168f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   168fc:	f7ff bfb2 	b.w	16864 <_swistat>

00016900 <_stat>:
   16900:	b538      	push	{r3, r4, r5, lr}
   16902:	460c      	mov	r4, r1
   16904:	4605      	mov	r5, r0
   16906:	2258      	movs	r2, #88	; 0x58
   16908:	2100      	movs	r1, #0
   1690a:	4620      	mov	r0, r4
   1690c:	f7f6 f83e 	bl	c98c <memset>
   16910:	4628      	mov	r0, r5
   16912:	2100      	movs	r1, #0
   16914:	f000 f812 	bl	1693c <_swiopen>
   16918:	1c43      	adds	r3, r0, #1
   1691a:	4605      	mov	r5, r0
   1691c:	d00b      	beq.n	16936 <_stat+0x36>
   1691e:	6863      	ldr	r3, [r4, #4]
   16920:	4621      	mov	r1, r4
   16922:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
   16926:	6063      	str	r3, [r4, #4]
   16928:	f7ff ff9c 	bl	16864 <_swistat>
   1692c:	4603      	mov	r3, r0
   1692e:	4628      	mov	r0, r5
   16930:	461d      	mov	r5, r3
   16932:	f7ff ff23 	bl	1677c <_close>
   16936:	4628      	mov	r0, r5
   16938:	bd38      	pop	{r3, r4, r5, pc}
   1693a:	bf00      	nop

0001693c <_swiopen>:
   1693c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16940:	4603      	mov	r3, r0
   16942:	2400      	movs	r4, #0
   16944:	460f      	mov	r7, r1
   16946:	4e2f      	ldr	r6, [pc, #188]	; (16a04 <_swiopen+0xc8>)
   16948:	b098      	sub	sp, #96	; 0x60
   1694a:	e002      	b.n	16952 <_swiopen+0x16>
   1694c:	3401      	adds	r4, #1
   1694e:	2c14      	cmp	r4, #20
   16950:	d051      	beq.n	169f6 <_swiopen+0xba>
   16952:	f856 5034 	ldr.w	r5, [r6, r4, lsl #3]
   16956:	1c68      	adds	r0, r5, #1
   16958:	d1f8      	bne.n	1694c <_swiopen+0x10>
   1695a:	f407 6220 	and.w	r2, r7, #2560	; 0xa00
   1695e:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
   16962:	f10d 0808 	add.w	r8, sp, #8
   16966:	d038      	beq.n	169da <_swiopen+0x9e>
   16968:	f240 6201 	movw	r2, #1537	; 0x601
   1696c:	f3c7 4500 	ubfx	r5, r7, #16, #1
   16970:	07b9      	lsls	r1, r7, #30
   16972:	bf48      	it	mi
   16974:	f045 0502 	orrmi.w	r5, r5, #2
   16978:	4217      	tst	r7, r2
   1697a:	bf18      	it	ne
   1697c:	f045 0504 	orrne.w	r5, r5, #4
   16980:	073a      	lsls	r2, r7, #28
   16982:	bf48      	it	mi
   16984:	f025 0504 	bicmi.w	r5, r5, #4
   16988:	4618      	mov	r0, r3
   1698a:	bf48      	it	mi
   1698c:	f045 0508 	orrmi.w	r5, r5, #8
   16990:	9302      	str	r3, [sp, #8]
   16992:	f7f6 fdcf 	bl	d534 <strlen>
   16996:	9503      	str	r5, [sp, #12]
   16998:	9004      	str	r0, [sp, #16]
   1699a:	2501      	movs	r5, #1
   1699c:	4628      	mov	r0, r5
   1699e:	4641      	mov	r1, r8
   169a0:	beab      	bkpt	0x00ab
   169a2:	4605      	mov	r5, r0
   169a4:	2d00      	cmp	r5, #0
   169a6:	db09      	blt.n	169bc <_swiopen+0x80>
   169a8:	2200      	movs	r2, #0
   169aa:	eb06 03c4 	add.w	r3, r6, r4, lsl #3
   169ae:	f846 5034 	str.w	r5, [r6, r4, lsl #3]
   169b2:	605a      	str	r2, [r3, #4]
   169b4:	4620      	mov	r0, r4
   169b6:	b018      	add	sp, #96	; 0x60
   169b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   169bc:	f7fe fd7a 	bl	154b4 <__errno>
   169c0:	2413      	movs	r4, #19
   169c2:	2700      	movs	r7, #0
   169c4:	4606      	mov	r6, r0
   169c6:	4620      	mov	r0, r4
   169c8:	4639      	mov	r1, r7
   169ca:	beab      	bkpt	0x00ab
   169cc:	4607      	mov	r7, r0
   169ce:	462c      	mov	r4, r5
   169d0:	4620      	mov	r0, r4
   169d2:	6037      	str	r7, [r6, #0]
   169d4:	b018      	add	sp, #96	; 0x60
   169d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   169da:	4618      	mov	r0, r3
   169dc:	4641      	mov	r1, r8
   169de:	9301      	str	r3, [sp, #4]
   169e0:	f7ff ff8e 	bl	16900 <_stat>
   169e4:	3001      	adds	r0, #1
   169e6:	9b01      	ldr	r3, [sp, #4]
   169e8:	d0be      	beq.n	16968 <_swiopen+0x2c>
   169ea:	f7fe fd63 	bl	154b4 <__errno>
   169ee:	2311      	movs	r3, #17
   169f0:	462c      	mov	r4, r5
   169f2:	6003      	str	r3, [r0, #0]
   169f4:	e7de      	b.n	169b4 <_swiopen+0x78>
   169f6:	f7fe fd5d 	bl	154b4 <__errno>
   169fa:	2318      	movs	r3, #24
   169fc:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16a00:	6003      	str	r3, [r0, #0]
   16a02:	e7d7      	b.n	169b4 <_swiopen+0x78>
   16a04:	20001fbc 	.word	0x20001fbc

00016a08 <_open>:
   16a08:	b40e      	push	{r1, r2, r3}
   16a0a:	b500      	push	{lr}
   16a0c:	9901      	ldr	r1, [sp, #4]
   16a0e:	f7ff ff95 	bl	1693c <_swiopen>
   16a12:	f85d eb04 	ldr.w	lr, [sp], #4
   16a16:	b003      	add	sp, #12
   16a18:	4770      	bx	lr
   16a1a:	bf00      	nop

00016a1c <_get_semihosting_exts>:
   16a1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16a20:	4607      	mov	r7, r0
   16a22:	4688      	mov	r8, r1
   16a24:	483e      	ldr	r0, [pc, #248]	; (16b20 <_get_semihosting_exts+0x104>)
   16a26:	2100      	movs	r1, #0
   16a28:	b083      	sub	sp, #12
   16a2a:	4616      	mov	r6, r2
   16a2c:	f7ff ff86 	bl	1693c <_swiopen>
   16a30:	4604      	mov	r4, r0
   16a32:	2100      	movs	r1, #0
   16a34:	4632      	mov	r2, r6
   16a36:	4638      	mov	r0, r7
   16a38:	f7f5 ffa8 	bl	c98c <memset>
   16a3c:	1c61      	adds	r1, r4, #1
   16a3e:	d045      	beq.n	16acc <_get_semihosting_exts+0xb0>
   16a40:	4b38      	ldr	r3, [pc, #224]	; (16b24 <_get_semihosting_exts+0x108>)
   16a42:	6818      	ldr	r0, [r3, #0]
   16a44:	b110      	cbz	r0, 16a4c <_get_semihosting_exts+0x30>
   16a46:	6b83      	ldr	r3, [r0, #56]	; 0x38
   16a48:	2b00      	cmp	r3, #0
   16a4a:	d043      	beq.n	16ad4 <_get_semihosting_exts+0xb8>
   16a4c:	2c13      	cmp	r4, #19
   16a4e:	d845      	bhi.n	16adc <_get_semihosting_exts+0xc0>
   16a50:	4d35      	ldr	r5, [pc, #212]	; (16b28 <_get_semihosting_exts+0x10c>)
   16a52:	f855 3034 	ldr.w	r3, [r5, r4, lsl #3]
   16a56:	3301      	adds	r3, #1
   16a58:	d040      	beq.n	16adc <_get_semihosting_exts+0xc0>
   16a5a:	eb05 09c4 	add.w	r9, r5, r4, lsl #3
   16a5e:	250c      	movs	r5, #12
   16a60:	4628      	mov	r0, r5
   16a62:	4649      	mov	r1, r9
   16a64:	beab      	bkpt	0x00ab
   16a66:	4605      	mov	r5, r0
   16a68:	1c6a      	adds	r2, r5, #1
   16a6a:	d03a      	beq.n	16ae2 <_get_semihosting_exts+0xc6>
   16a6c:	2d03      	cmp	r5, #3
   16a6e:	dd42      	ble.n	16af6 <_get_semihosting_exts+0xda>
   16a70:	3d03      	subs	r5, #3
   16a72:	42b5      	cmp	r5, r6
   16a74:	dd3f      	ble.n	16af6 <_get_semihosting_exts+0xda>
   16a76:	2204      	movs	r2, #4
   16a78:	4620      	mov	r0, r4
   16a7a:	eb0d 0102 	add.w	r1, sp, r2
   16a7e:	f7ff fd29 	bl	164d4 <_read>
   16a82:	2803      	cmp	r0, #3
   16a84:	dd37      	ble.n	16af6 <_get_semihosting_exts+0xda>
   16a86:	f89d 3004 	ldrb.w	r3, [sp, #4]
   16a8a:	2b53      	cmp	r3, #83	; 0x53
   16a8c:	d133      	bne.n	16af6 <_get_semihosting_exts+0xda>
   16a8e:	f89d 3005 	ldrb.w	r3, [sp, #5]
   16a92:	2b48      	cmp	r3, #72	; 0x48
   16a94:	d12f      	bne.n	16af6 <_get_semihosting_exts+0xda>
   16a96:	f89d 3006 	ldrb.w	r3, [sp, #6]
   16a9a:	2b46      	cmp	r3, #70	; 0x46
   16a9c:	d12b      	bne.n	16af6 <_get_semihosting_exts+0xda>
   16a9e:	f89d 3007 	ldrb.w	r3, [sp, #7]
   16aa2:	2b42      	cmp	r3, #66	; 0x42
   16aa4:	d127      	bne.n	16af6 <_get_semihosting_exts+0xda>
   16aa6:	2201      	movs	r2, #1
   16aa8:	4641      	mov	r1, r8
   16aaa:	4620      	mov	r0, r4
   16aac:	f7ff fd5a 	bl	16564 <_swilseek>
   16ab0:	2800      	cmp	r0, #0
   16ab2:	db20      	blt.n	16af6 <_get_semihosting_exts+0xda>
   16ab4:	4632      	mov	r2, r6
   16ab6:	4639      	mov	r1, r7
   16ab8:	4620      	mov	r0, r4
   16aba:	f7ff fd0b 	bl	164d4 <_read>
   16abe:	4603      	mov	r3, r0
   16ac0:	4620      	mov	r0, r4
   16ac2:	461c      	mov	r4, r3
   16ac4:	f7ff fe5a 	bl	1677c <_close>
   16ac8:	1c63      	adds	r3, r4, #1
   16aca:	d01d      	beq.n	16b08 <_get_semihosting_exts+0xec>
   16acc:	4620      	mov	r0, r4
   16ace:	b003      	add	sp, #12
   16ad0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   16ad4:	f7fc fae8 	bl	130a8 <__sinit>
   16ad8:	2c13      	cmp	r4, #19
   16ada:	d9b9      	bls.n	16a50 <_get_semihosting_exts+0x34>
   16adc:	f04f 0900 	mov.w	r9, #0
   16ae0:	e7bd      	b.n	16a5e <_get_semihosting_exts+0x42>
   16ae2:	f7fe fce7 	bl	154b4 <__errno>
   16ae6:	2613      	movs	r6, #19
   16ae8:	2700      	movs	r7, #0
   16aea:	4605      	mov	r5, r0
   16aec:	4630      	mov	r0, r6
   16aee:	4639      	mov	r1, r7
   16af0:	beab      	bkpt	0x00ab
   16af2:	4606      	mov	r6, r0
   16af4:	602e      	str	r6, [r5, #0]
   16af6:	4620      	mov	r0, r4
   16af8:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   16afc:	f7ff fe3e 	bl	1677c <_close>
   16b00:	4620      	mov	r0, r4
   16b02:	b003      	add	sp, #12
   16b04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   16b08:	f7fe fcd4 	bl	154b4 <__errno>
   16b0c:	2613      	movs	r6, #19
   16b0e:	2700      	movs	r7, #0
   16b10:	4605      	mov	r5, r0
   16b12:	4630      	mov	r0, r6
   16b14:	4639      	mov	r1, r7
   16b16:	beab      	bkpt	0x00ab
   16b18:	4606      	mov	r6, r0
   16b1a:	602e      	str	r6, [r5, #0]
   16b1c:	e7d6      	b.n	16acc <_get_semihosting_exts+0xb0>
   16b1e:	bf00      	nop
   16b20:	0001a390 	.word	0x0001a390
   16b24:	20000124 	.word	0x20000124
   16b28:	20001fbc 	.word	0x20001fbc

00016b2c <_has_ext_exit_extended>:
   16b2c:	b530      	push	{r4, r5, lr}
   16b2e:	4c0f      	ldr	r4, [pc, #60]	; (16b6c <_has_ext_exit_extended+0x40>)
   16b30:	b083      	sub	sp, #12
   16b32:	6820      	ldr	r0, [r4, #0]
   16b34:	2800      	cmp	r0, #0
   16b36:	db01      	blt.n	16b3c <_has_ext_exit_extended+0x10>
   16b38:	b003      	add	sp, #12
   16b3a:	bd30      	pop	{r4, r5, pc}
   16b3c:	2100      	movs	r1, #0
   16b3e:	2201      	movs	r2, #1
   16b40:	4d0b      	ldr	r5, [pc, #44]	; (16b70 <_has_ext_exit_extended+0x44>)
   16b42:	a801      	add	r0, sp, #4
   16b44:	6021      	str	r1, [r4, #0]
   16b46:	602a      	str	r2, [r5, #0]
   16b48:	f7ff ff68 	bl	16a1c <_get_semihosting_exts>
   16b4c:	2800      	cmp	r0, #0
   16b4e:	dd09      	ble.n	16b64 <_has_ext_exit_extended+0x38>
   16b50:	f89d 3004 	ldrb.w	r3, [sp, #4]
   16b54:	f003 0001 	and.w	r0, r3, #1
   16b58:	f003 0302 	and.w	r3, r3, #2
   16b5c:	6020      	str	r0, [r4, #0]
   16b5e:	602b      	str	r3, [r5, #0]
   16b60:	b003      	add	sp, #12
   16b62:	bd30      	pop	{r4, r5, pc}
   16b64:	6820      	ldr	r0, [r4, #0]
   16b66:	b003      	add	sp, #12
   16b68:	bd30      	pop	{r4, r5, pc}
   16b6a:	bf00      	nop
   16b6c:	20000ad4 	.word	0x20000ad4
   16b70:	20000ad8 	.word	0x20000ad8

00016b74 <_has_ext_stdout_stderr>:
   16b74:	b530      	push	{r4, r5, lr}
   16b76:	4c0f      	ldr	r4, [pc, #60]	; (16bb4 <_has_ext_stdout_stderr+0x40>)
   16b78:	b083      	sub	sp, #12
   16b7a:	6820      	ldr	r0, [r4, #0]
   16b7c:	2800      	cmp	r0, #0
   16b7e:	db01      	blt.n	16b84 <_has_ext_stdout_stderr+0x10>
   16b80:	b003      	add	sp, #12
   16b82:	bd30      	pop	{r4, r5, pc}
   16b84:	2100      	movs	r1, #0
   16b86:	2201      	movs	r2, #1
   16b88:	4d0b      	ldr	r5, [pc, #44]	; (16bb8 <_has_ext_stdout_stderr+0x44>)
   16b8a:	a801      	add	r0, sp, #4
   16b8c:	6029      	str	r1, [r5, #0]
   16b8e:	6022      	str	r2, [r4, #0]
   16b90:	f7ff ff44 	bl	16a1c <_get_semihosting_exts>
   16b94:	2800      	cmp	r0, #0
   16b96:	dd09      	ble.n	16bac <_has_ext_stdout_stderr+0x38>
   16b98:	f89d 0004 	ldrb.w	r0, [sp, #4]
   16b9c:	f000 0301 	and.w	r3, r0, #1
   16ba0:	f000 0002 	and.w	r0, r0, #2
   16ba4:	602b      	str	r3, [r5, #0]
   16ba6:	6020      	str	r0, [r4, #0]
   16ba8:	b003      	add	sp, #12
   16baa:	bd30      	pop	{r4, r5, pc}
   16bac:	6820      	ldr	r0, [r4, #0]
   16bae:	b003      	add	sp, #12
   16bb0:	bd30      	pop	{r4, r5, pc}
   16bb2:	bf00      	nop
   16bb4:	20000ad8 	.word	0x20000ad8
   16bb8:	20000ad4 	.word	0x20000ad4

00016bbc <initialise_monitor_handles>:
   16bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16bc0:	2303      	movs	r3, #3
   16bc2:	2400      	movs	r4, #0
   16bc4:	4e4c      	ldr	r6, [pc, #304]	; (16cf8 <initialise_monitor_handles+0x13c>)
   16bc6:	b085      	sub	sp, #20
   16bc8:	9601      	str	r6, [sp, #4]
   16bca:	f04f 0801 	mov.w	r8, #1
   16bce:	9303      	str	r3, [sp, #12]
   16bd0:	ad01      	add	r5, sp, #4
   16bd2:	9402      	str	r4, [sp, #8]
   16bd4:	4640      	mov	r0, r8
   16bd6:	4629      	mov	r1, r5
   16bd8:	beab      	bkpt	0x00ab
   16bda:	4680      	mov	r8, r0
   16bdc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16be0:	4f46      	ldr	r7, [pc, #280]	; (16cfc <initialise_monitor_handles+0x140>)
   16be2:	4623      	mov	r3, r4
   16be4:	4c46      	ldr	r4, [pc, #280]	; (16d00 <initialise_monitor_handles+0x144>)
   16be6:	f8c7 8000 	str.w	r8, [r7]
   16bea:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
   16bee:	3301      	adds	r3, #1
   16bf0:	2b14      	cmp	r3, #20
   16bf2:	d1fa      	bne.n	16bea <initialise_monitor_handles+0x2e>
   16bf4:	f8df 810c 	ldr.w	r8, [pc, #268]	; 16d04 <initialise_monitor_handles+0x148>
   16bf8:	f8d8 3000 	ldr.w	r3, [r8]
   16bfc:	2b00      	cmp	r3, #0
   16bfe:	db54      	blt.n	16caa <initialise_monitor_handles+0xee>
   16c00:	b94b      	cbnz	r3, 16c16 <initialise_monitor_handles+0x5a>
   16c02:	4a41      	ldr	r2, [pc, #260]	; (16d08 <initialise_monitor_handles+0x14c>)
   16c04:	6811      	ldr	r1, [r2, #0]
   16c06:	3101      	adds	r1, #1
   16c08:	d067      	beq.n	16cda <initialise_monitor_handles+0x11e>
   16c0a:	683a      	ldr	r2, [r7, #0]
   16c0c:	e9c4 2300 	strd	r2, r3, [r4]
   16c10:	b005      	add	sp, #20
   16c12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c16:	f04f 0b03 	mov.w	fp, #3
   16c1a:	2304      	movs	r3, #4
   16c1c:	9601      	str	r6, [sp, #4]
   16c1e:	f04f 0901 	mov.w	r9, #1
   16c22:	f8cd b00c 	str.w	fp, [sp, #12]
   16c26:	9302      	str	r3, [sp, #8]
   16c28:	4648      	mov	r0, r9
   16c2a:	4629      	mov	r1, r5
   16c2c:	beab      	bkpt	0x00ab
   16c2e:	4682      	mov	sl, r0
   16c30:	2308      	movs	r3, #8
   16c32:	9601      	str	r6, [sp, #4]
   16c34:	4e35      	ldr	r6, [pc, #212]	; (16d0c <initialise_monitor_handles+0x150>)
   16c36:	f8cd b00c 	str.w	fp, [sp, #12]
   16c3a:	f8c6 a000 	str.w	sl, [r6]
   16c3e:	9302      	str	r3, [sp, #8]
   16c40:	4648      	mov	r0, r9
   16c42:	4629      	mov	r1, r5
   16c44:	beab      	bkpt	0x00ab
   16c46:	4605      	mov	r5, r0
   16c48:	2100      	movs	r1, #0
   16c4a:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 16d08 <initialise_monitor_handles+0x14c>
   16c4e:	f8d8 3000 	ldr.w	r3, [r8]
   16c52:	f8c9 5000 	str.w	r5, [r9]
   16c56:	3501      	adds	r5, #1
   16c58:	bf08      	it	eq
   16c5a:	6832      	ldreq	r2, [r6, #0]
   16c5c:	6061      	str	r1, [r4, #4]
   16c5e:	bf08      	it	eq
   16c60:	f8c9 2000 	streq.w	r2, [r9]
   16c64:	683a      	ldr	r2, [r7, #0]
   16c66:	428b      	cmp	r3, r1
   16c68:	6022      	str	r2, [r4, #0]
   16c6a:	da12      	bge.n	16c92 <initialise_monitor_handles+0xd6>
   16c6c:	2201      	movs	r2, #1
   16c6e:	4d28      	ldr	r5, [pc, #160]	; (16d10 <initialise_monitor_handles+0x154>)
   16c70:	4668      	mov	r0, sp
   16c72:	6029      	str	r1, [r5, #0]
   16c74:	f8c8 2000 	str.w	r2, [r8]
   16c78:	f7ff fed0 	bl	16a1c <_get_semihosting_exts>
   16c7c:	2800      	cmp	r0, #0
   16c7e:	dd38      	ble.n	16cf2 <initialise_monitor_handles+0x136>
   16c80:	f89d 3000 	ldrb.w	r3, [sp]
   16c84:	f003 0201 	and.w	r2, r3, #1
   16c88:	f003 0302 	and.w	r3, r3, #2
   16c8c:	602a      	str	r2, [r5, #0]
   16c8e:	f8c8 3000 	str.w	r3, [r8]
   16c92:	b13b      	cbz	r3, 16ca4 <initialise_monitor_handles+0xe8>
   16c94:	2300      	movs	r3, #0
   16c96:	f8d9 2000 	ldr.w	r2, [r9]
   16c9a:	6831      	ldr	r1, [r6, #0]
   16c9c:	e9c4 3203 	strd	r3, r2, [r4, #12]
   16ca0:	60a1      	str	r1, [r4, #8]
   16ca2:	6163      	str	r3, [r4, #20]
   16ca4:	b005      	add	sp, #20
   16ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16caa:	2100      	movs	r1, #0
   16cac:	2201      	movs	r2, #1
   16cae:	f8df 9060 	ldr.w	r9, [pc, #96]	; 16d10 <initialise_monitor_handles+0x154>
   16cb2:	4668      	mov	r0, sp
   16cb4:	f8c9 1000 	str.w	r1, [r9]
   16cb8:	f8c8 2000 	str.w	r2, [r8]
   16cbc:	f7ff feae 	bl	16a1c <_get_semihosting_exts>
   16cc0:	2800      	cmp	r0, #0
   16cc2:	dd13      	ble.n	16cec <initialise_monitor_handles+0x130>
   16cc4:	f89d 3000 	ldrb.w	r3, [sp]
   16cc8:	f003 0201 	and.w	r2, r3, #1
   16ccc:	f003 0302 	and.w	r3, r3, #2
   16cd0:	f8c9 2000 	str.w	r2, [r9]
   16cd4:	f8c8 3000 	str.w	r3, [r8]
   16cd8:	e792      	b.n	16c00 <initialise_monitor_handles+0x44>
   16cda:	490c      	ldr	r1, [pc, #48]	; (16d0c <initialise_monitor_handles+0x150>)
   16cdc:	6838      	ldr	r0, [r7, #0]
   16cde:	6809      	ldr	r1, [r1, #0]
   16ce0:	6020      	str	r0, [r4, #0]
   16ce2:	6011      	str	r1, [r2, #0]
   16ce4:	6063      	str	r3, [r4, #4]
   16ce6:	b005      	add	sp, #20
   16ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cec:	f8d8 3000 	ldr.w	r3, [r8]
   16cf0:	e786      	b.n	16c00 <initialise_monitor_handles+0x44>
   16cf2:	f8d8 3000 	ldr.w	r3, [r8]
   16cf6:	e7cc      	b.n	16c92 <initialise_monitor_handles+0xd6>
   16cf8:	0001a3a8 	.word	0x0001a3a8
   16cfc:	20001fb4 	.word	0x20001fb4
   16d00:	20001fbc 	.word	0x20001fbc
   16d04:	20000ad8 	.word	0x20000ad8
   16d08:	20001fb0 	.word	0x20001fb0
   16d0c:	20001fb8 	.word	0x20001fb8
   16d10:	20000ad4 	.word	0x20000ad4

00016d14 <_link>:
   16d14:	b508      	push	{r3, lr}
   16d16:	f7fe fbcd 	bl	154b4 <__errno>
   16d1a:	2258      	movs	r2, #88	; 0x58
   16d1c:	4603      	mov	r3, r0
   16d1e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16d22:	601a      	str	r2, [r3, #0]
   16d24:	bd08      	pop	{r3, pc}
   16d26:	bf00      	nop

00016d28 <_unlink>:
   16d28:	b5f0      	push	{r4, r5, r6, r7, lr}
   16d2a:	b083      	sub	sp, #12
   16d2c:	9000      	str	r0, [sp, #0]
   16d2e:	f7f6 fc01 	bl	d534 <strlen>
   16d32:	240e      	movs	r4, #14
   16d34:	466d      	mov	r5, sp
   16d36:	9001      	str	r0, [sp, #4]
   16d38:	4620      	mov	r0, r4
   16d3a:	4629      	mov	r1, r5
   16d3c:	beab      	bkpt	0x00ab
   16d3e:	4604      	mov	r4, r0
   16d40:	1c63      	adds	r3, r4, #1
   16d42:	bf18      	it	ne
   16d44:	2400      	movne	r4, #0
   16d46:	d002      	beq.n	16d4e <_unlink+0x26>
   16d48:	4620      	mov	r0, r4
   16d4a:	b003      	add	sp, #12
   16d4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16d4e:	f7fe fbb1 	bl	154b4 <__errno>
   16d52:	2613      	movs	r6, #19
   16d54:	2700      	movs	r7, #0
   16d56:	4605      	mov	r5, r0
   16d58:	4630      	mov	r0, r6
   16d5a:	4639      	mov	r1, r7
   16d5c:	beab      	bkpt	0x00ab
   16d5e:	4606      	mov	r6, r0
   16d60:	4620      	mov	r0, r4
   16d62:	602e      	str	r6, [r5, #0]
   16d64:	b003      	add	sp, #12
   16d66:	bdf0      	pop	{r4, r5, r6, r7, pc}

00016d68 <_gettimeofday>:
   16d68:	b5f0      	push	{r4, r5, r6, r7, lr}
   16d6a:	460d      	mov	r5, r1
   16d6c:	b150      	cbz	r0, 16d84 <_gettimeofday+0x1c>
   16d6e:	4604      	mov	r4, r0
   16d70:	2611      	movs	r6, #17
   16d72:	2700      	movs	r7, #0
   16d74:	4630      	mov	r0, r6
   16d76:	4639      	mov	r1, r7
   16d78:	beab      	bkpt	0x00ab
   16d7a:	4606      	mov	r6, r0
   16d7c:	17f3      	asrs	r3, r6, #31
   16d7e:	e9c4 6300 	strd	r6, r3, [r4]
   16d82:	60a7      	str	r7, [r4, #8]
   16d84:	b115      	cbz	r5, 16d8c <_gettimeofday+0x24>
   16d86:	2300      	movs	r3, #0
   16d88:	e9c5 3300 	strd	r3, r3, [r5]
   16d8c:	2000      	movs	r0, #0
   16d8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

00016d90 <_clock>:
   16d90:	b530      	push	{r4, r5, lr}
   16d92:	2410      	movs	r4, #16
   16d94:	2500      	movs	r5, #0
   16d96:	4620      	mov	r0, r4
   16d98:	4629      	mov	r1, r5
   16d9a:	beab      	bkpt	0x00ab
   16d9c:	4604      	mov	r4, r0
   16d9e:	4620      	mov	r0, r4
   16da0:	bd30      	pop	{r4, r5, pc}
   16da2:	bf00      	nop

00016da4 <_times>:
   16da4:	b570      	push	{r4, r5, r6, lr}
   16da6:	2510      	movs	r5, #16
   16da8:	2600      	movs	r6, #0
   16daa:	4604      	mov	r4, r0
   16dac:	4628      	mov	r0, r5
   16dae:	4631      	mov	r1, r6
   16db0:	beab      	bkpt	0x00ab
   16db2:	4605      	mov	r5, r0
   16db4:	b11c      	cbz	r4, 16dbe <_times+0x1a>
   16db6:	e9c4 5600 	strd	r5, r6, [r4]
   16dba:	e9c4 6602 	strd	r6, r6, [r4, #8]
   16dbe:	4628      	mov	r0, r5
   16dc0:	bd70      	pop	{r4, r5, r6, pc}
   16dc2:	bf00      	nop

00016dc4 <_isatty>:
   16dc4:	4b17      	ldr	r3, [pc, #92]	; (16e24 <_isatty+0x60>)
   16dc6:	b570      	push	{r4, r5, r6, lr}
   16dc8:	681b      	ldr	r3, [r3, #0]
   16dca:	4605      	mov	r5, r0
   16dcc:	b10b      	cbz	r3, 16dd2 <_isatty+0xe>
   16dce:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   16dd0:	b1e2      	cbz	r2, 16e0c <_isatty+0x48>
   16dd2:	2d13      	cmp	r5, #19
   16dd4:	d81f      	bhi.n	16e16 <_isatty+0x52>
   16dd6:	4814      	ldr	r0, [pc, #80]	; (16e28 <_isatty+0x64>)
   16dd8:	f850 3035 	ldr.w	r3, [r0, r5, lsl #3]
   16ddc:	3301      	adds	r3, #1
   16dde:	d01a      	beq.n	16e16 <_isatty+0x52>
   16de0:	2409      	movs	r4, #9
   16de2:	eb00 05c5 	add.w	r5, r0, r5, lsl #3
   16de6:	4620      	mov	r0, r4
   16de8:	4629      	mov	r1, r5
   16dea:	beab      	bkpt	0x00ab
   16dec:	4604      	mov	r4, r0
   16dee:	2c01      	cmp	r4, #1
   16df0:	4620      	mov	r0, r4
   16df2:	d00a      	beq.n	16e0a <_isatty+0x46>
   16df4:	f7fe fb5e 	bl	154b4 <__errno>
   16df8:	2613      	movs	r6, #19
   16dfa:	2400      	movs	r4, #0
   16dfc:	4605      	mov	r5, r0
   16dfe:	4630      	mov	r0, r6
   16e00:	4621      	mov	r1, r4
   16e02:	beab      	bkpt	0x00ab
   16e04:	4606      	mov	r6, r0
   16e06:	4620      	mov	r0, r4
   16e08:	602e      	str	r6, [r5, #0]
   16e0a:	bd70      	pop	{r4, r5, r6, pc}
   16e0c:	4618      	mov	r0, r3
   16e0e:	f7fc f94b 	bl	130a8 <__sinit>
   16e12:	2d13      	cmp	r5, #19
   16e14:	d9df      	bls.n	16dd6 <_isatty+0x12>
   16e16:	f7fe fb4d 	bl	154b4 <__errno>
   16e1a:	2209      	movs	r2, #9
   16e1c:	4603      	mov	r3, r0
   16e1e:	2000      	movs	r0, #0
   16e20:	601a      	str	r2, [r3, #0]
   16e22:	bd70      	pop	{r4, r5, r6, pc}
   16e24:	20000124 	.word	0x20000124
   16e28:	20001fbc 	.word	0x20001fbc

00016e2c <_system>:
   16e2c:	b5f0      	push	{r4, r5, r6, r7, lr}
   16e2e:	b083      	sub	sp, #12
   16e30:	b1d0      	cbz	r0, 16e68 <_system+0x3c>
   16e32:	9000      	str	r0, [sp, #0]
   16e34:	f7f6 fb7e 	bl	d534 <strlen>
   16e38:	2412      	movs	r4, #18
   16e3a:	466d      	mov	r5, sp
   16e3c:	9001      	str	r0, [sp, #4]
   16e3e:	4620      	mov	r0, r4
   16e40:	4629      	mov	r1, r5
   16e42:	beab      	bkpt	0x00ab
   16e44:	4604      	mov	r4, r0
   16e46:	1c63      	adds	r3, r4, #1
   16e48:	4625      	mov	r5, r4
   16e4a:	d011      	beq.n	16e70 <_system+0x44>
   16e4c:	2cff      	cmp	r4, #255	; 0xff
   16e4e:	d805      	bhi.n	16e5c <_system+0x30>
   16e50:	b124      	cbz	r4, 16e5c <_system+0x30>
   16e52:	0065      	lsls	r5, r4, #1
   16e54:	f3c5 2307 	ubfx	r3, r5, #8, #8
   16e58:	42a3      	cmp	r3, r4
   16e5a:	d102      	bne.n	16e62 <_system+0x36>
   16e5c:	4628      	mov	r0, r5
   16e5e:	b003      	add	sp, #12
   16e60:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16e62:	006d      	lsls	r5, r5, #1
   16e64:	d1f6      	bne.n	16e54 <_system+0x28>
   16e66:	e7f9      	b.n	16e5c <_system+0x30>
   16e68:	2501      	movs	r5, #1
   16e6a:	4628      	mov	r0, r5
   16e6c:	b003      	add	sp, #12
   16e6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16e70:	f7fe fb20 	bl	154b4 <__errno>
   16e74:	2613      	movs	r6, #19
   16e76:	2700      	movs	r7, #0
   16e78:	4604      	mov	r4, r0
   16e7a:	4630      	mov	r0, r6
   16e7c:	4639      	mov	r1, r7
   16e7e:	beab      	bkpt	0x00ab
   16e80:	4606      	mov	r6, r0
   16e82:	6026      	str	r6, [r4, #0]
   16e84:	e7ea      	b.n	16e5c <_system+0x30>
   16e86:	bf00      	nop

00016e88 <_rename>:
   16e88:	b5f0      	push	{r4, r5, r6, r7, lr}
   16e8a:	b085      	sub	sp, #20
   16e8c:	460c      	mov	r4, r1
   16e8e:	9000      	str	r0, [sp, #0]
   16e90:	f7f6 fb50 	bl	d534 <strlen>
   16e94:	4603      	mov	r3, r0
   16e96:	4620      	mov	r0, r4
   16e98:	e9cd 3401 	strd	r3, r4, [sp, #4]
   16e9c:	f7f6 fb4a 	bl	d534 <strlen>
   16ea0:	240f      	movs	r4, #15
   16ea2:	466d      	mov	r5, sp
   16ea4:	9003      	str	r0, [sp, #12]
   16ea6:	4620      	mov	r0, r4
   16ea8:	4629      	mov	r1, r5
   16eaa:	beab      	bkpt	0x00ab
   16eac:	4604      	mov	r4, r0
   16eae:	1c63      	adds	r3, r4, #1
   16eb0:	d006      	beq.n	16ec0 <_rename+0x38>
   16eb2:	3c00      	subs	r4, #0
   16eb4:	bf18      	it	ne
   16eb6:	2401      	movne	r4, #1
   16eb8:	4264      	negs	r4, r4
   16eba:	4620      	mov	r0, r4
   16ebc:	b005      	add	sp, #20
   16ebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16ec0:	f7fe faf8 	bl	154b4 <__errno>
   16ec4:	2613      	movs	r6, #19
   16ec6:	2700      	movs	r7, #0
   16ec8:	4605      	mov	r5, r0
   16eca:	4630      	mov	r0, r6
   16ecc:	4639      	mov	r1, r7
   16ece:	beab      	bkpt	0x00ab
   16ed0:	4606      	mov	r6, r0
   16ed2:	4620      	mov	r0, r4
   16ed4:	602e      	str	r6, [r5, #0]
   16ed6:	b005      	add	sp, #20
   16ed8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16eda:	bf00      	nop

00016edc <_exit>:
   16edc:	4601      	mov	r1, r0
   16ede:	b508      	push	{r3, lr}
   16ee0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16ee4:	4a01      	ldr	r2, [pc, #4]	; (16eec <_exit+0x10>)
   16ee6:	f000 f803 	bl	16ef0 <_kill_shared>
   16eea:	bf00      	nop
   16eec:	00020026 	.word	0x00020026

00016ef0 <_kill_shared>:
   16ef0:	b500      	push	{lr}
   16ef2:	b083      	sub	sp, #12
   16ef4:	e9cd 2100 	strd	r2, r1, [sp]
   16ef8:	f7ff fe18 	bl	16b2c <_has_ext_exit_extended>
   16efc:	2800      	cmp	r0, #0
   16efe:	bf14      	ite	ne
   16f00:	2420      	movne	r4, #32
   16f02:	2418      	moveq	r4, #24
   16f04:	f7ff fe12 	bl	16b2c <_has_ext_exit_extended>
   16f08:	b120      	cbz	r0, 16f14 <_kill_shared+0x24>
   16f0a:	466d      	mov	r5, sp
   16f0c:	4620      	mov	r0, r4
   16f0e:	4629      	mov	r1, r5
   16f10:	beab      	bkpt	0x00ab
   16f12:	4604      	mov	r4, r0
   16f14:	9d00      	ldr	r5, [sp, #0]
   16f16:	4620      	mov	r0, r4
   16f18:	4629      	mov	r1, r5
   16f1a:	beab      	bkpt	0x00ab
   16f1c:	4604      	mov	r4, r0
   16f1e:	bf00      	nop

00016f20 <_kill>:
   16f20:	2906      	cmp	r1, #6
   16f22:	b508      	push	{r3, lr}
   16f24:	d002      	beq.n	16f2c <_kill+0xc>
   16f26:	4a03      	ldr	r2, [pc, #12]	; (16f34 <_kill+0x14>)
   16f28:	f7ff ffe2 	bl	16ef0 <_kill_shared>
   16f2c:	4a02      	ldr	r2, [pc, #8]	; (16f38 <_kill+0x18>)
   16f2e:	f7ff ffdf 	bl	16ef0 <_kill_shared>
   16f32:	bf00      	nop
   16f34:	00020026 	.word	0x00020026
   16f38:	00020023 	.word	0x00020023

00016f3c <_init>:
   16f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16f3e:	bf00      	nop
   16f40:	bcf8      	pop	{r3, r4, r5, r6, r7}
   16f42:	bc08      	pop	{r3}
   16f44:	469e      	mov	lr, r3
   16f46:	4770      	bx	lr

00016f48 <_fini>:
   16f48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16f4a:	bf00      	nop
   16f4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   16f4e:	bc08      	pop	{r3}
   16f50:	469e      	mov	lr, r3
   16f52:	4770      	bx	lr

00016f54 <all_implied_fbits>:
   16f54:	2702 2705 2707 272f 2731 270d 272b 2711     .'.'.'/'1'.'+'.'
   16f64:	2710 271a 2738 2714 273b 2723 271f 273a     .'.'8'.';'#'.':'
   16f74:	2726 0000                                   &'..

00016f78 <kCfsrBfarValidFlag>:
   16f78:	8000 0000                                   ....

00016f7c <kCfsrLspErrFlag>:
   16f7c:	2000 0000                                   . ..

00016f80 <kCfsrStkErrFlag>:
   16f80:	1000 0000                                   ....

00016f84 <kCfsrUnstkErrFlag>:
   16f84:	0800 0000                                   ....

00016f88 <kCfsrImpreciseErrFlag>:
   16f88:	0400 0000                                   ....

00016f8c <kCfsrPreciseErrFlag>:
   16f8c:	0200 0000                                   ....

00016f90 <kCfsrIBusErrFlag>:
   16f90:	0100 0000                                   ....

00016f94 <kCfsrMmarValidFlag>:
   16f94:	0080 0000                                   ....

00016f98 <kCfsrMLspErrFlag>:
   16f98:	0020 0000                                    ...

00016f9c <kCfsrMStkErrFlag>:
   16f9c:	0010 0000                                   ....

00016fa0 <kCfsrMUnstkErrFlag>:
   16fa0:	0008 0000                                   ....

00016fa4 <kCfsrDAccViolFlag>:
   16fa4:	0002 0000                                   ....

00016fa8 <kCfsrIAccViolFlag>:
   16fa8:	0001 0000                                   ....

00016fac <kCfsrDivByZeroFlag>:
   16fac:	0000 0200                                   ....

00016fb0 <kCfsrUnalignedFlag>:
   16fb0:	0000 0100                                   ....

00016fb4 <kCfsrNoCpFlag>:
   16fb4:	0000 0008                                   ....

00016fb8 <kCfsrInvPcFlag>:
   16fb8:	0000 0004                                   ....

00016fbc <kCfsrInvStateFlag>:
   16fbc:	0000 0002                                   ....

00016fc0 <kCfsrUndefInstrFlag>:
   16fc0:	0000 0001                                   ....

00016fc4 <kCcrNonBaseThreadEnableFlag>:
   16fc4:	0001 0000                                   ....

00016fc8 <kCcrUserSettablePendSvFlag>:
   16fc8:	0002 0000                                   ....

00016fcc <kCcrUnalignTrapEnableFlag>:
   16fcc:	0008 0000                                   ....

00016fd0 <kCcrDivByZeroTrapEnableFlag>:
   16fd0:	0010 0000                                   ....

00016fd4 <kCcrMainStackAlignFlag>:
   16fd4:	0200 0000                                   ....

00016fd8 <kCcrIgnoreLsbOnDataFlag>:
   16fd8:	0400 0000                                   ....

00016fdc <kCcrStkAlignFlag>:
   16fdc:	0200 0000                                   ....

00016fe0 <kCcrBranchPredictionEnableFlag>:
   16fe0:	0000 0004                                   ....

00016fe4 <kCcrL1CacheEnableFlag>:
   16fe4:	0000 0008                                   ....

00016fe8 <kSystickCsrCountFlag>:
   16fe8:	0010 0000                                   ....

00016fec <kSystickCsrClkSource>:
   16fec:	0002 0000                                   ....

00016ff0 <kSystickCsrClkSourceExternal>:
   16ff0:	0000 0000                                   ....

00016ff4 <kSystickCsrClkSourceCore>:
   16ff4:	0002 0000                                   ....

00016ff8 <kSystickCsrTickInt>:
   16ff8:	0001 0000                                   ....

00016ffc <kSystickCsrTickIntPend>:
   16ffc:	0001 0000                                   ....

00017000 <kSystickCsrTickIntNoPend>:
   17000:	0000 0000                                   ....

00017004 <kSystickCsrEnable>:
   17004:	0000 0000                                   ....

00017008 <kSystickCsrEnableMultishot>:
   17008:	0000 0000                                   ....

0001700c <kSystickCsrEnableDisabled>:
   1700c:	0000 0000                                   ....

00017010 <kSystickCvrNoRef>:
   17010:	001f 0000                                   ....

00017014 <kSystickCvrSkew>:
   17014:	001e 0000                                   ....

00017018 <kSystickCvrTenms>:
   17018:	ffff 00ff 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ....------------
   17028:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
   17038:	2d2d 002d 6d45 6c75 7461 726f 7420 7365     ---.Emulator tes
   17048:	2074 6562 636e 0068                         t bench.

00017050 <kSystickCsrCountFlag>:
   17050:	0010 0000                                   ....

00017054 <kSystickCsrClkSource>:
   17054:	0002 0000                                   ....

00017058 <kSystickCsrClkSourceExternal>:
   17058:	0000 0000                                   ....

0001705c <kSystickCsrClkSourceCore>:
   1705c:	0002 0000                                   ....

00017060 <kSystickCsrTickInt>:
   17060:	0001 0000                                   ....

00017064 <kSystickCsrTickIntPend>:
   17064:	0001 0000                                   ....

00017068 <kSystickCsrTickIntNoPend>:
   17068:	0000 0000                                   ....

0001706c <kSystickCsrEnable>:
   1706c:	0000 0000                                   ....

00017070 <kSystickCsrEnableMultishot>:
   17070:	0000 0000                                   ....

00017074 <kSystickCsrEnableDisabled>:
   17074:	0000 0000                                   ....

00017078 <kSystickCvrNoRef>:
   17078:	001f 0000                                   ....

0001707c <kSystickCvrSkew>:
   1707c:	001e 0000                                   ....

00017080 <kSystickCvrTenms>:
   17080:	ffff 00ff                                   ....

00017084 <kEps>:
   17084:	b717 38d1 2023 6554 7473 203a 6953 706d     ...8# Test: Simp
   17094:	656c 6320 6c61 7563 616c 6974 6e6f 2073     le calculations 
   170a4:	6977 6874 6620 6f6c 7461 0073 2066 3d3d     with floats.f ==
   170b4:	3120 3332 352e 0066 6f76 6469 5420 7365      123.5f.void Tes
   170c4:	4674 6f6c 7461 2928 0000 0000 552f 6573     tFloat()..../Use
   170d4:	7372 632f 6767 6d2f 6369 6f72 6d65 2f75     rs/cgg/microemu/
   170e4:	6574 7473 2f73 7973 7473 6d65 745f 7365     tests/system_tes
   170f4:	7374 742f 7365 6274 6e65 6863 732f 6372     ts/testbench/src
   17104:	742f 7365 5f74 6c66 616f 2e74 7063 0070     /test_float.cpp.
   17114:	5f66 2069 3d3d 3120 3332 0000 6628 6172     f_i == 123..(fra
   17124:	2063 3d3e 2820 2e30 6635 2d20 6b20 7045     c >= (0.5f - kEp
   17134:	2973 2029 2626 2820 7266 6361 3c20 203d     s)) && (frac <= 
   17144:	3028 352e 2066 202b 456b 7370 2929 0000     (0.5f + kEps))..
   17154:	6964 6967 2074 3d3e 3020 2620 2026 6964     digit >= 0 && di
   17164:	6967 2074 3d3c 3920 0000 0000 2069 3d21     git <= 9....i !=
   17174:	3020 7c20 207c 6964 6967 2074 3d3d 3520      0 || digit == 5
   17184:	0000 0000 2069 3d21 3120 7c20 207c 6964     ....i != 1 || di
   17194:	6967 2074 3d3d 3020 0000 0000 2069 3d21     git == 0....i !=
   171a4:	3220 7c20 207c 6964 6967 2074 3d3d 3020      2 || digit == 0
   171b4:	0000 0000 7349 6c46 616f 4574 7571 6c61     ....IsFloatEqual
   171c4:	6128 202c 2e39 6630 0029 0000 7349 6c46     (a, 9.0f)...IsFl
   171d4:	616f 4574 7571 6c61 6128 635f 6965 2c6c     oatEqual(a_ceil,
   171e4:	3220 302e 2966 0000 7349 6c46 616f 4574      2.0f)..IsFloatE
   171f4:	7571 6c61 6128 665f 6f6c 726f 202c 2e31     qual(a_floor, 1.
   17204:	6630 0029 7349 6c46 616f 4574 7571 6c61     0f).IsFloatEqual
   17214:	6128 725f 756f 646e 202c 2e31 6630 0029     (a_round, 1.0f).
   17224:	7473 3a64 693a 6e73 6e61 4e28 4e41 2029     std::isnan(NAN) 
   17234:	3d3d 7420 7572 0065 7473 3a64 693a 6e73     == true.std::isn
   17244:	6e61 4928 464e 4e49 5449 2959 3d20 203d     an(INFINITY) == 
   17254:	6166 736c 0065 0000 7473 3a64 693a 6e73     false...std::isn
   17264:	6e61 3028 302e 2029 3d3d 6620 6c61 6573     an(0.0) == false
   17274:	0000 0000 7473 3a64 693a 6973 666e 4928     ....std::isinf(I
   17284:	464e 4e49 5449 2959 3d20 203d 7274 6575     NFINITY) == true
   17294:	0000 0000 2023 6554 7473 203a 7053 6972     ....# Test: Spri
   172a4:	746e 0066 4241 0043 7325 202c 6925 202c     ntf.ABC.%s, %i, 
   172b4:	7525 0000 4241 2c43 2d20 3231 2c33 3320     %u..ABC, -123, 3
   172c4:	3534 0000 7473 6372 706d 6228 6675 202c     45..strcmp(buf, 
   172d4:	4122 4342 202c 312d 3332 202c 3433 2235     "ABC, -123, 345"
   172e4:	2029 3d3d 3020 0000 6f76 6469 5420 7365     ) == 0..void Tes
   172f4:	5374 7270 6e69 6674 2928 0000 552f 6573     tSprintf()../Use
   17304:	7372 632f 6767 6d2f 6369 6f72 6d65 2f75     rs/cgg/microemu/
   17314:	6574 7473 2f73 7973 7473 6d65 745f 7365     tests/system_tes
   17324:	7374 742f 7365 6274 6e65 6863 732f 6372     ts/testbench/src
   17334:	742f 7365 5f74 7073 6972 746e 2e66 7063     /test_sprintf.cp
   17344:	0070 0000 2020 3231 3433 3d20 203d 7525     p...  1234 == %u
   17354:	000a 0000 2020 3231 3433 3d20 203d 3231     ....  1234 == 12
   17364:	3433 000a 7473 6372 706d 6228 6675 202c     34..strcmp(buf, 
   17374:	2022 3120 3332 2034 3d3d 3120 3332 5c34     "  1234 == 1234\
   17384:	226e 2029 3d3d 3020 0000 0000 2020 7830     n") == 0....  0x
   17394:	4143 4546 4142 4542 3d20 203d 7830 5825     CAFEBABE == 0x%X
   173a4:	000a 0000 2020 7830 4143 4546 4142 4542     ....  0xCAFEBABE
   173b4:	3d20 203d 7830 4143 4546 4142 4542 000a      == 0xCAFEBABE..
   173c4:	7473 6372 706d 6228 6675 202c 2022 3020     strcmp(buf, "  0
   173d4:	4378 4641 4245 4241 2045 3d3d 3020 4378     xCAFEBABE == 0xC
   173e4:	4641 4245 4241 5c45 226e 2029 3d3d 3020     AFEBABE\n") == 0
   173f4:	0000 0000 2020 6c46 616f 3a74 2520 0a66     ....  Float: %f.
   17404:	0000 0000 2020 6c46 616f 3a74 3120 3332     ....  Float: 123
   17414:	342e 3635 3737 0a39 0000 0000 7473 6372     .456779.....strc
   17424:	706d 6228 6675 202c 2022 4620 6f6c 7461     mp(buf, "  Float
   17434:	203a 3231 2e33 3534 3736 3937 6e5c 2922     : 123.456779\n")
   17444:	3d20 203d 0030 0000 6e69 6573 7472 6465      == 0...inserted
   17454:	7320 7274 0000 0000 2020 2d2d 203e 7325      str....  --> %s
   17464:	0a20 0000 2020 2d2d 203e 6e69 6573 7472      ...  --> insert
   17474:	6465 7320 7274 0a20 0000 0000 7473 6372     ed str .....strc
   17484:	706d 6228 6675 202c 2022 2d20 3e2d 6920     mp(buf, "  --> i
   17494:	736e 7265 6574 2064 7473 2072 6e5c 2922     nserted str \n")
   174a4:	3d20 203d 0030 0000 2023 6554 7473 203a      == 0...# Test: 
   174b4:	7453 6e61 6164 6472 6f20 7475 7570 0074     Standard output.
   174c4:	2020 6548 6c6c 206f 6f57 6c72 0064 0000       Hello World...
   174d4:	2020 3130 3332 3534 3736 3938 3130 3332       01234567890123
   174e4:	3534 3736 3938 3130 3332 3534 3736 3938     4567890123456789
   174f4:	3130 3332 3534 3736 3938 0000 2020 7066     0123456789..  fp
   17504:	6972 746e 2066 756f 7074 7475 000a 0000     rintf output....
   17514:	2020 7069 6972 746e 2066 756f 7074 7475       iprintf output
   17524:	000a 0000 2023 6554 7473 203a 7453 6361     ....# Test: Stac
   17534:	206b 6c61 6769 6d6e 6e65 0074 7453 6361     k alignment.Stac
   17544:	416b 696c 6e67 656d 746e 6554 7473 2928     kAlignmentTest()
   17554:	3d20 203d 7830 4546 0000 0000 6f76 6469      == 0xFE....void
   17564:	5420 7365 5374 6174 6b63 6c41 6769 6d6e      TestStackAlignm
   17574:	6e65 2874 0029 0000 552f 6573 7372 632f     ent().../Users/c
   17584:	6767 6d2f 6369 6f72 6d65 2f75 6574 7473     gg/microemu/test
   17594:	2f73 7973 7473 6d65 745f 7365 7374 742f     s/system_tests/t
   175a4:	7365 6274 6e65 6863 732f 6372 742f 7365     estbench/src/tes
   175b4:	5f74 7473 6361 5f6b 6c61 6769 6d6e 6e65     t_stack_alignmen
   175c4:	2e74 7063 0070 0000 6143 6c6c 6346 3174     t.cpp...CallFct1
   175d4:	3028 4478 2945 3d20 203d 7830 4544 0000     (0xDE) == 0xDE..
   175e4:	0000 0000 7473 6c72 6e65 7428 7365 5f74     ....strlen(test_
   175f4:	7473 3172 2029 3d3d 3020 0000 6f76 6469     str1) == 0..void
   17604:	5420 7365 5374 7274 656c 286e 0029 0000      TestStrlen()...
   17614:	552f 6573 7372 632f 6767 6d2f 6369 6f72     /Users/cgg/micro
   17624:	6d65 2f75 6574 7473 2f73 7973 7473 6d65     emu/tests/system
   17634:	745f 7365 7374 742f 7365 6274 6e65 6863     _tests/testbench
   17644:	732f 6372 742f 7365 5f74 7473 5f64 6c61     /src/test_std_al
   17654:	6f67 2e73 7063 0070 0030 0000 7473 6c72     gos.cpp.0...strl
   17664:	6e65 7428 7365 5f74 7473 3272 2029 3d3d     en(test_str2) ==
   17674:	3120 0000 3130 3332 3534 3736 0038 0000      1..012345678...
   17684:	7473 6c72 6e65 7428 7365 5f74 7473 3372     strlen(test_str3
   17694:	2029 3d3d 3920 0000 616d 6e69 632e 7070     ) == 9..main.cpp
   176a4:	0000 0000 7473 6c72 6e65 7428 7365 5f74     ....strlen(test_
   176b4:	7473 3472 2029 3d3d 3820 0000 4241 4443     str4) == 8..ABCD
   176c4:	4645 0047 7473 6372 706d 7428 7365 5f74     EFG.strcmp(test_
   176d4:	7473 5f72 6d63 2c70 2220 4241 4443 4645     str_cmp, "ABCDEF
   176e4:	2247 2029 3d3d 3020 0000 0000 6f76 6469     G") == 0....void
   176f4:	5420 7365 5374 7274 6d63 2870 0029 0000      TestStrcmp()...
   17704:	4241 6443 4645 0047 7473 6372 706d 7428     ABCdEFG.strcmp(t
   17714:	7365 5f74 7473 5f72 6d63 2c70 2220 4241     est_str_cmp, "AB
   17724:	6443 4645 2247 2029 203c 0030 4241 4343     CdEFG") < 0.ABCC
   17734:	4645 0047 7473 6372 706d 7428 7365 5f74     EFG.strcmp(test_
   17744:	7473 5f72 6d63 2c70 2220 4241 4343 4645     str_cmp, "ABCCEF
   17754:	2247 2029 203e 0030 6261 3463 3635 3837     G") > 0.abc45678
   17764:	3039 0000 7473 6372 706d 7328 7274 2c31     90..strcmp(str1,
   17774:	2220 6261 3463 3635 3837 3039 2922 3d20      "abc4567890") =
   17784:	203d 0030 6f76 6469 5420 7365 4d74 6d65     = 0.void TestMem
   17794:	7043 2879 0029 0000 3231 3433 3635 3837     Cpy()...12345678
   177a4:	3039 0000 6261 6463 6665 6867 6a69 0000     90..abcdefghij..
   177b4:	3231 3433 3534 3836 3039 0000 7473 6372     1234456890..strc
   177c4:	706d 7328 7274 202c 3122 3332 3434 3635     mp(str, "1234456
   177d4:	3938 2230 2029 3d3d 3020 0000 6f76 6469     890") == 0..void
   177e4:	5420 7365 4d74 6d65 6f4d 6576 2928 0000      TestMemMove()..
   177f4:	2023 6554 7473 203a 7453 6e61 6164 6472     # Test: Standard
   17804:	6120 676c 726f 7469 6d68 736e 0000 0000      algorithmns....
   17814:	2023 6554 7473 203a 6953 706d 656c 6320     # Test: Simple c
   17824:	6c61 7563 616c 6974 6e6f 2073 6977 6874     alculations with
   17834:	7320 6769 656e 2064 6e69 6574 6567 7372      signed integers
   17844:	0000 0000 6361 7563 2038 3d3d 3120 3230     ....accu8 == 102
   17854:	0000 0000 6f76 6469 5420 7365 4974 746e     ....void TestInt
   17864:	6143 636c 2928 0000 552f 6573 7372 632f     Calc()../Users/c
   17874:	6767 6d2f 6369 6f72 6d65 2f75 6574 7473     gg/microemu/test
   17884:	2f73 7973 7473 6d65 745f 7365 7374 742f     s/system_tests/t
   17894:	7365 6274 6e65 6863 732f 6372 742f 7365     estbench/src/tes
   178a4:	5f74 6e69 5f74 6163 636c 632e 7070 0000     t_int_calc.cpp..
   178b4:	6361 7563 2038 3d3d 2d20 3633 0000 0000     accu8 == -36....
   178c4:	6361 7563 2038 3d3d 2d20 3031 0038 0000     accu8 == -108...
   178d4:	6361 7563 2038 3d3d 2d20 3231 0030 0000     accu8 == -120...
   178e4:	6361 7563 2038 3d3d 3120 0030 6361 7563     accu8 == 10.accu
   178f4:	2038 3d3d 3120 3831 0000 0000 6361 7563     8 == 118....accu
   17904:	2038 3d3d 3420 7532 0000 0000 6361 7563     8 == 42u....accu
   17914:	3631 3d20 203d 3031 0032 0000 6361 7563     16 == 102...accu
   17924:	3631 3d20 203d 332d 0036 0000 6361 7563     16 == -36...accu
   17934:	3631 3d20 203d 312d 3830 0000 6361 7563     16 == -108..accu
   17944:	3631 3d20 203d 312d 3032 0000 6361 7563     16 == -120..accu
   17954:	3631 3d20 203d 3031 0000 0000 6361 7563     16 == 10....accu
   17964:	3631 3d20 203d 3233 3537 0038 6361 7563     16 == 32758.accu
   17974:	3631 3d20 203d 3234 0075 0000 6361 7563     16 == 42u...accu
   17984:	3233 3d20 203d 3031 0032 0000 6361 7563     32 == 102...accu
   17994:	3233 3d20 203d 332d 0036 0000 6361 7563     32 == -36...accu
   179a4:	3233 3d20 203d 312d 3830 0000 6361 7563     32 == -108..accu
   179b4:	3233 3d20 203d 312d 3032 0000 6361 7563     32 == -120..accu
   179c4:	3233 3d20 203d 3031 0000 0000 6361 7563     32 == 10....accu
   179d4:	3233 3d20 203d 3132 3734 3834 3633 3833     32 == 2147483638
   179e4:	0000 0000 6361 7563 3233 3d20 203d 3234     ....accu32 == 42
   179f4:	0075 0000 6128 2520 6220 2029 3d3d 3020     u...(a % b) == 0
   17a04:	0000 0000 6128 2520 6220 2029 3d3d 3020     ....(a % b) == 0
   17a14:	3878 3030 3030 3030 0031 0000 2023 6554     x80000001...# Te
   17a24:	7473 203a 6953 706d 656c 6320 6c61 7563     st: Simple calcu
   17a34:	616c 6974 6e6f 2073 6977 6874 7520 736e     lations with uns
   17a44:	6769 656e 2064 6e69 6574 6567 7372 0000     igned integers..
   17a54:	6361 7563 2038 3d3d 3220 3634 0075 0000     accu8 == 246u...
   17a64:	6f76 6469 5420 7365 5574 6e49 4374 6c61     void TestUIntCal
   17a74:	2863 0029 552f 6573 7372 632f 6767 6d2f     c()./Users/cgg/m
   17a84:	6369 6f72 6d65 2f75 6574 7473 2f73 7973     icroemu/tests/sy
   17a94:	7473 6d65 745f 7365 7374 742f 7365 6274     stem_tests/testb
   17aa4:	6e65 6863 732f 6372 742f 7365 5f74 6975     ench/src/test_ui
   17ab4:	746e 635f 6c61 2e63 7063 0070 6361 7563     nt_calc.cpp.accu
   17ac4:	2038 3d3d 3820 0075 6361 7563 2038 3d3d     8 == 8u.accu8 ==
   17ad4:	3520 7536 0000 0000 6361 7563 2038 3d3d      56u....accu8 ==
   17ae4:	3220 3535 0075 0000 6361 7563 2038 3d3d      255u...accu8 ==
   17af4:	3120 7530 0000 0000 6361 7563 2038 3d3d      10u....accu8 ==
   17b04:	3320 0075 6361 7563 2038 3d3d 3020 0075      3u.accu8 == 0u.
   17b14:	6361 7563 2038 3d3d 3420 7532 0000 0000     accu8 == 42u....
   17b24:	6361 7563 3631 3d20 203d 3432 7536 0000     accu16 == 246u..
   17b34:	6361 7563 3631 3d20 203d 3337 7538 0000     accu16 == 738u..
   17b44:	6361 7563 3631 3d20 203d 3035 7530 0000     accu16 == 500u..
   17b54:	6361 7563 3631 3d20 203d 3032 0075 0000     accu16 == 20u...
   17b64:	6361 7563 3631 3d20 203d 7533 0000 0000     accu16 == 3u....
   17b74:	6361 7563 3631 3d20 203d 7530 0000 0000     accu16 == 0u....
   17b84:	6361 7563 3631 3d20 203d 3536 3335 7535     accu16 == 65535u
   17b94:	0000 0000 6361 7563 3631 3d20 203d 3234     ....accu16 == 42
   17ba4:	0075 0000 6361 7563 3233 3d20 203d 3432     u...accu32 == 24
   17bb4:	7536 0000 6361 7563 3233 3d20 203d 3337     6u..accu32 == 73
   17bc4:	7538 0000 6361 7563 3233 3d20 203d 3035     8u..accu32 == 50
   17bd4:	7530 0000 6361 7563 3233 3d20 203d 3032     0u..accu32 == 20
   17be4:	0075 0000 6361 7563 3233 3d20 203d 7533     u...accu32 == 3u
   17bf4:	0000 0000 6361 7563 3233 3d20 203d 7530     ....accu32 == 0u
   17c04:	0000 0000 6361 7563 3233 3d20 203d 3234     ....accu32 == 42
   17c14:	3439 3639 3237 3539 0075 0000 6361 7563     94967295u...accu
   17c24:	3233 3d20 203d 3234 0075 0000 6128 2520     32 == 42u...(a %
   17c34:	6220 2029 3d3d 3020 0075 0000 6128 2520      b) == 0u...(a %
   17c44:	6220 2029 3d3d 3120 0075 0000 2023 6554      b) == 1u...# Te
   17c54:	7473 203a 6649 7420 6568 206e 6c65 6573     st: If then else
   17c64:	0000 0000 7242 6e61 6863 6554 7473 6128     ....BranchTest(a
   17c74:	6772 2029 3d3d 3520 0075 0000 6f76 6469     rg) == 5u...void
   17c84:	5420 7365 4974 5466 6568 456e 736c 2865      TestIfThenElse(
   17c94:	0029 0000 552f 6573 7372 632f 6767 6d2f     ).../Users/cgg/m
   17ca4:	6369 6f72 6d65 2f75 6574 7473 2f73 7973     icroemu/tests/sy
   17cb4:	7473 6d65 745f 7365 7374 742f 7365 6274     stem_tests/testb
   17cc4:	6e65 6863 732f 6372 742f 7365 5f74 6669     ench/src/test_if
   17cd4:	745f 6568 5f6e 6c65 6573 632e 7070 0000     _then_else.cpp..
   17ce4:	7242 6e61 6863 6554 7473 6128 6772 2029     BranchTest(arg) 
   17cf4:	3d3d 3420 0075 0000 7242 6e61 6863 6554     == 4u...BranchTe
   17d04:	7473 6128 6772 2029 3d3d 3120 0075 0000     st(arg) == 1u...
   17d14:	2023 6554 7473 203a 7954 6570 6320 7361     # Test: Type cas
   17d24:	6974 676e 0000 0000 3375 2032 3d3d 3120     ting....u32 == 1
   17d34:	3332 3534 0075 0000 6f76 6469 5420 7365     2345u...void Tes
   17d44:	5474 7079 4365 7361 6974 676e 2928 0000     tTypeCasting()..
   17d54:	552f 6573 7372 632f 6767 6d2f 6369 6f72     /Users/cgg/micro
   17d64:	6d65 2f75 6574 7473 2f73 7973 7473 6d65     emu/tests/system
   17d74:	745f 7365 7374 742f 7365 6274 6e65 6863     _tests/testbench
   17d84:	732f 6372 742f 7365 5f74 7974 6570 635f     /src/test_type_c
   17d94:	7361 6974 676e 632e 7070 0000 3375 5f32     asting.cpp..u32_
   17da4:	7063 2079 3d3d 3120 3332 3534 0075 0000     cpy == 12345u...
   17db4:	3375 5f32 636d 7970 3d20 203d 3231 3433     u32_mcpy == 1234
   17dc4:	7535 0000 2023 6554 7473 203a 6f50 796c     5u..# Test: Poly
   17dd4:	6f6d 7072 6968 6d73 006e 0000 6564 6972     morphismn...deri
   17de4:	6576 2e64 6143 6c6c 2928 3d20 203d 7830     ved.Call() == 0x
   17df4:	4641 4546 0000 0000 6f76 6469 5420 7365     AFFE....void Tes
   17e04:	5074 6c6f 6d79 726f 6870 7369 6e6d 2928     tPolymorphismn()
   17e14:	0000 0000 552f 6573 7372 632f 6767 6d2f     ..../Users/cgg/m
   17e24:	6369 6f72 6d65 2f75 6574 7473 2f73 7973     icroemu/tests/sy
   17e34:	7473 6d65 745f 7365 7374 742f 7365 6274     stem_tests/testb
   17e44:	6e65 6863 732f 6372 742f 7365 5f74 6f70     ench/src/test_po
   17e54:	796c 6f6d 7072 6968 6d73 2e6e 7063 0070     lymorphismn.cpp.
   17e64:	6162 6573 3e2d 6143 6c6c 2928 3d20 203d     base->Call() == 
   17e74:	7830 4641 4546 0000 6162 6573 635f 6e6f     0xAFFE..base_con
   17e84:	7473 7572 7463 6465 432e 6c61 286c 2029     structed.Call() 
   17e94:	3d3d 3020 4278 4545 4346 4641 0045 0000     == 0xBEEFCAFE...

00017ea4 <vtable for Derived>:
   17ea4:	0000 0000 7ebc 0001 1729 0000               .....~..)...

00017eb0 <vtable for Base>:
   17eb0:	0000 0000 7ed4 0001 1711 0000               .....~......

00017ebc <typeinfo for Derived>:
   17ebc:	8c9c 0001 7ec8 0001 7ed4 0001               .....~...~..

00017ec8 <typeinfo name for Derived>:
   17ec8:	4437 7265 7669 6465 0000 0000               7Derived....

00017ed4 <typeinfo for Base>:
   17ed4:	8c3c 0001 7edc 0001                         <....~..

00017edc <typeinfo name for Base>:
   17edc:	4234 7361 0065 0000 6166 736c 0065 0000     4Base...false...
   17eec:	6975 746e 3233 745f 5420 7365 5474 6261     uint32_t TestTab
   17efc:	656c 6346 3274 2928 0000 0000 552f 6573     leFct2()..../Use
   17f0c:	7372 632f 6767 6d2f 6369 6f72 6d65 2f75     rs/cgg/microemu/
   17f1c:	6574 7473 2f73 7973 7473 6d65 745f 7365     tests/system_tes
   17f2c:	7374 742f 7365 6274 6e65 6863 732f 6372     ts/testbench/src
   17f3c:	742f 7365 5f74 7773 7469 6863 635f 7361     /test_switch_cas
   17f4c:	2e65 7063 0070 0000 2023 6554 7473 203a     e.cpp...# Test: 
   17f5c:	7753 7469 6863 632f 7361 0065 6554 7473     Switch/case.Test
   17f6c:	6154 6c62 4665 7463 2831 7327 2927 3d20     TableFct1('s') =
   17f7c:	203d 7534 0000 0000 6f76 6469 5420 7365     = 4u....void Tes
   17f8c:	5374 6977 6374 4368 7361 2865 0029 0000     tSwitchCase()...
   17f9c:	6554 7473 6154 6c62 4665 7463 2831 6827     TestTableFct1('h
   17fac:	2927 3d20 203d 7531 0000 0000 6554 7473     ') == 1u....Test
   17fbc:	6154 6c62 4665 7463 2832 2029 3d3d 3220     TableFct2() == 2
   17fcc:	7538 0000 2023 6554 7473 203a 6946 6f62     8u..# Test: Fibo
   17fdc:	616e 6363 2069 7228 6365 7275 6973 6576     nacci (recursive
   17fec:	0029 0000 6946 6f62 616e 6363 2869 2935     )...Fibonacci(5)
   17ffc:	3d20 203d 7535 0000 6f76 6469 5420 7365      == 5u..void Tes
   1800c:	4674 6269 6e6f 6361 6963 2928 0000 0000     tFibonacci()....
   1801c:	552f 6573 7372 632f 6767 6d2f 6369 6f72     /Users/cgg/micro
   1802c:	6d65 2f75 6574 7473 2f73 7973 7473 6d65     emu/tests/system
   1803c:	745f 7365 7374 742f 7365 6274 6e65 6863     _tests/testbench
   1804c:	732f 6372 742f 7365 5f74 6966 6f62 616e     /src/test_fibona
   1805c:	6363 2e69 7063 0070 6946 6f62 616e 6363     cci.cpp.Fibonacc
   1806c:	2869 2936 3d20 203d 7538 0000 6946 6f62     i(6) == 8u..Fibo
   1807c:	616e 6363 2869 2937 3d20 203d 3331 0075     nacci(7) == 13u.
   1808c:	6946 6f62 616e 6363 2869 2938 3d20 203d     Fibonacci(8) == 
   1809c:	3132 0075 2023 6554 7473 203a 7551 6369     21u.# Test: Quic
   180ac:	736b 726f 0074 0000 7261 3372 5b32 5d30     ksort...arr32[0]
   180bc:	3d20 203d 7530 0000 6f76 6469 5420 7365      == 0u..void Tes
   180cc:	5174 6975 6b63 6f73 7472 2928 0000 0000     tQuicksort()....
   180dc:	552f 6573 7372 632f 6767 6d2f 6369 6f72     /Users/cgg/micro
   180ec:	6d65 2f75 6574 7473 2f73 7973 7473 6d65     emu/tests/system
   180fc:	745f 7365 7374 742f 7365 6274 6e65 6863     _tests/testbench
   1810c:	732f 6372 742f 7365 5f74 7571 6369 736b     /src/test_quicks
   1811c:	726f 2e74 7063 0070 7261 3372 5b32 5d31     ort.cpp.arr32[1]
   1812c:	3d20 203d 7531 0000 7261 3372 5b32 5d32      == 1u..arr32[2]
   1813c:	3d20 203d 7532 0000 7261 3372 5b32 5d33      == 2u..arr32[3]
   1814c:	3d20 203d 7533 0000 7261 3372 5b32 5d34      == 3u..arr32[4]
   1815c:	3d20 203d 7534 0000 7261 3372 5b32 5d35      == 4u..arr32[5]
   1816c:	3d20 203d 7535 0000 7261 3372 5b32 5d36      == 5u..arr32[6]
   1817c:	3d20 203d 7536 0000 7261 3372 5b32 5d37      == 6u..arr32[7]
   1818c:	3d20 203d 7537 0000 7261 3372 5b32 5d38      == 7u..arr32[8]
   1819c:	3d20 203d 7538 0000 7261 3372 5b32 5d39      == 8u..arr32[9]
   181ac:	3d20 203d 7539 0000 7261 3172 5b36 5d30      == 9u..arr16[0]
   181bc:	3d20 203d 7530 0000 7261 3172 5b36 5d31      == 0u..arr16[1]
   181cc:	3d20 203d 7531 0000 7261 3172 5b36 5d32      == 1u..arr16[2]
   181dc:	3d20 203d 7532 0000 7261 3172 5b36 5d33      == 2u..arr16[3]
   181ec:	3d20 203d 7533 0000 7261 3172 5b36 5d34      == 3u..arr16[4]
   181fc:	3d20 203d 7534 0000 7261 3172 5b36 5d35      == 4u..arr16[5]
   1820c:	3d20 203d 7535 0000 7261 3172 5b36 5d36      == 5u..arr16[6]
   1821c:	3d20 203d 7536 0000 7261 3172 5b36 5d37      == 6u..arr16[7]
   1822c:	3d20 203d 7537 0000 7261 3172 5b36 5d38      == 7u..arr16[8]
   1823c:	3d20 203d 7538 0000 7261 3172 5b36 5d39      == 8u..arr16[9]
   1824c:	3d20 203d 7539 0000 7261 3872 305b 205d      == 9u..arr8[0] 
   1825c:	3d3d 3020 0075 0000 7261 3872 315b 205d     == 0u...arr8[1] 
   1826c:	3d3d 3120 0075 0000 7261 3872 325b 205d     == 1u...arr8[2] 
   1827c:	3d3d 3220 0075 0000 7261 3872 335b 205d     == 2u...arr8[3] 
   1828c:	3d3d 3320 0075 0000 7261 3872 345b 205d     == 3u...arr8[4] 
   1829c:	3d3d 3420 0075 0000 7261 3872 355b 205d     == 4u...arr8[5] 
   182ac:	3d3d 3520 0075 0000 7261 3872 365b 205d     == 5u...arr8[6] 
   182bc:	3d3d 3620 0075 0000 7261 3872 375b 205d     == 6u...arr8[7] 
   182cc:	3d3d 3720 0075 0000 7261 3872 385b 205d     == 7u...arr8[8] 
   182dc:	3d3d 3820 0075 0000 7261 3872 395b 205d     == 8u...arr8[9] 
   182ec:	3d3d 3920 0075 0000 0009 0000 0003 0000     == 9u...........
   182fc:	0007 0000 0001 0000 0005 0000 0004 0000     ................
   1830c:	0008 0000 0006 0000 0002 0000 0000 0000     ................
   1831c:	0009 0003 0007 0001 0005 0004 0008 0006     ................
   1832c:	0002 0000 0309 0107 0405 0608 0002 0000     ................

0001833c <kCfsrBfarValidFlag>:
   1833c:	8000 0000                                   ....

00018340 <kCfsrLspErrFlag>:
   18340:	2000 0000                                   . ..

00018344 <kCfsrStkErrFlag>:
   18344:	1000 0000                                   ....

00018348 <kCfsrUnstkErrFlag>:
   18348:	0800 0000                                   ....

0001834c <kCfsrImpreciseErrFlag>:
   1834c:	0400 0000                                   ....

00018350 <kCfsrPreciseErrFlag>:
   18350:	0200 0000                                   ....

00018354 <kCfsrIBusErrFlag>:
   18354:	0100 0000                                   ....

00018358 <kCfsrMmarValidFlag>:
   18358:	0080 0000                                   ....

0001835c <kCfsrMLspErrFlag>:
   1835c:	0020 0000                                    ...

00018360 <kCfsrMStkErrFlag>:
   18360:	0010 0000                                   ....

00018364 <kCfsrMUnstkErrFlag>:
   18364:	0008 0000                                   ....

00018368 <kCfsrDAccViolFlag>:
   18368:	0002 0000                                   ....

0001836c <kCfsrIAccViolFlag>:
   1836c:	0001 0000                                   ....

00018370 <kCfsrDivByZeroFlag>:
   18370:	0000 0200                                   ....

00018374 <kCfsrUnalignedFlag>:
   18374:	0000 0100                                   ....

00018378 <kCfsrNoCpFlag>:
   18378:	0000 0008                                   ....

0001837c <kCfsrInvPcFlag>:
   1837c:	0000 0004                                   ....

00018380 <kCfsrInvStateFlag>:
   18380:	0000 0002                                   ....

00018384 <kCfsrUndefInstrFlag>:
   18384:	0000 0001                                   ....

00018388 <kCcrNonBaseThreadEnableFlag>:
   18388:	0001 0000                                   ....

0001838c <kCcrUserSettablePendSvFlag>:
   1838c:	0002 0000                                   ....

00018390 <kCcrUnalignTrapEnableFlag>:
   18390:	0008 0000                                   ....

00018394 <kCcrDivByZeroTrapEnableFlag>:
   18394:	0010 0000                                   ....

00018398 <kCcrMainStackAlignFlag>:
   18398:	0200 0000                                   ....

0001839c <kCcrIgnoreLsbOnDataFlag>:
   1839c:	0400 0000                                   ....

000183a0 <kCcrStkAlignFlag>:
   183a0:	0200 0000                                   ....

000183a4 <kCcrBranchPredictionEnableFlag>:
   183a4:	0000 0004                                   ....

000183a8 <kCcrL1CacheEnableFlag>:
   183a8:	0000 0008                                   ....

000183ac <kSystickCsrCountFlag>:
   183ac:	0010 0000                                   ....

000183b0 <kSystickCsrClkSource>:
   183b0:	0002 0000                                   ....

000183b4 <kSystickCsrClkSourceExternal>:
   183b4:	0000 0000                                   ....

000183b8 <kSystickCsrClkSourceCore>:
   183b8:	0002 0000                                   ....

000183bc <kSystickCsrTickInt>:
   183bc:	0001 0000                                   ....

000183c0 <kSystickCsrTickIntPend>:
   183c0:	0001 0000                                   ....

000183c4 <kSystickCsrTickIntNoPend>:
   183c4:	0000 0000                                   ....

000183c8 <kSystickCsrEnable>:
   183c8:	0000 0000                                   ....

000183cc <kSystickCsrEnableMultishot>:
   183cc:	0000 0000                                   ....

000183d0 <kSystickCsrEnableDisabled>:
   183d0:	0000 0000                                   ....

000183d4 <kSystickCvrNoRef>:
   183d4:	001f 0000                                   ....

000183d8 <kSystickCvrSkew>:
   183d8:	001e 0000                                   ....

000183dc <kSystickCvrTenms>:
   183dc:	ffff 00ff 6373 2d62 433e 5346 2052 3d3d     ....scb->CFSR ==
   183ec:	3020 0055 6f76 6469 5420 7365 5674 7261      0U.void TestVar
   183fc:	6f69 7375 6146 6c75 7374 2928 0000 0000     iousFaults()....
   1840c:	552f 6573 7372 632f 6767 6d2f 6369 6f72     /Users/cgg/micro
   1841c:	6d65 2f75 6574 7473 2f73 7973 7473 6d65     emu/tests/system
   1842c:	745f 7365 7374 742f 7365 6274 6e65 6863     _tests/testbench
   1843c:	732f 6372 742f 7365 5f74 7865 6563 7470     /src/test_except
   1844c:	6f69 736e 632e 7070 0000 0000 7375 6761     ions.cpp....usag
   1845c:	5f65 6166 6c75 7374 3d20 203d 5530 0000     e_faults == 0U..
   1846c:	7562 5f73 6166 6c75 7374 3d20 203d 5530     bus_faults == 0U
   1847c:	0000 0000 7375 6761 5f65 6166 6c75 7374     ....usage_faults
   1848c:	3d20 203d 5531 0000 6373 2d62 433e 5346      == 1U..scb->CFS
   1849c:	2052 3d3d 6b20 6643 7273 6e49 5376 6174     R == kCfsrInvSta
   184ac:	6574 6c46 6761 0000 6373 2d62 433e 5346     teFlag..scb->CFS
   184bc:	2052 3d3d 6b20 6643 7273 4249 7375 7245     R == kCfsrIBusEr
   184cc:	4672 616c 0067 0000 6f76 6469 5420 7365     rFlag...void Tes
   184dc:	4274 7375 6166 6c75 2874 0029 7562 5f73     tBusfault().bus_
   184ec:	6166 6c75 7374 3d20 203d 7530 0000 0000     faults == 0u....
   184fc:	6373 2d62 433e 5346 2052 3d3d 3020 3078     scb->CFSR == 0x0
   1850c:	0055 0000 7562 5f73 6166 6c75 7374 3d20     U...bus_faults =
   1851c:	203d 5531 0000 0000 6373 2d62 433e 5346     = 1U....scb->CFS
   1852c:	2052 3d3d 2820 436b 7366 4272 6166 5672     R == (kCfsrBfarV
   1853c:	6c61 6469 6c46 6761 7c20 6b20 6643 7273     alidFlag | kCfsr
   1854c:	7250 6365 7369 4565 7272 6c46 6761 0029     PreciseErrFlag).
   1855c:	6373 2d62 423e 4146 2052 3d3d 7220 6965     scb->BFAR == rei
   1856c:	746e 7265 7270 7465 635f 7361 3c74 6975     nterpret_cast<ui
   1857c:	746e 3233 745f 283e 2970 0000 6373 2d62     nt32_t>(p)..scb-
   1858c:	433e 5346 2052 3d3d 6b20 6643 7273 7250     >CFSR == kCfsrPr
   1859c:	6365 7369 4565 7272 6c46 6761 0000 0000     eciseErrFlag....
   185ac:	7562 5f73 6166 6c75 7374 3d20 203d 5532     bus_faults == 2U
   185bc:	0000 0000 6f76 6469 5420 7365 4474 7669     ....void TestDiv
   185cc:	6469 4265 5a79 7265 286f 0029 7328 6263     ideByZero().(scb
   185dc:	3e2d 4343 2052 2026 436b 7263 6944 4276     ->CCR & kCcrDivB
   185ec:	5a79 7265 546f 6172 4570 616e 6c62 4665     yZeroTrapEnableF
   185fc:	616c 2967 3d20 203d 5530 0000 3178 3d20     lag) == 0U..x1 =
   1860c:	203d 0030 3278 3d20 203d 0030 6373 2d62     = 0.x2 == 0.scb-
   1861c:	433e 5346 2052 3d3d 6b20 6643 7273 6944     >CFSR == kCfsrDi
   1862c:	4276 5a79 7265 466f 616c 0067 7375 6761     vByZeroFlag.usag
   1863c:	5f65 6166 6c75 7374 3d20 203d 5532 0000     e_faults == 2U..
   1864c:	2023 6554 7473 203a 7845 6563 7470 6f69     # Test: Exceptio
   1865c:	736e 0000                                   ns..

00018660 <kCfsrBfarValidFlag>:
   18660:	8000 0000                                   ....

00018664 <kCfsrLspErrFlag>:
   18664:	2000 0000                                   . ..

00018668 <kCfsrStkErrFlag>:
   18668:	1000 0000                                   ....

0001866c <kCfsrUnstkErrFlag>:
   1866c:	0800 0000                                   ....

00018670 <kCfsrImpreciseErrFlag>:
   18670:	0400 0000                                   ....

00018674 <kCfsrPreciseErrFlag>:
   18674:	0200 0000                                   ....

00018678 <kCfsrIBusErrFlag>:
   18678:	0100 0000                                   ....

0001867c <kCfsrMmarValidFlag>:
   1867c:	0080 0000                                   ....

00018680 <kCfsrMLspErrFlag>:
   18680:	0020 0000                                    ...

00018684 <kCfsrMStkErrFlag>:
   18684:	0010 0000                                   ....

00018688 <kCfsrMUnstkErrFlag>:
   18688:	0008 0000                                   ....

0001868c <kCfsrDAccViolFlag>:
   1868c:	0002 0000                                   ....

00018690 <kCfsrIAccViolFlag>:
   18690:	0001 0000                                   ....

00018694 <kCfsrDivByZeroFlag>:
   18694:	0000 0200                                   ....

00018698 <kCfsrUnalignedFlag>:
   18698:	0000 0100                                   ....

0001869c <kCfsrNoCpFlag>:
   1869c:	0000 0008                                   ....

000186a0 <kCfsrInvPcFlag>:
   186a0:	0000 0004                                   ....

000186a4 <kCfsrInvStateFlag>:
   186a4:	0000 0002                                   ....

000186a8 <kCfsrUndefInstrFlag>:
   186a8:	0000 0001                                   ....

000186ac <kCcrNonBaseThreadEnableFlag>:
   186ac:	0001 0000                                   ....

000186b0 <kCcrUserSettablePendSvFlag>:
   186b0:	0002 0000                                   ....

000186b4 <kCcrUnalignTrapEnableFlag>:
   186b4:	0008 0000                                   ....

000186b8 <kCcrDivByZeroTrapEnableFlag>:
   186b8:	0010 0000                                   ....

000186bc <kCcrMainStackAlignFlag>:
   186bc:	0200 0000                                   ....

000186c0 <kCcrIgnoreLsbOnDataFlag>:
   186c0:	0400 0000                                   ....

000186c4 <kCcrStkAlignFlag>:
   186c4:	0200 0000                                   ....

000186c8 <kCcrBranchPredictionEnableFlag>:
   186c8:	0000 0004                                   ....

000186cc <kCcrL1CacheEnableFlag>:
   186cc:	0000 0008 2023 6554 7473 203a 7953 7473     ....# Test: Syst
   186dc:	6d65 6320 6e6f 7274 6c6f 6220 7375 0000     em control bus..
   186ec:	6373 2d62 433e 5243 3d20 203d 6b28 6343     scb->CCR == (kCc
   186fc:	5372 6b74 6c41 6769 466e 616c 2967 0000     rStkAlignFlag)..
   1870c:	6f76 6469 5420 7365 5374 6263 2928 0000     void TestScb()..
   1871c:	552f 6573 7372 632f 6767 6d2f 6369 6f72     /Users/cgg/micro
   1872c:	6d65 2f75 6574 7473 2f73 7973 7473 6d65     emu/tests/system
   1873c:	745f 7365 7374 742f 7365 6274 6e65 6863     _tests/testbench
   1874c:	732f 6372 742f 7365 5f74 6373 2e62 7063     /src/test_scb.cp
   1875c:	0070 0000                                   p...

00018760 <kSystickCsrCountFlag>:
   18760:	0010 0000                                   ....

00018764 <kSystickCsrClkSource>:
   18764:	0002 0000                                   ....

00018768 <kSystickCsrClkSourceExternal>:
   18768:	0000 0000                                   ....

0001876c <kSystickCsrClkSourceCore>:
   1876c:	0002 0000                                   ....

00018770 <kSystickCsrTickInt>:
   18770:	0001 0000                                   ....

00018774 <kSystickCsrTickIntPend>:
   18774:	0001 0000                                   ....

00018778 <kSystickCsrTickIntNoPend>:
   18778:	0000 0000                                   ....

0001877c <kSystickCsrEnable>:
   1877c:	0000 0000                                   ....

00018780 <kSystickCsrEnableMultishot>:
   18780:	0000 0000                                   ....

00018784 <kSystickCsrEnableDisabled>:
   18784:	0000 0000                                   ....

00018788 <kSystickCvrNoRef>:
   18788:	001f 0000                                   ....

0001878c <kSystickCvrSkew>:
   1878c:	001e 0000                                   ....

00018790 <kSystickCvrTenms>:
   18790:	ffff 00ff 5653 5f43 6148 646e 656c 2072     ....SVC_Handler 
   187a0:	6163 6c6c 6465 2520 2069 6974 656d 0073     called %i times.
   187b0:	7953 5473 6369 5f6b 6148 646e 656c 2072     SysTick_Handler 
   187c0:	6163 6c6c 6465 2520 2069 6974 656d 0073     called %i times.
   187d0:	2023 6554 7473 203a 5249 7351 0000 0000     # Test: IRQs....
   187e0:	7953 5473 6369 5f6b 6148 646e 656c 2072     SysTick_Handler 
   187f0:	6163 6c6c 6465 2520 2069 6974 656d 2073     called %i times 
   18800:	7562 2074 7865 6570 7463 6465 7720 7265     but expected wer
   18810:	2065 6925 000a 0000 7973 7473 6369 5f6b     e %i....systick_
   18820:	6163 6c6c 635f 756f 746e 2120 203d 5845     call_count != EX
   18830:	4550 5443 4445 535f 5359 4954 4b43 0053     PECTED_SYSTICKS.
   18840:	6f76 6469 5420 7365 4974 7172 2873 0029     void TestIrqs().
   18850:	552f 6573 7372 632f 6767 6d2f 6369 6f72     /Users/cgg/micro
   18860:	6d65 2f75 6574 7473 2f73 7973 7473 6d65     emu/tests/system
   18870:	745f 7365 7374 742f 7365 6274 6e65 6863     _tests/testbench
   18880:	732f 6372 742f 7365 5f74 7269 7371 632e     /src/test_irqs.c
   18890:	7070 0000 7953 5473 6369 5f6b 6148 646e     pp..SysTick_Hand
   188a0:	656c 2072 6163 6c6c 6465 3920 2033 6974     ler called 93 ti
   188b0:	656d 0073 7473 6372 706d 4528 5058 4345     mes.strcmp(EXPEC
   188c0:	4554 5f44 5953 5453 4349 5f4b 5453 4952     TED_SYSTICK_STRI
   188d0:	474e 202c 7973 7473 6369 5f6b 7562 6666     NG, systick_buff
   188e0:	7265 305f 2029 3d3d 3020 0055 7473 6372     er_0) == 0U.strc
   188f0:	706d 4528 5058 4345 4554 5f44 5953 5453     mp(EXPECTED_SYST
   18900:	4349 5f4b 5453 4952 474e 202c 7973 7473     ICK_STRING, syst
   18910:	6369 5f6b 7562 6666 7265 315f 2029 3d3d     ick_buffer_1) ==
   18920:	3020 0055 5653 5f43 6148 646e 656c 2072      0U.SVC_Handler 
   18930:	6163 6c6c 6465 2520 2069 6974 656d 2073     called %i times 
   18940:	7562 2074 7865 6570 7463 6465 7720 7265     but expected wer
   18950:	2065 6925 000a 0000 7673 5f63 6163 6c6c     e %i....svc_call
   18960:	635f 756f 746e 2120 203d 5845 4550 5443     _count != EXPECT
   18970:	4445 535f 4356 0000 5653 5f43 6148 646e     ED_SVC..SVC_Hand
   18980:	656c 2072 6163 6c6c 6465 3120 2030 6974     ler called 10 ti
   18990:	656d 0073 7473 6372 706d 4528 5058 4345     mes.strcmp(EXPEC
   189a0:	4554 5f44 5653 5f43 5453 4952 474e 202c     TED_SVC_STRING, 
   189b0:	7673 5f63 7562 6666 7265 305f 2029 3d3d     svc_buffer_0) ==
   189c0:	3020 0055 7473 6372 706d 4528 5058 4345      0U.strcmp(EXPEC
   189d0:	4554 5f44 5653 5f43 5453 4952 474e 202c     TED_SVC_STRING, 
   189e0:	7673 5f63 7562 6666 7265 315f 2029 3d3d     svc_buffer_1) ==
   189f0:	3020 0055 2023 6554 7473 203a 5243 0043      0U.# Test: CRC.
   18a00:	6572 7573 746c 3d20 203d 7830 3932 3142     result == 0x29B1
   18a10:	0000 0000 6f76 6469 5420 7365 4374 6372     ....void TestCrc
   18a20:	2928 0000 552f 6573 7372 632f 6767 6d2f     ()../Users/cgg/m
   18a30:	6369 6f72 6d65 2f75 6574 7473 2f73 7973     icroemu/tests/sy
   18a40:	7473 6d65 745f 7365 7374 742f 7365 6274     stem_tests/testb
   18a50:	6e65 6863 732f 6372 742f 7365 5f74 7263     ench/src/test_cr
   18a60:	2e63 7063 0070 0000 3231 3433 3635 3837     c.cpp...12345678
   18a70:	0039 0000                                   9...

00018a74 <kAllocCycles>:
   18a74:	0021 0000 2023 6554 7473 203a 6548 7061     !...# Test: Heap
   18a84:	0000 0000 3170 2120 203d 756e 6c6c 7470     ....p1 != nullpt
   18a94:	0072 0000 6f76 6469 5420 7365 4874 6165     r...void TestHea
   18aa4:	2870 0029 552f 6573 7372 632f 6767 6d2f     p()./Users/cgg/m
   18ab4:	6369 6f72 6d65 2f75 6574 7473 2f73 7973     icroemu/tests/sy
   18ac4:	7473 6d65 745f 7365 7374 742f 7365 6274     stem_tests/testb
   18ad4:	6e65 6863 732f 6372 742f 7365 5f74 6568     ench/src/test_he
   18ae4:	7061 632e 7070 0000 3270 2120 203d 756e     ap.cpp..p2 != nu
   18af4:	6c6c 7470 0072 0000 3370 2120 203d 756e     llptr...p3 != nu
   18b04:	6c6c 7470 0072 0000 3470 2120 203d 756e     llptr...p4 != nu
   18b14:	6c6c 7470 0072 0000 6568 7061 3d20 203d     llptr...heap == 
   18b24:	6568 7061 735f 6174 7472 0000 6f63 746e     heap_start..cont
   18b34:	6f72 206c 3d3d 3020 3278 0055 6f76 6469     rol == 0x2U.void
   18b44:	5020 6f72 6563 7373 7453 6361 466b 7463      ProcessStackFct
   18b54:	2928 0000 552f 6573 7372 632f 6767 6d2f     ()../Users/cgg/m
   18b64:	6369 6f72 6d65 2f75 6574 7473 2f73 7973     icroemu/tests/sy
   18b74:	7473 6d65 745f 7365 7374 742f 7365 6274     stem_tests/testb
   18b84:	6e65 6863 732f 6372 742f 7365 5f74 7270     ench/src/test_pr
   18b94:	636f 7365 5f73 7473 6361 2e6b 7063 0070     ocess_stack.cpp.
   18ba4:	2023 6554 7473 203a 7250 636f 7365 2073     # Test: Process 
   18bb4:	7453 6361 206b 6f50 6e69 6574 0072 0000     Stack Pointer...
   18bc4:	6f63 746e 6f72 206c 3d3d 3020 3078 0055     control == 0x0U.
   18bd4:	6f76 6469 5420 7365 5074 6f72 6563 7373     void TestProcess
   18be4:	7453 6361 286b 0029 6552 6461 5350 2850     Stack().ReadPSP(
   18bf4:	2029 3d3d 7020 7073 765f 6c61 0000 0000     ) == psp_val....

00018c04 <typeinfo for __cxxabiv1::__class_type_info>:
   18c04:	8c9c 0001 8c10 0001 8cc0 0001               ............

00018c10 <typeinfo name for __cxxabiv1::__class_type_info>:
   18c10:	314e 5f30 635f 7878 6261 7669 3131 5f37     N10__cxxabiv117_
   18c20:	635f 616c 7373 745f 7079 5f65 6e69 6f66     _class_type_info
   18c30:	0045 0000                                   E...

00018c34 <vtable for __cxxabiv1::__class_type_info>:
   18c34:	0000 0000 8c04 0001 3001 0000 3015 0000     .........0...0..
   18c44:	321d 0000 321d 0000 3091 0000 2fc1 0000     .2...2...0.../..
   18c54:	3075 0000 3031 0000 2ff5 0000               u0..10.../..

00018c60 <typeinfo for __cxxabiv1::__si_class_type_info>:
   18c60:	8c9c 0001 8c6c 0001 8c04 0001               ....l.......

00018c6c <typeinfo name for __cxxabiv1::__si_class_type_info>:
   18c6c:	314e 5f30 635f 7878 6261 7669 3231 5f30     N10__cxxabiv120_
   18c7c:	735f 5f69 6c63 7361 5f73 7974 6570 695f     _si_class_type_i
   18c8c:	666e 456f 0000 0000                         nfoE....

00018c94 <vtable for __cxxabiv1::__si_class_type_info>:
   18c94:	0000 0000 8c60 0001 30fd 0000 3111 0000     ....`....0...1..
   18ca4:	321d 0000 321d 0000 3091 0000 2fc1 0000     .2...2...0.../..
   18cb4:	31ed 0000 3169 0000 312d 0000               .1..i1..-1..

00018cc0 <typeinfo for std::type_info>:
   18cc0:	8c3c 0001 8cc8 0001                         <.......

00018cc8 <typeinfo name for std::type_info>:
   18cc8:	7453 7439 7079 5f65 6e69 6f66 0000 0000     St9type_info....

00018cd8 <vtable for std::type_info>:
   18cd8:	0000 0000 8cc0 0001 3219 0000 3225 0000     .........2..%2..
   18ce8:	321d 0000 321d 0000 3235 0000 3221 0000     .2...2..52..!2..
   18cf8:	7473 3a64 623a 6461 615f 6c6c 636f 0000     std::bad_alloc..

00018d08 <typeinfo for std::bad_alloc>:
   18d08:	8c9c 0001 8d14 0001 8d78 0001               ........x...

00018d14 <typeinfo name for std::bad_alloc>:
   18d14:	7453 6239 6461 615f 6c6c 636f 0000 0000     St9bad_alloc....

00018d24 <vtable for std::bad_alloc>:
   18d24:	0000 0000 8d08 0001 3295 0000 32a9 0000     .........2...2..
   18d34:	328d 0000 7473 3a64 653a 6378 7065 6974     .2..std::excepti
   18d44:	6e6f 0000 7473 3a64 623a 6461 655f 6378     on..std::bad_exc
   18d54:	7065 6974 6e6f 0000                         eption..

00018d5c <typeinfo for __cxxabiv1::__forced_unwind>:
   18d5c:	8c3c 0001 8d80 0001                         <.......

00018d64 <typeinfo for __cxxabiv1::__foreign_exception>:
   18d64:	8c3c 0001 8da0 0001                         <.......

00018d6c <typeinfo for std::bad_exception>:
   18d6c:	8c9c 0001 8dc4 0001 8d78 0001               ........x...

00018d78 <typeinfo for std::exception>:
   18d78:	8c3c 0001 8dd8 0001                         <.......

00018d80 <typeinfo name for __cxxabiv1::__forced_unwind>:
   18d80:	314e 5f30 635f 7878 6261 7669 3131 5f35     N10__cxxabiv115_
   18d90:	665f 726f 6563 5f64 6e75 6977 646e 0045     _forced_unwindE.

00018da0 <typeinfo name for __cxxabiv1::__foreign_exception>:
   18da0:	314e 5f30 635f 7878 6261 7669 3131 5f39     N10__cxxabiv119_
   18db0:	665f 726f 6965 6e67 655f 6378 7065 6974     _foreign_excepti
   18dc0:	6e6f 0045                                   onE.

00018dc4 <typeinfo name for std::bad_exception>:
   18dc4:	7453 3331 6162 5f64 7865 6563 7470 6f69     St13bad_exceptio
   18dd4:	006e 0000                                   n...

00018dd8 <typeinfo name for std::exception>:
   18dd8:	7453 6539 6378 7065 6974 6e6f 0000 0000     St9exception....

00018de8 <vtable for __cxxabiv1::__forced_unwind>:
   18de8:	0000 0000 8d5c 0001 0000 0000 0000 0000     ....\...........
   18df8:	3729 0000                                   )7..

00018dfc <vtable for __cxxabiv1::__foreign_exception>:
   18dfc:	0000 0000 8d64 0001 0000 0000 0000 0000     ....d...........
   18e0c:	3729 0000                                   )7..

00018e10 <vtable for std::bad_exception>:
   18e10:	0000 0000 8d6c 0001 3489 0000 34ad 0000     ....l....4...4..
   18e20:	3495 0000                                   .4..

00018e24 <vtable for std::exception>:
   18e24:	0000 0000 8d78 0001 3485 0000 349d 0000     ....x....4...4..
   18e34:	348d 0000                                   .4..

00018e38 <std::nothrow>:
   18e38:	0000 0000 7570 6572 7620 7269 7574 6c61     ....pure virtual
   18e48:	6d20 7465 6f68 2064 6163 6c6c 6465 000a      method called..
   18e58:	6564 656c 6574 2064 6976 7472 6175 206c     deleted virtual 
   18e68:	656d 6874 646f 6320 6c61 656c 0a64 0000     method called...
   18e78:	6574 6d72 6e69 7461 2065 6163 6c6c 6465     terminate called
   18e88:	7220 6365 7275 6973 6576 796c 000a 0000      recursively....
   18e98:	6574 6d72 6e69 7461 2065 6163 6c6c 6465     terminate called
   18ea8:	6120 7466 7265 7420 7268 776f 6e69 2067      after throwing 
   18eb8:	6e61 6920 736e 6174 636e 2065 666f 2720     an instance of '
   18ec8:	0000 0000 0a27 0000 6574 6d72 6e69 7461     ....'...terminat
   18ed8:	2065 6163 6c6c 6465 7720 7469 6f68 7475     e called without
   18ee8:	6120 206e 6361 6974 6576 6520 6378 7065      an active excep
   18ef8:	6974 6e6f 000a 0000 2020 6877 7461 2928     tion....  what()
   18f08:	203a 0020 6425 0000 475f 4f4c 4142 5f4c     :  .%d.._GLOBAL_
   18f18:	0000 0000 6128 6f6e 796e 6f6d 7375 6e20     ....(anonymous n
   18f28:	6d61 7365 6170 6563 0029 0000 7561 6f74     amespace)...auto
   18f38:	0000 0000 6564 6c63 7974 6570 6128 7475     ....decltype(aut
   18f48:	296f 0000 7473 6972 676e 6c20 7469 7265     o)..string liter
   18f58:	6c61 0000 7473 0064 6564 6c63 7974 6570     al..std.decltype
   18f68:	6e28 6c75 706c 7274 0029 0000 615b 6962     (nullptr)...[abi
   18f78:	003a 0000 3a3a 0000 647b 6665 7561 746c     :...::..{default
   18f88:	6120 6772 0023 0000 3a7d 003a 7561 6f74      arg#...}::.auto
   18f98:	003a 0000 6574 706d 616c 6574 7020 7261     :...template par
   18fa8:	6d61 7465 7265 6f20 6a62 6365 2074 6f66     ameter object fo
   18fb8:	2072 0000 7476 6261 656c 6620 726f 0020     r ..vtable for .
   18fc8:	5456 2054 6f66 2072 0000 0000 6f63 736e     VTT for ....cons
   18fd8:	7274 6375 6974 6e6f 7620 6174 6c62 2065     truction vtable 
   18fe8:	6f66 2072 0000 0000 692d 2d6e 0000 0000     for ....-in-....
   18ff8:	7974 6570 6e69 6f66 6620 726f 0020 0000     typeinfo for ...
   19008:	7974 6570 6e69 6f66 6e20 6d61 2065 6f66     typeinfo name fo
   19018:	2072 0000 7974 6570 6e69 6f66 6620 206e     r ..typeinfo fn 
   19028:	6f66 2072 0000 0000 6f6e 2d6e 6976 7472     for ....non-virt
   19038:	6175 206c 6874 6e75 206b 6f74 0020 0000     ual thunk to ...
   19048:	6f63 6176 6972 6e61 2074 6572 7574 6e72     covariant return
   19058:	7420 7568 6b6e 7420 206f 0000 616a 6176      thunk to ..java
   19068:	4320 616c 7373 6620 726f 0020 7567 7261      Class for .guar
   19078:	2064 6176 6972 6261 656c 6620 726f 0020     d variable for .
   19088:	4c54 2053 6e69 7469 6620 6e75 7463 6f69     TLS init functio
   19098:	206e 6f66 2072 0000 4c54 2053 7277 7061     n for ..TLS wrap
   190a8:	6570 2072 7566 636e 6974 6e6f 6620 726f     per function for
   190b8:	0020 0000 6572 6566 6572 636e 2065 6574      ...reference te
   190c8:	706d 726f 7261 2079 0023 0000 6968 6464     mporary #...hidd
   190d8:	6e65 6120 696c 7361 6620 726f 0020 0000     en alias for ...
   190e8:	6f6e 2d6e 7274 6e61 6173 7463 6f69 206e     non-transaction 
   190f8:	6c63 6e6f 2065 6f66 2072 0000 535f 7461     clone for .._Sat
   19108:	0020 0000 465f 6172 7463 0000 415f 6363      ..._Fract.._Acc
   19118:	6d75 0000 202c 0000 706f 7265 7461 726f     um.., ..operator
   19128:	0000 0000 706f 7265 7461 726f 0020 0000     ....operator ...
   19138:	283e 0000 7571 0000 3a20 0020 656e 2077     >(..qu.. : .new 
   19148:	0000 0000 6c75 0000 6c6c 0000 6c75 006c     ....ul..ll..ull.
   19158:	6166 736c 0065 0000 7274 6575 0000 0000     false...true....
   19168:	616a 6176 7220 7365 756f 6372 2065 0000     java resource ..
   19178:	6564 6c63 7974 6570 2820 0000 2e2e 002e     decltype (......
   19188:	6874 7369 0000 0000 707b 7261 236d 0000     this....{parm#..
   19198:	6c67 626f 6c61 6320 6e6f 7473 7572 7463     global construct
   191a8:	726f 2073 656b 6579 2064 6f74 0020 0000     ors keyed to ...
   191b8:	6c67 626f 6c61 6420 7365 7274 6375 6f74     global destructo
   191c8:	7372 6b20 7965 6465 7420 206f 0000 0000     rs keyed to ....
   191d8:	6c7b 6d61 6462 2861 0000 0000 2329 0000     {lambda(....)#..
   191e8:	757b 6e6e 6d61 6465 7420 7079 2365 0000     {unnamed type#..
   191f8:	5b20 6c63 6e6f 2065 0000 0000 7220 7365      [clone .... res
   19208:	7274 6369 0074 0000 7620 6c6f 7461 6c69     trict... volatil
   19218:	0065 0000 6320 6e6f 7473 0000 7420 6172     e... const.. tra
   19228:	736e 6361 6974 6e6f 735f 6661 0065 0000     nsaction_safe...
   19238:	6e20 656f 6378 7065 0074 0000 7420 7268      noexcept... thr
   19248:	776f 0000 2626 0000 5f20 6f43 706d 656c     ow..&&.. _Comple
   19258:	0078 0000 5f20 6d49 6761 6e69 7261 0079     x... _Imaginary.
   19268:	3a3a 002a 5f20 765f 6365 6f74 2872 0000     ::*. __vector(..
   19278:	2e28 2e2e 0000 0000 2e2e 292e 0000 0000     (..........)....
   19288:	7473 3a64 613a 6c6c 636f 7461 726f 0000     std::allocator..
   19298:	6c61 6f6c 6163 6f74 0072 0000 7473 3a64     allocator...std:
   192a8:	623a 7361 6369 735f 7274 6e69 0067 0000     :basic_string...
   192b8:	6162 6973 5f63 7473 6972 676e 0000 0000     basic_string....
   192c8:	7473 3a64 733a 7274 6e69 0067 7473 3a64     std::string.std:
   192d8:	623a 7361 6369 735f 7274 6e69 3c67 6863     :basic_string<ch
   192e8:	7261 202c 7473 3a64 633a 6168 5f72 7274     ar, std::char_tr
   192f8:	6961 7374 633c 6168 3e72 202c 7473 3a64     aits<char>, std:
   19308:	613a 6c6c 636f 7461 726f 633c 6168 3e72     :allocator<char>
   19318:	3e20 0000 7473 3a64 693a 7473 6572 6d61      >..std::istream
   19328:	0000 0000 7473 3a64 623a 7361 6369 695f     ....std::basic_i
   19338:	7473 6572 6d61 633c 6168 2c72 7320 6474     stream<char, std
   19348:	3a3a 6863 7261 745f 6172 7469 3c73 6863     ::char_traits<ch
   19358:	7261 203e 003e 0000 6162 6973 5f63 7369     ar> >...basic_is
   19368:	7274 6165 006d 0000 7473 3a64 6f3a 7473     tream...std::ost
   19378:	6572 6d61 0000 0000 7473 3a64 623a 7361     ream....std::bas
   19388:	6369 6f5f 7473 6572 6d61 633c 6168 2c72     ic_ostream<char,
   19398:	7320 6474 3a3a 6863 7261 745f 6172 7469      std::char_trait
   193a8:	3c73 6863 7261 203e 003e 0000 6162 6973     s<char> >...basi
   193b8:	5f63 736f 7274 6165 006d 0000 7473 3a64     c_ostream...std:
   193c8:	693a 736f 7274 6165 006d 0000 7473 3a64     :iostream...std:
   193d8:	623a 7361 6369 695f 736f 7274 6165 3c6d     :basic_iostream<
   193e8:	6863 7261 202c 7473 3a64 633a 6168 5f72     char, std::char_
   193f8:	7274 6961 7374 633c 6168 3e72 3e20 0000     traits<char> >..
   19408:	6162 6973 5f63 6f69 7473 6572 6d61 0000     basic_iostream..
   19418:	4e61 0000 3d26 0000 5361 0000 003d 0000     aN..&=..aS..=...
   19428:	6161 0000 6461 0000 0026 0000 6e61 0000     aa..ad..&...an..
   19438:	7461 0000 6c61 6769 6f6e 2066 0000 0000     at..alignof ....
   19448:	7761 0000 6f63 615f 6177 7469 0020 0000     aw..co_await ...
   19458:	7a61 0000 6363 0000 6f63 736e 5f74 6163     az..cc..const_ca
   19468:	7473 0000 6c63 0000 2928 0000 6d63 0000     st..cl..()..cm..
   19478:	002c 0000 6f63 0000 007e 0000 5664 0000     ,...co..~...dV..
   19488:	3d2f 0000 6164 0000 6564 656c 6574 5d5b     /=..da..delete[]
   19498:	0020 0000 6364 0000 7964 616e 696d 5f63      ...dc..dynamic_
   194a8:	6163 7473 0000 0000 6564 0000 002a 0000     cast....de..*...
   194b8:	6c64 0000 6564 656c 6574 0020 7364 0000     dl..delete .ds..
   194c8:	2a2e 0000 7464 0000 7664 0000 002f 0000     .*..dt..dv../...
   194d8:	4f65 0000 3d5e 0000 6f65 0000 005e 0000     eO..^=..eo..^...
   194e8:	7165 0000 3d3d 0000 4c66 0000 5266 0000     eq..==..fL..fR..
   194f8:	6c66 0000 7266 0000 6567 0000 3d3e 0000     fl..fr..ge..>=..
   19508:	7367 0000 7467 0000 7869 0000 5d5b 0000     gs..gt..ix..[]..
   19518:	536c 0000 3c3c 003d 3d3c 0000 696c 0000     lS..<<=.<=..li..
   19528:	706f 7265 7461 726f 2222 0020 736c 0000     operator"" .ls..
   19538:	3c3c 0000 746c 0000 003c 0000 496d 0000     <<..lt..<...mI..
   19548:	3d2d 0000 4c6d 0000 3d2a 0000 696d 0000     -=..mL..*=..mi..
   19558:	002d 0000 6c6d 0000 6d6d 0000 2d2d 0000     -...ml..mm..--..
   19568:	616e 0000 656e 5b77 005d 0000 656e 0000     na..new[]...ne..
   19578:	3d21 0000 746e 0000 0021 0000 776e 0000     !=..nt..!...nw..
   19588:	656e 0077 526f 0000 3d7c 0000 6f6f 0000     new.oR..|=..oo..
   19598:	7c7c 0000 007c 0000 4c70 0000 3d2b 0000     ||..|...pL..+=..
   195a8:	6c70 0000 002b 0000 6d70 0000 3e2d 002a     pl..+...pm..->*.
   195b8:	7070 0000 2b2b 0000 7370 0000 7470 0000     pp..++..ps..pt..
   195c8:	3e2d 0000 003f 0000 4d72 0000 3d25 0000     ->..?...rM..%=..
   195d8:	5372 0000 3e3e 003d 6372 0000 6572 6e69     rS..>>=.rc..rein
   195e8:	6574 7072 6572 5f74 6163 7473 0000 0000     terpret_cast....
   195f8:	6d72 0000 0025 0000 7372 0000 3e3e 0000     rm..%...rs..>>..
   19608:	5073 0000 6973 657a 666f 2e2e 002e 0000     sP..sizeof......
   19618:	5a73 0000 6373 0000 7473 7461 6369 635f     sZ..sc..static_c
   19628:	7361 0074 7373 0000 3d3c 003e 6973 657a     ast.ss..<=>.size
   19638:	666f 0020 7a73 0000 7274 0000 6874 6f72     of .sz..tr..thro
   19648:	0077 0000 7774 0000 6874 6f72 2077 0000     w...tw..throw ..
   19658:	6973 6e67 6465 6320 6168 0072 6f62 6c6f     signed char.bool
   19668:	0000 0000 6f62 6c6f 6165 006e 6863 7261     ....boolean.char
   19678:	0000 0000 7962 6574 0000 0000 6f64 6275     ....byte....doub
   19688:	656c 0000 6f6c 676e 6420 756f 6c62 0065     le..long double.
   19698:	6c66 616f 0074 0000 5f5f 6c66 616f 3174     float...__float1
   196a8:	3832 0000 6e75 6973 6e67 6465 6320 6168     28..unsigned cha
   196b8:	0072 0000 6e69 0074 6e75 6973 6e67 6465     r...int.unsigned
   196c8:	6920 746e 0000 0000 6e75 6973 6e67 6465      int....unsigned
   196d8:	0000 0000 6f6c 676e 0000 0000 6e75 6973     ....long....unsi
   196e8:	6e67 6465 6c20 6e6f 0067 0000 5f5f 6e69     gned long...__in
   196f8:	3174 3832 0000 0000 6e75 6973 6e67 6465     t128....unsigned
   19708:	5f20 695f 746e 3231 0038 0000 6873 726f      __int128...shor
   19718:	0074 0000 6e75 6973 6e67 6465 7320 6f68     t...unsigned sho
   19728:	7472 0000 6f76 6469 0000 0000 6377 6168     rt..void....wcha
   19738:	5f72 0074 6f6c 676e 6c20 6e6f 0067 0000     r_t.long long...
   19748:	6e75 6973 6e67 6465 6c20 6e6f 2067 6f6c     unsigned long lo
   19758:	676e 0000 6564 6963 616d 336c 0032 0000     ng..decimal32...
   19768:	6564 6963 616d 366c 0034 0000 6564 6963     decimal64...deci
   19778:	616d 316c 3832 0000 6168 666c 0000 0000     mal128..half....
   19788:	6863 7261 5f38 0074 6863 7261 3631 745f     char8_t.char16_t
   19798:	0000 0000 6863 7261 3233 745f 0000 0000     ....char32_t....

000197a8 <standard_subs>:
   197a8:	0074 0000 8f5c 0001 0003 0000 8f5c 0001     t...\.......\...
   197b8:	0003 0000 0000 0000 0000 0000 0061 0000     ............a...
   197c8:	9288 0001 000e 0000 9288 0001 000e 0000     ................
   197d8:	9298 0001 0009 0000 0062 0000 92a4 0001     ........b.......
   197e8:	0011 0000 92a4 0001 0011 0000 92b8 0001     ................
   197f8:	000c 0000 0073 0000 92c8 0001 000b 0000     ....s...........
   19808:	92d4 0001 0046 0000 92b8 0001 000c 0000     ....F...........
   19818:	0069 0000 931c 0001 000c 0000 932c 0001     i...........,...
   19828:	0031 0000 9360 0001 000d 0000 006f 0000     1...`.......o...
   19838:	9370 0001 000c 0000 9380 0001 0031 0000     p...........1...
   19848:	93b4 0001 000d 0000 0064 0000 93c4 0001     ........d.......
   19858:	000d 0000 93d4 0001 0032 0000 9408 0001     ........2.......
   19868:	000e 0000                                   ....

0001986c <cplus_demangle_builtin_types>:
   1986c:	9658 0001 000b 0000 9658 0001 000b 0000     X.......X.......
   1987c:	0000 0000 9664 0001 0004 0000 966c 0001     ....d.......l...
   1988c:	0007 0000 0007 0000 9674 0001 0004 0000     ........t.......
   1989c:	967c 0001 0004 0000 0000 0000 9684 0001     |...............
   198ac:	0006 0000 9684 0001 0006 0000 0008 0000     ................
   198bc:	968c 0001 000b 0000 968c 0001 000b 0000     ................
   198cc:	0008 0000 9698 0001 0005 0000 9698 0001     ................
   198dc:	0005 0000 0008 0000 96a0 0001 000a 0000     ................
   198ec:	96a0 0001 000a 0000 0008 0000 96ac 0001     ................
   198fc:	000d 0000 96ac 0001 000d 0000 0000 0000     ................
   1990c:	96bc 0001 0003 0000 96bc 0001 0003 0000     ................
   1991c:	0001 0000 96c0 0001 000c 0000 96d0 0001     ................
   1992c:	0008 0000 0002 0000 0000 0000 0000 0000     ................
	...
   19948:	96dc 0001 0004 0000 96dc 0001 0004 0000     ................
   19958:	0003 0000 96e4 0001 000d 0000 96e4 0001     ................
   19968:	000d 0000 0004 0000 96f4 0001 0008 0000     ................
   19978:	96f4 0001 0008 0000 0000 0000 9700 0001     ................
   19988:	0011 0000 9700 0001 0011 0000 0000 0000     ................
	...
   199d4:	9714 0001 0005 0000 9714 0001 0005 0000     ................
   199e4:	0000 0000 971c 0001 000e 0000 971c 0001     ................
   199f4:	000e 0000 0000 0000 0000 0000 0000 0000     ................
	...
   19a10:	972c 0001 0004 0000 972c 0001 0004 0000     ,.......,.......
   19a20:	0009 0000 9734 0001 0007 0000 9674 0001     ....4.......t...
   19a30:	0004 0000 0000 0000 973c 0001 0009 0000     ........<.......
   19a40:	96dc 0001 0004 0000 0005 0000 9748 0001     ............H...
   19a50:	0012 0000 9748 0001 0012 0000 0006 0000     ....H...........
   19a60:	9184 0001 0003 0000 9184 0001 0003 0000     ................
   19a70:	0000 0000 975c 0001 0009 0000 975c 0001     ....\.......\...
   19a80:	0009 0000 0000 0000 9768 0001 0009 0000     ........h.......
   19a90:	9768 0001 0009 0000 0000 0000 9774 0001     h...........t...
   19aa0:	000a 0000 9774 0001 000a 0000 0000 0000     ....t...........
   19ab0:	9780 0001 0004 0000 9780 0001 0004 0000     ................
   19ac0:	0008 0000 9788 0001 0007 0000 9788 0001     ................
   19ad0:	0007 0000 0000 0000 9790 0001 0008 0000     ................
   19ae0:	9790 0001 0008 0000 0000 0000 979c 0001     ................
   19af0:	0008 0000 979c 0001 0008 0000 0000 0000     ................
   19b00:	8f60 0001 0011 0000 8f60 0001 0011 0000     `.......`.......
   19b10:	0000 0000                                   ....

00019b14 <cplus_demangle_operators>:
   19b14:	9418 0001 941c 0001 0002 0000 0002 0000     ................
   19b24:	9420 0001 9424 0001 0001 0000 0002 0000      ...$...........
   19b34:	9428 0001 924c 0001 0002 0000 0002 0000     (...L...........
   19b44:	942c 0001 9430 0001 0001 0000 0001 0000     ,...0...........
   19b54:	9434 0001 9430 0001 0001 0000 0002 0000     4...0...........
   19b64:	9438 0001 943c 0001 0008 0000 0001 0000     8...<...........
   19b74:	9448 0001 944c 0001 0009 0000 0001 0000     H...L...........
   19b84:	9458 0001 943c 0001 0008 0000 0001 0000     X...<...........
   19b94:	945c 0001 9460 0001 000a 0000 0002 0000     \...`...........
   19ba4:	946c 0001 9470 0001 0002 0000 0002 0000     l...p...........
   19bb4:	9474 0001 9478 0001 0001 0000 0002 0000     t...x...........
   19bc4:	947c 0001 9480 0001 0001 0000 0001 0000     |...............
   19bd4:	9484 0001 9488 0001 0002 0000 0002 0000     ................
   19be4:	948c 0001 9490 0001 0009 0000 0001 0000     ................
   19bf4:	949c 0001 94a0 0001 000c 0000 0002 0000     ................
   19c04:	94b0 0001 94b4 0001 0001 0000 0001 0000     ................
   19c14:	94b8 0001 94bc 0001 0007 0000 0001 0000     ................
   19c24:	94c4 0001 94c8 0001 0002 0000 0002 0000     ................
   19c34:	94cc 0001 9614 0001 0001 0000 0002 0000     ................
   19c44:	94d0 0001 94d4 0001 0001 0000 0002 0000     ................
   19c54:	94d8 0001 94dc 0001 0002 0000 0002 0000     ................
   19c64:	94e0 0001 94e4 0001 0001 0000 0002 0000     ................
   19c74:	94e8 0001 94ec 0001 0002 0000 0002 0000     ................
   19c84:	94f0 0001 9184 0001 0003 0000 0003 0000     ................
   19c94:	94f4 0001 9184 0001 0003 0000 0003 0000     ................
   19ca4:	94f8 0001 9184 0001 0003 0000 0002 0000     ................
   19cb4:	94fc 0001 9184 0001 0003 0000 0002 0000     ................
   19cc4:	9500 0001 9504 0001 0002 0000 0002 0000     ................
   19cd4:	9508 0001 8f7c 0001 0002 0000 0001 0000     ....|...........
   19ce4:	950c 0001 935c 0001 0001 0000 0002 0000     ....\...........
   19cf4:	9510 0001 9514 0001 0002 0000 0002 0000     ................
   19d04:	9518 0001 951c 0001 0003 0000 0002 0000     ................
   19d14:	9688 0001 9520 0001 0002 0000 0002 0000     .... ...........
   19d24:	9524 0001 9528 0001 000b 0000 0001 0000     $...(...........
   19d34:	9534 0001 9538 0001 0002 0000 0002 0000     4...8...........
   19d44:	953c 0001 9540 0001 0001 0000 0002 0000     <...@...........
   19d54:	9544 0001 9548 0001 0002 0000 0002 0000     D...H...........
   19d64:	954c 0001 9550 0001 0002 0000 0002 0000     L...P...........
   19d74:	9554 0001 9558 0001 0001 0000 0002 0000     T...X...........
   19d84:	955c 0001 94b4 0001 0001 0000 0002 0000     \...............
   19d94:	9560 0001 9564 0001 0002 0000 0001 0000     `...d...........
   19da4:	9568 0001 956c 0001 0005 0000 0003 0000     h...l...........
   19db4:	9574 0001 9578 0001 0002 0000 0002 0000     t...x...........
   19dc4:	9758 0001 9558 0001 0001 0000 0001 0000     X...X...........
   19dd4:	957c 0001 9580 0001 0001 0000 0001 0000     |...............
   19de4:	9584 0001 9588 0001 0003 0000 0003 0000     ................
   19df4:	958c 0001 9590 0001 0002 0000 0002 0000     ................
   19e04:	9594 0001 9598 0001 0002 0000 0002 0000     ................
   19e14:	9294 0001 959c 0001 0001 0000 0002 0000     ................
   19e24:	95a0 0001 95a4 0001 0002 0000 0002 0000     ................
   19e34:	95a8 0001 95ac 0001 0001 0000 0002 0000     ................
   19e44:	95b0 0001 95b4 0001 0003 0000 0002 0000     ................
   19e54:	95b8 0001 95bc 0001 0002 0000 0001 0000     ................
   19e64:	95c0 0001 95ac 0001 0001 0000 0001 0000     ................
   19e74:	95c4 0001 95c8 0001 0002 0000 0002 0000     ................
   19e84:	913c 0001 95cc 0001 0001 0000 0003 0000     <...............
   19e94:	95d0 0001 95d4 0001 0002 0000 0002 0000     ................
   19ea4:	95d8 0001 95dc 0001 0003 0000 0002 0000     ................
   19eb4:	95e0 0001 95e4 0001 0010 0000 0002 0000     ................
   19ec4:	95f8 0001 95fc 0001 0001 0000 0002 0000     ................
   19ed4:	9600 0001 9604 0001 0002 0000 0002 0000     ................
   19ee4:	9608 0001 960c 0001 0009 0000 0001 0000     ................
   19ef4:	9618 0001 960c 0001 0009 0000 0001 0000     ................
   19f04:	961c 0001 9620 0001 000b 0000 0002 0000     .... ...........
   19f14:	962c 0001 9630 0001 0003 0000 0002 0000     ,...0...........
   19f24:	9468 0001 9634 0001 0007 0000 0001 0000     h...4...........
   19f34:	963c 0001 9634 0001 0007 0000 0001 0000     <...4...........
   19f44:	9640 0001 9644 0001 0005 0000 0000 0000     @...D...........
   19f54:	964c 0001 9650 0001 0006 0000 0001 0000     L...P...........
	...
   19f74:	202c 7566 636e 6974 6e6f 203a 0000 0000     , function: ....
   19f84:	7361 6573 7472 6f69 206e 2522 2273 6620     assertion "%s" f
   19f94:	6961 656c 3a64 6620 6c69 2065 2522 2273     ailed: file "%s"
   19fa4:	202c 696c 656e 2520 2564 2573 0a73 0000     , line %d%s%s...

00019fb4 <_global_impure_ptr>:
   19fb4:	0128 2000 4e49 0046 6e69 0066 414e 004e     (.. INF.inf.NAN.
   19fc4:	616e 006e 3130 3332 3534 3736 3938 6261     nan.0123456789ab
   19fd4:	6463 6665 0000 0000 3130 3332 3534 3736     cdef....01234567
   19fe4:	3938 4241 4443 4645 0000 0000 6e28 6c75     89ABCDEF....(nul
   19ff4:	296c 0000 0030 0000                         l)..0...

00019ffc <blanks.1>:
   19ffc:	2020 2020 2020 2020 2020 2020 2020 2020                     

0001a00c <zeroes.0>:
   1a00c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000

0001a01c <blanks.1>:
   1a01c:	2020 2020 2020 2020 2020 2020 2020 2020                     

0001a02c <zeroes.0>:
   1a02c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000

0001a03c <blanks.1>:
   1a03c:	2020 2020 2020 2020 2020 2020 2020 2020                     

0001a04c <zeroes.0>:
   1a04c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
   1a05c:	614e 004e 6e49 6966 696e 7974 0000 0000     NaN.Infinity....
   1a06c:	6142 6c6c 636f 7320 6375 6563 6465 6465     Balloc succeeded
   1a07c:	0000 0000 742f 706d 6a2f 6e65 696b 736e     ..../tmp/jenkins
   1a08c:	472d 4343 312d 2d30 6970 6570 696c 656e     -GCC-10-pipeline
   1a09c:	332d 3833 325f 3230 3131 3130 5f38 3631     -338_20211018_16
   1a0ac:	3433 3135 3136 3539 732f 6372 6e2f 7765     34516195/src/new
   1a0bc:	696c 2f62 656e 6c77 6269 6c2f 6269 2f63     lib/newlib/libc/
   1a0cc:	7473 6c64 6269 642f 6f74 2e61 0063 0000     stdlib/dtoa.c...
   1a0dc:	0043 0000 4f50 4953 0058 0000 742f 706d     C...POSIX.../tmp
   1a0ec:	6a2f 6e65 696b 736e 472d 4343 312d 2d30     /jenkins-GCC-10-
   1a0fc:	6970 6570 696c 656e 332d 3833 325f 3230     pipeline-338_202
   1a10c:	3131 3130 5f38 3631 3433 3135 3136 3539     11018_1634516195
   1a11c:	732f 6372 6e2f 7765 696c 2f62 656e 6c77     /src/newlib/newl
   1a12c:	6269 6c2f 6269 2f63 7473 6c64 6269 6d2f     ib/libc/stdlib/m
   1a13c:	7270 6365 632e 0000 0000 0000               prec.c......

0001a148 <__mprec_bigtens>:
   1a148:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
   1a158:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
   1a168:	bf3c 7f73 4fdd 7515                         <.s..O.u

0001a170 <__mprec_tens>:
   1a170:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
   1a180:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
   1a190:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
   1a1a0:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
   1a1b0:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
   1a1c0:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
   1a1d0:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
   1a1e0:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
   1a1f0:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
   1a200:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
   1a210:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
   1a220:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
   1a230:	9db4 79d9 7843 44ea                         ...yCx.D

0001a238 <__mprec_tinytens>:
   1a238:	89bc 97d8 d2b2 3c9c a733 d5a8 f623 3949     .......<3...#.I9
   1a248:	a73d 44f4 0ffd 32a5 979d cf8c ba08 255b     =..D...2......[%
   1a258:	6f43 64ac 0628 0ac8                         Co.d(...

0001a260 <p05.0>:
   1a260:	0005 0000 0019 0000 007d 0000               ........}...

0001a26c <blanks.1>:
   1a26c:	2020 2020 2020 2020 2020 2020 2020 2020                     

0001a27c <zeroes.0>:
   1a27c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000

0001a28c <_ctype_>:
   1a28c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
   1a29c:	2020 2020 2020 2020 2020 2020 2020 2020                     
   1a2ac:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
   1a2bc:	0410 0404 0404 0404 0404 1004 1010 1010     ................
   1a2cc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
   1a2dc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
   1a2ec:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
   1a2fc:	0202 0202 0202 0202 0202 0202 1010 1010     ................
   1a30c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
   1a390:	733a 6d65 6869 736f 6974 676e 662d 6165     :semihosting-fea
   1a3a0:	7574 6572 0073 0000 743a 0074               tures...:tt.

0001a3ac <all_implied_fbits>:
   1a3ac:	2702 2705 2707 272f 2731 270d 272b 2711     .'.'.'/'1'.'+'.'
   1a3bc:	2710 271a 2738 2714 273b 2723 271f 273a     .'.'8'.';'#'.':'
   1a3cc:	2726 0000                                   &'..

0001a3d0 <__EH_FRAME_BEGIN__>:
   1a3d0:	0000 0000                                   ....
